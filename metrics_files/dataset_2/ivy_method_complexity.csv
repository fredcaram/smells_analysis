Method,ev(G),iv(G),v(G)
"console.Main.error(String)",1,1,1
"console.Main.help()",1,1,1
"console.Main.main(String[])",5,5,6
"depending.Main.main(String[])",1,2,2
"example.ConfigurationsExample.main(String[])",1,5,5
"example.Hello.main(String[])",1,1,1
"filter.AbstractTestFilter.testFilter()",1,1,1
"filter.AbstractTestFilter.testFilterNull()",1,1,2
"filter.AbstractTestFilter.testFilterNullPrefix()",1,1,2
"filter.AbstractTestFilter.testFilterNullValues()",1,1,2
"filter.AbstractTestFilter.testFilterWithNullValues()",1,1,1
"filter.FilterProvider.getFilter()",1,3,3
"filter.ccimpl.CCFilter.filter(String[],String)",3,2,4
"filter.ccimpl.CCFilterTest.getIFilter()",1,1,1
"filter.hmimpl.HMFilter.filter(String[],String)",3,4,6
"filter.hmimpl.HMFilterTest.getIFilter()",1,1,1
"find.FindFile.find(Collection,String)",1,1,1
"find.FindFile.find(File,String)",1,1,1
"find.Main.getOptions()",1,1,1
"find.Main.main(String[])",1,3,3
"fr.jayasoft.ivy.AbstractArtifact.AbstractArtifact()",1,1,1
"fr.jayasoft.ivy.AbstractArtifact.equals(Object)",2,7,8
"fr.jayasoft.ivy.AbstractArtifact.getAttribute(String)",1,1,1
"fr.jayasoft.ivy.AbstractArtifact.getAttributes()",1,1,1
"fr.jayasoft.ivy.AbstractArtifact.getExtraAttribute(String)",1,1,1
"fr.jayasoft.ivy.AbstractArtifact.getExtraAttributes()",1,1,1
"fr.jayasoft.ivy.AbstractArtifact.getStandardAttribute(String)",1,1,1
"fr.jayasoft.ivy.AbstractArtifact.getStandardAttributes()",1,1,1
"fr.jayasoft.ivy.AbstractArtifact.hashCode()",1,2,2
"fr.jayasoft.ivy.AbstractArtifact.toString()",1,1,1
"fr.jayasoft.ivy.ArtifactId.ArtifactId(ModuleId,String,String,String)",1,1,1
"fr.jayasoft.ivy.ArtifactId.equals(Object)",2,4,5
"fr.jayasoft.ivy.ArtifactId.getExt()",1,1,1
"fr.jayasoft.ivy.ArtifactId.getModuleId()",1,1,1
"fr.jayasoft.ivy.ArtifactId.getName()",1,1,1
"fr.jayasoft.ivy.ArtifactId.getType()",1,1,1
"fr.jayasoft.ivy.ArtifactId.hashCode()",1,1,1
"fr.jayasoft.ivy.ArtifactId.toString()",1,1,1
"fr.jayasoft.ivy.ArtifactOrigin.ArtifactOrigin(boolean,String)",1,1,1
"fr.jayasoft.ivy.ArtifactOrigin.getLocation()",1,1,1
"fr.jayasoft.ivy.ArtifactOrigin.isLocal()",1,1,1
"fr.jayasoft.ivy.ArtifactRevisionId.ArtifactRevisionId(ArtifactId,ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.ArtifactRevisionId.ArtifactRevisionId(ArtifactId,ModuleRevisionId,Map)",1,1,1
"fr.jayasoft.ivy.ArtifactRevisionId.equals(Object)",2,3,4
"fr.jayasoft.ivy.ArtifactRevisionId.getArtifactId()",1,1,1
"fr.jayasoft.ivy.ArtifactRevisionId.getExt()",1,1,1
"fr.jayasoft.ivy.ArtifactRevisionId.getModuleRevisionId()",1,1,1
"fr.jayasoft.ivy.ArtifactRevisionId.getName()",1,1,1
"fr.jayasoft.ivy.ArtifactRevisionId.getRevision()",1,1,1
"fr.jayasoft.ivy.ArtifactRevisionId.getType()",1,1,1
"fr.jayasoft.ivy.ArtifactRevisionId.hashCode()",1,1,1
"fr.jayasoft.ivy.ArtifactRevisionId.newInstance(ModuleRevisionId,String,String,String)",1,1,1
"fr.jayasoft.ivy.ArtifactRevisionId.newInstance(ModuleRevisionId,String,String,String,Map)",1,1,1
"fr.jayasoft.ivy.ArtifactRevisionId.toString()",1,1,1
"fr.jayasoft.ivy.Configuration.Configuration(String)",1,1,1
"fr.jayasoft.ivy.Configuration.Configuration(String,Visibility,String,String[])",1,1,1
"fr.jayasoft.ivy.Configuration.Configuration(String,Visibility,String,String[],boolean)",3,3,5
"fr.jayasoft.ivy.Configuration.Visibility.Visibility(String)",1,1,1
"fr.jayasoft.ivy.Configuration.Visibility.getVisibility(String)",3,2,3
"fr.jayasoft.ivy.Configuration.Visibility.toString()",1,1,1
"fr.jayasoft.ivy.Configuration.addOther(Configuration[],Visibility,Set)",1,5,5
"fr.jayasoft.ivy.Configuration.equals(Object)",2,1,2
"fr.jayasoft.ivy.Configuration.getDescription()",1,1,1
"fr.jayasoft.ivy.Configuration.getExtends()",1,1,1
"fr.jayasoft.ivy.Configuration.getName()",1,1,1
"fr.jayasoft.ivy.Configuration.getVisibility()",1,1,1
"fr.jayasoft.ivy.Configuration.hashCode()",1,1,1
"fr.jayasoft.ivy.Configuration.isTransitive()",1,1,1
"fr.jayasoft.ivy.Configuration.replaceWildcards(ModuleDescriptor)",2,5,6
"fr.jayasoft.ivy.Configuration.toString()",1,1,1
"fr.jayasoft.ivy.DefaultArtifact.DefaultArtifact(ModuleRevisionId,Date,String,String,String)",1,1,1
"fr.jayasoft.ivy.DefaultArtifact.DefaultArtifact(ModuleRevisionId,Date,String,String,String,Map)",1,1,1
"fr.jayasoft.ivy.DefaultArtifact.DefaultArtifact(ModuleRevisionId,Date,String,String,String,URL,Map)",5,1,6
"fr.jayasoft.ivy.DefaultArtifact.cloneWithAnotherMrid(Artifact,ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.DefaultArtifact.cloneWithAnotherType(Artifact,String)",1,1,1
"fr.jayasoft.ivy.DefaultArtifact.cloneWithAnotherTypeAndExt(Artifact,String,String)",1,1,1
"fr.jayasoft.ivy.DefaultArtifact.getConfigurations()",1,1,1
"fr.jayasoft.ivy.DefaultArtifact.getExt()",1,1,1
"fr.jayasoft.ivy.DefaultArtifact.getId()",1,1,1
"fr.jayasoft.ivy.DefaultArtifact.getModuleRevisionId()",1,1,1
"fr.jayasoft.ivy.DefaultArtifact.getName()",1,1,1
"fr.jayasoft.ivy.DefaultArtifact.getPublicationDate()",1,1,1
"fr.jayasoft.ivy.DefaultArtifact.getType()",1,1,1
"fr.jayasoft.ivy.DefaultArtifact.getUrl()",1,1,1
"fr.jayasoft.ivy.DefaultArtifact.newIvyArtifact(ModuleRevisionId,Date)",1,1,1
"fr.jayasoft.ivy.DefaultArtifact.newPomArtifact(ModuleRevisionId,Date)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyArtifactDescriptor.DefaultDependencyArtifactDescriptor(DefaultDependencyDescriptor,ArtifactId,boolean,PatternMatcher)",2,1,2
"fr.jayasoft.ivy.DefaultDependencyArtifactDescriptor.DefaultDependencyArtifactDescriptor(DefaultDependencyDescriptor,String,String,String,URL,boolean,PatternMatcher)",4,1,4
"fr.jayasoft.ivy.DefaultDependencyArtifactDescriptor.DefaultDependencyArtifactDescriptor(DefaultDependencyDescriptor,String,String,String,boolean,PatternMatcher)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyArtifactDescriptor.addConfiguration(String)",1,2,2
"fr.jayasoft.ivy.DefaultDependencyArtifactDescriptor.equals(Object)",2,1,2
"fr.jayasoft.ivy.DefaultDependencyArtifactDescriptor.getConfigurations()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyArtifactDescriptor.getDependency()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyArtifactDescriptor.getExt()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyArtifactDescriptor.getId()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyArtifactDescriptor.getMatcher()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyArtifactDescriptor.getName()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyArtifactDescriptor.getType()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyArtifactDescriptor.getUrl()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyArtifactDescriptor.hashCode()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyArtifactDescriptor.toString()",1,2,3
"fr.jayasoft.ivy.DefaultDependencyDescriptor.DefaultDependencyDescriptor()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.DefaultDependencyDescriptor(DependencyDescriptor,String)",1,2,2
"fr.jayasoft.ivy.DefaultDependencyDescriptor.DefaultDependencyDescriptor(ModuleDescriptor,ModuleRevisionId,boolean,boolean,boolean)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.DefaultDependencyDescriptor(ModuleRevisionId,boolean)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.DefaultDependencyDescriptor(ModuleRevisionId,boolean,boolean)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.addDependencyArtifactExcludes(String,DependencyArtifactDescriptor)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.addDependencyArtifactIncludes(String,DependencyArtifactDescriptor)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.addDependencyArtifacts(String,DependencyArtifactDescriptor,Map)",1,2,2
"fr.jayasoft.ivy.DefaultDependencyDescriptor.addDependencyConfiguration(String,String)",1,3,3
"fr.jayasoft.ivy.DefaultDependencyDescriptor.addExtends(String)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.asSystem()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.canExclude()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.doesExclude(String[],ArtifactId)",3,3,4
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getAllDependencyArtifacts(Map)",1,2,2
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getAllDependencyArtifactsExcludes()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getAllDependencyArtifactsIncludes()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getAttribute(String)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getAttributes()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getDependencyArtifacts(String,Map)",2,3,4
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getDependencyArtifactsExcludes(String)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getDependencyArtifactsExcludes(String[])",1,2,2
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getDependencyArtifactsIncludes(String)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getDependencyArtifactsIncludes(String[])",1,2,2
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getDependencyConfigurations(String)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getDependencyConfigurations(String,String)",2,9,10
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getDependencyConfigurations(String[])",2,2,3
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getDependencyId()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getDependencyRevisionId()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getExtraAttribute(String)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getExtraAttributes()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getModuleConfigurations()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getNamespace()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getParentRevisionId()",1,2,2
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getStandardAttribute(String)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.getStandardAttributes()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.isChanging()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.isForce()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.isTransitive()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.replaceFallbackConfigurationPattern(Pattern,String,String)",3,3,3
"fr.jayasoft.ivy.DefaultDependencyDescriptor.replaceSelfFallbackPattern(String,String)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.replaceThisFallbackPattern(String,String)",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.toString()",1,1,1
"fr.jayasoft.ivy.DefaultDependencyDescriptor.transformInstance(DependencyDescriptor,Namespace)",2,1,2
"fr.jayasoft.ivy.DefaultDependencyDescriptor.transformInstance(DependencyDescriptor,NamespaceTransformer,boolean)",3,4,6
"fr.jayasoft.ivy.DefaultModuleDescriptor.DefaultModuleDescriptor(ModuleDescriptorParser,Resource)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.DefaultModuleDescriptor(ModuleRevisionId,String,Date)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.DefaultModuleDescriptor(ModuleRevisionId,String,Date,boolean)",3,1,4
"fr.jayasoft.ivy.DefaultModuleDescriptor.ModuleIdMatcher.ModuleIdMatcher(PatternMatcher,ModuleId)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.ModuleIdMatcher.matches(ModuleId)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.addArtifact(String,Artifact)",1,2,2
"fr.jayasoft.ivy.DefaultModuleDescriptor.addConfiguration(Configuration)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.addConflictManager(ModuleId,PatternMatcher,ConflictManager)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.addDependency(DependencyDescriptor)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.addLicense(License)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.check()",4,4,4
"fr.jayasoft.ivy.DefaultModuleDescriptor.dependsOn(VersionMatcher,ModuleDescriptor)",5,4,5
"fr.jayasoft.ivy.DefaultModuleDescriptor.getAllArtifacts()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getArtifacts(String)",2,2,2
"fr.jayasoft.ivy.DefaultModuleDescriptor.getAttribute(String)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getAttributes()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getConfiguration(String)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getConfigurations()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getConfigurationsNames()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getConflictManager(ModuleId)",3,3,3
"fr.jayasoft.ivy.DefaultModuleDescriptor.getDependencies()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getExtraAttribute(String)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getExtraAttributes()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getHomePage()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getLastModified()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getLicenses()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getModuleRevisionId()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getNamespace()",2,2,3
"fr.jayasoft.ivy.DefaultModuleDescriptor.getParser()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getPublicConfigurationsNames()",1,3,3
"fr.jayasoft.ivy.DefaultModuleDescriptor.getPublicationDate()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getResolvedModuleRevisionId()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getResolvedPublicationDate()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getResource()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getStandardAttribute(String)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getStandardAttributes()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.getStatus()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.isDefault()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.isMappingOverride()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.isNamespaceUseful()",3,2,3
"fr.jayasoft.ivy.DefaultModuleDescriptor.newBasicInstance(ModuleRevisionId,Date)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.newCallerInstance(ModuleRevisionId,String[],boolean,boolean)",1,3,3
"fr.jayasoft.ivy.DefaultModuleDescriptor.newCallerInstance(ModuleRevisionId[],boolean,boolean)",1,2,2
"fr.jayasoft.ivy.DefaultModuleDescriptor.newDefaultInstance(ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.newDefaultInstance(ModuleRevisionId,DependencyArtifactDescriptor[])",1,3,4
"fr.jayasoft.ivy.DefaultModuleDescriptor.setDefault(boolean)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.setHomePage(String)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.setLastModified(long)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.setMappingOverride(boolean)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.setModuleRevisionId(ModuleRevisionId)",2,1,3
"fr.jayasoft.ivy.DefaultModuleDescriptor.setNamespace(Namespace)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.setPublicationDate(Date)",1,1,3
"fr.jayasoft.ivy.DefaultModuleDescriptor.setResolvedModuleRevisionId(ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.setResolvedPublicationDate(Date)",2,1,2
"fr.jayasoft.ivy.DefaultModuleDescriptor.setStatus(String)",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.toIvyFile(File)",1,2,3
"fr.jayasoft.ivy.DefaultModuleDescriptor.toString()",1,1,1
"fr.jayasoft.ivy.DefaultModuleDescriptor.transformInstance(ModuleDescriptor,Namespace)",2,5,6
"fr.jayasoft.ivy.DefaultModuleRevision.DefaultModuleRevision(DependencyResolver,DependencyResolver,ModuleDescriptor,boolean,boolean,URL)",1,1,1
"fr.jayasoft.ivy.DefaultModuleRevision.equals(Object)",2,1,2
"fr.jayasoft.ivy.DefaultModuleRevision.getArtifactResolver()",1,1,1
"fr.jayasoft.ivy.DefaultModuleRevision.getDescriptor()",1,1,1
"fr.jayasoft.ivy.DefaultModuleRevision.getId()",1,1,1
"fr.jayasoft.ivy.DefaultModuleRevision.getLocalMDUrl()",1,1,1
"fr.jayasoft.ivy.DefaultModuleRevision.getPublicationDate()",1,1,1
"fr.jayasoft.ivy.DefaultModuleRevision.getResolver()",1,1,1
"fr.jayasoft.ivy.DefaultModuleRevision.hashCode()",1,1,1
"fr.jayasoft.ivy.DefaultModuleRevision.isDownloaded()",1,1,1
"fr.jayasoft.ivy.DefaultModuleRevision.isSearched()",1,1,1
"fr.jayasoft.ivy.DefaultModuleRevision.toString()",1,1,1
"fr.jayasoft.ivy.DefaultPublishingDRResolver.resolve(ModuleDescriptor,String,ModuleRevisionId,String)",1,1,1
"fr.jayasoft.ivy.Ivy.Ivy()",2,7,9
"fr.jayasoft.ivy.Ivy.ModuleSettings.ModuleSettings(String,String,String)",1,1,1
"fr.jayasoft.ivy.Ivy.ModuleSettings.getBranch()",1,1,1
"fr.jayasoft.ivy.Ivy.ModuleSettings.getConflictManager()",1,1,1
"fr.jayasoft.ivy.Ivy.ModuleSettings.getResolverName()",1,1,1
"fr.jayasoft.ivy.Ivy.ModuleSettings.toString()",1,1,3
"fr.jayasoft.ivy.Ivy.addAllVariables(Map)",1,1,1
"fr.jayasoft.ivy.Ivy.addAllVariables(Map,boolean)",1,2,2
"fr.jayasoft.ivy.Ivy.addCircularDependencyStrategy(CircularDependencyStrategy)",1,1,1
"fr.jayasoft.ivy.Ivy.addClasspathURL(URL)",1,1,1
"fr.jayasoft.ivy.Ivy.addConfigured(CircularDependencyStrategy)",1,1,1
"fr.jayasoft.ivy.Ivy.addConfigured(ConflictManager)",1,1,1
"fr.jayasoft.ivy.Ivy.addConfigured(DependencyResolver)",1,1,1
"fr.jayasoft.ivy.Ivy.addConfigured(LatestStrategy)",1,1,1
"fr.jayasoft.ivy.Ivy.addConfigured(ModuleDescriptorParser)",1,1,1
"fr.jayasoft.ivy.Ivy.addConfigured(Namespace)",1,1,1
"fr.jayasoft.ivy.Ivy.addConfigured(PatternMatcher)",1,1,1
"fr.jayasoft.ivy.Ivy.addConfigured(ReportOutputter)",1,1,1
"fr.jayasoft.ivy.Ivy.addConfigured(Trigger)",1,1,1
"fr.jayasoft.ivy.Ivy.addConfigured(VersionMatcher)",1,1,1
"fr.jayasoft.ivy.Ivy.addConflictManager(String,ConflictManager)",1,2,2
"fr.jayasoft.ivy.Ivy.addIvyListener(IvyListener)",1,1,1
"fr.jayasoft.ivy.Ivy.addIvyListener(IvyListener,Filter)",1,1,1
"fr.jayasoft.ivy.Ivy.addIvyListener(IvyListener,String)",1,1,1
"fr.jayasoft.ivy.Ivy.addLatestStrategy(String,LatestStrategy)",1,2,2
"fr.jayasoft.ivy.Ivy.addMatcher(PatternMatcher)",1,2,2
"fr.jayasoft.ivy.Ivy.addModuleConfiguration(ModuleId,PatternMatcher,String,String,String)",1,1,1
"fr.jayasoft.ivy.Ivy.addNamespace(Namespace)",1,2,2
"fr.jayasoft.ivy.Ivy.addReportOutputter(ReportOutputter)",1,2,2
"fr.jayasoft.ivy.Ivy.addResolver(DependencyResolver)",2,7,8
"fr.jayasoft.ivy.Ivy.addSystemProperties()",1,1,1
"fr.jayasoft.ivy.Ivy.addTransferListener(TransferListener)",1,1,1
"fr.jayasoft.ivy.Ivy.addTrigger(Trigger)",1,1,1
"fr.jayasoft.ivy.Ivy.addVersionMatcher(VersionMatcher)",1,4,4
"fr.jayasoft.ivy.Ivy.check(URL,String)",1,17,17
"fr.jayasoft.ivy.Ivy.checkConflictSolved(IvyNode,IvyNode)",3,8,8
"fr.jayasoft.ivy.Ivy.checkInterrupted()",2,2,2
"fr.jayasoft.ivy.Ivy.checkResolverName(String)",2,2,3
"fr.jayasoft.ivy.Ivy.classForName(String,boolean)",2,3,3
"fr.jayasoft.ivy.Ivy.computeConflicts(IvyNode,IvyNode,Collection,Collection)",6,8,8
"fr.jayasoft.ivy.Ivy.configure(File)",1,3,3
"fr.jayasoft.ivy.Ivy.configure(URL)",1,2,2
"fr.jayasoft.ivy.Ivy.configureDefault()",1,1,1
"fr.jayasoft.ivy.Ivy.configureDefaultCircularDependencyStrategies()",1,1,1
"fr.jayasoft.ivy.Ivy.configureDefaultVersionMatcher()",1,1,1
"fr.jayasoft.ivy.Ivy.configureRepositories(boolean)",1,6,7
"fr.jayasoft.ivy.Ivy.debugConflictResolution()",1,3,3
"fr.jayasoft.ivy.Ivy.deliver(ModuleRevisionId,String,File,String,String,Date,PublishingDependencyRevisionResolver,boolean)",1,1,1
"fr.jayasoft.ivy.Ivy.deliver(ModuleRevisionId,String,File,String,String,Date,PublishingDependencyRevisionResolver,boolean,boolean)",3,5,10
"fr.jayasoft.ivy.Ivy.determineArtifactsToCopy(ModuleId,String[],File,String,String)",1,1,1
"fr.jayasoft.ivy.Ivy.determineArtifactsToCopy(ModuleId,String[],File,String,String,Filter)",4,13,16
"fr.jayasoft.ivy.Ivy.doFetchDependencies(IvyNode,String)",5,13,14
"fr.jayasoft.ivy.Ivy.doValidate()",1,1,1
"fr.jayasoft.ivy.Ivy.download(Artifact,File)",1,2,2
"fr.jayasoft.ivy.Ivy.downloadArtifacts(ResolveReport,File,boolean,Filter)",1,8,8
"fr.jayasoft.ivy.Ivy.dumpConfig()",1,6,6
"fr.jayasoft.ivy.Ivy.fetchDependencies(IvyNode,String,boolean)",1,12,12
"fr.jayasoft.ivy.Ivy.filterIgnore(Collection)",1,1,1
"fr.jayasoft.ivy.Ivy.findModule(ModuleRevisionId)",2,2,3
"fr.jayasoft.ivy.Ivy.findModuleInCache(ModuleRevisionId,File,boolean)",4,7,8
"fr.jayasoft.ivy.Ivy.findModuleRevisionIds(DependencyResolver,ModuleRevisionId,PatternMatcher)",1,15,16
"fr.jayasoft.ivy.Ivy.fireIvyEvent(IvyEvent)",1,3,3
"fr.jayasoft.ivy.Ivy.fireTransferEvent(TransferEvent)",1,3,3
"fr.jayasoft.ivy.Ivy.getArchiveFileInCache(File,Artifact)",1,1,1
"fr.jayasoft.ivy.Ivy.getArchiveFileInCache(File,Artifact,ArtifactOrigin)",3,4,5
"fr.jayasoft.ivy.Ivy.getArchiveFileInCache(File,Artifact,ArtifactOrigin,boolean)",2,4,4
"fr.jayasoft.ivy.Ivy.getArchiveFileInCache(File,String,String,String,String,String,String)",1,1,1
"fr.jayasoft.ivy.Ivy.getArchivePathInCache(Artifact)",1,1,1
"fr.jayasoft.ivy.Ivy.getArchivePathInCache(Artifact,ArtifactOrigin)",1,1,1
"fr.jayasoft.ivy.Ivy.getArchivePathInCache(String,String,String,String,String,String)",1,1,1
"fr.jayasoft.ivy.Ivy.getCacheArtifactPattern()",1,1,1
"fr.jayasoft.ivy.Ivy.getCacheDataFilePattern()",1,1,1
"fr.jayasoft.ivy.Ivy.getCacheIvyPattern()",1,1,1
"fr.jayasoft.ivy.Ivy.getCachedDataFile(File,ModuleDescriptor)",1,1,1
"fr.jayasoft.ivy.Ivy.getCachedDataFile(File,ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.Ivy.getCircularDependencyStrategy()",1,2,2
"fr.jayasoft.ivy.Ivy.getCircularDependencyStrategy(String)",1,1,2
"fr.jayasoft.ivy.Ivy.getClassLoader()",1,3,3
"fr.jayasoft.ivy.Ivy.getConflictManager(ModuleId)",5,5,5
"fr.jayasoft.ivy.Ivy.getConflictManager(String)",2,2,2
"fr.jayasoft.ivy.Ivy.getConflictResolvingPolicy()",3,2,3
"fr.jayasoft.ivy.Ivy.getCurrent()",1,2,2
"fr.jayasoft.ivy.Ivy.getDefaultBranch()",1,1,1
"fr.jayasoft.ivy.Ivy.getDefaultBranch(ModuleId)",4,4,4
"fr.jayasoft.ivy.Ivy.getDefaultCache()",1,2,2
"fr.jayasoft.ivy.Ivy.getDefaultConfigurationURL()",1,1,1
"fr.jayasoft.ivy.Ivy.getDefaultConflictManager()",1,2,2
"fr.jayasoft.ivy.Ivy.getDefaultIvyUserDir()",1,3,3
"fr.jayasoft.ivy.Ivy.getDefaultLatestStrategy()",1,1,2
"fr.jayasoft.ivy.Ivy.getDefaultResolver()",2,2,3
"fr.jayasoft.ivy.Ivy.getDependencies(ModuleDescriptor,String[],File,Date,ResolveReport,boolean)",1,1,1
"fr.jayasoft.ivy.Ivy.getDependencies(ModuleDescriptor,String[],File,Date,ResolveReport,boolean,boolean)",9,21,22
"fr.jayasoft.ivy.Ivy.getDependencies(URL,String[],File,Date,boolean)",1,1,1
"fr.jayasoft.ivy.Ivy.getDictatorResolver()",1,1,1
"fr.jayasoft.ivy.Ivy.getIvyFileInCache(File,ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.Ivy.getLatestStrategy(String)",2,2,2
"fr.jayasoft.ivy.Ivy.getLocalHostName()",1,1,2
"fr.jayasoft.ivy.Ivy.getMatcher(String)",1,1,1
"fr.jayasoft.ivy.Ivy.getNamespace(String)",2,2,2
"fr.jayasoft.ivy.Ivy.getReportOutputter(String)",1,1,1
"fr.jayasoft.ivy.Ivy.getReportOutputters()",1,1,1
"fr.jayasoft.ivy.Ivy.getResolvedIvyFileInCache(File,ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.Ivy.getResolvedIvyPropertiesInCache(File,ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.Ivy.getResolver(ModuleId)",2,1,2
"fr.jayasoft.ivy.Ivy.getResolver(String)",2,2,3
"fr.jayasoft.ivy.Ivy.getResolverName(ModuleId)",4,4,4
"fr.jayasoft.ivy.Ivy.getSavedArtResolverName(File,ModuleDescriptor)",1,1,1
"fr.jayasoft.ivy.Ivy.getSavedArtifactOrigin(File,Artifact)",2,1,2
"fr.jayasoft.ivy.Ivy.getSavedResolverName(File,ModuleDescriptor)",1,1,1
"fr.jayasoft.ivy.Ivy.getStatusManager()",1,2,2
"fr.jayasoft.ivy.Ivy.getSystemNamespace()",1,1,1
"fr.jayasoft.ivy.Ivy.getTypeDef(String)",1,1,1
"fr.jayasoft.ivy.Ivy.getTypeDefs()",1,1,1
"fr.jayasoft.ivy.Ivy.getVariable(String)",1,2,2
"fr.jayasoft.ivy.Ivy.getVariables()",1,1,1
"fr.jayasoft.ivy.Ivy.getVersionMatcher()",1,2,2
"fr.jayasoft.ivy.Ivy.getVersionMatcher(String)",1,1,1
"fr.jayasoft.ivy.Ivy.getVersionMatchers()",1,1,1
"fr.jayasoft.ivy.Ivy.hasIvyListener(IvyListener)",1,1,1
"fr.jayasoft.ivy.Ivy.hasTransferListener(TransferListener)",1,1,1
"fr.jayasoft.ivy.Ivy.install(ModuleRevisionId,String,String,boolean,boolean,boolean,Filter,File,String)",4,9,10
"fr.jayasoft.ivy.Ivy.interrupt()",1,1,1
"fr.jayasoft.ivy.Ivy.interrupt(Thread)",3,4,6
"fr.jayasoft.ivy.Ivy.isCheckUpToDate()",1,1,1
"fr.jayasoft.ivy.Ivy.isDependenciesFetched(IvyNode,String)",2,1,2
"fr.jayasoft.ivy.Ivy.isInterrupted()",1,1,1
"fr.jayasoft.ivy.Ivy.isUseRemoteConfig()",1,1,1
"fr.jayasoft.ivy.Ivy.listModuleEntries(OrganisationEntry)",1,2,2
"fr.jayasoft.ivy.Ivy.listModules(ModuleId,PatternMatcher)",1,5,5
"fr.jayasoft.ivy.Ivy.listModules(ModuleRevisionId,PatternMatcher)",1,10,11
"fr.jayasoft.ivy.Ivy.listModules(String)",1,5,5
"fr.jayasoft.ivy.Ivy.listOrganisationEntries()",1,2,2
"fr.jayasoft.ivy.Ivy.listOrganisations()",1,5,5
"fr.jayasoft.ivy.Ivy.listRevisionEntries(ModuleEntry)",1,2,2
"fr.jayasoft.ivy.Ivy.listRevisions(String,String)",1,5,5
"fr.jayasoft.ivy.Ivy.listTokenValues(String,Map)",1,2,2
"fr.jayasoft.ivy.Ivy.listingIgnore(String)",1,1,1
"fr.jayasoft.ivy.Ivy.loadDefaultProperties()",1,1,1
"fr.jayasoft.ivy.Ivy.loadProperties(File)",1,1,1
"fr.jayasoft.ivy.Ivy.loadProperties(File,boolean)",1,1,1
"fr.jayasoft.ivy.Ivy.loadProperties(URL)",1,1,1
"fr.jayasoft.ivy.Ivy.loadProperties(URL,boolean)",1,1,1
"fr.jayasoft.ivy.Ivy.logModuleWhenFound()",1,2,2
"fr.jayasoft.ivy.Ivy.logNotConvertedExclusionRule()",1,1,1
"fr.jayasoft.ivy.Ivy.logResolvedRevision()",1,2,2
"fr.jayasoft.ivy.Ivy.outputReport(ResolveReport,File)",1,1,1
"fr.jayasoft.ivy.Ivy.publish(Artifact,String,DependencyResolver,boolean)",2,2,2
"fr.jayasoft.ivy.Ivy.publish(ModuleDescriptor,DependencyResolver,String,String,Artifact[],boolean,String)",1,12,12
"fr.jayasoft.ivy.Ivy.publish(ModuleRevisionId,String,File,String,String,String,String,Date,Artifact[],boolean,boolean,boolean,String)",8,6,13
"fr.jayasoft.ivy.Ivy.publish(ModuleRevisionId,String,File,String,String,String,boolean)",1,1,1
"fr.jayasoft.ivy.Ivy.publish(ModuleRevisionId,String,File,String,String,String,boolean,boolean)",1,1,1
"fr.jayasoft.ivy.Ivy.removeIvyListener(IvyListener)",1,4,4
"fr.jayasoft.ivy.Ivy.removeSavedArtifactOrigin(File,Artifact)",1,1,1
"fr.jayasoft.ivy.Ivy.removeTransferListener(TransferListener)",1,1,1
"fr.jayasoft.ivy.Ivy.resolve(File)",1,1,1
"fr.jayasoft.ivy.Ivy.resolve(ModuleDescriptor,String[],File,Date,boolean,boolean,Filter)",1,1,1
"fr.jayasoft.ivy.Ivy.resolve(ModuleDescriptor,String[],File,Date,boolean,boolean,boolean,Filter)",1,1,1
"fr.jayasoft.ivy.Ivy.resolve(ModuleDescriptor,String[],File,Date,boolean,boolean,boolean,boolean,boolean,Filter)",1,1,1
"fr.jayasoft.ivy.Ivy.resolve(ModuleDescriptor,String[],File,Date,boolean,boolean,boolean,boolean,boolean,boolean,Filter)",1,12,14
"fr.jayasoft.ivy.Ivy.resolve(ModuleRevisionId,String[])",1,1,1
"fr.jayasoft.ivy.Ivy.resolve(ModuleRevisionId,String[],boolean,boolean,File,Date,boolean,boolean,Filter)",1,1,1
"fr.jayasoft.ivy.Ivy.resolve(ModuleRevisionId,String[],boolean,boolean,File,Date,boolean,boolean,boolean,Filter)",3,4,4
"fr.jayasoft.ivy.Ivy.resolve(URL)",1,1,1
"fr.jayasoft.ivy.Ivy.resolve(URL,String,String[],File,Date,boolean)",1,1,1
"fr.jayasoft.ivy.Ivy.resolve(URL,String,String[],File,Date,boolean,boolean)",1,1,1
"fr.jayasoft.ivy.Ivy.resolve(URL,String,String[],File,Date,boolean,boolean,Filter)",1,1,1
"fr.jayasoft.ivy.Ivy.resolve(URL,String,String[],File,Date,boolean,boolean,boolean,Filter)",1,1,1
"fr.jayasoft.ivy.Ivy.resolve(URL,String,String[],File,Date,boolean,boolean,boolean,boolean,Filter)",1,4,4
"fr.jayasoft.ivy.Ivy.resolveConflict(IvyNode,IvyNode)",1,1,1
"fr.jayasoft.ivy.Ivy.resolveConflict(IvyNode,IvyNode,Collection)",3,12,15
"fr.jayasoft.ivy.Ivy.retrieve(ModuleId,String[],File,String)",1,1,1
"fr.jayasoft.ivy.Ivy.retrieve(ModuleId,String[],File,String,String)",1,1,1
"fr.jayasoft.ivy.Ivy.retrieve(ModuleId,String[],File,String,String,Filter)",1,1,1
"fr.jayasoft.ivy.Ivy.retrieve(ModuleId,String[],File,String,String,Filter,boolean,boolean)",1,12,15
"fr.jayasoft.ivy.Ivy.saveArtResolver(File,ModuleDescriptor,String)",1,1,1
"fr.jayasoft.ivy.Ivy.saveArtifactOrigin(File,Artifact,ArtifactOrigin)",1,1,1
"fr.jayasoft.ivy.Ivy.saveResolver(File,ModuleDescriptor,String)",1,1,1
"fr.jayasoft.ivy.Ivy.setCacheArtifactPattern(String)",1,1,1
"fr.jayasoft.ivy.Ivy.setCacheIvyPattern(String)",1,1,1
"fr.jayasoft.ivy.Ivy.setCheckUpToDate(boolean)",1,1,1
"fr.jayasoft.ivy.Ivy.setCircularDependencyStrategy(CircularDependencyStrategy)",1,1,1
"fr.jayasoft.ivy.Ivy.setConfigurationVariables(File)",1,2,2
"fr.jayasoft.ivy.Ivy.setConfigurationVariables(URL)",1,2,2
"fr.jayasoft.ivy.Ivy.setDefaultBranch(String)",1,1,1
"fr.jayasoft.ivy.Ivy.setDefaultCache(File)",1,1,1
"fr.jayasoft.ivy.Ivy.setDefaultConflictManager(ConflictManager)",1,1,1
"fr.jayasoft.ivy.Ivy.setDefaultIvyUserDir(File)",1,1,1
"fr.jayasoft.ivy.Ivy.setDefaultLatestStrategy(LatestStrategy)",1,1,1
"fr.jayasoft.ivy.Ivy.setDefaultResolver(String)",1,1,1
"fr.jayasoft.ivy.Ivy.setDictatorResolver(DependencyResolver)",1,1,1
"fr.jayasoft.ivy.Ivy.setLogNotConvertedExclusionRule(boolean)",1,1,1
"fr.jayasoft.ivy.Ivy.setStatusManager(StatusManager)",1,1,1
"fr.jayasoft.ivy.Ivy.setUseRemoteConfig(boolean)",1,1,1
"fr.jayasoft.ivy.Ivy.setValidate(boolean)",1,1,1
"fr.jayasoft.ivy.Ivy.setVariable(String,String)",1,1,1
"fr.jayasoft.ivy.Ivy.setVariable(String,String,boolean)",1,3,3
"fr.jayasoft.ivy.Ivy.setVariables(Map)",2,1,2
"fr.jayasoft.ivy.Ivy.sortModuleDescriptors(Collection)",1,1,1
"fr.jayasoft.ivy.Ivy.sortNodes(Collection)",1,1,1
"fr.jayasoft.ivy.Ivy.substitute(String)",1,1,1
"fr.jayasoft.ivy.Ivy.sync(Collection,Collection)",1,5,5
"fr.jayasoft.ivy.Ivy.transferProgress(TransferEvent)",1,1,1
"fr.jayasoft.ivy.Ivy.typeDef(String,String)",1,1,1
"fr.jayasoft.ivy.Ivy.typeDef(String,String,boolean)",1,2,2
"fr.jayasoft.ivy.Ivy.typeDefs(InputStream)",1,1,1
"fr.jayasoft.ivy.Ivy.typeDefs(InputStream,boolean)",1,1,1
"fr.jayasoft.ivy.Ivy.typeDefs(Properties)",1,1,1
"fr.jayasoft.ivy.Ivy.typeDefs(Properties,boolean)",1,2,2
"fr.jayasoft.ivy.Ivy.upToDate(File,File)",2,1,2
"fr.jayasoft.ivy.IvyContext.get(String)",1,2,2
"fr.jayasoft.ivy.IvyContext.getCache()",1,2,2
"fr.jayasoft.ivy.IvyContext.getCircularDependencyStrategy()",1,1,1
"fr.jayasoft.ivy.IvyContext.getContext()",1,2,2
"fr.jayasoft.ivy.IvyContext.getDefaultIvy()",1,2,3
"fr.jayasoft.ivy.IvyContext.getIvy()",1,2,2
"fr.jayasoft.ivy.IvyContext.getMessageImpl()",1,1,1
"fr.jayasoft.ivy.IvyContext.getOperatingThread()",1,1,1
"fr.jayasoft.ivy.IvyContext.set(String,Object)",1,1,1
"fr.jayasoft.ivy.IvyContext.setCache(File)",1,1,1
"fr.jayasoft.ivy.IvyContext.setContext(IvyContext)",1,1,1
"fr.jayasoft.ivy.IvyContext.setIvy(Ivy)",1,1,1
"fr.jayasoft.ivy.IvyContext.setMessageImpl(MessageImpl)",1,1,1
"fr.jayasoft.ivy.IvyNode.Caller.Caller(ModuleDescriptor,ModuleRevisionId,DependencyDescriptor,boolean)",1,1,1
"fr.jayasoft.ivy.IvyNode.Caller.addConfiguration(String,String[])",1,2,2
"fr.jayasoft.ivy.IvyNode.Caller.canExclude()",1,2,2
"fr.jayasoft.ivy.IvyNode.Caller.equals(Object)",2,2,3
"fr.jayasoft.ivy.IvyNode.Caller.getAskedDependencyId()",1,1,1
"fr.jayasoft.ivy.IvyNode.Caller.getCallerConfigurations()",1,1,1
"fr.jayasoft.ivy.IvyNode.Caller.getDependencyDescriptor()",1,1,1
"fr.jayasoft.ivy.IvyNode.Caller.getModuleDescriptor()",1,1,1
"fr.jayasoft.ivy.IvyNode.Caller.getModuleRevisionId()",1,1,1
"fr.jayasoft.ivy.IvyNode.Caller.hashCode()",1,1,1
"fr.jayasoft.ivy.IvyNode.Caller.toString()",1,1,1
"fr.jayasoft.ivy.IvyNode.EvictionData.EvictionData(String,IvyNode,ConflictManager,Collection)",1,1,1
"fr.jayasoft.ivy.IvyNode.EvictionData.getConflictManager()",1,1,1
"fr.jayasoft.ivy.IvyNode.EvictionData.getNode()",1,1,1
"fr.jayasoft.ivy.IvyNode.EvictionData.getRootModuleConf()",1,1,1
"fr.jayasoft.ivy.IvyNode.EvictionData.getSelected()",1,1,1
"fr.jayasoft.ivy.IvyNode.EvictionData.toString()",2,1,2
"fr.jayasoft.ivy.IvyNode.IvyNode(ResolveData,IvyNode,DependencyDescriptor)",1,1,1
"fr.jayasoft.ivy.IvyNode.IvyNode(ResolveData,ModuleDescriptor)",1,1,1
"fr.jayasoft.ivy.IvyNode.ModuleIdConf.ModuleIdConf(ModuleId,String)",1,1,1
"fr.jayasoft.ivy.IvyNode.ModuleIdConf.equals(Object)",2,2,3
"fr.jayasoft.ivy.IvyNode.ModuleIdConf.getConf()",1,1,1
"fr.jayasoft.ivy.IvyNode.ModuleIdConf.getModuleId()",1,1,1
"fr.jayasoft.ivy.IvyNode.ModuleIdConf.hashCode()",1,1,1
"fr.jayasoft.ivy.IvyNode.NodeConf.NodeConf(IvyNode,String)",1,1,1
"fr.jayasoft.ivy.IvyNode.NodeConf.equals(Object)",2,2,3
"fr.jayasoft.ivy.IvyNode.NodeConf.getConf()",1,1,1
"fr.jayasoft.ivy.IvyNode.NodeConf.getNode()",1,1,1
"fr.jayasoft.ivy.IvyNode.NodeConf.hashCode()",1,1,1
"fr.jayasoft.ivy.IvyNode.addCaller(String,IvyNode,String,String[],DependencyDescriptor)",2,6,6
"fr.jayasoft.ivy.IvyNode.addDependencyArtifacts(String,DependencyArtifactDescriptor[],Map)",1,2,2
"fr.jayasoft.ivy.IvyNode.addDependencyArtifactsIncludes(String,DependencyArtifactDescriptor[])",1,1,1
"fr.jayasoft.ivy.IvyNode.addDependencyDescriptor(IvyNode,DependencyDescriptor)",1,1,1
"fr.jayasoft.ivy.IvyNode.addRootModuleConfigurations(String,String[])",1,6,6
"fr.jayasoft.ivy.IvyNode.canExclude(String)",4,3,5
"fr.jayasoft.ivy.IvyNode.cleanEvicted()",1,5,5
"fr.jayasoft.ivy.IvyNode.computePath()",2,2,2
"fr.jayasoft.ivy.IvyNode.computeRoot()",3,3,3
"fr.jayasoft.ivy.IvyNode.discardConf(String)",1,1,1
"fr.jayasoft.ivy.IvyNode.discardConf(String,String)",1,5,5
"fr.jayasoft.ivy.IvyNode.doesCallersExclude(String,Artifact)",1,1,1
"fr.jayasoft.ivy.IvyNode.doesCallersExclude(String,Artifact,Stack)",6,2,6
"fr.jayasoft.ivy.IvyNode.doesExclude(ModuleDescriptor,String,String[],IvyNode,DependencyDescriptor,Artifact,Stack)",4,3,4
"fr.jayasoft.ivy.IvyNode.equals(Object)",2,1,2
"fr.jayasoft.ivy.IvyNode.findArtifactsMatching(DependencyArtifactDescriptor,Map)",1,3,3
"fr.jayasoft.ivy.IvyNode.findNode(ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.IvyNode.findPath(ModuleId)",1,1,1
"fr.jayasoft.ivy.IvyNode.findPath(ModuleId,IvyNode,List)",4,3,4
"fr.jayasoft.ivy.IvyNode.getAllArtifacts()",1,2,2
"fr.jayasoft.ivy.IvyNode.getAllCallers()",1,2,2
"fr.jayasoft.ivy.IvyNode.getAllEvictingConflictManagers()",1,2,2
"fr.jayasoft.ivy.IvyNode.getAllEvictingNodes()",1,3,4
"fr.jayasoft.ivy.IvyNode.getArtifacts(String)",2,14,15
"fr.jayasoft.ivy.IvyNode.getCallers(String)",2,1,2
"fr.jayasoft.ivy.IvyNode.getConfiguration(String)",2,2,3
"fr.jayasoft.ivy.IvyNode.getConfigurations(String)",2,1,2
"fr.jayasoft.ivy.IvyNode.getConflictManager(ModuleId)",2,2,3
"fr.jayasoft.ivy.IvyNode.getConfsToFetch()",1,1,1
"fr.jayasoft.ivy.IvyNode.getDefaultConf(String)",2,2,2
"fr.jayasoft.ivy.IvyNode.getDependencies(String,boolean)",5,5,8
"fr.jayasoft.ivy.IvyNode.getDependencies(String[])",2,3,4
"fr.jayasoft.ivy.IvyNode.getDependencyDescriptor(IvyNode)",1,1,1
"fr.jayasoft.ivy.IvyNode.getDependencyDescriptor(ModuleDescriptor,IvyNode)",4,3,4
"fr.jayasoft.ivy.IvyNode.getDescriptor()",1,1,1
"fr.jayasoft.ivy.IvyNode.getEvictedConfs()",1,1,1
"fr.jayasoft.ivy.IvyNode.getEvictedData(String)",1,1,1
"fr.jayasoft.ivy.IvyNode.getEvictedNodes(ModuleId,String)",1,3,3
"fr.jayasoft.ivy.IvyNode.getEvictedRevisions(ModuleId,String)",2,1,2
"fr.jayasoft.ivy.IvyNode.getEvictionDataInRoot(String,IvyNode)",3,2,3
"fr.jayasoft.ivy.IvyNode.getId()",1,1,1
"fr.jayasoft.ivy.IvyNode.getMainConf(String)",2,2,2
"fr.jayasoft.ivy.IvyNode.getModuleId()",1,1,1
"fr.jayasoft.ivy.IvyNode.getModuleRevision()",1,1,1
"fr.jayasoft.ivy.IvyNode.getParent()",1,1,1
"fr.jayasoft.ivy.IvyNode.getParentConf()",1,1,1
"fr.jayasoft.ivy.IvyNode.getPath()",1,2,2
"fr.jayasoft.ivy.IvyNode.getProblem()",1,1,1
"fr.jayasoft.ivy.IvyNode.getPublication()",2,2,2
"fr.jayasoft.ivy.IvyNode.getRealConfs(String)",5,5,7
"fr.jayasoft.ivy.IvyNode.getRealNode()",1,1,1
"fr.jayasoft.ivy.IvyNode.getRealNode(boolean)",2,3,3
"fr.jayasoft.ivy.IvyNode.getRequestedConf()",1,1,1
"fr.jayasoft.ivy.IvyNode.getRequiredConfigurations()",1,1,1
"fr.jayasoft.ivy.IvyNode.getRequiredConfigurations(IvyNode,String)",1,2,2
"fr.jayasoft.ivy.IvyNode.getResolveData()",1,1,1
"fr.jayasoft.ivy.IvyNode.getResolvedId()",3,4,4
"fr.jayasoft.ivy.IvyNode.getResolvedNodes(ModuleId,String)",1,3,3
"fr.jayasoft.ivy.IvyNode.getResolvedRevisions(ModuleId,String)",2,3,3
"fr.jayasoft.ivy.IvyNode.getRoot()",1,2,2
"fr.jayasoft.ivy.IvyNode.getRoot(IvyNode)",3,3,4
"fr.jayasoft.ivy.IvyNode.getRootModuleConf()",1,1,1
"fr.jayasoft.ivy.IvyNode.getRootModuleConfigurations()",1,1,1
"fr.jayasoft.ivy.IvyNode.getSelectedArtifacts(Filter)",1,3,3
"fr.jayasoft.ivy.IvyNode.handleConfiguration(boolean,String,boolean)",5,9,9
"fr.jayasoft.ivy.IvyNode.hasConfigurationsToLoad()",1,1,1
"fr.jayasoft.ivy.IvyNode.hasProblem()",1,1,1
"fr.jayasoft.ivy.IvyNode.hashCode()",1,1,1
"fr.jayasoft.ivy.IvyNode.init(ResolveData,boolean)",1,2,2
"fr.jayasoft.ivy.IvyNode.isCircular()",1,1,1
"fr.jayasoft.ivy.IvyNode.isCompletelyEvicted()",4,2,4
"fr.jayasoft.ivy.IvyNode.isDependencyModuleExcluded(ModuleRevisionId,String)",1,1,1
"fr.jayasoft.ivy.IvyNode.isDownloaded()",1,1,1
"fr.jayasoft.ivy.IvyNode.isEvicted(String)",1,2,2
"fr.jayasoft.ivy.IvyNode.isFetched(String)",1,1,1
"fr.jayasoft.ivy.IvyNode.isLoaded()",1,1,1
"fr.jayasoft.ivy.IvyNode.isParentConfTransitive()",2,1,2
"fr.jayasoft.ivy.IvyNode.isRoot()",1,1,1
"fr.jayasoft.ivy.IvyNode.isRootModuleConfLoaded()",1,1,1
"fr.jayasoft.ivy.IvyNode.isSearched()",1,1,1
"fr.jayasoft.ivy.IvyNode.isTransitive()",1,3,3
"fr.jayasoft.ivy.IvyNode.loadData(String,boolean)",12,21,26
"fr.jayasoft.ivy.IvyNode.markEvicted(EvictionData)",1,4,4
"fr.jayasoft.ivy.IvyNode.markEvicted(String,IvyNode,ConflictManager,Collection)",1,1,1
"fr.jayasoft.ivy.IvyNode.markRootModuleConfLoaded()",1,1,1
"fr.jayasoft.ivy.IvyNode.resolveSpecialConfigurations(String[],IvyNode)",3,6,6
"fr.jayasoft.ivy.IvyNode.setEvictedNodes(ModuleId,String,Collection)",1,2,2
"fr.jayasoft.ivy.IvyNode.setParent(IvyNode)",1,1,1
"fr.jayasoft.ivy.IvyNode.setParentConf(String)",1,1,1
"fr.jayasoft.ivy.IvyNode.setRequestedConf(String)",1,1,1
"fr.jayasoft.ivy.IvyNode.setRequiredConfs(IvyNode,String,Collection)",1,1,1
"fr.jayasoft.ivy.IvyNode.setResolvedNodes(ModuleId,String,Collection)",1,1,1
"fr.jayasoft.ivy.IvyNode.setRootModuleConf(String)",1,5,5
"fr.jayasoft.ivy.IvyNode.toMrids(Collection,IvyNode)",1,2,2
"fr.jayasoft.ivy.IvyNode.toString()",1,1,1
"fr.jayasoft.ivy.IvyNode.traverse(String,IvyNode)",1,2,2
"fr.jayasoft.ivy.IvyNode.updateConfsToFetch(Collection)",1,1,1
"fr.jayasoft.ivy.IvyNode.updateDataFrom(IvyNode,String)",1,5,5
"fr.jayasoft.ivy.IvyNode.updateMapOfSet(Map,Map)",1,2,2
"fr.jayasoft.ivy.IvyNode.updateMapOfSetForKey(Map,Map,Object)",1,3,3
"fr.jayasoft.ivy.License.License(String,String)",1,1,1
"fr.jayasoft.ivy.License.getName()",1,1,1
"fr.jayasoft.ivy.License.getUrl()",1,1,1
"fr.jayasoft.ivy.MDArtifact.MDArtifact(ModuleDescriptor,String,String,String)",1,1,1
"fr.jayasoft.ivy.MDArtifact.MDArtifact(ModuleDescriptor,String,String,String,URL,Map)",5,1,5
"fr.jayasoft.ivy.MDArtifact.addConfiguration(String)",1,1,1
"fr.jayasoft.ivy.MDArtifact.getConfigurations()",1,1,1
"fr.jayasoft.ivy.MDArtifact.getExt()",1,1,1
"fr.jayasoft.ivy.MDArtifact.getId()",1,2,2
"fr.jayasoft.ivy.MDArtifact.getModuleRevisionId()",1,1,1
"fr.jayasoft.ivy.MDArtifact.getName()",1,1,1
"fr.jayasoft.ivy.MDArtifact.getPublicationDate()",1,1,1
"fr.jayasoft.ivy.MDArtifact.getType()",1,1,1
"fr.jayasoft.ivy.MDArtifact.getUrl()",1,1,1
"fr.jayasoft.ivy.MDArtifact.newIvyArtifact(ModuleDescriptor)",1,1,1
"fr.jayasoft.ivy.Main.configureURLHandler(String,String,String,String)",1,1,1
"fr.jayasoft.ivy.Main.error(Options,String)",1,1,1
"fr.jayasoft.ivy.Main.getOptions()",1,1,1
"fr.jayasoft.ivy.Main.invoke(Ivy,File,ModuleDescriptor,String[],String,String[])",1,4,9
"fr.jayasoft.ivy.Main.main(String[])",2,27,29
"fr.jayasoft.ivy.Main.outputCachePath(Ivy,File,ModuleDescriptor,String[],String)",1,5,5
"fr.jayasoft.ivy.Main.usage(Options)",1,1,1
"fr.jayasoft.ivy.ModuleDescriptorSorter.ModuleDescriptorSorter(Collection)",1,1,1
"fr.jayasoft.ivy.ModuleDescriptorSorter.getModuleDescriptorDependency(VersionMatcher,DependencyDescriptor)",5,4,5
"fr.jayasoft.ivy.ModuleDescriptorSorter.sortModuleDescriptors(VersionMatcher)",1,2,2
"fr.jayasoft.ivy.ModuleDescriptorSorter.sortModuleDescriptors(VersionMatcher,Collection)",1,1,1
"fr.jayasoft.ivy.ModuleDescriptorSorter.sortModuleDescriptorsHelp(VersionMatcher,ModuleDescriptor,Stack)",3,4,6
"fr.jayasoft.ivy.ModuleDescriptorSorter.sortNodes(VersionMatcher,Collection)",1,5,5
"fr.jayasoft.ivy.ModuleId.ModuleId(String,String)",2,1,2
"fr.jayasoft.ivy.ModuleId._hashCode()",1,1,1
"fr.jayasoft.ivy.ModuleId.decode(String)",2,1,2
"fr.jayasoft.ivy.ModuleId.encodeToString()",1,1,1
"fr.jayasoft.ivy.ModuleId.equals(Object)",2,2,3
"fr.jayasoft.ivy.ModuleId.getName()",1,1,1
"fr.jayasoft.ivy.ModuleId.getOrganisation()",1,1,1
"fr.jayasoft.ivy.ModuleId.hashCode()",1,1,1
"fr.jayasoft.ivy.ModuleId.toString()",1,1,1
"fr.jayasoft.ivy.ModuleRevisionId.ModuleRevisionId(ModuleId,String)",1,1,1
"fr.jayasoft.ivy.ModuleRevisionId.ModuleRevisionId(ModuleId,String,Map)",1,1,1
"fr.jayasoft.ivy.ModuleRevisionId.ModuleRevisionId(ModuleId,String,String)",1,1,1
"fr.jayasoft.ivy.ModuleRevisionId.ModuleRevisionId(ModuleId,String,String,Map)",1,2,2
"fr.jayasoft.ivy.ModuleRevisionId._hashCode()",1,3,3
"fr.jayasoft.ivy.ModuleRevisionId.decode(String)",8,4,9
"fr.jayasoft.ivy.ModuleRevisionId.encodeToString()",1,2,3
"fr.jayasoft.ivy.ModuleRevisionId.equals(Object)",2,6,7
"fr.jayasoft.ivy.ModuleRevisionId.getBranch()",1,1,1
"fr.jayasoft.ivy.ModuleRevisionId.getModuleId()",1,1,1
"fr.jayasoft.ivy.ModuleRevisionId.getName()",1,1,1
"fr.jayasoft.ivy.ModuleRevisionId.getOrganisation()",1,1,1
"fr.jayasoft.ivy.ModuleRevisionId.getRevision()",1,1,1
"fr.jayasoft.ivy.ModuleRevisionId.hashCode()",1,1,1
"fr.jayasoft.ivy.ModuleRevisionId.newInstance(ModuleRevisionId,String)",1,1,1
"fr.jayasoft.ivy.ModuleRevisionId.newInstance(String,String,String)",1,1,1
"fr.jayasoft.ivy.ModuleRevisionId.newInstance(String,String,String,Map)",1,1,1
"fr.jayasoft.ivy.ModuleRevisionId.newInstance(String,String,String,String)",1,1,1
"fr.jayasoft.ivy.ModuleRevisionId.newInstance(String,String,String,String,Map)",1,1,1
"fr.jayasoft.ivy.ModuleRevisionId.toString()",1,2,4
"fr.jayasoft.ivy.ResolveData.ResolveData(Ivy,File,Date,ConfigurationResolveReport,boolean)",1,1,1
"fr.jayasoft.ivy.ResolveData.ResolveData(Ivy,File,Date,ConfigurationResolveReport,boolean,Map)",1,1,1
"fr.jayasoft.ivy.ResolveData.ResolveData(Ivy,File,Date,ConfigurationResolveReport,boolean,boolean,Map)",1,1,1
"fr.jayasoft.ivy.ResolveData.ResolveData(ResolveData,boolean)",1,1,1
"fr.jayasoft.ivy.ResolveData.getCache()",1,1,1
"fr.jayasoft.ivy.ResolveData.getDate()",1,1,1
"fr.jayasoft.ivy.ResolveData.getIvy()",1,1,1
"fr.jayasoft.ivy.ResolveData.getNode(ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.ResolveData.getNodes()",1,1,1
"fr.jayasoft.ivy.ResolveData.getReport()",1,1,1
"fr.jayasoft.ivy.ResolveData.isTransitive()",1,1,1
"fr.jayasoft.ivy.ResolveData.isValidate()",1,1,1
"fr.jayasoft.ivy.ResolveData.register(IvyNode)",1,1,1
"fr.jayasoft.ivy.ResolveData.register(ModuleRevisionId,IvyNode)",1,1,1
"fr.jayasoft.ivy.ResolveData.setReport(ConfigurationResolveReport)",1,1,1
"fr.jayasoft.ivy.ResolvedURL.ResolvedURL(URL,String)",1,1,1
"fr.jayasoft.ivy.ResolvedURL.getLastModified()",1,4,4
"fr.jayasoft.ivy.ResolvedURL.getRevision()",1,1,1
"fr.jayasoft.ivy.ResolvedURL.getURL()",1,1,1
"fr.jayasoft.ivy.ResolvedURL.toString()",1,1,1
"fr.jayasoft.ivy.ant.AddPathTask.add(Path)",1,1,1
"fr.jayasoft.ivy.ant.AddPathTask.addDirset(DirSet)",1,1,1
"fr.jayasoft.ivy.ant.AddPathTask.addFilelist(FileList)",1,1,1
"fr.jayasoft.ivy.ant.AddPathTask.addFileset(FileSet)",1,1,1
"fr.jayasoft.ivy.ant.AddPathTask.createPath()",1,1,1
"fr.jayasoft.ivy.ant.AddPathTask.createPathElement()",1,1,1
"fr.jayasoft.ivy.ant.AddPathTask.execute()",3,3,4
"fr.jayasoft.ivy.ant.AddPathTask.getTopath()",1,1,1
"fr.jayasoft.ivy.ant.AddPathTask.isFirst()",1,1,1
"fr.jayasoft.ivy.ant.AddPathTask.setFirst(boolean)",1,1,1
"fr.jayasoft.ivy.ant.AddPathTask.setProject(Project)",1,1,1
"fr.jayasoft.ivy.ant.AddPathTask.setTopath(String)",1,1,1
"fr.jayasoft.ivy.ant.AntBuildTrigger.getBuildFile(IvyEvent)",1,1,1
"fr.jayasoft.ivy.ant.AntBuildTrigger.getBuildFilePattern()",1,1,1
"fr.jayasoft.ivy.ant.AntBuildTrigger.getPrefix()",1,1,1
"fr.jayasoft.ivy.ant.AntBuildTrigger.getTarget()",1,1,1
"fr.jayasoft.ivy.ant.AntBuildTrigger.isBuilt(File)",1,1,1
"fr.jayasoft.ivy.ant.AntBuildTrigger.isOnlyonce()",1,1,1
"fr.jayasoft.ivy.ant.AntBuildTrigger.markBuilt(File)",1,1,1
"fr.jayasoft.ivy.ant.AntBuildTrigger.progress(IvyEvent)",1,7,8
"fr.jayasoft.ivy.ant.AntBuildTrigger.setAntfile(String)",1,1,1
"fr.jayasoft.ivy.ant.AntBuildTrigger.setOnlyonce(boolean)",1,1,1
"fr.jayasoft.ivy.ant.AntBuildTrigger.setPrefix(String)",1,1,2
"fr.jayasoft.ivy.ant.AntBuildTrigger.setTarget(String)",1,1,1
"fr.jayasoft.ivy.ant.AntCallTrigger.getPrefix()",1,1,1
"fr.jayasoft.ivy.ant.AntCallTrigger.getTarget()",1,1,1
"fr.jayasoft.ivy.ant.AntCallTrigger.isOnlyonce()",1,1,1
"fr.jayasoft.ivy.ant.AntCallTrigger.isTriggered(IvyEvent)",1,1,1
"fr.jayasoft.ivy.ant.AntCallTrigger.markTriggered(IvyEvent)",1,1,1
"fr.jayasoft.ivy.ant.AntCallTrigger.progress(IvyEvent)",2,5,7
"fr.jayasoft.ivy.ant.AntCallTrigger.setOnlyonce(boolean)",1,1,1
"fr.jayasoft.ivy.ant.AntCallTrigger.setPrefix(String)",1,1,2
"fr.jayasoft.ivy.ant.AntCallTrigger.setTarget(String)",1,1,1
"fr.jayasoft.ivy.ant.AntMessageImpl.AntMessageImpl(Task)",1,2,2
"fr.jayasoft.ivy.ant.AntMessageImpl.endProgress(String)",1,1,1
"fr.jayasoft.ivy.ant.AntMessageImpl.log(String,int)",1,1,1
"fr.jayasoft.ivy.ant.AntMessageImpl.progress()",1,4,4
"fr.jayasoft.ivy.ant.AntMessageImpl.rawlog(String,int)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactProperty.execute()",6,5,10
"fr.jayasoft.ivy.ant.IvyArtifactProperty.getCache()",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactProperty.getConf()",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactProperty.getModule()",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactProperty.getName()",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactProperty.getOrganisation()",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactProperty.getValue()",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactProperty.isHaltonfailure()",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactProperty.setCache(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactProperty.setConf(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactProperty.setHaltonfailure(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactProperty.setModule(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactProperty.setName(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactProperty.setOrganisation(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactProperty.setValue(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactReport.createTransformerHandler(FileOutputStream)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactReport.execute()",7,6,12
"fr.jayasoft.ivy.ant.IvyArtifactReport.generateXml(Ivy,IvyNode[],Map,Map)",3,6,10
"fr.jayasoft.ivy.ant.IvyArtifactReport.getCache()",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactReport.getConf()",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactReport.getPattern()",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactReport.getTofile()",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactReport.isHaltonfailure()",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactReport.removeLeadingPath(File,File)",2,2,4
"fr.jayasoft.ivy.ant.IvyArtifactReport.replaceFileSeparatorWithSlash(File,StringBuffer)",1,4,4
"fr.jayasoft.ivy.ant.IvyArtifactReport.setCache(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactReport.setConf(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactReport.setHaltonfailure(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactReport.setPattern(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactReport.setTofile(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactReport.startArtifact(TransformerHandler,Artifact)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactReport.startModule(TransformerHandler,IvyNode)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactReport.writeCacheLocation(Ivy,TransformerHandler,Artifact)",1,1,1
"fr.jayasoft.ivy.ant.IvyArtifactReport.writeOriginLocationIfPresent(Ivy,TransformerHandler,Artifact)",1,3,3
"fr.jayasoft.ivy.ant.IvyArtifactReport.writeRetrieveLocation(TransformerHandler,String)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.addBuildFile(Path,File)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.addFileset(FileSet)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.execute()",8,13,17
"fr.jayasoft.ivy.ant.IvyBuildList.filterModules(Collection,ModuleDescriptor)",1,4,4
"fr.jayasoft.ivy.ant.IvyBuildList.getIvyFileFor(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.getIvyfilepath()",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.getReference()",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.getRoot()",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.isExcludeRoot()",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.isHaltonerror()",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.isReverse()",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.isSkipbuildwithoutivy()",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.processFilterNode(ModuleDescriptor,Set,Map)",1,3,3
"fr.jayasoft.ivy.ant.IvyBuildList.setExcludeRoot(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.setHaltonerror(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.setIvyfilepath(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.setReference(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.setReverse(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.setRoot(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildList.setSkipbuildwithoutivy(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.NewRevision.NewRevision(String,String,String,String)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.Range.Range(int,int)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.computeNewRevision(String)",8,9,13
"fr.jayasoft.ivy.ant.IvyBuildNumber.execute()",4,6,11
"fr.jayasoft.ivy.ant.IvyBuildNumber.findFirstNumber(String,int)",2,3,6
"fr.jayasoft.ivy.ant.IvyBuildNumber.findLastNumber(String)",2,3,7
"fr.jayasoft.ivy.ant.IvyBuildNumber.getBranch()",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.getDefault()",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.getDefaultBuildNumber()",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.getModule()",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.getOrganisation()",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.getPrefix()",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.getRevSep()",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.getRevision()",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.setBranch(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.setDefault(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.setDefaultBuildNumber(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.setModule(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.setOrganisation(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.setPrefix(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.setProperty(String,String)",1,2,2
"fr.jayasoft.ivy.ant.IvyBuildNumber.setRevSep(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyBuildNumber.setRevision(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyCacheFileset.execute()",2,3,5
"fr.jayasoft.ivy.ant.IvyCacheFileset.getSetid()",1,1,1
"fr.jayasoft.ivy.ant.IvyCacheFileset.setSetid(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyCacheFileset.setUseOrigin(boolean)",2,1,2
"fr.jayasoft.ivy.ant.IvyCachePath.execute()",3,4,5
"fr.jayasoft.ivy.ant.IvyCachePath.getPathid()",1,1,1
"fr.jayasoft.ivy.ant.IvyCachePath.setId(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyCachePath.setPathid(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyCacheTask.getAllArtifacts()",4,7,7
"fr.jayasoft.ivy.ant.IvyCacheTask.getArtifacts()",1,3,3
"fr.jayasoft.ivy.ant.IvyCheck.addFileset(FileSet)",1,1,1
"fr.jayasoft.ivy.ant.IvyCheck.execute()",1,6,7
"fr.jayasoft.ivy.ant.IvyCheck.getFile()",1,1,1
"fr.jayasoft.ivy.ant.IvyCheck.getResolvername()",1,1,1
"fr.jayasoft.ivy.ant.IvyCheck.setFile(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyCheck.setResolvername(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.Credentials.getHost()",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.Credentials.getPasswd()",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.Credentials.getRealm()",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.Credentials.getUsername()",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.Credentials.setHost(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.Credentials.setPasswd(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.Credentials.setRealm(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.Credentials.setUsername(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.addConfiguredCredentials(Credentials)",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.configureURLHandler()",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.execute()",3,6,10
"fr.jayasoft.ivy.ant.IvyConfigure.format(String)",1,3,3
"fr.jayasoft.ivy.ant.IvyConfigure.getFile()",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.getHost()",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.getPasswd()",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.getRealm()",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.getUrl()",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.getUsername()",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.loadDefaultProperties()",1,3,3
"fr.jayasoft.ivy.ant.IvyConfigure.setFile(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.setHost(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.setPasswd(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.setRealm(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.setUrl(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyConfigure.setUsername(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyConvertPom.execute()",3,2,6
"fr.jayasoft.ivy.ant.IvyConvertPom.getIvyFile()",1,1,1
"fr.jayasoft.ivy.ant.IvyConvertPom.getPomFile()",1,1,1
"fr.jayasoft.ivy.ant.IvyConvertPom.setIvyFile(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyConvertPom.setPomFile(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.DeliverDRResolver.deliverDependency(ModuleRevisionId,String,String,String)",1,3,4
"fr.jayasoft.ivy.ant.IvyDeliver.DeliverDRResolver.resolve(ModuleDescriptor,String,ModuleRevisionId,String)",7,7,9
"fr.jayasoft.ivy.ant.IvyDeliver.appendDeliveryList(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.execute()",5,10,17
"fr.jayasoft.ivy.ant.IvyDeliver.getCache()",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.getDeliverpattern()",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.getModule()",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.getOrganisation()",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.getPubdate()",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.getPubrevision()",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.getRevision()",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.getStatus()",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.isReplacedynamicrev()",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.loadDeliveryList()",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.setCache(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.setDeliverpattern(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.setDelivertarget(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.setDeliveryList(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.setModule(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.setOrganisation(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.setPubdate(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.setPubrevision(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.setReplacedynamicrev(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.setRevision(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyDeliver.setStatus(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.Ignore.getPackage()",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.Ignore.setPackage(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.addConfiguredIgnore(Ignore)",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.addConfiguredMapping(PackageMapping)",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.addFileSet(FileSet)",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.configureConcat()",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.execute()",1,7,8
"fr.jayasoft.ivy.ant.IvyExtractFromSources.getMapping(String)",4,5,6
"fr.jayasoft.ivy.ant.IvyExtractFromSources.getModule()",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.getOrganisation()",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.getRevision()",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.getStatus()",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.getTo()",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.setModule(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.setOrganisation(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.setRevision(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.setStatus(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyExtractFromSources.setTo(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyFindRevision.execute()",4,3,6
"fr.jayasoft.ivy.ant.IvyFindRevision.getBranch()",1,1,1
"fr.jayasoft.ivy.ant.IvyFindRevision.getModule()",1,1,1
"fr.jayasoft.ivy.ant.IvyFindRevision.getOrganisation()",1,1,1
"fr.jayasoft.ivy.ant.IvyFindRevision.getProperty()",1,1,1
"fr.jayasoft.ivy.ant.IvyFindRevision.getRevision()",1,1,1
"fr.jayasoft.ivy.ant.IvyFindRevision.setBranch(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyFindRevision.setModule(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyFindRevision.setOrganisation(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyFindRevision.setProperty(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyFindRevision.setRevision(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyInfo.execute()",1,6,8
"fr.jayasoft.ivy.ant.IvyInfo.getFile()",1,1,1
"fr.jayasoft.ivy.ant.IvyInfo.setFile(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.execute()",6,8,14
"fr.jayasoft.ivy.ant.IvyInstall.getCache()",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.getFrom()",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.getMatcher()",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.getModule()",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.getOrganisation()",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.getRevision()",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.getTo()",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.getType()",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.isOverwrite()",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.isTransitive()",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.setCache(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.setFrom(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.setMatcher(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.setModule(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.setOrganisation(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.setOverwrite(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.setRevision(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.setTo(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.setTransitive(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyInstall.setType(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyListModules.execute()",6,2,7
"fr.jayasoft.ivy.ant.IvyListModules.getBranch()",1,1,1
"fr.jayasoft.ivy.ant.IvyListModules.getMatcher()",1,1,1
"fr.jayasoft.ivy.ant.IvyListModules.getModule()",1,1,1
"fr.jayasoft.ivy.ant.IvyListModules.getOrganisation()",1,1,1
"fr.jayasoft.ivy.ant.IvyListModules.getProperty()",1,1,1
"fr.jayasoft.ivy.ant.IvyListModules.getRevision()",1,1,1
"fr.jayasoft.ivy.ant.IvyListModules.getValue()",1,1,1
"fr.jayasoft.ivy.ant.IvyListModules.setBranch(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyListModules.setMatcher(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyListModules.setModule(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyListModules.setOrganisation(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyListModules.setProperty(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyListModules.setRevision(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyListModules.setValue(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.getArtifactFilter()",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.getCache()",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.getConf()",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.getModule()",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.getOrganisation()",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.getResolvedModuleId()",1,2,2
"fr.jayasoft.ivy.ant.IvyPostResolveTask.getResolvedReport()",1,2,2
"fr.jayasoft.ivy.ant.IvyPostResolveTask.getRevision()",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.getType()",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.isHaltonfailure()",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.isInline()",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.isTransitive()",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.isUseOrigin()",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.prepareAndCheck()",9,6,13
"fr.jayasoft.ivy.ant.IvyPostResolveTask.setCache(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.setConf(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.setHaltonfailure(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.setInline(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.setModule(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.setOrganisation(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.setRevision(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.setTransitive(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.setType(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPostResolveTask.setUseOrigin(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.getAttribute(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.getAttributes()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.getConfigurations()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.getExt()",1,1,2
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.getExtraAttribute(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.getExtraAttributes()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.getId()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.getModuleRevisionId()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.getName()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.getPublicationDate()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.getStandardAttribute(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.getStandardAttributes()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.getType()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.getUrl()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.setExt(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.setName(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.PublishArtifact.setType(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.appendDeliveryList(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.createArtifact()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.execute()",8,14,24
"fr.jayasoft.ivy.ant.IvyPublish.getArtifactspattern()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.getCache()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.getDeliverivypattern()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.getModule()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.getOrganisation()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.getPubdate()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.getPubrevision()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.getResolver()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.getRevision()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.getSrcivypattern()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.getStatus()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.isForcedeliver()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.isHaltonmissing()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.isOverwrite()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.isPublishivy()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.isReplacedynamicrev()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.isUpdate()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.isWarnonmissing()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.loadDeliveryList()",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setArtifactspattern(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setCache(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setConf(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setDeliverivypattern(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setDelivertarget(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setDeliveryList(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setForcedeliver(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setHaltonmissing(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setModule(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setOrganisation(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setOverwrite(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setPubdate(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setPublishivy(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setPubrevision(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setReplacedynamicrev(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setResolver(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setRevision(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setSrcivypattern(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setStatus(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setUpdate(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyPublish.setWarnonmissing(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.createParam()",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.execute()",5,12,19
"fr.jayasoft.ivy.ant.IvyReport.genStyled(File,String,String,String[],String,String)",1,3,4
"fr.jayasoft.ivy.ant.IvyReport.genreport(File,String,String,String[])",1,3,4
"fr.jayasoft.ivy.ant.IvyReport.genxml(File,String,String,String[])",1,3,3
"fr.jayasoft.ivy.ant.IvyReport.getCache()",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.getConf()",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.getModule()",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.getOrganisation()",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.getOutputpattern()",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.getReportStylePath(File)",2,1,2
"fr.jayasoft.ivy.ant.IvyReport.getStylePath(File,String)",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.getTodir()",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.getXslext()",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.getXslfile()",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.isDot()",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.isGraph()",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.isXml()",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.isXsl()",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.setCache(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.setConf(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.setDot(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.setGraph(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.setModule(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.setOrganisation(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.setOutputpattern(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.setTodir(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.setXml(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.setXsl(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.setXslext(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyReport.setXslfile(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.createParam()",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.execute()",3,9,15
"fr.jayasoft.ivy.ant.IvyRepositoryReport.gen(File,String,String,String,String)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.gendot(File,String,String)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.gengraph(File,String,String)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.genreport(File,String,String)",1,2,2
"fr.jayasoft.ivy.ant.IvyRepositoryReport.getBranch()",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.getCache()",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.getDotStylePath(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.getGraphStylePath(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.getMatcher()",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.getModule()",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.getOrganisation()",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.getOutputname()",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.getRevision()",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.getTodir()",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.getXslext()",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.getXslfile()",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.isDot()",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.isGraph()",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.isXml()",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.isXsl()",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.setBranch(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.setCache(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.setDot(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.setGraph(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.setMatcher(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.setModule(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.setOrganisation(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.setOutputname(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.setRevision(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.setTodir(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.setXml(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.setXsl(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.setXslext(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyRepositoryReport.setXslfile(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.execute()",9,9,18
"fr.jayasoft.ivy.ant.IvyResolve.getCache()",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.getConf()",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.getDate()",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.getFailureProperty()",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.getFile()",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.getModule()",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.getOrganisation()",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.getRevision()",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.getType()",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.isChanging()",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.isHaltonfailure()",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.isInline()",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.isKeep()",1,2,2
"fr.jayasoft.ivy.ant.IvyResolve.isTransitive()",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.isUseCacheOnly()",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.isUseOrigin()",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setCache(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setChanging(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setConf(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setDate(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setFailurePropery(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setFile(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setHaltonfailure(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setInline(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setKeep(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setModule(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setOrganisation(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setRevision(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setShowprogress(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setTransitive(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setType(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setUseCacheOnly(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyResolve.setUseOrigin(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyRetrieve.execute()",1,1,2
"fr.jayasoft.ivy.ant.IvyRetrieve.getIvypattern()",1,1,1
"fr.jayasoft.ivy.ant.IvyRetrieve.getPattern()",1,1,1
"fr.jayasoft.ivy.ant.IvyRetrieve.isSync()",1,1,1
"fr.jayasoft.ivy.ant.IvyRetrieve.setIvypattern(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyRetrieve.setPattern(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyRetrieve.setSync(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyTask.createResolve(boolean,boolean)",1,2,2
"fr.jayasoft.ivy.ant.IvyTask.doValidate(Ivy)",2,2,2
"fr.jayasoft.ivy.ant.IvyTask.ensureMessageInitialised()",1,2,2
"fr.jayasoft.ivy.ant.IvyTask.ensureResolved(boolean,boolean,String,String)",1,1,1
"fr.jayasoft.ivy.ant.IvyTask.ensureResolved(boolean,boolean,boolean,String,String,String)",2,2,4
"fr.jayasoft.ivy.ant.IvyTask.getConfsToResolve(String,String,String,boolean)",4,5,5
"fr.jayasoft.ivy.ant.IvyTask.getIvyInstance()",4,5,7
"fr.jayasoft.ivy.ant.IvyTask.getProperty(Ivy,String)",1,3,3
"fr.jayasoft.ivy.ant.IvyTask.getProperty(String,Ivy,String)",2,2,2
"fr.jayasoft.ivy.ant.IvyTask.getPubDate(String,Date)",3,2,4
"fr.jayasoft.ivy.ant.IvyTask.getReference(String,String,String,boolean)",1,3,5
"fr.jayasoft.ivy.ant.IvyTask.getResolvedConfigurations(String,String,boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyTask.getResolvedDescriptor(String,String)",1,1,1
"fr.jayasoft.ivy.ant.IvyTask.getResolvedDescriptor(String,String,boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyTask.getResolvedReport(String,String)",1,1,1
"fr.jayasoft.ivy.ant.IvyTask.getResolvedReport(String,String,boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyTask.isValidate()",1,2,2
"fr.jayasoft.ivy.ant.IvyTask.mergeConfs(String[])",1,1,1
"fr.jayasoft.ivy.ant.IvyTask.setIvyInstance(Ivy)",1,3,3
"fr.jayasoft.ivy.ant.IvyTask.setProject(Project)",1,1,1
"fr.jayasoft.ivy.ant.IvyTask.setResolved(ResolveReport,boolean)",1,2,2
"fr.jayasoft.ivy.ant.IvyTask.setValidate(boolean)",1,1,1
"fr.jayasoft.ivy.ant.IvyTask.shouldResolve(String,String)",2,1,3
"fr.jayasoft.ivy.ant.IvyTask.splitConfs(String)",1,2,2
"fr.jayasoft.ivy.ant.IvyVar.execute()",4,6,8
"fr.jayasoft.ivy.ant.IvyVar.getFile()",1,1,1
"fr.jayasoft.ivy.ant.IvyVar.getName()",1,1,1
"fr.jayasoft.ivy.ant.IvyVar.getPrefix()",1,1,1
"fr.jayasoft.ivy.ant.IvyVar.getUrl()",1,1,1
"fr.jayasoft.ivy.ant.IvyVar.getValue()",1,1,1
"fr.jayasoft.ivy.ant.IvyVar.getVarName(String)",3,2,3
"fr.jayasoft.ivy.ant.IvyVar.setFile(File)",1,1,1
"fr.jayasoft.ivy.ant.IvyVar.setName(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyVar.setPrefix(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyVar.setUrl(String)",1,1,1
"fr.jayasoft.ivy.ant.IvyVar.setValue(String)",1,1,1
"fr.jayasoft.ivy.ant.PackageMapping.getModule()",1,1,1
"fr.jayasoft.ivy.ant.PackageMapping.getModuleRevisionId()",1,1,1
"fr.jayasoft.ivy.ant.PackageMapping.getOrganisation()",1,1,1
"fr.jayasoft.ivy.ant.PackageMapping.getPackage()",1,1,1
"fr.jayasoft.ivy.ant.PackageMapping.getRevision()",1,1,1
"fr.jayasoft.ivy.ant.PackageMapping.setModule(String)",1,1,1
"fr.jayasoft.ivy.ant.PackageMapping.setOrganisation(String)",1,1,1
"fr.jayasoft.ivy.ant.PackageMapping.setPackage(String)",1,1,1
"fr.jayasoft.ivy.ant.PackageMapping.setRevision(String)",1,1,1
"fr.jayasoft.ivy.circular.AbstractCircularDependencyStrategy.AbstractCircularDependencyStrategy(String)",1,1,1
"fr.jayasoft.ivy.circular.AbstractCircularDependencyStrategy.getName()",1,1,1
"fr.jayasoft.ivy.circular.AbstractCircularDependencyStrategy.toString()",1,1,1
"fr.jayasoft.ivy.circular.CircularDependencyException.CircularDependencyException(ModuleRevisionId[])",1,1,1
"fr.jayasoft.ivy.circular.CircularDependencyException.getPath()",1,1,1
"fr.jayasoft.ivy.circular.CircularDependencyHelper.formatMessage(ModuleDescriptor[])",1,1,1
"fr.jayasoft.ivy.circular.CircularDependencyHelper.formatMessage(ModuleRevisionId[])",1,2,2
"fr.jayasoft.ivy.circular.CircularDependencyHelper.toMrids(ModuleDescriptor[])",1,2,2
"fr.jayasoft.ivy.circular.ErrorCircularDependencyStrategy.ErrorCircularDependencyStrategy()",1,1,1
"fr.jayasoft.ivy.circular.ErrorCircularDependencyStrategy.getInstance()",1,1,1
"fr.jayasoft.ivy.circular.ErrorCircularDependencyStrategy.handleCircularDependency(ModuleRevisionId[])",1,1,1
"fr.jayasoft.ivy.circular.IgnoreCircularDependencyStrategy.IgnoreCircularDependencyStrategy()",1,1,1
"fr.jayasoft.ivy.circular.IgnoreCircularDependencyStrategy.getInstance()",1,1,1
"fr.jayasoft.ivy.circular.IgnoreCircularDependencyStrategy.handleCircularDependency(ModuleRevisionId[])",1,1,1
"fr.jayasoft.ivy.circular.WarnCircularDependencyStrategy.WarnCircularDependencyStrategy()",1,1,1
"fr.jayasoft.ivy.circular.WarnCircularDependencyStrategy.getInstance()",1,1,1
"fr.jayasoft.ivy.circular.WarnCircularDependencyStrategy.handleCircularDependency(ModuleRevisionId[])",1,1,1
"fr.jayasoft.ivy.conflict.AbstractConflictManager.getIvy()",1,1,1
"fr.jayasoft.ivy.conflict.AbstractConflictManager.getName()",1,1,1
"fr.jayasoft.ivy.conflict.AbstractConflictManager.setIvy(Ivy)",1,1,1
"fr.jayasoft.ivy.conflict.AbstractConflictManager.setName(String)",1,1,1
"fr.jayasoft.ivy.conflict.AbstractConflictManager.toString()",1,1,1
"fr.jayasoft.ivy.conflict.FixedConflictManager.FixedConflictManager(String[])",1,1,1
"fr.jayasoft.ivy.conflict.FixedConflictManager.getRevs()",1,1,1
"fr.jayasoft.ivy.conflict.FixedConflictManager.resolveConflicts(IvyNode,Collection)",1,3,3
"fr.jayasoft.ivy.conflict.LatestConflictManager.IvyNodeArtifactInfo.IvyNodeArtifactInfo(IvyNode)",1,1,1
"fr.jayasoft.ivy.conflict.LatestConflictManager.IvyNodeArtifactInfo.getLastModified()",1,1,1
"fr.jayasoft.ivy.conflict.LatestConflictManager.IvyNodeArtifactInfo.getNode()",1,1,1
"fr.jayasoft.ivy.conflict.LatestConflictManager.IvyNodeArtifactInfo.getRevision()",1,1,1
"fr.jayasoft.ivy.conflict.LatestConflictManager.LatestConflictManager()",1,1,1
"fr.jayasoft.ivy.conflict.LatestConflictManager.LatestConflictManager(LatestStrategy)",1,1,1
"fr.jayasoft.ivy.conflict.LatestConflictManager.LatestConflictManager(String,LatestStrategy)",1,1,1
"fr.jayasoft.ivy.conflict.LatestConflictManager.getStrategy()",1,4,4
"fr.jayasoft.ivy.conflict.LatestConflictManager.resolveConflicts(IvyNode,Collection)",5,6,7
"fr.jayasoft.ivy.conflict.LatestConflictManager.setLatest(String)",1,1,1
"fr.jayasoft.ivy.conflict.LatestConflictManager.setStrategy(LatestStrategy)",1,1,1
"fr.jayasoft.ivy.conflict.LatestConflictManager.toArtifactInfo(Collection)",1,2,2
"fr.jayasoft.ivy.conflict.LatestConflictManager.toString()",1,1,1
"fr.jayasoft.ivy.conflict.NoConflictManager.NoConflictManager()",1,1,1
"fr.jayasoft.ivy.conflict.NoConflictManager.resolveConflicts(IvyNode,Collection)",1,1,1
"fr.jayasoft.ivy.conflict.RegexpConflictManager.RegexpConflictManager()",1,1,1
"fr.jayasoft.ivy.conflict.RegexpConflictManager.getMatch(IvyNode)",3,2,3
"fr.jayasoft.ivy.conflict.RegexpConflictManager.matchEquals(IvyNode,IvyNode)",1,1,1
"fr.jayasoft.ivy.conflict.RegexpConflictManager.nodeIsGreater(IvyNode,IvyNode)",1,1,1
"fr.jayasoft.ivy.conflict.RegexpConflictManager.resolveConflicts(IvyNode,Collection)",3,5,6
"fr.jayasoft.ivy.conflict.RegexpConflictManager.setIgnoreNonMatching(boolean)",1,1,1
"fr.jayasoft.ivy.conflict.RegexpConflictManager.setRegexp(String)",2,2,2
"fr.jayasoft.ivy.conflict.RegexpConflictManager.warnOrThrow(String)",2,2,2
"fr.jayasoft.ivy.conflict.StrictConflictException.StrictConflictException()",1,1,1
"fr.jayasoft.ivy.conflict.StrictConflictException.StrictConflictException(String)",1,1,1
"fr.jayasoft.ivy.conflict.StrictConflictException.StrictConflictException(String,Throwable)",1,1,1
"fr.jayasoft.ivy.conflict.StrictConflictException.StrictConflictException(Throwable)",1,1,1
"fr.jayasoft.ivy.conflict.StrictConflictManager.StrictConflictManager()",1,1,1
"fr.jayasoft.ivy.conflict.StrictConflictManager.resolveConflicts(IvyNode,Collection)",3,4,4
"fr.jayasoft.ivy.event.AbstractTrigger.createFilter()",1,1,1
"fr.jayasoft.ivy.event.AbstractTrigger.getEvent()",1,1,1
"fr.jayasoft.ivy.event.AbstractTrigger.getEventFilter()",1,2,2
"fr.jayasoft.ivy.event.AbstractTrigger.getFilter()",1,1,1
"fr.jayasoft.ivy.event.AbstractTrigger.getMatcher()",1,1,1
"fr.jayasoft.ivy.event.AbstractTrigger.getPatternMatcher()",1,1,1
"fr.jayasoft.ivy.event.AbstractTrigger.setEvent(String)",1,1,1
"fr.jayasoft.ivy.event.AbstractTrigger.setFilter(String)",1,1,1
"fr.jayasoft.ivy.event.AbstractTrigger.setMatcher(String)",1,1,1
"fr.jayasoft.ivy.event.FilteredIvyListener.FilteredIvyListener(IvyListener,Filter)",1,1,1
"fr.jayasoft.ivy.event.FilteredIvyListener.getFilter()",1,1,1
"fr.jayasoft.ivy.event.FilteredIvyListener.getIvyListener()",1,1,1
"fr.jayasoft.ivy.event.FilteredIvyListener.progress(IvyEvent)",1,2,2
"fr.jayasoft.ivy.event.IvyEvent.IvyEvent(Ivy,String)",1,1,1
"fr.jayasoft.ivy.event.IvyEvent.addAttribute(String,String)",1,1,1
"fr.jayasoft.ivy.event.IvyEvent.addAttributes(Map)",1,1,1
"fr.jayasoft.ivy.event.IvyEvent.addConfsAttribute(String[])",1,1,1
"fr.jayasoft.ivy.event.IvyEvent.addMDAttributes(ModuleDescriptor)",1,1,1
"fr.jayasoft.ivy.event.IvyEvent.addModuleIdAttributes(ModuleId)",1,1,1
"fr.jayasoft.ivy.event.IvyEvent.addMridAttributes(ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.event.IvyEvent.equals(Object)",2,3,4
"fr.jayasoft.ivy.event.IvyEvent.getAttributes()",1,1,1
"fr.jayasoft.ivy.event.IvyEvent.getName()",1,1,1
"fr.jayasoft.ivy.event.IvyEvent.getSource()",1,1,1
"fr.jayasoft.ivy.event.IvyEvent.hashCode()",1,1,1
"fr.jayasoft.ivy.event.IvyEvent.toString()",1,1,1
"fr.jayasoft.ivy.event.IvyEventFilter.IvyEventFilter(String,String,PatternMatcher)",1,5,5
"fr.jayasoft.ivy.event.IvyEventFilter.accept(Object)",2,2,3
"fr.jayasoft.ivy.event.IvyEventFilter.parseExpression(String)",8,6,9
"fr.jayasoft.ivy.event.download.DownloadEvent.DownloadEvent(Ivy,String,Artifact)",1,1,1
"fr.jayasoft.ivy.event.download.DownloadEvent.addArtifactAttributes(Artifact)",1,1,1
"fr.jayasoft.ivy.event.download.DownloadEvent.getArtifact()",1,1,1
"fr.jayasoft.ivy.event.download.EndArtifactDownloadEvent.EndArtifactDownloadEvent(Ivy,DependencyResolver,Artifact,ArtifactDownloadReport,File)",1,2,2
"fr.jayasoft.ivy.event.download.EndArtifactDownloadEvent.getReport()",1,1,1
"fr.jayasoft.ivy.event.download.EndArtifactDownloadEvent.getResolver()",1,1,1
"fr.jayasoft.ivy.event.download.NeedArtifactEvent.NeedArtifactEvent(Ivy,DependencyResolver,Artifact)",1,1,1
"fr.jayasoft.ivy.event.download.NeedArtifactEvent.getResolver()",1,1,1
"fr.jayasoft.ivy.event.download.PrepareDownloadEvent.PrepareDownloadEvent(Ivy,Artifact[])",1,1,1
"fr.jayasoft.ivy.event.download.PrepareDownloadEvent.getArtifacts()",1,1,1
"fr.jayasoft.ivy.event.download.StartArtifactDownloadEvent.StartArtifactDownloadEvent(Ivy,DependencyResolver,Artifact,ArtifactOrigin)",1,1,1
"fr.jayasoft.ivy.event.download.StartArtifactDownloadEvent.getOrigin()",1,1,1
"fr.jayasoft.ivy.event.download.StartArtifactDownloadEvent.getResolver()",1,1,1
"fr.jayasoft.ivy.event.resolve.EndResolveDependencyEvent.EndResolveDependencyEvent(Ivy,DependencyResolver,DependencyDescriptor,ResolvedModuleRevision)",1,2,2
"fr.jayasoft.ivy.event.resolve.EndResolveDependencyEvent.getModule()",1,1,1
"fr.jayasoft.ivy.event.resolve.EndResolveEvent.EndResolveEvent(Ivy,ModuleDescriptor,String[],ResolveReport)",1,1,1
"fr.jayasoft.ivy.event.resolve.EndResolveEvent.getReport()",1,1,1
"fr.jayasoft.ivy.event.resolve.ResolveDependencyEvent.ResolveDependencyEvent(Ivy,String,DependencyResolver,DependencyDescriptor)",1,1,1
"fr.jayasoft.ivy.event.resolve.ResolveDependencyEvent.getDependencyDescriptor()",1,1,1
"fr.jayasoft.ivy.event.resolve.ResolveDependencyEvent.getResolver()",1,1,1
"fr.jayasoft.ivy.event.resolve.ResolveEvent.ResolveEvent(Ivy,String,ModuleDescriptor,String[])",1,1,1
"fr.jayasoft.ivy.event.resolve.ResolveEvent.getModuleDescriptor()",1,1,1
"fr.jayasoft.ivy.event.resolve.StartResolveDependencyEvent.StartResolveDependencyEvent(Ivy,DependencyResolver,DependencyDescriptor)",1,1,1
"fr.jayasoft.ivy.event.resolve.StartResolveEvent.StartResolveEvent(Ivy,ModuleDescriptor,String[])",1,1,1
"fr.jayasoft.ivy.extendable.DefaultExtendableItem.DefaultExtendableItem()",1,1,1
"fr.jayasoft.ivy.extendable.DefaultExtendableItem.DefaultExtendableItem(Map,Map)",1,1,1
"fr.jayasoft.ivy.extendable.DefaultExtendableItem.setAttribute(String,String,boolean)",1,1,1
"fr.jayasoft.ivy.extendable.DefaultExtendableItem.setExtraAttribute(String,String)",1,1,1
"fr.jayasoft.ivy.extendable.DefaultExtendableItem.setStandardAttribute(String,String)",1,1,1
"fr.jayasoft.ivy.extendable.ExtendableItemHelper.fillExtraAttributes(DefaultExtendableItem,Attributes,String[])",1,2,2
"fr.jayasoft.ivy.extendable.ExtendableItemHelper.getExtraAttributes(Attributes,String)",1,3,3
"fr.jayasoft.ivy.extendable.ExtendableItemHelper.getExtraAttributes(Attributes,String[])",1,3,3
"fr.jayasoft.ivy.extendable.UnmodifiableExtendableItem.UnmodifiableExtendableItem(Map,Map)",1,3,3
"fr.jayasoft.ivy.extendable.UnmodifiableExtendableItem.getAttribute(String)",1,1,1
"fr.jayasoft.ivy.extendable.UnmodifiableExtendableItem.getAttributes()",1,1,1
"fr.jayasoft.ivy.extendable.UnmodifiableExtendableItem.getExtraAttribute(String)",1,1,1
"fr.jayasoft.ivy.extendable.UnmodifiableExtendableItem.getExtraAttributes()",1,1,1
"fr.jayasoft.ivy.extendable.UnmodifiableExtendableItem.getStandardAttribute(String)",1,1,1
"fr.jayasoft.ivy.extendable.UnmodifiableExtendableItem.getStandardAttributes()",1,1,1
"fr.jayasoft.ivy.extendable.UnmodifiableExtendableItem.setAttribute(String,String,boolean)",1,2,2
"fr.jayasoft.ivy.extendable.UnmodifiableExtendableItem.setExtraAttribute(String,String)",1,1,1
"fr.jayasoft.ivy.extendable.UnmodifiableExtendableItem.setStandardAttribute(String,String)",1,1,1
"fr.jayasoft.ivy.external.m2.PomModuleDescriptorParser.Parser.Parser(ModuleDescriptorParser,Ivy,Resource)",1,2,2
"fr.jayasoft.ivy.external.m2.PomModuleDescriptorParser.Parser.characters(char[],int,int)",4,12,16
"fr.jayasoft.ivy.external.m2.PomModuleDescriptorParser.Parser.endElement(String,String,String)",1,15,21
"fr.jayasoft.ivy.external.m2.PomModuleDescriptorParser.Parser.fillMrid()",3,1,4
"fr.jayasoft.ivy.external.m2.PomModuleDescriptorParser.Parser.getContext()",1,3,3
"fr.jayasoft.ivy.external.m2.PomModuleDescriptorParser.Parser.getDescriptor()",2,1,2
"fr.jayasoft.ivy.external.m2.PomModuleDescriptorParser.Parser.startElement(String,String,String,Attributes)",1,6,6
"fr.jayasoft.ivy.external.m2.PomModuleDescriptorParser.PomModuleDescriptorParser()",1,1,1
"fr.jayasoft.ivy.external.m2.PomModuleDescriptorParser.accept(Resource)",1,3,3
"fr.jayasoft.ivy.external.m2.PomModuleDescriptorParser.getInstance()",1,1,1
"fr.jayasoft.ivy.external.m2.PomModuleDescriptorParser.parseDescriptor(Ivy,URL,Resource,boolean)",1,3,3
"fr.jayasoft.ivy.external.m2.PomModuleDescriptorParser.toIvyFile(InputStream,Resource,File,ModuleDescriptor)",1,1,1
"fr.jayasoft.ivy.external.m2.PomModuleDescriptorParser.toString()",1,1,1
"fr.jayasoft.ivy.filter.AndFilter.AndFilter(Filter,Filter)",1,1,1
"fr.jayasoft.ivy.filter.AndFilter.accept(Object)",1,2,2
"fr.jayasoft.ivy.filter.AndFilter.getOp1()",1,1,1
"fr.jayasoft.ivy.filter.AndFilter.getOp2()",1,1,1
"fr.jayasoft.ivy.filter.ArtifactTypeFilter.ArtifactTypeFilter(Collection)",1,1,1
"fr.jayasoft.ivy.filter.ArtifactTypeFilter.accept(Object)",2,1,2
"fr.jayasoft.ivy.filter.FilterHelper.filter(Collection,Filter)",2,3,4
"fr.jayasoft.ivy.filter.FilterHelper.getArtifactTypeFilter(String)",2,3,4
"fr.jayasoft.ivy.filter.NoFilter.NoFilter()",1,1,1
"fr.jayasoft.ivy.filter.NoFilter.accept(Object)",1,1,1
"fr.jayasoft.ivy.filter.NotFilter.NotFilter(Filter)",1,1,1
"fr.jayasoft.ivy.filter.NotFilter.accept(Object)",1,1,1
"fr.jayasoft.ivy.filter.NotFilter.getOp()",1,1,1
"fr.jayasoft.ivy.filter.OrFilter.OrFilter(Filter,Filter)",1,1,1
"fr.jayasoft.ivy.filter.OrFilter.accept(Object)",1,2,2
"fr.jayasoft.ivy.filter.OrFilter.getOp1()",1,1,1
"fr.jayasoft.ivy.filter.OrFilter.getOp2()",1,1,1
"fr.jayasoft.ivy.latest.AbstractLatestStrategy.findLatest(ArtifactInfo[],Date)",3,3,4
"fr.jayasoft.ivy.latest.AbstractLatestStrategy.getIvy()",1,1,1
"fr.jayasoft.ivy.latest.AbstractLatestStrategy.getName()",1,1,1
"fr.jayasoft.ivy.latest.AbstractLatestStrategy.setIvy(Ivy)",1,1,1
"fr.jayasoft.ivy.latest.AbstractLatestStrategy.setName(String)",1,1,1
"fr.jayasoft.ivy.latest.AbstractLatestStrategy.toString()",1,1,1
"fr.jayasoft.ivy.latest.ComparatorLatestStrategy.ComparatorLatestStrategy()",1,1,1
"fr.jayasoft.ivy.latest.ComparatorLatestStrategy.ComparatorLatestStrategy(Comparator)",1,1,1
"fr.jayasoft.ivy.latest.ComparatorLatestStrategy.findLatest(ArtifactInfo[],Date)",6,5,7
"fr.jayasoft.ivy.latest.ComparatorLatestStrategy.getComparator()",1,1,1
"fr.jayasoft.ivy.latest.ComparatorLatestStrategy.setComparator(Comparator)",1,1,1
"fr.jayasoft.ivy.latest.ComparatorLatestStrategy.sort(ArtifactInfo[])",1,1,1
"fr.jayasoft.ivy.latest.LatestLexicographicStrategy.LatestLexicographicStrategy()",1,1,1
"fr.jayasoft.ivy.latest.LatestRevisionStrategy.LatestRevisionStrategy()",1,1,1
"fr.jayasoft.ivy.latest.LatestRevisionStrategy.SpecialMeaning.getName()",1,1,1
"fr.jayasoft.ivy.latest.LatestRevisionStrategy.SpecialMeaning.getValue()",1,1,1
"fr.jayasoft.ivy.latest.LatestRevisionStrategy.SpecialMeaning.setName(String)",1,1,1
"fr.jayasoft.ivy.latest.LatestRevisionStrategy.SpecialMeaning.setValue(Integer)",1,1,1
"fr.jayasoft.ivy.latest.LatestRevisionStrategy.SpecialMeaning.validate()",3,1,3
"fr.jayasoft.ivy.latest.LatestRevisionStrategy.addConfiguredSpecialMeaning(SpecialMeaning)",1,1,1
"fr.jayasoft.ivy.latest.LatestRevisionStrategy.getSpecialMeanings()",1,3,3
"fr.jayasoft.ivy.latest.LatestRevisionStrategy.isUsedefaultspecialmeanings()",1,1,1
"fr.jayasoft.ivy.latest.LatestRevisionStrategy.setUsedefaultspecialmeanings(boolean)",1,1,1
"fr.jayasoft.ivy.latest.LatestTimeStrategy.LatestTimeStrategy()",1,1,1
"fr.jayasoft.ivy.matcher.AnyMatcher.AnyMatcher()",1,1,1
"fr.jayasoft.ivy.matcher.AnyMatcher.getInstance()",1,1,1
"fr.jayasoft.ivy.matcher.AnyMatcher.isExact()",1,1,1
"fr.jayasoft.ivy.matcher.AnyMatcher.matches(String)",1,1,1
"fr.jayasoft.ivy.matcher.ExactOrRegexpPatternMatcher.ExactOrRegexpMatcher.ExactOrRegexpMatcher(String)",1,1,1
"fr.jayasoft.ivy.matcher.ExactOrRegexpPatternMatcher.ExactOrRegexpMatcher.isExact()",1,1,1
"fr.jayasoft.ivy.matcher.ExactOrRegexpPatternMatcher.ExactOrRegexpMatcher.matches(String)",1,2,2
"fr.jayasoft.ivy.matcher.ExactOrRegexpPatternMatcher.ExactOrRegexpPatternMatcher()",1,1,1
"fr.jayasoft.ivy.matcher.ExactOrRegexpPatternMatcher.getInstance()",1,1,1
"fr.jayasoft.ivy.matcher.ExactOrRegexpPatternMatcher.getMatcher(String)",2,2,2
"fr.jayasoft.ivy.matcher.ExactOrRegexpPatternMatcher.getName()",1,1,1
"fr.jayasoft.ivy.matcher.ExactPatternMatcher.ExactMatcher.ExactMatcher(String)",1,1,1
"fr.jayasoft.ivy.matcher.ExactPatternMatcher.ExactMatcher.isExact()",1,1,1
"fr.jayasoft.ivy.matcher.ExactPatternMatcher.ExactMatcher.matches(String)",1,2,2
"fr.jayasoft.ivy.matcher.ExactPatternMatcher.ExactPatternMatcher()",1,1,1
"fr.jayasoft.ivy.matcher.ExactPatternMatcher.getInstance()",1,1,1
"fr.jayasoft.ivy.matcher.ExactPatternMatcher.getMatcher(String)",2,2,2
"fr.jayasoft.ivy.matcher.ExactPatternMatcher.getName()",1,1,1
"fr.jayasoft.ivy.matcher.GlobPatternMatcher.GlobMatcher.GlobMatcher(String)",1,2,2
"fr.jayasoft.ivy.matcher.GlobPatternMatcher.GlobMatcher.isExact()",1,1,1
"fr.jayasoft.ivy.matcher.GlobPatternMatcher.GlobMatcher.matches(String)",1,2,2
"fr.jayasoft.ivy.matcher.GlobPatternMatcher.GlobPatternMatcher()",1,1,1
"fr.jayasoft.ivy.matcher.GlobPatternMatcher.getInstance()",1,1,1
"fr.jayasoft.ivy.matcher.GlobPatternMatcher.getMatcher(String)",2,2,2
"fr.jayasoft.ivy.matcher.GlobPatternMatcher.getName()",1,1,1
"fr.jayasoft.ivy.matcher.MatcherHelper.isExact(PatternMatcher,ModuleId)",1,2,2
"fr.jayasoft.ivy.matcher.MatcherHelper.isExact(PatternMatcher,ModuleRevisionId)",1,3,3
"fr.jayasoft.ivy.matcher.MatcherHelper.isExact(PatternMatcher,String)",1,1,1
"fr.jayasoft.ivy.matcher.MatcherHelper.matches(PatternMatcher,ArtifactId,ArtifactId)",1,5,5
"fr.jayasoft.ivy.matcher.MatcherHelper.matches(PatternMatcher,ModuleId,ModuleId)",1,2,2
"fr.jayasoft.ivy.matcher.MatcherHelper.matches(PatternMatcher,ModuleRevisionId,ModuleRevisionId)",1,3,3
"fr.jayasoft.ivy.matcher.MatcherHelper.matches(PatternMatcher,String,String)",1,1,1
"fr.jayasoft.ivy.matcher.ModuleIdMatcher.ModuleIdMatcher(ModuleId,PatternMatcher)",1,1,1
"fr.jayasoft.ivy.matcher.ModuleIdMatcher.matches(ModuleId)",1,2,2
"fr.jayasoft.ivy.matcher.ModuleIdMatcher.toString()",1,1,1
"fr.jayasoft.ivy.matcher.NoMatcher.NoMatcher()",1,1,1
"fr.jayasoft.ivy.matcher.NoMatcher.getInstance()",1,1,1
"fr.jayasoft.ivy.matcher.NoMatcher.isExact()",1,1,1
"fr.jayasoft.ivy.matcher.NoMatcher.matches(String)",1,1,1
"fr.jayasoft.ivy.matcher.RegexpPatternMatcher.RegexpMatcher.RegexpMatcher(String)",1,1,1
"fr.jayasoft.ivy.matcher.RegexpPatternMatcher.RegexpMatcher.isExact()",1,1,1
"fr.jayasoft.ivy.matcher.RegexpPatternMatcher.RegexpMatcher.matches(String)",1,1,1
"fr.jayasoft.ivy.matcher.RegexpPatternMatcher.RegexpPatternMatcher()",1,1,1
"fr.jayasoft.ivy.matcher.RegexpPatternMatcher.getInstance()",1,1,1
"fr.jayasoft.ivy.matcher.RegexpPatternMatcher.getMatcher(String)",2,2,2
"fr.jayasoft.ivy.matcher.RegexpPatternMatcher.getName()",1,1,1
"fr.jayasoft.ivy.matcher.RegexpPatternMatcher.match(String,String)",2,1,2
"fr.jayasoft.ivy.namespace.MRIDRule.MRIDRule()",1,1,1
"fr.jayasoft.ivy.namespace.MRIDRule.MRIDRule(String,String,String)",1,1,1
"fr.jayasoft.ivy.namespace.MRIDRule.getBranch()",1,1,1
"fr.jayasoft.ivy.namespace.MRIDRule.getModule()",1,1,1
"fr.jayasoft.ivy.namespace.MRIDRule.getOrg()",1,1,1
"fr.jayasoft.ivy.namespace.MRIDRule.getRev()",1,1,1
"fr.jayasoft.ivy.namespace.MRIDRule.setBranch(String)",1,1,1
"fr.jayasoft.ivy.namespace.MRIDRule.setModule(String)",1,1,1
"fr.jayasoft.ivy.namespace.MRIDRule.setOrg(String)",1,1,1
"fr.jayasoft.ivy.namespace.MRIDRule.setRev(String)",1,1,1
"fr.jayasoft.ivy.namespace.MRIDRule.toString()",1,1,2
"fr.jayasoft.ivy.namespace.MRIDTransformationRule.MridRuleMatcher.apply(MRIDRule,ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.namespace.MRIDTransformationRule.MridRuleMatcher.applyRules(String,String)",1,2,2
"fr.jayasoft.ivy.namespace.MRIDTransformationRule.MridRuleMatcher.applyTypeRule(String,String,String,Matcher)",3,4,7
"fr.jayasoft.ivy.namespace.MRIDTransformationRule.MridRuleMatcher.getPattern(String)",1,1,2
"fr.jayasoft.ivy.namespace.MRIDTransformationRule.MridRuleMatcher.match(MRIDRule,ModuleRevisionId)",6,2,6
"fr.jayasoft.ivy.namespace.MRIDTransformationRule.addDest(MRIDRule)",2,1,2
"fr.jayasoft.ivy.namespace.MRIDTransformationRule.addSrc(MRIDRule)",1,1,1
"fr.jayasoft.ivy.namespace.MRIDTransformationRule.isIdentity()",1,1,1
"fr.jayasoft.ivy.namespace.MRIDTransformationRule.transform(ModuleRevisionId)",3,3,3
"fr.jayasoft.ivy.namespace.NameSpaceHelper.toSystem(DependencyDescriptor,Namespace)",1,1,1
"fr.jayasoft.ivy.namespace.NameSpaceHelper.toSystem(ModuleDescriptor,Namespace)",1,1,1
"fr.jayasoft.ivy.namespace.NameSpaceHelper.toSystem(ResolvedModuleRevision,Namespace)",3,1,3
"fr.jayasoft.ivy.namespace.NameSpaceHelper.transform(Artifact,NamespaceTransformer)",3,1,3
"fr.jayasoft.ivy.namespace.NameSpaceHelper.transform(ArtifactId,NamespaceTransformer)",3,1,3
"fr.jayasoft.ivy.namespace.NameSpaceHelper.transform(DependencyDescriptor,NamespaceTransformer,boolean)",1,1,1
"fr.jayasoft.ivy.namespace.NameSpaceHelper.transform(ModuleId,NamespaceTransformer)",2,1,2
"fr.jayasoft.ivy.namespace.NameSpaceHelper.transformOrganisation(String,NamespaceTransformer)",1,1,1
"fr.jayasoft.ivy.namespace.Namespace.addRule(NamespaceRule)",1,1,1
"fr.jayasoft.ivy.namespace.Namespace.getFromSystemTransformer()",1,1,1
"fr.jayasoft.ivy.namespace.Namespace.getName()",1,1,1
"fr.jayasoft.ivy.namespace.Namespace.getToSystemTransformer()",1,1,1
"fr.jayasoft.ivy.namespace.Namespace.isChainrules()",1,1,1
"fr.jayasoft.ivy.namespace.Namespace.setChainrules(boolean)",1,1,1
"fr.jayasoft.ivy.namespace.Namespace.setName(String)",1,1,1
"fr.jayasoft.ivy.namespace.NamespaceRule.addFromsystem(MRIDTransformationRule)",2,1,2
"fr.jayasoft.ivy.namespace.NamespaceRule.addTosystem(MRIDTransformationRule)",2,1,2
"fr.jayasoft.ivy.namespace.NamespaceRule.getDescription()",1,1,1
"fr.jayasoft.ivy.namespace.NamespaceRule.getFromSystem()",1,1,1
"fr.jayasoft.ivy.namespace.NamespaceRule.getName()",1,1,1
"fr.jayasoft.ivy.namespace.NamespaceRule.getToSystem()",1,1,1
"fr.jayasoft.ivy.namespace.NamespaceRule.setDescription(String)",1,1,1
"fr.jayasoft.ivy.namespace.NamespaceRule.setName(String)",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.AbstractParser(ModuleDescriptorParser)",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.addError(String)",1,2,2
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.addExtendingConfigurations(String,DefaultDependencyDescriptor,boolean)",1,5,5
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.addExtendingConfigurations(String[],DefaultDependencyDescriptor,boolean)",1,2,2
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.checkErrors()",2,2,2
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.error(SAXParseException)",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.evaluateCondition(String,DefaultDependencyDescriptor)",7,6,11
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.fatalError(SAXParseException)",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.getDefaultConf()",1,1,3
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.getDefaultConfMapping()",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.getDefaultConfMappingDescriptor()",1,2,2
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.getDefaultPubDate()",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.getLastModified()",2,2,2
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.getLocationString(SAXParseException)",1,4,4
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.getModuleDescriptor()",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.getModuleDescriptorParser()",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.getResource()",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.parseDepsConfs(String,DefaultDependencyDescriptor)",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.parseDepsConfs(String,DefaultDependencyDescriptor,boolean)",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.parseDepsConfs(String,DefaultDependencyDescriptor,boolean,boolean)",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.parseDepsConfs(String[],DefaultDependencyDescriptor,boolean)",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.parseDepsConfs(String[],DefaultDependencyDescriptor,boolean,boolean)",1,16,16
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.setDefaultConf(String)",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.setDefaultConfMapping(String)",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.setResource(Resource)",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.AbstractParser.warning(SAXParseException)",1,1,1
"fr.jayasoft.ivy.parser.AbstractModuleDescriptorParser.parseDescriptor(Ivy,URL,boolean)",1,1,1
"fr.jayasoft.ivy.parser.ModuleDescriptorParserRegistry.ModuleDescriptorParserRegistry()",1,1,1
"fr.jayasoft.ivy.parser.ModuleDescriptorParserRegistry.accept(Resource)",1,1,1
"fr.jayasoft.ivy.parser.ModuleDescriptorParserRegistry.addParser(ModuleDescriptorParser)",1,1,1
"fr.jayasoft.ivy.parser.ModuleDescriptorParserRegistry.getInstance()",1,1,1
"fr.jayasoft.ivy.parser.ModuleDescriptorParserRegistry.getParser(Resource)",3,2,3
"fr.jayasoft.ivy.parser.ModuleDescriptorParserRegistry.getParsers()",1,1,1
"fr.jayasoft.ivy.parser.ModuleDescriptorParserRegistry.parseDescriptor(Ivy,URL,Resource,boolean)",2,2,2
"fr.jayasoft.ivy.parser.ModuleDescriptorParserRegistry.toIvyFile(InputStream,Resource,File,ModuleDescriptor)",1,2,2
"fr.jayasoft.ivy.report.ArtifactDownloadReport.ArtifactDownloadReport(Artifact)",1,1,1
"fr.jayasoft.ivy.report.ArtifactDownloadReport.getArtifact()",1,1,1
"fr.jayasoft.ivy.report.ArtifactDownloadReport.getArtifactOrigin()",1,1,1
"fr.jayasoft.ivy.report.ArtifactDownloadReport.getDownloadStatus()",1,1,1
"fr.jayasoft.ivy.report.ArtifactDownloadReport.getExt()",1,1,1
"fr.jayasoft.ivy.report.ArtifactDownloadReport.getName()",1,1,1
"fr.jayasoft.ivy.report.ArtifactDownloadReport.getSize()",1,1,1
"fr.jayasoft.ivy.report.ArtifactDownloadReport.getType()",1,1,1
"fr.jayasoft.ivy.report.ArtifactDownloadReport.setArtifactOrigin(ArtifactOrigin)",1,1,1
"fr.jayasoft.ivy.report.ArtifactDownloadReport.setDownloadStatus(DownloadStatus)",1,1,1
"fr.jayasoft.ivy.report.ArtifactDownloadReport.setSize(long)",1,1,1
"fr.jayasoft.ivy.report.ConfigurationResolveReport.ConfigurationResolveReport(Ivy,ModuleDescriptor,String,Date,File)",1,2,3
"fr.jayasoft.ivy.report.ConfigurationResolveReport.addDependency(IvyNode)",1,1,1
"fr.jayasoft.ivy.report.ConfigurationResolveReport.addDependency(IvyNode,DownloadReport)",1,3,3
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getArtifactsNumber()",1,3,3
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getConfiguration()",1,1,1
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getDate()",1,1,1
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getDependencies()",1,1,1
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getDependency(ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getDownloadReports(ModuleRevisionId)",2,1,2
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getDownloadedArtifactsReports()",1,4,4
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getDownloadedNodes()",1,4,4
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getEvictedNodes()",1,3,3
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getFailedArtifactsReports()",1,4,4
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getIvy()",1,1,1
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getModuleDescriptor()",1,1,1
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getModuleIds()",1,4,4
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getModuleRevisionIds()",1,4,4
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getNodes(ModuleId)",1,2,2
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getNodesNumber()",1,1,1
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getSearchedNodes()",1,4,4
"fr.jayasoft.ivy.report.ConfigurationResolveReport.getUnresolvedDependencies()",1,3,3
"fr.jayasoft.ivy.report.ConfigurationResolveReport.hasChanged()",2,1,2
"fr.jayasoft.ivy.report.ConfigurationResolveReport.hasError()",1,2,2
"fr.jayasoft.ivy.report.DownloadReport.addArtifactReport(ArtifactDownloadReport)",1,1,1
"fr.jayasoft.ivy.report.DownloadReport.getArtifactReport(Artifact)",1,1,1
"fr.jayasoft.ivy.report.DownloadReport.getArtifactsReports()",1,1,1
"fr.jayasoft.ivy.report.DownloadReport.getArtifactsReports(DownloadStatus)",1,3,3
"fr.jayasoft.ivy.report.DownloadStatus.DownloadStatus(String)",1,1,1
"fr.jayasoft.ivy.report.DownloadStatus.toString()",1,1,1
"fr.jayasoft.ivy.report.LogReportOutputter.append(StringBuffer,Object,int)",1,2,2
"fr.jayasoft.ivy.report.LogReportOutputter.getName()",1,1,1
"fr.jayasoft.ivy.report.LogReportOutputter.output(ConfigurationResolveReport)",1,1,1
"fr.jayasoft.ivy.report.LogReportOutputter.output(ResolveReport,File)",1,13,13
"fr.jayasoft.ivy.report.ResolveReport.ResolveReport(ModuleDescriptor)",1,1,1
"fr.jayasoft.ivy.report.ResolveReport.addReport(String,ConfigurationResolveReport)",1,1,1
"fr.jayasoft.ivy.report.ResolveReport.getAllProblemMessages()",1,9,9
"fr.jayasoft.ivy.report.ResolveReport.getArtifacts()",1,1,1
"fr.jayasoft.ivy.report.ResolveReport.getConfigurationReport(String)",1,1,1
"fr.jayasoft.ivy.report.ResolveReport.getConfigurations()",1,1,1
"fr.jayasoft.ivy.report.ResolveReport.getDependencies()",1,1,1
"fr.jayasoft.ivy.report.ResolveReport.getDownloadTime()",1,1,1
"fr.jayasoft.ivy.report.ResolveReport.getEvictedNodes()",1,2,2
"fr.jayasoft.ivy.report.ResolveReport.getFailedArtifactsReports()",1,2,2
"fr.jayasoft.ivy.report.ResolveReport.getModuleDescriptor()",1,1,1
"fr.jayasoft.ivy.report.ResolveReport.getModuleIds()",1,3,3
"fr.jayasoft.ivy.report.ResolveReport.getProblemMessages()",1,1,1
"fr.jayasoft.ivy.report.ResolveReport.getResolveTime()",1,1,1
"fr.jayasoft.ivy.report.ResolveReport.getUnresolvedDependencies()",1,2,2
"fr.jayasoft.ivy.report.ResolveReport.hasChanged()",3,2,3
"fr.jayasoft.ivy.report.ResolveReport.hasError()",1,3,3
"fr.jayasoft.ivy.report.ResolveReport.output(ReportOutputter[],File)",1,2,2
"fr.jayasoft.ivy.report.ResolveReport.setDependencies(List,Filter)",1,6,6
"fr.jayasoft.ivy.report.ResolveReport.setDownloadTime(long)",1,1,1
"fr.jayasoft.ivy.report.ResolveReport.setProblemMessages(List)",1,1,1
"fr.jayasoft.ivy.report.ResolveReport.setResolveTime(long)",1,1,1
"fr.jayasoft.ivy.report.XmlReportOutputter.getName()",1,1,1
"fr.jayasoft.ivy.report.XmlReportOutputter.getReportFileName(ConfigurationResolveReport)",1,1,1
"fr.jayasoft.ivy.report.XmlReportOutputter.getReportFileName(ModuleId,String)",1,1,1
"fr.jayasoft.ivy.report.XmlReportOutputter.output(ConfigurationResolveReport,File)",1,1,1
"fr.jayasoft.ivy.report.XmlReportOutputter.output(ConfigurationResolveReport,OutputStream)",1,1,1
"fr.jayasoft.ivy.report.XmlReportOutputter.output(ConfigurationResolveReport,String[],File)",1,4,4
"fr.jayasoft.ivy.report.XmlReportOutputter.output(ConfigurationResolveReport,String[],OutputStream)",1,25,25
"fr.jayasoft.ivy.report.XmlReportOutputter.output(ResolveReport,File)",1,2,2
"fr.jayasoft.ivy.report.XmlReportOutputter.toString(String[])",1,3,3
"fr.jayasoft.ivy.repository.AbstractRepository.addTransferListener(TransferListener)",1,1,1
"fr.jayasoft.ivy.repository.AbstractRepository.fireTransferCompleted()",1,3,3
"fr.jayasoft.ivy.repository.AbstractRepository.fireTransferCompleted(long)",1,1,1
"fr.jayasoft.ivy.repository.AbstractRepository.fireTransferError()",1,1,1
"fr.jayasoft.ivy.repository.AbstractRepository.fireTransferError(Exception)",1,1,1
"fr.jayasoft.ivy.repository.AbstractRepository.fireTransferEvent(TransferEvent)",1,3,3
"fr.jayasoft.ivy.repository.AbstractRepository.fireTransferInitiated(Resource,int)",1,1,1
"fr.jayasoft.ivy.repository.AbstractRepository.fireTransferProgress(long)",1,2,2
"fr.jayasoft.ivy.repository.AbstractRepository.fireTransferStarted()",1,1,1
"fr.jayasoft.ivy.repository.AbstractRepository.fireTransferStarted(long)",1,1,1
"fr.jayasoft.ivy.repository.AbstractRepository.getFileSeparator()",1,1,1
"fr.jayasoft.ivy.repository.AbstractRepository.getName()",1,1,1
"fr.jayasoft.ivy.repository.AbstractRepository.hasTransferListener(TransferListener)",1,1,1
"fr.jayasoft.ivy.repository.AbstractRepository.put(Artifact,File,String,boolean)",1,1,1
"fr.jayasoft.ivy.repository.AbstractRepository.put(File,String,boolean)",1,1,1
"fr.jayasoft.ivy.repository.AbstractRepository.removeTransferListener(TransferListener)",1,1,1
"fr.jayasoft.ivy.repository.AbstractRepository.setName(String)",1,1,1
"fr.jayasoft.ivy.repository.AbstractRepository.standardize(String)",1,1,1
"fr.jayasoft.ivy.repository.AbstractRepository.toString()",1,1,1
"fr.jayasoft.ivy.repository.BasicResource.BasicResource(String,boolean,long,long,boolean)",1,1,1
"fr.jayasoft.ivy.repository.BasicResource.clone(String)",1,1,1
"fr.jayasoft.ivy.repository.BasicResource.exists()",1,1,1
"fr.jayasoft.ivy.repository.BasicResource.getContentLength()",1,1,1
"fr.jayasoft.ivy.repository.BasicResource.getLastModified()",1,1,1
"fr.jayasoft.ivy.repository.BasicResource.getName()",1,1,1
"fr.jayasoft.ivy.repository.BasicResource.isLocal()",1,1,1
"fr.jayasoft.ivy.repository.BasicResource.openStream()",1,1,1
"fr.jayasoft.ivy.repository.BasicResource.toString()",1,1,1
"fr.jayasoft.ivy.repository.LazyResource.LazyResource(String)",1,1,1
"fr.jayasoft.ivy.repository.LazyResource.checkInit()",1,2,2
"fr.jayasoft.ivy.repository.LazyResource.exists()",1,1,1
"fr.jayasoft.ivy.repository.LazyResource.getContentLength()",1,1,1
"fr.jayasoft.ivy.repository.LazyResource.getLastModified()",1,1,1
"fr.jayasoft.ivy.repository.LazyResource.getName()",1,1,1
"fr.jayasoft.ivy.repository.LazyResource.init(Resource)",1,1,1
"fr.jayasoft.ivy.repository.LazyResource.isLocal()",1,1,1
"fr.jayasoft.ivy.repository.LazyResource.setContentLength(long)",1,1,1
"fr.jayasoft.ivy.repository.LazyResource.setExists(boolean)",1,1,1
"fr.jayasoft.ivy.repository.LazyResource.setLastModified(long)",1,1,1
"fr.jayasoft.ivy.repository.LazyResource.setLocal(boolean)",1,1,1
"fr.jayasoft.ivy.repository.LazyResource.toString()",1,1,1
"fr.jayasoft.ivy.repository.RepositoryCopyProgressListener.RepositoryCopyProgressListener(AbstractRepository)",1,1,1
"fr.jayasoft.ivy.repository.RepositoryCopyProgressListener.end(CopyProgressEvent)",1,1,1
"fr.jayasoft.ivy.repository.RepositoryCopyProgressListener.getTotalLength()",1,1,1
"fr.jayasoft.ivy.repository.RepositoryCopyProgressListener.progress(CopyProgressEvent)",1,1,1
"fr.jayasoft.ivy.repository.RepositoryCopyProgressListener.setTotalLength(Long)",1,1,1
"fr.jayasoft.ivy.repository.RepositoryCopyProgressListener.start(CopyProgressEvent)",1,2,2
"fr.jayasoft.ivy.repository.ResourceHelper.equals(Resource,File)",5,3,8
"fr.jayasoft.ivy.repository.TransferEvent.TransferEvent(Ivy,Repository,Resource,Exception,int)",1,1,1
"fr.jayasoft.ivy.repository.TransferEvent.TransferEvent(Ivy,Repository,Resource,int,int)",1,1,2
"fr.jayasoft.ivy.repository.TransferEvent.TransferEvent(Ivy,Repository,Resource,long,int)",1,1,1
"fr.jayasoft.ivy.repository.TransferEvent.getEventType()",1,1,1
"fr.jayasoft.ivy.repository.TransferEvent.getException()",1,1,1
"fr.jayasoft.ivy.repository.TransferEvent.getLength()",1,1,1
"fr.jayasoft.ivy.repository.TransferEvent.getLocalFile()",1,1,1
"fr.jayasoft.ivy.repository.TransferEvent.getName(int)",6,2,6
"fr.jayasoft.ivy.repository.TransferEvent.getRequestType()",1,1,1
"fr.jayasoft.ivy.repository.TransferEvent.getResource()",1,1,1
"fr.jayasoft.ivy.repository.TransferEvent.getTotalLength()",1,1,1
"fr.jayasoft.ivy.repository.TransferEvent.isTotalLengthSet()",1,1,1
"fr.jayasoft.ivy.repository.TransferEvent.setEventType(int)",2,2,7
"fr.jayasoft.ivy.repository.TransferEvent.setException(Exception)",1,1,1
"fr.jayasoft.ivy.repository.TransferEvent.setLength(long)",1,1,1
"fr.jayasoft.ivy.repository.TransferEvent.setLocalFile(File)",1,1,1
"fr.jayasoft.ivy.repository.TransferEvent.setRequestType(int)",2,2,4
"fr.jayasoft.ivy.repository.TransferEvent.setResource(Resource)",1,1,1
"fr.jayasoft.ivy.repository.TransferEvent.setTotalLength(long)",1,1,1
"fr.jayasoft.ivy.repository.TransferEvent.setTotalLengthSet(boolean)",1,1,1
"fr.jayasoft.ivy.repository.file.FileRepository.FileRepository()",1,1,1
"fr.jayasoft.ivy.repository.file.FileRepository.FileRepository(File)",1,1,1
"fr.jayasoft.ivy.repository.file.FileRepository.copy(File,File,boolean)",1,3,3
"fr.jayasoft.ivy.repository.file.FileRepository.get(String,File)",1,1,1
"fr.jayasoft.ivy.repository.file.FileRepository.getFile(String)",2,1,2
"fr.jayasoft.ivy.repository.file.FileRepository.getResource(String)",1,1,1
"fr.jayasoft.ivy.repository.file.FileRepository.isLocal()",1,1,1
"fr.jayasoft.ivy.repository.file.FileRepository.list(String)",3,5,5
"fr.jayasoft.ivy.repository.file.FileRepository.put(File,String,boolean)",1,1,1
"fr.jayasoft.ivy.repository.file.FileRepository.setLocal(boolean)",1,1,1
"fr.jayasoft.ivy.repository.file.FileResource.FileResource(FileRepository,File)",1,1,1
"fr.jayasoft.ivy.repository.file.FileResource.clone(String)",1,1,1
"fr.jayasoft.ivy.repository.file.FileResource.exists()",1,1,1
"fr.jayasoft.ivy.repository.file.FileResource.getContentLength()",1,1,1
"fr.jayasoft.ivy.repository.file.FileResource.getFile()",1,1,1
"fr.jayasoft.ivy.repository.file.FileResource.getLastModified()",1,1,1
"fr.jayasoft.ivy.repository.file.FileResource.getName()",1,1,1
"fr.jayasoft.ivy.repository.file.FileResource.getRepository()",1,1,1
"fr.jayasoft.ivy.repository.file.FileResource.isLocal()",1,1,1
"fr.jayasoft.ivy.repository.file.FileResource.openStream()",1,1,1
"fr.jayasoft.ivy.repository.file.FileResource.toString()",1,1,1
"fr.jayasoft.ivy.repository.sftp.SFTPRepository.MyProgressMonitor.count(long)",1,1,1
"fr.jayasoft.ivy.repository.sftp.SFTPRepository.MyProgressMonitor.end()",1,1,1
"fr.jayasoft.ivy.repository.sftp.SFTPRepository.MyProgressMonitor.init(int,String,String,long)",1,1,1
"fr.jayasoft.ivy.repository.sftp.SFTPRepository.SFTPRepository()",1,1,1
"fr.jayasoft.ivy.repository.sftp.SFTPRepository.checkExistence(String,ChannelSftp)",1,1,2
"fr.jayasoft.ivy.repository.sftp.SFTPRepository.get(String,File)",1,3,3
"fr.jayasoft.ivy.repository.sftp.SFTPRepository.getRepositoryScheme()",1,1,1
"fr.jayasoft.ivy.repository.sftp.SFTPRepository.getResource(String)",1,1,1
"fr.jayasoft.ivy.repository.sftp.SFTPRepository.getSftpChannel(String)",2,3,3
"fr.jayasoft.ivy.repository.sftp.SFTPRepository.list(String)",5,5,8
"fr.jayasoft.ivy.repository.sftp.SFTPRepository.mkdirs(String,ChannelSftp)",3,4,5
"fr.jayasoft.ivy.repository.sftp.SFTPRepository.openStream(SFTPResource)",1,3,3
"fr.jayasoft.ivy.repository.sftp.SFTPRepository.put(File,String,boolean)",2,4,5
"fr.jayasoft.ivy.repository.sftp.SFTPRepository.resolveResource(String)",4,5,5
"fr.jayasoft.ivy.repository.sftp.SFTPResource.SFTPResource(SFTPRepository,String)",1,1,1
"fr.jayasoft.ivy.repository.sftp.SFTPResource.clone(String)",1,1,1
"fr.jayasoft.ivy.repository.sftp.SFTPResource.exists()",1,1,1
"fr.jayasoft.ivy.repository.sftp.SFTPResource.getContentLength()",1,1,1
"fr.jayasoft.ivy.repository.sftp.SFTPResource.getLastModified()",1,1,1
"fr.jayasoft.ivy.repository.sftp.SFTPResource.getName()",1,1,1
"fr.jayasoft.ivy.repository.sftp.SFTPResource.init()",1,2,2
"fr.jayasoft.ivy.repository.sftp.SFTPResource.isLocal()",1,1,1
"fr.jayasoft.ivy.repository.sftp.SFTPResource.openStream()",1,1,1
"fr.jayasoft.ivy.repository.sftp.SFTPResource.toString()",1,1,1
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.AbstractSshBasedRepository()",1,1,1
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.getHost()",1,1,1
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.getKeyFile()",1,1,1
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.getKeyFilePassword()",1,1,1
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.getPassFile()",1,1,1
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.getPort()",1,1,1
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.getSession(String)",1,7,7
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.getUser()",1,1,1
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.getUserPassword()",1,1,1
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.parseURI(String)",5,6,9
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.releaseSession(Session,String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.setHost(String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.setKeyFile(File)",1,3,3
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.setKeyFilePassword(String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.setPassFile(File)",1,1,1
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.setPort(int)",1,1,1
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.setUser(String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.AbstractSshBasedRepository.setUserPassword(String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.RemoteScpException.RemoteScpException()",1,1,1
"fr.jayasoft.ivy.repository.ssh.RemoteScpException.RemoteScpException(String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.RemoteScpException.RemoteScpException(String,Throwable)",1,1,1
"fr.jayasoft.ivy.repository.ssh.RemoteScpException.RemoteScpException(Throwable)",1,1,1
"fr.jayasoft.ivy.repository.ssh.Scp.FileInfo.getFilename()",1,1,1
"fr.jayasoft.ivy.repository.ssh.Scp.FileInfo.getLastModified()",1,1,1
"fr.jayasoft.ivy.repository.ssh.Scp.FileInfo.getLength()",1,1,1
"fr.jayasoft.ivy.repository.ssh.Scp.FileInfo.setFilename(String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.Scp.FileInfo.setLastModified(long)",1,1,1
"fr.jayasoft.ivy.repository.ssh.Scp.FileInfo.setLength(long)",1,1,1
"fr.jayasoft.ivy.repository.ssh.Scp.Scp(Session)",2,1,2
"fr.jayasoft.ivy.repository.ssh.Scp.get(String,OutputStream)",2,3,5
"fr.jayasoft.ivy.repository.ssh.Scp.get(String,String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.Scp.getExecChannel()",1,1,1
"fr.jayasoft.ivy.repository.ssh.Scp.getFileinfo(String)",2,3,4
"fr.jayasoft.ivy.repository.ssh.Scp.parseCLine(String,FileInfo)",7,3,10
"fr.jayasoft.ivy.repository.ssh.Scp.parseTLine(String,FileInfo)",6,4,13
"fr.jayasoft.ivy.repository.ssh.Scp.put(String,String,String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.Scp.put(String,String,String,String)",5,5,11
"fr.jayasoft.ivy.repository.ssh.Scp.put(byte[],String,String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.Scp.put(byte[],String,String,String)",5,5,10
"fr.jayasoft.ivy.repository.ssh.Scp.readResponse(InputStream)",5,1,6
"fr.jayasoft.ivy.repository.ssh.Scp.receiveLine(InputStream)",5,2,5
"fr.jayasoft.ivy.repository.ssh.Scp.receiveStream(Channel,String,OutputStream)",9,10,15
"fr.jayasoft.ivy.repository.ssh.Scp.sendBytes(Channel,byte[],String,String)",1,3,3
"fr.jayasoft.ivy.repository.ssh.Scp.sendFile(Channel,String,String,String)",3,6,8
"fr.jayasoft.ivy.repository.ssh.SshCache.Entry.Entry(Session,String,String,int)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshCache.Entry.getChannelSftp()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshCache.Entry.getHost()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshCache.Entry.getPort()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshCache.Entry.getSession()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshCache.Entry.getUser()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshCache.Entry.releaseChannelSftp()",1,3,3
"fr.jayasoft.ivy.repository.ssh.SshCache.Entry.setChannelSftp(ChannelSftp)",2,1,3
"fr.jayasoft.ivy.repository.ssh.SshCache.SshCache()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshCache.attachChannelSftp(Session,ChannelSftp)",2,1,2
"fr.jayasoft.ivy.repository.ssh.SshCache.cfUserInfo.cfUserInfo(String,String,String,File,String,File)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshCache.cfUserInfo.getPassphrase()",1,3,4
"fr.jayasoft.ivy.repository.ssh.SshCache.cfUserInfo.getPassword()",1,3,3
"fr.jayasoft.ivy.repository.ssh.SshCache.cfUserInfo.promptPassphrase(String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshCache.cfUserInfo.promptPassword(String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshCache.cfUserInfo.promptYesNo(String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshCache.cfUserInfo.showMessage(String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshCache.clearSession(Session)",1,2,2
"fr.jayasoft.ivy.repository.ssh.SshCache.createCacheKey(String,String,int)",1,2,3
"fr.jayasoft.ivy.repository.ssh.SshCache.getCacheEntry(Session)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshCache.getCacheEntry(String,String,int)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshCache.getChannelSftp(Session)",1,4,4
"fr.jayasoft.ivy.repository.ssh.SshCache.getInstance()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshCache.getSession(String,int,String,String,File,String,File)",2,8,8
"fr.jayasoft.ivy.repository.ssh.SshCache.setSession(String,String,int,Session)",1,7,8
"fr.jayasoft.ivy.repository.ssh.SshRepository.checkExistence(String,Session)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshRepository.get(String,File)",2,6,7
"fr.jayasoft.ivy.repository.ssh.SshRepository.getCreateDirCommand()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshRepository.getExecChannel(Session)",1,1,2
"fr.jayasoft.ivy.repository.ssh.SshRepository.getExistCommand()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshRepository.getListCommand()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshRepository.getRepositoryScheme()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshRepository.getResource(String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshRepository.list(String)",2,3,4
"fr.jayasoft.ivy.repository.ssh.SshRepository.makePath(String,Session)",2,6,7
"fr.jayasoft.ivy.repository.ssh.SshRepository.openStream(SshResource)",1,4,4
"fr.jayasoft.ivy.repository.ssh.SshRepository.put(File,String,boolean)",3,7,9
"fr.jayasoft.ivy.repository.ssh.SshRepository.readSessionOutput(ChannelExec,StringBuffer,StringBuffer)",3,7,13
"fr.jayasoft.ivy.repository.ssh.SshRepository.replaceArgument(String,String)",1,2,2
"fr.jayasoft.ivy.repository.ssh.SshRepository.resolveResource(String)",1,5,6
"fr.jayasoft.ivy.repository.ssh.SshRepository.setCreateDirCommand(String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshRepository.setExistCommand(String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshRepository.setFileSeparator(char)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshRepository.setListCommand(String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshResource.SshResource()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshResource.SshResource(SshRepository,String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshResource.SshResource(SshRepository,String,boolean,long,long)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshResource.clone(String)",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshResource.exists()",1,2,2
"fr.jayasoft.ivy.repository.ssh.SshResource.getContentLength()",1,2,2
"fr.jayasoft.ivy.repository.ssh.SshResource.getLastModified()",1,2,2
"fr.jayasoft.ivy.repository.ssh.SshResource.getName()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshResource.isLocal()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshResource.openStream()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshResource.resolve()",1,1,1
"fr.jayasoft.ivy.repository.ssh.SshResource.toString()",1,1,1
"fr.jayasoft.ivy.repository.url.URLRepository.get(String,File)",1,4,4
"fr.jayasoft.ivy.repository.url.URLRepository.getResource(String)",1,2,2
"fr.jayasoft.ivy.repository.url.URLRepository.list(String)",5,8,9
"fr.jayasoft.ivy.repository.url.URLRepository.put(File,String,boolean)",1,1,1
"fr.jayasoft.ivy.repository.url.URLResource.URLResource(URL)",1,1,1
"fr.jayasoft.ivy.repository.url.URLResource.clone(String)",1,1,2
"fr.jayasoft.ivy.repository.url.URLResource.exists()",1,2,2
"fr.jayasoft.ivy.repository.url.URLResource.getContentLength()",1,2,2
"fr.jayasoft.ivy.repository.url.URLResource.getLastModified()",1,2,2
"fr.jayasoft.ivy.repository.url.URLResource.getName()",1,1,1
"fr.jayasoft.ivy.repository.url.URLResource.getURL()",1,1,1
"fr.jayasoft.ivy.repository.url.URLResource.init()",1,1,1
"fr.jayasoft.ivy.repository.url.URLResource.isLocal()",1,1,1
"fr.jayasoft.ivy.repository.url.URLResource.openStream()",1,1,1
"fr.jayasoft.ivy.repository.url.URLResource.toString()",1,1,1
"fr.jayasoft.ivy.repository.vfs.IvyWebdavClientFactory.IvyWebdavClientFactory()",1,1,1
"fr.jayasoft.ivy.repository.vfs.IvyWebdavClientFactory.createConnection(String,int,String,String,FileSystemOptions)",1,4,6
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.IvyWebdavConnectionManager()",1,1,1
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.closeIdleConnections(long)",1,2,2
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.finishLastResponse(HttpConnection)",1,3,3
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.getConnection(HostConfiguration)",1,1,1
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.getConnection(HostConfiguration,long)",1,1,1
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.getConnectionWithTimeout(HostConfiguration,long)",1,5,5
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.getIdleStartTime()",1,1,1
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.getLocalHttpConnection()",1,1,1
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.getParams()",1,1,1
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.isConnectionStaleCheckingEnabled()",1,1,1
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.releaseConnection(HttpConnection)",2,1,2
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.releaseLocalConnection()",1,2,2
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.setConnectionStaleCheckingEnabled(boolean)",1,1,1
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.setIdleStartTime(long)",1,1,1
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.setLocalHttpConnection(HttpConnection)",1,1,1
"fr.jayasoft.ivy.repository.vfs.IvyWebdavConnectionManager.setParams(HttpConnectionManagerParams)",1,1,1
"fr.jayasoft.ivy.repository.vfs.IvyWebdavFileProvider.doCreateFileSystem(FileName,FileSystemOptions)",1,1,1
"fr.jayasoft.ivy.repository.vfs.IvyWebdavFileSystem.IvyWebdavFileSystem(GenericFileName,HttpClient,FileSystemOptions)",1,1,1
"fr.jayasoft.ivy.repository.vfs.VfsRepository.VfsRepository()",1,1,1
"fr.jayasoft.ivy.repository.vfs.VfsRepository.createVFSManager()",1,3,3
"fr.jayasoft.ivy.repository.vfs.VfsRepository.finalize()",1,2,2
"fr.jayasoft.ivy.repository.vfs.VfsRepository.get(String,File)",2,3,4
"fr.jayasoft.ivy.repository.vfs.VfsRepository.getResource(String)",1,1,1
"fr.jayasoft.ivy.repository.vfs.VfsRepository.getVFSManager()",1,2,2
"fr.jayasoft.ivy.repository.vfs.VfsRepository.list(String)",1,5,5
"fr.jayasoft.ivy.repository.vfs.VfsRepository.put(File,String,boolean)",3,3,4
"fr.jayasoft.ivy.repository.vfs.VfsResource.VfsResource(String,FileSystemManager)",1,1,1
"fr.jayasoft.ivy.repository.vfs.VfsResource.clone(String)",1,1,1
"fr.jayasoft.ivy.repository.vfs.VfsResource.exists()",1,1,1
"fr.jayasoft.ivy.repository.vfs.VfsResource.getChildren()",1,6,6
"fr.jayasoft.ivy.repository.vfs.VfsResource.getContent()",1,1,1
"fr.jayasoft.ivy.repository.vfs.VfsResource.getContentLength()",1,1,1
"fr.jayasoft.ivy.repository.vfs.VfsResource.getLastModified()",1,1,1
"fr.jayasoft.ivy.repository.vfs.VfsResource.getName()",1,1,1
"fr.jayasoft.ivy.repository.vfs.VfsResource.init()",1,3,3
"fr.jayasoft.ivy.repository.vfs.VfsResource.isLocal()",1,1,1
"fr.jayasoft.ivy.repository.vfs.VfsResource.normalize(String)",2,2,3
"fr.jayasoft.ivy.repository.vfs.VfsResource.openStream()",1,1,1
"fr.jayasoft.ivy.repository.vfs.VfsResource.physicallyExists()",1,2,2
"fr.jayasoft.ivy.repository.vfs.VfsResource.toString()",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.checkInterrupted()",1,2,2
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.chomp(StringBuffer)",2,4,5
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.cleanup()",1,2,2
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.cleanup(Exception)",1,2,2
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.closeConnection()",1,3,7
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.dirExists(String)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.disconnect()",1,2,3
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.ensureConnectionOpened()",2,6,10
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.exec(String)",1,3,4
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.get(String,File)",5,14,16
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.getAuthentication()",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.getConnectionCommand()",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.getExpectedDownloadMessage(String,File)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.getExpectedRemoveMessage(String)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.getExpectedUploadMessage(File,String)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.getHost()",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.getInitResource(String)",1,2,2
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.getReadTimeout()",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.getResource(String)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.getSingleCommand(String)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.getUsername()",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.initIvy()",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.list(String)",2,6,8
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.lslToResource(String,String)",3,5,5
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.mkdirs(String)",2,3,4
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.put(File,String,boolean)",3,6,6
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.readResponse(boolean)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.readResponse(boolean,long)",14,19,26
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.sendCommand(String)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.sendCommand(String,Pattern)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.sendCommand(String,Pattern,long)",2,2,2
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.sendCommand(String,boolean)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.sendCommand(String,boolean,boolean)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.sendCommand(String,boolean,boolean,long)",1,3,4
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.sendCommand(String,boolean,long)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.sendSingleCommand(String)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.setAuthentication(String)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.setHost(String)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.setReadTimeout(long)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.setReuseConnection(long)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.setUsername(String)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.toString()",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpRepository.updateLastCommandTime()",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpResource.VsftpResource(VsftpRepository,String)",1,1,1
"fr.jayasoft.ivy.repository.vsftp.VsftpResource.clone(String)",1,1,2
"fr.jayasoft.ivy.repository.vsftp.VsftpResource.init()",1,2,2
"fr.jayasoft.ivy.repository.vsftp.VsftpResource.openStream()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.checkInterrupted()",1,2,2
"fr.jayasoft.ivy.resolver.AbstractResolver.doValidate(ResolveData)",2,2,2
"fr.jayasoft.ivy.resolver.AbstractResolver.download(Artifact[],Ivy,File)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.dumpConfig()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.exists(Artifact)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.findModuleInCache(ResolveData,ModuleRevisionId)",3,4,5
"fr.jayasoft.ivy.resolver.AbstractResolver.fromSystem(Artifact)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.fromSystem(DependencyDescriptor)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.getChangingMatcher()",3,2,3
"fr.jayasoft.ivy.resolver.AbstractResolver.getChangingMatcherName()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.getChangingPattern()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.getIvy()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.getLatest()",1,1,2
"fr.jayasoft.ivy.resolver.AbstractResolver.getLatestStrategy()",3,6,6
"fr.jayasoft.ivy.resolver.AbstractResolver.getName()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.getNamespace()",1,5,5
"fr.jayasoft.ivy.resolver.AbstractResolver.getSystemNode(ResolveData,ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.getTypeName()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.hidePassword(String)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.isValidate()",1,2,2
"fr.jayasoft.ivy.resolver.AbstractResolver.listModules(OrganisationEntry)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.listOrganisations()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.listRevisions(ModuleEntry)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.listTokenValues(String,Map)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.reportFailure()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.reportFailure(Artifact)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.setChangingMatcher(String)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.setChangingPattern(String)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.setIvy(Ivy)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.setLatest(String)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.setLatestStrategy(LatestStrategy)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.setName(String)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.setNamespace(String)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.setValidate(boolean)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.toString()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.toSystem(Artifact)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.toSystem(ModuleDescriptor)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.toSystem(ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResolver.toSystem(ResolvedModuleRevision)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.AbstractResourceResolver()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.addArtifactPattern(String)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.addConfiguredArtifact(IvyPattern)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.addConfiguredIvy(IvyPattern)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.addIvyPattern(String)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.convertM2IdForResourceSearch(ModuleRevisionId)",2,1,2
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.dumpConfig()",1,3,3
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.findArtifactNames(Map,String)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.findArtifactRef(Artifact,Date)",1,2,2
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.findIvyFileRef(DependencyDescriptor,ResolveData)",1,2,2
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.findIvyNames(Map,String)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.findNames(Map,String)",1,2,2
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.findResourceUsingPatterns(ModuleRevisionId,List,Artifact,ResourceMDParser,Date)",1,3,3
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.findTokenValues(Collection,List,Map,String)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.getArtifactPatterns()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.getIvyPatterns()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.isM2compatible()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.logArtifactNotFound(Artifact)",1,6,6
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.logIvyNotFound(ModuleRevisionId)",1,2,2
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.logMdNotFound(ModuleRevisionId,Artifact)",1,5,5
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.setArtifactPatterns(List)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.setIvyPatterns(List)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractResourceResolver.setM2compatible(boolean)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractSshBasedResolver.AbstractSshBasedResolver()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractSshBasedResolver.getSshBasedRepository()",1,1,1
"fr.jayasoft.ivy.resolver.AbstractSshBasedResolver.setHost(String)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractSshBasedResolver.setIvy(Ivy)",1,2,2
"fr.jayasoft.ivy.resolver.AbstractSshBasedResolver.setKeyFile(String)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractSshBasedResolver.setKeyFilePassword(String)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractSshBasedResolver.setPassfile(String)",1,1,2
"fr.jayasoft.ivy.resolver.AbstractSshBasedResolver.setPort(int)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractSshBasedResolver.setUser(String)",1,1,1
"fr.jayasoft.ivy.resolver.AbstractSshBasedResolver.setUserPassword(String)",1,1,1
"fr.jayasoft.ivy.resolver.ApacheHttpURLLister.accept(String)",1,1,1
"fr.jayasoft.ivy.resolver.ApacheHttpURLLister.listAll(URL)",1,1,1
"fr.jayasoft.ivy.resolver.ApacheHttpURLLister.toString()",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.BasicResolver()",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.acceptLatest()",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.check(Resource,File,String)",3,3,3
"fr.jayasoft.ivy.resolver.BasicResolver.checkDescriptorConsistency(ModuleRevisionId,ModuleDescriptor,ResolvedResource)",2,8,8
"fr.jayasoft.ivy.resolver.BasicResolver.clearArtifactAttempts()",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.clearIvyAttempts()",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.download(Artifact[],Ivy,File,boolean)",6,11,11
"fr.jayasoft.ivy.resolver.BasicResolver.exists(Artifact)",2,2,2
"fr.jayasoft.ivy.resolver.BasicResolver.findFirstArtifactRef(ModuleDescriptor,DependencyDescriptor,ResolveData)",4,3,4
"fr.jayasoft.ivy.resolver.BasicResolver.getAndCheck(Resource,File)",1,2,3
"fr.jayasoft.ivy.resolver.BasicResolver.getArtifactRef(Artifact,Date)",1,3,3
"fr.jayasoft.ivy.resolver.BasicResolver.getChecksumAlgorithms()",2,5,6
"fr.jayasoft.ivy.resolver.BasicResolver.getDefaultRMDParser(ModuleId)",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.getDependency(DependencyDescriptor,ResolveData)",18,43,45
"fr.jayasoft.ivy.resolver.BasicResolver.getPublicationDate(ModuleDescriptor,DependencyDescriptor,ResolveData)",3,3,3
"fr.jayasoft.ivy.resolver.BasicResolver.getRMDParser(DependencyDescriptor,ResolveData)",2,1,3
"fr.jayasoft.ivy.resolver.BasicResolver.getRevision(ResolvedResource,ModuleRevisionId,ModuleDescriptor)",4,4,4
"fr.jayasoft.ivy.resolver.BasicResolver.getWorkspaceName()",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.isAllownomd()",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.isCheckconsistency()",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.isCheckmodified()",3,4,4
"fr.jayasoft.ivy.resolver.BasicResolver.isEnvDependent()",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.listModules(OrganisationEntry)",1,2,2
"fr.jayasoft.ivy.resolver.BasicResolver.listOrganisations()",1,2,2
"fr.jayasoft.ivy.resolver.BasicResolver.listRevisions(ModuleEntry)",1,2,2
"fr.jayasoft.ivy.resolver.BasicResolver.listTokenValues(String,Map)",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.logArtifactAttempt(Artifact,String)",1,2,2
"fr.jayasoft.ivy.resolver.BasicResolver.logIvyAttempt(String)",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.parse(ResolvedResource,DependencyDescriptor,ResolveData)",10,27,27
"fr.jayasoft.ivy.resolver.BasicResolver.reportFailure()",1,5,5
"fr.jayasoft.ivy.resolver.BasicResolver.reportFailure(Artifact)",1,3,3
"fr.jayasoft.ivy.resolver.BasicResolver.searchedRmr(ResolvedModuleRevision)",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.setAllownomd(boolean)",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.setCheckconsistency(boolean)",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.setCheckmodified(boolean)",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.setChecksums(String)",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.setEnvDependent(boolean)",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.setWorkspaceName(String)",1,1,1
"fr.jayasoft.ivy.resolver.BasicResolver.toString()",1,1,1
"fr.jayasoft.ivy.resolver.CacheResolver.CacheResolver()",1,1,1
"fr.jayasoft.ivy.resolver.CacheResolver.CacheResolver(Ivy)",1,1,1
"fr.jayasoft.ivy.resolver.CacheResolver.download(Artifact[],Ivy,File)",1,3,3
"fr.jayasoft.ivy.resolver.CacheResolver.dumpConfig()",1,1,1
"fr.jayasoft.ivy.resolver.CacheResolver.ensureConfigured()",1,2,2
"fr.jayasoft.ivy.resolver.CacheResolver.ensureConfigured(Ivy,File)",2,4,5
"fr.jayasoft.ivy.resolver.CacheResolver.exists(Artifact)",1,1,1
"fr.jayasoft.ivy.resolver.CacheResolver.getDependency(DependencyDescriptor,ResolveData)",6,7,7
"fr.jayasoft.ivy.resolver.CacheResolver.getTypeName()",1,1,1
"fr.jayasoft.ivy.resolver.CacheResolver.listModules(OrganisationEntry)",1,1,1
"fr.jayasoft.ivy.resolver.CacheResolver.listOrganisations()",1,1,1
"fr.jayasoft.ivy.resolver.CacheResolver.listRevisions(ModuleEntry)",1,1,1
"fr.jayasoft.ivy.resolver.CacheResolver.publish(Artifact,File,boolean)",1,1,1
"fr.jayasoft.ivy.resolver.ChainResolver.ResolvedModuleRevisionArtifactInfo.ResolvedModuleRevisionArtifactInfo(ResolvedModuleRevision)",1,1,1
"fr.jayasoft.ivy.resolver.ChainResolver.ResolvedModuleRevisionArtifactInfo.getLastModified()",1,1,1
"fr.jayasoft.ivy.resolver.ChainResolver.ResolvedModuleRevisionArtifactInfo.getRevision()",1,1,1
"fr.jayasoft.ivy.resolver.ChainResolver.add(DependencyResolver)",1,1,1
"fr.jayasoft.ivy.resolver.ChainResolver.download(Artifact[],Ivy,File,boolean)",1,6,6
"fr.jayasoft.ivy.resolver.ChainResolver.dumpConfig()",1,2,2
"fr.jayasoft.ivy.resolver.ChainResolver.exists(Artifact)",3,2,3
"fr.jayasoft.ivy.resolver.ChainResolver.getDependency(DependencyDescriptor,ResolveData)",9,20,21
"fr.jayasoft.ivy.resolver.ChainResolver.getLatest(DependencyResolver)",2,2,2
"fr.jayasoft.ivy.resolver.ChainResolver.getLatestStrategyName(DependencyResolver)",2,2,2
"fr.jayasoft.ivy.resolver.ChainResolver.getResolvers()",1,1,1
"fr.jayasoft.ivy.resolver.ChainResolver.isAfter(ResolvedModuleRevision,ResolvedModuleRevision,Date)",1,1,1
"fr.jayasoft.ivy.resolver.ChainResolver.isDual()",1,1,1
"fr.jayasoft.ivy.resolver.ChainResolver.isReturnFirst()",1,1,1
"fr.jayasoft.ivy.resolver.ChainResolver.publish(Artifact,File,boolean)",2,1,2
"fr.jayasoft.ivy.resolver.ChainResolver.reportFailure()",1,2,2
"fr.jayasoft.ivy.resolver.ChainResolver.reportFailure(Artifact)",1,2,2
"fr.jayasoft.ivy.resolver.ChainResolver.resolvedRevision(ResolvedModuleRevision)",2,2,3
"fr.jayasoft.ivy.resolver.ChainResolver.setDual(boolean)",1,1,1
"fr.jayasoft.ivy.resolver.ChainResolver.setLatest(DependencyResolver,LatestStrategy)",1,2,2
"fr.jayasoft.ivy.resolver.ChainResolver.setLatestIfRequired(DependencyResolver,LatestStrategy)",2,3,3
"fr.jayasoft.ivy.resolver.ChainResolver.setReturnFirst(boolean)",1,1,1
"fr.jayasoft.ivy.resolver.DualResolver.add(DependencyResolver)",3,1,3
"fr.jayasoft.ivy.resolver.DualResolver.download(Artifact[],Ivy,File,boolean)",1,1,1
"fr.jayasoft.ivy.resolver.DualResolver.dumpConfig()",2,1,3
"fr.jayasoft.ivy.resolver.DualResolver.exists(Artifact)",1,1,1
"fr.jayasoft.ivy.resolver.DualResolver.getArtifactResolver()",1,1,1
"fr.jayasoft.ivy.resolver.DualResolver.getDependency(DependencyDescriptor,ResolveData)",5,4,7
"fr.jayasoft.ivy.resolver.DualResolver.getIvyResolver()",1,1,1
"fr.jayasoft.ivy.resolver.DualResolver.isAllownomd()",1,1,1
"fr.jayasoft.ivy.resolver.DualResolver.publish(Artifact,File,boolean)",1,2,2
"fr.jayasoft.ivy.resolver.DualResolver.reportFailure()",1,1,1
"fr.jayasoft.ivy.resolver.DualResolver.reportFailure(Artifact)",1,1,1
"fr.jayasoft.ivy.resolver.DualResolver.setAllownomd(boolean)",1,1,1
"fr.jayasoft.ivy.resolver.DualResolver.setArtifactResolver(DependencyResolver)",1,1,1
"fr.jayasoft.ivy.resolver.DualResolver.setIvyResolver(DependencyResolver)",1,1,1
"fr.jayasoft.ivy.resolver.FileSystemResolver.FileSystemResolver()",1,1,1
"fr.jayasoft.ivy.resolver.FileSystemResolver.getFileRepository()",1,1,1
"fr.jayasoft.ivy.resolver.FileSystemResolver.getTypeName()",1,1,1
"fr.jayasoft.ivy.resolver.FileSystemResolver.isLocal()",1,1,1
"fr.jayasoft.ivy.resolver.FileSystemResolver.setLocal(boolean)",1,1,1
"fr.jayasoft.ivy.resolver.FileURLLister.FileURLLister()",1,1,1
"fr.jayasoft.ivy.resolver.FileURLLister.FileURLLister(File)",1,1,1
"fr.jayasoft.ivy.resolver.FileURLLister.accept(String)",1,1,1
"fr.jayasoft.ivy.resolver.FileURLLister.listAll(URL)",2,5,6
"fr.jayasoft.ivy.resolver.FileURLLister.toString()",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.IBiblioResolver()",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.download(Artifact[],Ivy,File,boolean)",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.ensureConfigured(Ivy)",1,6,8
"fr.jayasoft.ivy.resolver.IBiblioResolver.exists(Artifact)",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.findArtifactRef(Artifact,Date)",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.findIvyFileRef(DependencyDescriptor,ResolveData)",2,3,3
"fr.jayasoft.ivy.resolver.IBiblioResolver.getArtifactPatterns()",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.getDependency(DependencyDescriptor,ResolveData)",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.getPattern()",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.getRoot()",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.getTypeName()",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.getWholePattern()",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.isUsepoms()",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.listModules(OrganisationEntry)",2,2,2
"fr.jayasoft.ivy.resolver.IBiblioResolver.listOrganisations()",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.listRevisions(ModuleEntry)",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.listTokenValues(String,Map)",3,2,4
"fr.jayasoft.ivy.resolver.IBiblioResolver.logIvyNotFound(ModuleRevisionId)",1,3,3
"fr.jayasoft.ivy.resolver.IBiblioResolver.publish(Artifact,File)",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.setM2compatible(boolean)",1,2,2
"fr.jayasoft.ivy.resolver.IBiblioResolver.setPattern(String)",2,1,2
"fr.jayasoft.ivy.resolver.IBiblioResolver.setRoot(String)",2,1,3
"fr.jayasoft.ivy.resolver.IBiblioResolver.setUsepoms(boolean)",1,1,1
"fr.jayasoft.ivy.resolver.IBiblioResolver.updateWholePattern()",1,3,3
"fr.jayasoft.ivy.resolver.IvyRepResolver.IvyRepResolver()",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.download(Artifact[],Ivy,File,boolean)",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.ensureArtifactConfigured(Ivy)",1,6,8
"fr.jayasoft.ivy.resolver.IvyRepResolver.ensureIvyConfigured(Ivy)",1,6,8
"fr.jayasoft.ivy.resolver.IvyRepResolver.exists(Artifact)",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.findArtifactRef(Artifact,Date)",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.getArtifactPatterns()",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.getArtpattern()",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.getArtroot()",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.getDependency(DependencyDescriptor,ResolveData)",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.getIvyPatterns()",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.getIvypattern()",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.getIvyroot()",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.getTypeName()",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.getWholeArtPattern()",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.getWholeIvyPattern()",2,1,3
"fr.jayasoft.ivy.resolver.IvyRepResolver.listModules(OrganisationEntry)",1,2,2
"fr.jayasoft.ivy.resolver.IvyRepResolver.listOrganisations()",1,4,5
"fr.jayasoft.ivy.resolver.IvyRepResolver.listRevisions(ModuleEntry)",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.publish(Artifact,File)",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.setArtpattern(String)",2,1,2
"fr.jayasoft.ivy.resolver.IvyRepResolver.setArtroot(String)",2,1,3
"fr.jayasoft.ivy.resolver.IvyRepResolver.setIvypattern(String)",2,1,2
"fr.jayasoft.ivy.resolver.IvyRepResolver.setIvyroot(String)",2,1,3
"fr.jayasoft.ivy.resolver.IvyRepResolver.setM2compatible(boolean)",2,1,2
"fr.jayasoft.ivy.resolver.IvyRepResolver.updateWholeArtPattern()",1,1,1
"fr.jayasoft.ivy.resolver.IvyRepResolver.updateWholeIvyPattern()",1,1,1
"fr.jayasoft.ivy.resolver.MDResolvedResource.MDResolvedResource(Resource,String,ResolvedModuleRevision)",1,1,1
"fr.jayasoft.ivy.resolver.MDResolvedResource.getResolvedModuleRevision()",1,1,1
"fr.jayasoft.ivy.resolver.ModuleEntry.ModuleEntry(OrganisationEntry,String)",1,1,1
"fr.jayasoft.ivy.resolver.ModuleEntry.getModule()",1,1,1
"fr.jayasoft.ivy.resolver.ModuleEntry.getOrganisation()",1,1,1
"fr.jayasoft.ivy.resolver.ModuleEntry.getOrganisationEntry()",1,1,1
"fr.jayasoft.ivy.resolver.ModuleEntry.getResolver()",1,1,1
"fr.jayasoft.ivy.resolver.OrganisationEntry.OrganisationEntry(DependencyResolver,String)",1,1,1
"fr.jayasoft.ivy.resolver.OrganisationEntry.getOrganisation()",1,1,1
"fr.jayasoft.ivy.resolver.OrganisationEntry.getResolver()",1,1,1
"fr.jayasoft.ivy.resolver.RepositoryResolver.RepositoryResolver()",1,1,1
"fr.jayasoft.ivy.resolver.RepositoryResolver.download(Artifact[],Ivy,File,boolean)",1,2,2
"fr.jayasoft.ivy.resolver.RepositoryResolver.dumpConfig()",1,1,1
"fr.jayasoft.ivy.resolver.RepositoryResolver.findDynamicResourceUsingPattern(String,Repository,LatestStrategy,VersionMatcher,ResourceMDParser,ModuleRevisionId,String,Artifact,Date)",9,10,10
"fr.jayasoft.ivy.resolver.RepositoryResolver.findResourceUsingPattern(ModuleRevisionId,String,Artifact,ResourceMDParser,Date)",1,1,1
"fr.jayasoft.ivy.resolver.RepositoryResolver.findResourceUsingPattern(String,Repository,LatestStrategy,VersionMatcher,ResourceMDParser,ModuleRevisionId,String,Artifact,Date,boolean)",4,7,7
"fr.jayasoft.ivy.resolver.RepositoryResolver.findTokenValues(Collection,List,Map,String)",1,3,3
"fr.jayasoft.ivy.resolver.RepositoryResolver.get(Resource,File)",1,2,2
"fr.jayasoft.ivy.resolver.RepositoryResolver.getRepository()",1,1,1
"fr.jayasoft.ivy.resolver.RepositoryResolver.getTypeName()",1,1,1
"fr.jayasoft.ivy.resolver.RepositoryResolver.isAlwaysCheckExactRevision()",1,2,2
"fr.jayasoft.ivy.resolver.RepositoryResolver.publish(Artifact,File,boolean)",3,5,5
"fr.jayasoft.ivy.resolver.RepositoryResolver.put(Artifact,File,String,boolean)",1,2,2
"fr.jayasoft.ivy.resolver.RepositoryResolver.putChecksum(Artifact,File,String,boolean,String)",1,1,1
"fr.jayasoft.ivy.resolver.RepositoryResolver.setAlwaysCheckExactRevision(boolean)",1,1,1
"fr.jayasoft.ivy.resolver.RepositoryResolver.setIvy(Ivy)",1,3,3
"fr.jayasoft.ivy.resolver.RepositoryResolver.setName(String)",1,2,2
"fr.jayasoft.ivy.resolver.RepositoryResolver.setRepository(Repository)",1,1,1
"fr.jayasoft.ivy.resolver.ResolvedModuleRevisionProxy.ResolvedModuleRevisionProxy(ResolvedModuleRevision,DependencyResolver)",3,1,3
"fr.jayasoft.ivy.resolver.ResolvedModuleRevisionProxy.getArtifactResolver()",1,1,1
"fr.jayasoft.ivy.resolver.ResolvedModuleRevisionProxy.getDescriptor()",1,1,1
"fr.jayasoft.ivy.resolver.ResolvedModuleRevisionProxy.getId()",1,1,1
"fr.jayasoft.ivy.resolver.ResolvedModuleRevisionProxy.getLocalMDUrl()",1,1,1
"fr.jayasoft.ivy.resolver.ResolvedModuleRevisionProxy.getPublicationDate()",1,1,1
"fr.jayasoft.ivy.resolver.ResolvedModuleRevisionProxy.getResolver()",1,1,1
"fr.jayasoft.ivy.resolver.ResolvedModuleRevisionProxy.isDownloaded()",1,1,1
"fr.jayasoft.ivy.resolver.ResolvedModuleRevisionProxy.isSearched()",1,1,1
"fr.jayasoft.ivy.resolver.ResolvedResource.ResolvedResource(Resource,String)",1,1,1
"fr.jayasoft.ivy.resolver.ResolvedResource.getLastModified()",1,1,1
"fr.jayasoft.ivy.resolver.ResolvedResource.getResource()",1,1,1
"fr.jayasoft.ivy.resolver.ResolvedResource.getRevision()",1,1,1
"fr.jayasoft.ivy.resolver.ResolvedResource.toString()",1,1,1
"fr.jayasoft.ivy.resolver.ResolverHelper.findAll(Repository,ModuleRevisionId,String,Artifact)",4,8,8
"fr.jayasoft.ivy.resolver.ResolverHelper.listAll(Repository,String)",2,5,5
"fr.jayasoft.ivy.resolver.ResolverHelper.listAll(URLLister,URL)",2,5,5
"fr.jayasoft.ivy.resolver.ResolverHelper.listTokenValues(Repository,String,String)",4,13,13
"fr.jayasoft.ivy.resolver.ResolverHelper.listTokenValues(URLLister,String,String)",4,14,14
"fr.jayasoft.ivy.resolver.ResolverHelper.standardize(String)",1,1,1
"fr.jayasoft.ivy.resolver.RevisionEntry.RevisionEntry(ModuleEntry,String)",1,1,1
"fr.jayasoft.ivy.resolver.RevisionEntry.getModule()",1,1,1
"fr.jayasoft.ivy.resolver.RevisionEntry.getModuleEntry()",1,1,1
"fr.jayasoft.ivy.resolver.RevisionEntry.getOrganisation()",1,1,1
"fr.jayasoft.ivy.resolver.RevisionEntry.getOrganisationEntry()",1,1,1
"fr.jayasoft.ivy.resolver.RevisionEntry.getResolver()",1,1,1
"fr.jayasoft.ivy.resolver.RevisionEntry.getRevision()",1,1,1
"fr.jayasoft.ivy.resolver.SFTPResolver.SFTPResolver()",1,1,1
"fr.jayasoft.ivy.resolver.SFTPResolver.getSFTPRepository()",1,1,1
"fr.jayasoft.ivy.resolver.SFTPResolver.getTypeName()",1,1,1
"fr.jayasoft.ivy.resolver.SshResolver.SshResolver()",1,1,1
"fr.jayasoft.ivy.resolver.SshResolver.getTypeName()",1,1,1
"fr.jayasoft.ivy.resolver.SshResolver.setCreateDirCommand(String)",1,1,1
"fr.jayasoft.ivy.resolver.SshResolver.setExistCommand(String)",1,1,1
"fr.jayasoft.ivy.resolver.SshResolver.setFileSeparator(String)",2,2,3
"fr.jayasoft.ivy.resolver.SshResolver.setListCommand(String)",1,1,1
"fr.jayasoft.ivy.resolver.URLResolver.URLResolver()",1,1,1
"fr.jayasoft.ivy.resolver.URLResolver.getTypeName()",1,1,1
"fr.jayasoft.ivy.resolver.VfsResolver.VfsResolver()",1,1,1
"fr.jayasoft.ivy.resolver.VfsResolver.getTypeName()",1,1,1
"fr.jayasoft.ivy.resolver.VfsResolver.hidePassword(String)",1,1,1
"fr.jayasoft.ivy.resolver.VfsResolver.prepareForDisplay(String)",1,3,3
"fr.jayasoft.ivy.resolver.VsftpResolver.VsftpResolver()",1,1,1
"fr.jayasoft.ivy.resolver.VsftpResolver.disconnect()",1,1,1
"fr.jayasoft.ivy.resolver.VsftpResolver.getAuthentication()",1,1,1
"fr.jayasoft.ivy.resolver.VsftpResolver.getHost()",1,1,1
"fr.jayasoft.ivy.resolver.VsftpResolver.getTypeName()",1,1,1
"fr.jayasoft.ivy.resolver.VsftpResolver.getUsername()",1,1,1
"fr.jayasoft.ivy.resolver.VsftpResolver.getVsftpRepository()",1,1,1
"fr.jayasoft.ivy.resolver.VsftpResolver.setAuthentication(String)",1,1,1
"fr.jayasoft.ivy.resolver.VsftpResolver.setHost(String)",1,1,1
"fr.jayasoft.ivy.resolver.VsftpResolver.setReadTimeout(long)",1,1,1
"fr.jayasoft.ivy.resolver.VsftpResolver.setReuseConnection(long)",1,1,1
"fr.jayasoft.ivy.resolver.VsftpResolver.setUsername(String)",1,1,1
"fr.jayasoft.ivy.status.Status.Status()",1,1,1
"fr.jayasoft.ivy.status.Status.Status(String,boolean)",1,1,1
"fr.jayasoft.ivy.status.Status.getName()",1,1,1
"fr.jayasoft.ivy.status.Status.isIntegration()",1,1,1
"fr.jayasoft.ivy.status.Status.setIntegration(boolean)",1,1,1
"fr.jayasoft.ivy.status.Status.setName(String)",1,1,1
"fr.jayasoft.ivy.status.StatusManager.StatusManager()",1,1,1
"fr.jayasoft.ivy.status.StatusManager.StatusManager(Status[],String)",1,1,1
"fr.jayasoft.ivy.status.StatusManager.addStatus(Status)",1,1,1
"fr.jayasoft.ivy.status.StatusManager.computeMaps()",2,3,4
"fr.jayasoft.ivy.status.StatusManager.getCurrent()",1,1,1
"fr.jayasoft.ivy.status.StatusManager.getDefaultStatus()",3,2,3
"fr.jayasoft.ivy.status.StatusManager.getDeliveryStatusListString()",1,5,5
"fr.jayasoft.ivy.status.StatusManager.getPriority(String)",2,3,3
"fr.jayasoft.ivy.status.StatusManager.getStatuses()",1,1,1
"fr.jayasoft.ivy.status.StatusManager.isIntegration(String)",2,3,3
"fr.jayasoft.ivy.status.StatusManager.isStatus(String)",1,2,2
"fr.jayasoft.ivy.status.StatusManager.newDefaultInstance()",1,1,1
"fr.jayasoft.ivy.status.StatusManager.setDefaultStatus(String)",1,1,1
"fr.jayasoft.ivy.tools.analyser.JarJarDependencyAnalyser.JarJarDependencyAnalyser(File)",1,1,1
"fr.jayasoft.ivy.tools.analyser.JarJarDependencyAnalyser.analyze(JarModule[])",3,5,6
"fr.jayasoft.ivy.tools.analyser.JarJarDependencyAnalyser.main(String[])",1,1,1
"fr.jayasoft.ivy.tools.analyser.JarModule.JarModule(ModuleRevisionId,File)",1,1,1
"fr.jayasoft.ivy.tools.analyser.JarModule.getJar()",1,1,1
"fr.jayasoft.ivy.tools.analyser.JarModule.getMrid()",1,1,1
"fr.jayasoft.ivy.tools.analyser.JarModule.toString()",1,1,1
"fr.jayasoft.ivy.tools.analyser.JarModuleFinder.JarModuleFinder(String)",1,1,1
"fr.jayasoft.ivy.tools.analyser.JarModuleFinder.findJarModules()",1,5,6
"fr.jayasoft.ivy.tools.analyser.JarModuleFinder.main(String[])",1,2,2
"fr.jayasoft.ivy.tools.analyser.RepositoryAnalyser.analyse(String,DependencyAnalyser)",1,3,3
"fr.jayasoft.ivy.tools.analyser.RepositoryAnalyser.main(String[])",2,2,2
"fr.jayasoft.ivy.url.AbstractURLHandler.getContentLength(URL)",1,1,1
"fr.jayasoft.ivy.url.AbstractURLHandler.getContentLength(URL,int)",1,1,1
"fr.jayasoft.ivy.url.AbstractURLHandler.getLastModified(URL)",1,1,1
"fr.jayasoft.ivy.url.AbstractURLHandler.getLastModified(URL,int)",1,1,1
"fr.jayasoft.ivy.url.AbstractURLHandler.isReachable(URL)",1,1,1
"fr.jayasoft.ivy.url.AbstractURLHandler.isReachable(URL,int)",1,1,1
"fr.jayasoft.ivy.url.ApacheURLLister.listAll(URL)",1,1,1
"fr.jayasoft.ivy.url.ApacheURLLister.listDirectories(URL)",1,1,1
"fr.jayasoft.ivy.url.ApacheURLLister.listFiles(URL)",1,1,1
"fr.jayasoft.ivy.url.ApacheURLLister.retrieveListing(URL,boolean,boolean)",4,9,15
"fr.jayasoft.ivy.url.BasicURLHandler.BasicURLHandler()",1,1,1
"fr.jayasoft.ivy.url.BasicURLHandler.download(URL,File,CopyProgressListener)",2,5,5
"fr.jayasoft.ivy.url.BasicURLHandler.getURLInfo(URL)",1,1,1
"fr.jayasoft.ivy.url.BasicURLHandler.getURLInfo(URL,int)",4,10,10
"fr.jayasoft.ivy.url.BasicURLHandler.openStream(URL)",1,5,5
"fr.jayasoft.ivy.url.CredentialsStore.CredentialsStore()",1,1,1
"fr.jayasoft.ivy.url.CredentialsStore.addCredentials(String,String,String,String)",2,1,2
"fr.jayasoft.ivy.url.CredentialsStore.getCredentials(String,String)",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.GETInputStream.GETInputStream(GetMethod)",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.GETInputStream.available()",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.GETInputStream.close()",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.GETInputStream.equals(Object)",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.GETInputStream.hashCode()",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.GETInputStream.mark(int)",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.GETInputStream.markSupported()",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.GETInputStream.read()",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.GETInputStream.read(byte[])",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.GETInputStream.read(byte[],int,int)",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.GETInputStream.reset()",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.GETInputStream.skip(long)",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.GETInputStream.toString()",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.HttpClientHandler()",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.HttpClientHelper2x.HttpClientHelper2x()",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.HttpClientHelper2x.getHttpClientMajorVersion()",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.HttpClientHelper2x.getResponseContentLength(HeadMethod)",2,3,3
"fr.jayasoft.ivy.url.HttpClientHandler.HttpClientHelper3x.HttpClientHelper3x()",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.HttpClientHelper3x.getHttpClientMajorVersion()",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.HttpClientHelper3x.getResponseContentLength(HeadMethod)",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.configureProxy()",1,2,2
"fr.jayasoft.ivy.url.HttpClientHandler.doGet(URL)",1,2,2
"fr.jayasoft.ivy.url.HttpClientHandler.doHead(URL,int)",1,2,2
"fr.jayasoft.ivy.url.HttpClientHandler.download(URL,File,CopyProgressListener)",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.getClient(URL)",1,4,4
"fr.jayasoft.ivy.url.HttpClientHandler.getCredentials(URL)",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.getHttpClientHelper()",1,4,4
"fr.jayasoft.ivy.url.HttpClientHandler.getHttpClientMajorVersion()",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.getLastModified(HeadMethod)",2,2,3
"fr.jayasoft.ivy.url.HttpClientHandler.getResponseContentLength(HeadMethod)",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.getURLInfo(URL)",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.getURLInfo(URL,int)",2,9,9
"fr.jayasoft.ivy.url.HttpClientHandler.openStream(URL)",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.useAuthentication(URL)",1,1,1
"fr.jayasoft.ivy.url.HttpClientHandler.useProxy()",1,2,2
"fr.jayasoft.ivy.url.HttpClientHandler.useProxyAuthentication()",1,2,2
"fr.jayasoft.ivy.url.IvyAuthenticator.IvyAuthenticator()",1,1,1
"fr.jayasoft.ivy.url.IvyAuthenticator.getPasswordAuthentication()",1,2,2
"fr.jayasoft.ivy.url.URLHandler.URLInfo.URLInfo(boolean,long,long)",1,1,1
"fr.jayasoft.ivy.url.URLHandler.URLInfo.getContentLength()",1,1,1
"fr.jayasoft.ivy.url.URLHandler.URLInfo.getLastModified()",1,1,1
"fr.jayasoft.ivy.url.URLHandler.URLInfo.isReachable()",1,1,1
"fr.jayasoft.ivy.url.URLHandlerDispatcher.URLHandlerDispatcher()",1,1,1
"fr.jayasoft.ivy.url.URLHandlerDispatcher.download(URL,File,CopyProgressListener)",1,1,1
"fr.jayasoft.ivy.url.URLHandlerDispatcher.getContentLength(URL)",1,1,1
"fr.jayasoft.ivy.url.URLHandlerDispatcher.getContentLength(URL,int)",1,1,1
"fr.jayasoft.ivy.url.URLHandlerDispatcher.getDefault()",1,1,1
"fr.jayasoft.ivy.url.URLHandlerDispatcher.getHandler(String)",1,1,2
"fr.jayasoft.ivy.url.URLHandlerDispatcher.getLastModified(URL)",1,1,1
"fr.jayasoft.ivy.url.URLHandlerDispatcher.getLastModified(URL,int)",1,1,1
"fr.jayasoft.ivy.url.URLHandlerDispatcher.getURLInfo(URL)",1,1,1
"fr.jayasoft.ivy.url.URLHandlerDispatcher.getURLInfo(URL,int)",1,1,1
"fr.jayasoft.ivy.url.URLHandlerDispatcher.isReachable(URL)",1,1,1
"fr.jayasoft.ivy.url.URLHandlerDispatcher.isReachable(URL,int)",1,1,1
"fr.jayasoft.ivy.url.URLHandlerDispatcher.openStream(URL)",1,1,1
"fr.jayasoft.ivy.url.URLHandlerDispatcher.setDefault(URLHandler)",1,1,1
"fr.jayasoft.ivy.url.URLHandlerDispatcher.setDownloader(String,URLHandler)",1,1,1
"fr.jayasoft.ivy.url.URLHandlerRegistry.getDefault()",1,1,1
"fr.jayasoft.ivy.url.URLHandlerRegistry.getHttp()",1,2,2
"fr.jayasoft.ivy.url.URLHandlerRegistry.setDefault(URLHandler)",1,1,1
"fr.jayasoft.ivy.util.ChecksumHelper.byteArrayToHexString(byte[])",2,2,4
"fr.jayasoft.ivy.util.ChecksumHelper.check(File,File,String)",1,2,2
"fr.jayasoft.ivy.util.ChecksumHelper.compute(File,String)",1,2,2
"fr.jayasoft.ivy.util.ChecksumHelper.computeAsString(File,String)",1,1,1
"fr.jayasoft.ivy.util.ChecksumHelper.getMessageDigest(String)",2,1,3
"fr.jayasoft.ivy.util.Configurator.Attribute.getDefault()",1,1,1
"fr.jayasoft.ivy.util.Configurator.Attribute.getName()",1,1,1
"fr.jayasoft.ivy.util.Configurator.Attribute.setDefault(String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.Attribute.setName(String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.Element.getName()",1,1,1
"fr.jayasoft.ivy.util.Configurator.Element.isOptional()",1,1,1
"fr.jayasoft.ivy.util.Configurator.Element.setName(String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.Element.setOptional(boolean)",1,1,1
"fr.jayasoft.ivy.util.Configurator.Macro.Macro(MacroDef)",1,1,1
"fr.jayasoft.ivy.util.Configurator.Macro.defineAttribute(String,String)",2,2,2
"fr.jayasoft.ivy.util.Configurator.Macro.play(Configurator)",1,1,1
"fr.jayasoft.ivy.util.Configurator.Macro.recordCreateChild(String)",1,2,2
"fr.jayasoft.ivy.util.Configurator.MacroDef.MacroDef(String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.MacroDef.addAttribute(String,String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.MacroDef.addConfiguredAttribute(Attribute)",1,1,1
"fr.jayasoft.ivy.util.Configurator.MacroDef.addConfiguredElement(Element)",1,1,1
"fr.jayasoft.ivy.util.Configurator.MacroDef.addElement(String,boolean)",1,1,1
"fr.jayasoft.ivy.util.Configurator.MacroDef.createMacro()",1,1,1
"fr.jayasoft.ivy.util.Configurator.MacroDef.getAttribute(String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.MacroDef.getName()",1,1,1
"fr.jayasoft.ivy.util.Configurator.MacroDef.play(Configurator,MacroRecord,Map,Map)",5,8,8
"fr.jayasoft.ivy.util.Configurator.MacroDef.play(Configurator,Map,Map)",4,4,4
"fr.jayasoft.ivy.util.Configurator.MacroDef.recordCreateChild(String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.MacroDef.replaceParam(String,Map)",1,1,1
"fr.jayasoft.ivy.util.Configurator.MacroRecord.MacroRecord(String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.MacroRecord.getAttributes()",1,1,1
"fr.jayasoft.ivy.util.Configurator.MacroRecord.getChildren()",1,1,1
"fr.jayasoft.ivy.util.Configurator.MacroRecord.getName()",1,1,1
"fr.jayasoft.ivy.util.Configurator.MacroRecord.recordAttribute(String,String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.MacroRecord.recordChild(String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.ObjectDescriptor(Object,String)",8,17,19
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.addAddConfiguredMethod(Method)",1,1,1
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.addAddConfiguredMethod(String,Method)",1,1,1
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.addAddMethod(Method)",1,1,1
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.addAddMethod(String,Method)",1,1,1
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.addCreateMethod(String,Method)",1,1,1
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.addSetMethod(String,Method)",1,1,1
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.getAddConfiguredMethod(Class)",1,1,1
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.getAddConfiguredMethod(String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.getAddMethod(Class)",1,1,1
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.getAddMethod(String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.getCreateMethod(String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.getObject()",1,1,1
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.getObjectName()",1,1,1
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.getSetMethod(String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.ObjectDescriptor.getTypeMatchingMethod(Class,Map)",4,3,4
"fr.jayasoft.ivy.util.Configurator.addChild(ObjectDescriptor,Class,String,Object)",3,5,5
"fr.jayasoft.ivy.util.Configurator.addChild(String,Object)",2,3,4
"fr.jayasoft.ivy.util.Configurator.addConfiguredMacrodef(MacroDef)",1,1,1
"fr.jayasoft.ivy.util.Configurator.addMacroAttribute(String,String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.addMacroElement(String,boolean)",1,1,1
"fr.jayasoft.ivy.util.Configurator.addText(String)",2,2,3
"fr.jayasoft.ivy.util.Configurator.clear()",1,1,1
"fr.jayasoft.ivy.util.Configurator.endCreateChild()",4,6,7
"fr.jayasoft.ivy.util.Configurator.endMacroDef()",1,1,1
"fr.jayasoft.ivy.util.Configurator.getCurrent()",1,2,2
"fr.jayasoft.ivy.util.Configurator.getDepth()",1,1,1
"fr.jayasoft.ivy.util.Configurator.getTypeDef(String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.setAttribute(String,String)",5,19,20
"fr.jayasoft.ivy.util.Configurator.setCurrent(Object,String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.setRoot(Object)",2,1,2
"fr.jayasoft.ivy.util.Configurator.startCreateChild(String)",11,13,14
"fr.jayasoft.ivy.util.Configurator.startMacroDef(String)",1,1,1
"fr.jayasoft.ivy.util.Configurator.typeDef(String,Class)",1,1,1
"fr.jayasoft.ivy.util.Configurator.typeDef(String,String)",1,1,1
"fr.jayasoft.ivy.util.CopyProgressEvent.CopyProgressEvent()",1,1,1
"fr.jayasoft.ivy.util.CopyProgressEvent.CopyProgressEvent(byte[],int,long)",1,1,1
"fr.jayasoft.ivy.util.CopyProgressEvent.CopyProgressEvent(byte[],long)",1,1,1
"fr.jayasoft.ivy.util.CopyProgressEvent.getBuffer()",1,1,1
"fr.jayasoft.ivy.util.CopyProgressEvent.getReadBytes()",1,1,1
"fr.jayasoft.ivy.util.CopyProgressEvent.getTotalReadBytes()",1,1,1
"fr.jayasoft.ivy.util.CopyProgressEvent.update(byte[],int,long)",1,1,1
"fr.jayasoft.ivy.util.Credentials.Credentials(String,String,String,String)",1,1,1
"fr.jayasoft.ivy.util.Credentials.buildKey(String,String)",2,2,3
"fr.jayasoft.ivy.util.Credentials.equals(Object)",3,2,3
"fr.jayasoft.ivy.util.Credentials.getHost()",1,1,1
"fr.jayasoft.ivy.util.Credentials.getKey()",1,1,1
"fr.jayasoft.ivy.util.Credentials.getPasswd()",1,1,1
"fr.jayasoft.ivy.util.Credentials.getRealm()",1,1,1
"fr.jayasoft.ivy.util.Credentials.getUserName()",1,1,1
"fr.jayasoft.ivy.util.Credentials.hashCode()",1,1,1
"fr.jayasoft.ivy.util.Credentials.toString()",1,1,1
"fr.jayasoft.ivy.util.CredentialsUtil.CredentialPanel.CredentialPanel(Credentials,File)",1,5,5
"fr.jayasoft.ivy.util.CredentialsUtil.loadPassfile(Credentials,File)",2,7,8
"fr.jayasoft.ivy.util.CredentialsUtil.promptCredentials(Credentials,File)",2,6,8
"fr.jayasoft.ivy.util.DefaultMessageImpl.DefaultMessageImpl(int)",1,1,1
"fr.jayasoft.ivy.util.DefaultMessageImpl.endProgress(String)",1,1,1
"fr.jayasoft.ivy.util.DefaultMessageImpl.getLevel()",1,1,1
"fr.jayasoft.ivy.util.DefaultMessageImpl.log(String,int)",1,2,2
"fr.jayasoft.ivy.util.DefaultMessageImpl.progress()",1,1,1
"fr.jayasoft.ivy.util.DefaultMessageImpl.rawlog(String,int)",1,1,1
"fr.jayasoft.ivy.util.EncrytedProperties.EncrytedProperties()",1,1,1
"fr.jayasoft.ivy.util.EncrytedProperties.contains(Object)",1,1,1
"fr.jayasoft.ivy.util.EncrytedProperties.containsValue(Object)",1,1,1
"fr.jayasoft.ivy.util.EncrytedProperties.getProperty(String)",1,1,1
"fr.jayasoft.ivy.util.EncrytedProperties.getProperty(String,String)",1,1,1
"fr.jayasoft.ivy.util.EncrytedProperties.setProperty(String,String)",1,1,1
"fr.jayasoft.ivy.util.EncrytedProperties.values()",1,2,2
"fr.jayasoft.ivy.util.FileUtil.concat(String,String)",1,1,1
"fr.jayasoft.ivy.util.FileUtil.copy(File,File,CopyProgressListener)",1,1,1
"fr.jayasoft.ivy.util.FileUtil.copy(File,File,CopyProgressListener,boolean)",4,5,6
"fr.jayasoft.ivy.util.FileUtil.copy(InputStream,File,CopyProgressListener)",1,2,2
"fr.jayasoft.ivy.util.FileUtil.copy(InputStream,OutputStream,CopyProgressListener)",3,6,8
"fr.jayasoft.ivy.util.FileUtil.copy(URL,File,CopyProgressListener)",1,1,1
"fr.jayasoft.ivy.util.FileUtil.forceDelete(File)",1,3,3
"fr.jayasoft.ivy.util.FileUtil.getPathFiles(File,File)",1,4,4
"fr.jayasoft.ivy.util.FileUtil.listAll(File)",1,1,1
"fr.jayasoft.ivy.util.FileUtil.listAll(File,Collection)",1,4,4
"fr.jayasoft.ivy.util.FileUtil.readEntirely(BufferedReader)",1,2,2
"fr.jayasoft.ivy.util.IvyPattern.getPattern()",1,1,1
"fr.jayasoft.ivy.util.IvyPattern.setPattern(String)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.OriginalArtifactNameValue.OriginalArtifactNameValue(ArtifactOrigin)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.OriginalArtifactNameValue.OriginalArtifactNameValue(String,String,String,String,String,String,String)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.OriginalArtifactNameValue.toString()",3,4,4
"fr.jayasoft.ivy.util.IvyPatternHelper.getTokenRoot(String)",2,2,2
"fr.jayasoft.ivy.util.IvyPatternHelper.getTokenString(String)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.main(String[])",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substitute(String,Artifact)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substitute(String,Artifact,ArtifactOrigin)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substitute(String,Artifact,String)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substitute(String,Map,Map)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substitute(String,ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substitute(String,ModuleRevisionId,Artifact)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substitute(String,ModuleRevisionId,Artifact,String)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substitute(String,ModuleRevisionId,Artifact,String,ArtifactOrigin)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substitute(String,ModuleRevisionId,String,String,String)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substitute(String,String,String,String,String,String,String)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substitute(String,String,String,String,String,String,String,String)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substitute(String,String,String,String,String,String,String,String,ArtifactOrigin,Map)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substitute(String,String,String,String,String,String,String,String,Map)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substitute(String,String,String,String,String,String,String,String,String,ArtifactOrigin,Map)",1,1,12
"fr.jayasoft.ivy.util.IvyPatternHelper.substituteParams(String,Map)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substituteParams(String,Map,Stack)",5,4,5
"fr.jayasoft.ivy.util.IvyPatternHelper.substituteToken(String,String,String)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substituteToken(StringBuffer,String,String)",1,2,2
"fr.jayasoft.ivy.util.IvyPatternHelper.substituteTokens(String,Map)",9,9,21
"fr.jayasoft.ivy.util.IvyPatternHelper.substituteVariable(String,String,String)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substituteVariable(StringBuffer,String,String)",1,2,2
"fr.jayasoft.ivy.util.IvyPatternHelper.substituteVariables(String,Map)",1,1,1
"fr.jayasoft.ivy.util.IvyPatternHelper.substituteVariables(String,Map,Stack)",5,4,5
"fr.jayasoft.ivy.util.IvyThread.IvyThread()",1,1,1
"fr.jayasoft.ivy.util.IvyThread.IvyThread(Runnable)",1,1,1
"fr.jayasoft.ivy.util.IvyThread.IvyThread(Runnable,String)",1,1,1
"fr.jayasoft.ivy.util.IvyThread.IvyThread(String)",1,1,1
"fr.jayasoft.ivy.util.IvyThread.IvyThread(ThreadGroup,Runnable)",1,1,1
"fr.jayasoft.ivy.util.IvyThread.IvyThread(ThreadGroup,Runnable,String)",1,1,1
"fr.jayasoft.ivy.util.IvyThread.IvyThread(ThreadGroup,Runnable,String,long)",1,1,1
"fr.jayasoft.ivy.util.IvyThread.IvyThread(ThreadGroup,String)",1,1,1
"fr.jayasoft.ivy.util.IvyThread.initContext()",1,1,1
"fr.jayasoft.ivy.util.IvyThread.run()",1,1,1
"fr.jayasoft.ivy.util.Message.debug(String)",1,2,2
"fr.jayasoft.ivy.util.Message.endProgress()",1,1,1
"fr.jayasoft.ivy.util.Message.endProgress(String)",1,3,3
"fr.jayasoft.ivy.util.Message.error(String)",1,2,2
"fr.jayasoft.ivy.util.Message.getImpl()",1,1,1
"fr.jayasoft.ivy.util.Message.getProblems()",1,1,1
"fr.jayasoft.ivy.util.Message.info(String)",1,2,2
"fr.jayasoft.ivy.util.Message.init(MessageImpl)",1,1,1
"fr.jayasoft.ivy.util.Message.isInitialised()",1,1,1
"fr.jayasoft.ivy.util.Message.isShowProgress()",1,1,1
"fr.jayasoft.ivy.util.Message.progress()",1,3,3
"fr.jayasoft.ivy.util.Message.rawinfo(String)",1,2,2
"fr.jayasoft.ivy.util.Message.setImpl(MessageImpl)",1,1,1
"fr.jayasoft.ivy.util.Message.setShowProgress(boolean)",1,1,1
"fr.jayasoft.ivy.util.Message.showInfo()",1,4,4
"fr.jayasoft.ivy.util.Message.sumupProblems()",1,8,8
"fr.jayasoft.ivy.util.Message.uninit()",1,1,1
"fr.jayasoft.ivy.util.Message.verbose(String)",1,2,2
"fr.jayasoft.ivy.util.Message.warn(String)",1,2,2
"fr.jayasoft.ivy.util.PropertiesFile.PropertiesFile(File,String)",1,4,5
"fr.jayasoft.ivy.util.PropertiesFile.save()",1,5,6
"fr.jayasoft.ivy.util.StringUtils.decrypt(String)",2,2,3
"fr.jayasoft.ivy.util.StringUtils.decrypt(char)",3,1,3
"fr.jayasoft.ivy.util.StringUtils.encrypt(String)",4,2,4
"fr.jayasoft.ivy.util.StringUtils.join(Object[],String)",1,3,3
"fr.jayasoft.ivy.util.StringUtils.uncapitalize(String)",3,3,4
"fr.jayasoft.ivy.util.XMLHelper.canUseSchemaValidation()",1,1,1
"fr.jayasoft.ivy.util.XMLHelper.newSAXParser(URL,InputStream)",2,3,4
"fr.jayasoft.ivy.util.XMLHelper.parse(InputStream,URL,DefaultHandler,LexicalHandler)",1,5,6
"fr.jayasoft.ivy.util.XMLHelper.parse(URL,URL,DefaultHandler)",1,1,1
"fr.jayasoft.ivy.util.XMLHelper.parse(URL,URL,DefaultHandler,LexicalHandler)",1,1,2
"fr.jayasoft.ivy.version.AbstractVersionMatcher.AbstractVersionMatcher()",1,1,1
"fr.jayasoft.ivy.version.AbstractVersionMatcher.AbstractVersionMatcher(String)",1,1,1
"fr.jayasoft.ivy.version.AbstractVersionMatcher.accept(ModuleRevisionId,ModuleDescriptor)",1,1,1
"fr.jayasoft.ivy.version.AbstractVersionMatcher.getIvy()",1,1,1
"fr.jayasoft.ivy.version.AbstractVersionMatcher.getName()",1,1,1
"fr.jayasoft.ivy.version.AbstractVersionMatcher.needModuleDescriptor(ModuleRevisionId,ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.version.AbstractVersionMatcher.setIvy(Ivy)",1,1,1
"fr.jayasoft.ivy.version.AbstractVersionMatcher.setName(String)",1,1,1
"fr.jayasoft.ivy.version.AbstractVersionMatcher.toString()",1,1,1
"fr.jayasoft.ivy.version.ChainVersionMatcher.ChainVersionMatcher()",1,1,1
"fr.jayasoft.ivy.version.ChainVersionMatcher.accept(ModuleRevisionId,ModuleDescriptor)",3,4,4
"fr.jayasoft.ivy.version.ChainVersionMatcher.accept(ModuleRevisionId,ModuleRevisionId)",3,4,4
"fr.jayasoft.ivy.version.ChainVersionMatcher.add(VersionMatcher)",1,1,1
"fr.jayasoft.ivy.version.ChainVersionMatcher.getMatchers()",1,1,1
"fr.jayasoft.ivy.version.ChainVersionMatcher.isDynamic(ModuleRevisionId)",3,2,3
"fr.jayasoft.ivy.version.ChainVersionMatcher.needModuleDescriptor(ModuleRevisionId,ModuleRevisionId)",3,4,4
"fr.jayasoft.ivy.version.ExactVersionMatcher.ExactVersionMatcher()",1,1,1
"fr.jayasoft.ivy.version.ExactVersionMatcher.accept(ModuleRevisionId,ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.version.ExactVersionMatcher.isDynamic(ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.version.LatestVersionMatcher.LatestVersionMatcher()",1,1,1
"fr.jayasoft.ivy.version.LatestVersionMatcher.accept(ModuleRevisionId,ModuleDescriptor)",1,1,1
"fr.jayasoft.ivy.version.LatestVersionMatcher.accept(ModuleRevisionId,ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.version.LatestVersionMatcher.isDynamic(ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.version.LatestVersionMatcher.needModuleDescriptor(ModuleRevisionId,ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.version.Match.NoMatchMatcher.isExact()",1,1,1
"fr.jayasoft.ivy.version.Match.NoMatchMatcher.matches(String)",1,1,1
"fr.jayasoft.ivy.version.Match.getArgs()",1,1,1
"fr.jayasoft.ivy.version.Match.getMatcher()",1,1,1
"fr.jayasoft.ivy.version.Match.getPattern()",1,1,1
"fr.jayasoft.ivy.version.Match.getPatternMatcher(ModuleRevisionId)",2,2,3
"fr.jayasoft.ivy.version.Match.getRevision()",1,1,1
"fr.jayasoft.ivy.version.Match.getRevisionArgs(String)",3,1,3
"fr.jayasoft.ivy.version.Match.setArgs(String)",1,1,1
"fr.jayasoft.ivy.version.Match.setMatcher(String)",1,1,1
"fr.jayasoft.ivy.version.Match.setPattern(String)",1,1,1
"fr.jayasoft.ivy.version.Match.setRevision(String)",1,1,1
"fr.jayasoft.ivy.version.Match.split(String)",2,2,3
"fr.jayasoft.ivy.version.PatternVersionMatcher.accept(ModuleRevisionId,ModuleRevisionId)",1,5,5
"fr.jayasoft.ivy.version.PatternVersionMatcher.addMatch(Match)",1,1,1
"fr.jayasoft.ivy.version.PatternVersionMatcher.init()",1,4,4
"fr.jayasoft.ivy.version.PatternVersionMatcher.isDynamic(ModuleRevisionId)",1,2,2
"fr.jayasoft.ivy.version.SubVersionMatcher.SubVersionMatcher()",1,1,1
"fr.jayasoft.ivy.version.SubVersionMatcher.accept(ModuleRevisionId,ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.version.SubVersionMatcher.isDynamic(ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.version.VersionRangeMatcher.MRIDArtifactInfo.MRIDArtifactInfo(ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.version.VersionRangeMatcher.MRIDArtifactInfo.getLastModified()",1,1,1
"fr.jayasoft.ivy.version.VersionRangeMatcher.MRIDArtifactInfo.getRevision()",1,1,1
"fr.jayasoft.ivy.version.VersionRangeMatcher.VersionRangeMatcher()",1,1,1
"fr.jayasoft.ivy.version.VersionRangeMatcher.VersionRangeMatcher(String)",1,1,1
"fr.jayasoft.ivy.version.VersionRangeMatcher.VersionRangeMatcher(String,Ivy)",1,1,1
"fr.jayasoft.ivy.version.VersionRangeMatcher.VersionRangeMatcher(String,LatestStrategy)",1,1,1
"fr.jayasoft.ivy.version.VersionRangeMatcher.accept(ModuleRevisionId,ModuleRevisionId)",4,5,5
"fr.jayasoft.ivy.version.VersionRangeMatcher.getLatestStrategy()",5,2,5
"fr.jayasoft.ivy.version.VersionRangeMatcher.isDynamic(ModuleRevisionId)",1,1,1
"fr.jayasoft.ivy.version.VersionRangeMatcher.isLower(ModuleRevisionId,String,ModuleRevisionId,boolean)",1,1,2
"fr.jayasoft.ivy.version.VersionRangeMatcher.isUpper(ModuleRevisionId,String,ModuleRevisionId,boolean)",1,1,2
"fr.jayasoft.ivy.version.VersionRangeMatcher.setLatest(String)",1,1,1
"fr.jayasoft.ivy.version.VersionRangeMatcher.setLatestStrategy(LatestStrategy)",1,1,1
"fr.jayasoft.ivy.xml.XmlIvyConfigurationParser.XmlIvyConfigurationParser(Ivy)",1,1,1
"fr.jayasoft.ivy.xml.XmlIvyConfigurationParser.doParse(URL)",1,3,5
"fr.jayasoft.ivy.xml.XmlIvyConfigurationParser.endDocument()",7,8,8
"fr.jayasoft.ivy.xml.XmlIvyConfigurationParser.endElement(String,String,String)",1,6,6
"fr.jayasoft.ivy.xml.XmlIvyConfigurationParser.parse(Configurator,URL)",1,1,1
"fr.jayasoft.ivy.xml.XmlIvyConfigurationParser.parse(URL)",1,2,2
"fr.jayasoft.ivy.xml.XmlIvyConfigurationParser.startElement(String,String,String,Attributes)",23,42,50
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.Parser.Parser(ModuleDescriptorParser,Ivy,boolean)",1,1,1
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.Parser.addDependencyArtifact(String,Attributes,boolean)",2,11,16
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.Parser.addDependencyArtifacts(String,Attributes)",1,1,1
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.Parser.addDependencyArtifactsExcludes(String,Attributes)",1,1,1
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.Parser.addDependencyArtifactsIncludes(String,Attributes)",1,1,1
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.Parser.checkConfigurations()",1,2,2
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.Parser.endElement(String,String,String)",1,15,15
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.Parser.parse(URL,Resource,boolean)",1,6,6
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.Parser.replaceConfigurationWildcards()",1,2,2
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.Parser.startElement(String,String,String,Attributes)",23,63,75
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.XmlModuleDescriptorParser()",1,1,1
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.accept(Resource)",1,1,1
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.getInstance()",1,1,1
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.main(String[])",1,1,1
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.parseDescriptor(Ivy,URL,Resource,boolean)",1,1,1
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.toIvyFile(InputStream,Resource,File,ModuleDescriptor)",1,3,3
"fr.jayasoft.ivy.xml.XmlModuleDescriptorParser.toString()",1,1,1
"fr.jayasoft.ivy.xml.XmlModuleDescriptorUpdater.copyHeader(InputStream,PrintWriter)",3,3,3
"fr.jayasoft.ivy.xml.XmlModuleDescriptorUpdater.update(Ivy,InputStream,File,Map,String,String,Date,Namespace,boolean)",1,2,4
"fr.jayasoft.ivy.xml.XmlModuleDescriptorUpdater.update(Ivy,InputStream,OutputStream,Map,String,String,Date,Namespace,boolean)",3,41,43
"fr.jayasoft.ivy.xml.XmlModuleDescriptorUpdater.update(Ivy,URL,File,Map,String,String,Date,Namespace,boolean)",1,1,1
"fr.jayasoft.ivy.xml.XmlModuleDescriptorUpdater.update(URL,File,Map,String,String,Date)",1,1,1
"fr.jayasoft.ivy.xml.XmlModuleDescriptorWriter.getConfs(ModuleDescriptor,Artifact)",1,4,4
"fr.jayasoft.ivy.xml.XmlModuleDescriptorWriter.write(ModuleDescriptor,File)",1,36,36
"fr.jayasoft.ivy.xml.XmlReportParser.SaxXmlReportParser.SaxXmlReportParser(File)",1,1,1
"fr.jayasoft.ivy.xml.XmlReportParser.SaxXmlReportParser.getArtifacts()",1,1,1
"fr.jayasoft.ivy.xml.XmlReportParser.SaxXmlReportParser.getModuleRevisionIds()",1,1,1
"fr.jayasoft.ivy.xml.XmlReportParser.SaxXmlReportParser.getRealModuleRevisionIds()",1,1,1
"fr.jayasoft.ivy.xml.XmlReportParser.SaxXmlReportParser.parse()",7,13,15
"fr.jayasoft.ivy.xml.XmlReportParser.getArtifacts(File)",1,2,2
"fr.jayasoft.ivy.xml.XmlReportParser.getArtifacts(ModuleId,String,File)",1,1,1
"fr.jayasoft.ivy.xml.XmlReportParser.getDependencyRevisionIds(File)",1,2,2
"fr.jayasoft.ivy.xml.XmlReportParser.getDependencyRevisionIds(ModuleId,String,File)",1,1,1
"fr.jayasoft.ivy.xml.XmlReportParser.getRealDependencyRevisionIds(File)",1,2,2
"fr.jayasoft.ivy.xml.XmlReportParser.getRealDependencyRevisionIds(ModuleId,String,File)",1,1,1
"fr.jayasoft.ivy.xml.XmlReportParser.getReportFile(ModuleId,String,File)",2,1,2
"list.ListFile.list(File)",1,1,1
"list.ListFile.list(File,Collection)",1,3,3
"list.Main.getOptions()",1,1,1
"list.Main.main(String[])",1,3,3
"myapp.Main.main(String[])",1,1,1
"null.compare(Object,Object)",2,1,3
"null.initialValue()",1,1,1
"null.isIdentity()",1,1,1
"null.isNumber(String)",1,1,1
"null.transform(ModuleRevisionId)",4,3,4
"size.FileSize.totalSize(Collection)",1,2,2
"size.FileSize.totalSize(File)",1,1,1
"sizewhere.Main.getOptions()",1,1,1
"sizewhere.Main.main(String[])",1,2,2
"sizewhere.SizeWhere.totalSize(File,String)",1,1,1
"standalone.Main.capitalizeWords(String)",1,1,1
"standalone.Main.getVersion()",2,3,3
"standalone.Main.main(String[])",1,1,1
"version.Version.register(String)",1,2,2

