Method,CALL,CALLED,IMP,LOC,NBD,NP,STAT,v(G)
"org.apache.log4j.Appender.addFilter(Filter)",n/a,7,2,n/a,n/a,1,n/a,n/a
"org.apache.log4j.Appender.clearFilters()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.apache.log4j.Appender.close()",n/a,7,23,n/a,n/a,0,n/a,n/a
"org.apache.log4j.Appender.doAppend(LoggingEvent)",n/a,2,4,n/a,n/a,1,n/a,n/a
"org.apache.log4j.Appender.getErrorHandler()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.apache.log4j.Appender.getFilter()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.apache.log4j.Appender.getLayout()",n/a,4,2,n/a,n/a,0,n/a,n/a
"org.apache.log4j.Appender.getName()",n/a,14,2,n/a,n/a,0,n/a,n/a
"org.apache.log4j.Appender.requiresLayout()",n/a,0,24,n/a,n/a,0,n/a,n/a
"org.apache.log4j.Appender.setErrorHandler(ErrorHandler)",n/a,0,3,n/a,n/a,1,n/a,n/a
"org.apache.log4j.Appender.setLayout(Layout)",n/a,3,2,n/a,n/a,1,n/a,n/a
"org.apache.log4j.Appender.setName(String)",n/a,9,2,n/a,n/a,1,n/a,n/a
"org.apache.log4j.AppenderSkeleton.AppenderSkeleton()",0,1,n/a,10,0,0,1,1
"org.apache.log4j.AppenderSkeleton.AppenderSkeleton(boolean)",0,27,n/a,8,0,1,1,1
"org.apache.log4j.AppenderSkeleton.activateOptions()",0,38,n/a,7,0,0,1,1
"org.apache.log4j.AppenderSkeleton.addFilter(Filter)",1,7,n/a,14,1,1,5,2
"org.apache.log4j.AppenderSkeleton.append(LoggingEvent)",n/a,2,22,n/a,n/a,1,n/a,n/a
"org.apache.log4j.AppenderSkeleton.clearFilters()",0,2,n/a,9,0,0,2,1
"org.apache.log4j.AppenderSkeleton.doAppend(LoggingEvent)",9,6,n/a,44,3,1,24,9
"org.apache.log4j.AppenderSkeleton.finalize()",3,3,n/a,15,1,0,4,2
"org.apache.log4j.AppenderSkeleton.getErrorHandler()",0,0,n/a,10,0,0,1,1
"org.apache.log4j.AppenderSkeleton.getFilter()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.AppenderSkeleton.getFirstFilter()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.AppenderSkeleton.getLayout()",0,13,n/a,6,0,0,1,1
"org.apache.log4j.AppenderSkeleton.getName()",0,23,n/a,6,0,0,1,1
"org.apache.log4j.AppenderSkeleton.getThreshold()",0,3,n/a,9,0,0,1,1
"org.apache.log4j.AppenderSkeleton.isActive()",0,8,n/a,8,0,0,1,2
"org.apache.log4j.AppenderSkeleton.isAsSevereAsThreshold(Level)",1,1,n/a,8,0,1,1,2
"org.apache.log4j.AppenderSkeleton.isAsSevereAsThreshold(Priority)",1,1,n/a,9,0,1,1,2
"org.apache.log4j.AppenderSkeleton.isClosed()",0,6,n/a,7,0,0,1,1
"org.apache.log4j.AppenderSkeleton.setErrorHandler(ErrorHandler)",0,0,n/a,9,0,1,0,1
"org.apache.log4j.AppenderSkeleton.setLayout(Layout)",0,44,n/a,8,0,1,1,1
"org.apache.log4j.AppenderSkeleton.setName(String)",0,32,n/a,6,0,1,1,1
"org.apache.log4j.AppenderSkeleton.setThreshold(Priority)",0,7,n/a,15,0,1,1,1
"org.apache.log4j.AsyncAppender.AsyncAppender()",8,13,n/a,19,0,0,7,1
"org.apache.log4j.AsyncAppender.DiscardSummary.DiscardSummary(LoggingEvent)",0,1,n/a,9,0,1,2,1
"org.apache.log4j.AsyncAppender.DiscardSummary.add(LoggingEvent)",4,1,n/a,11,1,1,3,2
"org.apache.log4j.AsyncAppender.DiscardSummary.createEvent()",6,1,n/a,17,0,0,2,1
"org.apache.log4j.AsyncAppender.Dispatcher.Dispatcher(AsyncAppender,List,Map,AppenderAttachableImpl)",0,1,n/a,16,0,4,4,1
"org.apache.log4j.AsyncAppender.Dispatcher.run()",18,0,n/a,63,5,0,28,9
"org.apache.log4j.AsyncAppender.addAppender(Appender)",1,10,n/a,10,1,1,2,1
"org.apache.log4j.AsyncAppender.append(LoggingEvent)",17,2,n/a,75,4,1,29,14
"org.apache.log4j.AsyncAppender.close()",10,17,n/a,36,4,0,14,5
"org.apache.log4j.AsyncAppender.getAllAppenders()",1,11,n/a,9,1,0,2,1
"org.apache.log4j.AsyncAppender.getAppender(String)",1,1,n/a,11,1,1,2,1
"org.apache.log4j.AsyncAppender.getBlocking()",0,2,n/a,10,0,0,1,1
"org.apache.log4j.AsyncAppender.getBufferSize()",0,2,n/a,7,0,0,1,1
"org.apache.log4j.AsyncAppender.getLocationInfo()",0,1,n/a,9,0,0,1,1
"org.apache.log4j.AsyncAppender.isAttached(Appender)",1,3,n/a,10,1,1,2,1
"org.apache.log4j.AsyncAppender.removeAllAppenders()",1,1,n/a,8,1,0,2,1
"org.apache.log4j.AsyncAppender.removeAppender(Appender)",1,2,n/a,9,1,1,2,1
"org.apache.log4j.AsyncAppender.removeAppender(String)",1,2,n/a,9,1,1,2,1
"org.apache.log4j.AsyncAppender.requiresLayout()",0,1,n/a,6,0,0,1,1
"org.apache.log4j.AsyncAppender.setBlocking(boolean)",1,3,n/a,12,1,1,3,1
"org.apache.log4j.AsyncAppender.setBufferSize(int)",2,4,n/a,24,1,1,5,3
"org.apache.log4j.AsyncAppender.setLocationInfo(boolean)",0,4,n/a,16,0,1,1,1
"org.apache.log4j.BasicConfigurator.BasicConfigurator()",0,0,n/a,2,0,0,0,1
"org.apache.log4j.BasicConfigurator.configure()",4,8,n/a,10,0,0,2,1
"org.apache.log4j.BasicConfigurator.configure(Appender)",2,2,n/a,8,0,1,2,1
"org.apache.log4j.BasicConfigurator.resetConfiguration()",1,1,n/a,8,0,0,1,1
"org.apache.log4j.Category.Category(String)",1,1,n/a,15,0,1,2,1
"org.apache.log4j.Category.addAppender(Appender)",5,95,n/a,23,2,1,7,2
"org.apache.log4j.Category.assertLog(boolean,String)",1,0,n/a,19,1,2,2,2
"org.apache.log4j.Category.callAppenders(LoggingEvent)",4,6,n/a,33,3,1,13,5
"org.apache.log4j.Category.closeNestedAppenders()",4,2,n/a,17,3,0,6,4
"org.apache.log4j.Category.debug(Object)",4,314,n/a,31,1,1,4,3
"org.apache.log4j.Category.debug(Object,Object)",6,30,n/a,30,2,2,8,4
"org.apache.log4j.Category.debug(Object,Throwable)",4,22,n/a,19,1,2,4,3
"org.apache.log4j.Category.debug(String,Object,Object)",5,23,n/a,22,1,3,5,3
"org.apache.log4j.Category.error(Object)",4,95,n/a,30,1,1,4,3
"org.apache.log4j.Category.error(Object,Object)",6,18,n/a,30,2,2,8,4
"org.apache.log4j.Category.error(Object,Throwable)",4,110,n/a,19,1,2,4,3
"org.apache.log4j.Category.error(String,Object,Object)",5,0,n/a,22,1,3,5,3
"org.apache.log4j.Category.exists(String)",1,0,n/a,10,0,1,1,1
"org.apache.log4j.Category.fatal(Object)",4,17,n/a,29,1,1,4,3
"org.apache.log4j.Category.fatal(Object,Object)",6,0,n/a,30,2,2,8,4
"org.apache.log4j.Category.fatal(Object,Throwable)",4,1,n/a,19,1,2,4,3
"org.apache.log4j.Category.forcedLog(String,Priority,Object,Throwable)",2,39,n/a,8,0,4,1,1
"org.apache.log4j.Category.getAdditivity()",0,1,n/a,6,0,0,1,1
"org.apache.log4j.Category.getAllAppenders()",4,12,n/a,21,2,0,8,2
"org.apache.log4j.Category.getAppender(String)",3,8,n/a,22,2,1,8,3
"org.apache.log4j.Category.getChainedPriority()",0,1,n/a,11,2,0,6,3
"org.apache.log4j.Category.getCurrentCategories()",1,0,n/a,14,0,0,1,1
"org.apache.log4j.Category.getDefaultHierarchy()",1,0,n/a,9,0,0,1,1
"org.apache.log4j.Category.getEffectiveLevel()",0,48,n/a,17,2,0,6,3
"org.apache.log4j.Category.getHierarchy()",0,0,n/a,10,0,0,1,1
"org.apache.log4j.Category.getInstance(Class)",1,0,n/a,6,0,1,1,1
"org.apache.log4j.Category.getInstance(String)",1,0,n/a,6,0,1,1,1
"org.apache.log4j.Category.getLevel()",0,29,n/a,8,0,0,1,1
"org.apache.log4j.Category.getLoggerRepository()",0,17,n/a,9,0,0,1,1
"org.apache.log4j.Category.getName()",0,26,n/a,6,0,0,1,1
"org.apache.log4j.Category.getParent()",0,0,n/a,13,0,0,1,1
"org.apache.log4j.Category.getPriority()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.Category.getResourceBundle()",0,16,n/a,21,2,0,6,3
"org.apache.log4j.Category.getResourceBundleString(String)",3,1,n/a,29,2,1,7,3
"org.apache.log4j.Category.getRoot()",1,2,n/a,6,0,0,1,1
"org.apache.log4j.Category.info(Object)",4,112,n/a,29,1,1,4,3
"org.apache.log4j.Category.info(Object,Object)",6,7,n/a,30,2,2,8,4
"org.apache.log4j.Category.info(Object,Throwable)",4,9,n/a,19,1,2,4,3
"org.apache.log4j.Category.info(String,Object,Object)",5,0,n/a,22,1,3,5,3
"org.apache.log4j.Category.isAttached(Appender)",3,0,n/a,17,2,1,8,3
"org.apache.log4j.Category.isDebugEnabled()",3,7,n/a,48,1,0,3,2
"org.apache.log4j.Category.isEnabledFor(Level)",3,1,n/a,12,1,1,3,2
"org.apache.log4j.Category.isEnabledFor(Priority)",1,0,n/a,6,0,1,1,1
"org.apache.log4j.Category.isErrorEnabled()",3,0,n/a,13,1,0,3,2
"org.apache.log4j.Category.isInfoEnabled()",3,0,n/a,13,1,0,3,2
"org.apache.log4j.Category.isTraceEnabled()",3,2,n/a,13,1,0,3,2
"org.apache.log4j.Category.isWarnEnabled()",3,0,n/a,13,1,0,3,2
"org.apache.log4j.Category.l7dlog(Priority,String)",1,1,n/a,10,0,2,1,1
"org.apache.log4j.Category.l7dlog(Priority,String,Object[])",1,1,n/a,12,0,3,1,1
"org.apache.log4j.Category.l7dlog(Priority,String,Object[],Throwable)",1,4,n/a,12,0,4,1,1
"org.apache.log4j.Category.l7dlog(Priority,String,Throwable)",1,4,n/a,10,0,3,1,1
"org.apache.log4j.Category.l7dlog(String,Priority,String,Object[],Throwable)",6,3,n/a,32,2,5,11,5
"org.apache.log4j.Category.log(Level,Object)",4,34,n/a,13,1,2,4,3
"org.apache.log4j.Category.log(Level,Object,Throwable)",4,2,n/a,11,1,3,4,3
"org.apache.log4j.Category.log(Priority,Object)",1,0,n/a,6,0,2,1,1
"org.apache.log4j.Category.log(Priority,Object,Throwable)",1,0,n/a,6,0,3,1,1
"org.apache.log4j.Category.log(String,Level,Object,Throwable)",4,3,n/a,18,1,4,4,3
"org.apache.log4j.Category.log(String,Priority,Object,Throwable)",1,0,n/a,7,0,4,1,1
"org.apache.log4j.Category.removeAllAppenders()",3,9,n/a,16,2,0,6,2
"org.apache.log4j.Category.removeAppender(Appender)",3,4,n/a,19,2,1,5,3
"org.apache.log4j.Category.removeAppender(String)",3,2,n/a,20,2,1,5,3
"org.apache.log4j.Category.setAdditivity(boolean)",0,9,n/a,8,0,1,1,1
"org.apache.log4j.Category.setHierarchy(LoggerRepository)",0,3,n/a,7,0,1,1,1
"org.apache.log4j.Category.setLevel(Level)",0,41,n/a,19,0,1,1,1
"org.apache.log4j.Category.setPriority(Priority)",0,1,n/a,12,0,1,1,1
"org.apache.log4j.Category.setResourceBundle(ResourceBundle)",0,12,n/a,10,0,1,1,1
"org.apache.log4j.Category.shutdown()",1,0,n/a,23,0,0,1,1
"org.apache.log4j.Category.warn(Object)",4,119,n/a,31,1,1,4,3
"org.apache.log4j.Category.warn(Object,Object)",6,14,n/a,30,2,2,8,4
"org.apache.log4j.Category.warn(Object,Throwable)",4,46,n/a,19,1,2,4,3
"org.apache.log4j.Category.warn(String,Object,Object)",5,0,n/a,22,1,3,5,3
"org.apache.log4j.CategoryKey.CategoryKey(String)",1,3,n/a,4,0,1,2,1
"org.apache.log4j.CategoryKey.equals(Object)",2,8,n/a,10,1,1,5,4
"org.apache.log4j.CategoryKey.hashCode()",0,5,n/a,3,0,0,1,1
"org.apache.log4j.ConsoleAppender.ConsoleAppender()",0,5,n/a,5,0,0,0,1
"org.apache.log4j.ConsoleAppender.ConsoleAppender(Layout)",2,9,n/a,9,0,1,2,1
"org.apache.log4j.ConsoleAppender.ConsoleAppender(Layout,String)",3,1,n/a,10,0,2,3,1
"org.apache.log4j.ConsoleAppender.SystemErrStream.SystemErrStream()",0,1,n/a,2,0,0,0,1
"org.apache.log4j.ConsoleAppender.SystemErrStream.close()",0,2,n/a,2,0,0,0,1
"org.apache.log4j.ConsoleAppender.SystemErrStream.flush()",1,2,n/a,3,0,0,1,1
"org.apache.log4j.ConsoleAppender.SystemErrStream.write(byte[])",1,2,n/a,3,0,1,1,1
"org.apache.log4j.ConsoleAppender.SystemErrStream.write(byte[],int,int)",1,2,n/a,4,0,3,1,1
"org.apache.log4j.ConsoleAppender.SystemErrStream.write(int)",1,2,n/a,3,0,1,1,1
"org.apache.log4j.ConsoleAppender.SystemOutStream.SystemOutStream()",0,1,n/a,2,0,0,0,1
"org.apache.log4j.ConsoleAppender.SystemOutStream.close()",0,2,n/a,2,0,0,0,1
"org.apache.log4j.ConsoleAppender.SystemOutStream.flush()",1,2,n/a,3,0,0,1,1
"org.apache.log4j.ConsoleAppender.SystemOutStream.write(byte[])",1,2,n/a,3,0,1,1,1
"org.apache.log4j.ConsoleAppender.SystemOutStream.write(byte[],int,int)",1,2,n/a,4,0,3,1,1
"org.apache.log4j.ConsoleAppender.SystemOutStream.write(int)",1,2,n/a,3,0,1,1,1
"org.apache.log4j.ConsoleAppender.activateOptions()",13,47,n/a,19,2,0,8,4
"org.apache.log4j.ConsoleAppender.closeWriter()",1,10,n/a,10,1,0,2,2
"org.apache.log4j.ConsoleAppender.getFollow()",0,0,n/a,10,0,0,1,1
"org.apache.log4j.ConsoleAppender.getTarget()",0,0,n/a,9,0,0,1,1
"org.apache.log4j.ConsoleAppender.setFollow(boolean)",0,0,n/a,10,0,1,1,1
"org.apache.log4j.ConsoleAppender.setTarget(String)",7,2,n/a,16,1,1,7,3
"org.apache.log4j.DailyRollingFileAppender.DailyRollingFileAppender()",0,1,n/a,4,0,0,0,1
"org.apache.log4j.DailyRollingFileAppender.DailyRollingFileAppender(Layout,String,String)",2,3,n/a,11,0,3,3,1
"org.apache.log4j.DailyRollingFileAppender.activateOptions()",12,58,n/a,15,1,0,10,3
"org.apache.log4j.DailyRollingFileAppender.computeCheckPeriod()",10,8,n/a,20,3,0,15,6
"org.apache.log4j.DailyRollingFileAppender.getDatePattern()",0,1,n/a,4,0,0,1,1
"org.apache.log4j.DailyRollingFileAppender.printPeriodicity(int)",7,1,n/a,29,1,1,21,8
"org.apache.log4j.DailyRollingFileAppender.rollOver()",13,2,n/a,39,1,0,19,6
"org.apache.log4j.DailyRollingFileAppender.setDatePattern(String)",0,6,n/a,8,0,1,1,1
"org.apache.log4j.DailyRollingFileAppender.subAppend(LoggingEvent)",6,4,n/a,22,2,1,8,3
"org.apache.log4j.DefaultLoggerFactory.DefaultLoggerFactory()",0,3,n/a,1,0,0,0,1
"org.apache.log4j.DefaultLoggerFactory.makeNewLoggerInstance(String)",1,3,n/a,6,0,1,1,1
"org.apache.log4j.Dispatcher.Dispatcher(BoundedFIFO,AsyncAppender)",4,0,n/a,20,0,2,6,1
"org.apache.log4j.Dispatcher.close()",2,0,n/a,10,2,0,4,2
"org.apache.log4j.Dispatcher.run()",7,0,n/a,45,4,0,16,8
"org.apache.log4j.FileAppender.FileAppender()",0,17,n/a,5,0,0,0,1
"org.apache.log4j.FileAppender.FileAppender(Layout,String)",2,2,n/a,9,0,2,2,1
"org.apache.log4j.FileAppender.FileAppender(Layout,String,boolean)",2,17,n/a,14,0,3,3,1
"org.apache.log4j.FileAppender.FileAppender(Layout,String,boolean,boolean,int)",2,0,n/a,17,0,5,3,1
"org.apache.log4j.FileAppender.activateOptions()",8,56,n/a,19,2,0,7,3
"org.apache.log4j.FileAppender.closeFile()",1,3,n/a,8,0,0,1,1
"org.apache.log4j.FileAppender.getAppend()",0,4,n/a,6,0,0,1,1
"org.apache.log4j.FileAppender.getBufferSize()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.FileAppender.getBufferedIO()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.FileAppender.getFile()",0,6,n/a,4,0,0,1,1
"org.apache.log4j.FileAppender.reset()",2,1,n/a,11,0,0,3,1
"org.apache.log4j.FileAppender.setAppend(boolean)",0,14,n/a,12,0,1,1,1
"org.apache.log4j.FileAppender.setBufferSize(int)",0,0,n/a,6,0,1,1,1
"org.apache.log4j.FileAppender.setBufferedIO(boolean)",0,0,n/a,14,1,1,3,2
"org.apache.log4j.FileAppender.setFile(String)",2,23,n/a,13,0,1,2,1
"org.apache.log4j.FileAppender.setFile(String,boolean,boolean,int)",17,8,n/a,55,2,4,21,7
"org.apache.log4j.FileAppender.setQWForFiles(Writer)",1,1,n/a,8,0,1,1,1
"org.apache.log4j.HTMLLayout.HTMLLayout()",1,4,n/a,8,0,0,1,1
"org.apache.log4j.HTMLLayout.HTMLLayout(String)",1,2,n/a,7,0,1,2,1
"org.apache.log4j.HTMLLayout.activateOptions()",17,15,n/a,33,2,0,21,5
"org.apache.log4j.HTMLLayout.appendThrowableAsHTML(String[],StringBuffer)",7,1,n/a,15,2,2,12,4
"org.apache.log4j.HTMLLayout.format(LoggingEvent)",26,14,n/a,45,2,1,35,5
"org.apache.log4j.HTMLLayout.getContentType()",0,2,n/a,6,0,0,1,1
"org.apache.log4j.HTMLLayout.getConversionPattern()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.HTMLLayout.getFooter()",7,8,n/a,12,0,0,7,1
"org.apache.log4j.HTMLLayout.getHeader()",45,9,n/a,53,1,0,47,3
"org.apache.log4j.HTMLLayout.getInternalCSS(StringBuffer)",28,1,n/a,34,0,1,28,1
"org.apache.log4j.HTMLLayout.getLocationInfo()",0,3,n/a,7,0,0,1,1
"org.apache.log4j.HTMLLayout.getTitle()",0,3,n/a,6,0,0,1,1
"org.apache.log4j.HTMLLayout.getURL2ExternalCSS()",0,0,n/a,9,0,0,1,1
"org.apache.log4j.HTMLLayout.ignoresThrowable()",0,6,n/a,7,0,0,1,1
"org.apache.log4j.HTMLLayout.isInternalCSS()",0,0,n/a,9,0,0,1,1
"org.apache.log4j.HTMLLayout.setConversionPattern(String)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.HTMLLayout.setInternalCSS(boolean)",0,1,n/a,15,0,1,1,1
"org.apache.log4j.HTMLLayout.setLocationInfo(boolean)",0,5,n/a,14,0,1,1,1
"org.apache.log4j.HTMLLayout.setTitle(String)",0,2,n/a,10,0,1,1,1
"org.apache.log4j.HTMLLayout.setURL2ExternalCSS(String)",0,2,n/a,7,0,1,1,1
"org.apache.log4j.Hierarchy.Hierarchy()",2,1,n/a,6,0,0,1,1
"org.apache.log4j.Hierarchy.Hierarchy(Logger)",10,10,n/a,18,0,1,11,1
"org.apache.log4j.Hierarchy.addErrorItem(ErrorItem)",2,2,n/a,7,0,1,1,1
"org.apache.log4j.Hierarchy.addHierarchyEventListener(HierarchyEventListener)",2,0,n/a,8,0,1,1,1
"org.apache.log4j.Hierarchy.addLoggerEventListener(LoggerEventListener)",4,2,n/a,14,2,1,4,2
"org.apache.log4j.Hierarchy.addLoggerRepositoryEventListener(LoggerRepositoryEventListener)",4,1,n/a,15,2,1,4,2
"org.apache.log4j.Hierarchy.addRenderer(Class,ObjectRenderer)",1,0,n/a,6,0,2,1,1
"org.apache.log4j.Hierarchy.clear()",1,1,n/a,11,0,0,1,1
"org.apache.log4j.Hierarchy.copyListenerList(ArrayList)",4,6,n/a,13,2,1,9,2
"org.apache.log4j.Hierarchy.emitNoAppenderWarning(Category)",0,1,n/a,9,1,1,2,2
"org.apache.log4j.Hierarchy.exists(String)",2,2,n/a,13,1,1,4,2
"org.apache.log4j.Hierarchy.fireAddAppenderEvent(Category,Appender)",1,1,n/a,11,1,2,2,2
"org.apache.log4j.Hierarchy.fireAddAppenderEvent(Logger,Appender)",4,1,n/a,14,1,2,6,2
"org.apache.log4j.Hierarchy.fireConfigurationChangedEvent()",4,0,n/a,12,1,0,6,2
"org.apache.log4j.Hierarchy.fireLevelChangedEvent(Logger)",4,0,n/a,12,1,1,6,2
"org.apache.log4j.Hierarchy.fireRemoveAppenderEvent(Category,Appender)",1,0,n/a,11,1,2,2,2
"org.apache.log4j.Hierarchy.fireRemoveAppenderEvent(Logger,Appender)",4,1,n/a,14,1,2,6,2
"org.apache.log4j.Hierarchy.getCurrentCategories()",1,0,n/a,6,0,0,1,1
"org.apache.log4j.Hierarchy.getCurrentLoggers()",7,9,n/a,19,2,0,7,3
"org.apache.log4j.Hierarchy.getErrorList()",0,1,n/a,6,0,0,1,1
"org.apache.log4j.Hierarchy.getLogger(String)",1,27,n/a,11,0,1,1,1
"org.apache.log4j.Hierarchy.getLogger(String,LoggerFactory)",15,3,n/a,45,2,2,22,4
"org.apache.log4j.Hierarchy.getLoggerFactory()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.Hierarchy.getMyLogger()",3,5,n/a,6,1,0,3,2
"org.apache.log4j.Hierarchy.getName()",0,4,n/a,6,0,0,1,1
"org.apache.log4j.Hierarchy.getObject(String)",1,4,n/a,3,0,1,1,1
"org.apache.log4j.Hierarchy.getPluginRegistry()",1,8,n/a,9,1,0,3,2
"org.apache.log4j.Hierarchy.getProperties()",0,2,n/a,9,0,0,1,1
"org.apache.log4j.Hierarchy.getProperty(String)",1,1,n/a,7,0,1,1,1
"org.apache.log4j.Hierarchy.getRendererMap()",0,2,n/a,6,0,0,1,1
"org.apache.log4j.Hierarchy.getRootLogger()",0,13,n/a,7,0,0,1,1
"org.apache.log4j.Hierarchy.getScheduler()",3,6,n/a,12,1,0,5,2
"org.apache.log4j.Hierarchy.getThreshold()",0,3,n/a,7,0,0,1,1
"org.apache.log4j.Hierarchy.isDisabled(int)",0,38,n/a,8,0,1,1,1
"org.apache.log4j.Hierarchy.isPristine()",0,1,n/a,6,0,0,1,1
"org.apache.log4j.Hierarchy.putObject(String,Object)",1,1,n/a,3,0,2,1,1
"org.apache.log4j.Hierarchy.removeLoggerEventListener(LoggerEventListener)",4,0,n/a,13,2,1,4,2
"org.apache.log4j.Hierarchy.removeLoggerRepositoryEventListener(LoggerRepositoryEventListener)",4,1,n/a,14,2,1,4,2
"org.apache.log4j.Hierarchy.resetConfiguration()",16,20,n/a,36,2,0,18,3
"org.apache.log4j.Hierarchy.setLoggerFactory(LoggerFactory)",1,1,n/a,5,0,1,3,2
"org.apache.log4j.Hierarchy.setName(String)",2,4,n/a,14,1,1,4,3
"org.apache.log4j.Hierarchy.setPristine(boolean)",0,1,n/a,6,0,1,1,1
"org.apache.log4j.Hierarchy.setProperty(String,String)",1,2,n/a,7,0,2,1,1
"org.apache.log4j.Hierarchy.setRenderer(Class,ObjectRenderer)",1,2,n/a,6,0,2,1,1
"org.apache.log4j.Hierarchy.setThreshold(Level)",0,13,n/a,11,1,1,3,2
"org.apache.log4j.Hierarchy.setThreshold(String)",4,0,n/a,11,1,1,4,2
"org.apache.log4j.Hierarchy.shutdown()",1,5,n/a,15,0,0,1,1
"org.apache.log4j.Hierarchy.shutdown(boolean)",17,2,n/a,35,2,1,23,6
"org.apache.log4j.Hierarchy.updateChildren(ProvisionNode,Logger)",3,1,n/a,25,2,2,8,3
"org.apache.log4j.Hierarchy.updateParents(Logger)",12,2,n/a,51,2,1,22,6
"org.apache.log4j.Layout.format(LoggingEvent)",n/a,11,8,n/a,n/a,1,n/a,n/a
"org.apache.log4j.Layout.getContentType()",0,2,n/a,7,0,0,1,1
"org.apache.log4j.Layout.getFooter()",0,8,n/a,6,0,0,1,1
"org.apache.log4j.Layout.getHeader()",0,8,n/a,6,0,0,1,1
"org.apache.log4j.Layout.ignoresThrowable()",0,6,n/a,18,0,0,1,1
"org.apache.log4j.Layout.setFooter(String)",0,3,n/a,10,0,1,1,1
"org.apache.log4j.Layout.setHeader(String)",0,2,n/a,10,0,1,1,1
"org.apache.log4j.Layout.setIgnoresThrowable(boolean)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.Level.Level(int,String,int)",1,16,n/a,10,0,3,1,1
"org.apache.log4j.Level.equals(Object)",0,12,n/a,17,1,1,4,2
"org.apache.log4j.Level.hashCode()",0,5,n/a,8,0,0,1,1
"org.apache.log4j.Level.readObject(ObjectInputStream)",4,0,n/a,12,0,1,4,1
"org.apache.log4j.Level.readResolve()",1,0,n/a,9,0,0,1,1
"org.apache.log4j.Level.toLevel(String)",1,7,n/a,10,0,1,1,1
"org.apache.log4j.Level.toLevel(String,Level)",9,8,n/a,40,1,2,20,10
"org.apache.log4j.Level.toLevel(int)",1,8,n/a,10,0,1,1,1
"org.apache.log4j.Level.toLevel(int,Level)",0,4,n/a,30,1,2,19,10
"org.apache.log4j.Level.writeObject(ObjectOutputStream)",5,0,n/a,15,1,1,6,2
"org.apache.log4j.LogManager.exists(String)",2,6,n/a,3,0,1,1,1
"org.apache.log4j.LogManager.getCurrentLoggers()",2,3,n/a,3,0,0,1,1
"org.apache.log4j.LogManager.getLogger(Class)",3,8,n/a,7,0,1,1,1
"org.apache.log4j.LogManager.getLogger(String)",2,3,n/a,7,0,1,1,1
"org.apache.log4j.LogManager.getLogger(String,LoggerFactory)",2,2,n/a,7,0,2,1,1
"org.apache.log4j.LogManager.getLoggerRepository()",1,66,n/a,6,0,0,1,1
"org.apache.log4j.LogManager.getRepositorySelector()",0,1,n/a,9,0,0,1,1
"org.apache.log4j.LogManager.getRootLogger()",2,2,n/a,7,0,0,1,1
"org.apache.log4j.LogManager.resetConfiguration()",2,6,n/a,3,0,0,1,1
"org.apache.log4j.LogManager.setRepositorySelector(RepositorySelector,Object)",4,3,n/a,38,1,2,9,5
"org.apache.log4j.LogManager.shutdown()",2,20,n/a,3,0,0,1,1
"org.apache.log4j.Logger.Logger(String)",1,6,n/a,14,0,1,1,1
"org.apache.log4j.Logger.fatal(String,Object,Object)",5,0,n/a,22,1,3,5,3
"org.apache.log4j.Logger.getLogger(Class)",2,52,n/a,10,0,1,1,1
"org.apache.log4j.Logger.getLogger(String)",1,81,n/a,13,0,1,1,1
"org.apache.log4j.Logger.getLogger(String,LoggerFactory)",1,0,n/a,13,0,2,1,1
"org.apache.log4j.Logger.getRootLogger()",1,75,n/a,15,0,0,1,1
"org.apache.log4j.Logger.trace(Object)",4,6,n/a,15,1,1,4,3
"org.apache.log4j.Logger.trace(Object,Object)",6,0,n/a,30,2,2,8,4
"org.apache.log4j.Logger.trace(Object,Throwable)",4,3,n/a,20,1,2,4,3
"org.apache.log4j.Logger.trace(String,Object,Object)",5,0,n/a,22,1,3,5,3
"org.apache.log4j.MDC.MDC()",0,0,n/a,2,0,0,0,1
"org.apache.log4j.MDC.clear()",2,7,n/a,10,1,0,3,2
"org.apache.log4j.MDC.get(String)",2,2,n/a,13,1,1,4,3
"org.apache.log4j.MDC.getContext()",1,2,n/a,7,0,0,1,1
"org.apache.log4j.MDC.getKeys()",2,0,n/a,14,1,0,4,2
"org.apache.log4j.MDC.put(String,Object)",2,0,n/a,11,0,2,1,1
"org.apache.log4j.MDC.put(String,String)",4,24,n/a,16,1,2,5,2
"org.apache.log4j.MDC.remove(String)",2,5,n/a,9,1,1,3,2
"org.apache.log4j.NDC.DiagnosticContext.DiagnosticContext(String,DiagnosticContext)",0,3,n/a,8,1,2,4,2
"org.apache.log4j.NDC.NDC()",0,0,n/a,3,0,0,0,1
"org.apache.log4j.NDC.clear()",2,8,n/a,13,1,0,3,2
"org.apache.log4j.NDC.cloneStack()",2,2,n/a,19,1,0,5,2
"org.apache.log4j.NDC.get()",3,2,n/a,12,1,0,4,3
"org.apache.log4j.NDC.getDepth()",2,2,n/a,13,1,0,4,2
"org.apache.log4j.NDC.inherit(Stack)",1,2,n/a,20,1,1,2,2
"org.apache.log4j.NDC.peek()",3,0,n/a,15,1,0,4,3
"org.apache.log4j.NDC.pop()",3,13,n/a,15,1,0,4,3
"org.apache.log4j.NDC.push(String)",11,19,n/a,20,1,1,11,3
"org.apache.log4j.NDC.remove()",0,1,n/a,8,0,0,0,1
"org.apache.log4j.NDC.setMaxDepth(int)",3,3,n/a,27,1,1,3,3
"org.apache.log4j.PatternLayout.PatternLayout()",1,9,n/a,7,0,0,1,1
"org.apache.log4j.PatternLayout.PatternLayout(String)",3,47,n/a,14,1,1,5,3
"org.apache.log4j.PatternLayout.activateOptions()",0,28,n/a,7,0,0,0,1
"org.apache.log4j.PatternLayout.createPatternParser(String)",2,2,n/a,10,0,1,1,1
"org.apache.log4j.PatternLayout.format(LoggingEvent)",3,20,n/a,13,1,1,6,2
"org.apache.log4j.PatternLayout.getConversionPattern()",0,3,n/a,7,0,0,1,1
"org.apache.log4j.PatternLayout.ignoresThrowable()",0,6,n/a,8,0,0,1,1
"org.apache.log4j.PatternLayout.setConversionPattern(String)",4,16,n/a,17,1,1,5,2
"org.apache.log4j.Priority.Priority()",0,0,n/a,8,0,0,3,1
"org.apache.log4j.Priority.Priority(int,String,int)",0,1,n/a,9,0,3,3,1
"org.apache.log4j.Priority.equals(Object)",0,10,n/a,13,1,1,4,2
"org.apache.log4j.Priority.getAllPossiblePriorities()",0,1,n/a,11,0,0,1,1
"org.apache.log4j.Priority.getSyslogEquivalent()",0,2,n/a,8,0,0,1,1
"org.apache.log4j.Priority.hashCode()",0,5,n/a,7,0,0,1,1
"org.apache.log4j.Priority.isGreaterOrEqual(Priority)",0,48,n/a,11,0,1,1,1
"org.apache.log4j.Priority.toInt()",0,18,n/a,8,0,0,1,1
"org.apache.log4j.Priority.toPriority(String)",1,1,n/a,8,0,1,1,1
"org.apache.log4j.Priority.toPriority(String,Priority)",1,1,n/a,9,0,2,1,1
"org.apache.log4j.Priority.toPriority(int)",1,1,n/a,8,0,1,1,1
"org.apache.log4j.Priority.toPriority(int,Priority)",1,2,n/a,8,0,2,1,1
"org.apache.log4j.Priority.toString()",0,91,n/a,8,0,0,1,1
"org.apache.log4j.PropertyConfigurator.activateOptions(Object)",1,2,n/a,5,1,1,2,2
"org.apache.log4j.PropertyConfigurator.clearRegistry()",1,1,n/a,7,0,0,1,1
"org.apache.log4j.PropertyConfigurator.configure(Properties)",3,2,n/a,8,0,1,1,1
"org.apache.log4j.PropertyConfigurator.configure(String)",3,32,n/a,6,0,1,1,1
"org.apache.log4j.PropertyConfigurator.configure(URL)",3,1,n/a,8,0,1,1,1
"org.apache.log4j.PropertyConfigurator.configureAndWatch(String)",1,0,n/a,9,0,1,1,1
"org.apache.log4j.PropertyConfigurator.configureAndWatch(String,long)",13,2,n/a,32,2,2,13,2
"org.apache.log4j.PropertyConfigurator.configureLoggerFactory(Properties,LoggerRepository)",5,1,n/a,21,1,2,6,2
"org.apache.log4j.PropertyConfigurator.configureRootCategory(Properties,LoggerRepository)",6,1,n/a,18,2,2,10,3
"org.apache.log4j.PropertyConfigurator.doConfigure(InputStream,LoggerRepository)",9,1,n/a,22,1,2,9,2
"org.apache.log4j.PropertyConfigurator.doConfigure(Properties,LoggerRepository)",22,4,n/a,45,2,2,24,7
"org.apache.log4j.PropertyConfigurator.doConfigure(String,LoggerRepository)",9,8,n/a,163,1,2,10,2
"org.apache.log4j.PropertyConfigurator.doConfigure(URL,LoggerRepository)",11,3,n/a,20,1,2,11,2
"org.apache.log4j.PropertyConfigurator.getErrorList()",0,3,n/a,3,0,0,1,1
"org.apache.log4j.PropertyConfigurator.parseAdditivityForLogger(LoggerRepository,Properties,Logger,String)",8,1,n/a,18,1,4,6,3
"org.apache.log4j.PropertyConfigurator.parseAppender(LoggerRepository,Properties,String)",30,1,n/a,54,3,3,34,6
"org.apache.log4j.PropertyConfigurator.parseCategory(LoggerRepository,Properties,Logger,String,String,String)",30,2,n/a,53,3,6,24,11
"org.apache.log4j.PropertyConfigurator.parseCatsAndRenderers(Properties,LoggerRepository)",21,2,n/a,32,3,2,21,8
"org.apache.log4j.PropertyConfigurator.registryGet(String)",1,1,n/a,3,0,1,1,1
"org.apache.log4j.PropertyConfigurator.registryPut(Appender)",2,1,n/a,3,0,1,1,1
"org.apache.log4j.ProvisionNode.ProvisionNode(Logger)",2,1,n/a,4,0,1,2,1
"org.apache.log4j.RollingCalendar.RollingCalendar()",1,4,n/a,3,0,0,1,1
"org.apache.log4j.RollingCalendar.RollingCalendar(TimeZone,Locale)",1,1,n/a,3,0,2,1,1
"org.apache.log4j.RollingCalendar.getNextCheckDate(Date)",35,4,n/a,54,2,1,49,9
"org.apache.log4j.RollingCalendar.getNextCheckMillis(Date)",2,2,n/a,3,0,1,1,1
"org.apache.log4j.RollingCalendar.setType(int)",0,5,n/a,3,0,1,1,1
"org.apache.log4j.RollingFileAppender.RollingFileAppender()",1,2,n/a,7,0,0,1,1
"org.apache.log4j.RollingFileAppender.RollingFileAppender(Layout,String)",1,1,n/a,9,0,2,1,1
"org.apache.log4j.RollingFileAppender.RollingFileAppender(Layout,String,boolean)",1,1,n/a,13,0,3,1,1
"org.apache.log4j.RollingFileAppender.getMaxBackupIndex()",0,2,n/a,7,0,0,1,1
"org.apache.log4j.RollingFileAppender.getMaximumFileSize()",0,1,n/a,9,0,0,1,1
"org.apache.log4j.RollingFileAppender.rollOver()",18,2,n/a,50,3,0,25,7
"org.apache.log4j.RollingFileAppender.setFile(String,boolean,boolean,int)",4,9,n/a,10,1,4,4,2
"org.apache.log4j.RollingFileAppender.setMaxBackupIndex(int)",0,2,n/a,12,0,1,1,1
"org.apache.log4j.RollingFileAppender.setMaxFileSize(String)",1,2,n/a,14,0,1,1,1
"org.apache.log4j.RollingFileAppender.setMaximumFileSize(long)",0,1,n/a,14,0,1,1,1
"org.apache.log4j.RollingFileAppender.setQWForFiles(Writer)",1,1,n/a,4,0,1,1,1
"org.apache.log4j.RollingFileAppender.subAppend(LoggingEvent)",3,4,n/a,12,0,1,3,3
"org.apache.log4j.SimpleLayout.SimpleLayout()",0,15,n/a,2,0,0,0,1
"org.apache.log4j.SimpleLayout.activateOptions()",0,13,n/a,2,0,0,0,1
"org.apache.log4j.SimpleLayout.format(LoggingEvent)",10,11,n/a,19,0,1,8,1
"org.apache.log4j.TTCCLayout.TTCCLayout()",1,5,n/a,7,0,0,1,1
"org.apache.log4j.TTCCLayout.TTCCLayout(String)",1,0,n/a,8,0,1,1,1
"org.apache.log4j.TTCCLayout.activateOptions()",0,15,n/a,2,0,0,0,1
"org.apache.log4j.TTCCLayout.format(LoggingEvent)",21,12,n/a,33,2,1,20,5
"org.apache.log4j.TTCCLayout.getCategoryPrefixing()",0,3,n/a,6,0,0,1,1
"org.apache.log4j.TTCCLayout.getContextPrinting()",0,3,n/a,6,0,0,1,1
"org.apache.log4j.TTCCLayout.getThreadPrinting()",0,3,n/a,6,0,0,1,1
"org.apache.log4j.TTCCLayout.setCategoryPrefixing(boolean)",0,2,n/a,7,0,1,1,1
"org.apache.log4j.TTCCLayout.setContextPrinting(boolean)",0,2,n/a,8,0,1,1,1
"org.apache.log4j.TTCCLayout.setThreadPrinting(boolean)",0,2,n/a,7,0,1,1,1
"org.apache.log4j.ULogger.debug(Object)",n/a,86,3,n/a,n/a,1,n/a,n/a
"org.apache.log4j.ULogger.debug(Object,Object)",n/a,23,3,n/a,n/a,2,n/a,n/a
"org.apache.log4j.ULogger.debug(Object,Throwable)",n/a,0,3,n/a,n/a,2,n/a,n/a
"org.apache.log4j.ULogger.debug(String,Object,Object)",n/a,18,3,n/a,n/a,3,n/a,n/a
"org.apache.log4j.ULogger.error(Object)",n/a,34,3,n/a,n/a,1,n/a,n/a
"org.apache.log4j.ULogger.error(Object,Object)",n/a,14,3,n/a,n/a,2,n/a,n/a
"org.apache.log4j.ULogger.error(Object,Throwable)",n/a,70,3,n/a,n/a,2,n/a,n/a
"org.apache.log4j.ULogger.error(String,Object,Object)",n/a,0,3,n/a,n/a,3,n/a,n/a
"org.apache.log4j.ULogger.info(Object)",n/a,18,3,n/a,n/a,1,n/a,n/a
"org.apache.log4j.ULogger.info(Object,Object)",n/a,7,3,n/a,n/a,2,n/a,n/a
"org.apache.log4j.ULogger.info(Object,Throwable)",n/a,6,3,n/a,n/a,2,n/a,n/a
"org.apache.log4j.ULogger.info(String,Object,Object)",n/a,0,3,n/a,n/a,3,n/a,n/a
"org.apache.log4j.ULogger.isDebugEnabled()",n/a,2,3,n/a,n/a,0,n/a,n/a
"org.apache.log4j.ULogger.isErrorEnabled()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.log4j.ULogger.isInfoEnabled()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.log4j.ULogger.isWarnEnabled()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.log4j.ULogger.warn(Object)",n/a,61,3,n/a,n/a,1,n/a,n/a
"org.apache.log4j.ULogger.warn(Object,Object)",n/a,14,3,n/a,n/a,2,n/a,n/a
"org.apache.log4j.ULogger.warn(Object,Throwable)",n/a,37,3,n/a,n/a,2,n/a,n/a
"org.apache.log4j.ULogger.warn(String,Object,Object)",n/a,0,3,n/a,n/a,3,n/a,n/a
"org.apache.log4j.WriterAppender.DefaultErrorHandler.DefaultErrorHandler(WriterAppender)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.WriterAppender.DefaultErrorHandler.activateOptions()",0,13,n/a,2,0,0,0,1
"org.apache.log4j.WriterAppender.DefaultErrorHandler.error(String)",0,2,n/a,2,0,1,0,1
"org.apache.log4j.WriterAppender.DefaultErrorHandler.error(String,Exception,int)",3,6,n/a,4,0,3,2,1
"org.apache.log4j.WriterAppender.DefaultErrorHandler.error(String,Exception,int,LoggingEvent)",0,0,n/a,3,0,4,0,1
"org.apache.log4j.WriterAppender.DefaultErrorHandler.setAppender(Appender)",0,0,n/a,3,0,1,0,1
"org.apache.log4j.WriterAppender.DefaultErrorHandler.setBackupAppender(Appender)",0,0,n/a,3,0,1,0,1
"org.apache.log4j.WriterAppender.DefaultErrorHandler.setLogger(Logger)",0,0,n/a,3,0,1,0,1
"org.apache.log4j.WriterAppender.WriterAppender()",1,13,n/a,6,0,0,1,1
"org.apache.log4j.WriterAppender.WriterAppender(Layout,OutputStream)",2,0,n/a,11,0,2,1,1
"org.apache.log4j.WriterAppender.WriterAppender(Layout,Writer)",3,1,n/a,15,0,2,4,1
"org.apache.log4j.WriterAppender.activateOptions()",5,43,n/a,20,1,0,9,4
"org.apache.log4j.WriterAppender.append(LoggingEvent)",2,2,n/a,23,1,1,3,2
"org.apache.log4j.WriterAppender.checkEntryConditions()",4,1,n/a,17,1,0,7,3
"org.apache.log4j.WriterAppender.close()",1,11,n/a,13,1,0,4,2
"org.apache.log4j.WriterAppender.closeWriter()",4,10,n/a,15,2,0,6,3
"org.apache.log4j.WriterAppender.createQuietWriter(Writer)",2,3,n/a,7,1,1,4,2
"org.apache.log4j.WriterAppender.createWriter(OutputStream)",7,6,n/a,22,2,1,10,4
"org.apache.log4j.WriterAppender.getEncoding()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.WriterAppender.getImmediateFlush()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.WriterAppender.requiresLayout()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.WriterAppender.reset()",1,1,n/a,12,0,0,2,1
"org.apache.log4j.WriterAppender.setEncoding(String)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.WriterAppender.setErrorHandler(ErrorHandler)",3,4,n/a,15,2,1,5,3
"org.apache.log4j.WriterAppender.setImmediateFlush(boolean)",0,1,n/a,16,0,1,1,1
"org.apache.log4j.WriterAppender.setWriter(Writer)",3,10,n/a,15,0,1,3,1
"org.apache.log4j.WriterAppender.subAppend(LoggingEvent)",8,4,n/a,26,3,1,14,6
"org.apache.log4j.WriterAppender.writeFooter()",3,1,n/a,13,2,0,5,4
"org.apache.log4j.WriterAppender.writeHeader()",2,3,n/a,12,2,0,4,4
"org.apache.log4j.concurrent.ConcurrentAppender.ConcurrentAppender(boolean)",1,2,n/a,8,0,1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.FilterChain.accept(LoggingEvent)",2,1,n/a,14,2,1,10,5
"org.apache.log4j.concurrent.ConcurrentAppender.FilterChain.addFilter(Filter)",2,1,n/a,11,1,1,7,3
"org.apache.log4j.concurrent.ConcurrentAppender.FilterChain.clear()",0,1,n/a,4,0,0,2,1
"org.apache.log4j.concurrent.ConcurrentAppender.FilterChain.getHead()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.FilterChain.toString()",5,62,n/a,11,1,0,8,3
"org.apache.log4j.concurrent.ConcurrentAppender.activateOptions()",1,15,n/a,8,0,0,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.addFilter(Filter)",1,9,n/a,7,0,1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.append(LoggingEvent)",n/a,5,2,n/a,n/a,1,n/a,n/a
"org.apache.log4j.concurrent.ConcurrentAppender.clearFilters()",1,3,n/a,6,0,0,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.close()",8,18,n/a,26,1,0,10,3
"org.apache.log4j.concurrent.ConcurrentAppender.doAppend(LoggingEvent)",19,2,n/a,40,3,1,20,7
"org.apache.log4j.concurrent.ConcurrentAppender.finalize()",4,1,n/a,8,0,0,3,2
"org.apache.log4j.concurrent.ConcurrentAppender.getClosed()",1,3,n/a,7,0,0,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.getErrorHandler()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.getFilter()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.getLayout()",0,10,n/a,6,0,0,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.getName()",0,22,n/a,6,0,0,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.getThreshold()",0,2,n/a,7,0,0,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.internalClose()",n/a,3,3,n/a,n/a,0,n/a,n/a
"org.apache.log4j.concurrent.ConcurrentAppender.isActive()",2,11,n/a,6,0,0,1,2
"org.apache.log4j.concurrent.ConcurrentAppender.isAsSevereAsThreshold(Priority)",1,1,n/a,8,0,1,2,2
"org.apache.log4j.concurrent.ConcurrentAppender.isClosed()",1,3,n/a,6,0,0,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.setErrorHandler(ErrorHandler)",0,1,n/a,2,0,1,0,1
"org.apache.log4j.concurrent.ConcurrentAppender.setLayout(Layout)",0,13,n/a,15,0,1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.setName(String)",0,11,n/a,6,0,1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.setThreshold(Priority)",0,3,n/a,10,0,1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.toString()",1,63,n/a,9,0,0,1,1
"org.apache.log4j.concurrent.ConsoleAppender.ConsoleAppender()",0,1,n/a,5,0,0,0,1
"org.apache.log4j.concurrent.ConsoleAppender.ConsoleAppender(Layout)",2,0,n/a,9,0,1,2,1
"org.apache.log4j.concurrent.ConsoleAppender.ConsoleAppender(Layout,String)",3,0,n/a,10,0,2,3,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemErrStream.SystemErrStream()",0,1,n/a,2,0,0,0,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemErrStream.close()",0,2,n/a,2,0,0,0,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemErrStream.flush()",1,2,n/a,3,0,0,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemErrStream.write(byte[])",1,2,n/a,3,0,1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemErrStream.write(byte[],int,int)",1,2,n/a,4,0,3,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemErrStream.write(int)",1,2,n/a,3,0,1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemOutStream.SystemOutStream()",0,1,n/a,2,0,0,0,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemOutStream.close()",0,2,n/a,2,0,0,0,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemOutStream.flush()",1,2,n/a,3,0,0,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemOutStream.write(byte[])",1,2,n/a,3,0,1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemOutStream.write(byte[],int,int)",1,2,n/a,4,0,3,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemOutStream.write(int)",1,2,n/a,3,0,1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.activateOptions()",13,27,n/a,19,2,0,8,4
"org.apache.log4j.concurrent.ConsoleAppender.closeWriter()",1,6,n/a,10,1,0,2,2
"org.apache.log4j.concurrent.ConsoleAppender.getFollow()",0,0,n/a,10,0,0,1,1
"org.apache.log4j.concurrent.ConsoleAppender.getTarget()",0,0,n/a,9,0,0,1,1
"org.apache.log4j.concurrent.ConsoleAppender.setFollow(boolean)",0,1,n/a,10,0,1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.setTarget(String)",7,4,n/a,16,1,1,7,3
"org.apache.log4j.concurrent.FileAppender.FileAppender()",0,2,n/a,5,0,0,0,1
"org.apache.log4j.concurrent.FileAppender.FileAppender(Layout,String)",2,0,n/a,9,0,2,2,1
"org.apache.log4j.concurrent.FileAppender.FileAppender(Layout,String,boolean)",1,1,n/a,12,0,3,1,1
"org.apache.log4j.concurrent.FileAppender.FileAppender(Layout,String,boolean,boolean,int)",3,1,n/a,17,0,5,3,1
"org.apache.log4j.concurrent.FileAppender.activateOptions()",8,30,n/a,19,2,0,7,3
"org.apache.log4j.concurrent.FileAppender.closeFile()",1,0,n/a,8,0,0,1,1
"org.apache.log4j.concurrent.FileAppender.createOutputStream()",7,1,n/a,22,2,0,6,4
"org.apache.log4j.concurrent.FileAppender.getAppend()",0,5,n/a,6,0,0,1,1
"org.apache.log4j.concurrent.FileAppender.getBufferSize()",0,1,n/a,6,0,0,1,1
"org.apache.log4j.concurrent.FileAppender.getBufferedIO()",0,2,n/a,8,0,0,1,1
"org.apache.log4j.concurrent.FileAppender.getFile()",0,6,n/a,4,0,0,1,1
"org.apache.log4j.concurrent.FileAppender.setAppend(boolean)",0,3,n/a,12,0,1,1,1
"org.apache.log4j.concurrent.FileAppender.setBufferSize(int)",0,1,n/a,6,0,1,1,1
"org.apache.log4j.concurrent.FileAppender.setBufferedIO(boolean)",0,1,n/a,11,0,1,1,1
"org.apache.log4j.concurrent.FileAppender.setFile(String)",2,7,n/a,13,0,1,2,1
"org.apache.log4j.concurrent.FileAppender.setFile(String,boolean,boolean,int)",9,4,n/a,31,1,4,11,2
"org.apache.log4j.concurrent.ReadWriteLock.readLock()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.concurrent.ReadWriteLock.writeLock()",n/a,12,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.concurrent.ReentrantWriterPreferenceReadWriteLock.allowReader()",1,4,n/a,4,0,0,1,3
"org.apache.log4j.concurrent.ReentrantWriterPreferenceReadWriteLock.endRead()",7,1,n/a,22,1,0,16,7
"org.apache.log4j.concurrent.ReentrantWriterPreferenceReadWriteLock.endWrite()",1,1,n/a,14,1,0,9,5
"org.apache.log4j.concurrent.ReentrantWriterPreferenceReadWriteLock.startRead()",7,3,n/a,16,1,0,11,3
"org.apache.log4j.concurrent.ReentrantWriterPreferenceReadWriteLock.startWrite()",5,3,n/a,19,2,0,10,6
"org.apache.log4j.concurrent.RollingFileAppender.CountingOutputStream.CountingOutputStream(OutputStream,RollingFileAppender)",0,1,n/a,10,0,2,2,1
"org.apache.log4j.concurrent.RollingFileAppender.CountingOutputStream.close()",1,2,n/a,6,0,0,1,1
"org.apache.log4j.concurrent.RollingFileAppender.CountingOutputStream.flush()",1,2,n/a,6,0,0,1,1
"org.apache.log4j.concurrent.RollingFileAppender.CountingOutputStream.write(byte[])",2,2,n/a,7,0,1,2,1
"org.apache.log4j.concurrent.RollingFileAppender.CountingOutputStream.write(byte[],int,int)",2,2,n/a,8,0,3,2,1
"org.apache.log4j.concurrent.RollingFileAppender.CountingOutputStream.write(int)",2,2,n/a,7,0,1,2,1
"org.apache.log4j.concurrent.RollingFileAppender.RollingFileAppender()",0,1,n/a,5,0,0,0,1
"org.apache.log4j.concurrent.RollingFileAppender.activateOptions()",38,31,n/a,69,4,0,38,12
"org.apache.log4j.concurrent.RollingFileAppender.createWriter(OutputStream)",2,7,n/a,12,0,1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.getFileLength()",0,1,n/a,9,1,0,2,1
"org.apache.log4j.concurrent.RollingFileAppender.getRollingPolicy()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.concurrent.RollingFileAppender.getTriggeringPolicy()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.concurrent.RollingFileAppender.incrementFileLength(int)",0,3,n/a,9,1,1,2,1
"org.apache.log4j.concurrent.RollingFileAppender.internalClose()",2,4,n/a,9,1,0,3,2
"org.apache.log4j.concurrent.RollingFileAppender.isTriggeringEvent(LoggingEvent)",3,2,n/a,4,0,1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.rollover()",60,1,n/a,123,7,0,59,19
"org.apache.log4j.concurrent.RollingFileAppender.setFileLength(long)",0,4,n/a,5,1,1,2,1
"org.apache.log4j.concurrent.RollingFileAppender.setRollingPolicy(RollingPolicy)",0,1,n/a,7,0,1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.setTriggeringPolicy(TriggeringPolicy)",0,1,n/a,7,0,1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.subAppend(LoggingEvent)",16,2,n/a,32,3,1,15,5
"org.apache.log4j.concurrent.Sync.acquire()",n/a,8,2,n/a,n/a,0,n/a,n/a
"org.apache.log4j.concurrent.Sync.attempt(long)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.apache.log4j.concurrent.Sync.release()",n/a,8,2,n/a,n/a,0,n/a,n/a
"org.apache.log4j.concurrent.SynchronizedBoolean.SynchronizedBoolean(boolean)",0,3,n/a,7,0,1,1,1
"org.apache.log4j.concurrent.SynchronizedBoolean.get()",0,9,n/a,4,0,0,1,1
"org.apache.log4j.concurrent.SynchronizedBoolean.set(boolean)",0,8,n/a,9,0,1,3,1
"org.apache.log4j.concurrent.SynchronizedBoolean.toString()",2,63,n/a,4,0,0,1,1
"org.apache.log4j.concurrent.WriterAppender.WriterAppender()",1,6,n/a,6,0,0,1,1
"org.apache.log4j.concurrent.WriterAppender.activateOptions()",6,22,n/a,16,1,0,7,3
"org.apache.log4j.concurrent.WriterAppender.append(LoggingEvent)",1,5,n/a,12,0,1,1,1
"org.apache.log4j.concurrent.WriterAppender.closeWriter()",7,6,n/a,15,1,0,6,2
"org.apache.log4j.concurrent.WriterAppender.closeWriter0()",4,2,n/a,15,1,0,7,3
"org.apache.log4j.concurrent.WriterAppender.createWriter(OutputStream)",7,6,n/a,22,2,1,10,4
"org.apache.log4j.concurrent.WriterAppender.getEncoding()",0,2,n/a,3,0,0,1,1
"org.apache.log4j.concurrent.WriterAppender.getImmediateFlush()",0,2,n/a,6,0,0,1,1
"org.apache.log4j.concurrent.WriterAppender.internalClose()",1,4,n/a,8,0,0,1,1
"org.apache.log4j.concurrent.WriterAppender.requiresLayout()",0,1,n/a,7,0,0,1,1
"org.apache.log4j.concurrent.WriterAppender.setEncoding(String)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.concurrent.WriterAppender.setImmediateFlush(boolean)",0,3,n/a,16,0,1,1,1
"org.apache.log4j.concurrent.WriterAppender.setWriter(Writer)",8,9,n/a,25,1,1,9,2
"org.apache.log4j.concurrent.WriterAppender.subAppend(LoggingEvent)",11,2,n/a,34,4,1,20,7
"org.apache.log4j.concurrent.WriterAppender.writeFooter()",6,1,n/a,18,3,0,8,5
"org.apache.log4j.concurrent.WriterAppender.writeHeader()",7,2,n/a,19,3,0,9,5
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.ReaderLock.acquire()",7,8,n/a,27,4,0,16,7
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.ReaderLock.attempt(long)",11,0,n/a,35,5,1,26,9
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.ReaderLock.release()",2,8,n/a,4,0,0,3,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.ReaderLock.signalWaiters()",1,4,n/a,1,0,0,1,1
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.Signaller.signalWaiters()",n/a,2,2,n/a,n/a,0,n/a,n/a
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.WriterLock.acquire()",8,8,n/a,28,4,0,17,7
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.WriterLock.attempt(long)",13,0,n/a,36,5,1,28,9
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.WriterLock.release()",2,8,n/a,4,0,0,3,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.WriterLock.signalWaiters()",1,4,n/a,1,0,0,1,1
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.allowReader()",0,2,n/a,4,0,0,1,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.cancelledWaitingReader()",0,3,n/a,1,0,0,1,1
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.cancelledWaitingWriter()",0,3,n/a,1,0,0,1,1
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.endRead()",0,1,n/a,10,0,0,3,3
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.endWrite()",1,1,n/a,13,0,0,6,4
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.readLock()",0,4,n/a,1,0,0,1,1
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.startRead()",1,3,n/a,5,0,0,4,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.startReadFromNewReader()",1,2,n/a,5,0,0,4,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.startReadFromWaitingReader()",1,2,n/a,5,0,0,4,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.startWrite()",1,3,n/a,7,0,0,4,3
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.startWriteFromNewWriter()",1,2,n/a,5,0,0,4,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.startWriteFromWaitingWriter()",1,2,n/a,5,0,0,4,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.writeLock()",0,12,n/a,1,0,0,1,1
"org.apache.log4j.config.ConfigWatchdog.getConfiguratorClass()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.log4j.config.ConfigWatchdog.getConfiguratorClassName()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.log4j.config.ConfigWatchdog.getLoggerRepository()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.log4j.config.ConfigWatchdog.getName()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.log4j.config.ConfigWatchdog.isRunning()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.log4j.config.ConfigWatchdog.setConfiguratorClass(Class)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.log4j.config.ConfigWatchdog.setConfiguratorClassName(String)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.log4j.config.ConfigWatchdog.setLoggerRepository(LoggerRepository)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.log4j.config.ConfigWatchdog.setName(String)",n/a,0,0,n/a,n/a,1,n/a,n/a
"org.apache.log4j.config.ConfigWatchdog.startWatching()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.log4j.config.ConfigWatchdog.stopWatching()",n/a,0,0,n/a,n/a,0,n/a,n/a
"org.apache.log4j.config.ConfiguratorBase.addError(ErrorItem)",2,5,n/a,3,0,1,1,1
"org.apache.log4j.config.ConfiguratorBase.attachListAppender(LoggerRepository)",5,3,n/a,15,0,1,5,1
"org.apache.log4j.config.ConfiguratorBase.attachTemporaryConsoleAppender(LoggerRepository)",7,2,n/a,9,0,1,6,1
"org.apache.log4j.config.ConfiguratorBase.detachListAppender(LoggerRepository)",18,3,n/a,33,2,1,20,4
"org.apache.log4j.config.ConfiguratorBase.detachTemporaryConsoleAppender(LoggerRepository,List)",6,2,n/a,13,1,2,8,2
"org.apache.log4j.config.ConfiguratorBase.dumpErrors()",4,13,n/a,10,1,0,6,2
"org.apache.log4j.config.ConfiguratorBase.getErrorList()",n/a,3,2,n/a,n/a,0,n/a,n/a
"org.apache.log4j.config.ConfiguratorBase.getLogger(LoggerRepository)",3,22,n/a,3,0,1,1,1
"org.apache.log4j.config.PropertyGetter.PropertyCallback.foundProperty(Object,String,String,Object)",n/a,1,1,n/a,n/a,4,n/a,n/a
"org.apache.log4j.config.PropertyGetter.PropertyGetter(Object)",3,1,n/a,11,0,1,3,1
"org.apache.log4j.config.PropertyGetter.getProperties(Object,PropertyCallback,String)",2,1,n/a,8,1,3,2,2
"org.apache.log4j.config.PropertyGetter.getProperties(PropertyCallback,String)",13,2,n/a,22,3,2,16,6
"org.apache.log4j.config.PropertyGetter.isHandledType(Class)",5,1,n/a,6,0,1,1,5
"org.apache.log4j.config.PropertyPrinter.PropertyPrinter(PrintWriter)",1,1,n/a,4,0,1,1,1
"org.apache.log4j.config.PropertyPrinter.PropertyPrinter(PrintWriter,boolean)",2,1,n/a,7,0,2,4,1
"org.apache.log4j.config.PropertyPrinter.capitalize(String)",10,1,n/a,10,2,1,6,4
"org.apache.log4j.config.PropertyPrinter.foundProperty(Object,String,String,Object)",4,1,n/a,10,1,4,5,4
"org.apache.log4j.config.PropertyPrinter.genAppName()",0,1,n/a,4,0,0,1,1
"org.apache.log4j.config.PropertyPrinter.isGenAppName(String)",5,1,n/a,12,1,1,8,6
"org.apache.log4j.config.PropertyPrinter.main(String[])",2,0,n/a,4,0,1,1,1
"org.apache.log4j.config.PropertyPrinter.print(PrintWriter)",6,1,n/a,14,1,1,4,2
"org.apache.log4j.config.PropertyPrinter.printOptions(PrintWriter,Logger)",21,2,n/a,31,3,2,19,11
"org.apache.log4j.config.PropertyPrinter.printOptions(PrintWriter,Object,String)",4,2,n/a,5,0,3,2,1
"org.apache.log4j.config.PropertySetter.PropertySetter(Object)",1,9,n/a,9,0,1,2,1
"org.apache.log4j.config.PropertySetter.activate()",1,0,n/a,9,1,0,2,2
"org.apache.log4j.config.PropertySetter.addComponent(String,Object)",30,1,n/a,36,4,2,15,5
"org.apache.log4j.config.PropertySetter.canContainComponent(String)",10,1,n/a,21,2,1,12,4
"org.apache.log4j.config.PropertySetter.capitalizeFirstLetter(String)",3,2,n/a,3,0,1,1,1
"org.apache.log4j.config.PropertySetter.convertArg(String,Class)",11,1,n/a,26,2,2,17,9
"org.apache.log4j.config.PropertySetter.getMethod(String)",4,2,n/a,11,2,1,8,4
"org.apache.log4j.config.PropertySetter.getObjClass()",0,2,n/a,3,0,0,1,1
"org.apache.log4j.config.PropertySetter.getPropertyDescriptor(String)",3,3,n/a,11,2,1,8,4
"org.apache.log4j.config.PropertySetter.introspect()",17,2,n/a,25,2,0,17,4
"org.apache.log4j.config.PropertySetter.setComponent(String,Object)",22,1,n/a,32,1,2,16,5
"org.apache.log4j.config.PropertySetter.setProperties(Object,Properties,String)",2,0,n/a,14,0,3,1,1
"org.apache.log4j.config.PropertySetter.setProperties(Properties,String)",10,4,n/a,25,3,2,12,6
"org.apache.log4j.config.PropertySetter.setProperty(PropertyDescriptor,String,String)",11,1,n/a,36,1,3,16,6
"org.apache.log4j.config.PropertySetter.setProperty(String,String)",8,9,n/a,33,2,2,9,5
"org.apache.log4j.config.PropertySetterException.PropertySetterException(String)",1,4,n/a,4,0,1,1,1
"org.apache.log4j.config.PropertySetterException.PropertySetterException(Throwable)",1,1,n/a,6,0,1,2,1
"org.apache.log4j.config.PropertySetterException.getMessage()",2,7,n/a,11,1,0,4,3
"org.apache.log4j.db.ConnectionSource.getConnection()",n/a,7,3,n/a,n/a,0,n/a,n/a
"org.apache.log4j.db.ConnectionSource.getSQLDialectCode()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.db.ConnectionSource.supportsBatchUpdates()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.db.ConnectionSource.supportsGetGeneratedKeys()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.db.ConnectionSourceSkeleton.discoverConnnectionProperties()",11,3,n/a,21,2,0,12,3
"org.apache.log4j.db.ConnectionSourceSkeleton.getPassword()",0,3,n/a,6,0,0,1,1
"org.apache.log4j.db.ConnectionSourceSkeleton.getSQLDialectCode()",0,2,n/a,3,0,0,1,1
"org.apache.log4j.db.ConnectionSourceSkeleton.getUser()",0,6,n/a,6,0,0,1,1
"org.apache.log4j.db.ConnectionSourceSkeleton.setPassword(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.db.ConnectionSourceSkeleton.setUser(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.db.ConnectionSourceSkeleton.supportsBatchUpdates()",0,1,n/a,6,0,0,1,1
"org.apache.log4j.db.ConnectionSourceSkeleton.supportsGetGeneratedKeys()",0,2,n/a,6,0,0,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.CustomReceiverJob.execute()",66,2,n/a,143,7,0,86,20
"org.apache.log4j.db.CustomSQLDBReceiver.activateOptions()",8,13,n/a,17,1,0,9,4
"org.apache.log4j.db.CustomSQLDBReceiver.close()",3,1,n/a,11,2,0,5,4
"org.apache.log4j.db.CustomSQLDBReceiver.closeConnection(Connection)",1,1,n/a,10,2,1,3,3
"org.apache.log4j.db.CustomSQLDBReceiver.finalize()",2,1,n/a,4,0,0,2,1
"org.apache.log4j.db.CustomSQLDBReceiver.getConnectionSource()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.getIDField()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.getRefreshMillis()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.getSql()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.isPaused()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.setConnectionSource(ConnectionSource)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.setIDField(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.setPaused(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.setRefreshMillis(int)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.setSql(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.shutdown()",4,3,n/a,13,1,0,5,2
"org.apache.log4j.db.DBAppender.DBAppender()",1,0,n/a,3,0,0,1,1
"org.apache.log4j.db.DBAppender.activateOptions()",9,38,n/a,20,1,0,11,5
"org.apache.log4j.db.DBAppender.append(LoggingEvent)",76,2,n/a,118,4,1,88,20
"org.apache.log4j.db.DBAppender.close()",0,7,n/a,3,0,0,1,1
"org.apache.log4j.db.DBAppender.getConnectionSource()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.db.DBAppender.getLocationInfo()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.db.DBAppender.requiresLayout()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.db.DBAppender.setConnectionSource(ConnectionSource)",2,0,n/a,8,0,1,2,1
"org.apache.log4j.db.DBAppender.setLocationInfo(boolean)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.db.DBHelper.closeConnection(Connection)",1,1,n/a,10,2,1,3,3
"org.apache.log4j.db.DBHelper.closeStatement(Statement)",1,0,n/a,8,2,1,3,3
"org.apache.log4j.db.DBHelper.computeReferenceMask(LoggingEvent)",3,1,n/a,12,1,1,8,3
"org.apache.log4j.db.DBReceiver.activateOptions()",7,13,n/a,17,1,0,9,4
"org.apache.log4j.db.DBReceiver.getConnectionSource()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.db.DBReceiver.getRefreshMillis()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.db.DBReceiver.isPaused()",0,1,n/a,6,0,0,1,1
"org.apache.log4j.db.DBReceiver.setConnectionSource(ConnectionSource)",0,0,n/a,6,0,1,1,1
"org.apache.log4j.db.DBReceiver.setPaused(boolean)",0,0,n/a,6,0,1,1,1
"org.apache.log4j.db.DBReceiver.setRefreshMillis(int)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.db.DBReceiver.shutdown()",4,3,n/a,10,1,0,4,2
"org.apache.log4j.db.DBReceiverJob.DBReceiverJob(DBReceiver)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.db.DBReceiverJob.closeConnection(Connection)",1,1,n/a,10,2,1,3,3
"org.apache.log4j.db.DBReceiverJob.execute()",44,2,n/a,55,3,0,39,7
"org.apache.log4j.db.DBReceiverJob.getException(Connection,long,LoggingEvent)",12,1,n/a,34,2,3,17,4
"org.apache.log4j.db.DBReceiverJob.getProperties(Connection,long,LoggingEvent)",8,1,n/a,23,2,3,9,2
"org.apache.log4j.db.DataSourceConnectionSource.activateOptions()",10,13,n/a,19,2,0,10,6
"org.apache.log4j.db.DataSourceConnectionSource.getConnection()",7,8,n/a,14,1,0,6,3
"org.apache.log4j.db.DataSourceConnectionSource.getDataSource()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.db.DataSourceConnectionSource.setDataSource(DataSource)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.db.DriverManagerConnectionSource.activateOptions()",6,13,n/a,13,2,0,6,3
"org.apache.log4j.db.DriverManagerConnectionSource.getConnection()",5,8,n/a,10,1,0,3,2
"org.apache.log4j.db.DriverManagerConnectionSource.getDriverClass()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.db.DriverManagerConnectionSource.getUrl()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.db.DriverManagerConnectionSource.setDriverClass(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.db.DriverManagerConnectionSource.setUrl(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.db.JNDIConnectionSource.activateOptions()",3,13,n/a,9,1,0,3,2
"org.apache.log4j.db.JNDIConnectionSource.getConnection()",14,7,n/a,24,2,0,12,5
"org.apache.log4j.db.JNDIConnectionSource.getJndiLocation()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.db.JNDIConnectionSource.lookupDataSource()",3,1,n/a,14,1,0,7,2
"org.apache.log4j.db.JNDIConnectionSource.setJndiLocation(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.db.dialect.HSQLDBDialect.getSelectInsertId()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.db.dialect.MsSQLDialect.getSelectInsertId()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.db.dialect.MySQLDialect.getSelectInsertId()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.db.dialect.OracleDialect.getSelectInsertId()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.db.dialect.PostgreSQLDialect.getSelectInsertId()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.db.dialect.SQLDialect.getSelectInsertId()",n/a,1,5,n/a,n/a,0,n/a,n/a
"org.apache.log4j.db.dialect.Util.discoverSQLDialect(DatabaseMetaData)",7,1,n/a,25,2,1,15,7
"org.apache.log4j.db.dialect.Util.getDialectFromCode(int)",5,1,n/a,21,1,1,18,6
"org.apache.log4j.db.dialect.Util.supportsBatchUpdates(DatabaseMetaData)",3,1,n/a,13,1,1,4,2
"org.apache.log4j.db.dialect.Util.supportsGetGeneratedKeys(DatabaseMetaData)",5,1,n/a,16,1,1,4,2
"org.apache.log4j.filter.AndFilter.activateOptions()",0,14,n/a,2,0,0,0,1
"org.apache.log4j.filter.AndFilter.addFilter(Filter)",2,0,n/a,9,1,1,5,2
"org.apache.log4j.filter.AndFilter.decide(LoggingEvent)",2,6,n/a,24,2,1,10,5
"org.apache.log4j.filter.AndFilter.setAcceptOnMatch(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.filter.DenyAllFilter.decide(LoggingEvent)",0,6,n/a,10,0,1,1,1
"org.apache.log4j.filter.DenyAllFilter.getOptionStrings()",0,0,n/a,9,0,0,1,1
"org.apache.log4j.filter.DenyAllFilter.setOption(String,String)",0,0,n/a,8,0,2,0,1
"org.apache.log4j.filter.ExpressionFilter.activateOptions()",1,14,n/a,4,0,0,1,1
"org.apache.log4j.filter.ExpressionFilter.decide(LoggingEvent)",1,7,n/a,9,1,1,3,3
"org.apache.log4j.filter.ExpressionFilter.getAcceptOnMatch()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.filter.ExpressionFilter.getConvertInFixToPostFix()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.filter.ExpressionFilter.getExpression()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.filter.ExpressionFilter.setAcceptOnMatch(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.filter.ExpressionFilter.setConvertInFixToPostFix(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.filter.ExpressionFilter.setExpression(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.filter.LevelMatchFilter.decide(LoggingEvent)",2,7,n/a,27,2,1,10,5
"org.apache.log4j.filter.LevelMatchFilter.getAcceptOnMatch()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.filter.LevelMatchFilter.getLevelToMatch()",1,0,n/a,3,0,0,1,2
"org.apache.log4j.filter.LevelMatchFilter.setAcceptOnMatch(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.filter.LevelMatchFilter.setLevelToMatch(String)",1,2,n/a,3,0,1,1,1
"org.apache.log4j.filter.LevelRangeFilter.decide(LoggingEvent)",5,6,n/a,30,2,1,9,6
"org.apache.log4j.filter.LevelRangeFilter.getAcceptOnMatch()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.filter.LevelRangeFilter.getLevelMax()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.filter.LevelRangeFilter.getLevelMin()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.filter.LevelRangeFilter.setAcceptOnMatch(boolean)",0,2,n/a,7,0,1,1,1
"org.apache.log4j.filter.LevelRangeFilter.setLevelMax(Level)",0,4,n/a,7,0,1,1,1
"org.apache.log4j.filter.LevelRangeFilter.setLevelMin(Level)",0,5,n/a,7,0,1,1,1
"org.apache.log4j.filter.LocationInfoFilter.activateOptions()",1,14,n/a,4,0,0,1,1
"org.apache.log4j.filter.LocationInfoFilter.decide(LoggingEvent)",5,6,n/a,18,2,1,5,3
"org.apache.log4j.filter.LocationInfoFilter.getConvertInFixToPostFix()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.filter.LocationInfoFilter.getExpression()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.filter.LocationInfoFilter.setConvertInFixToPostFix(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.filter.LocationInfoFilter.setExpression(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.filter.MapFilter.decide(LoggingEvent)",19,6,n/a,33,3,1,14,5
"org.apache.log4j.filter.PropertyFilter.decide(LoggingEvent)",10,6,n/a,15,3,1,9,4
"org.apache.log4j.filter.PropertyFilter.parseProperties(String)",12,1,n/a,9,1,1,6,2
"org.apache.log4j.filter.PropertyFilter.setProperties(String)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.filter.ReflectionFilter.decide(LoggingEvent)",26,6,n/a,49,4,1,21,9
"org.apache.log4j.filter.StringMatchFilter.decide(LoggingEvent)",2,7,n/a,18,2,1,8,5
"org.apache.log4j.filter.StringMatchFilter.getAcceptOnMatch()",0,0,n/a,4,0,0,1,1
"org.apache.log4j.filter.StringMatchFilter.getStringToMatch()",0,0,n/a,4,0,0,1,1
"org.apache.log4j.filter.StringMatchFilter.setAcceptOnMatch(boolean)",0,1,n/a,4,0,1,1,1
"org.apache.log4j.filter.StringMatchFilter.setStringToMatch(String)",0,3,n/a,4,0,1,1,1
"org.apache.log4j.helpers.AbsoluteTimeDateFormat.AbsoluteTimeDateFormat()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.helpers.AbsoluteTimeDateFormat.AbsoluteTimeDateFormat(String)",1,2,n/a,7,0,1,1,1
"org.apache.log4j.helpers.AbsoluteTimeDateFormat.AbsoluteTimeDateFormat(String,Locale)",1,1,n/a,7,0,2,1,1
"org.apache.log4j.helpers.AbsoluteTimeDateFormat.AbsoluteTimeDateFormat(String,TimeZone)",2,2,n/a,10,0,2,2,1
"org.apache.log4j.helpers.AbsoluteTimeDateFormat.AbsoluteTimeDateFormat(TimeZone)",2,0,n/a,8,0,1,2,1
"org.apache.log4j.helpers.AbsoluteTimeDateFormat.format(Date,StringBuffer,FieldPosition)",1,1,n/a,7,0,3,1,1
"org.apache.log4j.helpers.AbsoluteTimeDateFormat.parse(String,ParsePosition)",1,1,n/a,6,0,2,1,1
"org.apache.log4j.helpers.AppenderAttachableImpl.addAppender(Appender)",3,3,n/a,16,1,1,6,4
"org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(LoggingEvent)",3,4,n/a,14,2,1,10,3
"org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders()",1,3,n/a,12,1,0,3,2
"org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String)",4,2,n/a,19,2,1,11,5
"org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender)",2,2,n/a,18,2,1,11,5
"org.apache.log4j.helpers.AppenderAttachableImpl.removeAllAppenders()",4,3,n/a,14,2,0,9,3
"org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(Appender)",1,2,n/a,9,1,1,3,3
"org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String)",5,2,n/a,16,2,1,9,5
"org.apache.log4j.helpers.BoundedFIFO.BoundedFIFO(int)",1,5,n/a,12,1,1,4,2
"org.apache.log4j.helpers.BoundedFIFO.get()",0,15,n/a,15,1,0,8,3
"org.apache.log4j.helpers.BoundedFIFO.getMaxSize()",0,1,n/a,7,0,0,1,1
"org.apache.log4j.helpers.BoundedFIFO.isFull()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.helpers.BoundedFIFO.length()",0,16,n/a,9,0,0,1,1
"org.apache.log4j.helpers.BoundedFIFO.min(int,int)",0,3,n/a,3,0,2,1,2
"org.apache.log4j.helpers.BoundedFIFO.put(LoggingEvent)",0,10,n/a,14,2,1,5,3
"org.apache.log4j.helpers.BoundedFIFO.resize(int)",5,3,n/a,35,1,1,19,5
"org.apache.log4j.helpers.BoundedFIFO.wasEmpty()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.helpers.BoundedFIFO.wasFull()",0,1,n/a,8,0,0,1,1
"org.apache.log4j.helpers.CountingQuietWriter.CountingQuietWriter(Writer,ErrorHandler)",1,1,n/a,9,0,2,1,1
"org.apache.log4j.helpers.CountingQuietWriter.getCount()",0,2,n/a,4,0,0,1,1
"org.apache.log4j.helpers.CountingQuietWriter.setCount(long)",0,1,n/a,4,0,1,1,1
"org.apache.log4j.helpers.CountingQuietWriter.write(String)",3,22,n/a,10,1,1,4,2
"org.apache.log4j.helpers.CyclicBuffer.CyclicBuffer(int)",1,6,n/a,16,1,1,7,2
"org.apache.log4j.helpers.CyclicBuffer.add(LoggingEvent)",0,7,n/a,13,0,1,7,4
"org.apache.log4j.helpers.CyclicBuffer.get()",0,6,n/a,16,1,0,8,3
"org.apache.log4j.helpers.CyclicBuffer.get(int)",0,6,n/a,11,0,1,3,3
"org.apache.log4j.helpers.CyclicBuffer.getMaxSize()",0,3,n/a,4,0,0,1,1
"org.apache.log4j.helpers.CyclicBuffer.length()",0,10,n/a,9,0,0,1,1
"org.apache.log4j.helpers.CyclicBuffer.resize(int)",1,2,n/a,30,1,1,20,7
"org.apache.log4j.helpers.DateLayout.DateLayout()",0,3,n/a,6,0,0,0,1
"org.apache.log4j.helpers.DateLayout.DateLayout(String)",1,0,n/a,8,0,1,1,1
"org.apache.log4j.helpers.DateLayout.activateOptions()",0,14,n/a,2,0,0,0,1
"org.apache.log4j.helpers.DateLayout.dateFormat(StringBuffer,LoggingEvent)",3,2,n/a,8,1,2,4,2
"org.apache.log4j.helpers.DateLayout.getDateFormat()",0,2,n/a,7,0,0,1,1
"org.apache.log4j.helpers.DateLayout.getOptionStrings()",0,1,n/a,8,0,0,1,1
"org.apache.log4j.helpers.DateLayout.getTimeZone()",0,2,n/a,7,0,0,1,1
"org.apache.log4j.helpers.DateLayout.setDateFormat(DateFormat,TimeZone)",1,1,n/a,9,0,2,2,1
"org.apache.log4j.helpers.DateLayout.setDateFormat(String)",2,8,n/a,12,1,1,3,2
"org.apache.log4j.helpers.DateLayout.setDateFormat(String,TimeZone)",11,8,n/a,24,3,2,15,8
"org.apache.log4j.helpers.DateLayout.setOption(String,String)",2,2,n/a,12,1,2,4,3
"org.apache.log4j.helpers.DateLayout.setTimeZone(String)",0,2,n/a,8,0,1,1,1
"org.apache.log4j.helpers.DateTimeDateFormat.DateTimeDateFormat()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.helpers.DateTimeDateFormat.DateTimeDateFormat(Locale)",1,1,n/a,8,0,1,1,1
"org.apache.log4j.helpers.DateTimeDateFormat.DateTimeDateFormat(TimeZone)",1,0,n/a,8,0,1,1,1
"org.apache.log4j.helpers.FileWatchdog.FileWatchdog(String)",3,0,n/a,6,0,1,4,1
"org.apache.log4j.helpers.FileWatchdog.checkAndConfigure()",5,2,n/a,25,2,0,15,5
"org.apache.log4j.helpers.FileWatchdog.doOnChange()",n/a,2,0,n/a,n/a,0,n/a,n/a
"org.apache.log4j.helpers.FileWatchdog.run()",2,0,n/a,10,2,0,4,3
"org.apache.log4j.helpers.FileWatchdog.setDelay(long)",0,0,n/a,6,0,1,1,1
"org.apache.log4j.helpers.FormattingInfo.dump()",1,0,n/a,3,0,0,1,1
"org.apache.log4j.helpers.FormattingInfo.reset()",0,2,n/a,5,0,0,3,1
"org.apache.log4j.helpers.ISO8601DateFormat.ISO8601DateFormat()",1,2,n/a,6,0,0,1,1
"org.apache.log4j.helpers.ISO8601DateFormat.ISO8601DateFormat(TimeZone)",1,0,n/a,8,0,1,1,1
"org.apache.log4j.helpers.IntializationUtil.initialConfiguration(LoggerRepository,String,String)",6,2,n/a,44,2,3,11,5
"org.apache.log4j.helpers.IntializationUtil.log4jInternalConfiguration(LoggerRepository)",0,2,n/a,9,0,1,0,1
"org.apache.log4j.helpers.JNDIUtil.getInitialContext()",1,2,n/a,3,0,0,1,1
"org.apache.log4j.helpers.JNDIUtil.lookup(Context,String)",1,4,n/a,11,1,2,5,3
"org.apache.log4j.helpers.Loader.getResource(String)",5,4,n/a,53,3,1,14,6
"org.apache.log4j.helpers.Loader.getResource(String,Class)",1,0,n/a,10,0,2,1,1
"org.apache.log4j.helpers.Loader.getTCL()",2,2,n/a,9,0,0,1,1
"org.apache.log4j.helpers.Loader.isJava1()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.helpers.Loader.loadClass(String)",4,9,n/a,23,2,1,5,4
"org.apache.log4j.helpers.LogLog.debug(String)",1,16,n/a,9,1,1,2,2
"org.apache.log4j.helpers.LogLog.debug(String,Throwable)",2,0,n/a,12,2,2,4,3
"org.apache.log4j.helpers.LogLog.error(String)",1,5,n/a,8,0,1,1,1
"org.apache.log4j.helpers.LogLog.error(String,Throwable)",2,6,n/a,11,1,2,3,2
"org.apache.log4j.helpers.LogLog.info(String)",1,2,n/a,3,0,1,1,1
"org.apache.log4j.helpers.LogLog.setInternalDebugging(boolean)",0,0,n/a,6,0,1,1,1
"org.apache.log4j.helpers.LogLog.setQuietMode(boolean)",0,0,n/a,9,0,1,0,1
"org.apache.log4j.helpers.LogLog.warn(String)",1,1,n/a,10,0,1,1,1
"org.apache.log4j.helpers.LogLog.warn(String,Throwable)",2,0,n/a,12,1,2,3,2
"org.apache.log4j.helpers.LoggerTraverse.LoggerTraverse()",0,0,n/a,4,0,0,0,1
"org.apache.log4j.helpers.LoggerTraverse.LoggerTraverse(LoggerRepository)",1,1,n/a,5,0,1,1,1
"org.apache.log4j.helpers.LoggerTraverse.getLevelForPackage(String)",6,1,n/a,24,2,1,11,5
"org.apache.log4j.helpers.LoggerTraverse.getLevelForRootLogger()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.helpers.LoggerTraverse.getLevelIsSetForPackage(String)",5,1,n/a,27,2,1,13,6
"org.apache.log4j.helpers.LoggerTraverse.getLoggerNames()",7,0,n/a,11,1,0,5,2
"org.apache.log4j.helpers.LoggerTraverse.getLoggerPackageNames(String)",16,1,n/a,49,4,1,19,8
"org.apache.log4j.helpers.LoggerTraverse.iteratePackages(String,int,LoggerTraverse)",13,2,n/a,29,2,3,17,6
"org.apache.log4j.helpers.LoggerTraverse.loggerHasSubPackages(String)",7,1,n/a,17,2,1,7,4
"org.apache.log4j.helpers.LoggerTraverse.main(String[])",15,0,n/a,19,0,1,10,1
"org.apache.log4j.helpers.LoggerTraverse.update(LoggerRepository)",7,1,n/a,17,1,1,6,2
"org.apache.log4j.helpers.MessageFormatter.format(String,Object)",11,7,n/a,42,2,2,16,7
"org.apache.log4j.helpers.MessageFormatter.format(String,Object,Object)",21,8,n/a,47,3,3,22,7
"org.apache.log4j.helpers.NullEnumeration.NullEnumeration()",0,1,n/a,3,0,0,0,1
"org.apache.log4j.helpers.NullEnumeration.getInstance()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.helpers.NullEnumeration.hasMoreElements()",0,36,n/a,4,0,0,1,1
"org.apache.log4j.helpers.NullEnumeration.nextElement()",1,23,n/a,4,0,0,1,1
"org.apache.log4j.helpers.OnlyOnceErrorHandler.activateOptions()",0,13,n/a,1,0,0,0,1
"org.apache.log4j.helpers.OnlyOnceErrorHandler.error(String)",0,2,n/a,1,0,1,0,1
"org.apache.log4j.helpers.OnlyOnceErrorHandler.error(String,Exception,int)",0,6,n/a,1,0,3,0,1
"org.apache.log4j.helpers.OnlyOnceErrorHandler.error(String,Exception,int,LoggingEvent)",0,0,n/a,1,0,4,0,1
"org.apache.log4j.helpers.OnlyOnceErrorHandler.setAppender(Appender)",0,0,n/a,1,0,1,0,1
"org.apache.log4j.helpers.OnlyOnceErrorHandler.setBackupAppender(Appender)",0,0,n/a,1,0,1,0,1
"org.apache.log4j.helpers.OnlyOnceErrorHandler.setLogger(Logger)",0,0,n/a,1,0,1,0,1
"org.apache.log4j.helpers.Option.isEmpty(String)",1,20,n/a,3,0,1,1,2
"org.apache.log4j.helpers.OptionConverter.concatanateArrays(String[],String[])",2,0,n/a,7,0,2,5,1
"org.apache.log4j.helpers.OptionConverter.convertSpecialChars(String)",6,2,n/a,31,3,1,26,11
"org.apache.log4j.helpers.OptionConverter.extractDefaultReplacement(String)",3,1,n/a,10,1,1,7,2
"org.apache.log4j.helpers.OptionConverter.findAndSubst(String,Properties)",4,10,n/a,17,1,2,7,3
"org.apache.log4j.helpers.OptionConverter.getLogger()",1,17,n/a,4,0,0,1,1
"org.apache.log4j.helpers.OptionConverter.getSystemProperty(String,String)",1,7,n/a,15,1,2,3,2
"org.apache.log4j.helpers.OptionConverter.instantiateByClassName(String,Class,Object)",20,18,n/a,37,3,3,13,5
"org.apache.log4j.helpers.OptionConverter.instantiateByKey(Properties,String,Class,Object)",5,1,n/a,11,1,4,5,2
"org.apache.log4j.helpers.OptionConverter.selectAndConfigure(URL,String,LoggerRepository)",11,1,n/a,40,2,3,15,7
"org.apache.log4j.helpers.OptionConverter.setLoggerRepository(LoggerRepository)",0,0,n/a,3,0,1,0,1
"org.apache.log4j.helpers.OptionConverter.stripDuplicateBackslashes(String)",6,9,n/a,37,3,1,13,5
"org.apache.log4j.helpers.OptionConverter.substVars(String,Properties)",16,13,n/a,92,4,2,31,9
"org.apache.log4j.helpers.OptionConverter.toBoolean(String,boolean)",3,6,n/a,19,1,2,8,4
"org.apache.log4j.helpers.OptionConverter.toFileSize(String,long)",14,1,n/a,27,2,2,20,7
"org.apache.log4j.helpers.OptionConverter.toInt(String,int)",5,0,n/a,11,2,2,6,3
"org.apache.log4j.helpers.OptionConverter.toLevel(String,Level)",22,14,n/a,72,2,2,27,11
"org.apache.log4j.helpers.PatternConverter.PatternConverter()",0,2,n/a,2,0,0,0,1
"org.apache.log4j.helpers.PatternConverter.PatternConverter(FormattingInfo)",0,6,n/a,6,0,1,3,1
"org.apache.log4j.helpers.PatternConverter.convert(LoggingEvent)",n/a,1,8,n/a,n/a,1,n/a,n/a
"org.apache.log4j.helpers.PatternConverter.format(StringBuffer,LoggingEvent)",10,1,n/a,27,2,2,15,6
"org.apache.log4j.helpers.PatternConverter.spacePad(StringBuffer,int)",2,3,n/a,15,2,2,8,4
"org.apache.log4j.helpers.PatternParser.BasicPatternConverter.BasicPatternConverter(FormattingInfo,int)",1,5,n/a,4,0,2,2,1
"org.apache.log4j.helpers.PatternParser.BasicPatternConverter.convert(LoggingEvent)",7,1,n/a,17,2,1,13,7
"org.apache.log4j.helpers.PatternParser.CategoryPatternConverter.CategoryPatternConverter(FormattingInfo,int)",1,1,n/a,3,0,2,1,1
"org.apache.log4j.helpers.PatternParser.CategoryPatternConverter.getFullyQualifiedName(LoggingEvent)",1,1,n/a,3,0,1,1,1
"org.apache.log4j.helpers.PatternParser.ClassNamePatternConverter.ClassNamePatternConverter(FormattingInfo,int)",1,1,n/a,3,0,2,1,1
"org.apache.log4j.helpers.PatternParser.ClassNamePatternConverter.getFullyQualifiedName(LoggingEvent)",2,1,n/a,3,0,1,1,1
"org.apache.log4j.helpers.PatternParser.DatePatternConverter.DatePatternConverter(FormattingInfo,DateFormat)",2,1,n/a,5,0,2,3,1
"org.apache.log4j.helpers.PatternParser.DatePatternConverter.convert(LoggingEvent)",3,1,n/a,12,1,1,6,2
"org.apache.log4j.helpers.PatternParser.LiteralPatternConverter.LiteralPatternConverter(String)",0,3,n/a,3,0,1,1,1
"org.apache.log4j.helpers.PatternParser.LiteralPatternConverter.convert(LoggingEvent)",0,1,n/a,4,0,1,1,1
"org.apache.log4j.helpers.PatternParser.LiteralPatternConverter.format(StringBuffer,LoggingEvent)",1,1,n/a,5,0,2,1,1
"org.apache.log4j.helpers.PatternParser.LocationPatternConverter.LocationPatternConverter(FormattingInfo,int)",1,4,n/a,4,0,2,2,1
"org.apache.log4j.helpers.PatternParser.LocationPatternConverter.convert(LoggingEvent)",4,1,n/a,15,1,1,12,6
"org.apache.log4j.helpers.PatternParser.MDCPatternConverter.MDCPatternConverter(FormattingInfo,String)",1,1,n/a,4,0,2,2,1
"org.apache.log4j.helpers.PatternParser.MDCPatternConverter.convert(LoggingEvent)",2,1,n/a,9,1,1,4,2
"org.apache.log4j.helpers.PatternParser.NamedPatternConverter.NamedPatternConverter(FormattingInfo,int)",1,2,n/a,4,0,2,2,1
"org.apache.log4j.helpers.PatternParser.NamedPatternConverter.convert(LoggingEvent)",4,1,n/a,19,2,1,12,4
"org.apache.log4j.helpers.PatternParser.NamedPatternConverter.getFullyQualifiedName(LoggingEvent)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.log4j.helpers.PatternParser.PatternParser(String)",1,2,n/a,6,0,1,3,1
"org.apache.log4j.helpers.PatternParser.addConverter(PatternConverter)",3,2,n/a,10,0,1,4,1
"org.apache.log4j.helpers.PatternParser.addToList(PatternConverter)",0,3,n/a,9,1,1,4,2
"org.apache.log4j.helpers.PatternParser.extractOption()",3,3,n/a,12,2,0,7,4
"org.apache.log4j.helpers.PatternParser.extractPrecisionOption()",4,2,n/a,22,3,0,10,4
"org.apache.log4j.helpers.PatternParser.finalizeConverter(char)",44,4,n/a,135,3,1,75,20
"org.apache.log4j.helpers.PatternParser.parse()",25,2,n/a,98,5,0,69,26
"org.apache.log4j.helpers.PlatformInfo.hasStackTraceElement()",1,2,n/a,12,2,0,6,3
"org.apache.log4j.helpers.PlatformInfo.isInVisualAge()",1,2,n/a,11,2,0,6,3
"org.apache.log4j.helpers.PlatformInfo.isJDK14OrLater()",1,1,n/a,3,0,0,1,1
"org.apache.log4j.helpers.PlatformInfo.isOnAS400()",3,2,n/a,21,3,0,9,5
"org.apache.log4j.helpers.QuietWriter.QuietWriter(Writer,ErrorHandler)",2,3,n/a,10,0,2,2,1
"org.apache.log4j.helpers.QuietWriter.flush()",2,8,n/a,9,1,0,3,2
"org.apache.log4j.helpers.QuietWriter.setErrorHandler(ErrorHandler)",1,2,n/a,9,1,1,3,2
"org.apache.log4j.helpers.QuietWriter.write(String)",2,22,n/a,9,1,1,3,2
"org.apache.log4j.helpers.ReaderWriterLock.ReaderWriterLock()",0,1,n/a,2,0,0,0,1
"org.apache.log4j.helpers.ReaderWriterLock.ReaderWriterLock(PrintWriter)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.helpers.ReaderWriterLock.getReadLock()",3,5,n/a,15,2,0,8,6
"org.apache.log4j.helpers.ReaderWriterLock.getWriteLock()",3,5,n/a,17,2,0,10,6
"org.apache.log4j.helpers.ReaderWriterLock.printMessage(String)",3,6,n/a,4,0,1,1,1
"org.apache.log4j.helpers.ReaderWriterLock.releaseReadLock()",2,5,n/a,9,1,0,5,3
"org.apache.log4j.helpers.ReaderWriterLock.releaseWriteLock()",2,5,n/a,7,1,0,4,2
"org.apache.log4j.helpers.RelativeTimeDateFormat.RelativeTimeDateFormat()",1,1,n/a,4,0,0,1,1
"org.apache.log4j.helpers.RelativeTimeDateFormat.format(Date,StringBuffer,FieldPosition)",2,1,n/a,11,0,3,1,1
"org.apache.log4j.helpers.RelativeTimeDateFormat.parse(String,ParsePosition)",0,1,n/a,7,0,2,1,1
"org.apache.log4j.helpers.RelativeTimeDateFormat.setTimeZone(TimeZone)",0,15,n/a,8,0,1,0,1
"org.apache.log4j.helpers.SyslogQuietWriter.SyslogQuietWriter(Writer,int,ErrorHandler)",1,0,n/a,11,0,3,2,1
"org.apache.log4j.helpers.SyslogQuietWriter.setLevel(int)",0,0,n/a,4,0,1,1,1
"org.apache.log4j.helpers.SyslogQuietWriter.setSyslogFacility(int)",0,0,n/a,4,0,1,1,1
"org.apache.log4j.helpers.SyslogQuietWriter.write(String)",1,22,n/a,4,0,1,1,1
"org.apache.log4j.helpers.SyslogWriter.SyslogWriter(String)",19,2,n/a,52,4,1,23,11
"org.apache.log4j.helpers.SyslogWriter.close()",2,2,n/a,11,1,0,3,2
"org.apache.log4j.helpers.SyslogWriter.flush()",6,5,n/a,15,0,0,6,2
"org.apache.log4j.helpers.SyslogWriter.write(String)",1,9,n/a,3,0,1,1,1
"org.apache.log4j.helpers.SyslogWriter.write(char[],int,int)",1,0,n/a,3,0,3,1,1
"org.apache.log4j.helpers.ThreadLocalMap.childValue(Object)",1,0,n/a,8,1,1,4,2
"org.apache.log4j.helpers.Transform.appendEscapingCDATA(StringBuffer,String)",9,1,n/a,32,2,2,15,5
"org.apache.log4j.helpers.Transform.escapeTags(String)",9,4,n/a,26,2,1,12,8
"org.apache.log4j.helpers.UtilLoggingLevel.UtilLoggingLevel(int,String,int)",1,7,n/a,3,0,3,1,1
"org.apache.log4j.helpers.UtilLoggingLevel.getAllPossibleLevels()",8,0,n/a,11,0,0,9,1
"org.apache.log4j.helpers.UtilLoggingLevel.toLevel(String)",1,3,n/a,3,0,1,1,1
"org.apache.log4j.helpers.UtilLoggingLevel.toLevel(String,Level)",8,1,n/a,28,1,2,18,9
"org.apache.log4j.helpers.UtilLoggingLevel.toLevel(int)",1,1,n/a,3,0,1,1,1
"org.apache.log4j.helpers.UtilLoggingLevel.toLevel(int,UtilLoggingLevel)",0,1,n/a,24,1,2,17,9
"org.apache.log4j.jdbc.JDBCAppender.JDBCAppender()",3,0,n/a,5,0,0,3,1
"org.apache.log4j.jdbc.JDBCAppender.append(LoggingEvent)",3,2,n/a,8,0,1,3,2
"org.apache.log4j.jdbc.JDBCAppender.close()",4,8,n/a,15,1,0,6,4
"org.apache.log4j.jdbc.JDBCAppender.closeConnection(Connection)",0,1,n/a,9,0,1,0,1
"org.apache.log4j.jdbc.JDBCAppender.execute(String)",6,1,n/a,24,1,1,11,3
"org.apache.log4j.jdbc.JDBCAppender.finalize()",2,3,n/a,5,0,0,2,1
"org.apache.log4j.jdbc.JDBCAppender.flushBuffer()",11,2,n/a,27,2,0,11,3
"org.apache.log4j.jdbc.JDBCAppender.getBufferSize()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.jdbc.JDBCAppender.getConnection()",4,1,n/a,15,1,0,5,3
"org.apache.log4j.jdbc.JDBCAppender.getLogStatement(LoggingEvent)",2,2,n/a,11,0,1,1,1
"org.apache.log4j.jdbc.JDBCAppender.getPassword()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.jdbc.JDBCAppender.getSql()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.jdbc.JDBCAppender.getURL()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.jdbc.JDBCAppender.getUser()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.jdbc.JDBCAppender.requiresLayout()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.jdbc.JDBCAppender.setBufferSize(int)",2,0,n/a,5,0,1,3,1
"org.apache.log4j.jdbc.JDBCAppender.setDriver(String)",2,1,n/a,12,1,1,3,2
"org.apache.log4j.jdbc.JDBCAppender.setPassword(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.jdbc.JDBCAppender.setSql(String)",5,0,n/a,12,1,1,4,2
"org.apache.log4j.jdbc.JDBCAppender.setURL(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.jdbc.JDBCAppender.setUser(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.jmx.AbstractDynamicMBean.getAttributes(String[])",7,0,n/a,26,2,1,13,5
"org.apache.log4j.jmx.AbstractDynamicMBean.getLogger()",n/a,3,4,n/a,n/a,0,n/a,n/a
"org.apache.log4j.jmx.AbstractDynamicMBean.getObjectName()",0,5,n/a,6,0,0,1,1
"org.apache.log4j.jmx.AbstractDynamicMBean.getServer()",0,3,n/a,6,0,0,1,1
"org.apache.log4j.jmx.AbstractDynamicMBean.postDeregister()",2,0,n/a,4,0,0,1,1
"org.apache.log4j.jmx.AbstractDynamicMBean.postRegister(Boolean)",0,0,n/a,3,0,1,0,1
"org.apache.log4j.jmx.AbstractDynamicMBean.preDeregister()",2,0,n/a,4,0,0,1,1
"org.apache.log4j.jmx.AbstractDynamicMBean.preRegister(MBeanServer,ObjectName)",2,1,n/a,7,0,2,4,1
"org.apache.log4j.jmx.AbstractDynamicMBean.setAttributes(AttributeList)",13,0,n/a,29,2,1,15,5
"org.apache.log4j.jmx.Agent.Agent()",0,0,n/a,2,0,0,0,1
"org.apache.log4j.jmx.Agent.start()",11,0,n/a,16,1,0,11,2
"org.apache.log4j.jmx.AppenderDynamicMBean.AppenderDynamicMBean(Appender)",1,1,n/a,4,0,1,2,1
"org.apache.log4j.jmx.AppenderDynamicMBean.buildDynamicMBeanInfo()",20,1,n/a,47,4,0,25,5
"org.apache.log4j.jmx.AppenderDynamicMBean.getAttribute(String)",12,3,n/a,31,2,1,13,7
"org.apache.log4j.jmx.AppenderDynamicMBean.getLogger()",0,3,n/a,4,0,0,1,1
"org.apache.log4j.jmx.AppenderDynamicMBean.getMBeanInfo()",4,0,n/a,12,0,0,4,1
"org.apache.log4j.jmx.AppenderDynamicMBean.invoke(String,Object[],String[])",6,0,n/a,19,1,3,9,4
"org.apache.log4j.jmx.AppenderDynamicMBean.isSupportedType(Class)",2,1,n/a,13,1,1,7,4
"org.apache.log4j.jmx.AppenderDynamicMBean.preRegister(MBeanServer,ObjectName)",3,1,n/a,6,0,2,3,1
"org.apache.log4j.jmx.AppenderDynamicMBean.registerLayoutMBean(Layout)",13,2,n/a,19,1,1,10,3
"org.apache.log4j.jmx.AppenderDynamicMBean.setAttribute(Attribute)",16,1,n/a,41,2,1,18,8
"org.apache.log4j.jmx.HierarchyDynamicMBean.HierarchyDynamicMBean()",2,2,n/a,6,0,0,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.HierarchyDynamicMBean(LoggerRepository)",2,1,n/a,10,0,1,4,2
"org.apache.log4j.jmx.HierarchyDynamicMBean.addLoggerMBean(Logger)",15,3,n/a,26,1,1,13,2
"org.apache.log4j.jmx.HierarchyDynamicMBean.addLoggerMBean(String)",2,1,n/a,13,1,1,4,2
"org.apache.log4j.jmx.HierarchyDynamicMBean.addLoggerMBeans()",4,1,n/a,11,1,0,4,2
"org.apache.log4j.jmx.HierarchyDynamicMBean.addNotificationListener(NotificationListener,NotificationFilter,Object)",1,0,n/a,6,0,3,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.appenderAddedEvent(Logger,Appender)",8,1,n/a,8,0,2,5,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.appenderRemovedEvent(Logger,Appender)",8,1,n/a,8,0,2,5,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.buildDynamicMBeanInfo()",9,1,n/a,30,0,0,9,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.getAttribute(String)",12,2,n/a,30,2,1,14,6
"org.apache.log4j.jmx.HierarchyDynamicMBean.getLogger()",0,3,n/a,4,0,0,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.getMBeanInfo()",3,0,n/a,12,0,0,3,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.getNotificationInfo()",1,0,n/a,4,0,0,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.invoke(String,Object[],String[])",8,0,n/a,22,1,3,8,4
"org.apache.log4j.jmx.HierarchyDynamicMBean.levelChangedEvent(Logger)",0,1,n/a,3,0,1,0,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.postRegister(Boolean)",4,0,n/a,7,0,1,4,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.removeNotificationListener(NotificationListener)",1,0,n/a,5,0,1,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.setAttribute(Attribute)",10,1,n/a,25,1,1,9,4
"org.apache.log4j.jmx.LayoutDynamicMBean.LayoutDynamicMBean(Layout)",1,1,n/a,4,0,1,2,1
"org.apache.log4j.jmx.LayoutDynamicMBean.buildDynamicMBeanInfo()",18,1,n/a,39,4,0,22,5
"org.apache.log4j.jmx.LayoutDynamicMBean.getAttribute(String)",6,3,n/a,23,2,1,9,5
"org.apache.log4j.jmx.LayoutDynamicMBean.getLogger()",0,3,n/a,4,0,0,1,1
"org.apache.log4j.jmx.LayoutDynamicMBean.getMBeanInfo()",4,0,n/a,12,0,0,4,1
"org.apache.log4j.jmx.LayoutDynamicMBean.invoke(String,Object[],String[])",2,0,n/a,10,1,3,4,2
"org.apache.log4j.jmx.LayoutDynamicMBean.isSupportedType(Class)",2,1,n/a,13,1,1,7,4
"org.apache.log4j.jmx.LayoutDynamicMBean.setAttribute(Attribute)",15,1,n/a,40,2,1,17,7
"org.apache.log4j.jmx.LoggerDynamicMBean.LoggerDynamicMBean(Logger)",1,1,n/a,4,0,1,2,1
"org.apache.log4j.jmx.LoggerDynamicMBean.addAppender(String,String)",4,1,n/a,10,0,2,4,1
"org.apache.log4j.jmx.LoggerDynamicMBean.appenderMBeanRegistration()",4,1,n/a,7,1,0,4,2
"org.apache.log4j.jmx.LoggerDynamicMBean.buildDynamicMBeanInfo()",10,1,n/a,29,0,0,8,1
"org.apache.log4j.jmx.LoggerDynamicMBean.getAttribute(String)",13,2,n/a,31,2,1,14,7
"org.apache.log4j.jmx.LoggerDynamicMBean.getLogger()",0,3,n/a,4,0,0,1,1
"org.apache.log4j.jmx.LoggerDynamicMBean.getMBeanInfo()",3,0,n/a,14,0,0,4,1
"org.apache.log4j.jmx.LoggerDynamicMBean.handleNotification(Notification,Object)",4,0,n/a,5,0,2,2,1
"org.apache.log4j.jmx.LoggerDynamicMBean.invoke(String,Object[],String[])",2,0,n/a,10,1,3,4,2
"org.apache.log4j.jmx.LoggerDynamicMBean.postRegister(Boolean)",1,0,n/a,4,0,1,1,1
"org.apache.log4j.jmx.LoggerDynamicMBean.registerAppenderMBean(Appender)",12,2,n/a,20,1,1,11,3
"org.apache.log4j.jmx.LoggerDynamicMBean.setAttribute(Attribute)",14,1,n/a,37,3,1,15,6
"org.apache.log4j.jmx.MethodUnion.MethodUnion(Method,Method)",0,2,n/a,4,0,2,2,1
"org.apache.log4j.joran.JoranConfigurator.JoranConfigurator()",0,28,n/a,2,0,0,0,1
"org.apache.log4j.joran.JoranConfigurator.ParseAction.parse(SAXParser,DefaultHandler)",n/a,1,6,n/a,n/a,2,n/a,n/a
"org.apache.log4j.joran.JoranConfigurator.doConfigure(File,LoggerRepository)",3,0,n/a,3,2,2,3,1
"org.apache.log4j.joran.JoranConfigurator.doConfigure(InputSource,LoggerRepository)",3,0,n/a,3,2,2,3,1
"org.apache.log4j.joran.JoranConfigurator.doConfigure(InputStream,LoggerRepository)",3,1,n/a,3,2,2,3,1
"org.apache.log4j.joran.JoranConfigurator.doConfigure(ParseAction,LoggerRepository)",28,6,n/a,45,1,2,32,5
"org.apache.log4j.joran.JoranConfigurator.doConfigure(String,LoggerRepository)",4,31,n/a,3,2,2,3,1
"org.apache.log4j.joran.JoranConfigurator.doConfigure(URL,LoggerRepository)",4,3,n/a,3,2,2,3,1
"org.apache.log4j.joran.JoranConfigurator.getErrorList()",2,7,n/a,3,0,0,1,1
"org.apache.log4j.joran.JoranConfigurator.getExecutionContext()",1,3,n/a,3,0,0,1,1
"org.apache.log4j.joran.JoranConfigurator.getLogger()",1,5,n/a,3,0,0,1,1
"org.apache.log4j.joran.JoranConfigurator.selfInitialize(LoggerRepository)",74,1,n/a,53,0,1,29,1
"org.apache.log4j.joran.JoranConfigurator.setXIncludeAware(SAXParserFactory)",5,1,n/a,9,1,1,5,2
"org.apache.log4j.joran.action.Action.begin(ExecutionContext,String,Attributes)",n/a,2,26,n/a,n/a,3,n/a,n/a
"org.apache.log4j.joran.action.Action.end(ExecutionContext,String)",n/a,2,25,n/a,n/a,2,n/a,n/a
"org.apache.log4j.joran.action.Action.getColumnNumber(ExecutionContext)",3,1,n/a,8,1,1,5,2
"org.apache.log4j.joran.action.Action.getLineNumber(ExecutionContext)",3,2,n/a,8,1,1,5,2
"org.apache.log4j.joran.action.Action.toString()",2,62,n/a,3,0,0,1,1
"org.apache.log4j.joran.action.ActionData.ActionData(PropertySetter,int)",0,1,n/a,4,0,2,2,1
"org.apache.log4j.joran.action.AppenderAction.begin(ExecutionContext,String,Attributes)",25,2,n/a,42,2,3,21,3
"org.apache.log4j.joran.action.AppenderAction.end(ExecutionContext,String)",9,2,n/a,23,1,2,9,4
"org.apache.log4j.joran.action.AppenderAction.finish(ExecutionContext)",0,0,n/a,2,0,1,0,1
"org.apache.log4j.joran.action.AppenderRefAction.begin(ExecutionContext,String,Attributes)",27,2,n/a,41,1,3,25,5
"org.apache.log4j.joran.action.AppenderRefAction.end(ExecutionContext,String)",0,2,n/a,2,0,2,0,1
"org.apache.log4j.joran.action.AppenderRefAction.finish(ExecutionContext)",0,0,n/a,2,0,1,0,1
"org.apache.log4j.joran.action.ConfigurationAction.begin(ExecutionContext,String,Attributes)",12,2,n/a,19,1,3,13,4
"org.apache.log4j.joran.action.ConfigurationAction.end(ExecutionContext,String)",5,2,n/a,8,1,2,5,2
"org.apache.log4j.joran.action.ConfigurationAction.trueBoolean(String,String)",5,2,n/a,8,1,2,4,5
"org.apache.log4j.joran.action.ConversionRuleAction.begin(ExecutionContext,String,Attributes)",24,2,n/a,41,2,3,24,5
"org.apache.log4j.joran.action.ConversionRuleAction.end(ExecutionContext,String)",0,2,n/a,6,0,2,0,1
"org.apache.log4j.joran.action.ConversionRuleAction.finish(ExecutionContext)",0,0,n/a,2,0,1,0,1
"org.apache.log4j.joran.action.ImplicitAction.isApplicable(Pattern,Attributes,ExecutionContext)",n/a,2,1,n/a,n/a,3,n/a,n/a
"org.apache.log4j.joran.action.JndiSubstitutionPropertyAction.begin(ExecutionContext,String,Attributes)",25,2,n/a,36,2,3,20,9
"org.apache.log4j.joran.action.JndiSubstitutionPropertyAction.end(ExecutionContext,String)",0,2,n/a,5,0,2,0,1
"org.apache.log4j.joran.action.JndiSubstitutionPropertyAction.findNamingContext()",5,1,n/a,16,1,0,4,2
"org.apache.log4j.joran.action.JndiSubstitutionPropertyAction.getNamingContext()",0,4,n/a,8,0,0,1,1
"org.apache.log4j.joran.action.LayoutAction.begin(ExecutionContext,String,Attributes)",14,2,n/a,26,1,3,12,2
"org.apache.log4j.joran.action.LayoutAction.end(ExecutionContext,String)",13,2,n/a,27,2,2,13,4
"org.apache.log4j.joran.action.LayoutAction.finish(ExecutionContext)",0,0,n/a,2,0,1,0,1
"org.apache.log4j.joran.action.LevelAction.begin(ExecutionContext,String,Attributes)",27,3,n/a,40,3,3,23,7
"org.apache.log4j.joran.action.LevelAction.end(ExecutionContext,String)",0,2,n/a,2,0,2,0,1
"org.apache.log4j.joran.action.LevelAction.finish(ExecutionContext)",0,0,n/a,2,0,1,0,1
"org.apache.log4j.joran.action.LoggerAction.begin(ExecutionContext,String,Attributes)",40,2,n/a,57,2,3,35,6
"org.apache.log4j.joran.action.LoggerAction.end(ExecutionContext,String)",5,2,n/a,7,1,2,4,2
"org.apache.log4j.joran.action.LoggerAction.finish(ExecutionContext)",0,0,n/a,2,0,1,0,1
"org.apache.log4j.joran.action.LoggerFactoryAction.begin(ExecutionContext,String,Attributes)",7,2,n/a,14,1,3,6,2
"org.apache.log4j.joran.action.LoggerFactoryAction.end(ExecutionContext,String)",0,2,n/a,2,0,2,0,1
"org.apache.log4j.joran.action.NestComponentIA.begin(ExecutionContext,String,Attributes)",20,2,n/a,34,2,3,20,4
"org.apache.log4j.joran.action.NestComponentIA.end(ExecutionContext,String)",18,2,n/a,37,2,2,20,6
"org.apache.log4j.joran.action.NestComponentIA.finish(ExecutionContext)",0,0,n/a,2,0,1,0,1
"org.apache.log4j.joran.action.NestComponentIA.isApplicable(Pattern,Attributes,ExecutionContext)",8,2,n/a,23,1,3,15,4
"org.apache.log4j.joran.action.NewRuleAction.begin(ExecutionContext,String,Attributes)",22,2,n/a,29,1,3,19,4
"org.apache.log4j.joran.action.NewRuleAction.end(ExecutionContext,String)",0,2,n/a,6,0,2,0,1
"org.apache.log4j.joran.action.NewRuleAction.finish(ExecutionContext)",0,0,n/a,2,0,1,0,1
"org.apache.log4j.joran.action.ParamAction.begin(ExecutionContext,String,Attributes)",18,2,n/a,25,1,3,17,3
"org.apache.log4j.joran.action.ParamAction.end(ExecutionContext,String)",0,2,n/a,2,0,2,0,1
"org.apache.log4j.joran.action.ParamAction.finish(ExecutionContext)",0,0,n/a,2,0,1,0,1
"org.apache.log4j.joran.action.PluginAction.begin(ExecutionContext,String,Attributes)",22,2,n/a,39,2,3,17,3
"org.apache.log4j.joran.action.PluginAction.end(ExecutionContext,String)",9,2,n/a,20,1,2,8,3
"org.apache.log4j.joran.action.PluginAction.finish(ExecutionContext)",0,0,n/a,2,0,1,0,1
"org.apache.log4j.joran.action.PriorityAction.begin(ExecutionContext,String,Attributes)",3,3,n/a,4,0,3,2,1
"org.apache.log4j.joran.action.PropertyAction.begin(ExecutionContext,String,Attributes)",27,2,n/a,37,2,3,20,8
"org.apache.log4j.joran.action.PropertyAction.end(ExecutionContext,String)",0,2,n/a,2,0,2,0,1
"org.apache.log4j.joran.action.PropertyAction.finish(ExecutionContext)",0,0,n/a,2,0,1,0,1
"org.apache.log4j.joran.action.PropertyAction.setProperties(ExecutionContext,Properties)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.apache.log4j.joran.action.PropertyAction.setProperty(ExecutionContext,String,String)",n/a,1,2,n/a,n/a,3,n/a,n/a
"org.apache.log4j.joran.action.RepositoryPropertyAction.setProperties(ExecutionContext,Properties)",3,1,n/a,8,1,2,4,3
"org.apache.log4j.joran.action.RepositoryPropertyAction.setProperty(ExecutionContext,String,String)",2,1,n/a,6,1,3,3,2
"org.apache.log4j.joran.action.RootLoggerAction.begin(ExecutionContext,String,Attributes)",5,2,n/a,8,0,3,5,1
"org.apache.log4j.joran.action.RootLoggerAction.end(ExecutionContext,String)",8,2,n/a,15,1,2,8,3
"org.apache.log4j.joran.action.RootLoggerAction.finish(ExecutionContext)",0,0,n/a,2,0,1,0,1
"org.apache.log4j.joran.action.SubstitutionPropertyAction.setProperties(ExecutionContext,Properties)",1,1,n/a,3,0,2,1,1
"org.apache.log4j.joran.action.SubstitutionPropertyAction.setProperty(ExecutionContext,String,String)",1,1,n/a,3,0,3,1,1
"org.apache.log4j.joran.spi.ActionException.ActionException(int)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.joran.spi.ActionException.ActionException(int,Throwable)",0,2,n/a,4,0,2,2,1
"org.apache.log4j.joran.spi.ActionException.getCause()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.ActionException.getSkipCode()",0,2,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.ExecutionContext.ExecutionContext(Interpreter)",4,1,n/a,7,0,1,5,1
"org.apache.log4j.joran.spi.ExecutionContext.addError(ErrorItem)",6,33,n/a,8,1,1,5,2
"org.apache.log4j.joran.spi.ExecutionContext.addProperties(Properties)",6,1,n/a,10,1,1,6,3
"org.apache.log4j.joran.spi.ExecutionContext.addProperty(String,String)",2,3,n/a,17,1,2,4,3
"org.apache.log4j.joran.spi.ExecutionContext.getErrorList()",0,15,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.ExecutionContext.getJoranInterpreter()",0,3,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.ExecutionContext.getLocator()",1,0,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.ExecutionContext.getObject(int)",1,7,n/a,3,0,1,1,1
"org.apache.log4j.joran.spi.ExecutionContext.getObjectMap()",0,23,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.ExecutionContext.getObjectStack()",0,4,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.ExecutionContext.getSubstitutionProperty(String)",1,4,n/a,3,0,1,1,1
"org.apache.log4j.joran.spi.ExecutionContext.peekObject()",1,10,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.ExecutionContext.popObject()",1,6,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.ExecutionContext.pushObject(Object)",1,13,n/a,3,0,1,1,1
"org.apache.log4j.joran.spi.ExecutionContext.subst(String)",1,3,n/a,6,1,1,3,2
"org.apache.log4j.joran.spi.Interpreter.Interpreter(RuleStore)",4,11,n/a,7,0,1,5,1
"org.apache.log4j.joran.spi.Interpreter.addImplicitAction(ImplicitAction)",1,3,n/a,3,0,1,1,1
"org.apache.log4j.joran.spi.Interpreter.callBeginAction(List,String,Attributes)",17,1,n/a,36,3,3,22,8
"org.apache.log4j.joran.spi.Interpreter.callEndAction(List,String)",15,1,n/a,31,3,2,19,7
"org.apache.log4j.joran.spi.Interpreter.endElement(String,String,String)",9,3,n/a,16,2,3,9,4
"org.apache.log4j.joran.spi.Interpreter.endPrefixMapping(String)",0,0,n/a,2,0,1,0,1
"org.apache.log4j.joran.spi.Interpreter.error(SAXParseException)",6,0,n/a,6,0,1,2,1
"org.apache.log4j.joran.spi.Interpreter.fatalError(SAXParseException)",6,0,n/a,6,0,1,2,1
"org.apache.log4j.joran.spi.Interpreter.getApplicableActionList(Pattern,Attributes)",2,1,n/a,11,1,2,4,2
"org.apache.log4j.joran.spi.Interpreter.getEntityResolver()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.Interpreter.getExecutionContext()",0,14,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.Interpreter.getLocator()",0,4,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.Interpreter.getLogger()",6,11,n/a,7,1,0,3,2
"org.apache.log4j.joran.spi.Interpreter.getRuleStore()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.Interpreter.getTagName(String,String)",1,2,n/a,7,1,2,4,3
"org.apache.log4j.joran.spi.Interpreter.ignorableWhitespace(char[],int,int)",0,0,n/a,2,0,3,0,1
"org.apache.log4j.joran.spi.Interpreter.lookupImplicitAction(Pattern,Attributes,ExecutionContext)",5,1,n/a,17,2,3,10,3
"org.apache.log4j.joran.spi.Interpreter.processingInstruction(String,String)",0,0,n/a,3,0,2,0,1
"org.apache.log4j.joran.spi.Interpreter.resolveEntity(String,String)",1,2,n/a,29,2,2,5,3
"org.apache.log4j.joran.spi.Interpreter.setDocumentLocator(Locator)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.joran.spi.Interpreter.setEntityResolver(EntityResolver)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.joran.spi.Interpreter.setLoggerRepository(LoggerRepository)",0,4,n/a,3,0,1,1,1
"org.apache.log4j.joran.spi.Interpreter.setRuleStore(RuleStore)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.joran.spi.Interpreter.skippedEntity(String)",0,0,n/a,2,0,1,0,1
"org.apache.log4j.joran.spi.Interpreter.startDocument()",0,1,n/a,2,0,0,0,1
"org.apache.log4j.joran.spi.Interpreter.startElement(String,String,String,Attributes)",10,2,n/a,18,1,4,10,2
"org.apache.log4j.joran.spi.Interpreter.startPrefixMapping(String,String)",0,0,n/a,3,0,2,0,1
"org.apache.log4j.joran.spi.Interpreter.warning(SAXParseException)",6,0,n/a,6,0,1,2,1
"org.apache.log4j.joran.spi.JoranDocument.ElementEvent.ElementEvent(String,Locator)",1,2,n/a,6,1,2,3,2
"org.apache.log4j.joran.spi.JoranDocument.ElementEvent.getLocalName()",0,4,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.JoranDocument.ElementEvent.replay(ContentHandler,LocatorImpl)",8,3,n/a,10,1,2,5,2
"org.apache.log4j.joran.spi.JoranDocument.EndElementEvent.EndElementEvent(String,Locator)",1,1,n/a,3,0,2,1,1
"org.apache.log4j.joran.spi.JoranDocument.EndElementEvent.replay(ContentHandler,LocatorImpl)",4,3,n/a,7,0,2,2,1
"org.apache.log4j.joran.spi.JoranDocument.JoranDocument(List,LoggerRepository)",0,1,n/a,4,0,2,2,1
"org.apache.log4j.joran.spi.JoranDocument.StartElementEvent.StartElementEvent(String,Locator,Attributes)",2,1,n/a,6,0,3,2,1
"org.apache.log4j.joran.spi.JoranDocument.StartElementEvent.replay(ContentHandler,LocatorImpl)",4,3,n/a,7,0,2,2,1
"org.apache.log4j.joran.spi.JoranDocument.endElement(String,String,String)",5,2,n/a,8,1,3,2,5
"org.apache.log4j.joran.spi.JoranDocument.error(SAXParseException)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.joran.spi.JoranDocument.errorReport(SAXParseException)",6,3,n/a,7,0,1,5,1
"org.apache.log4j.joran.spi.JoranDocument.fatalError(SAXParseException)",1,0,n/a,6,1,1,3,2
"org.apache.log4j.joran.spi.JoranDocument.getLogger()",6,3,n/a,7,1,0,3,2
"org.apache.log4j.joran.spi.JoranDocument.replay(ContentHandler)",6,1,n/a,11,1,1,8,3
"org.apache.log4j.joran.spi.JoranDocument.resolveEntity(String,String)",10,2,n/a,39,2,2,12,6
"org.apache.log4j.joran.spi.JoranDocument.setDocumentLocator(Locator)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.joran.spi.JoranDocument.startElement(String,String,String,Attributes)",5,2,n/a,9,1,4,2,5
"org.apache.log4j.joran.spi.JoranDocument.warning(SAXParseException)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.joran.spi.Pattern.Pattern()",1,2,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.Pattern.Pattern(String)",7,87,n/a,29,3,1,13,5
"org.apache.log4j.joran.spi.Pattern.clone()",3,6,n/a,10,1,0,6,2
"org.apache.log4j.joran.spi.Pattern.equals(Object)",6,9,n/a,20,2,1,12,6
"org.apache.log4j.joran.spi.Pattern.get(int)",1,16,n/a,3,0,1,1,1
"org.apache.log4j.joran.spi.Pattern.hashCode()",3,5,n/a,9,1,0,7,2
"org.apache.log4j.joran.spi.Pattern.peekLast()",3,3,n/a,8,1,0,4,2
"org.apache.log4j.joran.spi.Pattern.pop()",3,4,n/a,5,1,0,2,2
"org.apache.log4j.joran.spi.Pattern.push(String)",1,1,n/a,3,0,1,1,1
"org.apache.log4j.joran.spi.Pattern.size()",1,11,n/a,3,0,0,1,1
"org.apache.log4j.joran.spi.Pattern.tailMatch(Pattern)",5,1,n/a,29,2,1,17,7
"org.apache.log4j.joran.spi.Pattern.toString()",2,62,n/a,8,1,0,7,2
"org.apache.log4j.joran.spi.RuleStore.addRule(Pattern,Action)",n/a,66,1,n/a,n/a,2,n/a,n/a
"org.apache.log4j.joran.spi.RuleStore.addRule(Pattern,String)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.apache.log4j.joran.spi.RuleStore.matchActions(Pattern)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.joran.spi.SimpleRuleStore.SimpleRuleStore()",0,15,n/a,2,0,0,0,1
"org.apache.log4j.joran.spi.SimpleRuleStore.SimpleRuleStore(LoggerRepository)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.joran.spi.SimpleRuleStore.addRule(Pattern,Action)",5,76,n/a,15,1,2,6,2
"org.apache.log4j.joran.spi.SimpleRuleStore.addRule(Pattern,String)",2,1,n/a,8,1,2,3,2
"org.apache.log4j.joran.spi.SimpleRuleStore.matchActions(Pattern)",10,6,n/a,29,4,1,16,7
"org.apache.log4j.lbel.EventEvaluator.evaluate(LoggingEvent)",n/a,39,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.lbel.LBELEventEvaluator.LBELEventEvaluator(String)",5,53,n/a,10,1,1,6,2
"org.apache.log4j.lbel.LBELEventEvaluator.dumpSyntaxTree(String)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.lbel.LBELEventEvaluator.evaluate(LoggingEvent)",1,53,n/a,3,0,1,1,1
"org.apache.log4j.lbel.LBELEventEvaluator.evaluate(Node,LoggingEvent)",13,6,n/a,29,2,2,22,9
"org.apache.log4j.lbel.Node.Node(int)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.lbel.Node.Node(int,Object)",0,13,n/a,4,0,2,2,1
"org.apache.log4j.lbel.Node.getLeft()",0,5,n/a,3,0,0,1,1
"org.apache.log4j.lbel.Node.getRight()",0,4,n/a,3,0,0,1,1
"org.apache.log4j.lbel.Node.getType()",0,2,n/a,3,0,0,1,1
"org.apache.log4j.lbel.Node.getValue()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.lbel.Node.leftFirstDump(String)",7,7,n/a,19,1,1,10,3
"org.apache.log4j.lbel.Node.setLeft(Node)",1,5,n/a,6,1,1,3,2
"org.apache.log4j.lbel.Node.setRight(Node)",1,4,n/a,6,1,1,3,2
"org.apache.log4j.lbel.Node.toString()",0,62,n/a,3,0,0,1,1
"org.apache.log4j.lbel.Operator.Operator(int)",1,9,n/a,17,1,1,14,3
"org.apache.log4j.lbel.Operator.getCode()",0,8,n/a,3,0,0,1,1
"org.apache.log4j.lbel.Operator.isRegex()",0,2,n/a,3,0,0,1,2
"org.apache.log4j.lbel.Operator.toString()",0,62,n/a,14,1,0,20,10
"org.apache.log4j.lbel.Parser.Parser(TokenStream)",0,7,n/a,3,0,1,1,1
"org.apache.log4j.lbel.Parser.bexp()",3,2,n/a,12,1,0,8,2
"org.apache.log4j.lbel.Parser.bexpTail()",9,2,n/a,19,2,0,14,4
"org.apache.log4j.lbel.Parser.bfactor()",7,2,n/a,13,1,0,10,3
"org.apache.log4j.lbel.Parser.bsubfactor()",57,2,n/a,67,2,0,63,13
"org.apache.log4j.lbel.Parser.bterm()",3,2,n/a,12,1,0,8,2
"org.apache.log4j.lbel.Parser.btermTail()",9,2,n/a,19,2,0,14,4
"org.apache.log4j.lbel.Parser.getLevelInt()",6,1,n/a,14,1,0,10,5
"org.apache.log4j.lbel.Parser.getLiteral()",5,6,n/a,10,1,0,6,3
"org.apache.log4j.lbel.Parser.getLong()",5,1,n/a,9,1,0,5,2
"org.apache.log4j.lbel.Parser.getOperator()",23,7,n/a,29,2,0,23,11
"org.apache.log4j.lbel.Parser.getPropertyKey()",8,1,n/a,14,2,0,8,3
"org.apache.log4j.lbel.Parser.parse()",2,7,n/a,4,0,0,2,1
"org.apache.log4j.lbel.ScanError.ScanError(String)",1,9,n/a,3,0,1,1,1
"org.apache.log4j.lbel.ScanError.ScanError(String,Throwable)",1,2,n/a,4,0,2,2,1
"org.apache.log4j.lbel.ScanError.getCause()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.lbel.Token.Token(int)",1,8,n/a,3,0,1,1,1
"org.apache.log4j.lbel.Token.Token(int,Object)",0,23,n/a,4,0,2,2,1
"org.apache.log4j.lbel.Token.getType()",0,56,n/a,3,0,0,1,1
"org.apache.log4j.lbel.Token.getValue()",0,28,n/a,3,0,0,1,1
"org.apache.log4j.lbel.Token.toString()",0,62,n/a,25,1,0,59,20
"org.apache.log4j.lbel.TokenStream.TokenStream(Reader)",11,18,n/a,17,0,1,12,1
"org.apache.log4j.lbel.TokenStream.getCurrent()",0,56,n/a,3,0,0,1,1
"org.apache.log4j.lbel.TokenStream.next()",26,69,n/a,74,3,0,62,20
"org.apache.log4j.lbel.TokenStream.scanLiteral(int)",5,1,n/a,21,4,1,14,6
"org.apache.log4j.lbel.comparator.ClassComparator.ClassComparator(Operator,String)",1,1,n/a,4,0,2,1,1
"org.apache.log4j.lbel.comparator.ClassComparator.getLeftSide(LoggingEvent)",2,1,n/a,4,0,1,2,1
"org.apache.log4j.lbel.comparator.Comparator.compare(LoggingEvent)",n/a,1,3,n/a,n/a,1,n/a,n/a
"org.apache.log4j.lbel.comparator.LevelComparator.LevelComparator(Operator,int)",0,1,n/a,10,0,2,2,1
"org.apache.log4j.lbel.comparator.LevelComparator.compare(LoggingEvent)",4,1,n/a,16,1,1,15,7
"org.apache.log4j.lbel.comparator.LoggerComparator.LoggerComparator(Operator,String)",1,1,n/a,4,0,2,1,1
"org.apache.log4j.lbel.comparator.LoggerComparator.getLeftSide(LoggingEvent)",1,1,n/a,3,0,1,1,1
"org.apache.log4j.lbel.comparator.MessageComparator.MessageComparator(Operator,String)",1,1,n/a,4,0,2,1,1
"org.apache.log4j.lbel.comparator.MessageComparator.getLeftSide(LoggingEvent)",1,1,n/a,3,0,1,1,1
"org.apache.log4j.lbel.comparator.MethodComparator.MethodComparator(Operator,String)",1,1,n/a,4,0,2,1,1
"org.apache.log4j.lbel.comparator.MethodComparator.getLeftSide(LoggingEvent)",2,1,n/a,4,0,1,2,1
"org.apache.log4j.lbel.comparator.PropertyComparator.PropertyComparator(Operator,String,String)",1,1,n/a,5,0,3,2,1
"org.apache.log4j.lbel.comparator.PropertyComparator.getLeftSide(LoggingEvent)",1,1,n/a,3,0,1,1,1
"org.apache.log4j.lbel.comparator.PropertyComparator.toString()",0,62,n/a,3,0,0,1,1
"org.apache.log4j.lbel.comparator.StringComparator.StringComparator(Operator,String)",7,5,n/a,18,2,2,10,5
"org.apache.log4j.lbel.comparator.StringComparator.compare(LoggingEvent)",14,1,n/a,57,2,1,41,19
"org.apache.log4j.lbel.comparator.StringComparator.getLeftSide(LoggingEvent)",n/a,1,5,n/a,n/a,1,n/a,n/a
"org.apache.log4j.lbel.comparator.StringComparator.toString()",4,62,n/a,5,0,0,3,1
"org.apache.log4j.lbel.comparator.TimestampComparator.TimestampComparator(Operator,long)",0,1,n/a,4,0,2,2,1
"org.apache.log4j.lbel.comparator.TimestampComparator.compare(LoggingEvent)",3,1,n/a,12,1,1,15,7
"org.apache.log4j.multiplex.AppenderFactory.create(LoggingEvent)",n/a,2,2,n/a,n/a,1,n/a,n/a
"org.apache.log4j.multiplex.AppenderFactoryUtils.AppenderFactoryUtils()",0,0,n/a,2,0,0,0,1
"org.apache.log4j.multiplex.AppenderFactoryUtils.createMDCAndDailyRollingAppenderFactory(String,String,Layout)",8,1,n/a,13,2,3,11,1
"org.apache.log4j.multiplex.AppenderFactoryUtils.createSimpleMDCbasedFileAppender(String,String,PatternLayout)",6,1,n/a,2,3,3,8,2
"org.apache.log4j.multiplex.MDCKeySelector.MDCKeySelector(String)",1,1,n/a,7,0,1,2,1
"org.apache.log4j.multiplex.MDCKeySelector.activateOptions()",0,14,n/a,6,0,0,0,1
"org.apache.log4j.multiplex.MDCKeySelector.getMDCKey()",0,1,n/a,6,0,0,1,1
"org.apache.log4j.multiplex.MDCKeySelector.select(LoggingEvent)",3,1,n/a,8,0,1,1,1
"org.apache.log4j.multiplex.MDCKeySelector.setMDCKey(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.multiplex.MultiplexAppender.MultiplexAppender()",1,2,n/a,3,0,0,1,1
"org.apache.log4j.multiplex.MultiplexAppender.activateOptions()",2,39,n/a,13,1,0,2,2
"org.apache.log4j.multiplex.MultiplexAppender.append(LoggingEvent)",3,2,n/a,11,0,1,2,1
"org.apache.log4j.multiplex.MultiplexAppender.close()",2,7,n/a,8,0,0,1,1
"org.apache.log4j.multiplex.MultiplexAppender.getSelector()",0,3,n/a,6,0,0,1,1
"org.apache.log4j.multiplex.MultiplexAppender.requiresLayout()",0,0,n/a,9,0,0,1,1
"org.apache.log4j.multiplex.MultiplexAppender.setSelector(MultiplexSelector)",0,1,n/a,7,0,1,1,1
"org.apache.log4j.multiplex.MultiplexSelector.close()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.multiplex.MultiplexSelector.select(LoggingEvent)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.multiplex.MultiplexSelector.setAppenderFactory(AppenderFactory)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.multiplex.MultiplexSelectorSkeleton.close()",5,1,n/a,8,1,0,4,2
"org.apache.log4j.multiplex.MultiplexSelectorSkeleton.getAppenderFactory()",0,1,n/a,6,0,0,1,1
"org.apache.log4j.multiplex.MultiplexSelectorSkeleton.lookupOrCreateAsNeeded(Object,LoggingEvent)",4,1,n/a,8,1,2,5,2
"org.apache.log4j.multiplex.MultiplexSelectorSkeleton.setAppenderFactory(AppenderFactory)",0,1,n/a,7,0,1,1,1
"org.apache.log4j.net.AddressBased.getAddress()",n/a,0,2,n/a,n/a,0,n/a,n/a
"org.apache.log4j.net.DefaultEvaluator.DefaultEvaluator()",0,1,n/a,1,0,0,0,1
"org.apache.log4j.net.DefaultEvaluator.activateOptions()",3,0,n/a,9,2,0,4,3
"org.apache.log4j.net.DefaultEvaluator.isTriggeringEvent(LoggingEvent)",3,2,n/a,11,1,1,3,2
"org.apache.log4j.net.DefaultEvaluator.setExpression(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.JMSAppender.JMSAppender()",1,0,n/a,3,0,0,1,1
"org.apache.log4j.net.JMSAppender.activateOptions()",37,38,n/a,70,4,0,40,12
"org.apache.log4j.net.JMSAppender.append(LoggingEvent)",7,2,n/a,24,2,1,13,5
"org.apache.log4j.net.JMSAppender.checkEntryConditions()",0,1,n/a,7,0,0,1,1
"org.apache.log4j.net.JMSAppender.close()",6,7,n/a,25,2,0,13,5
"org.apache.log4j.net.JMSAppender.getInitialContextFactoryName()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.net.JMSAppender.getLocationInfo()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.net.JMSAppender.getPassword()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.JMSAppender.getProviderURL()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.JMSAppender.getSecurityCredentials()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.JMSAppender.getSecurityPrincipalName()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.JMSAppender.getTopicBindingName()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.JMSAppender.getTopicConnection()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.net.JMSAppender.getTopicConnectionFactoryBindingName()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.JMSAppender.getTopicPublisher()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.net.JMSAppender.getTopicSession()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.net.JMSAppender.getURLPkgPrefixes()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.JMSAppender.getUserName()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.JMSAppender.lookup(Context,String)",3,2,n/a,8,1,2,4,2
"org.apache.log4j.net.JMSAppender.requiresLayout()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.net.JMSAppender.setInitialContextFactoryName(String)",0,1,n/a,12,0,1,1,1
"org.apache.log4j.net.JMSAppender.setLocationInfo(boolean)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.net.JMSAppender.setPassword(String)",0,1,n/a,6,0,1,1,1
"org.apache.log4j.net.JMSAppender.setProviderURL(String)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.net.JMSAppender.setSecurityCredentials(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.JMSAppender.setSecurityPrincipalName(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.JMSAppender.setTopicBindingName(String)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.net.JMSAppender.setTopicConnectionFactoryBindingName(String)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.net.JMSAppender.setURLPkgPrefixes(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.JMSAppender.setUserName(String)",0,0,n/a,10,0,1,1,1
"org.apache.log4j.net.JMSReceiver.JMSReceiver()",0,0,n/a,1,0,0,0,1
"org.apache.log4j.net.JMSReceiver.JMSReceiver(String,String,String,String,String)",0,0,n/a,8,0,5,5,1
"org.apache.log4j.net.JMSReceiver.activateOptions()",23,13,n/a,49,4,0,29,9
"org.apache.log4j.net.JMSReceiver.getJndiPath()",0,1,n/a,7,0,0,1,1
"org.apache.log4j.net.JMSReceiver.getPassword()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.JMSReceiver.getTopicFactoryName()",0,1,n/a,5,0,0,1,1
"org.apache.log4j.net.JMSReceiver.getTopicName()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.JMSReceiver.getUserId()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.JMSReceiver.isActive()",0,4,n/a,5,0,0,1,1
"org.apache.log4j.net.JMSReceiver.isEquivalent(Plugin)",5,5,n/a,22,1,1,4,5
"org.apache.log4j.net.JMSReceiver.lookup(Context,String)",3,1,n/a,8,1,2,4,2
"org.apache.log4j.net.JMSReceiver.onMessage(Message)",9,0,n/a,18,2,1,9,3
"org.apache.log4j.net.JMSReceiver.setActive(boolean)",0,3,n/a,5,0,1,1,1
"org.apache.log4j.net.JMSReceiver.setJndiPath(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.JMSReceiver.setPassword(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.JMSReceiver.setTopicFactoryName(String)",0,0,n/a,6,0,1,1,1
"org.apache.log4j.net.JMSReceiver.setTopicName(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.JMSReceiver.setUserId(String)",0,0,n/a,6,0,1,1,1
"org.apache.log4j.net.JMSReceiver.shutdown()",3,3,n/a,16,3,0,6,4
"org.apache.log4j.net.JMSReceiverBeanInfo.getPropertyDescriptors()",6,5,n/a,18,1,0,3,2
"org.apache.log4j.net.JMSSink.JMSSink(String,String,String,String)",9,1,n/a,20,1,4,11,2
"org.apache.log4j.net.JMSSink.lookup(Context,String)",2,1,n/a,8,1,2,4,2
"org.apache.log4j.net.JMSSink.main(String[])",13,0,n/a,29,2,1,20,6
"org.apache.log4j.net.JMSSink.onMessage(Message)",7,0,n/a,18,2,1,10,3
"org.apache.log4j.net.JMSSink.usage(String)",4,1,n/a,6,0,1,3,1
"org.apache.log4j.net.MulticastAppender.MulticastAppender()",1,0,n/a,3,0,0,1,1
"org.apache.log4j.net.MulticastAppender.activateOptions()",13,38,n/a,31,2,0,16,6
"org.apache.log4j.net.MulticastAppender.append(LoggingEvent)",15,2,n/a,34,3,1,19,8
"org.apache.log4j.net.MulticastAppender.cleanUp()",3,3,n/a,14,2,0,5,3
"org.apache.log4j.net.MulticastAppender.close()",1,7,n/a,12,1,0,4,2
"org.apache.log4j.net.MulticastAppender.connect()",5,1,n/a,13,1,0,7,3
"org.apache.log4j.net.MulticastAppender.getAddressByName(String)",3,1,n/a,8,1,1,4,2
"org.apache.log4j.net.MulticastAppender.getApplication()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.MulticastAppender.getEncoding()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.MulticastAppender.getOverrideProperties()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.MulticastAppender.getPort()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.MulticastAppender.getRemoteHost()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.MulticastAppender.getTimeToLive()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.MulticastAppender.isActive()",0,8,n/a,7,0,0,1,1
"org.apache.log4j.net.MulticastAppender.requiresLayout()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.net.MulticastAppender.setApplication(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.MulticastAppender.setEncoding(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.MulticastAppender.setOverrideProperties(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.MulticastAppender.setPort(int)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.MulticastAppender.setRemoteHost(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.MulticastAppender.setTimeToLive(int)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.MulticastReceiver.MulticastHandlerThread.MulticastHandlerThread()",1,1,n/a,3,0,0,1,1
"org.apache.log4j.net.MulticastReceiver.MulticastHandlerThread.append(String)",2,2,n/a,6,1,1,3,1
"org.apache.log4j.net.MulticastReceiver.MulticastHandlerThread.run()",20,0,n/a,40,6,0,23,11
"org.apache.log4j.net.MulticastReceiver.MulticastReceiverThread.MulticastReceiverThread()",1,1,n/a,3,0,0,1,1
"org.apache.log4j.net.MulticastReceiver.MulticastReceiverThread.run()",14,0,n/a,24,3,0,11,5
"org.apache.log4j.net.MulticastReceiver.activateOptions()",17,13,n/a,32,2,0,21,7
"org.apache.log4j.net.MulticastReceiver.getAddress()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.MulticastReceiver.getDecoder()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.MulticastReceiver.getEncoding()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.MulticastReceiver.getPort()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.MulticastReceiver.isActive()",0,2,n/a,5,0,0,1,1
"org.apache.log4j.net.MulticastReceiver.isPaused()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.net.MulticastReceiver.setAddress(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.MulticastReceiver.setDecoder(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.MulticastReceiver.setEncoding(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.MulticastReceiver.setPaused(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.MulticastReceiver.setPort(int)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.MulticastReceiver.shutdown()",3,3,n/a,6,0,0,4,1
"org.apache.log4j.net.MulticastReceiverBeanInfo.getPropertyDescriptors()",5,5,n/a,16,1,0,3,2
"org.apache.log4j.net.NetworkBased.getName()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.log4j.net.NetworkBased.isActive()",n/a,0,7,n/a,n/a,0,n/a,n/a
"org.apache.log4j.net.PortBased.getPort()",n/a,0,8,n/a,n/a,0,n/a,n/a
"org.apache.log4j.net.SMTPAppender.SMTPAppender()",2,1,n/a,7,0,0,1,1
"org.apache.log4j.net.SMTPAppender.SMTPAppender(TriggeringEventEvaluator)",1,1,n/a,7,0,1,2,1
"org.apache.log4j.net.SMTPAppender.activateOptions()",20,41,n/a,43,2,0,28,9
"org.apache.log4j.net.SMTPAppender.addressMessage(Message)",12,1,n/a,23,1,1,9,8
"org.apache.log4j.net.SMTPAppender.append(LoggingEvent)",6,2,n/a,17,1,1,8,4
"org.apache.log4j.net.SMTPAppender.checkEntryConditions()",0,1,n/a,17,1,0,7,4
"org.apache.log4j.net.SMTPAppender.close()",0,8,n/a,3,0,0,1,1
"org.apache.log4j.net.SMTPAppender.computeSubject(LoggingEvent)",1,1,n/a,6,1,1,3,2
"org.apache.log4j.net.SMTPAppender.createSession()",11,1,n/a,3,3,0,17,7
"org.apache.log4j.net.SMTPAppender.getAddress(String)",3,1,n/a,9,1,1,4,2
"org.apache.log4j.net.SMTPAppender.getBcc()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.net.SMTPAppender.getBufferSize()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.SMTPAppender.getCc()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.net.SMTPAppender.getCharset()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.net.SMTPAppender.getEvaluatorClass()",2,0,n/a,6,0,0,1,2
"org.apache.log4j.net.SMTPAppender.getFrom()",0,1,n/a,6,0,0,1,1
"org.apache.log4j.net.SMTPAppender.getLocationInfo()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.SMTPAppender.getSMTPDebug()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.net.SMTPAppender.getSMTPHost()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.SMTPAppender.getSMTPPassword()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.net.SMTPAppender.getSMTPPort()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.SMTPAppender.getSMTPUsername()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.net.SMTPAppender.getSessionJNDI()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.net.SMTPAppender.getSubject()",0,1,n/a,6,0,0,1,1
"org.apache.log4j.net.SMTPAppender.getTo()",0,1,n/a,6,0,0,1,1
"org.apache.log4j.net.SMTPAppender.lookupSession()",3,1,n/a,8,1,0,4,1
"org.apache.log4j.net.SMTPAppender.parseAddress(String)",3,3,n/a,9,1,1,4,2
"org.apache.log4j.net.SMTPAppender.requiresLayout()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.SMTPAppender.sendBuffer(LoggingEvent)",27,1,n/a,46,5,1,33,9
"org.apache.log4j.net.SMTPAppender.setBcc(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.SMTPAppender.setBufferSize(int)",1,0,n/a,11,0,1,2,1
"org.apache.log4j.net.SMTPAppender.setCc(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.SMTPAppender.setCharset(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.SMTPAppender.setEvaluator(TriggeringEventEvaluator)",0,1,n/a,6,0,1,1,1
"org.apache.log4j.net.SMTPAppender.setEvaluatorClass(String)",5,0,n/a,15,0,1,3,1
"org.apache.log4j.net.SMTPAppender.setFrom(String)",0,1,n/a,7,0,1,1,1
"org.apache.log4j.net.SMTPAppender.setLocationInfo(boolean)",0,0,n/a,13,0,1,1,1
"org.apache.log4j.net.SMTPAppender.setSMTPDebug(boolean)",0,0,n/a,9,0,1,1,1
"org.apache.log4j.net.SMTPAppender.setSMTPHost(String)",0,1,n/a,7,0,1,1,1
"org.apache.log4j.net.SMTPAppender.setSMTPPassword(String)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.net.SMTPAppender.setSMTPPort(int)",0,1,n/a,6,0,1,1,1
"org.apache.log4j.net.SMTPAppender.setSMTPUsername(String)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.net.SMTPAppender.setSessionJNDI(String)",0,3,n/a,6,0,1,1,1
"org.apache.log4j.net.SMTPAppender.setSubject(String)",0,1,n/a,15,0,1,1,1
"org.apache.log4j.net.SMTPAppender.setTo(String)",0,1,n/a,7,0,1,1,1
"org.apache.log4j.net.SimpleSocketServer.init(String,String)",8,1,n/a,14,1,2,8,3
"org.apache.log4j.net.SimpleSocketServer.main(String[])",14,0,n/a,21,2,1,13,4
"org.apache.log4j.net.SimpleSocketServer.usage(String)",4,2,n/a,6,0,1,3,1
"org.apache.log4j.net.SocketAppender.Connector.run()",17,0,n/a,26,3,0,15,5
"org.apache.log4j.net.SocketAppender.SocketAppender()",1,0,n/a,3,0,0,1,1
"org.apache.log4j.net.SocketAppender.SocketAppender(InetAddress,int)",3,0,n/a,10,0,2,5,1
"org.apache.log4j.net.SocketAppender.SocketAppender(String,int)",3,10,n/a,10,0,2,5,1
"org.apache.log4j.net.SocketAppender.activateOptions()",10,40,n/a,24,2,0,12,4
"org.apache.log4j.net.SocketAppender.append(LoggingEvent)",9,2,n/a,33,3,1,19,9
"org.apache.log4j.net.SocketAppender.cleanUp()",3,3,n/a,19,2,0,8,4
"org.apache.log4j.net.SocketAppender.close()",1,10,n/a,13,1,0,4,2
"org.apache.log4j.net.SocketAppender.connect(InetAddress,int)",9,1,n/a,23,2,2,10,4
"org.apache.log4j.net.SocketAppender.fireConnector()",6,2,n/a,9,1,0,6,2
"org.apache.log4j.net.SocketAppender.getAddressByName(String)",3,2,n/a,8,1,1,4,2
"org.apache.log4j.net.SocketAppender.getApplication()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.SocketAppender.getLocationInfo()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.SocketAppender.getPort()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.SocketAppender.getReconnectionDelay()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.SocketAppender.getRemoteHost()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.SocketAppender.requiresLayout()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.net.SocketAppender.setApplication(String)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.net.SocketAppender.setLocationInfo(boolean)",0,6,n/a,8,0,1,1,1
"org.apache.log4j.net.SocketAppender.setPort(int)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.SocketAppender.setReconnectionDelay(int)",0,0,n/a,11,0,1,1,1
"org.apache.log4j.net.SocketAppender.setRemoteHost(String)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.net.SocketHubAppender.ServerMonitor.ServerMonitor(int,Vector)",3,1,n/a,10,0,2,6,1
"org.apache.log4j.net.SocketHubAppender.ServerMonitor.run()",25,0,n/a,64,5,0,30,12
"org.apache.log4j.net.SocketHubAppender.ServerMonitor.sendCachedEvents(ObjectOutputStream)",5,1,n/a,9,2,1,7,3
"org.apache.log4j.net.SocketHubAppender.ServerMonitor.stopMonitor()",5,1,n/a,17,2,0,7,3
"org.apache.log4j.net.SocketHubAppender.SocketHubAppender()",1,0,n/a,3,0,0,1,1
"org.apache.log4j.net.SocketHubAppender.SocketHubAppender(int)",2,0,n/a,7,0,1,3,1
"org.apache.log4j.net.SocketHubAppender.activateOptions()",2,39,n/a,6,0,0,2,1
"org.apache.log4j.net.SocketHubAppender.append(LoggingEvent)",11,2,n/a,46,2,1,22,10
"org.apache.log4j.net.SocketHubAppender.cleanUp()",11,2,n/a,24,3,0,12,5
"org.apache.log4j.net.SocketHubAppender.close()",7,8,n/a,13,1,0,6,2
"org.apache.log4j.net.SocketHubAppender.getBufferSize()",1,0,n/a,9,1,0,3,2
"org.apache.log4j.net.SocketHubAppender.getLocationInfo()",0,0,n/a,5,0,0,1,1
"org.apache.log4j.net.SocketHubAppender.getPort()",0,0,n/a,5,0,0,1,1
"org.apache.log4j.net.SocketHubAppender.requiresLayout()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.SocketHubAppender.setBufferSize(int)",1,0,n/a,6,0,1,1,1
"org.apache.log4j.net.SocketHubAppender.setLocationInfo(boolean)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.SocketHubAppender.setPort(int)",0,0,n/a,6,0,1,1,1
"org.apache.log4j.net.SocketHubAppender.startServer()",1,1,n/a,5,0,0,1,1
"org.apache.log4j.net.SocketHubReceiver.Connector.Connector(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.net.SocketHubReceiver.Connector.run()",15,0,n/a,24,3,0,15,6
"org.apache.log4j.net.SocketHubReceiver.SocketHubReceiver()",0,0,n/a,1,0,0,0,1
"org.apache.log4j.net.SocketHubReceiver.SocketHubReceiver(String,int)",0,0,n/a,4,0,2,2,1
"org.apache.log4j.net.SocketHubReceiver.SocketHubReceiver(String,int,LoggerRepository)",0,0,n/a,5,0,3,3,1
"org.apache.log4j.net.SocketHubReceiver.activateOptions()",3,13,n/a,8,1,0,3,2
"org.apache.log4j.net.SocketHubReceiver.addSocketNodeEventListener(SocketNodeEventListener)",1,0,n/a,8,0,1,1,1
"org.apache.log4j.net.SocketHubReceiver.fireConnector(boolean)",6,2,n/a,9,1,1,6,3
"org.apache.log4j.net.SocketHubReceiver.getHost()",0,1,n/a,5,0,0,1,1
"org.apache.log4j.net.SocketHubReceiver.getPort()",0,1,n/a,5,0,0,1,1
"org.apache.log4j.net.SocketHubReceiver.getReconnectionDelay()",0,1,n/a,6,0,0,1,1
"org.apache.log4j.net.SocketHubReceiver.isActive()",0,3,n/a,5,0,0,1,1
"org.apache.log4j.net.SocketHubReceiver.isEquivalent(Plugin)",5,5,n/a,19,1,1,4,6
"org.apache.log4j.net.SocketHubReceiver.removeSocketNodeEventListener(SocketNodeEventListener)",1,0,n/a,8,0,1,1,1
"org.apache.log4j.net.SocketHubReceiver.setActive(boolean)",0,1,n/a,5,0,1,1,1
"org.apache.log4j.net.SocketHubReceiver.setHost(String)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.net.SocketHubReceiver.setPort(String)",0,0,n/a,5,0,1,1,1
"org.apache.log4j.net.SocketHubReceiver.setPort(int)",0,0,n/a,5,0,1,1,1
"org.apache.log4j.net.SocketHubReceiver.setReconnectionDelay(int)",1,0,n/a,13,0,1,3,1
"org.apache.log4j.net.SocketHubReceiver.setSocket(Socket)",8,1,n/a,13,2,1,10,2
"org.apache.log4j.net.SocketHubReceiver.shutdown()",1,3,n/a,19,1,0,8,4
"org.apache.log4j.net.SocketHubReceiver.socketClosedEvent(Exception)",1,2,n/a,9,0,1,2,1
"org.apache.log4j.net.SocketHubReceiver.socketOpened(String)",0,1,n/a,3,0,1,0,1
"org.apache.log4j.net.SocketHubReceiverBeanInfo.getPropertyDescriptors()",5,5,n/a,17,1,0,3,2
"org.apache.log4j.net.SocketNode.SocketNode(Socket,LoggerRepository)",0,3,n/a,6,0,2,2,1
"org.apache.log4j.net.SocketNode.SocketNode(Socket,Receiver)",0,2,n/a,6,0,2,2,1
"org.apache.log4j.net.SocketNode.addSocketNodeEventListener(SocketNodeEventListener)",1,4,n/a,8,0,1,1,1
"org.apache.log4j.net.SocketNode.fireSocketClosedEvent(Exception)",4,1,n/a,14,3,1,6,3
"org.apache.log4j.net.SocketNode.fireSocketOpened(String)",4,1,n/a,14,3,1,6,3
"org.apache.log4j.net.SocketNode.isPaused()",0,2,n/a,3,0,0,1,1
"org.apache.log4j.net.SocketNode.removeSocketNodeEventListener(SocketNodeEventListener)",1,1,n/a,10,0,1,1,1
"org.apache.log4j.net.SocketNode.run()",32,0,n/a,78,6,0,36,14
"org.apache.log4j.net.SocketNode.setListener(SocketNodeEventListener)",2,0,n/a,11,0,1,2,1
"org.apache.log4j.net.SocketNode.setPaused(boolean)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.net.SocketNodeEventListener.socketClosedEvent(Exception)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.net.SocketNodeEventListener.socketOpened(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.net.SocketReceiver.SocketDetail.SocketDetail(Socket,SocketNode)",3,1,n/a,5,0,2,3,1
"org.apache.log4j.net.SocketReceiver.SocketDetail.getAddress()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.SocketReceiver.SocketDetail.getName()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.SocketReceiver.SocketDetail.getPort()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.SocketReceiver.SocketDetail.isActive()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.SocketReceiver.SocketDetail.isPaused()",1,0,n/a,3,0,0,1,1
"org.apache.log4j.net.SocketReceiver.SocketDetail.setPaused(boolean)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.net.SocketReceiver.SocketReceiver()",0,0,n/a,2,0,0,0,1
"org.apache.log4j.net.SocketReceiver.SocketReceiver(int)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.SocketReceiver.SocketReceiver(int,LoggerRepository)",0,0,n/a,4,0,2,2,1
"org.apache.log4j.net.SocketReceiver.activateOptions()",4,13,n/a,11,1,0,5,2
"org.apache.log4j.net.SocketReceiver.addSocketNodeEventListener(SocketNodeEventListener)",1,1,n/a,8,0,1,1,1
"org.apache.log4j.net.SocketReceiver.closeAllAcceptedSockets()",5,2,n/a,15,2,0,7,3
"org.apache.log4j.net.SocketReceiver.closeServerSocket()",4,2,n/a,14,2,0,5,3
"org.apache.log4j.net.SocketReceiver.doPost(LoggingEvent)",2,12,n/a,8,1,1,2,2
"org.apache.log4j.net.SocketReceiver.doShutdown()",5,1,n/a,12,0,0,4,1
"org.apache.log4j.net.SocketReceiver.getConnectedSocketDetails()",8,0,n/a,15,1,0,6,2
"org.apache.log4j.net.SocketReceiver.getListener()",0,0,n/a,10,0,0,1,1
"org.apache.log4j.net.SocketReceiver.getPort()",0,1,n/a,5,0,0,1,1
"org.apache.log4j.net.SocketReceiver.isEquivalent(Plugin)",2,5,n/a,16,1,1,4,4
"org.apache.log4j.net.SocketReceiver.isPaused()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.net.SocketReceiver.removeSocketNodeEventListener(SocketNodeEventListener)",1,1,n/a,10,0,1,1,1
"org.apache.log4j.net.SocketReceiver.run()",37,0,n/a,61,5,0,34,8
"org.apache.log4j.net.SocketReceiver.setListener(SocketNodeEventListener)",2,0,n/a,16,0,1,3,1
"org.apache.log4j.net.SocketReceiver.setPaused(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.SocketReceiver.setPort(int)",0,0,n/a,5,0,1,1,1
"org.apache.log4j.net.SocketReceiver.shutdown()",5,3,n/a,14,1,0,6,2
"org.apache.log4j.net.SocketServer.SocketServer(File)",1,1,n/a,4,0,1,2,1
"org.apache.log4j.net.SocketServer.configureHierarchy(InetAddress)",16,1,n/a,28,2,1,15,3
"org.apache.log4j.net.SocketServer.genericHierarchy()",9,2,n/a,16,2,0,8,3
"org.apache.log4j.net.SocketServer.init(String,String,String)",8,1,n/a,14,1,3,9,3
"org.apache.log4j.net.SocketServer.main(String[])",15,0,n/a,26,3,1,17,5
"org.apache.log4j.net.SocketServer.usage(String)",4,3,n/a,7,0,1,3,1
"org.apache.log4j.net.SyslogAppender.SyslogAppender()",0,16,n/a,2,0,0,0,1
"org.apache.log4j.net.SyslogAppender.SyslogAppender(Layout,String,int)",2,1,n/a,5,0,3,2,1
"org.apache.log4j.net.SyslogAppender.SyslogAppender(Layout,int)",1,3,n/a,9,1,2,5,2
"org.apache.log4j.net.SyslogAppender.activateOptions()",22,49,n/a,41,1,0,24,5
"org.apache.log4j.net.SyslogAppender.getFacility()",0,8,n/a,8,0,0,1,1
"org.apache.log4j.net.SyslogAppender.getFacility(String)",1,6,n/a,17,3,1,9,4
"org.apache.log4j.net.SyslogAppender.getFacilityPrinting()",0,7,n/a,9,0,0,1,1
"org.apache.log4j.net.SyslogAppender.getFacilityString(int)",0,6,n/a,17,2,1,6,4
"org.apache.log4j.net.SyslogAppender.getLocalHostname()",4,2,n/a,17,1,0,5,2
"org.apache.log4j.net.SyslogAppender.getSyslogHost()",0,4,n/a,6,0,0,1,1
"org.apache.log4j.net.SyslogAppender.info(String)",5,2,n/a,15,1,1,8,3
"org.apache.log4j.net.SyslogAppender.requiresLayout()",0,4,n/a,8,0,0,1,1
"org.apache.log4j.net.SyslogAppender.setFacility(String)",3,10,n/a,22,2,1,6,3
"org.apache.log4j.net.SyslogAppender.setFacilityPrinting(boolean)",0,2,n/a,11,0,1,1,1
"org.apache.log4j.net.SyslogAppender.setSyslogHost(String)",0,11,n/a,11,0,1,1,1
"org.apache.log4j.net.SyslogAppender.subAppend(LoggingEvent)",4,4,n/a,23,1,1,5,2
"org.apache.log4j.net.SyslogAppender.writeFooter()",2,1,n/a,5,1,0,2,2
"org.apache.log4j.net.SyslogAppender.writeHeader()",2,3,n/a,5,1,0,2,2
"org.apache.log4j.net.SyslogAppender.writeInitialParts(LoggingEvent)",10,2,n/a,10,0,1,8,1
"org.apache.log4j.net.SyslogAppender.writeTimestamp()",8,1,n/a,10,1,0,5,2
"org.apache.log4j.net.TelnetAppender.SocketHandler.SocketHandler(int)",3,1,n/a,4,0,1,2,1
"org.apache.log4j.net.TelnetAppender.SocketHandler.close()",7,2,n/a,15,2,0,8,4
"org.apache.log4j.net.TelnetAppender.SocketHandler.finalize()",1,1,n/a,3,0,0,1,1
"org.apache.log4j.net.TelnetAppender.SocketHandler.hasConnections()",1,1,n/a,7,0,0,1,1
"org.apache.log4j.net.TelnetAppender.SocketHandler.run()",18,0,n/a,35,3,0,17,6
"org.apache.log4j.net.TelnetAppender.SocketHandler.send(String)",10,3,n/a,20,3,1,13,5
"org.apache.log4j.net.TelnetAppender.TelnetAppender()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.net.TelnetAppender.activateOptions()",8,39,n/a,12,1,0,6,2
"org.apache.log4j.net.TelnetAppender.append(LoggingEvent)",7,2,n/a,18,3,1,12,6
"org.apache.log4j.net.TelnetAppender.close()",2,8,n/a,10,2,0,4,3
"org.apache.log4j.net.TelnetAppender.getPort()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.TelnetAppender.requiresLayout()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.TelnetAppender.setPort(int)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.net.UDPAppender.UDPAppender()",1,0,n/a,3,0,0,1,1
"org.apache.log4j.net.UDPAppender.UDPAppender(InetAddress,int)",3,0,n/a,10,0,2,5,1
"org.apache.log4j.net.UDPAppender.UDPAppender(String,int)",3,0,n/a,10,0,2,5,1
"org.apache.log4j.net.UDPAppender.activateOptions()",13,40,n/a,31,2,0,16,6
"org.apache.log4j.net.UDPAppender.append(LoggingEvent)",15,2,n/a,41,3,1,23,10
"org.apache.log4j.net.UDPAppender.cleanUp()",3,3,n/a,14,2,0,5,3
"org.apache.log4j.net.UDPAppender.close()",1,7,n/a,12,1,0,4,2
"org.apache.log4j.net.UDPAppender.connect(InetAddress,int)",5,1,n/a,15,1,2,8,3
"org.apache.log4j.net.UDPAppender.getAddressByName(String)",3,2,n/a,8,1,1,4,2
"org.apache.log4j.net.UDPAppender.getApplication()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.UDPAppender.getEncoding()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.UDPAppender.getOverrideProperties()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.UDPAppender.getPort()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.UDPAppender.getRemoteHost()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.UDPAppender.isActive()",0,8,n/a,3,0,0,1,1
"org.apache.log4j.net.UDPAppender.requiresLayout()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.net.UDPAppender.setApplication(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.UDPAppender.setEncoding(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.UDPAppender.setOverrideProperties(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.UDPAppender.setPort(int)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.UDPAppender.setRemoteHost(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.UDPReceiver.UDPHandlerThread.UDPHandlerThread()",1,1,n/a,3,0,0,1,1
"org.apache.log4j.net.UDPReceiver.UDPHandlerThread.append(String)",2,2,n/a,6,1,1,3,1
"org.apache.log4j.net.UDPReceiver.UDPHandlerThread.close()",1,1,n/a,8,1,0,2,1
"org.apache.log4j.net.UDPReceiver.UDPHandlerThread.run()",21,0,n/a,41,6,0,24,12
"org.apache.log4j.net.UDPReceiver.UDPReceiverThread.UDPReceiverThread()",1,1,n/a,3,0,0,1,1
"org.apache.log4j.net.UDPReceiver.UDPReceiverThread.run()",11,0,n/a,23,3,0,9,5
"org.apache.log4j.net.UDPReceiver.activateOptions()",14,13,n/a,29,2,0,15,6
"org.apache.log4j.net.UDPReceiver.getDecoder()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.UDPReceiver.getEncoding()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.net.UDPReceiver.getPort()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.UDPReceiver.isPaused()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.net.UDPReceiver.setDecoder(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.UDPReceiver.setEncoding(String)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.net.UDPReceiver.setPaused(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.UDPReceiver.setPort(int)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.UDPReceiver.shutdown()",4,3,n/a,19,2,0,10,5
"org.apache.log4j.net.XMLSocketNode.XMLSocketNode(String,Socket,LoggerRepository)",8,0,n/a,20,2,3,10,5
"org.apache.log4j.net.XMLSocketNode.XMLSocketNode(String,Socket,Receiver)",8,1,n/a,19,2,3,10,5
"org.apache.log4j.net.XMLSocketNode.run()",39,0,n/a,94,7,0,48,19
"org.apache.log4j.net.XMLSocketNode.setListener(SocketNodeEventListener)",0,0,n/a,5,0,1,1,1
"org.apache.log4j.net.XMLSocketReceiver.XMLSocketReceiver()",0,0,n/a,2,0,0,0,1
"org.apache.log4j.net.XMLSocketReceiver.XMLSocketReceiver(int)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.XMLSocketReceiver.XMLSocketReceiver(int,LoggerRepository)",0,0,n/a,4,0,2,2,1
"org.apache.log4j.net.XMLSocketReceiver.activateOptions()",4,13,n/a,10,1,0,5,2
"org.apache.log4j.net.XMLSocketReceiver.closeAllAcceptedSockets()",4,2,n/a,14,2,0,6,3
"org.apache.log4j.net.XMLSocketReceiver.closeServerSocket()",4,2,n/a,14,2,0,5,3
"org.apache.log4j.net.XMLSocketReceiver.doPost(LoggingEvent)",2,12,n/a,8,1,1,2,2
"org.apache.log4j.net.XMLSocketReceiver.doShutdown()",5,2,n/a,12,0,0,4,1
"org.apache.log4j.net.XMLSocketReceiver.getDecoder()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.net.XMLSocketReceiver.getPort()",0,1,n/a,5,0,0,1,1
"org.apache.log4j.net.XMLSocketReceiver.hashCode()",4,5,n/a,5,0,0,3,3
"org.apache.log4j.net.XMLSocketReceiver.isActive()",0,3,n/a,5,0,0,1,1
"org.apache.log4j.net.XMLSocketReceiver.isEquivalent(Plugin)",2,5,n/a,16,1,1,4,4
"org.apache.log4j.net.XMLSocketReceiver.isPaused()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.net.XMLSocketReceiver.run()",29,0,n/a,51,3,0,29,6
"org.apache.log4j.net.XMLSocketReceiver.setDecoder(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.XMLSocketReceiver.setPaused(boolean)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.net.XMLSocketReceiver.setPort(int)",0,0,n/a,5,0,1,1,1
"org.apache.log4j.net.XMLSocketReceiver.shutdown()",2,3,n/a,12,1,0,5,2
"org.apache.log4j.net.test.Loop.main(String[])",15,0,n/a,26,1,1,20,4
"org.apache.log4j.net.test.Loop.usage(String)",4,2,n/a,7,0,1,3,1
"org.apache.log4j.net.test.SMTPMin.init(String)",1,1,n/a,4,0,1,1,1
"org.apache.log4j.net.test.SMTPMin.main(String[])",4,0,n/a,10,0,1,5,2
"org.apache.log4j.net.test.SMTPMin.test()",11,1,n/a,12,0,0,9,1
"org.apache.log4j.net.test.SMTPMin.usage(String)",4,1,n/a,7,0,1,3,1
"org.apache.log4j.net.test.SocketMin.init(String,String)",12,1,n/a,21,1,2,13,3
"org.apache.log4j.net.test.SocketMin.loop()",11,1,n/a,24,3,0,19,6
"org.apache.log4j.net.test.SocketMin.main(String[])",7,0,n/a,14,0,1,8,3
"org.apache.log4j.net.test.SocketMin.test()",7,1,n/a,10,0,0,7,1
"org.apache.log4j.net.test.SocketMin.usage(String)",3,2,n/a,7,0,1,3,1
"org.apache.log4j.net.test.SyslogMin.ProgramInit(String)",1,1,n/a,5,0,1,2,1
"org.apache.log4j.net.test.SyslogMin.Usage(String)",3,1,n/a,6,0,1,3,1
"org.apache.log4j.net.test.SyslogMin.main(String[])",3,0,n/a,11,1,1,4,2
"org.apache.log4j.net.test.SyslogMin.test(String)",8,1,n/a,11,0,1,8,1
"org.apache.log4j.nt.NTEventLogAppender.NTEventLogAppender()",1,1,n/a,3,0,0,1,1
"org.apache.log4j.nt.NTEventLogAppender.NTEventLogAppender(Layout)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.nt.NTEventLogAppender.NTEventLogAppender(String)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.nt.NTEventLogAppender.NTEventLogAppender(String,Layout)",1,0,n/a,3,0,2,1,1
"org.apache.log4j.nt.NTEventLogAppender.NTEventLogAppender(String,String)",1,0,n/a,3,0,2,1,1
"org.apache.log4j.nt.NTEventLogAppender.NTEventLogAppender(String,String,Layout)",3,5,n/a,14,1,3,8,3
"org.apache.log4j.nt.NTEventLogAppender.activateOptions()",7,39,n/a,19,3,0,11,6
"org.apache.log4j.nt.NTEventLogAppender.append(LoggingEvent)",10,2,n/a,20,3,1,12,4
"org.apache.log4j.nt.NTEventLogAppender.close()",0,7,n/a,3,0,0,0,1
"org.apache.log4j.nt.NTEventLogAppender.deregisterEventSource(int)",0,2,n/a,1,-1,1,0,1
"org.apache.log4j.nt.NTEventLogAppender.finalize()",2,3,n/a,5,0,0,3,1
"org.apache.log4j.nt.NTEventLogAppender.getSource()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.nt.NTEventLogAppender.registerEventSource(String,String)",0,1,n/a,1,-1,2,0,1
"org.apache.log4j.nt.NTEventLogAppender.reportEvent(int,String,int)",0,1,n/a,1,-1,3,0,1
"org.apache.log4j.nt.NTEventLogAppender.requiresLayout()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.nt.NTEventLogAppender.setSource(String)",1,0,n/a,8,0,1,2,1
"org.apache.log4j.or.DefaultRenderer.DefaultRenderer()",0,1,n/a,2,0,0,0,1
"org.apache.log4j.or.DefaultRenderer.doRender(Object)",1,1,n/a,6,0,1,1,1
"org.apache.log4j.or.ObjectRenderer.doRender(Object)",n/a,1,5,n/a,n/a,1,n/a,n/a
"org.apache.log4j.or.RendererMap.RendererMap()",1,11,n/a,3,0,0,1,1
"org.apache.log4j.or.RendererMap.addRenderer(RendererSupport,String,String)",3,0,n/a,23,3,3,7,4
"org.apache.log4j.or.RendererMap.addRenderer(String,String)",9,2,n/a,29,3,2,10,5
"org.apache.log4j.or.RendererMap.clear()",1,1,n/a,3,0,0,1,1
"org.apache.log4j.or.RendererMap.findAndRender(Object)",3,1,n/a,13,1,1,3,2
"org.apache.log4j.or.RendererMap.get(Class)",3,14,n/a,54,2,1,11,4
"org.apache.log4j.or.RendererMap.get(Object)",2,0,n/a,10,1,1,3,2
"org.apache.log4j.or.RendererMap.getDefaultRenderer()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.or.RendererMap.put(Class,ObjectRenderer)",1,14,n/a,6,0,2,1,1
"org.apache.log4j.or.RendererMap.searchInterfaces(Class)",3,2,n/a,16,3,1,11,4
"org.apache.log4j.or.ThreadGroupRenderer.ThreadGroupRenderer()",0,0,n/a,3,0,0,0,1
"org.apache.log4j.or.ThreadGroupRenderer.doRender(Object)",23,1,n/a,40,2,1,23,3
"org.apache.log4j.or.jms.MessageRenderer.MessageRenderer()",0,0,n/a,2,0,0,0,1
"org.apache.log4j.or.jms.MessageRenderer.doRender(Object)",36,1,n/a,45,3,1,35,6
"org.apache.log4j.or.sax.AttributesRenderer.AttributesRenderer()",0,0,n/a,3,0,0,0,1
"org.apache.log4j.or.sax.AttributesRenderer.doRender(Object)",10,1,n/a,25,3,1,16,4
"org.apache.log4j.pattern.BridgePatternConverter.BridgePatternConverter(String,LoggerRepository,ULogger)",16,1,n/a,44,2,3,23,5
"org.apache.log4j.pattern.BridgePatternConverter.convert(LoggingEvent)",3,1,n/a,11,0,1,3,1
"org.apache.log4j.pattern.BridgePatternConverter.format(StringBuffer,LoggingEvent)",3,2,n/a,12,1,2,6,2
"org.apache.log4j.pattern.BridgePatternConverter.ignoresThrowable()",0,2,n/a,8,0,0,1,1
"org.apache.log4j.pattern.BridgePatternParser.BridgePatternParser(String,LoggerRepository,ULogger)",1,1,n/a,13,0,3,3,1
"org.apache.log4j.pattern.BridgePatternParser.parse()",1,2,n/a,7,0,0,1,1
"org.apache.log4j.pattern.CachedDateFormat.CachedDateFormat(DateFormat,int)",2,13,n/a,24,1,2,9,3
"org.apache.log4j.pattern.CachedDateFormat.findMillisecondStart(long,String,DateFormat)",20,6,n/a,57,4,3,23,10
"org.apache.log4j.pattern.CachedDateFormat.format(Date,StringBuffer,FieldPosition)",2,1,n/a,13,0,3,2,1
"org.apache.log4j.pattern.CachedDateFormat.format(long,StringBuffer)",10,3,n/a,63,3,2,21,9
"org.apache.log4j.pattern.CachedDateFormat.getMaximumCacheValidity(String)",2,2,n/a,19,1,1,4,3
"org.apache.log4j.pattern.CachedDateFormat.getNumberFormat()",1,2,n/a,8,0,0,1,1
"org.apache.log4j.pattern.CachedDateFormat.millisecondFormat(int,StringBuffer,int)",6,2,n/a,13,0,3,3,1
"org.apache.log4j.pattern.CachedDateFormat.parse(String,ParsePosition)",1,1,n/a,10,0,2,1,1
"org.apache.log4j.pattern.CachedDateFormat.setTimeZone(TimeZone)",1,15,n/a,12,0,1,3,1
"org.apache.log4j.pattern.ClassNamePatternConverter.ClassNamePatternConverter(String[],ULogger)",1,1,n/a,9,0,2,1,1
"org.apache.log4j.pattern.ClassNamePatternConverter.format(LoggingEvent,StringBuffer)",6,2,n/a,15,1,2,6,2
"org.apache.log4j.pattern.ClassNamePatternConverter.newInstance(String[],ULogger)",1,0,n/a,10,0,2,1,1
"org.apache.log4j.pattern.DatePatternConverter.DatePatternConverter(String[],ULogger)",11,1,n/a,48,2,2,25,11
"org.apache.log4j.pattern.DatePatternConverter.format(Date,StringBuffer)",2,1,n/a,10,1,2,2,1
"org.apache.log4j.pattern.DatePatternConverter.format(LoggingEvent,StringBuffer)",2,2,n/a,8,1,2,2,1
"org.apache.log4j.pattern.DatePatternConverter.format(Object,StringBuffer)",2,4,n/a,9,1,2,3,2
"org.apache.log4j.pattern.DatePatternConverter.newInstance(String[],ULogger)",1,2,n/a,10,0,2,1,1
"org.apache.log4j.pattern.FileDatePatternConverter.FileDatePatternConverter()",0,0,n/a,5,0,0,0,1
"org.apache.log4j.pattern.FileDatePatternConverter.newInstance(String[],ULogger)",2,0,n/a,14,1,2,3,3
"org.apache.log4j.pattern.FileLocationPatternConverter.FileLocationPatternConverter()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.pattern.FileLocationPatternConverter.format(LoggingEvent,StringBuffer)",3,2,n/a,9,1,2,3,2
"org.apache.log4j.pattern.FileLocationPatternConverter.newInstance(String[],ULogger)",0,0,n/a,10,0,2,1,1
"org.apache.log4j.pattern.FormattingInfo.FormattingInfo(boolean,int,int)",0,10,n/a,12,0,3,3,1
"org.apache.log4j.pattern.FormattingInfo.format(int,StringBuffer)",9,7,n/a,26,3,2,16,6
"org.apache.log4j.pattern.FormattingInfo.getDefault()",0,12,n/a,7,0,0,1,1
"org.apache.log4j.pattern.FormattingInfo.getMaxLength()",0,6,n/a,7,0,0,1,1
"org.apache.log4j.pattern.FormattingInfo.getMinLength()",0,6,n/a,7,0,0,1,1
"org.apache.log4j.pattern.FormattingInfo.isLeftAligned()",0,6,n/a,7,0,0,1,1
"org.apache.log4j.pattern.FullLocationPatternConverter.FullLocationPatternConverter()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.pattern.FullLocationPatternConverter.format(LoggingEvent,StringBuffer)",3,2,n/a,9,1,2,3,2
"org.apache.log4j.pattern.FullLocationPatternConverter.newInstance(String[],ULogger)",0,0,n/a,10,0,2,1,1
"org.apache.log4j.pattern.IntegerPatternConverter.IntegerPatternConverter()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.pattern.IntegerPatternConverter.format(Object,StringBuffer)",5,3,n/a,11,1,2,4,3
"org.apache.log4j.pattern.IntegerPatternConverter.newInstance(String[],ULogger)",0,0,n/a,10,0,2,1,1
"org.apache.log4j.pattern.LevelPatternConverter.LevelPatternConverter()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.pattern.LevelPatternConverter.format(LoggingEvent,StringBuffer)",3,2,n/a,6,0,2,1,1
"org.apache.log4j.pattern.LevelPatternConverter.getStyleClass(Object)",4,2,n/a,25,2,1,18,9
"org.apache.log4j.pattern.LevelPatternConverter.newInstance(String[],ULogger)",0,0,n/a,10,0,2,1,1
"org.apache.log4j.pattern.LineLocationPatternConverter.LineLocationPatternConverter()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.pattern.LineLocationPatternConverter.format(LoggingEvent,StringBuffer)",3,2,n/a,9,1,2,3,2
"org.apache.log4j.pattern.LineLocationPatternConverter.newInstance(String[],ULogger)",0,0,n/a,10,0,2,1,1
"org.apache.log4j.pattern.LineSeparatorPatternConverter.LineSeparatorPatternConverter()",1,1,n/a,7,0,0,2,1
"org.apache.log4j.pattern.LineSeparatorPatternConverter.format(LoggingEvent,StringBuffer)",1,2,n/a,6,0,2,1,1
"org.apache.log4j.pattern.LineSeparatorPatternConverter.format(Object,StringBuffer)",1,4,n/a,6,0,2,1,1
"org.apache.log4j.pattern.LineSeparatorPatternConverter.newInstance(String[],ULogger)",0,0,n/a,10,0,2,1,1
"org.apache.log4j.pattern.LiteralPatternConverter.LiteralPatternConverter(String)",1,6,n/a,8,0,1,2,1
"org.apache.log4j.pattern.LiteralPatternConverter.format(LoggingEvent,StringBuffer)",1,2,n/a,6,0,2,1,1
"org.apache.log4j.pattern.LiteralPatternConverter.format(Object,StringBuffer)",1,4,n/a,6,0,2,1,1
"org.apache.log4j.pattern.LoggerPatternConverter.LoggerPatternConverter(String[],ULogger)",1,2,n/a,8,0,2,1,1
"org.apache.log4j.pattern.LoggerPatternConverter.format(LoggingEvent,StringBuffer)",4,2,n/a,8,0,2,3,1
"org.apache.log4j.pattern.LoggerPatternConverter.newInstance(String[],ULogger)",1,0,n/a,13,1,2,3,3
"org.apache.log4j.pattern.LoggingEventPatternConverter.LoggingEventPatternConverter(String,String)",1,17,n/a,9,0,2,1,1
"org.apache.log4j.pattern.LoggingEventPatternConverter.format(LoggingEvent,StringBuffer)",n/a,2,18,n/a,n/a,2,n/a,n/a
"org.apache.log4j.pattern.LoggingEventPatternConverter.format(Object,StringBuffer)",1,4,n/a,8,1,2,2,2
"org.apache.log4j.pattern.LoggingEventPatternConverter.handlesThrowable()",0,2,n/a,11,0,0,1,1
"org.apache.log4j.pattern.MessagePatternConverter.MessagePatternConverter()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.pattern.MessagePatternConverter.format(LoggingEvent,StringBuffer)",2,2,n/a,6,0,2,1,1
"org.apache.log4j.pattern.MessagePatternConverter.newInstance(String[],ULogger)",0,0,n/a,10,0,2,1,1
"org.apache.log4j.pattern.MethodLocationPatternConverter.MethodLocationPatternConverter()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.pattern.MethodLocationPatternConverter.format(LoggingEvent,StringBuffer)",3,2,n/a,9,1,2,3,2
"org.apache.log4j.pattern.MethodLocationPatternConverter.newInstance(String[],ULogger)",0,0,n/a,10,0,2,1,1
"org.apache.log4j.pattern.NDCPatternConverter.NDCPatternConverter()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.pattern.NDCPatternConverter.format(LoggingEvent,StringBuffer)",2,2,n/a,6,0,2,1,1
"org.apache.log4j.pattern.NDCPatternConverter.newInstance(String[],ULogger)",0,0,n/a,10,0,2,1,1
"org.apache.log4j.pattern.NameAbbreviator.MaxElementAbbreviator.MaxElementAbbreviator(int)",0,1,n/a,7,0,1,1,1
"org.apache.log4j.pattern.NameAbbreviator.MaxElementAbbreviator.abbreviate(int,StringBuffer)",5,30,n/a,20,2,2,10,4
"org.apache.log4j.pattern.NameAbbreviator.NOPAbbreviator.NOPAbbreviator()",0,1,n/a,5,0,0,0,1
"org.apache.log4j.pattern.NameAbbreviator.NOPAbbreviator.abbreviate(int,StringBuffer)",0,30,n/a,5,0,2,0,1
"org.apache.log4j.pattern.NameAbbreviator.PatternAbbreviator.PatternAbbreviator(List)",4,1,n/a,13,1,1,4,2
"org.apache.log4j.pattern.NameAbbreviator.PatternAbbreviator.abbreviate(int,StringBuffer)",4,30,n/a,23,1,2,8,5
"org.apache.log4j.pattern.NameAbbreviator.PatternAbbreviatorFragment.PatternAbbreviatorFragment(int,char)",0,1,n/a,11,0,2,2,1
"org.apache.log4j.pattern.NameAbbreviator.PatternAbbreviatorFragment.abbreviate(StringBuffer,int)",4,2,n/a,21,3,2,10,4
"org.apache.log4j.pattern.NameAbbreviator.abbreviate(int,StringBuffer)",n/a,30,3,n/a,n/a,2,n/a,n/a
"org.apache.log4j.pattern.NameAbbreviator.getAbbreviator(String)",21,9,n/a,69,4,1,34,15
"org.apache.log4j.pattern.NameAbbreviator.getDefaultAbbreviator()",0,3,n/a,8,0,0,1,1
"org.apache.log4j.pattern.NamePatternConverter.NamePatternConverter(String,String,String[])",3,2,n/a,15,1,3,4,3
"org.apache.log4j.pattern.NamePatternConverter.abbreviate(int,StringBuffer)",1,2,n/a,8,0,2,1,1
"org.apache.log4j.pattern.PatternConverter.PatternConverter(String,String)",0,2,n/a,9,0,2,2,1
"org.apache.log4j.pattern.PatternConverter.format(Object,StringBuffer)",n/a,3,5,n/a,n/a,2,n/a,n/a
"org.apache.log4j.pattern.PatternConverter.getName()",0,1,n/a,10,0,0,1,1
"org.apache.log4j.pattern.PatternConverter.getStyleClass(Object)",0,2,n/a,12,0,1,1,1
"org.apache.log4j.pattern.PatternParser.PatternParser()",0,0,n/a,5,0,0,0,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.ReadOnlyMap(Map)",0,2,n/a,7,0,1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.clear()",1,4,n/a,6,0,0,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.containsKey(Object)",1,6,n/a,6,0,1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.containsValue(Object)",1,1,n/a,6,0,1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.entrySet()",1,4,n/a,6,0,0,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.get(Object)",1,34,n/a,6,0,1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.isEmpty()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.keySet()",1,7,n/a,6,0,0,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.put(Object,Object)",1,85,n/a,6,0,2,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.putAll(Map)",1,5,n/a,6,0,1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.remove(Object)",1,14,n/a,6,0,1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.size()",1,11,n/a,6,0,0,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.values()",1,8,n/a,6,0,0,1,1
"org.apache.log4j.pattern.PatternParser.createConverter(String,StringBuffer,Map,Map,List,ULogger)",26,1,n/a,104,4,6,45,19
"org.apache.log4j.pattern.PatternParser.extractConverter(char,String,int,StringBuffer,StringBuffer)",10,1,n/a,38,1,5,9,4
"org.apache.log4j.pattern.PatternParser.extractOptions(String,int,List)",5,1,n/a,19,2,3,8,4
"org.apache.log4j.pattern.PatternParser.finalizeConverter(char,String,int,ULogger,StringBuffer,FormattingInfo,Map,Map,List,List)",30,3,n/a,58,2,10,26,6
"org.apache.log4j.pattern.PatternParser.getFileNamePatternRules()",0,2,n/a,7,0,0,1,1
"org.apache.log4j.pattern.PatternParser.getPatternLayoutRules()",0,4,n/a,7,0,0,1,1
"org.apache.log4j.pattern.PatternParser.parse(String,List,List,Map,Map,ULogger)",55,4,n/a,144,5,6,81,27
"org.apache.log4j.pattern.PropertiesPatternConverter.PropertiesPatternConverter(String[],ULogger)",1,1,n/a,16,1,2,4,5
"org.apache.log4j.pattern.PropertiesPatternConverter.format(LoggingEvent,StringBuffer)",15,2,n/a,24,2,2,12,4
"org.apache.log4j.pattern.PropertiesPatternConverter.newInstance(String[],ULogger)",1,0,n/a,10,0,2,1,1
"org.apache.log4j.pattern.RelativeTimePatternConverter.CachedTimestamp.CachedTimestamp(long,String)",0,2,n/a,9,0,2,2,1
"org.apache.log4j.pattern.RelativeTimePatternConverter.CachedTimestamp.format(long,StringBuffer)",1,1,n/a,13,1,2,4,2
"org.apache.log4j.pattern.RelativeTimePatternConverter.RelativeTimePatternConverter()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.pattern.RelativeTimePatternConverter.format(LoggingEvent,StringBuffer)",6,2,n/a,12,1,2,5,2
"org.apache.log4j.pattern.RelativeTimePatternConverter.newInstance(String[],ULogger)",1,0,n/a,10,0,2,1,1
"org.apache.log4j.pattern.SequenceNumberPatternConverter.SequenceNumberPatternConverter()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.pattern.SequenceNumberPatternConverter.format(LoggingEvent,StringBuffer)",3,2,n/a,6,0,2,1,1
"org.apache.log4j.pattern.SequenceNumberPatternConverter.newInstance(String[],ULogger)",0,0,n/a,10,0,2,1,1
"org.apache.log4j.pattern.ThreadPatternConverter.ThreadPatternConverter()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.pattern.ThreadPatternConverter.format(LoggingEvent,StringBuffer)",2,2,n/a,6,0,2,1,1
"org.apache.log4j.pattern.ThreadPatternConverter.newInstance(String[],ULogger)",0,0,n/a,10,0,2,1,1
"org.apache.log4j.pattern.ThrowableInformationPatternConverter.ThrowableInformationPatternConverter(String[],ULogger)",1,1,n/a,14,1,2,4,3
"org.apache.log4j.pattern.ThrowableInformationPatternConverter.format(LoggingEvent,StringBuffer)",6,2,n/a,23,2,2,16,6
"org.apache.log4j.pattern.ThrowableInformationPatternConverter.handlesThrowable()",0,2,n/a,7,0,0,1,1
"org.apache.log4j.pattern.ThrowableInformationPatternConverter.newInstance(String[],ULogger)",1,0,n/a,11,0,2,1,1
"org.apache.log4j.plugins.Pauseable.isPaused()",n/a,0,8,n/a,n/a,0,n/a,n/a
"org.apache.log4j.plugins.Pauseable.setPaused(boolean)",n/a,0,8,n/a,n/a,1,n/a,n/a
"org.apache.log4j.plugins.Plugin.addPropertyChangeListener(PropertyChangeListener)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.plugins.Plugin.addPropertyChangeListener(String,PropertyChangeListener)",n/a,3,1,n/a,n/a,2,n/a,n/a
"org.apache.log4j.plugins.Plugin.getLoggerRepository()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.plugins.Plugin.getName()",n/a,7,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.plugins.Plugin.isActive()",n/a,1,6,n/a,n/a,0,n/a,n/a
"org.apache.log4j.plugins.Plugin.isEquivalent(Plugin)",n/a,0,6,n/a,n/a,1,n/a,n/a
"org.apache.log4j.plugins.Plugin.removePropertyChangeListener(PropertyChangeListener)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.plugins.Plugin.removePropertyChangeListener(String,PropertyChangeListener)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.apache.log4j.plugins.Plugin.setLoggerRepository(LoggerRepository)",n/a,3,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.plugins.Plugin.setName(String)",n/a,4,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.plugins.Plugin.shutdown()",n/a,3,12,n/a,n/a,0,n/a,n/a
"org.apache.log4j.plugins.PluginEvent.PluginEvent(Plugin)",1,2,n/a,6,0,1,1,1
"org.apache.log4j.plugins.PluginEvent.getPlugin()",1,2,n/a,8,0,0,1,1
"org.apache.log4j.plugins.PluginListener.pluginStarted(PluginEvent)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.plugins.PluginListener.pluginStopped(PluginEvent)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.plugins.PluginRegistry.PluginRegistry(LoggerRepositoryEx)",2,1,n/a,5,0,1,3,1
"org.apache.log4j.plugins.PluginRegistry.RepositoryListener.configurationChangedEvent(LoggerRepository)",0,1,n/a,6,0,1,0,1
"org.apache.log4j.plugins.PluginRegistry.RepositoryListener.configurationResetEvent(LoggerRepository)",1,1,n/a,6,0,1,1,1
"org.apache.log4j.plugins.PluginRegistry.RepositoryListener.shutdownEvent(LoggerRepository)",1,1,n/a,6,0,1,1,1
"org.apache.log4j.plugins.PluginRegistry.addPlugin(Plugin)",7,13,n/a,21,2,1,8,2
"org.apache.log4j.plugins.PluginRegistry.addPluginListener(PluginListener)",1,1,n/a,9,0,1,1,1
"org.apache.log4j.plugins.PluginRegistry.firePluginStarted(Plugin)",5,1,n/a,17,3,1,8,3
"org.apache.log4j.plugins.PluginRegistry.firePluginStopped(Plugin)",5,2,n/a,17,3,1,8,3
"org.apache.log4j.plugins.PluginRegistry.getLoggerRepository()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.plugins.PluginRegistry.getPlugins()",7,0,n/a,15,2,0,6,2
"org.apache.log4j.plugins.PluginRegistry.getPlugins(Class)",8,0,n/a,18,3,1,8,3
"org.apache.log4j.plugins.PluginRegistry.pluginNameExists(String)",1,0,n/a,12,1,1,2,1
"org.apache.log4j.plugins.PluginRegistry.removePluginListener(PluginListener)",1,0,n/a,9,0,1,1,1
"org.apache.log4j.plugins.PluginRegistry.stopAllPlugins()",7,7,n/a,15,2,0,7,2
"org.apache.log4j.plugins.PluginRegistry.stopPlugin(String)",4,7,n/a,20,2,1,8,2
"org.apache.log4j.plugins.PluginSkeleton.addPropertyChangeListener(PropertyChangeListener)",1,1,n/a,6,0,1,1,1
"org.apache.log4j.plugins.PluginSkeleton.addPropertyChangeListener(String,PropertyChangeListener)",1,3,n/a,8,0,2,1,1
"org.apache.log4j.plugins.PluginSkeleton.firePropertyChange(PropertyChangeEvent)",1,0,n/a,6,0,1,1,1
"org.apache.log4j.plugins.PluginSkeleton.firePropertyChange(String,Object,Object)",1,2,n/a,9,0,3,1,1
"org.apache.log4j.plugins.PluginSkeleton.firePropertyChange(String,boolean,boolean)",1,1,n/a,9,0,3,1,1
"org.apache.log4j.plugins.PluginSkeleton.firePropertyChange(String,int,int)",1,1,n/a,9,0,3,1,1
"org.apache.log4j.plugins.PluginSkeleton.getLoggerRepository()",0,14,n/a,6,0,0,1,1
"org.apache.log4j.plugins.PluginSkeleton.getName()",0,43,n/a,6,0,0,1,1
"org.apache.log4j.plugins.PluginSkeleton.isActive()",0,2,n/a,7,0,0,1,1
"org.apache.log4j.plugins.PluginSkeleton.isEquivalent(Plugin)",7,5,n/a,12,0,1,1,6
"org.apache.log4j.plugins.PluginSkeleton.removePropertyChangeListener(PropertyChangeListener)",1,1,n/a,7,0,1,1,1
"org.apache.log4j.plugins.PluginSkeleton.removePropertyChangeListener(String,PropertyChangeListener)",1,1,n/a,8,0,2,1,1
"org.apache.log4j.plugins.PluginSkeleton.setLoggerRepository(LoggerRepository)",1,17,n/a,9,0,1,3,1
"org.apache.log4j.plugins.PluginSkeleton.setName(String)",1,12,n/a,8,0,1,3,1
"org.apache.log4j.plugins.Receiver.doPost(LoggingEvent)",9,12,n/a,20,1,1,5,3
"org.apache.log4j.plugins.Receiver.getThreshold()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.plugins.Receiver.isAsSevereAsThreshold(Level)",1,1,n/a,9,0,1,1,2
"org.apache.log4j.plugins.Receiver.setThreshold(Level)",1,0,n/a,9,0,1,3,1
"org.apache.log4j.rolling.FilterBasedTriggeringPolicy.FilterBasedTriggeringPolicy()",0,1,n/a,5,0,0,0,1
"org.apache.log4j.rolling.FilterBasedTriggeringPolicy.activateOptions()",2,14,n/a,8,1,0,4,2
"org.apache.log4j.rolling.FilterBasedTriggeringPolicy.addFilter(Filter)",1,1,n/a,13,1,1,5,2
"org.apache.log4j.rolling.FilterBasedTriggeringPolicy.clearFilters()",0,0,n/a,8,0,0,2,1
"org.apache.log4j.rolling.FilterBasedTriggeringPolicy.getFilter()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.rolling.FilterBasedTriggeringPolicy.isTriggeringEvent(Appender,LoggingEvent,String,long)",2,2,n/a,27,2,4,11,5
"org.apache.log4j.rolling.FixedWindowRollingPolicy.FixedWindowRollingPolicy()",0,8,n/a,7,0,0,2,1
"org.apache.log4j.rolling.FixedWindowRollingPolicy.activateOptions()",13,23,n/a,24,1,0,12,4
"org.apache.log4j.rolling.FixedWindowRollingPolicy.getMaxIndex()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.rolling.FixedWindowRollingPolicy.getMinIndex()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.rolling.FixedWindowRollingPolicy.initialize(String,boolean)",5,2,n/a,22,1,2,13,4
"org.apache.log4j.rolling.FixedWindowRollingPolicy.purge(int,int)",30,1,n/a,78,4,2,45,14
"org.apache.log4j.rolling.FixedWindowRollingPolicy.rollover(String)",23,2,n/a,36,2,1,20,6
"org.apache.log4j.rolling.FixedWindowRollingPolicy.setMaxIndex(int)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.rolling.FixedWindowRollingPolicy.setMinIndex(int)",0,8,n/a,7,0,1,1,1
"org.apache.log4j.rolling.RollingFileAppender.CountingOutputStream.CountingOutputStream(OutputStream,RollingFileAppender)",0,1,n/a,10,0,2,2,1
"org.apache.log4j.rolling.RollingFileAppender.CountingOutputStream.close()",1,2,n/a,6,0,0,1,1
"org.apache.log4j.rolling.RollingFileAppender.CountingOutputStream.flush()",1,2,n/a,6,0,0,1,1
"org.apache.log4j.rolling.RollingFileAppender.CountingOutputStream.write(byte[])",2,2,n/a,7,0,1,2,1
"org.apache.log4j.rolling.RollingFileAppender.CountingOutputStream.write(byte[],int,int)",2,2,n/a,8,0,3,2,1
"org.apache.log4j.rolling.RollingFileAppender.CountingOutputStream.write(int)",2,2,n/a,7,0,1,2,1
"org.apache.log4j.rolling.RollingFileAppender.RollingFileAppender()",0,17,n/a,5,0,0,0,1
"org.apache.log4j.rolling.RollingFileAppender.activateOptions()",28,73,n/a,60,4,0,32,11
"org.apache.log4j.rolling.RollingFileAppender.close()",2,17,n/a,11,2,0,4,2
"org.apache.log4j.rolling.RollingFileAppender.createWriter(OutputStream)",2,7,n/a,12,0,1,1,1
"org.apache.log4j.rolling.RollingFileAppender.getFileLength()",0,1,n/a,7,0,0,1,1
"org.apache.log4j.rolling.RollingFileAppender.getRollingPolicy()",0,1,n/a,7,0,0,1,1
"org.apache.log4j.rolling.RollingFileAppender.getTriggeringPolicy()",0,2,n/a,7,0,0,1,1
"org.apache.log4j.rolling.RollingFileAppender.incrementFileLength(int)",0,3,n/a,7,0,1,1,1
"org.apache.log4j.rolling.RollingFileAppender.rollover()",49,1,n/a,112,7,0,51,18
"org.apache.log4j.rolling.RollingFileAppender.setRollingPolicy(RollingPolicy)",0,17,n/a,7,0,1,1,1
"org.apache.log4j.rolling.RollingFileAppender.setTriggeringPolicy(TriggeringPolicy)",0,7,n/a,7,0,1,1,1
"org.apache.log4j.rolling.RollingFileAppender.subAppend(LoggingEvent)",7,4,n/a,22,2,1,5,3
"org.apache.log4j.rolling.RollingPolicy.initialize(String,boolean)",n/a,2,3,n/a,n/a,2,n/a,n/a
"org.apache.log4j.rolling.RollingPolicy.rollover(String)",n/a,2,3,n/a,n/a,1,n/a,n/a
"org.apache.log4j.rolling.RollingPolicyBase.activateOptions()",6,15,n/a,13,1,0,5,2
"org.apache.log4j.rolling.RollingPolicyBase.formatFileName(Object,StringBuffer)",3,8,n/a,16,2,2,7,3
"org.apache.log4j.rolling.RollingPolicyBase.getActiveFileName()",0,1,n/a,8,0,0,1,1
"org.apache.log4j.rolling.RollingPolicyBase.getDatePatternConverter()",0,1,n/a,8,2,0,6,3
"org.apache.log4j.rolling.RollingPolicyBase.getFileNamePattern()",0,3,n/a,7,0,0,1,1
"org.apache.log4j.rolling.RollingPolicyBase.getIntegerPatternConverter()",0,1,n/a,8,2,0,6,3
"org.apache.log4j.rolling.RollingPolicyBase.parseFileNamePattern()",9,2,n/a,15,0,0,7,1
"org.apache.log4j.rolling.RollingPolicyBase.setActiveFileName(String)",0,1,n/a,8,0,1,1,1
"org.apache.log4j.rolling.RollingPolicyBase.setFileNamePattern(String)",0,19,n/a,7,0,1,1,1
"org.apache.log4j.rolling.RolloverDescription.getActiveFileName()",n/a,16,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.rolling.RolloverDescription.getAppend()",n/a,10,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.rolling.RolloverDescription.getAsynchronous()",n/a,9,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.rolling.RolloverDescription.getSynchronous()",n/a,10,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.rolling.RolloverDescriptionImpl.RolloverDescriptionImpl(String,boolean,Action,Action)",1,6,n/a,19,1,4,6,2
"org.apache.log4j.rolling.RolloverDescriptionImpl.getActiveFileName()",0,16,n/a,7,0,0,1,1
"org.apache.log4j.rolling.RolloverDescriptionImpl.getAppend()",0,10,n/a,6,0,0,1,1
"org.apache.log4j.rolling.RolloverDescriptionImpl.getAsynchronous()",0,9,n/a,9,0,0,1,1
"org.apache.log4j.rolling.RolloverDescriptionImpl.getSynchronous()",0,10,n/a,9,0,0,1,1
"org.apache.log4j.rolling.SizeBasedTriggeringPolicy.SizeBasedTriggeringPolicy()",0,7,n/a,5,0,0,0,1
"org.apache.log4j.rolling.SizeBasedTriggeringPolicy.SizeBasedTriggeringPolicy(long)",0,0,n/a,7,0,1,1,1
"org.apache.log4j.rolling.SizeBasedTriggeringPolicy.activateOptions()",0,13,n/a,5,0,0,0,1
"org.apache.log4j.rolling.SizeBasedTriggeringPolicy.getMaxFileSize()",0,1,n/a,7,0,0,1,1
"org.apache.log4j.rolling.SizeBasedTriggeringPolicy.isTriggeringEvent(Appender,LoggingEvent,String,long)",0,2,n/a,9,0,4,1,1
"org.apache.log4j.rolling.SizeBasedTriggeringPolicy.setMaxFileSize(long)",0,7,n/a,7,0,1,1,1
"org.apache.log4j.rolling.TimeBasedRollingPolicy.TimeBasedRollingPolicy()",0,10,n/a,5,0,0,0,1
"org.apache.log4j.rolling.TimeBasedRollingPolicy.activateOptions()",11,28,n/a,22,1,0,13,4
"org.apache.log4j.rolling.TimeBasedRollingPolicy.initialize(String,boolean)",10,2,n/a,25,1,2,10,3
"org.apache.log4j.rolling.TimeBasedRollingPolicy.isTriggeringEvent(Appender,LoggingEvent,String,long)",1,2,n/a,8,0,4,1,1
"org.apache.log4j.rolling.TimeBasedRollingPolicy.rollover(String)",23,2,n/a,45,1,1,20,5
"org.apache.log4j.rolling.TriggeringPolicy.isTriggeringEvent(Appender,LoggingEvent,String,long)",n/a,2,3,n/a,n/a,4,n/a,n/a
"org.apache.log4j.rolling.helper.Action.close()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.rolling.helper.Action.execute()",n/a,9,4,n/a,n/a,0,n/a,n/a
"org.apache.log4j.rolling.helper.Action.isComplete()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.rolling.helper.ActionBase.ActionBase()",0,4,n/a,5,0,0,0,1
"org.apache.log4j.rolling.helper.ActionBase.close()",0,4,n/a,6,0,0,1,1
"org.apache.log4j.rolling.helper.ActionBase.execute()",n/a,10,4,n/a,n/a,0,n/a,n/a
"org.apache.log4j.rolling.helper.ActionBase.isComplete()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.rolling.helper.ActionBase.reportException(Exception)",0,1,n/a,7,0,1,0,1
"org.apache.log4j.rolling.helper.ActionBase.run()",2,0,n/a,14,2,0,6,3
"org.apache.log4j.rolling.helper.CompositeAction.CompositeAction(List,boolean,ULogger)",2,0,n/a,14,0,3,4,1
"org.apache.log4j.rolling.helper.CompositeAction.execute()",2,11,n/a,32,4,0,20,8
"org.apache.log4j.rolling.helper.CompositeAction.run()",2,0,n/a,12,2,0,4,3
"org.apache.log4j.rolling.helper.FileRenameAction.FileRenameAction(File,File,boolean)",0,3,n/a,13,0,3,3,1
"org.apache.log4j.rolling.helper.FileRenameAction.execute()",1,10,n/a,8,0,0,1,1
"org.apache.log4j.rolling.helper.FileRenameAction.execute(File,File,boolean)",3,1,n/a,14,1,3,3,3
"org.apache.log4j.rolling.helper.GZCompressAction.GZCompressAction(File,File,boolean,ULogger)",2,2,n/a,23,1,4,8,3
"org.apache.log4j.rolling.helper.GZCompressAction.execute()",1,10,n/a,8,0,0,1,1
"org.apache.log4j.rolling.helper.GZCompressAction.execute(File,File,boolean,ULogger)",11,3,n/a,34,3,4,15,6
"org.apache.log4j.rolling.helper.GZCompressAction.reportException(Exception)",2,1,n/a,10,1,1,2,2
"org.apache.log4j.rolling.helper.ZipCompressAction.ZipCompressAction(File,File,boolean,ULogger)",2,2,n/a,23,1,4,8,3
"org.apache.log4j.rolling.helper.ZipCompressAction.execute()",1,10,n/a,8,0,0,1,1
"org.apache.log4j.rolling.helper.ZipCompressAction.execute(File,File,boolean,ULogger)",14,1,n/a,36,3,4,17,6
"org.apache.log4j.rolling.helper.ZipCompressAction.reportException(Exception)",2,1,n/a,10,1,1,2,2
"org.apache.log4j.rule.AbstractRule.addPropertyChangeListener(PropertyChangeListener)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.rule.AbstractRule.firePropertyChange(PropertyChangeEvent)",1,0,n/a,6,0,1,1,1
"org.apache.log4j.rule.AbstractRule.firePropertyChange(String,Object,Object)",1,0,n/a,4,0,3,1,1
"org.apache.log4j.rule.AbstractRule.removePropertyChangeListener(PropertyChangeListener)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.rule.AndRule.AndRule(Rule,Rule)",0,2,n/a,4,0,2,2,1
"org.apache.log4j.rule.AndRule.evaluate(LoggingEvent)",2,12,n/a,3,0,1,1,2
"org.apache.log4j.rule.AndRule.getRule(Rule,Rule)",1,0,n/a,3,0,2,1,1
"org.apache.log4j.rule.AndRule.getRule(Stack)",7,1,n/a,13,1,1,9,4
"org.apache.log4j.rule.ColorRule.ColorRule(String,Rule,Color,Color)",0,0,n/a,6,0,4,4,1
"org.apache.log4j.rule.ColorRule.evaluate(LoggingEvent)",1,12,n/a,3,0,1,1,2
"org.apache.log4j.rule.ColorRule.getBackgroundColor()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.rule.ColorRule.getExpression()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.rule.ColorRule.getForegroundColor()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.rule.ColorRule.getRule()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.rule.ColorRule.toString()",0,62,n/a,3,0,0,1,1
"org.apache.log4j.rule.EqualsRule.EqualsRule(String,String)",2,1,n/a,8,1,2,4,2
"org.apache.log4j.rule.EqualsRule.evaluate(LoggingEvent)",3,12,n/a,4,0,1,2,2
"org.apache.log4j.rule.EqualsRule.getRule(Stack)",8,1,n/a,10,1,1,5,2
"org.apache.log4j.rule.EqualsRule.getRule(String,String)",5,1,n/a,9,1,2,5,3
"org.apache.log4j.rule.ExistsRule.ExistsRule(String)",2,2,n/a,7,1,1,3,2
"org.apache.log4j.rule.ExistsRule.evaluate(LoggingEvent)",3,12,n/a,4,0,1,2,3
"org.apache.log4j.rule.ExistsRule.getRule(Stack)",6,1,n/a,8,1,1,3,2
"org.apache.log4j.rule.ExistsRule.getRule(String)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.rule.ExpressionRule.ExpressionRule(Rule)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.rule.ExpressionRule.PostFixExpressionCompiler.compileExpression(String)",36,1,n/a,51,3,1,30,18
"org.apache.log4j.rule.ExpressionRule.evaluate(LoggingEvent)",1,12,n/a,3,0,1,1,1
"org.apache.log4j.rule.ExpressionRule.getRule(String)",1,3,n/a,3,0,1,1,1
"org.apache.log4j.rule.ExpressionRule.getRule(String,boolean)",3,3,n/a,6,1,2,3,2
"org.apache.log4j.rule.ExpressionRule.toString()",1,62,n/a,3,0,0,1,1
"org.apache.log4j.rule.InFixToPostFix.InFixToPostFix()",36,1,n/a,28,0,0,24,1
"org.apache.log4j.rule.InFixToPostFix.convert(String)",2,1,n/a,3,0,1,1,1
"org.apache.log4j.rule.InFixToPostFix.infixToPostFix(StringTokenizer)",44,2,n/a,62,6,1,37,16
"org.apache.log4j.rule.InFixToPostFix.isOperand(String)",2,1,n/a,4,0,1,2,1
"org.apache.log4j.rule.InFixToPostFix.precedes(String,String)",10,2,n/a,14,1,2,10,3
"org.apache.log4j.rule.InequalityRule.InequalityRule(String,String,String)",2,1,n/a,9,1,3,5,2
"org.apache.log4j.rule.InequalityRule.evaluate(LoggingEvent)",10,12,n/a,26,1,1,18,7
"org.apache.log4j.rule.InequalityRule.getRule(String,Stack)",8,4,n/a,8,1,2,5,2
"org.apache.log4j.rule.InequalityRule.getRule(String,String,String)",5,1,n/a,10,1,3,5,3
"org.apache.log4j.rule.LevelEqualsRule.LevelEqualsRule(Level)",0,1,n/a,3,0,1,1,1
"org.apache.log4j.rule.LevelEqualsRule.evaluate(LoggingEvent)",2,12,n/a,3,0,1,1,1
"org.apache.log4j.rule.LevelEqualsRule.getRule(String)",3,1,n/a,7,1,1,4,2
"org.apache.log4j.rule.LevelEqualsRule.readObject(ObjectInputStream)",4,0,n/a,16,1,1,5,2
"org.apache.log4j.rule.LevelEqualsRule.writeObject(ObjectOutputStream)",3,0,n/a,11,0,1,2,1
"org.apache.log4j.rule.LevelInequalityRule.GreaterThanEqualsRule.GreaterThanEqualsRule(Level)",1,1,n/a,3,0,1,1,1
"org.apache.log4j.rule.LevelInequalityRule.GreaterThanEqualsRule.evaluate(LoggingEvent)",2,12,n/a,3,0,1,1,1
"org.apache.log4j.rule.LevelInequalityRule.GreaterThanRule.GreaterThanRule(Level)",1,1,n/a,3,0,1,1,1
"org.apache.log4j.rule.LevelInequalityRule.GreaterThanRule.evaluate(LoggingEvent)",2,12,n/a,3,0,1,1,1
"org.apache.log4j.rule.LevelInequalityRule.LessThanEqualsRule.LessThanEqualsRule(Level)",1,1,n/a,3,0,1,1,1
"org.apache.log4j.rule.LevelInequalityRule.LessThanEqualsRule.evaluate(LoggingEvent)",2,12,n/a,3,0,1,1,1
"org.apache.log4j.rule.LevelInequalityRule.LessThanRule.LessThanRule(Level)",1,1,n/a,3,0,1,1,1
"org.apache.log4j.rule.LevelInequalityRule.LessThanRule.evaluate(LoggingEvent)",2,12,n/a,3,0,1,1,1
"org.apache.log4j.rule.LevelInequalityRule.LevelInequalityRule()",0,0,n/a,2,0,0,0,1
"org.apache.log4j.rule.LevelInequalityRule.getRule(String,String)",11,1,n/a,27,1,2,15,7
"org.apache.log4j.rule.LikeRule.LikeRule(String,Pattern)",2,1,n/a,7,1,2,4,2
"org.apache.log4j.rule.LikeRule.evaluate(LoggingEvent)",3,12,n/a,4,0,1,2,3
"org.apache.log4j.rule.LikeRule.getRule(Stack)",8,0,n/a,8,1,1,5,2
"org.apache.log4j.rule.LikeRule.getRule(String,String)",5,1,n/a,10,1,2,6,2
"org.apache.log4j.rule.LikeRule.readObject(ObjectInputStream)",7,0,n/a,20,1,1,7,2
"org.apache.log4j.rule.LikeRule.writeObject(ObjectOutputStream)",3,0,n/a,12,0,1,2,1
"org.apache.log4j.rule.NotEqualsRule.NotEqualsRule(String,String)",2,2,n/a,8,1,2,4,2
"org.apache.log4j.rule.NotEqualsRule.evaluate(LoggingEvent)",3,12,n/a,4,0,1,2,2
"org.apache.log4j.rule.NotEqualsRule.getRule(Stack)",8,1,n/a,10,1,1,5,2
"org.apache.log4j.rule.NotEqualsRule.getRule(String,String)",1,0,n/a,3,0,2,1,1
"org.apache.log4j.rule.NotRule.NotRule(Rule)",0,2,n/a,3,0,1,1,1
"org.apache.log4j.rule.NotRule.evaluate(LoggingEvent)",1,12,n/a,3,0,1,1,1
"org.apache.log4j.rule.NotRule.getRule(Rule)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.rule.NotRule.getRule(Stack)",6,1,n/a,11,1,1,7,3
"org.apache.log4j.rule.OrRule.OrRule(Rule,Rule)",0,2,n/a,4,0,2,2,1
"org.apache.log4j.rule.OrRule.evaluate(LoggingEvent)",2,12,n/a,3,0,1,1,2
"org.apache.log4j.rule.OrRule.getRule(Rule,Rule)",1,0,n/a,3,0,2,1,1
"org.apache.log4j.rule.OrRule.getRule(Stack)",7,1,n/a,13,1,1,9,4
"org.apache.log4j.rule.PartialTextMatchRule.PartialTextMatchRule(String,String)",2,2,n/a,8,1,2,4,2
"org.apache.log4j.rule.PartialTextMatchRule.evaluate(LoggingEvent)",5,12,n/a,7,0,1,5,3
"org.apache.log4j.rule.PartialTextMatchRule.getRule(Stack)",8,1,n/a,10,1,1,5,2
"org.apache.log4j.rule.PartialTextMatchRule.getRule(String,String)",1,0,n/a,3,0,2,1,1
"org.apache.log4j.rule.Rule.addPropertyChangeListener(PropertyChangeListener)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.rule.Rule.evaluate(LoggingEvent)",n/a,12,18,n/a,n/a,1,n/a,n/a
"org.apache.log4j.rule.Rule.removePropertyChangeListener(PropertyChangeListener)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.rule.RuleFactory.RuleFactory()",0,1,n/a,1,0,0,0,1
"org.apache.log4j.rule.RuleFactory.getInstance()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.rule.RuleFactory.getRule(String,Stack)",28,2,n/a,50,2,2,29,18
"org.apache.log4j.rule.RuleFactory.isRule(String)",2,1,n/a,6,0,1,4,2
"org.apache.log4j.rule.TimestampEqualsRule.TimestampEqualsRule(String)",3,1,n/a,8,1,1,3,2
"org.apache.log4j.rule.TimestampEqualsRule.evaluate(LoggingEvent)",3,12,n/a,4,0,1,2,1
"org.apache.log4j.rule.TimestampEqualsRule.getRule(String)",1,1,n/a,3,0,1,1,1
"org.apache.log4j.rule.TimestampEqualsRule.readObject(ObjectInputStream)",1,0,n/a,12,0,1,1,1
"org.apache.log4j.rule.TimestampEqualsRule.writeObject(ObjectOutputStream)",1,0,n/a,11,0,1,1,1
"org.apache.log4j.rule.TimestampInequalityRule.TimestampInequalityRule(String,String)",3,1,n/a,9,1,2,4,2
"org.apache.log4j.rule.TimestampInequalityRule.evaluate(LoggingEvent)",7,12,n/a,16,1,1,13,5
"org.apache.log4j.rule.TimestampInequalityRule.getRule(String,String)",1,1,n/a,3,0,2,1,1
"org.apache.log4j.rule.TimestampInequalityRule.readObject(ObjectInputStream)",2,0,n/a,13,0,1,2,1
"org.apache.log4j.rule.TimestampInequalityRule.writeObject(ObjectOutputStream)",2,0,n/a,12,0,1,2,1
"org.apache.log4j.scheduler.Job.execute()",n/a,2,5,n/a,n/a,0,n/a,n/a
"org.apache.log4j.scheduler.ScheduledJobEntry.ScheduledJobEntry(Job,long)",1,1,n/a,3,0,2,1,1
"org.apache.log4j.scheduler.ScheduledJobEntry.ScheduledJobEntry(Job,long,long)",0,2,n/a,5,0,3,3,1
"org.apache.log4j.scheduler.Scheduler.Scheduler()",1,7,n/a,3,0,0,1,1
"org.apache.log4j.scheduler.Scheduler.changePeriod(Job,long)",3,0,n/a,20,1,2,8,3
"org.apache.log4j.scheduler.Scheduler.delete(Job)",4,5,n/a,27,2,1,11,5
"org.apache.log4j.scheduler.Scheduler.executeInABox(Job)",3,1,n/a,11,1,1,4,2
"org.apache.log4j.scheduler.Scheduler.findIndex(Job)",2,2,n/a,21,2,1,12,4
"org.apache.log4j.scheduler.Scheduler.linger()",2,1,n/a,8,1,0,4,4
"org.apache.log4j.scheduler.Scheduler.linger(long)",1,1,n/a,7,1,1,3,2
"org.apache.log4j.scheduler.Scheduler.run()",10,0,n/a,24,4,0,15,5
"org.apache.log4j.scheduler.Scheduler.schedule(Job,long)",2,5,n/a,7,0,2,1,1
"org.apache.log4j.scheduler.Scheduler.schedule(Job,long,long)",2,6,n/a,10,0,3,1,1
"org.apache.log4j.scheduler.Scheduler.schedule(ScheduledJobEntry)",4,3,n/a,21,2,1,13,5
"org.apache.log4j.scheduler.Scheduler.shutdown()",0,3,n/a,3,0,0,1,1
"org.apache.log4j.selector.ContextJNDISelector.ContextJNDISelector()",2,1,n/a,6,0,0,1,1
"org.apache.log4j.selector.ContextJNDISelector.detachRepository(String)",1,0,n/a,9,0,1,1,1
"org.apache.log4j.selector.ContextJNDISelector.getLoggerRepository()",12,11,n/a,44,3,0,18,6
"org.apache.log4j.selector.ContextJNDISelector.getLoggerRepository(String)",2,0,n/a,13,1,1,3,2
"org.apache.log4j.selector.servlet.ContextDetachingSCL.contextDestroyed(ServletContextEvent)",12,0,n/a,35,4,1,15,6
"org.apache.log4j.selector.servlet.ContextDetachingSCL.contextInitialized(ServletContextEvent)",0,0,n/a,5,0,1,0,1
"org.apache.log4j.spi.AppenderAttachable.addAppender(Appender)",n/a,1,3,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.AppenderAttachable.getAllAppenders()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.AppenderAttachable.getAppender(String)",n/a,0,3,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.AppenderAttachable.isAttached(Appender)",n/a,0,3,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.AppenderAttachable.removeAllAppenders()",n/a,0,3,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.AppenderAttachable.removeAppender(Appender)",n/a,0,3,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.AppenderAttachable.removeAppender(String)",n/a,0,3,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.Component.setLoggerRepository(LoggerRepository)",n/a,3,3,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.ComponentBase.getLogger()",6,366,n/a,25,2,0,6,5
"org.apache.log4j.spi.ComponentBase.getLoggerRepository()",0,2,n/a,8,0,0,1,1
"org.apache.log4j.spi.ComponentBase.getNonFloodingLogger()",1,7,n/a,13,1,0,3,2
"org.apache.log4j.spi.ComponentBase.resetErrorCount()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.spi.ComponentBase.setLoggerRepository(LoggerRepository)",1,14,n/a,11,1,1,4,3
"org.apache.log4j.spi.Configurator.doConfigure(URL,LoggerRepository)",n/a,2,2,n/a,n/a,2,n/a,n/a
"org.apache.log4j.spi.ConfiguratorEx.doConfigure(InputStream,LoggerRepository)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.apache.log4j.spi.Decoder.decode(String)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.Decoder.decode(URL)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.Decoder.decodeEvents(String)",n/a,4,2,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.Decoder.setAdditionalProperties(Map)",n/a,0,2,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.DefaultRepositorySelector.DefaultRepositorySelector(LoggerRepository)",1,3,n/a,9,0,1,3,2
"org.apache.log4j.spi.DefaultRepositorySelector.detachRepository(String)",0,1,n/a,9,0,1,1,1
"org.apache.log4j.spi.DefaultRepositorySelector.getLoggerRepository()",0,11,n/a,3,0,0,1,1
"org.apache.log4j.spi.ErrorHandler.error(String)",n/a,2,4,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.ErrorHandler.error(String,Exception,int)",n/a,6,4,n/a,n/a,3,n/a,n/a
"org.apache.log4j.spi.ErrorHandler.error(String,Exception,int,LoggingEvent)",n/a,0,4,n/a,n/a,4,n/a,n/a
"org.apache.log4j.spi.ErrorHandler.setAppender(Appender)",n/a,0,4,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.ErrorHandler.setBackupAppender(Appender)",n/a,0,4,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.ErrorHandler.setLogger(Logger)",n/a,0,4,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.ErrorItem.ErrorItem(String)",1,27,n/a,3,0,1,1,1
"org.apache.log4j.spi.ErrorItem.ErrorItem(String,Exception)",0,17,n/a,4,0,2,2,1
"org.apache.log4j.spi.ErrorItem.dump()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.spi.ErrorItem.dump(PrintStream)",2,2,n/a,15,1,1,6,3
"org.apache.log4j.spi.ErrorItem.getColNumber()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.spi.ErrorItem.getException()",0,1,n/a,3,0,0,1,1
"org.apache.log4j.spi.ErrorItem.getLineNumber()",0,0,n/a,3,0,0,1,1
"org.apache.log4j.spi.ErrorItem.getMessage()",0,6,n/a,3,0,0,1,1
"org.apache.log4j.spi.ErrorItem.setColNumber(int)",0,2,n/a,3,0,1,1,1
"org.apache.log4j.spi.ErrorItem.setException(Throwable)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.spi.ErrorItem.setLineNumber(int)",0,2,n/a,3,0,1,1,1
"org.apache.log4j.spi.ErrorItem.setMessage(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.spi.ErrorItem.toString()",0,62,n/a,11,1,0,6,3
"org.apache.log4j.spi.Filter.activateOptions()",0,14,n/a,6,0,0,0,1
"org.apache.log4j.spi.Filter.decide(LoggingEvent)",n/a,6,10,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.Filter.getNext()",0,7,n/a,6,0,0,1,1
"org.apache.log4j.spi.Filter.setNext(Filter)",0,5,n/a,6,0,1,1,1
"org.apache.log4j.spi.HierarchyEventListener.addAppenderEvent(Category,Appender)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.log4j.spi.HierarchyEventListener.removeAppenderEvent(Category,Appender)",n/a,1,0,n/a,n/a,2,n/a,n/a
"org.apache.log4j.spi.HierarchyEventListenerAdapter.HierarchyEventListenerAdapter(HierarchyEventListener)",1,1,n/a,12,1,1,3,2
"org.apache.log4j.spi.HierarchyEventListenerAdapter.appenderAddedEvent(Logger,Appender)",1,1,n/a,7,0,2,1,1
"org.apache.log4j.spi.HierarchyEventListenerAdapter.appenderRemovedEvent(Logger,Appender)",1,1,n/a,8,0,2,1,1
"org.apache.log4j.spi.HierarchyEventListenerAdapter.levelChangedEvent(Logger)",0,1,n/a,5,0,1,0,1
"org.apache.log4j.spi.LocationInfo.LocationInfo(String,String,String,String)",0,7,n/a,7,0,4,4,1
"org.apache.log4j.spi.LocationInfo.LocationInfo(Throwable,String)",3,2,n/a,26,1,2,5,3
"org.apache.log4j.spi.LocationInfo.equals(Object)",12,8,n/a,28,1,1,14,7
"org.apache.log4j.spi.LocationInfo.getClassName()",0,12,n/a,7,0,0,1,1
"org.apache.log4j.spi.LocationInfo.getFileName()",0,10,n/a,7,0,0,1,1
"org.apache.log4j.spi.LocationInfo.getFullInfo()",4,1,n/a,11,1,0,3,2
"org.apache.log4j.spi.LocationInfo.getLineNumber()",0,11,n/a,7,0,0,1,1
"org.apache.log4j.spi.LocationInfo.getMethodName()",0,11,n/a,6,0,0,1,1
"org.apache.log4j.spi.LocationInfo.hashCode()",4,5,n/a,3,0,0,1,1
"org.apache.log4j.spi.LocationInfo.toString()",4,62,n/a,3,0,0,1,1
"org.apache.log4j.spi.LoggerEventListener.appenderAddedEvent(Logger,Appender)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.apache.log4j.spi.LoggerEventListener.appenderRemovedEvent(Logger,Appender)",n/a,1,2,n/a,n/a,2,n/a,n/a
"org.apache.log4j.spi.LoggerEventListener.levelChangedEvent(Logger)",n/a,1,2,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerFactory.makeNewLoggerInstance(String)",n/a,3,3,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepository.addHierarchyEventListener(HierarchyEventListener)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepository.emitNoAppenderWarning(Category)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepository.exists(String)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepository.fireAddAppenderEvent(Category,Appender)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.apache.log4j.spi.LoggerRepository.getCurrentCategories()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.LoggerRepository.getCurrentLoggers()",n/a,4,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.LoggerRepository.getLogger(String)",n/a,21,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.apache.log4j.spi.LoggerRepository.getRootLogger()",n/a,8,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.LoggerRepository.getThreshold()",n/a,3,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.LoggerRepository.isDisabled(int)",n/a,38,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepository.resetConfiguration()",n/a,19,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.LoggerRepository.setThreshold(Level)",n/a,8,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepository.setThreshold(String)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepository.shutdown()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEventListener.configurationChangedEvent(LoggerRepository)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEventListener.configurationResetEvent(LoggerRepository)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEventListener.shutdownEvent(LoggerRepository)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.addErrorItem(ErrorItem)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.addLoggerEventListener(LoggerEventListener)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.addLoggerRepositoryEventListener(LoggerRepositoryEventListener)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.fireConfigurationChangedEvent()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.fireLevelChangedEvent(Logger)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.fireRemoveAppenderEvent(Category,Appender)",n/a,0,1,n/a,n/a,2,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.getErrorList()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.getLoggerFactory()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.getName()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.getObject(String)",n/a,4,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.getPluginRegistry()",n/a,8,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.getProperties()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.getProperty(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.getScheduler()",n/a,6,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.isPristine()",n/a,1,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.putObject(String,Object)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.removeLoggerEventListener(LoggerEventListener)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.removeLoggerRepositoryEventListener(LoggerRepositoryEventListener)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.setLoggerFactory(LoggerFactory)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.setName(String)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.setPristine(boolean)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.LoggerRepositoryEx.setProperty(String,String)",n/a,1,1,n/a,n/a,2,n/a,n/a
"org.apache.log4j.spi.LoggingEvent.LoggingEvent()",0,9,n/a,8,0,0,0,1
"org.apache.log4j.spi.LoggingEvent.LoggingEvent(String,Category,Priority,Object,Throwable)",2,23,n/a,16,0,5,1,1
"org.apache.log4j.spi.LoggingEvent.LoggingEvent(String,Category,long,Priority,Object,Throwable)",2,2,n/a,32,1,6,10,2
"org.apache.log4j.spi.LoggingEvent.equals(Object)",2,8,n/a,35,2,1,15,9
"org.apache.log4j.spi.LoggingEvent.getFQNOfLoggerClass()",0,1,n/a,7,0,0,1,1
"org.apache.log4j.spi.LoggingEvent.getLevel()",0,45,n/a,6,0,0,1,1
"org.apache.log4j.spi.LoggingEvent.getLocationInformation()",2,23,n/a,16,1,0,3,3
"org.apache.log4j.spi.LoggingEvent.getLogger()",0,3,n/a,12,1,0,3,2
"org.apache.log4j.spi.LoggingEvent.getLoggerName()",0,17,n/a,6,0,0,1,1
"org.apache.log4j.spi.LoggingEvent.getMDC(String)",2,1,n/a,24,2,1,5,3
"org.apache.log4j.spi.LoggingEvent.getMDCCopy()",1,0,n/a,10,0,0,1,1
"org.apache.log4j.spi.LoggingEvent.getMessage()",1,25,n/a,19,1,0,3,2
"org.apache.log4j.spi.LoggingEvent.getNDC()",1,8,n/a,13,1,0,4,2
"org.apache.log4j.spi.LoggingEvent.getProperties()",0,13,n/a,8,0,0,1,1
"org.apache.log4j.spi.LoggingEvent.getProperty(String)",5,12,n/a,30,2,1,13,6
"org.apache.log4j.spi.LoggingEvent.getPropertyKeySet()",3,4,n/a,13,0,0,2,1
"org.apache.log4j.spi.LoggingEvent.getRenderedMessage()",4,10,n/a,24,3,0,9,5
"org.apache.log4j.spi.LoggingEvent.getSequenceCount()",0,1,n/a,7,0,0,1,1
"org.apache.log4j.spi.LoggingEvent.getSequenceNumber()",0,5,n/a,7,0,0,1,1
"org.apache.log4j.spi.LoggingEvent.getStartTime()",0,3,n/a,7,0,0,1,1
"org.apache.log4j.spi.LoggingEvent.getThreadName()",2,12,n/a,9,1,0,3,2
"org.apache.log4j.spi.LoggingEvent.getThrowableInformation()",0,2,n/a,14,0,0,1,1
"org.apache.log4j.spi.LoggingEvent.getThrowableStrRep()",1,14,n/a,10,1,0,3,2
"org.apache.log4j.spi.LoggingEvent.getTimeStamp()",0,14,n/a,9,0,0,1,1
"org.apache.log4j.spi.LoggingEvent.hashCode()",0,5,n/a,8,0,0,1,1
"org.apache.log4j.spi.LoggingEvent.initializeProperties()",6,4,n/a,23,3,0,9,5
"org.apache.log4j.spi.LoggingEvent.locationInformationExists()",0,4,n/a,7,0,0,1,1
"org.apache.log4j.spi.LoggingEvent.prepareForDeferredProcessing()",5,10,n/a,25,1,0,6,2
"org.apache.log4j.spi.LoggingEvent.readLevel(ObjectInputStream)",10,1,n/a,28,3,1,13,4
"org.apache.log4j.spi.LoggingEvent.readObject(ObjectInputStream)",2,0,n/a,9,1,1,4,2
"org.apache.log4j.spi.LoggingEvent.setFQNOfLoggerClass(String)",0,0,n/a,9,0,1,1,1
"org.apache.log4j.spi.LoggingEvent.setLevel(Level)",1,7,n/a,13,1,1,3,2
"org.apache.log4j.spi.LoggingEvent.setLocationInformation(LocationInfo)",1,8,n/a,10,1,1,3,2
"org.apache.log4j.spi.LoggingEvent.setLogger(Logger)",5,4,n/a,20,1,1,6,3
"org.apache.log4j.spi.LoggingEvent.setLoggerName(String)",1,2,n/a,15,1,1,3,2
"org.apache.log4j.spi.LoggingEvent.setMessage(Object)",2,5,n/a,15,1,1,5,3
"org.apache.log4j.spi.LoggingEvent.setNDC(String)",1,5,n/a,12,1,1,4,2
"org.apache.log4j.spi.LoggingEvent.setProperties(Hashtable)",0,7,n/a,6,0,1,1,1
"org.apache.log4j.spi.LoggingEvent.setProperty(String,String)",3,20,n/a,14,1,2,5,3
"org.apache.log4j.spi.LoggingEvent.setRenderedMessage(String)",1,3,n/a,13,1,1,3,2
"org.apache.log4j.spi.LoggingEvent.setSequenceNumber(long)",0,1,n/a,7,0,1,1,1
"org.apache.log4j.spi.LoggingEvent.setThreadName(String)",1,5,n/a,12,1,1,3,2
"org.apache.log4j.spi.LoggingEvent.setThrowableInformation(ThrowableInformation)",1,5,n/a,11,1,1,3,2
"org.apache.log4j.spi.LoggingEvent.setTimeStamp(long)",0,6,n/a,8,0,1,1,1
"org.apache.log4j.spi.LoggingEvent.writeLevel(ObjectOutputStream)",6,1,n/a,13,1,1,5,2
"org.apache.log4j.spi.LoggingEvent.writeObject(ObjectOutputStream)",3,0,n/a,7,0,1,3,1
"org.apache.log4j.spi.LoggingEventFieldResolver.LoggingEventFieldResolver()",12,1,n/a,14,0,0,12,1
"org.apache.log4j.spi.LoggingEventFieldResolver.applyFields(String,LoggingEvent)",12,0,n/a,21,2,2,14,6
"org.apache.log4j.spi.LoggingEventFieldResolver.getExceptionMessage(String[])",3,1,n/a,7,1,1,6,2
"org.apache.log4j.spi.LoggingEventFieldResolver.getInstance()",0,8,n/a,3,0,0,1,1
"org.apache.log4j.spi.LoggingEventFieldResolver.getValue(String,LoggingEvent)",32,9,n/a,37,1,2,31,21
"org.apache.log4j.spi.LoggingEventFieldResolver.isField(String)",4,7,n/a,6,1,1,3,3
"org.apache.log4j.spi.NOPULogger.NOPULogger()",0,1,n/a,6,0,0,0,1
"org.apache.log4j.spi.NOPULogger.debug(Object)",0,86,n/a,6,0,1,0,1
"org.apache.log4j.spi.NOPULogger.debug(Object,Object)",0,23,n/a,6,0,2,0,1
"org.apache.log4j.spi.NOPULogger.debug(Object,Throwable)",0,0,n/a,6,0,2,0,1
"org.apache.log4j.spi.NOPULogger.debug(String,Object,Object)",0,18,n/a,6,0,3,0,1
"org.apache.log4j.spi.NOPULogger.error(Object)",0,34,n/a,6,0,1,0,1
"org.apache.log4j.spi.NOPULogger.error(Object,Object)",0,14,n/a,6,0,2,0,1
"org.apache.log4j.spi.NOPULogger.error(Object,Throwable)",0,70,n/a,6,0,2,0,1
"org.apache.log4j.spi.NOPULogger.error(String,Object,Object)",0,0,n/a,6,0,3,0,1
"org.apache.log4j.spi.NOPULogger.getLogger(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.spi.NOPULogger.info(Object)",0,18,n/a,6,0,1,0,1
"org.apache.log4j.spi.NOPULogger.info(Object,Object)",0,7,n/a,6,0,2,0,1
"org.apache.log4j.spi.NOPULogger.info(Object,Throwable)",0,6,n/a,6,0,2,0,1
"org.apache.log4j.spi.NOPULogger.info(String,Object,Object)",0,0,n/a,6,0,3,0,1
"org.apache.log4j.spi.NOPULogger.isDebugEnabled()",0,2,n/a,7,0,0,1,1
"org.apache.log4j.spi.NOPULogger.isErrorEnabled()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.spi.NOPULogger.isInfoEnabled()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.spi.NOPULogger.isWarnEnabled()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.spi.NOPULogger.warn(Object)",0,61,n/a,6,0,1,0,1
"org.apache.log4j.spi.NOPULogger.warn(Object,Object)",0,14,n/a,6,0,2,0,1
"org.apache.log4j.spi.NOPULogger.warn(Object,Throwable)",0,37,n/a,6,0,2,0,1
"org.apache.log4j.spi.NOPULogger.warn(String,Object,Object)",0,0,n/a,6,0,3,0,1
"org.apache.log4j.spi.NullWriter.close()",0,1,n/a,3,0,0,0,1
"org.apache.log4j.spi.NullWriter.flush()",0,4,n/a,3,0,0,0,1
"org.apache.log4j.spi.NullWriter.write(char[],int,int)",0,0,n/a,3,0,3,0,1
"org.apache.log4j.spi.OptionHandler.activateOptions()",n/a,13,66,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.RendererSupport.getRendererMap()",n/a,2,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.RendererSupport.setRenderer(Class,ObjectRenderer)",n/a,2,1,n/a,n/a,2,n/a,n/a
"org.apache.log4j.spi.RepositorySelector.getLoggerRepository()",n/a,11,3,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.RepositorySelectorEx.detachRepository(String)",n/a,1,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.RootCategory.RootCategory(Level)",2,0,n/a,8,0,1,2,1
"org.apache.log4j.spi.RootCategory.getChainedLevel()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.spi.RootCategory.setLevel(Level)",3,43,n/a,15,2,1,4,3
"org.apache.log4j.spi.RootCategory.setPriority(Level)",1,0,n/a,5,0,1,1,1
"org.apache.log4j.spi.RootLogger.RootLogger()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.spi.RootLogger.RootLogger(Level)",2,9,n/a,9,0,1,2,1
"org.apache.log4j.spi.RootLogger.getChainedLevel()",0,1,n/a,7,0,0,1,1
"org.apache.log4j.spi.RootLogger.setLevel(Level)",3,42,n/a,15,2,1,4,3
"org.apache.log4j.spi.SimpleULogger.SimpleULogger(String)",0,1,n/a,6,0,1,1,1
"org.apache.log4j.spi.SimpleULogger.debug(Object)",0,86,n/a,6,0,1,0,1
"org.apache.log4j.spi.SimpleULogger.debug(Object,Object)",0,23,n/a,6,0,2,0,1
"org.apache.log4j.spi.SimpleULogger.debug(Object,Throwable)",0,0,n/a,6,0,2,0,1
"org.apache.log4j.spi.SimpleULogger.debug(String,Object,Object)",0,18,n/a,6,0,3,0,1
"org.apache.log4j.spi.SimpleULogger.error(Object)",2,34,n/a,7,0,1,1,1
"org.apache.log4j.spi.SimpleULogger.error(Object,Object)",1,14,n/a,7,0,2,1,1
"org.apache.log4j.spi.SimpleULogger.error(Object,Throwable)",2,70,n/a,6,0,2,1,1
"org.apache.log4j.spi.SimpleULogger.error(String,Object,Object)",1,0,n/a,7,0,3,1,1
"org.apache.log4j.spi.SimpleULogger.getLogger(String)",1,3,n/a,9,0,1,1,1
"org.apache.log4j.spi.SimpleULogger.info(Object)",2,18,n/a,7,0,1,1,1
"org.apache.log4j.spi.SimpleULogger.info(Object,Object)",1,7,n/a,7,0,2,1,1
"org.apache.log4j.spi.SimpleULogger.info(Object,Throwable)",2,6,n/a,6,0,2,1,1
"org.apache.log4j.spi.SimpleULogger.info(String,Object,Object)",1,0,n/a,7,0,3,1,1
"org.apache.log4j.spi.SimpleULogger.isDebugEnabled()",0,2,n/a,6,0,0,1,1
"org.apache.log4j.spi.SimpleULogger.isErrorEnabled()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.spi.SimpleULogger.isInfoEnabled()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.spi.SimpleULogger.isWarnEnabled()",0,0,n/a,6,0,0,1,1
"org.apache.log4j.spi.SimpleULogger.log(String,String,Throwable)",18,8,n/a,27,1,3,16,2
"org.apache.log4j.spi.SimpleULogger.parameterizedLog(String,Object,Object,Object)",4,6,n/a,22,1,4,5,2
"org.apache.log4j.spi.SimpleULogger.warn(Object)",2,61,n/a,7,0,1,1,1
"org.apache.log4j.spi.SimpleULogger.warn(Object,Object)",1,14,n/a,7,0,2,1,1
"org.apache.log4j.spi.SimpleULogger.warn(Object,Throwable)",2,37,n/a,6,0,2,1,1
"org.apache.log4j.spi.SimpleULogger.warn(String,Object,Object)",1,0,n/a,7,0,3,1,1
"org.apache.log4j.spi.Thresholdable.getThreshold()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.spi.Thresholdable.isAsSevereAsThreshold(Level)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.Thresholdable.setThreshold(Level)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.ThrowableInformation.ThrowableInformation(String[])",0,5,n/a,3,0,1,1,1
"org.apache.log4j.spi.ThrowableInformation.ThrowableInformation(Throwable)",3,3,n/a,6,0,1,4,1
"org.apache.log4j.spi.ThrowableInformation.equals(Object)",1,10,n/a,27,2,1,18,8
"org.apache.log4j.spi.ThrowableInformation.extractStringRep(Throwable,VectorWriter)",16,2,n/a,38,4,2,18,12
"org.apache.log4j.spi.ThrowableInformation.getThrowable()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.spi.ThrowableInformation.getThrowableStrRep()",1,2,n/a,7,0,0,1,1
"org.apache.log4j.spi.TriggeringEventEvaluator.isTriggeringEvent(LoggingEvent)",n/a,2,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.spi.VectorWriter.VectorWriter()",3,1,n/a,4,0,0,2,1
"org.apache.log4j.spi.VectorWriter.print(Object)",2,0,n/a,3,0,1,1,1
"org.apache.log4j.spi.VectorWriter.print(String)",1,4,n/a,3,0,1,1,1
"org.apache.log4j.spi.VectorWriter.print(char[])",2,0,n/a,3,0,1,1,1
"org.apache.log4j.spi.VectorWriter.println(Object)",2,0,n/a,3,0,1,1,1
"org.apache.log4j.spi.VectorWriter.println(String)",1,6,n/a,3,0,1,1,1
"org.apache.log4j.spi.VectorWriter.println(char[])",2,0,n/a,5,0,1,1,1
"org.apache.log4j.spi.VectorWriter.toStringArray()",2,1,n/a,8,1,0,7,2
"org.apache.log4j.spi.VectorWriter.write(String)",1,9,n/a,3,0,1,1,1
"org.apache.log4j.spi.VectorWriter.write(String,int,int)",2,0,n/a,3,0,3,1,1
"org.apache.log4j.spi.VectorWriter.write(char[])",2,0,n/a,3,0,1,1,1
"org.apache.log4j.spi.VectorWriter.write(char[],int,int)",2,0,n/a,3,0,3,1,1
"org.apache.log4j.spi.location.LegacyExtractor.LegacyExtractor()",0,0,n/a,2,0,0,0,1
"org.apache.log4j.spi.location.LegacyExtractor.extract(LocationInfo,Throwable,String)",17,1,n/a,55,2,3,29,8
"org.apache.log4j.spi.location.LegacyExtractor.setClassName(LocationInfo,String)",5,1,n/a,35,2,2,13,5
"org.apache.log4j.spi.location.LegacyExtractor.setFileName(LocationInfo,String)",3,1,n/a,17,2,2,7,3
"org.apache.log4j.spi.location.LegacyExtractor.setLineNumber(LocationInfo,String)",3,1,n/a,17,2,2,7,3
"org.apache.log4j.spi.location.LegacyExtractor.setMethodName(LocationInfo,String)",3,1,n/a,17,2,2,7,3
"org.apache.log4j.spi.location.StackTraceElementExtractor.extract(LocationInfo,Throwable,String)",7,1,n/a,36,3,3,23,7
"org.apache.log4j.spi.location.StackTraceElementExtractor.setClassName(LocationInfo,Object)",1,1,n/a,11,1,2,3,2
"org.apache.log4j.spi.location.StackTraceElementExtractor.setFileName(LocationInfo,Object)",1,1,n/a,7,1,2,3,2
"org.apache.log4j.spi.location.StackTraceElementExtractor.setLineNumber(LocationInfo,Object)",3,1,n/a,11,2,2,6,3
"org.apache.log4j.spi.location.StackTraceElementExtractor.setMethodName(LocationInfo,Object)",1,1,n/a,7,1,2,3,2
"org.apache.log4j.varia.ExternallyRolledFileAppender.ExternallyRolledFileAppender()",0,2,n/a,6,0,0,0,1
"org.apache.log4j.varia.ExternallyRolledFileAppender.activateOptions()",5,57,n/a,15,2,0,7,3
"org.apache.log4j.varia.ExternallyRolledFileAppender.getPort()",0,1,n/a,7,0,0,1,1
"org.apache.log4j.varia.ExternallyRolledFileAppender.setPort(int)",0,2,n/a,8,0,1,1,1
"org.apache.log4j.varia.FallbackErrorHandler.activateOptions()",0,13,n/a,1,0,0,0,1
"org.apache.log4j.varia.FallbackErrorHandler.error(String)",0,2,n/a,1,0,1,0,1
"org.apache.log4j.varia.FallbackErrorHandler.error(String,Exception,int)",0,6,n/a,1,0,3,0,1
"org.apache.log4j.varia.FallbackErrorHandler.error(String,Exception,int,LoggingEvent)",0,0,n/a,1,0,4,0,1
"org.apache.log4j.varia.FallbackErrorHandler.setAppender(Appender)",0,0,n/a,1,0,1,0,1
"org.apache.log4j.varia.FallbackErrorHandler.setBackupAppender(Appender)",0,0,n/a,1,0,1,0,1
"org.apache.log4j.varia.FallbackErrorHandler.setLogger(Logger)",0,0,n/a,1,0,1,0,1
"org.apache.log4j.varia.HUP.HUP(ExternallyRolledFileAppender,int)",0,1,n/a,4,0,2,2,1
"org.apache.log4j.varia.HUP.run()",9,0,n/a,16,3,0,8,4
"org.apache.log4j.varia.HUPNode.HUPNode(Socket,ExternallyRolledFileAppender)",5,1,n/a,12,1,2,6,2
"org.apache.log4j.varia.HUPNode.run()",8,0,n/a,19,3,0,10,3
"org.apache.log4j.varia.ListAppender.ListAppender()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.varia.ListAppender.append(LoggingEvent)",3,2,n/a,13,1,1,4,1
"org.apache.log4j.varia.ListAppender.clearList()",1,1,n/a,8,1,0,2,1
"org.apache.log4j.varia.ListAppender.close()",0,8,n/a,8,0,0,1,1
"org.apache.log4j.varia.ListAppender.getList()",1,1,n/a,13,1,0,2,1
"org.apache.log4j.varia.ListAppender.requiresLayout()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.varia.ListModelAppender.ListModelAppender()",1,0,n/a,6,0,0,1,1
"org.apache.log4j.varia.ListModelAppender.append(LoggingEvent)",1,2,n/a,6,0,1,1,1
"org.apache.log4j.varia.ListModelAppender.clearModel()",1,1,n/a,6,0,0,1,1
"org.apache.log4j.varia.ListModelAppender.close()",1,7,n/a,6,0,0,1,1
"org.apache.log4j.varia.ListModelAppender.getModel()",0,0,n/a,9,0,0,1,1
"org.apache.log4j.varia.ListModelAppender.requiresLayout()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.LogFilePatternReceiver()",10,0,n/a,12,0,0,10,1
"org.apache.log4j.varia.LogFilePatternReceiver.activateOptions()",19,13,n/a,25,6,0,15,6
"org.apache.log4j.varia.LogFilePatternReceiver.buildEvent()",17,2,n/a,31,3,0,15,6
"org.apache.log4j.varia.LogFilePatternReceiver.buildException(int)",3,1,n/a,19,1,1,8,3
"org.apache.log4j.varia.LogFilePatternReceiver.buildMessage(String,int)",8,1,n/a,27,1,2,12,6
"org.apache.log4j.varia.LogFilePatternReceiver.convertTimestamp()",1,1,n/a,9,0,0,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.convertToEvent(Map,String[])",38,1,n/a,79,2,2,54,13
"org.apache.log4j.varia.LogFilePatternReceiver.getExceptionLine()",6,1,n/a,27,3,0,9,4
"org.apache.log4j.varia.LogFilePatternReceiver.getFileURL()",0,2,n/a,8,0,0,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.getFilterExpression()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.getLogFormat()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.getTimestampFormat()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.initialize()",53,1,n/a,106,2,0,60,18
"org.apache.log4j.varia.LogFilePatternReceiver.isTailing()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.main(String[])",0,0,n/a,15,0,1,0,1
"org.apache.log4j.varia.LogFilePatternReceiver.passesExpression(LoggingEvent)",1,2,n/a,14,2,1,4,3
"org.apache.log4j.varia.LogFilePatternReceiver.process(Reader)",25,1,n/a,56,5,1,28,10
"org.apache.log4j.varia.LogFilePatternReceiver.processEvent(MatchResult)",5,1,n/a,17,1,1,6,2
"org.apache.log4j.varia.LogFilePatternReceiver.replace(String,String,String)",3,13,n/a,13,0,3,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.replaceMetaChars(String)",8,1,n/a,18,0,1,9,1
"org.apache.log4j.varia.LogFilePatternReceiver.setFileURL(String)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.setFilterExpression(String)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.setHost(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.setLogFormat(String)",0,0,n/a,9,0,1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.setPath(String)",0,0,n/a,3,0,1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.setTailing(boolean)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.setTimestampFormat(String)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.shutdown()",2,4,n/a,13,2,0,5,3
"org.apache.log4j.varia.LogFilePatternReceiverBeanInfo.getPropertyDescriptors()",6,5,n/a,19,1,0,3,2
"org.apache.log4j.varia.NullAppender.NullAppender()",1,2,n/a,3,0,0,1,1
"org.apache.log4j.varia.NullAppender.append(LoggingEvent)",0,2,n/a,5,0,1,0,1
"org.apache.log4j.varia.NullAppender.close()",0,7,n/a,2,0,0,0,1
"org.apache.log4j.varia.NullAppender.doAppend(LoggingEvent)",0,6,n/a,5,0,1,0,1
"org.apache.log4j.varia.NullAppender.getInstance()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.varia.NullAppender.requiresLayout()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.varia.Roller.Roller()",0,0,n/a,3,0,0,0,1
"org.apache.log4j.varia.Roller.init(String,String)",2,1,n/a,10,1,2,4,2
"org.apache.log4j.varia.Roller.main(String[])",4,0,n/a,15,0,1,5,2
"org.apache.log4j.varia.Roller.roll()",14,1,n/a,26,2,0,13,3
"org.apache.log4j.varia.Roller.usage(String)",4,2,n/a,7,0,1,3,1
"org.apache.log4j.varia.SoundAppender.SoundAppender()",1,0,n/a,3,0,0,1,1
"org.apache.log4j.varia.SoundAppender.activateOptions()",6,38,n/a,19,1,0,5,3
"org.apache.log4j.varia.SoundAppender.append(LoggingEvent)",1,2,n/a,8,1,1,2,2
"org.apache.log4j.varia.SoundAppender.close()",0,7,n/a,3,0,0,0,1
"org.apache.log4j.varia.SoundAppender.getAudioURL()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.varia.SoundAppender.requiresLayout()",0,0,n/a,7,0,0,1,1
"org.apache.log4j.varia.SoundAppender.setAudioURL(String)",0,0,n/a,9,0,1,1,1
"org.apache.log4j.varia.StringMatchFilter.getOptionStrings()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.varia.StringMatchFilter.setOption(String,String)",6,0,n/a,12,1,2,4,3
"org.apache.log4j.watchdog.FileWatchdog.activateOptions()",17,19,n/a,27,1,0,13,5
"org.apache.log4j.watchdog.FileWatchdog.execute()",19,3,n/a,30,3,0,11,4
"org.apache.log4j.watchdog.FileWatchdog.getFile()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.watchdog.FileWatchdog.getInitialConfigure()",0,0,n/a,9,0,0,1,1
"org.apache.log4j.watchdog.FileWatchdog.getInterval()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.watchdog.FileWatchdog.getLastModTime()",0,7,n/a,8,0,0,1,1
"org.apache.log4j.watchdog.FileWatchdog.reconfigure()",3,1,n/a,21,3,0,8,4
"org.apache.log4j.watchdog.FileWatchdog.setFile(String)",0,6,n/a,8,0,1,1,1
"org.apache.log4j.watchdog.FileWatchdog.setInitialConfigure(boolean)",0,2,n/a,9,0,1,1,1
"org.apache.log4j.watchdog.FileWatchdog.setInterval(long)",0,6,n/a,8,0,1,1,1
"org.apache.log4j.watchdog.FileWatchdog.shutdown()",3,3,n/a,10,1,0,3,2
"org.apache.log4j.watchdog.Watchdog.getConfigurator()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.watchdog.Watchdog.reconfigure()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.watchdog.Watchdog.setConfigurator(String)",n/a,0,1,n/a,n/a,1,n/a,n/a
"org.apache.log4j.watchdog.WatchdogSkeleton.configure(Configurator)",8,2,n/a,14,3,1,11,4
"org.apache.log4j.watchdog.WatchdogSkeleton.getConfigurator()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.watchdog.WatchdogSkeleton.getConfiguratorInstance()",2,2,n/a,20,1,0,5,2
"org.apache.log4j.watchdog.WatchdogSkeleton.reconfigure()",n/a,0,1,n/a,n/a,0,n/a,n/a
"org.apache.log4j.watchdog.WatchdogSkeleton.reconfigureByStream(InputStream)",12,1,n/a,24,1,1,9,3
"org.apache.log4j.watchdog.WatchdogSkeleton.reconfigureByURL(URL)",12,0,n/a,25,1,1,8,3
"org.apache.log4j.watchdog.WatchdogSkeleton.setConfigurator(String)",0,6,n/a,9,0,1,1,1
"org.apache.log4j.xml.DOMConfigurator.DOMElementParseAction.DOMElementParseAction(Element)",0,1,n/a,7,0,1,1,1
"org.apache.log4j.xml.DOMConfigurator.DOMElementParseAction.parse(SAXParser,DefaultHandler)",3,1,n/a,12,0,2,3,1
"org.apache.log4j.xml.DOMConfigurator.DOMElementParseAction.replay(Element,DefaultHandler)",18,2,n/a,45,2,2,27,6
"org.apache.log4j.xml.DOMConfigurator.configure(Element)",3,0,n/a,8,0,1,2,1
"org.apache.log4j.xml.DOMConfigurator.configure(String)",3,0,n/a,4,0,1,2,1
"org.apache.log4j.xml.DOMConfigurator.configure(URL)",3,0,n/a,4,0,1,2,1
"org.apache.log4j.xml.DOMConfigurator.configureAndWatch(String)",1,0,n/a,9,0,1,1,1
"org.apache.log4j.xml.DOMConfigurator.configureAndWatch(String,long)",13,3,n/a,32,2,2,13,2
"org.apache.log4j.xml.DOMConfigurator.doConfigure(Element,LoggerRepository)",2,2,n/a,10,0,2,2,1
"org.apache.log4j.xml.Log4jEntityResolver.resolveEntity(String,String)",8,1,n/a,22,2,2,10,3
"org.apache.log4j.xml.LogFileXMLReceiver.activateOptions()",25,13,n/a,51,4,0,27,12
"org.apache.log4j.xml.LogFileXMLReceiver.getDecoder()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.getFileURL()",0,1,n/a,8,0,0,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.getFilterExpression()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.isTailing()",0,0,n/a,8,0,0,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.main(String[])",0,0,n/a,8,0,1,0,1
"org.apache.log4j.xml.LogFileXMLReceiver.passesExpression(LoggingEvent)",1,1,n/a,8,2,1,4,3
"org.apache.log4j.xml.LogFileXMLReceiver.process(Reader)",13,1,n/a,24,3,1,14,5
"org.apache.log4j.xml.LogFileXMLReceiver.processEvents(Collection)",9,1,n/a,17,3,1,11,6
"org.apache.log4j.xml.LogFileXMLReceiver.setDecoder(String)",0,0,n/a,9,0,1,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.setFileURL(String)",0,0,n/a,8,0,1,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.setFilterExpression(String)",0,0,n/a,9,0,1,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.setTailing(boolean)",0,0,n/a,9,0,1,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.shutdown()",2,4,n/a,13,2,0,5,3
"org.apache.log4j.xml.LogFileXMLReceiverBeanInfo.getPropertyDescriptors()",5,5,n/a,17,1,0,3,2
"org.apache.log4j.xml.SAXErrorHandler.error(SAXParseException)",6,1,n/a,7,0,1,2,1
"org.apache.log4j.xml.SAXErrorHandler.fatalError(SAXParseException)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.xml.SAXErrorHandler.warning(SAXParseException)",6,0,n/a,6,0,1,2,1
"org.apache.log4j.xml.UtilLoggingEntityResolver.resolveEntity(String,String)",7,1,n/a,17,2,2,8,3
"org.apache.log4j.xml.UtilLoggingXMLDecoder.UtilLoggingXMLDecoder()",8,1,n/a,11,1,0,7,2
"org.apache.log4j.xml.UtilLoggingXMLDecoder.UtilLoggingXMLDecoder(Component)",1,0,n/a,4,0,1,2,1
"org.apache.log4j.xml.UtilLoggingXMLDecoder.decode(String)",4,0,n/a,18,1,1,7,3
"org.apache.log4j.xml.UtilLoggingXMLDecoder.decode(URL)",17,0,n/a,35,3,1,20,6
"org.apache.log4j.xml.UtilLoggingXMLDecoder.decodeEvents(Document)",81,2,n/a,130,6,1,99,26
"org.apache.log4j.xml.UtilLoggingXMLDecoder.decodeEvents(String)",13,5,n/a,37,2,1,20,7
"org.apache.log4j.xml.UtilLoggingXMLDecoder.getCData(Node)",9,10,n/a,13,2,1,9,4
"org.apache.log4j.xml.UtilLoggingXMLDecoder.parse(String)",12,2,n/a,37,2,1,15,6
"org.apache.log4j.xml.UtilLoggingXMLDecoder.setAdditionalProperties(Map)",1,0,n/a,10,0,1,1,1
"org.apache.log4j.xml.XMLDecoder.XMLDecoder()",8,3,n/a,11,1,0,7,2
"org.apache.log4j.xml.XMLDecoder.XMLDecoder(Component)",1,0,n/a,4,0,1,2,1
"org.apache.log4j.xml.XMLDecoder.decode(String)",4,0,n/a,18,1,1,7,3
"org.apache.log4j.xml.XMLDecoder.decode(URL)",18,2,n/a,38,3,1,23,7
"org.apache.log4j.xml.XMLDecoder.decodeEvents(Document)",108,2,n/a,150,6,1,109,24
"org.apache.log4j.xml.XMLDecoder.decodeEvents(String)",14,5,n/a,32,2,1,20,7
"org.apache.log4j.xml.XMLDecoder.getCData(Node)",9,3,n/a,13,2,1,9,4
"org.apache.log4j.xml.XMLDecoder.parse(String)",10,2,n/a,34,1,1,13,4
"org.apache.log4j.xml.XMLDecoder.setAdditionalProperties(Map)",0,0,n/a,10,0,1,1,1
"org.apache.log4j.xml.XMLLayout.XMLLayout()",1,9,n/a,11,0,0,2,1
"org.apache.log4j.xml.XMLLayout.activateOptions()",0,14,n/a,3,0,0,0,1
"org.apache.log4j.xml.XMLLayout.format(LoggingEvent)",65,14,n/a,96,3,1,55,9
"org.apache.log4j.xml.XMLLayout.getLocationInfo()",0,3,n/a,6,0,0,1,1
"org.apache.log4j.xml.XMLLayout.setLocationInfo(boolean)",0,4,n/a,14,0,1,1,1
"org.apache.log4j.xml.examples.ReportParserError.error(SAXParseException)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.xml.examples.ReportParserError.fatalError(SAXParseException)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.xml.examples.ReportParserError.report(String,SAXParseException)",6,3,n/a,6,0,2,1,1
"org.apache.log4j.xml.examples.ReportParserError.warning(SAXParseException)",1,0,n/a,3,0,1,1,1
"org.apache.log4j.xml.examples.XMLSample.Usage(String)",4,1,n/a,9,0,1,3,1
"org.apache.log4j.xml.examples.XMLSample.init(String)",3,1,n/a,7,0,1,2,1
"org.apache.log4j.xml.examples.XMLSample.main(String[])",3,0,n/a,11,1,1,4,2
"org.apache.log4j.xml.examples.XMLSample.sample()",6,1,n/a,12,0,0,7,1
"org.apache.log4j.xml.test.DOMTest.Usage(String)",4,1,n/a,6,0,1,3,1
"org.apache.log4j.xml.test.DOMTest.init(String)",3,1,n/a,4,0,1,2,1
"org.apache.log4j.xml.test.DOMTest.main(String[])",3,0,n/a,8,1,1,4,2
"org.apache.log4j.xml.test.DOMTest.test()",17,1,n/a,20,0,0,18,1

