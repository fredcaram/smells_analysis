Method,ev(G),iv(G),v(G)
"org.apache.log4j.AppenderSkeleton.AppenderSkeleton()",1,1,1
"org.apache.log4j.AppenderSkeleton.AppenderSkeleton(boolean)",1,1,1
"org.apache.log4j.AppenderSkeleton.activateOptions()",1,1,1
"org.apache.log4j.AppenderSkeleton.addFilter(Filter)",1,2,2
"org.apache.log4j.AppenderSkeleton.clearFilters()",1,1,1
"org.apache.log4j.AppenderSkeleton.doAppend(LoggingEvent)",9,5,9
"org.apache.log4j.AppenderSkeleton.finalize()",2,1,2
"org.apache.log4j.AppenderSkeleton.getErrorHandler()",1,1,1
"org.apache.log4j.AppenderSkeleton.getFilter()",1,1,1
"org.apache.log4j.AppenderSkeleton.getFirstFilter()",1,1,1
"org.apache.log4j.AppenderSkeleton.getLayout()",1,1,1
"org.apache.log4j.AppenderSkeleton.getName()",1,1,1
"org.apache.log4j.AppenderSkeleton.getThreshold()",1,1,1
"org.apache.log4j.AppenderSkeleton.isActive()",1,1,2
"org.apache.log4j.AppenderSkeleton.isAsSevereAsThreshold(Level)",1,2,2
"org.apache.log4j.AppenderSkeleton.isAsSevereAsThreshold(Priority)",1,2,2
"org.apache.log4j.AppenderSkeleton.isClosed()",1,1,1
"org.apache.log4j.AppenderSkeleton.setErrorHandler(ErrorHandler)",1,1,1
"org.apache.log4j.AppenderSkeleton.setLayout(Layout)",1,1,1
"org.apache.log4j.AppenderSkeleton.setName(String)",1,1,1
"org.apache.log4j.AppenderSkeleton.setThreshold(Priority)",1,1,1
"org.apache.log4j.AsyncAppender.AsyncAppender()",1,1,1
"org.apache.log4j.AsyncAppender.DiscardSummary.DiscardSummary(LoggingEvent)",1,1,1
"org.apache.log4j.AsyncAppender.DiscardSummary.add(LoggingEvent)",1,1,2
"org.apache.log4j.AsyncAppender.DiscardSummary.createEvent()",1,1,1
"org.apache.log4j.AsyncAppender.Dispatcher.Dispatcher(AsyncAppender,List,Map,AppenderAttachableImpl)",1,1,1
"org.apache.log4j.AsyncAppender.Dispatcher.run()",1,8,9
"org.apache.log4j.AsyncAppender.addAppender(Appender)",1,1,1
"org.apache.log4j.AsyncAppender.append(LoggingEvent)",5,14,14
"org.apache.log4j.AsyncAppender.close()",1,5,5
"org.apache.log4j.AsyncAppender.getAllAppenders()",1,1,1
"org.apache.log4j.AsyncAppender.getAppender(String)",1,1,1
"org.apache.log4j.AsyncAppender.getBlocking()",1,1,1
"org.apache.log4j.AsyncAppender.getBufferSize()",1,1,1
"org.apache.log4j.AsyncAppender.getLocationInfo()",1,1,1
"org.apache.log4j.AsyncAppender.isAttached(Appender)",1,1,1
"org.apache.log4j.AsyncAppender.removeAllAppenders()",1,1,1
"org.apache.log4j.AsyncAppender.removeAppender(Appender)",1,1,1
"org.apache.log4j.AsyncAppender.removeAppender(String)",1,1,1
"org.apache.log4j.AsyncAppender.requiresLayout()",1,1,1
"org.apache.log4j.AsyncAppender.setBlocking(boolean)",1,1,1
"org.apache.log4j.AsyncAppender.setBufferSize(int)",2,1,3
"org.apache.log4j.AsyncAppender.setLocationInfo(boolean)",1,1,1
"org.apache.log4j.BasicConfigurator.BasicConfigurator()",1,1,1
"org.apache.log4j.BasicConfigurator.configure()",1,1,1
"org.apache.log4j.BasicConfigurator.configure(Appender)",1,1,1
"org.apache.log4j.BasicConfigurator.resetConfiguration()",1,1,1
"org.apache.log4j.Category.Category(String)",1,1,1
"org.apache.log4j.Category.addAppender(Appender)",1,1,2
"org.apache.log4j.Category.assertLog(boolean,String)",1,2,2
"org.apache.log4j.Category.callAppenders(LoggingEvent)",3,4,5
"org.apache.log4j.Category.closeNestedAppenders()",1,4,4
"org.apache.log4j.Category.debug(Object)",2,2,3
"org.apache.log4j.Category.debug(Object,Object)",2,3,4
"org.apache.log4j.Category.debug(Object,Throwable)",2,2,3
"org.apache.log4j.Category.debug(String,Object,Object)",2,2,3
"org.apache.log4j.Category.error(Object)",2,2,3
"org.apache.log4j.Category.error(Object,Object)",2,3,4
"org.apache.log4j.Category.error(Object,Throwable)",2,2,3
"org.apache.log4j.Category.error(String,Object,Object)",2,2,3
"org.apache.log4j.Category.exists(String)",1,1,1
"org.apache.log4j.Category.fatal(Object)",2,2,3
"org.apache.log4j.Category.fatal(Object,Object)",2,3,4
"org.apache.log4j.Category.fatal(Object,Throwable)",2,2,3
"org.apache.log4j.Category.forcedLog(String,Priority,Object,Throwable)",1,1,1
"org.apache.log4j.Category.getAdditivity()",1,1,1
"org.apache.log4j.Category.getAllAppenders()",1,2,2
"org.apache.log4j.Category.getAppender(String)",1,2,3
"org.apache.log4j.Category.getChainedPriority()",3,1,3
"org.apache.log4j.Category.getCurrentCategories()",1,1,1
"org.apache.log4j.Category.getDefaultHierarchy()",1,1,1
"org.apache.log4j.Category.getEffectiveLevel()",3,1,3
"org.apache.log4j.Category.getHierarchy()",1,1,1
"org.apache.log4j.Category.getInstance(Class)",1,1,1
"org.apache.log4j.Category.getInstance(String)",1,1,1
"org.apache.log4j.Category.getLevel()",1,1,1
"org.apache.log4j.Category.getLoggerRepository()",1,1,1
"org.apache.log4j.Category.getName()",1,1,1
"org.apache.log4j.Category.getParent()",1,1,1
"org.apache.log4j.Category.getPriority()",1,1,1
"org.apache.log4j.Category.getResourceBundle()",3,1,3
"org.apache.log4j.Category.getResourceBundleString(String)",2,3,3
"org.apache.log4j.Category.getRoot()",1,1,1
"org.apache.log4j.Category.info(Object)",2,2,3
"org.apache.log4j.Category.info(Object,Object)",2,3,4
"org.apache.log4j.Category.info(Object,Throwable)",2,2,3
"org.apache.log4j.Category.info(String,Object,Object)",2,2,3
"org.apache.log4j.Category.isAttached(Appender)",1,2,3
"org.apache.log4j.Category.isDebugEnabled()",2,1,2
"org.apache.log4j.Category.isEnabledFor(Level)",2,1,2
"org.apache.log4j.Category.isEnabledFor(Priority)",1,1,1
"org.apache.log4j.Category.isErrorEnabled()",2,1,2
"org.apache.log4j.Category.isInfoEnabled()",2,1,2
"org.apache.log4j.Category.isTraceEnabled()",2,1,2
"org.apache.log4j.Category.isWarnEnabled()",2,1,2
"org.apache.log4j.Category.l7dlog(Priority,String)",1,1,1
"org.apache.log4j.Category.l7dlog(Priority,String,Object[])",1,1,1
"org.apache.log4j.Category.l7dlog(Priority,String,Object[],Throwable)",1,1,1
"org.apache.log4j.Category.l7dlog(Priority,String,Throwable)",1,1,1
"org.apache.log4j.Category.l7dlog(String,Priority,String,Object[],Throwable)",2,4,5
"org.apache.log4j.Category.log(Level,Object)",2,2,3
"org.apache.log4j.Category.log(Level,Object,Throwable)",2,2,3
"org.apache.log4j.Category.log(Priority,Object)",1,1,1
"org.apache.log4j.Category.log(Priority,Object,Throwable)",1,1,1
"org.apache.log4j.Category.log(String,Level,Object,Throwable)",2,2,3
"org.apache.log4j.Category.log(String,Priority,Object,Throwable)",1,1,1
"org.apache.log4j.Category.removeAllAppenders()",1,2,2
"org.apache.log4j.Category.removeAppender(Appender)",1,2,3
"org.apache.log4j.Category.removeAppender(String)",1,2,3
"org.apache.log4j.Category.setAdditivity(boolean)",1,1,1
"org.apache.log4j.Category.setHierarchy(LoggerRepository)",1,1,1
"org.apache.log4j.Category.setLevel(Level)",1,1,1
"org.apache.log4j.Category.setPriority(Priority)",1,1,1
"org.apache.log4j.Category.setResourceBundle(ResourceBundle)",1,1,1
"org.apache.log4j.Category.shutdown()",1,1,1
"org.apache.log4j.Category.warn(Object)",2,2,3
"org.apache.log4j.Category.warn(Object,Object)",2,3,4
"org.apache.log4j.Category.warn(Object,Throwable)",2,2,3
"org.apache.log4j.Category.warn(String,Object,Object)",2,2,3
"org.apache.log4j.CategoryKey.CategoryKey(String)",1,1,1
"org.apache.log4j.CategoryKey.equals(Object)",3,3,4
"org.apache.log4j.CategoryKey.hashCode()",1,1,1
"org.apache.log4j.ConsoleAppender.ConsoleAppender()",1,1,1
"org.apache.log4j.ConsoleAppender.ConsoleAppender(Layout)",1,1,1
"org.apache.log4j.ConsoleAppender.ConsoleAppender(Layout,String)",1,1,1
"org.apache.log4j.ConsoleAppender.SystemErrStream.SystemErrStream()",1,1,1
"org.apache.log4j.ConsoleAppender.SystemErrStream.close()",1,1,1
"org.apache.log4j.ConsoleAppender.SystemErrStream.flush()",1,1,1
"org.apache.log4j.ConsoleAppender.SystemErrStream.write(byte[])",1,1,1
"org.apache.log4j.ConsoleAppender.SystemErrStream.write(byte[],int,int)",1,1,1
"org.apache.log4j.ConsoleAppender.SystemErrStream.write(int)",1,1,1
"org.apache.log4j.ConsoleAppender.SystemOutStream.SystemOutStream()",1,1,1
"org.apache.log4j.ConsoleAppender.SystemOutStream.close()",1,1,1
"org.apache.log4j.ConsoleAppender.SystemOutStream.flush()",1,1,1
"org.apache.log4j.ConsoleAppender.SystemOutStream.write(byte[])",1,1,1
"org.apache.log4j.ConsoleAppender.SystemOutStream.write(byte[],int,int)",1,1,1
"org.apache.log4j.ConsoleAppender.SystemOutStream.write(int)",1,1,1
"org.apache.log4j.ConsoleAppender.activateOptions()",1,4,4
"org.apache.log4j.ConsoleAppender.closeWriter()",1,2,2
"org.apache.log4j.ConsoleAppender.getFollow()",1,1,1
"org.apache.log4j.ConsoleAppender.getTarget()",1,1,1
"org.apache.log4j.ConsoleAppender.setFollow(boolean)",1,1,1
"org.apache.log4j.ConsoleAppender.setTarget(String)",1,3,3
"org.apache.log4j.DailyRollingFileAppender.DailyRollingFileAppender()",1,1,1
"org.apache.log4j.DailyRollingFileAppender.DailyRollingFileAppender(Layout,String,String)",1,1,1
"org.apache.log4j.DailyRollingFileAppender.activateOptions()",1,2,3
"org.apache.log4j.DailyRollingFileAppender.computeCheckPeriod()",4,5,6
"org.apache.log4j.DailyRollingFileAppender.getDatePattern()",1,1,1
"org.apache.log4j.DailyRollingFileAppender.printPeriodicity(int)",2,2,8
"org.apache.log4j.DailyRollingFileAppender.rollOver()",3,5,6
"org.apache.log4j.DailyRollingFileAppender.setDatePattern(String)",1,1,1
"org.apache.log4j.DailyRollingFileAppender.subAppend(LoggingEvent)",1,3,3
"org.apache.log4j.DefaultLoggerFactory.DefaultLoggerFactory()",1,1,1
"org.apache.log4j.DefaultLoggerFactory.makeNewLoggerInstance(String)",1,1,1
"org.apache.log4j.Dispatcher.Dispatcher(BoundedFIFO,AsyncAppender)",1,1,1
"org.apache.log4j.Dispatcher.close()",1,2,2
"org.apache.log4j.Dispatcher.run()",4,5,8
"org.apache.log4j.FileAppender.FileAppender()",1,1,1
"org.apache.log4j.FileAppender.FileAppender(Layout,String)",1,1,1
"org.apache.log4j.FileAppender.FileAppender(Layout,String,boolean)",1,1,1
"org.apache.log4j.FileAppender.FileAppender(Layout,String,boolean,boolean,int)",1,1,1
"org.apache.log4j.FileAppender.activateOptions()",1,3,3
"org.apache.log4j.FileAppender.closeFile()",1,1,1
"org.apache.log4j.FileAppender.getAppend()",1,1,1
"org.apache.log4j.FileAppender.getBufferSize()",1,1,1
"org.apache.log4j.FileAppender.getBufferedIO()",1,1,1
"org.apache.log4j.FileAppender.getFile()",1,1,1
"org.apache.log4j.FileAppender.reset()",1,1,1
"org.apache.log4j.FileAppender.setAppend(boolean)",1,1,1
"org.apache.log4j.FileAppender.setBufferSize(int)",1,1,1
"org.apache.log4j.FileAppender.setBufferedIO(boolean)",1,1,2
"org.apache.log4j.FileAppender.setFile(String)",1,1,1
"org.apache.log4j.FileAppender.setFile(String,boolean,boolean,int)",2,4,7
"org.apache.log4j.FileAppender.setQWForFiles(Writer)",1,1,1
"org.apache.log4j.HTMLLayout.HTMLLayout()",1,1,1
"org.apache.log4j.HTMLLayout.HTMLLayout(String)",1,1,1
"org.apache.log4j.HTMLLayout.activateOptions()",1,5,5
"org.apache.log4j.HTMLLayout.appendThrowableAsHTML(String[],StringBuffer)",3,3,4
"org.apache.log4j.HTMLLayout.format(LoggingEvent)",1,5,5
"org.apache.log4j.HTMLLayout.getContentType()",1,1,1
"org.apache.log4j.HTMLLayout.getConversionPattern()",1,1,1
"org.apache.log4j.HTMLLayout.getFooter()",1,1,1
"org.apache.log4j.HTMLLayout.getHeader()",1,3,3
"org.apache.log4j.HTMLLayout.getInternalCSS(StringBuffer)",1,1,1
"org.apache.log4j.HTMLLayout.getLocationInfo()",1,1,1
"org.apache.log4j.HTMLLayout.getTitle()",1,1,1
"org.apache.log4j.HTMLLayout.getURL2ExternalCSS()",1,1,1
"org.apache.log4j.HTMLLayout.ignoresThrowable()",1,1,1
"org.apache.log4j.HTMLLayout.isInternalCSS()",1,1,1
"org.apache.log4j.HTMLLayout.setConversionPattern(String)",1,1,1
"org.apache.log4j.HTMLLayout.setInternalCSS(boolean)",1,1,1
"org.apache.log4j.HTMLLayout.setLocationInfo(boolean)",1,1,1
"org.apache.log4j.HTMLLayout.setTitle(String)",1,1,1
"org.apache.log4j.HTMLLayout.setURL2ExternalCSS(String)",1,1,1
"org.apache.log4j.Hierarchy.Hierarchy()",1,1,1
"org.apache.log4j.Hierarchy.Hierarchy(Logger)",1,1,1
"org.apache.log4j.Hierarchy.addErrorItem(ErrorItem)",1,1,1
"org.apache.log4j.Hierarchy.addHierarchyEventListener(HierarchyEventListener)",1,1,1
"org.apache.log4j.Hierarchy.addLoggerEventListener(LoggerEventListener)",1,2,2
"org.apache.log4j.Hierarchy.addLoggerRepositoryEventListener(LoggerRepositoryEventListener)",1,2,2
"org.apache.log4j.Hierarchy.addRenderer(Class,ObjectRenderer)",1,1,1
"org.apache.log4j.Hierarchy.clear()",1,1,1
"org.apache.log4j.Hierarchy.copyListenerList(ArrayList)",1,2,2
"org.apache.log4j.Hierarchy.emitNoAppenderWarning(Category)",1,1,2
"org.apache.log4j.Hierarchy.exists(String)",2,1,2
"org.apache.log4j.Hierarchy.fireAddAppenderEvent(Category,Appender)",1,2,2
"org.apache.log4j.Hierarchy.fireAddAppenderEvent(Logger,Appender)",1,2,2
"org.apache.log4j.Hierarchy.fireConfigurationChangedEvent()",1,2,2
"org.apache.log4j.Hierarchy.fireLevelChangedEvent(Logger)",1,2,2
"org.apache.log4j.Hierarchy.fireRemoveAppenderEvent(Category,Appender)",1,2,2
"org.apache.log4j.Hierarchy.fireRemoveAppenderEvent(Logger,Appender)",1,2,2
"org.apache.log4j.Hierarchy.getCurrentCategories()",1,1,1
"org.apache.log4j.Hierarchy.getCurrentLoggers()",1,3,3
"org.apache.log4j.Hierarchy.getErrorList()",1,1,1
"org.apache.log4j.Hierarchy.getLogger(String)",1,1,1
"org.apache.log4j.Hierarchy.getLogger(String,LoggerFactory)",4,4,4
"org.apache.log4j.Hierarchy.getLoggerFactory()",1,1,1
"org.apache.log4j.Hierarchy.getMyLogger()",1,2,2
"org.apache.log4j.Hierarchy.getName()",1,1,1
"org.apache.log4j.Hierarchy.getObject(String)",1,1,1
"org.apache.log4j.Hierarchy.getPluginRegistry()",1,1,2
"org.apache.log4j.Hierarchy.getProperties()",1,1,1
"org.apache.log4j.Hierarchy.getProperty(String)",1,1,1
"org.apache.log4j.Hierarchy.getRendererMap()",1,1,1
"org.apache.log4j.Hierarchy.getRootLogger()",1,1,1
"org.apache.log4j.Hierarchy.getScheduler()",1,2,2
"org.apache.log4j.Hierarchy.getThreshold()",1,1,1
"org.apache.log4j.Hierarchy.isDisabled(int)",1,1,1
"org.apache.log4j.Hierarchy.isPristine()",1,1,1
"org.apache.log4j.Hierarchy.putObject(String,Object)",1,1,1
"org.apache.log4j.Hierarchy.removeLoggerEventListener(LoggerEventListener)",1,2,2
"org.apache.log4j.Hierarchy.removeLoggerRepositoryEventListener(LoggerRepositoryEventListener)",1,2,2
"org.apache.log4j.Hierarchy.resetConfiguration()",1,3,3
"org.apache.log4j.Hierarchy.setLoggerFactory(LoggerFactory)",2,1,2
"org.apache.log4j.Hierarchy.setName(String)",3,2,3
"org.apache.log4j.Hierarchy.setPristine(boolean)",1,1,1
"org.apache.log4j.Hierarchy.setProperty(String,String)",1,1,1
"org.apache.log4j.Hierarchy.setRenderer(Class,ObjectRenderer)",1,1,1
"org.apache.log4j.Hierarchy.setThreshold(Level)",1,1,2
"org.apache.log4j.Hierarchy.setThreshold(String)",1,2,2
"org.apache.log4j.Hierarchy.shutdown()",1,1,1
"org.apache.log4j.Hierarchy.shutdown(boolean)",1,6,6
"org.apache.log4j.Hierarchy.updateChildren(ProvisionNode,Logger)",1,2,3
"org.apache.log4j.Hierarchy.updateParents(Logger)",4,5,6
"org.apache.log4j.Layout.getContentType()",1,1,1
"org.apache.log4j.Layout.getFooter()",1,1,1
"org.apache.log4j.Layout.getHeader()",1,1,1
"org.apache.log4j.Layout.ignoresThrowable()",1,1,1
"org.apache.log4j.Layout.setFooter(String)",1,1,1
"org.apache.log4j.Layout.setHeader(String)",1,1,1
"org.apache.log4j.Layout.setIgnoresThrowable(boolean)",1,1,1
"org.apache.log4j.Level.Level(int,String,int)",1,1,1
"org.apache.log4j.Level.equals(Object)",2,1,2
"org.apache.log4j.Level.hashCode()",1,1,1
"org.apache.log4j.Level.readObject(ObjectInputStream)",1,1,1
"org.apache.log4j.Level.readResolve()",1,1,1
"org.apache.log4j.Level.toLevel(String)",1,1,1
"org.apache.log4j.Level.toLevel(String,Level)",10,1,10
"org.apache.log4j.Level.toLevel(int)",1,1,1
"org.apache.log4j.Level.toLevel(int,Level)",10,2,10
"org.apache.log4j.Level.writeObject(ObjectOutputStream)",1,2,2
"org.apache.log4j.LogManager.exists(String)",1,1,1
"org.apache.log4j.LogManager.getCurrentLoggers()",1,1,1
"org.apache.log4j.LogManager.getLogger(Class)",1,1,1
"org.apache.log4j.LogManager.getLogger(String)",1,1,1
"org.apache.log4j.LogManager.getLogger(String,LoggerFactory)",1,1,1
"org.apache.log4j.LogManager.getLoggerRepository()",1,1,1
"org.apache.log4j.LogManager.getRepositorySelector()",1,1,1
"org.apache.log4j.LogManager.getRootLogger()",1,1,1
"org.apache.log4j.LogManager.resetConfiguration()",1,1,1
"org.apache.log4j.LogManager.setRepositorySelector(RepositorySelector,Object)",4,1,5
"org.apache.log4j.LogManager.shutdown()",1,1,1
"org.apache.log4j.Logger.Logger(String)",1,1,1
"org.apache.log4j.Logger.fatal(String,Object,Object)",2,2,3
"org.apache.log4j.Logger.getLogger(Class)",1,1,1
"org.apache.log4j.Logger.getLogger(String)",1,1,1
"org.apache.log4j.Logger.getLogger(String,LoggerFactory)",1,1,1
"org.apache.log4j.Logger.getRootLogger()",1,1,1
"org.apache.log4j.Logger.trace(Object)",2,2,3
"org.apache.log4j.Logger.trace(Object,Object)",2,3,4
"org.apache.log4j.Logger.trace(Object,Throwable)",2,2,3
"org.apache.log4j.Logger.trace(String,Object,Object)",2,2,3
"org.apache.log4j.MDC.MDC()",1,1,1
"org.apache.log4j.MDC.clear()",1,2,2
"org.apache.log4j.MDC.get(String)",2,2,3
"org.apache.log4j.MDC.getContext()",1,1,1
"org.apache.log4j.MDC.getKeys()",2,2,2
"org.apache.log4j.MDC.put(String,Object)",1,1,1
"org.apache.log4j.MDC.put(String,String)",1,2,2
"org.apache.log4j.MDC.remove(String)",1,2,2
"org.apache.log4j.NDC.DiagnosticContext.DiagnosticContext(String,DiagnosticContext)",1,1,2
"org.apache.log4j.NDC.NDC()",1,1,1
"org.apache.log4j.NDC.clear()",1,2,2
"org.apache.log4j.NDC.cloneStack()",2,2,2
"org.apache.log4j.NDC.get()",2,3,3
"org.apache.log4j.NDC.getDepth()",2,2,2
"org.apache.log4j.NDC.inherit(Stack)",1,2,2
"org.apache.log4j.NDC.peek()",2,3,3
"org.apache.log4j.NDC.pop()",2,3,3
"org.apache.log4j.NDC.push(String)",1,3,3
"org.apache.log4j.NDC.remove()",1,1,1
"org.apache.log4j.NDC.setMaxDepth(int)",1,3,3
"org.apache.log4j.PatternLayout.PatternLayout()",1,1,1
"org.apache.log4j.PatternLayout.PatternLayout(String)",1,2,3
"org.apache.log4j.PatternLayout.activateOptions()",1,1,1
"org.apache.log4j.PatternLayout.createPatternParser(String)",1,1,1
"org.apache.log4j.PatternLayout.format(LoggingEvent)",1,2,2
"org.apache.log4j.PatternLayout.getConversionPattern()",1,1,1
"org.apache.log4j.PatternLayout.ignoresThrowable()",1,1,1
"org.apache.log4j.PatternLayout.setConversionPattern(String)",1,2,2
"org.apache.log4j.Priority.Priority()",1,1,1
"org.apache.log4j.Priority.Priority(int,String,int)",1,1,1
"org.apache.log4j.Priority.equals(Object)",2,1,2
"org.apache.log4j.Priority.getAllPossiblePriorities()",1,1,1
"org.apache.log4j.Priority.getSyslogEquivalent()",1,1,1
"org.apache.log4j.Priority.hashCode()",1,1,1
"org.apache.log4j.Priority.isGreaterOrEqual(Priority)",1,1,1
"org.apache.log4j.Priority.toInt()",1,1,1
"org.apache.log4j.Priority.toPriority(String)",1,1,1
"org.apache.log4j.Priority.toPriority(String,Priority)",1,1,1
"org.apache.log4j.Priority.toPriority(int)",1,1,1
"org.apache.log4j.Priority.toPriority(int,Priority)",1,1,1
"org.apache.log4j.Priority.toString()",1,1,1
"org.apache.log4j.PropertyConfigurator.activateOptions(Object)",1,2,2
"org.apache.log4j.PropertyConfigurator.clearRegistry()",1,1,1
"org.apache.log4j.PropertyConfigurator.configure(Properties)",1,1,1
"org.apache.log4j.PropertyConfigurator.configure(String)",1,1,1
"org.apache.log4j.PropertyConfigurator.configure(URL)",1,1,1
"org.apache.log4j.PropertyConfigurator.configureAndWatch(String)",1,1,1
"org.apache.log4j.PropertyConfigurator.configureAndWatch(String,long)",1,2,2
"org.apache.log4j.PropertyConfigurator.configureLoggerFactory(Properties,LoggerRepository)",1,2,2
"org.apache.log4j.PropertyConfigurator.configureRootCategory(Properties,LoggerRepository)",1,3,3
"org.apache.log4j.PropertyConfigurator.doConfigure(InputStream,LoggerRepository)",1,2,2
"org.apache.log4j.PropertyConfigurator.doConfigure(Properties,LoggerRepository)",1,7,7
"org.apache.log4j.PropertyConfigurator.doConfigure(String,LoggerRepository)",1,2,2
"org.apache.log4j.PropertyConfigurator.doConfigure(URL,LoggerRepository)",1,2,2
"org.apache.log4j.PropertyConfigurator.getErrorList()",1,1,1
"org.apache.log4j.PropertyConfigurator.parseAdditivityForLogger(LoggerRepository,Properties,Logger,String)",1,3,3
"org.apache.log4j.PropertyConfigurator.parseAppender(LoggerRepository,Properties,String)",3,6,6
"org.apache.log4j.PropertyConfigurator.parseCategory(LoggerRepository,Properties,Logger,String,String,String)",5,9,11
"org.apache.log4j.PropertyConfigurator.parseCatsAndRenderers(Properties,LoggerRepository)",1,8,8
"org.apache.log4j.PropertyConfigurator.registryGet(String)",1,1,1
"org.apache.log4j.PropertyConfigurator.registryPut(Appender)",1,1,1
"org.apache.log4j.ProvisionNode.ProvisionNode(Logger)",1,1,1
"org.apache.log4j.RollingCalendar.RollingCalendar()",1,1,1
"org.apache.log4j.RollingCalendar.RollingCalendar(TimeZone,Locale)",1,1,1
"org.apache.log4j.RollingCalendar.getNextCheckDate(Date)",2,3,9
"org.apache.log4j.RollingCalendar.getNextCheckMillis(Date)",1,1,1
"org.apache.log4j.RollingCalendar.setType(int)",1,1,1
"org.apache.log4j.RollingFileAppender.RollingFileAppender()",1,1,1
"org.apache.log4j.RollingFileAppender.RollingFileAppender(Layout,String)",1,1,1
"org.apache.log4j.RollingFileAppender.RollingFileAppender(Layout,String,boolean)",1,1,1
"org.apache.log4j.RollingFileAppender.getMaxBackupIndex()",1,1,1
"org.apache.log4j.RollingFileAppender.getMaximumFileSize()",1,1,1
"org.apache.log4j.RollingFileAppender.rollOver()",1,7,7
"org.apache.log4j.RollingFileAppender.setFile(String,boolean,boolean,int)",1,2,2
"org.apache.log4j.RollingFileAppender.setMaxBackupIndex(int)",1,1,1
"org.apache.log4j.RollingFileAppender.setMaxFileSize(String)",1,1,1
"org.apache.log4j.RollingFileAppender.setMaximumFileSize(long)",1,1,1
"org.apache.log4j.RollingFileAppender.setQWForFiles(Writer)",1,1,1
"org.apache.log4j.RollingFileAppender.subAppend(LoggingEvent)",1,3,3
"org.apache.log4j.SimpleLayout.SimpleLayout()",1,1,1
"org.apache.log4j.SimpleLayout.activateOptions()",1,1,1
"org.apache.log4j.SimpleLayout.format(LoggingEvent)",1,1,1
"org.apache.log4j.TTCCLayout.TTCCLayout()",1,1,1
"org.apache.log4j.TTCCLayout.TTCCLayout(String)",1,1,1
"org.apache.log4j.TTCCLayout.activateOptions()",1,1,1
"org.apache.log4j.TTCCLayout.format(LoggingEvent)",1,5,5
"org.apache.log4j.TTCCLayout.getCategoryPrefixing()",1,1,1
"org.apache.log4j.TTCCLayout.getContextPrinting()",1,1,1
"org.apache.log4j.TTCCLayout.getThreadPrinting()",1,1,1
"org.apache.log4j.TTCCLayout.setCategoryPrefixing(boolean)",1,1,1
"org.apache.log4j.TTCCLayout.setContextPrinting(boolean)",1,1,1
"org.apache.log4j.TTCCLayout.setThreadPrinting(boolean)",1,1,1
"org.apache.log4j.WriterAppender.DefaultErrorHandler.DefaultErrorHandler(WriterAppender)",1,1,1
"org.apache.log4j.WriterAppender.DefaultErrorHandler.activateOptions()",1,1,1
"org.apache.log4j.WriterAppender.DefaultErrorHandler.error(String)",1,1,1
"org.apache.log4j.WriterAppender.DefaultErrorHandler.error(String,Exception,int)",1,1,1
"org.apache.log4j.WriterAppender.DefaultErrorHandler.error(String,Exception,int,LoggingEvent)",1,1,1
"org.apache.log4j.WriterAppender.DefaultErrorHandler.setAppender(Appender)",1,1,1
"org.apache.log4j.WriterAppender.DefaultErrorHandler.setBackupAppender(Appender)",1,1,1
"org.apache.log4j.WriterAppender.DefaultErrorHandler.setLogger(Logger)",1,1,1
"org.apache.log4j.WriterAppender.WriterAppender()",1,1,1
"org.apache.log4j.WriterAppender.WriterAppender(Layout,OutputStream)",1,1,1
"org.apache.log4j.WriterAppender.WriterAppender(Layout,Writer)",1,1,1
"org.apache.log4j.WriterAppender.activateOptions()",1,4,4
"org.apache.log4j.WriterAppender.append(LoggingEvent)",2,1,2
"org.apache.log4j.WriterAppender.checkEntryConditions()",3,3,3
"org.apache.log4j.WriterAppender.close()",2,1,2
"org.apache.log4j.WriterAppender.closeWriter()",1,3,3
"org.apache.log4j.WriterAppender.createQuietWriter(Writer)",1,1,2
"org.apache.log4j.WriterAppender.createWriter(OutputStream)",1,3,4
"org.apache.log4j.WriterAppender.getEncoding()",1,1,1
"org.apache.log4j.WriterAppender.getImmediateFlush()",1,1,1
"org.apache.log4j.WriterAppender.requiresLayout()",1,1,1
"org.apache.log4j.WriterAppender.reset()",1,1,1
"org.apache.log4j.WriterAppender.setEncoding(String)",1,1,1
"org.apache.log4j.WriterAppender.setErrorHandler(ErrorHandler)",1,3,3
"org.apache.log4j.WriterAppender.setImmediateFlush(boolean)",1,1,1
"org.apache.log4j.WriterAppender.setWriter(Writer)",1,1,1
"org.apache.log4j.WriterAppender.subAppend(LoggingEvent)",2,5,6
"org.apache.log4j.WriterAppender.writeFooter()",1,3,4
"org.apache.log4j.WriterAppender.writeHeader()",1,3,4
"org.apache.log4j.concurrent.ConcurrentAppender.ConcurrentAppender(boolean)",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.FilterChain.accept(LoggingEvent)",5,3,5
"org.apache.log4j.concurrent.ConcurrentAppender.FilterChain.addFilter(Filter)",2,2,3
"org.apache.log4j.concurrent.ConcurrentAppender.FilterChain.clear()",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.FilterChain.getHead()",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.FilterChain.toString()",1,3,3
"org.apache.log4j.concurrent.ConcurrentAppender.activateOptions()",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.addFilter(Filter)",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.clearFilters()",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.close()",1,3,3
"org.apache.log4j.concurrent.ConcurrentAppender.doAppend(LoggingEvent)",6,4,7
"org.apache.log4j.concurrent.ConcurrentAppender.finalize()",1,2,2
"org.apache.log4j.concurrent.ConcurrentAppender.getClosed()",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.getErrorHandler()",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.getFilter()",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.getLayout()",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.getName()",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.getThreshold()",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.isActive()",1,2,2
"org.apache.log4j.concurrent.ConcurrentAppender.isAsSevereAsThreshold(Priority)",1,2,2
"org.apache.log4j.concurrent.ConcurrentAppender.isClosed()",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.setErrorHandler(ErrorHandler)",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.setLayout(Layout)",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.setName(String)",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.setThreshold(Priority)",1,1,1
"org.apache.log4j.concurrent.ConcurrentAppender.toString()",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.ConsoleAppender()",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.ConsoleAppender(Layout)",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.ConsoleAppender(Layout,String)",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemErrStream.SystemErrStream()",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemErrStream.close()",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemErrStream.flush()",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemErrStream.write(byte[])",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemErrStream.write(byte[],int,int)",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemErrStream.write(int)",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemOutStream.SystemOutStream()",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemOutStream.close()",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemOutStream.flush()",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemOutStream.write(byte[])",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemOutStream.write(byte[],int,int)",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.SystemOutStream.write(int)",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.activateOptions()",1,4,4
"org.apache.log4j.concurrent.ConsoleAppender.closeWriter()",1,2,2
"org.apache.log4j.concurrent.ConsoleAppender.getFollow()",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.getTarget()",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.setFollow(boolean)",1,1,1
"org.apache.log4j.concurrent.ConsoleAppender.setTarget(String)",1,3,3
"org.apache.log4j.concurrent.FileAppender.FileAppender()",1,1,1
"org.apache.log4j.concurrent.FileAppender.FileAppender(Layout,String)",1,1,1
"org.apache.log4j.concurrent.FileAppender.FileAppender(Layout,String,boolean)",1,1,1
"org.apache.log4j.concurrent.FileAppender.FileAppender(Layout,String,boolean,boolean,int)",1,1,1
"org.apache.log4j.concurrent.FileAppender.activateOptions()",1,3,3
"org.apache.log4j.concurrent.FileAppender.closeFile()",1,1,1
"org.apache.log4j.concurrent.FileAppender.createOutputStream()",2,3,4
"org.apache.log4j.concurrent.FileAppender.getAppend()",1,1,1
"org.apache.log4j.concurrent.FileAppender.getBufferSize()",1,1,1
"org.apache.log4j.concurrent.FileAppender.getBufferedIO()",1,1,1
"org.apache.log4j.concurrent.FileAppender.getFile()",1,1,1
"org.apache.log4j.concurrent.FileAppender.setAppend(boolean)",1,1,1
"org.apache.log4j.concurrent.FileAppender.setBufferSize(int)",1,1,1
"org.apache.log4j.concurrent.FileAppender.setBufferedIO(boolean)",1,1,1
"org.apache.log4j.concurrent.FileAppender.setFile(String)",1,1,1
"org.apache.log4j.concurrent.FileAppender.setFile(String,boolean,boolean,int)",1,1,2
"org.apache.log4j.concurrent.ReentrantWriterPreferenceReadWriteLock.allowReader()",1,2,3
"org.apache.log4j.concurrent.ReentrantWriterPreferenceReadWriteLock.endRead()",5,2,7
"org.apache.log4j.concurrent.ReentrantWriterPreferenceReadWriteLock.endWrite()",4,3,5
"org.apache.log4j.concurrent.ReentrantWriterPreferenceReadWriteLock.startRead()",3,3,3
"org.apache.log4j.concurrent.ReentrantWriterPreferenceReadWriteLock.startWrite()",4,6,6
"org.apache.log4j.concurrent.RollingFileAppender.CountingOutputStream.CountingOutputStream(OutputStream,RollingFileAppender)",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.CountingOutputStream.close()",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.CountingOutputStream.flush()",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.CountingOutputStream.write(byte[])",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.CountingOutputStream.write(byte[],int,int)",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.CountingOutputStream.write(int)",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.RollingFileAppender()",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.activateOptions()",3,9,12
"org.apache.log4j.concurrent.RollingFileAppender.createWriter(OutputStream)",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.getFileLength()",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.getRollingPolicy()",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.getTriggeringPolicy()",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.incrementFileLength(int)",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.internalClose()",1,2,2
"org.apache.log4j.concurrent.RollingFileAppender.isTriggeringEvent(LoggingEvent)",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.rollover()",3,16,19
"org.apache.log4j.concurrent.RollingFileAppender.setFileLength(long)",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.setRollingPolicy(RollingPolicy)",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.setTriggeringPolicy(TriggeringPolicy)",1,1,1
"org.apache.log4j.concurrent.RollingFileAppender.subAppend(LoggingEvent)",2,5,5
"org.apache.log4j.concurrent.SynchronizedBoolean.SynchronizedBoolean(boolean)",1,1,1
"org.apache.log4j.concurrent.SynchronizedBoolean.get()",1,1,1
"org.apache.log4j.concurrent.SynchronizedBoolean.set(boolean)",1,1,1
"org.apache.log4j.concurrent.SynchronizedBoolean.toString()",1,1,1
"org.apache.log4j.concurrent.WriterAppender.WriterAppender()",1,1,1
"org.apache.log4j.concurrent.WriterAppender.activateOptions()",3,3,3
"org.apache.log4j.concurrent.WriterAppender.append(LoggingEvent)",1,1,1
"org.apache.log4j.concurrent.WriterAppender.closeWriter()",1,2,2
"org.apache.log4j.concurrent.WriterAppender.closeWriter0()",2,2,3
"org.apache.log4j.concurrent.WriterAppender.createWriter(OutputStream)",1,3,4
"org.apache.log4j.concurrent.WriterAppender.getEncoding()",1,1,1
"org.apache.log4j.concurrent.WriterAppender.getImmediateFlush()",1,1,1
"org.apache.log4j.concurrent.WriterAppender.internalClose()",1,1,1
"org.apache.log4j.concurrent.WriterAppender.requiresLayout()",1,1,1
"org.apache.log4j.concurrent.WriterAppender.setEncoding(String)",1,1,1
"org.apache.log4j.concurrent.WriterAppender.setImmediateFlush(boolean)",1,1,1
"org.apache.log4j.concurrent.WriterAppender.setWriter(Writer)",1,2,2
"org.apache.log4j.concurrent.WriterAppender.subAppend(LoggingEvent)",1,7,7
"org.apache.log4j.concurrent.WriterAppender.writeFooter()",1,4,5
"org.apache.log4j.concurrent.WriterAppender.writeHeader()",1,4,5
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.ReaderLock.acquire()",6,5,7
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.ReaderLock.attempt(long)",8,7,9
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.ReaderLock.release()",1,2,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.ReaderLock.signalWaiters()",1,1,1
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.WriterLock.acquire()",6,5,7
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.WriterLock.attempt(long)",8,7,9
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.WriterLock.release()",1,2,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.WriterLock.signalWaiters()",1,1,1
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.allowReader()",1,1,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.cancelledWaitingReader()",1,1,1
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.cancelledWaitingWriter()",1,1,1
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.endRead()",2,1,3
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.endWrite()",3,2,4
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.readLock()",1,1,1
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.startRead()",1,1,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.startReadFromNewReader()",1,1,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.startReadFromWaitingReader()",1,1,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.startWrite()",1,2,3
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.startWriteFromNewWriter()",1,1,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.startWriteFromWaitingWriter()",1,1,2
"org.apache.log4j.concurrent.WriterPreferenceReadWriteLock.writeLock()",1,1,1
"org.apache.log4j.config.ConfiguratorBase.addError(ErrorItem)",1,1,1
"org.apache.log4j.config.ConfiguratorBase.attachListAppender(LoggerRepository)",1,1,1
"org.apache.log4j.config.ConfiguratorBase.attachTemporaryConsoleAppender(LoggerRepository)",1,1,1
"org.apache.log4j.config.ConfiguratorBase.detachListAppender(LoggerRepository)",2,4,4
"org.apache.log4j.config.ConfiguratorBase.detachTemporaryConsoleAppender(LoggerRepository,List)",2,2,2
"org.apache.log4j.config.ConfiguratorBase.dumpErrors()",1,2,2
"org.apache.log4j.config.ConfiguratorBase.getLogger(LoggerRepository)",1,1,1
"org.apache.log4j.config.PropertyGetter.PropertyGetter(Object)",1,1,1
"org.apache.log4j.config.PropertyGetter.getProperties(Object,PropertyCallback,String)",1,1,2
"org.apache.log4j.config.PropertyGetter.getProperties(PropertyCallback,String)",4,5,6
"org.apache.log4j.config.PropertyGetter.isHandledType(Class)",1,5,5
"org.apache.log4j.config.PropertyPrinter.PropertyPrinter(PrintWriter)",1,1,1
"org.apache.log4j.config.PropertyPrinter.PropertyPrinter(PrintWriter,boolean)",1,1,1
"org.apache.log4j.config.PropertyPrinter.capitalize(String)",3,4,4
"org.apache.log4j.config.PropertyPrinter.foundProperty(Object,String,String,Object)",2,3,4
"org.apache.log4j.config.PropertyPrinter.genAppName()",1,1,1
"org.apache.log4j.config.PropertyPrinter.isGenAppName(String)",4,4,6
"org.apache.log4j.config.PropertyPrinter.main(String[])",1,1,1
"org.apache.log4j.config.PropertyPrinter.print(PrintWriter)",1,2,2
"org.apache.log4j.config.PropertyPrinter.printOptions(PrintWriter,Logger)",1,11,11
"org.apache.log4j.config.PropertyPrinter.printOptions(PrintWriter,Object,String)",1,1,1
"org.apache.log4j.config.PropertySetter.PropertySetter(Object)",1,1,1
"org.apache.log4j.config.PropertySetter.activate()",1,2,2
"org.apache.log4j.config.PropertySetter.addComponent(String,Object)",1,5,5
"org.apache.log4j.config.PropertySetter.canContainComponent(String)",4,4,4
"org.apache.log4j.config.PropertySetter.capitalizeFirstLetter(String)",1,1,1
"org.apache.log4j.config.PropertySetter.convertArg(String,Class)",9,7,9
"org.apache.log4j.config.PropertySetter.getMethod(String)",3,4,4
"org.apache.log4j.config.PropertySetter.getObjClass()",1,1,1
"org.apache.log4j.config.PropertySetter.getPropertyDescriptor(String)",3,3,4
"org.apache.log4j.config.PropertySetter.introspect()",1,3,4
"org.apache.log4j.config.PropertySetter.setComponent(String,Object)",4,5,5
"org.apache.log4j.config.PropertySetter.setProperties(Object,Properties,String)",1,1,1
"org.apache.log4j.config.PropertySetter.setProperties(Properties,String)",5,4,6
"org.apache.log4j.config.PropertySetter.setProperty(PropertyDescriptor,String,String)",4,1,6
"org.apache.log4j.config.PropertySetter.setProperty(String,String)",2,3,5
"org.apache.log4j.config.PropertySetterException.PropertySetterException(String)",1,1,1
"org.apache.log4j.config.PropertySetterException.PropertySetterException(Throwable)",1,1,1
"org.apache.log4j.config.PropertySetterException.getMessage()",1,2,3
"org.apache.log4j.db.ConnectionSourceSkeleton.discoverConnnectionProperties()",2,3,3
"org.apache.log4j.db.ConnectionSourceSkeleton.getPassword()",1,1,1
"org.apache.log4j.db.ConnectionSourceSkeleton.getSQLDialectCode()",1,1,1
"org.apache.log4j.db.ConnectionSourceSkeleton.getUser()",1,1,1
"org.apache.log4j.db.ConnectionSourceSkeleton.setPassword(String)",1,1,1
"org.apache.log4j.db.ConnectionSourceSkeleton.setUser(String)",1,1,1
"org.apache.log4j.db.ConnectionSourceSkeleton.supportsBatchUpdates()",1,1,1
"org.apache.log4j.db.ConnectionSourceSkeleton.supportsGetGeneratedKeys()",1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.CustomReceiverJob.execute()",1,15,20
"org.apache.log4j.db.CustomSQLDBReceiver.activateOptions()",3,2,4
"org.apache.log4j.db.CustomSQLDBReceiver.close()",1,4,4
"org.apache.log4j.db.CustomSQLDBReceiver.closeConnection(Connection)",1,2,3
"org.apache.log4j.db.CustomSQLDBReceiver.finalize()",1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.getConnectionSource()",1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.getIDField()",1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.getRefreshMillis()",1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.getSql()",1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.isPaused()",1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.setConnectionSource(ConnectionSource)",1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.setIDField(String)",1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.setPaused(boolean)",1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.setRefreshMillis(int)",1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.setSql(String)",1,1,1
"org.apache.log4j.db.CustomSQLDBReceiver.shutdown()",1,2,2
"org.apache.log4j.db.DBAppender.DBAppender()",1,1,1
"org.apache.log4j.db.DBAppender.activateOptions()",3,2,5
"org.apache.log4j.db.DBAppender.append(LoggingEvent)",3,19,20
"org.apache.log4j.db.DBAppender.close()",1,1,1
"org.apache.log4j.db.DBAppender.getConnectionSource()",1,1,1
"org.apache.log4j.db.DBAppender.getLocationInfo()",1,1,1
"org.apache.log4j.db.DBAppender.requiresLayout()",1,1,1
"org.apache.log4j.db.DBAppender.setConnectionSource(ConnectionSource)",1,1,1
"org.apache.log4j.db.DBAppender.setLocationInfo(boolean)",1,1,1
"org.apache.log4j.db.DBHelper.closeConnection(Connection)",1,2,3
"org.apache.log4j.db.DBHelper.closeStatement(Statement)",1,2,3
"org.apache.log4j.db.DBHelper.computeReferenceMask(LoggingEvent)",1,1,3
"org.apache.log4j.db.DBReceiver.activateOptions()",3,2,4
"org.apache.log4j.db.DBReceiver.getConnectionSource()",1,1,1
"org.apache.log4j.db.DBReceiver.getRefreshMillis()",1,1,1
"org.apache.log4j.db.DBReceiver.isPaused()",1,1,1
"org.apache.log4j.db.DBReceiver.setConnectionSource(ConnectionSource)",1,1,1
"org.apache.log4j.db.DBReceiver.setPaused(boolean)",1,1,1
"org.apache.log4j.db.DBReceiver.setRefreshMillis(int)",1,1,1
"org.apache.log4j.db.DBReceiver.shutdown()",1,2,2
"org.apache.log4j.db.DBReceiverJob.DBReceiverJob(DBReceiver)",1,1,1
"org.apache.log4j.db.DBReceiverJob.closeConnection(Connection)",1,2,3
"org.apache.log4j.db.DBReceiverJob.execute()",1,7,7
"org.apache.log4j.db.DBReceiverJob.getException(Connection,long,LoggingEvent)",1,4,4
"org.apache.log4j.db.DBReceiverJob.getProperties(Connection,long,LoggingEvent)",1,2,2
"org.apache.log4j.db.DataSourceConnectionSource.activateOptions()",1,6,6
"org.apache.log4j.db.DataSourceConnectionSource.getConnection()",3,3,3
"org.apache.log4j.db.DataSourceConnectionSource.getDataSource()",1,1,1
"org.apache.log4j.db.DataSourceConnectionSource.setDataSource(DataSource)",1,1,1
"org.apache.log4j.db.DriverManagerConnectionSource.activateOptions()",1,3,3
"org.apache.log4j.db.DriverManagerConnectionSource.getConnection()",2,2,2
"org.apache.log4j.db.DriverManagerConnectionSource.getDriverClass()",1,1,1
"org.apache.log4j.db.DriverManagerConnectionSource.getUrl()",1,1,1
"org.apache.log4j.db.DriverManagerConnectionSource.setDriverClass(String)",1,1,1
"org.apache.log4j.db.DriverManagerConnectionSource.setUrl(String)",1,1,1
"org.apache.log4j.db.JNDIConnectionSource.activateOptions()",1,2,2
"org.apache.log4j.db.JNDIConnectionSource.getConnection()",1,5,5
"org.apache.log4j.db.JNDIConnectionSource.getJndiLocation()",1,1,1
"org.apache.log4j.db.JNDIConnectionSource.lookupDataSource()",2,1,2
"org.apache.log4j.db.JNDIConnectionSource.setJndiLocation(String)",1,1,1
"org.apache.log4j.db.dialect.HSQLDBDialect.getSelectInsertId()",1,1,1
"org.apache.log4j.db.dialect.MsSQLDialect.getSelectInsertId()",1,1,1
"org.apache.log4j.db.dialect.MySQLDialect.getSelectInsertId()",1,1,1
"org.apache.log4j.db.dialect.OracleDialect.getSelectInsertId()",1,1,1
"org.apache.log4j.db.dialect.PostgreSQLDialect.getSelectInsertId()",1,1,1
"org.apache.log4j.db.dialect.Util.discoverSQLDialect(DatabaseMetaData)",6,5,7
"org.apache.log4j.db.dialect.Util.getDialectFromCode(int)",2,2,6
"org.apache.log4j.db.dialect.Util.supportsBatchUpdates(DatabaseMetaData)",1,2,2
"org.apache.log4j.db.dialect.Util.supportsGetGeneratedKeys(DatabaseMetaData)",1,2,2
"org.apache.log4j.filter.AndFilter.activateOptions()",1,1,1
"org.apache.log4j.filter.AndFilter.addFilter(Filter)",1,2,2
"org.apache.log4j.filter.AndFilter.decide(LoggingEvent)",3,3,5
"org.apache.log4j.filter.AndFilter.setAcceptOnMatch(boolean)",1,1,1
"org.apache.log4j.filter.DenyAllFilter.decide(LoggingEvent)",1,1,1
"org.apache.log4j.filter.DenyAllFilter.getOptionStrings()",1,1,1
"org.apache.log4j.filter.DenyAllFilter.setOption(String,String)",1,1,1
"org.apache.log4j.filter.ExpressionFilter.activateOptions()",1,1,1
"org.apache.log4j.filter.ExpressionFilter.decide(LoggingEvent)",2,1,3
"org.apache.log4j.filter.ExpressionFilter.getAcceptOnMatch()",1,1,1
"org.apache.log4j.filter.ExpressionFilter.getConvertInFixToPostFix()",1,1,1
"org.apache.log4j.filter.ExpressionFilter.getExpression()",1,1,1
"org.apache.log4j.filter.ExpressionFilter.setAcceptOnMatch(boolean)",1,1,1
"org.apache.log4j.filter.ExpressionFilter.setConvertInFixToPostFix(boolean)",1,1,1
"org.apache.log4j.filter.ExpressionFilter.setExpression(String)",1,1,1
"org.apache.log4j.filter.LevelMatchFilter.decide(LoggingEvent)",4,1,5
"org.apache.log4j.filter.LevelMatchFilter.getAcceptOnMatch()",1,1,1
"org.apache.log4j.filter.LevelMatchFilter.getLevelToMatch()",1,2,2
"org.apache.log4j.filter.LevelMatchFilter.setAcceptOnMatch(boolean)",1,1,1
"org.apache.log4j.filter.LevelMatchFilter.setLevelToMatch(String)",1,1,1
"org.apache.log4j.filter.LevelRangeFilter.decide(LoggingEvent)",6,3,6
"org.apache.log4j.filter.LevelRangeFilter.getAcceptOnMatch()",1,1,1
"org.apache.log4j.filter.LevelRangeFilter.getLevelMax()",1,1,1
"org.apache.log4j.filter.LevelRangeFilter.getLevelMin()",1,1,1
"org.apache.log4j.filter.LevelRangeFilter.setAcceptOnMatch(boolean)",1,1,1
"org.apache.log4j.filter.LevelRangeFilter.setLevelMax(Level)",1,1,1
"org.apache.log4j.filter.LevelRangeFilter.setLevelMin(Level)",1,1,1
"org.apache.log4j.filter.LocationInfoFilter.activateOptions()",1,1,1
"org.apache.log4j.filter.LocationInfoFilter.decide(LoggingEvent)",1,3,3
"org.apache.log4j.filter.LocationInfoFilter.getConvertInFixToPostFix()",1,1,1
"org.apache.log4j.filter.LocationInfoFilter.getExpression()",1,1,1
"org.apache.log4j.filter.LocationInfoFilter.setConvertInFixToPostFix(boolean)",1,1,1
"org.apache.log4j.filter.LocationInfoFilter.setExpression(String)",1,1,1
"org.apache.log4j.filter.MapFilter.decide(LoggingEvent)",1,4,5
"org.apache.log4j.filter.PropertyFilter.decide(LoggingEvent)",1,4,4
"org.apache.log4j.filter.PropertyFilter.parseProperties(String)",1,2,2
"org.apache.log4j.filter.PropertyFilter.setProperties(String)",1,1,1
"org.apache.log4j.filter.ReflectionFilter.decide(LoggingEvent)",1,8,9
"org.apache.log4j.filter.StringMatchFilter.decide(LoggingEvent)",4,1,5
"org.apache.log4j.filter.StringMatchFilter.getAcceptOnMatch()",1,1,1
"org.apache.log4j.filter.StringMatchFilter.getStringToMatch()",1,1,1
"org.apache.log4j.filter.StringMatchFilter.setAcceptOnMatch(boolean)",1,1,1
"org.apache.log4j.filter.StringMatchFilter.setStringToMatch(String)",1,1,1
"org.apache.log4j.helpers.AbsoluteTimeDateFormat.AbsoluteTimeDateFormat()",1,1,1
"org.apache.log4j.helpers.AbsoluteTimeDateFormat.AbsoluteTimeDateFormat(String)",1,1,1
"org.apache.log4j.helpers.AbsoluteTimeDateFormat.AbsoluteTimeDateFormat(String,Locale)",1,1,1
"org.apache.log4j.helpers.AbsoluteTimeDateFormat.AbsoluteTimeDateFormat(String,TimeZone)",1,1,1
"org.apache.log4j.helpers.AbsoluteTimeDateFormat.AbsoluteTimeDateFormat(TimeZone)",1,1,1
"org.apache.log4j.helpers.AbsoluteTimeDateFormat.format(Date,StringBuffer,FieldPosition)",1,1,1
"org.apache.log4j.helpers.AbsoluteTimeDateFormat.parse(String,ParsePosition)",1,1,1
"org.apache.log4j.helpers.AppenderAttachableImpl.addAppender(Appender)",2,2,4
"org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(LoggingEvent)",1,3,3
"org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders()",2,2,2
"org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String)",4,2,5
"org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender)",4,2,5
"org.apache.log4j.helpers.AppenderAttachableImpl.removeAllAppenders()",1,3,3
"org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(Appender)",2,1,3
"org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String)",4,3,5
"org.apache.log4j.helpers.BoundedFIFO.BoundedFIFO(int)",2,1,2
"org.apache.log4j.helpers.BoundedFIFO.get()",2,1,3
"org.apache.log4j.helpers.BoundedFIFO.getMaxSize()",1,1,1
"org.apache.log4j.helpers.BoundedFIFO.isFull()",1,1,1
"org.apache.log4j.helpers.BoundedFIFO.length()",1,1,1
"org.apache.log4j.helpers.BoundedFIFO.min(int,int)",1,1,2
"org.apache.log4j.helpers.BoundedFIFO.put(LoggingEvent)",1,1,3
"org.apache.log4j.helpers.BoundedFIFO.resize(int)",2,2,5
"org.apache.log4j.helpers.BoundedFIFO.wasEmpty()",1,1,1
"org.apache.log4j.helpers.BoundedFIFO.wasFull()",1,1,1
"org.apache.log4j.helpers.CountingQuietWriter.CountingQuietWriter(Writer,ErrorHandler)",1,1,1
"org.apache.log4j.helpers.CountingQuietWriter.getCount()",1,1,1
"org.apache.log4j.helpers.CountingQuietWriter.setCount(long)",1,1,1
"org.apache.log4j.helpers.CountingQuietWriter.write(String)",1,2,2
"org.apache.log4j.helpers.CyclicBuffer.CyclicBuffer(int)",2,1,2
"org.apache.log4j.helpers.CyclicBuffer.add(LoggingEvent)",1,1,4
"org.apache.log4j.helpers.CyclicBuffer.get()",1,1,3
"org.apache.log4j.helpers.CyclicBuffer.get(int)",2,1,3
"org.apache.log4j.helpers.CyclicBuffer.getMaxSize()",1,1,1
"org.apache.log4j.helpers.CyclicBuffer.length()",1,1,1
"org.apache.log4j.helpers.CyclicBuffer.resize(int)",3,1,7
"org.apache.log4j.helpers.DateLayout.DateLayout()",1,1,1
"org.apache.log4j.helpers.DateLayout.DateLayout(String)",1,1,1
"org.apache.log4j.helpers.DateLayout.activateOptions()",1,1,1
"org.apache.log4j.helpers.DateLayout.dateFormat(StringBuffer,LoggingEvent)",1,2,2
"org.apache.log4j.helpers.DateLayout.getDateFormat()",1,1,1
"org.apache.log4j.helpers.DateLayout.getOptionStrings()",1,1,1
"org.apache.log4j.helpers.DateLayout.getTimeZone()",1,1,1
"org.apache.log4j.helpers.DateLayout.setDateFormat(DateFormat,TimeZone)",1,1,1
"org.apache.log4j.helpers.DateLayout.setDateFormat(String)",1,1,2
"org.apache.log4j.helpers.DateLayout.setDateFormat(String,TimeZone)",2,6,8
"org.apache.log4j.helpers.DateLayout.setOption(String,String)",1,2,3
"org.apache.log4j.helpers.DateLayout.setTimeZone(String)",1,1,1
"org.apache.log4j.helpers.DateTimeDateFormat.DateTimeDateFormat()",1,1,1
"org.apache.log4j.helpers.DateTimeDateFormat.DateTimeDateFormat(Locale)",1,1,1
"org.apache.log4j.helpers.DateTimeDateFormat.DateTimeDateFormat(TimeZone)",1,1,1
"org.apache.log4j.helpers.FileWatchdog.FileWatchdog(String)",1,1,1
"org.apache.log4j.helpers.FileWatchdog.checkAndConfigure()",1,5,5
"org.apache.log4j.helpers.FileWatchdog.run()",1,2,3
"org.apache.log4j.helpers.FileWatchdog.setDelay(long)",1,1,1
"org.apache.log4j.helpers.FormattingInfo.dump()",1,1,1
"org.apache.log4j.helpers.FormattingInfo.reset()",1,1,1
"org.apache.log4j.helpers.ISO8601DateFormat.ISO8601DateFormat()",1,1,1
"org.apache.log4j.helpers.ISO8601DateFormat.ISO8601DateFormat(TimeZone)",1,1,1
"org.apache.log4j.helpers.IntializationUtil.initialConfiguration(LoggerRepository,String,String)",2,4,5
"org.apache.log4j.helpers.IntializationUtil.log4jInternalConfiguration(LoggerRepository)",1,1,1
"org.apache.log4j.helpers.JNDIUtil.getInitialContext()",1,1,1
"org.apache.log4j.helpers.JNDIUtil.lookup(Context,String)",2,1,3
"org.apache.log4j.helpers.Loader.getResource(String)",5,3,6
"org.apache.log4j.helpers.Loader.getResource(String,Class)",1,1,1
"org.apache.log4j.helpers.Loader.getTCL()",1,1,1
"org.apache.log4j.helpers.Loader.isJava1()",1,1,1
"org.apache.log4j.helpers.Loader.loadClass(String)",2,3,4
"org.apache.log4j.helpers.LogLog.debug(String)",1,2,2
"org.apache.log4j.helpers.LogLog.debug(String,Throwable)",1,3,3
"org.apache.log4j.helpers.LogLog.error(String)",1,1,1
"org.apache.log4j.helpers.LogLog.error(String,Throwable)",1,2,2
"org.apache.log4j.helpers.LogLog.info(String)",1,1,1
"org.apache.log4j.helpers.LogLog.setInternalDebugging(boolean)",1,1,1
"org.apache.log4j.helpers.LogLog.setQuietMode(boolean)",1,1,1
"org.apache.log4j.helpers.LogLog.warn(String)",1,1,1
"org.apache.log4j.helpers.LogLog.warn(String,Throwable)",1,2,2
"org.apache.log4j.helpers.LoggerTraverse.LoggerTraverse()",1,1,1
"org.apache.log4j.helpers.LoggerTraverse.LoggerTraverse(LoggerRepository)",1,1,1
"org.apache.log4j.helpers.LoggerTraverse.getLevelForPackage(String)",2,4,5
"org.apache.log4j.helpers.LoggerTraverse.getLevelForRootLogger()",1,1,1
"org.apache.log4j.helpers.LoggerTraverse.getLevelIsSetForPackage(String)",3,5,6
"org.apache.log4j.helpers.LoggerTraverse.getLoggerNames()",1,2,2
"org.apache.log4j.helpers.LoggerTraverse.getLoggerPackageNames(String)",6,7,8
"org.apache.log4j.helpers.LoggerTraverse.iteratePackages(String,int,LoggerTraverse)",1,4,6
"org.apache.log4j.helpers.LoggerTraverse.loggerHasSubPackages(String)",3,3,4
"org.apache.log4j.helpers.LoggerTraverse.main(String[])",1,1,1
"org.apache.log4j.helpers.LoggerTraverse.update(LoggerRepository)",1,2,2
"org.apache.log4j.helpers.MessageFormatter.format(String,Object)",3,4,7
"org.apache.log4j.helpers.MessageFormatter.format(String,Object,Object)",5,5,7
"org.apache.log4j.helpers.NullEnumeration.NullEnumeration()",1,1,1
"org.apache.log4j.helpers.NullEnumeration.getInstance()",1,1,1
"org.apache.log4j.helpers.NullEnumeration.hasMoreElements()",1,1,1
"org.apache.log4j.helpers.NullEnumeration.nextElement()",1,1,1
"org.apache.log4j.helpers.OnlyOnceErrorHandler.activateOptions()",1,1,1
"org.apache.log4j.helpers.OnlyOnceErrorHandler.error(String)",1,1,1
"org.apache.log4j.helpers.OnlyOnceErrorHandler.error(String,Exception,int)",1,1,1
"org.apache.log4j.helpers.OnlyOnceErrorHandler.error(String,Exception,int,LoggingEvent)",1,1,1
"org.apache.log4j.helpers.OnlyOnceErrorHandler.setAppender(Appender)",1,1,1
"org.apache.log4j.helpers.OnlyOnceErrorHandler.setBackupAppender(Appender)",1,1,1
"org.apache.log4j.helpers.OnlyOnceErrorHandler.setLogger(Logger)",1,1,1
"org.apache.log4j.helpers.Option.isEmpty(String)",1,2,2
"org.apache.log4j.helpers.OptionConverter.concatanateArrays(String[],String[])",1,1,1
"org.apache.log4j.helpers.OptionConverter.convertSpecialChars(String)",1,3,11
"org.apache.log4j.helpers.OptionConverter.extractDefaultReplacement(String)",1,2,2
"org.apache.log4j.helpers.OptionConverter.findAndSubst(String,Properties)",2,2,3
"org.apache.log4j.helpers.OptionConverter.getLogger()",1,1,1
"org.apache.log4j.helpers.OptionConverter.getSystemProperty(String,String)",1,1,2
"org.apache.log4j.helpers.OptionConverter.instantiateByClassName(String,Class,Object)",3,5,5
"org.apache.log4j.helpers.OptionConverter.instantiateByKey(Properties,String,Class,Object)",2,2,2
"org.apache.log4j.helpers.OptionConverter.selectAndConfigure(URL,String,LoggerRepository)",3,7,7
"org.apache.log4j.helpers.OptionConverter.setLoggerRepository(LoggerRepository)",1,1,1
"org.apache.log4j.helpers.OptionConverter.stripDuplicateBackslashes(String)",5,4,5
"org.apache.log4j.helpers.OptionConverter.substVars(String,Properties)",5,8,9
"org.apache.log4j.helpers.OptionConverter.toBoolean(String,boolean)",4,1,4
"org.apache.log4j.helpers.OptionConverter.toFileSize(String,long)",3,6,7
"org.apache.log4j.helpers.OptionConverter.toInt(String,int)",2,3,3
"org.apache.log4j.helpers.OptionConverter.toLevel(String,Level)",5,9,11
"org.apache.log4j.helpers.PatternConverter.PatternConverter()",1,1,1
"org.apache.log4j.helpers.PatternConverter.PatternConverter(FormattingInfo)",1,1,1
"org.apache.log4j.helpers.PatternConverter.format(StringBuffer,LoggingEvent)",2,6,6
"org.apache.log4j.helpers.PatternConverter.spacePad(StringBuffer,int)",1,4,4
"org.apache.log4j.helpers.PatternParser.BasicPatternConverter.BasicPatternConverter(FormattingInfo,int)",1,1,1
"org.apache.log4j.helpers.PatternParser.BasicPatternConverter.convert(LoggingEvent)",7,7,7
"org.apache.log4j.helpers.PatternParser.CategoryPatternConverter.CategoryPatternConverter(FormattingInfo,int)",1,1,1
"org.apache.log4j.helpers.PatternParser.CategoryPatternConverter.getFullyQualifiedName(LoggingEvent)",1,1,1
"org.apache.log4j.helpers.PatternParser.ClassNamePatternConverter.ClassNamePatternConverter(FormattingInfo,int)",1,1,1
"org.apache.log4j.helpers.PatternParser.ClassNamePatternConverter.getFullyQualifiedName(LoggingEvent)",1,1,1
"org.apache.log4j.helpers.PatternParser.DatePatternConverter.DatePatternConverter(FormattingInfo,DateFormat)",1,1,1
"org.apache.log4j.helpers.PatternParser.DatePatternConverter.convert(LoggingEvent)",1,2,2
"org.apache.log4j.helpers.PatternParser.LiteralPatternConverter.LiteralPatternConverter(String)",1,1,1
"org.apache.log4j.helpers.PatternParser.LiteralPatternConverter.convert(LoggingEvent)",1,1,1
"org.apache.log4j.helpers.PatternParser.LiteralPatternConverter.format(StringBuffer,LoggingEvent)",1,1,1
"org.apache.log4j.helpers.PatternParser.LocationPatternConverter.LocationPatternConverter(FormattingInfo,int)",1,1,1
"org.apache.log4j.helpers.PatternParser.LocationPatternConverter.convert(LoggingEvent)",6,5,6
"org.apache.log4j.helpers.PatternParser.MDCPatternConverter.MDCPatternConverter(FormattingInfo,String)",1,1,1
"org.apache.log4j.helpers.PatternParser.MDCPatternConverter.convert(LoggingEvent)",2,2,2
"org.apache.log4j.helpers.PatternParser.NamedPatternConverter.NamedPatternConverter(FormattingInfo,int)",1,1,1
"org.apache.log4j.helpers.PatternParser.NamedPatternConverter.convert(LoggingEvent)",4,3,4
"org.apache.log4j.helpers.PatternParser.PatternParser(String)",1,1,1
"org.apache.log4j.helpers.PatternParser.addConverter(PatternConverter)",1,1,1
"org.apache.log4j.helpers.PatternParser.addToList(PatternConverter)",1,1,2
"org.apache.log4j.helpers.PatternParser.extractOption()",3,4,4
"org.apache.log4j.helpers.PatternParser.extractPrecisionOption()",1,4,4
"org.apache.log4j.helpers.PatternParser.finalizeConverter(char)",2,6,20
"org.apache.log4j.helpers.PatternParser.parse()",6,14,26
"org.apache.log4j.helpers.PlatformInfo.hasStackTraceElement()",1,2,3
"org.apache.log4j.helpers.PlatformInfo.isInVisualAge()",1,2,3
"org.apache.log4j.helpers.PlatformInfo.isJDK14OrLater()",1,1,1
"org.apache.log4j.helpers.PlatformInfo.isOnAS400()",1,3,5
"org.apache.log4j.helpers.QuietWriter.QuietWriter(Writer,ErrorHandler)",1,1,1
"org.apache.log4j.helpers.QuietWriter.flush()",1,2,2
"org.apache.log4j.helpers.QuietWriter.setErrorHandler(ErrorHandler)",2,1,2
"org.apache.log4j.helpers.QuietWriter.write(String)",1,2,2
"org.apache.log4j.helpers.ReaderWriterLock.ReaderWriterLock()",1,1,1
"org.apache.log4j.helpers.ReaderWriterLock.ReaderWriterLock(PrintWriter)",1,1,1
"org.apache.log4j.helpers.ReaderWriterLock.getReadLock()",1,4,6
"org.apache.log4j.helpers.ReaderWriterLock.getWriteLock()",1,4,6
"org.apache.log4j.helpers.ReaderWriterLock.printMessage(String)",1,1,1
"org.apache.log4j.helpers.ReaderWriterLock.releaseReadLock()",1,3,3
"org.apache.log4j.helpers.ReaderWriterLock.releaseWriteLock()",1,2,2
"org.apache.log4j.helpers.RelativeTimeDateFormat.RelativeTimeDateFormat()",1,1,1
"org.apache.log4j.helpers.RelativeTimeDateFormat.format(Date,StringBuffer,FieldPosition)",1,1,1
"org.apache.log4j.helpers.RelativeTimeDateFormat.parse(String,ParsePosition)",1,1,1
"org.apache.log4j.helpers.RelativeTimeDateFormat.setTimeZone(TimeZone)",1,1,1
"org.apache.log4j.helpers.SyslogQuietWriter.SyslogQuietWriter(Writer,int,ErrorHandler)",1,1,1
"org.apache.log4j.helpers.SyslogQuietWriter.setLevel(int)",1,1,1
"org.apache.log4j.helpers.SyslogQuietWriter.setSyslogFacility(int)",1,1,1
"org.apache.log4j.helpers.SyslogQuietWriter.write(String)",1,1,1
"org.apache.log4j.helpers.SyslogWriter.SyslogWriter(String)",2,9,11
"org.apache.log4j.helpers.SyslogWriter.close()",1,1,2
"org.apache.log4j.helpers.SyslogWriter.flush()",2,1,2
"org.apache.log4j.helpers.SyslogWriter.write(String)",1,1,1
"org.apache.log4j.helpers.SyslogWriter.write(char[],int,int)",1,1,1
"org.apache.log4j.helpers.ThreadLocalMap.childValue(Object)",2,2,2
"org.apache.log4j.helpers.Transform.appendEscapingCDATA(StringBuffer,String)",5,4,5
"org.apache.log4j.helpers.Transform.escapeTags(String)",2,7,8
"org.apache.log4j.helpers.UtilLoggingLevel.UtilLoggingLevel(int,String,int)",1,1,1
"org.apache.log4j.helpers.UtilLoggingLevel.getAllPossibleLevels()",1,1,1
"org.apache.log4j.helpers.UtilLoggingLevel.toLevel(String)",1,1,1
"org.apache.log4j.helpers.UtilLoggingLevel.toLevel(String,Level)",9,1,9
"org.apache.log4j.helpers.UtilLoggingLevel.toLevel(int)",1,1,1
"org.apache.log4j.helpers.UtilLoggingLevel.toLevel(int,UtilLoggingLevel)",9,2,9
"org.apache.log4j.jdbc.JDBCAppender.JDBCAppender()",1,1,1
"org.apache.log4j.jdbc.JDBCAppender.append(LoggingEvent)",1,2,2
"org.apache.log4j.jdbc.JDBCAppender.close()",1,4,4
"org.apache.log4j.jdbc.JDBCAppender.closeConnection(Connection)",1,1,1
"org.apache.log4j.jdbc.JDBCAppender.execute(String)",1,3,3
"org.apache.log4j.jdbc.JDBCAppender.finalize()",1,1,1
"org.apache.log4j.jdbc.JDBCAppender.flushBuffer()",1,3,3
"org.apache.log4j.jdbc.JDBCAppender.getBufferSize()",1,1,1
"org.apache.log4j.jdbc.JDBCAppender.getConnection()",1,3,3
"org.apache.log4j.jdbc.JDBCAppender.getLogStatement(LoggingEvent)",1,1,1
"org.apache.log4j.jdbc.JDBCAppender.getPassword()",1,1,1
"org.apache.log4j.jdbc.JDBCAppender.getSql()",1,1,1
"org.apache.log4j.jdbc.JDBCAppender.getURL()",1,1,1
"org.apache.log4j.jdbc.JDBCAppender.getUser()",1,1,1
"org.apache.log4j.jdbc.JDBCAppender.requiresLayout()",1,1,1
"org.apache.log4j.jdbc.JDBCAppender.setBufferSize(int)",1,1,1
"org.apache.log4j.jdbc.JDBCAppender.setDriver(String)",1,2,2
"org.apache.log4j.jdbc.JDBCAppender.setPassword(String)",1,1,1
"org.apache.log4j.jdbc.JDBCAppender.setSql(String)",1,2,2
"org.apache.log4j.jdbc.JDBCAppender.setURL(String)",1,1,1
"org.apache.log4j.jdbc.JDBCAppender.setUser(String)",1,1,1
"org.apache.log4j.jmx.AbstractDynamicMBean.getAttributes(String[])",3,3,5
"org.apache.log4j.jmx.AbstractDynamicMBean.getObjectName()",1,1,1
"org.apache.log4j.jmx.AbstractDynamicMBean.getServer()",1,1,1
"org.apache.log4j.jmx.AbstractDynamicMBean.postDeregister()",1,1,1
"org.apache.log4j.jmx.AbstractDynamicMBean.postRegister(Boolean)",1,1,1
"org.apache.log4j.jmx.AbstractDynamicMBean.preDeregister()",1,1,1
"org.apache.log4j.jmx.AbstractDynamicMBean.preRegister(MBeanServer,ObjectName)",1,1,1
"org.apache.log4j.jmx.AbstractDynamicMBean.setAttributes(AttributeList)",3,3,5
"org.apache.log4j.jmx.Agent.Agent()",1,1,1
"org.apache.log4j.jmx.Agent.start()",1,2,2
"org.apache.log4j.jmx.AppenderDynamicMBean.AppenderDynamicMBean(Appender)",1,1,1
"org.apache.log4j.jmx.AppenderDynamicMBean.buildDynamicMBeanInfo()",1,5,5
"org.apache.log4j.jmx.AppenderDynamicMBean.getAttribute(String)",4,4,7
"org.apache.log4j.jmx.AppenderDynamicMBean.getLogger()",1,1,1
"org.apache.log4j.jmx.AppenderDynamicMBean.getMBeanInfo()",1,1,1
"org.apache.log4j.jmx.AppenderDynamicMBean.invoke(String,Object[],String[])",2,4,4
"org.apache.log4j.jmx.AppenderDynamicMBean.isSupportedType(Class)",4,1,4
"org.apache.log4j.jmx.AppenderDynamicMBean.preRegister(MBeanServer,ObjectName)",1,1,1
"org.apache.log4j.jmx.AppenderDynamicMBean.registerLayoutMBean(Layout)",2,2,3
"org.apache.log4j.jmx.AppenderDynamicMBean.setAttribute(Attribute)",5,5,8
"org.apache.log4j.jmx.HierarchyDynamicMBean.HierarchyDynamicMBean()",1,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.HierarchyDynamicMBean(LoggerRepository)",2,1,2
"org.apache.log4j.jmx.HierarchyDynamicMBean.addLoggerMBean(Logger)",1,2,2
"org.apache.log4j.jmx.HierarchyDynamicMBean.addLoggerMBean(String)",2,2,2
"org.apache.log4j.jmx.HierarchyDynamicMBean.addLoggerMBeans()",1,2,2
"org.apache.log4j.jmx.HierarchyDynamicMBean.addNotificationListener(NotificationListener,NotificationFilter,Object)",1,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.appenderAddedEvent(Logger,Appender)",1,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.appenderRemovedEvent(Logger,Appender)",1,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.buildDynamicMBeanInfo()",1,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.getAttribute(String)",4,5,6
"org.apache.log4j.jmx.HierarchyDynamicMBean.getLogger()",1,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.getMBeanInfo()",1,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.getNotificationInfo()",1,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.invoke(String,Object[],String[])",4,3,4
"org.apache.log4j.jmx.HierarchyDynamicMBean.levelChangedEvent(Logger)",1,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.postRegister(Boolean)",1,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.removeNotificationListener(NotificationListener)",1,1,1
"org.apache.log4j.jmx.HierarchyDynamicMBean.setAttribute(Attribute)",3,2,4
"org.apache.log4j.jmx.LayoutDynamicMBean.LayoutDynamicMBean(Layout)",1,1,1
"org.apache.log4j.jmx.LayoutDynamicMBean.buildDynamicMBeanInfo()",1,5,5
"org.apache.log4j.jmx.LayoutDynamicMBean.getAttribute(String)",3,2,5
"org.apache.log4j.jmx.LayoutDynamicMBean.getLogger()",1,1,1
"org.apache.log4j.jmx.LayoutDynamicMBean.getMBeanInfo()",1,1,1
"org.apache.log4j.jmx.LayoutDynamicMBean.invoke(String,Object[],String[])",2,2,2
"org.apache.log4j.jmx.LayoutDynamicMBean.isSupportedType(Class)",4,1,4
"org.apache.log4j.jmx.LayoutDynamicMBean.setAttribute(Attribute)",4,4,7
"org.apache.log4j.jmx.LoggerDynamicMBean.LoggerDynamicMBean(Logger)",1,1,1
"org.apache.log4j.jmx.LoggerDynamicMBean.addAppender(String,String)",1,1,1
"org.apache.log4j.jmx.LoggerDynamicMBean.appenderMBeanRegistration()",1,2,2
"org.apache.log4j.jmx.LoggerDynamicMBean.buildDynamicMBeanInfo()",1,1,1
"org.apache.log4j.jmx.LoggerDynamicMBean.getAttribute(String)",6,6,7
"org.apache.log4j.jmx.LoggerDynamicMBean.getLogger()",1,1,1
"org.apache.log4j.jmx.LoggerDynamicMBean.getMBeanInfo()",1,1,1
"org.apache.log4j.jmx.LoggerDynamicMBean.handleNotification(Notification,Object)",1,1,1
"org.apache.log4j.jmx.LoggerDynamicMBean.invoke(String,Object[],String[])",2,2,2
"org.apache.log4j.jmx.LoggerDynamicMBean.postRegister(Boolean)",1,1,1
"org.apache.log4j.jmx.LoggerDynamicMBean.registerAppenderMBean(Appender)",1,3,3
"org.apache.log4j.jmx.LoggerDynamicMBean.setAttribute(Attribute)",4,4,6
"org.apache.log4j.jmx.MethodUnion.MethodUnion(Method,Method)",1,1,1
"org.apache.log4j.joran.JoranConfigurator.JoranConfigurator()",1,1,1
"org.apache.log4j.joran.JoranConfigurator.doConfigure(File,LoggerRepository)",1,1,1
"org.apache.log4j.joran.JoranConfigurator.doConfigure(InputSource,LoggerRepository)",1,1,1
"org.apache.log4j.joran.JoranConfigurator.doConfigure(InputStream,LoggerRepository)",1,1,1
"org.apache.log4j.joran.JoranConfigurator.doConfigure(ParseAction,LoggerRepository)",1,4,5
"org.apache.log4j.joran.JoranConfigurator.doConfigure(String,LoggerRepository)",1,1,1
"org.apache.log4j.joran.JoranConfigurator.doConfigure(URL,LoggerRepository)",1,1,1
"org.apache.log4j.joran.JoranConfigurator.getErrorList()",1,1,1
"org.apache.log4j.joran.JoranConfigurator.getExecutionContext()",1,1,1
"org.apache.log4j.joran.JoranConfigurator.getLogger()",1,1,1
"org.apache.log4j.joran.JoranConfigurator.selfInitialize(LoggerRepository)",1,1,1
"org.apache.log4j.joran.JoranConfigurator.setXIncludeAware(SAXParserFactory)",1,2,2
"org.apache.log4j.joran.action.Action.getColumnNumber(ExecutionContext)",2,2,2
"org.apache.log4j.joran.action.Action.getLineNumber(ExecutionContext)",2,2,2
"org.apache.log4j.joran.action.Action.toString()",1,1,1
"org.apache.log4j.joran.action.ActionData.ActionData(PropertySetter,int)",1,1,1
"org.apache.log4j.joran.action.AppenderAction.begin(ExecutionContext,String,Attributes)",1,3,3
"org.apache.log4j.joran.action.AppenderAction.end(ExecutionContext,String)",2,3,4
"org.apache.log4j.joran.action.AppenderAction.finish(ExecutionContext)",1,1,1
"org.apache.log4j.joran.action.AppenderRefAction.begin(ExecutionContext,String,Attributes)",4,5,5
"org.apache.log4j.joran.action.AppenderRefAction.end(ExecutionContext,String)",1,1,1
"org.apache.log4j.joran.action.AppenderRefAction.finish(ExecutionContext)",1,1,1
"org.apache.log4j.joran.action.ConfigurationAction.begin(ExecutionContext,String,Attributes)",1,4,4
"org.apache.log4j.joran.action.ConfigurationAction.end(ExecutionContext,String)",1,2,2
"org.apache.log4j.joran.action.ConfigurationAction.trueBoolean(String,String)",2,5,5
"org.apache.log4j.joran.action.ConversionRuleAction.begin(ExecutionContext,String,Attributes)",3,5,5
"org.apache.log4j.joran.action.ConversionRuleAction.end(ExecutionContext,String)",1,1,1
"org.apache.log4j.joran.action.ConversionRuleAction.finish(ExecutionContext)",1,1,1
"org.apache.log4j.joran.action.JndiSubstitutionPropertyAction.begin(ExecutionContext,String,Attributes)",1,9,9
"org.apache.log4j.joran.action.JndiSubstitutionPropertyAction.end(ExecutionContext,String)",1,1,1
"org.apache.log4j.joran.action.JndiSubstitutionPropertyAction.findNamingContext()",1,2,2
"org.apache.log4j.joran.action.JndiSubstitutionPropertyAction.getNamingContext()",1,1,1
"org.apache.log4j.joran.action.LayoutAction.begin(ExecutionContext,String,Attributes)",1,2,2
"org.apache.log4j.joran.action.LayoutAction.end(ExecutionContext,String)",2,3,4
"org.apache.log4j.joran.action.LayoutAction.finish(ExecutionContext)",1,1,1
"org.apache.log4j.joran.action.LevelAction.begin(ExecutionContext,String,Attributes)",4,7,7
"org.apache.log4j.joran.action.LevelAction.end(ExecutionContext,String)",1,1,1
"org.apache.log4j.joran.action.LevelAction.finish(ExecutionContext)",1,1,1
"org.apache.log4j.joran.action.LoggerAction.begin(ExecutionContext,String,Attributes)",3,6,6
"org.apache.log4j.joran.action.LoggerAction.end(ExecutionContext,String)",1,2,2
"org.apache.log4j.joran.action.LoggerAction.finish(ExecutionContext)",1,1,1
"org.apache.log4j.joran.action.LoggerFactoryAction.begin(ExecutionContext,String,Attributes)",1,2,2
"org.apache.log4j.joran.action.LoggerFactoryAction.end(ExecutionContext,String)",1,1,1
"org.apache.log4j.joran.action.NestComponentIA.begin(ExecutionContext,String,Attributes)",2,4,4
"org.apache.log4j.joran.action.NestComponentIA.end(ExecutionContext,String)",3,4,6
"org.apache.log4j.joran.action.NestComponentIA.finish(ExecutionContext)",1,1,1
"org.apache.log4j.joran.action.NestComponentIA.isApplicable(Pattern,Attributes,ExecutionContext)",3,2,4
"org.apache.log4j.joran.action.NewRuleAction.begin(ExecutionContext,String,Attributes)",3,4,4
"org.apache.log4j.joran.action.NewRuleAction.end(ExecutionContext,String)",1,1,1
"org.apache.log4j.joran.action.NewRuleAction.finish(ExecutionContext)",1,1,1
"org.apache.log4j.joran.action.ParamAction.begin(ExecutionContext,String,Attributes)",3,3,3
"org.apache.log4j.joran.action.ParamAction.end(ExecutionContext,String)",1,1,1
"org.apache.log4j.joran.action.ParamAction.finish(ExecutionContext)",1,1,1
"org.apache.log4j.joran.action.PluginAction.begin(ExecutionContext,String,Attributes)",1,3,3
"org.apache.log4j.joran.action.PluginAction.end(ExecutionContext,String)",2,2,3
"org.apache.log4j.joran.action.PluginAction.finish(ExecutionContext)",1,1,1
"org.apache.log4j.joran.action.PriorityAction.begin(ExecutionContext,String,Attributes)",1,1,1
"org.apache.log4j.joran.action.PropertyAction.begin(ExecutionContext,String,Attributes)",1,8,8
"org.apache.log4j.joran.action.PropertyAction.end(ExecutionContext,String)",1,1,1
"org.apache.log4j.joran.action.PropertyAction.finish(ExecutionContext)",1,1,1
"org.apache.log4j.joran.action.RepositoryPropertyAction.setProperties(ExecutionContext,Properties)",1,2,3
"org.apache.log4j.joran.action.RepositoryPropertyAction.setProperty(ExecutionContext,String,String)",1,2,2
"org.apache.log4j.joran.action.RootLoggerAction.begin(ExecutionContext,String,Attributes)",1,1,1
"org.apache.log4j.joran.action.RootLoggerAction.end(ExecutionContext,String)",2,2,3
"org.apache.log4j.joran.action.RootLoggerAction.finish(ExecutionContext)",1,1,1
"org.apache.log4j.joran.action.SubstitutionPropertyAction.setProperties(ExecutionContext,Properties)",1,1,1
"org.apache.log4j.joran.action.SubstitutionPropertyAction.setProperty(ExecutionContext,String,String)",1,1,1
"org.apache.log4j.joran.spi.ActionException.ActionException(int)",1,1,1
"org.apache.log4j.joran.spi.ActionException.ActionException(int,Throwable)",1,1,1
"org.apache.log4j.joran.spi.ActionException.getCause()",1,1,1
"org.apache.log4j.joran.spi.ActionException.getSkipCode()",1,1,1
"org.apache.log4j.joran.spi.ExecutionContext.ExecutionContext(Interpreter)",1,1,1
"org.apache.log4j.joran.spi.ExecutionContext.addError(ErrorItem)",1,2,2
"org.apache.log4j.joran.spi.ExecutionContext.addProperties(Properties)",2,2,3
"org.apache.log4j.joran.spi.ExecutionContext.addProperty(String,String)",2,1,3
"org.apache.log4j.joran.spi.ExecutionContext.getErrorList()",1,1,1
"org.apache.log4j.joran.spi.ExecutionContext.getJoranInterpreter()",1,1,1
"org.apache.log4j.joran.spi.ExecutionContext.getLocator()",1,1,1
"org.apache.log4j.joran.spi.ExecutionContext.getObject(int)",1,1,1
"org.apache.log4j.joran.spi.ExecutionContext.getObjectMap()",1,1,1
"org.apache.log4j.joran.spi.ExecutionContext.getObjectStack()",1,1,1
"org.apache.log4j.joran.spi.ExecutionContext.getSubstitutionProperty(String)",1,1,1
"org.apache.log4j.joran.spi.ExecutionContext.peekObject()",1,1,1
"org.apache.log4j.joran.spi.ExecutionContext.popObject()",1,1,1
"org.apache.log4j.joran.spi.ExecutionContext.pushObject(Object)",1,1,1
"org.apache.log4j.joran.spi.ExecutionContext.subst(String)",2,1,2
"org.apache.log4j.joran.spi.Interpreter.Interpreter(RuleStore)",1,1,1
"org.apache.log4j.joran.spi.Interpreter.addImplicitAction(ImplicitAction)",1,1,1
"org.apache.log4j.joran.spi.Interpreter.callBeginAction(List,String,Attributes)",4,6,8
"org.apache.log4j.joran.spi.Interpreter.callEndAction(List,String)",3,5,7
"org.apache.log4j.joran.spi.Interpreter.endElement(String,String,String)",1,4,4
"org.apache.log4j.joran.spi.Interpreter.endPrefixMapping(String)",1,1,1
"org.apache.log4j.joran.spi.Interpreter.error(SAXParseException)",1,1,1
"org.apache.log4j.joran.spi.Interpreter.fatalError(SAXParseException)",1,1,1
"org.apache.log4j.joran.spi.Interpreter.getApplicableActionList(Pattern,Attributes)",1,2,2
"org.apache.log4j.joran.spi.Interpreter.getEntityResolver()",1,1,1
"org.apache.log4j.joran.spi.Interpreter.getExecutionContext()",1,1,1
"org.apache.log4j.joran.spi.Interpreter.getLocator()",1,1,1
"org.apache.log4j.joran.spi.Interpreter.getLogger()",2,2,2
"org.apache.log4j.joran.spi.Interpreter.getRuleStore()",1,1,1
"org.apache.log4j.joran.spi.Interpreter.getTagName(String,String)",1,2,3
"org.apache.log4j.joran.spi.Interpreter.ignorableWhitespace(char[],int,int)",1,1,1
"org.apache.log4j.joran.spi.Interpreter.lookupImplicitAction(Pattern,Attributes,ExecutionContext)",3,3,3
"org.apache.log4j.joran.spi.Interpreter.processingInstruction(String,String)",1,1,1
"org.apache.log4j.joran.spi.Interpreter.resolveEntity(String,String)",2,2,3
"org.apache.log4j.joran.spi.Interpreter.setDocumentLocator(Locator)",1,1,1
"org.apache.log4j.joran.spi.Interpreter.setEntityResolver(EntityResolver)",1,1,1
"org.apache.log4j.joran.spi.Interpreter.setLoggerRepository(LoggerRepository)",1,1,1
"org.apache.log4j.joran.spi.Interpreter.setRuleStore(RuleStore)",1,1,1
"org.apache.log4j.joran.spi.Interpreter.skippedEntity(String)",1,1,1
"org.apache.log4j.joran.spi.Interpreter.startDocument()",1,1,1
"org.apache.log4j.joran.spi.Interpreter.startElement(String,String,String,Attributes)",1,2,2
"org.apache.log4j.joran.spi.Interpreter.startPrefixMapping(String,String)",1,1,1
"org.apache.log4j.joran.spi.Interpreter.warning(SAXParseException)",1,1,1
"org.apache.log4j.joran.spi.JoranDocument.ElementEvent.ElementEvent(String,Locator)",1,1,2
"org.apache.log4j.joran.spi.JoranDocument.ElementEvent.getLocalName()",1,1,1
"org.apache.log4j.joran.spi.JoranDocument.ElementEvent.replay(ContentHandler,LocatorImpl)",1,2,2
"org.apache.log4j.joran.spi.JoranDocument.EndElementEvent.EndElementEvent(String,Locator)",1,1,1
"org.apache.log4j.joran.spi.JoranDocument.EndElementEvent.replay(ContentHandler,LocatorImpl)",1,1,1
"org.apache.log4j.joran.spi.JoranDocument.JoranDocument(List,LoggerRepository)",1,1,1
"org.apache.log4j.joran.spi.JoranDocument.StartElementEvent.StartElementEvent(String,Locator,Attributes)",1,1,1
"org.apache.log4j.joran.spi.JoranDocument.StartElementEvent.replay(ContentHandler,LocatorImpl)",1,1,1
"org.apache.log4j.joran.spi.JoranDocument.endElement(String,String,String)",1,5,5
"org.apache.log4j.joran.spi.JoranDocument.error(SAXParseException)",1,1,1
"org.apache.log4j.joran.spi.JoranDocument.errorReport(SAXParseException)",1,1,1
"org.apache.log4j.joran.spi.JoranDocument.fatalError(SAXParseException)",1,1,2
"org.apache.log4j.joran.spi.JoranDocument.getLogger()",2,2,2
"org.apache.log4j.joran.spi.JoranDocument.replay(ContentHandler)",2,2,3
"org.apache.log4j.joran.spi.JoranDocument.resolveEntity(String,String)",4,6,6
"org.apache.log4j.joran.spi.JoranDocument.setDocumentLocator(Locator)",1,1,1
"org.apache.log4j.joran.spi.JoranDocument.startElement(String,String,String,Attributes)",1,5,5
"org.apache.log4j.joran.spi.JoranDocument.warning(SAXParseException)",1,1,1
"org.apache.log4j.joran.spi.Pattern.Pattern()",1,1,1
"org.apache.log4j.joran.spi.Pattern.Pattern(String)",4,4,5
"org.apache.log4j.joran.spi.Pattern.clone()",1,1,2
"org.apache.log4j.joran.spi.Pattern.equals(Object)",5,2,6
"org.apache.log4j.joran.spi.Pattern.get(int)",1,1,1
"org.apache.log4j.joran.spi.Pattern.hashCode()",1,2,2
"org.apache.log4j.joran.spi.Pattern.peekLast()",2,2,2
"org.apache.log4j.joran.spi.Pattern.pop()",1,2,2
"org.apache.log4j.joran.spi.Pattern.push(String)",1,1,1
"org.apache.log4j.joran.spi.Pattern.size()",1,1,1
"org.apache.log4j.joran.spi.Pattern.tailMatch(Pattern)",5,2,7
"org.apache.log4j.joran.spi.Pattern.toString()",1,2,2
"org.apache.log4j.joran.spi.SimpleRuleStore.SimpleRuleStore()",1,1,1
"org.apache.log4j.joran.spi.SimpleRuleStore.SimpleRuleStore(LoggerRepository)",1,1,1
"org.apache.log4j.joran.spi.SimpleRuleStore.addRule(Pattern,Action)",1,2,2
"org.apache.log4j.joran.spi.SimpleRuleStore.addRule(Pattern,String)",1,2,2
"org.apache.log4j.joran.spi.SimpleRuleStore.matchActions(Pattern)",3,6,7
"org.apache.log4j.lbel.LBELEventEvaluator.LBELEventEvaluator(String)",1,1,2
"org.apache.log4j.lbel.LBELEventEvaluator.dumpSyntaxTree(String)",1,1,1
"org.apache.log4j.lbel.LBELEventEvaluator.evaluate(LoggingEvent)",1,1,1
"org.apache.log4j.lbel.LBELEventEvaluator.evaluate(Node,LoggingEvent)",7,7,9
"org.apache.log4j.lbel.Node.Node(int)",1,1,1
"org.apache.log4j.lbel.Node.Node(int,Object)",1,1,1
"org.apache.log4j.lbel.Node.getLeft()",1,1,1
"org.apache.log4j.lbel.Node.getRight()",1,1,1
"org.apache.log4j.lbel.Node.getType()",1,1,1
"org.apache.log4j.lbel.Node.getValue()",1,1,1
"org.apache.log4j.lbel.Node.leftFirstDump(String)",1,3,3
"org.apache.log4j.lbel.Node.setLeft(Node)",2,1,2
"org.apache.log4j.lbel.Node.setRight(Node)",2,1,2
"org.apache.log4j.lbel.Node.toString()",1,1,1
"org.apache.log4j.lbel.Operator.Operator(int)",2,2,3
"org.apache.log4j.lbel.Operator.getCode()",1,1,1
"org.apache.log4j.lbel.Operator.isRegex()",1,1,2
"org.apache.log4j.lbel.Operator.toString()",10,2,10
"org.apache.log4j.lbel.Parser.Parser(TokenStream)",1,1,1
"org.apache.log4j.lbel.Parser.bexp()",1,2,2
"org.apache.log4j.lbel.Parser.bexpTail()",2,3,4
"org.apache.log4j.lbel.Parser.bfactor()",2,2,3
"org.apache.log4j.lbel.Parser.bsubfactor()",3,4,13
"org.apache.log4j.lbel.Parser.bterm()",1,2,2
"org.apache.log4j.lbel.Parser.btermTail()",2,3,4
"org.apache.log4j.lbel.Parser.getLevelInt()",5,4,5
"org.apache.log4j.lbel.Parser.getLiteral()",3,2,3
"org.apache.log4j.lbel.Parser.getLong()",2,2,2
"org.apache.log4j.lbel.Parser.getOperator()",11,10,11
"org.apache.log4j.lbel.Parser.getPropertyKey()",3,3,3
"org.apache.log4j.lbel.Parser.parse()",1,1,1
"org.apache.log4j.lbel.ScanError.ScanError(String)",1,1,1
"org.apache.log4j.lbel.ScanError.ScanError(String,Throwable)",1,1,1
"org.apache.log4j.lbel.ScanError.getCause()",1,1,1
"org.apache.log4j.lbel.Token.Token(int)",1,1,1
"org.apache.log4j.lbel.Token.Token(int,Object)",1,1,1
"org.apache.log4j.lbel.Token.getType()",1,1,1
"org.apache.log4j.lbel.Token.getValue()",1,1,1
"org.apache.log4j.lbel.Token.toString()",2,2,20
"org.apache.log4j.lbel.TokenStream.TokenStream(Reader)",1,1,1
"org.apache.log4j.lbel.TokenStream.getCurrent()",1,1,1
"org.apache.log4j.lbel.TokenStream.next()",5,5,20
"org.apache.log4j.lbel.TokenStream.scanLiteral(int)",4,4,6
"org.apache.log4j.lbel.comparator.ClassComparator.ClassComparator(Operator,String)",1,1,1
"org.apache.log4j.lbel.comparator.ClassComparator.getLeftSide(LoggingEvent)",1,1,1
"org.apache.log4j.lbel.comparator.LevelComparator.LevelComparator(Operator,int)",1,1,1
"org.apache.log4j.lbel.comparator.LevelComparator.compare(LoggingEvent)",7,2,7
"org.apache.log4j.lbel.comparator.LoggerComparator.LoggerComparator(Operator,String)",1,1,1
"org.apache.log4j.lbel.comparator.LoggerComparator.getLeftSide(LoggingEvent)",1,1,1
"org.apache.log4j.lbel.comparator.MessageComparator.MessageComparator(Operator,String)",1,1,1
"org.apache.log4j.lbel.comparator.MessageComparator.getLeftSide(LoggingEvent)",1,1,1
"org.apache.log4j.lbel.comparator.MethodComparator.MethodComparator(Operator,String)",1,1,1
"org.apache.log4j.lbel.comparator.MethodComparator.getLeftSide(LoggingEvent)",1,1,1
"org.apache.log4j.lbel.comparator.PropertyComparator.PropertyComparator(Operator,String,String)",1,1,1
"org.apache.log4j.lbel.comparator.PropertyComparator.getLeftSide(LoggingEvent)",1,1,1
"org.apache.log4j.lbel.comparator.PropertyComparator.toString()",1,1,1
"org.apache.log4j.lbel.comparator.StringComparator.StringComparator(Operator,String)",2,3,5
"org.apache.log4j.lbel.comparator.StringComparator.compare(LoggingEvent)",19,9,19
"org.apache.log4j.lbel.comparator.StringComparator.toString()",1,1,1
"org.apache.log4j.lbel.comparator.TimestampComparator.TimestampComparator(Operator,long)",1,1,1
"org.apache.log4j.lbel.comparator.TimestampComparator.compare(LoggingEvent)",7,2,7
"org.apache.log4j.multiplex.AppenderFactoryUtils.AppenderFactoryUtils()",1,1,1
"org.apache.log4j.multiplex.AppenderFactoryUtils.createMDCAndDailyRollingAppenderFactory(String,String,Layout)",1,1,1
"org.apache.log4j.multiplex.AppenderFactoryUtils.createSimpleMDCbasedFileAppender(String,String,PatternLayout)",1,1,2
"org.apache.log4j.multiplex.MDCKeySelector.MDCKeySelector(String)",1,1,1
"org.apache.log4j.multiplex.MDCKeySelector.activateOptions()",1,1,1
"org.apache.log4j.multiplex.MDCKeySelector.getMDCKey()",1,1,1
"org.apache.log4j.multiplex.MDCKeySelector.select(LoggingEvent)",1,1,1
"org.apache.log4j.multiplex.MDCKeySelector.setMDCKey(String)",1,1,1
"org.apache.log4j.multiplex.MultiplexAppender.MultiplexAppender()",1,1,1
"org.apache.log4j.multiplex.MultiplexAppender.activateOptions()",2,1,2
"org.apache.log4j.multiplex.MultiplexAppender.append(LoggingEvent)",1,1,1
"org.apache.log4j.multiplex.MultiplexAppender.close()",1,1,1
"org.apache.log4j.multiplex.MultiplexAppender.getSelector()",1,1,1
"org.apache.log4j.multiplex.MultiplexAppender.requiresLayout()",1,1,1
"org.apache.log4j.multiplex.MultiplexAppender.setSelector(MultiplexSelector)",1,1,1
"org.apache.log4j.multiplex.MultiplexSelectorSkeleton.close()",1,2,2
"org.apache.log4j.multiplex.MultiplexSelectorSkeleton.getAppenderFactory()",1,1,1
"org.apache.log4j.multiplex.MultiplexSelectorSkeleton.lookupOrCreateAsNeeded(Object,LoggingEvent)",1,2,2
"org.apache.log4j.multiplex.MultiplexSelectorSkeleton.setAppenderFactory(AppenderFactory)",1,1,1
"org.apache.log4j.net.DefaultEvaluator.DefaultEvaluator()",1,1,1
"org.apache.log4j.net.DefaultEvaluator.activateOptions()",1,3,3
"org.apache.log4j.net.DefaultEvaluator.isTriggeringEvent(LoggingEvent)",2,2,2
"org.apache.log4j.net.DefaultEvaluator.setExpression(String)",1,1,1
"org.apache.log4j.net.JMSAppender.JMSAppender()",1,1,1
"org.apache.log4j.net.JMSAppender.activateOptions()",1,9,12
"org.apache.log4j.net.JMSAppender.append(LoggingEvent)",2,3,5
"org.apache.log4j.net.JMSAppender.checkEntryConditions()",1,1,1
"org.apache.log4j.net.JMSAppender.close()",2,4,5
"org.apache.log4j.net.JMSAppender.getInitialContextFactoryName()",1,1,1
"org.apache.log4j.net.JMSAppender.getLocationInfo()",1,1,1
"org.apache.log4j.net.JMSAppender.getPassword()",1,1,1
"org.apache.log4j.net.JMSAppender.getProviderURL()",1,1,1
"org.apache.log4j.net.JMSAppender.getSecurityCredentials()",1,1,1
"org.apache.log4j.net.JMSAppender.getSecurityPrincipalName()",1,1,1
"org.apache.log4j.net.JMSAppender.getTopicBindingName()",1,1,1
"org.apache.log4j.net.JMSAppender.getTopicConnection()",1,1,1
"org.apache.log4j.net.JMSAppender.getTopicConnectionFactoryBindingName()",1,1,1
"org.apache.log4j.net.JMSAppender.getTopicPublisher()",1,1,1
"org.apache.log4j.net.JMSAppender.getTopicSession()",1,1,1
"org.apache.log4j.net.JMSAppender.getURLPkgPrefixes()",1,1,1
"org.apache.log4j.net.JMSAppender.getUserName()",1,1,1
"org.apache.log4j.net.JMSAppender.lookup(Context,String)",1,2,2
"org.apache.log4j.net.JMSAppender.requiresLayout()",1,1,1
"org.apache.log4j.net.JMSAppender.setInitialContextFactoryName(String)",1,1,1
"org.apache.log4j.net.JMSAppender.setLocationInfo(boolean)",1,1,1
"org.apache.log4j.net.JMSAppender.setPassword(String)",1,1,1
"org.apache.log4j.net.JMSAppender.setProviderURL(String)",1,1,1
"org.apache.log4j.net.JMSAppender.setSecurityCredentials(String)",1,1,1
"org.apache.log4j.net.JMSAppender.setSecurityPrincipalName(String)",1,1,1
"org.apache.log4j.net.JMSAppender.setTopicBindingName(String)",1,1,1
"org.apache.log4j.net.JMSAppender.setTopicConnectionFactoryBindingName(String)",1,1,1
"org.apache.log4j.net.JMSAppender.setURLPkgPrefixes(String)",1,1,1
"org.apache.log4j.net.JMSAppender.setUserName(String)",1,1,1
"org.apache.log4j.net.JMSReceiver.JMSReceiver()",1,1,1
"org.apache.log4j.net.JMSReceiver.JMSReceiver(String,String,String,String,String)",1,1,1
"org.apache.log4j.net.JMSReceiver.activateOptions()",1,7,9
"org.apache.log4j.net.JMSReceiver.getJndiPath()",1,1,1
"org.apache.log4j.net.JMSReceiver.getPassword()",1,1,1
"org.apache.log4j.net.JMSReceiver.getTopicFactoryName()",1,1,1
"org.apache.log4j.net.JMSReceiver.getTopicName()",1,1,1
"org.apache.log4j.net.JMSReceiver.getUserId()",1,1,1
"org.apache.log4j.net.JMSReceiver.isActive()",1,1,1
"org.apache.log4j.net.JMSReceiver.isEquivalent(Plugin)",2,5,5
"org.apache.log4j.net.JMSReceiver.lookup(Context,String)",1,2,2
"org.apache.log4j.net.JMSReceiver.onMessage(Message)",1,3,3
"org.apache.log4j.net.JMSReceiver.setActive(boolean)",1,1,1
"org.apache.log4j.net.JMSReceiver.setJndiPath(String)",1,1,1
"org.apache.log4j.net.JMSReceiver.setPassword(String)",1,1,1
"org.apache.log4j.net.JMSReceiver.setTopicFactoryName(String)",1,1,1
"org.apache.log4j.net.JMSReceiver.setTopicName(String)",1,1,1
"org.apache.log4j.net.JMSReceiver.setUserId(String)",1,1,1
"org.apache.log4j.net.JMSReceiver.shutdown()",1,3,4
"org.apache.log4j.net.JMSReceiverBeanInfo.getPropertyDescriptors()",1,1,2
"org.apache.log4j.net.JMSSink.JMSSink(String,String,String,String)",1,2,2
"org.apache.log4j.net.JMSSink.lookup(Context,String)",1,2,2
"org.apache.log4j.net.JMSSink.main(String[])",3,6,6
"org.apache.log4j.net.JMSSink.onMessage(Message)",1,3,3
"org.apache.log4j.net.JMSSink.usage(String)",1,1,1
"org.apache.log4j.net.MulticastAppender.MulticastAppender()",1,1,1
"org.apache.log4j.net.MulticastAppender.activateOptions()",2,5,6
"org.apache.log4j.net.MulticastAppender.append(LoggingEvent)",2,7,8
"org.apache.log4j.net.MulticastAppender.cleanUp()",1,3,3
"org.apache.log4j.net.MulticastAppender.close()",2,1,2
"org.apache.log4j.net.MulticastAppender.connect()",2,2,3
"org.apache.log4j.net.MulticastAppender.getAddressByName(String)",1,2,2
"org.apache.log4j.net.MulticastAppender.getApplication()",1,1,1
"org.apache.log4j.net.MulticastAppender.getEncoding()",1,1,1
"org.apache.log4j.net.MulticastAppender.getOverrideProperties()",1,1,1
"org.apache.log4j.net.MulticastAppender.getPort()",1,1,1
"org.apache.log4j.net.MulticastAppender.getRemoteHost()",1,1,1
"org.apache.log4j.net.MulticastAppender.getTimeToLive()",1,1,1
"org.apache.log4j.net.MulticastAppender.isActive()",1,1,1
"org.apache.log4j.net.MulticastAppender.requiresLayout()",1,1,1
"org.apache.log4j.net.MulticastAppender.setApplication(String)",1,1,1
"org.apache.log4j.net.MulticastAppender.setEncoding(String)",1,1,1
"org.apache.log4j.net.MulticastAppender.setOverrideProperties(String)",1,1,1
"org.apache.log4j.net.MulticastAppender.setPort(int)",1,1,1
"org.apache.log4j.net.MulticastAppender.setRemoteHost(String)",1,1,1
"org.apache.log4j.net.MulticastAppender.setTimeToLive(int)",1,1,1
"org.apache.log4j.net.MulticastReceiver.MulticastHandlerThread.MulticastHandlerThread()",1,1,1
"org.apache.log4j.net.MulticastReceiver.MulticastHandlerThread.append(String)",1,1,1
"org.apache.log4j.net.MulticastReceiver.MulticastHandlerThread.run()",1,9,11
"org.apache.log4j.net.MulticastReceiver.MulticastReceiverThread.MulticastReceiverThread()",1,1,1
"org.apache.log4j.net.MulticastReceiver.MulticastReceiverThread.run()",1,4,5
"org.apache.log4j.net.MulticastReceiver.activateOptions()",1,6,7
"org.apache.log4j.net.MulticastReceiver.getAddress()",1,1,1
"org.apache.log4j.net.MulticastReceiver.getDecoder()",1,1,1
"org.apache.log4j.net.MulticastReceiver.getEncoding()",1,1,1
"org.apache.log4j.net.MulticastReceiver.getPort()",1,1,1
"org.apache.log4j.net.MulticastReceiver.isActive()",1,1,1
"org.apache.log4j.net.MulticastReceiver.isPaused()",1,1,1
"org.apache.log4j.net.MulticastReceiver.setAddress(String)",1,1,1
"org.apache.log4j.net.MulticastReceiver.setDecoder(String)",1,1,1
"org.apache.log4j.net.MulticastReceiver.setEncoding(String)",1,1,1
"org.apache.log4j.net.MulticastReceiver.setPaused(boolean)",1,1,1
"org.apache.log4j.net.MulticastReceiver.setPort(int)",1,1,1
"org.apache.log4j.net.MulticastReceiver.shutdown()",1,1,1
"org.apache.log4j.net.MulticastReceiverBeanInfo.getPropertyDescriptors()",1,1,2
"org.apache.log4j.net.SMTPAppender.SMTPAppender()",1,1,1
"org.apache.log4j.net.SMTPAppender.SMTPAppender(TriggeringEventEvaluator)",1,1,1
"org.apache.log4j.net.SMTPAppender.activateOptions()",5,7,9
"org.apache.log4j.net.SMTPAppender.addressMessage(Message)",1,8,8
"org.apache.log4j.net.SMTPAppender.append(LoggingEvent)",2,3,4
"org.apache.log4j.net.SMTPAppender.checkEntryConditions()",4,1,4
"org.apache.log4j.net.SMTPAppender.close()",1,1,1
"org.apache.log4j.net.SMTPAppender.computeSubject(LoggingEvent)",2,2,2
"org.apache.log4j.net.SMTPAppender.createSession()",1,5,7
"org.apache.log4j.net.SMTPAppender.getAddress(String)",1,2,2
"org.apache.log4j.net.SMTPAppender.getBcc()",1,1,1
"org.apache.log4j.net.SMTPAppender.getBufferSize()",1,1,1
"org.apache.log4j.net.SMTPAppender.getCc()",1,1,1
"org.apache.log4j.net.SMTPAppender.getCharset()",1,1,1
"org.apache.log4j.net.SMTPAppender.getEvaluatorClass()",1,2,2
"org.apache.log4j.net.SMTPAppender.getFrom()",1,1,1
"org.apache.log4j.net.SMTPAppender.getLocationInfo()",1,1,1
"org.apache.log4j.net.SMTPAppender.getSMTPDebug()",1,1,1
"org.apache.log4j.net.SMTPAppender.getSMTPHost()",1,1,1
"org.apache.log4j.net.SMTPAppender.getSMTPPassword()",1,1,1
"org.apache.log4j.net.SMTPAppender.getSMTPPort()",1,1,1
"org.apache.log4j.net.SMTPAppender.getSMTPUsername()",1,1,1
"org.apache.log4j.net.SMTPAppender.getSessionJNDI()",1,1,1
"org.apache.log4j.net.SMTPAppender.getSubject()",1,1,1
"org.apache.log4j.net.SMTPAppender.getTo()",1,1,1
"org.apache.log4j.net.SMTPAppender.lookupSession()",1,1,1
"org.apache.log4j.net.SMTPAppender.parseAddress(String)",1,2,2
"org.apache.log4j.net.SMTPAppender.requiresLayout()",1,1,1
"org.apache.log4j.net.SMTPAppender.sendBuffer(LoggingEvent)",1,9,9
"org.apache.log4j.net.SMTPAppender.setBcc(String)",1,1,1
"org.apache.log4j.net.SMTPAppender.setBufferSize(int)",1,1,1
"org.apache.log4j.net.SMTPAppender.setCc(String)",1,1,1
"org.apache.log4j.net.SMTPAppender.setCharset(String)",1,1,1
"org.apache.log4j.net.SMTPAppender.setEvaluator(TriggeringEventEvaluator)",1,1,1
"org.apache.log4j.net.SMTPAppender.setEvaluatorClass(String)",1,1,1
"org.apache.log4j.net.SMTPAppender.setFrom(String)",1,1,1
"org.apache.log4j.net.SMTPAppender.setLocationInfo(boolean)",1,1,1
"org.apache.log4j.net.SMTPAppender.setSMTPDebug(boolean)",1,1,1
"org.apache.log4j.net.SMTPAppender.setSMTPHost(String)",1,1,1
"org.apache.log4j.net.SMTPAppender.setSMTPPassword(String)",1,1,1
"org.apache.log4j.net.SMTPAppender.setSMTPPort(int)",1,1,1
"org.apache.log4j.net.SMTPAppender.setSMTPUsername(String)",1,1,1
"org.apache.log4j.net.SMTPAppender.setSessionJNDI(String)",1,1,1
"org.apache.log4j.net.SMTPAppender.setSubject(String)",1,1,1
"org.apache.log4j.net.SMTPAppender.setTo(String)",1,1,1
"org.apache.log4j.net.SimpleSocketServer.init(String,String)",1,3,3
"org.apache.log4j.net.SimpleSocketServer.main(String[])",1,4,4
"org.apache.log4j.net.SimpleSocketServer.usage(String)",1,1,1
"org.apache.log4j.net.SocketAppender.Connector.run()",2,5,5
"org.apache.log4j.net.SocketAppender.SocketAppender()",1,1,1
"org.apache.log4j.net.SocketAppender.SocketAppender(InetAddress,int)",1,1,1
"org.apache.log4j.net.SocketAppender.SocketAppender(String,int)",1,1,1
"org.apache.log4j.net.SocketAppender.activateOptions()",2,3,4
"org.apache.log4j.net.SocketAppender.append(LoggingEvent)",2,8,9
"org.apache.log4j.net.SocketAppender.cleanUp()",1,3,4
"org.apache.log4j.net.SocketAppender.close()",2,1,2
"org.apache.log4j.net.SocketAppender.connect(InetAddress,int)",2,3,4
"org.apache.log4j.net.SocketAppender.fireConnector()",1,2,2
"org.apache.log4j.net.SocketAppender.getAddressByName(String)",1,2,2
"org.apache.log4j.net.SocketAppender.getApplication()",1,1,1
"org.apache.log4j.net.SocketAppender.getLocationInfo()",1,1,1
"org.apache.log4j.net.SocketAppender.getPort()",1,1,1
"org.apache.log4j.net.SocketAppender.getReconnectionDelay()",1,1,1
"org.apache.log4j.net.SocketAppender.getRemoteHost()",1,1,1
"org.apache.log4j.net.SocketAppender.requiresLayout()",1,1,1
"org.apache.log4j.net.SocketAppender.setApplication(String)",1,1,1
"org.apache.log4j.net.SocketAppender.setLocationInfo(boolean)",1,1,1
"org.apache.log4j.net.SocketAppender.setPort(int)",1,1,1
"org.apache.log4j.net.SocketAppender.setReconnectionDelay(int)",1,1,1
"org.apache.log4j.net.SocketAppender.setRemoteHost(String)",1,1,1
"org.apache.log4j.net.SocketHubAppender.ServerMonitor.ServerMonitor(int,Vector)",1,1,1
"org.apache.log4j.net.SocketHubAppender.ServerMonitor.run()",1,10,12
"org.apache.log4j.net.SocketHubAppender.ServerMonitor.sendCachedEvents(ObjectOutputStream)",1,3,3
"org.apache.log4j.net.SocketHubAppender.ServerMonitor.stopMonitor()",1,2,3
"org.apache.log4j.net.SocketHubAppender.SocketHubAppender()",1,1,1
"org.apache.log4j.net.SocketHubAppender.SocketHubAppender(int)",1,1,1
"org.apache.log4j.net.SocketHubAppender.activateOptions()",1,1,1
"org.apache.log4j.net.SocketHubAppender.append(LoggingEvent)",4,7,10
"org.apache.log4j.net.SocketHubAppender.cleanUp()",1,5,5
"org.apache.log4j.net.SocketHubAppender.close()",2,1,2
"org.apache.log4j.net.SocketHubAppender.getBufferSize()",2,2,2
"org.apache.log4j.net.SocketHubAppender.getLocationInfo()",1,1,1
"org.apache.log4j.net.SocketHubAppender.getPort()",1,1,1
"org.apache.log4j.net.SocketHubAppender.requiresLayout()",1,1,1
"org.apache.log4j.net.SocketHubAppender.setBufferSize(int)",1,1,1
"org.apache.log4j.net.SocketHubAppender.setLocationInfo(boolean)",1,1,1
"org.apache.log4j.net.SocketHubAppender.setPort(int)",1,1,1
"org.apache.log4j.net.SocketHubAppender.startServer()",1,1,1
"org.apache.log4j.net.SocketHubReceiver.Connector.Connector(boolean)",1,1,1
"org.apache.log4j.net.SocketHubReceiver.Connector.run()",2,6,6
"org.apache.log4j.net.SocketHubReceiver.SocketHubReceiver()",1,1,1
"org.apache.log4j.net.SocketHubReceiver.SocketHubReceiver(String,int)",1,1,1
"org.apache.log4j.net.SocketHubReceiver.SocketHubReceiver(String,int,LoggerRepository)",1,1,1
"org.apache.log4j.net.SocketHubReceiver.activateOptions()",1,2,2
"org.apache.log4j.net.SocketHubReceiver.addSocketNodeEventListener(SocketNodeEventListener)",1,1,1
"org.apache.log4j.net.SocketHubReceiver.fireConnector(boolean)",1,2,3
"org.apache.log4j.net.SocketHubReceiver.getHost()",1,1,1
"org.apache.log4j.net.SocketHubReceiver.getPort()",1,1,1
"org.apache.log4j.net.SocketHubReceiver.getReconnectionDelay()",1,1,1
"org.apache.log4j.net.SocketHubReceiver.isActive()",1,1,1
"org.apache.log4j.net.SocketHubReceiver.isEquivalent(Plugin)",2,5,6
"org.apache.log4j.net.SocketHubReceiver.removeSocketNodeEventListener(SocketNodeEventListener)",1,1,1
"org.apache.log4j.net.SocketHubReceiver.setActive(boolean)",1,1,1
"org.apache.log4j.net.SocketHubReceiver.setHost(String)",1,1,1
"org.apache.log4j.net.SocketHubReceiver.setPort(String)",1,1,1
"org.apache.log4j.net.SocketHubReceiver.setPort(int)",1,1,1
"org.apache.log4j.net.SocketHubReceiver.setReconnectionDelay(int)",1,1,1
"org.apache.log4j.net.SocketHubReceiver.setSocket(Socket)",1,2,2
"org.apache.log4j.net.SocketHubReceiver.shutdown()",1,2,4
"org.apache.log4j.net.SocketHubReceiver.socketClosedEvent(Exception)",1,1,1
"org.apache.log4j.net.SocketHubReceiver.socketOpened(String)",1,1,1
"org.apache.log4j.net.SocketHubReceiverBeanInfo.getPropertyDescriptors()",1,1,2
"org.apache.log4j.net.SocketNode.SocketNode(Socket,LoggerRepository)",1,1,1
"org.apache.log4j.net.SocketNode.SocketNode(Socket,Receiver)",1,1,1
"org.apache.log4j.net.SocketNode.addSocketNodeEventListener(SocketNodeEventListener)",1,1,1
"org.apache.log4j.net.SocketNode.fireSocketClosedEvent(Exception)",1,3,3
"org.apache.log4j.net.SocketNode.fireSocketOpened(String)",1,3,3
"org.apache.log4j.net.SocketNode.isPaused()",1,1,1
"org.apache.log4j.net.SocketNode.removeSocketNodeEventListener(SocketNodeEventListener)",1,1,1
"org.apache.log4j.net.SocketNode.run()",1,13,14
"org.apache.log4j.net.SocketNode.setListener(SocketNodeEventListener)",1,1,1
"org.apache.log4j.net.SocketNode.setPaused(boolean)",1,1,1
"org.apache.log4j.net.SocketReceiver.SocketDetail.SocketDetail(Socket,SocketNode)",1,1,1
"org.apache.log4j.net.SocketReceiver.SocketDetail.getAddress()",1,1,1
"org.apache.log4j.net.SocketReceiver.SocketDetail.getName()",1,1,1
"org.apache.log4j.net.SocketReceiver.SocketDetail.getPort()",1,1,1
"org.apache.log4j.net.SocketReceiver.SocketDetail.isActive()",1,1,1
"org.apache.log4j.net.SocketReceiver.SocketDetail.isPaused()",1,1,1
"org.apache.log4j.net.SocketReceiver.SocketDetail.setPaused(boolean)",1,1,1
"org.apache.log4j.net.SocketReceiver.SocketReceiver()",1,1,1
"org.apache.log4j.net.SocketReceiver.SocketReceiver(int)",1,1,1
"org.apache.log4j.net.SocketReceiver.SocketReceiver(int,LoggerRepository)",1,1,1
"org.apache.log4j.net.SocketReceiver.activateOptions()",1,2,2
"org.apache.log4j.net.SocketReceiver.addSocketNodeEventListener(SocketNodeEventListener)",1,1,1
"org.apache.log4j.net.SocketReceiver.closeAllAcceptedSockets()",1,2,3
"org.apache.log4j.net.SocketReceiver.closeServerSocket()",1,2,3
"org.apache.log4j.net.SocketReceiver.doPost(LoggingEvent)",1,2,2
"org.apache.log4j.net.SocketReceiver.doShutdown()",1,1,1
"org.apache.log4j.net.SocketReceiver.getConnectedSocketDetails()",1,2,2
"org.apache.log4j.net.SocketReceiver.getListener()",1,1,1
"org.apache.log4j.net.SocketReceiver.getPort()",1,1,1
"org.apache.log4j.net.SocketReceiver.isEquivalent(Plugin)",2,3,4
"org.apache.log4j.net.SocketReceiver.isPaused()",1,1,1
"org.apache.log4j.net.SocketReceiver.removeSocketNodeEventListener(SocketNodeEventListener)",1,1,1
"org.apache.log4j.net.SocketReceiver.run()",1,8,8
"org.apache.log4j.net.SocketReceiver.setListener(SocketNodeEventListener)",1,1,1
"org.apache.log4j.net.SocketReceiver.setPaused(boolean)",1,1,1
"org.apache.log4j.net.SocketReceiver.setPort(int)",1,1,1
"org.apache.log4j.net.SocketReceiver.shutdown()",1,2,2
"org.apache.log4j.net.SocketServer.SocketServer(File)",1,1,1
"org.apache.log4j.net.SocketServer.configureHierarchy(InetAddress)",3,3,3
"org.apache.log4j.net.SocketServer.genericHierarchy()",1,3,3
"org.apache.log4j.net.SocketServer.init(String,String,String)",1,3,3
"org.apache.log4j.net.SocketServer.main(String[])",1,5,5
"org.apache.log4j.net.SocketServer.usage(String)",1,1,1
"org.apache.log4j.net.SyslogAppender.SyslogAppender()",1,1,1
"org.apache.log4j.net.SyslogAppender.SyslogAppender(Layout,String,int)",1,1,1
"org.apache.log4j.net.SyslogAppender.SyslogAppender(Layout,int)",1,1,2
"org.apache.log4j.net.SyslogAppender.activateOptions()",5,5,5
"org.apache.log4j.net.SyslogAppender.getFacility()",1,1,1
"org.apache.log4j.net.SyslogAppender.getFacility(String)",4,3,4
"org.apache.log4j.net.SyslogAppender.getFacilityPrinting()",1,1,1
"org.apache.log4j.net.SyslogAppender.getFacilityString(int)",1,1,4
"org.apache.log4j.net.SyslogAppender.getLocalHostname()",1,2,2
"org.apache.log4j.net.SyslogAppender.getSyslogHost()",1,1,1
"org.apache.log4j.net.SyslogAppender.info(String)",2,1,3
"org.apache.log4j.net.SyslogAppender.requiresLayout()",1,1,1
"org.apache.log4j.net.SyslogAppender.setFacility(String)",1,3,3
"org.apache.log4j.net.SyslogAppender.setFacilityPrinting(boolean)",1,1,1
"org.apache.log4j.net.SyslogAppender.setSyslogHost(String)",1,1,1
"org.apache.log4j.net.SyslogAppender.subAppend(LoggingEvent)",1,1,2
"org.apache.log4j.net.SyslogAppender.writeFooter()",1,2,2
"org.apache.log4j.net.SyslogAppender.writeHeader()",1,2,2
"org.apache.log4j.net.SyslogAppender.writeInitialParts(LoggingEvent)",1,1,1
"org.apache.log4j.net.SyslogAppender.writeTimestamp()",1,2,2
"org.apache.log4j.net.TelnetAppender.SocketHandler.SocketHandler(int)",1,1,1
"org.apache.log4j.net.TelnetAppender.SocketHandler.close()",1,3,4
"org.apache.log4j.net.TelnetAppender.SocketHandler.finalize()",1,1,1
"org.apache.log4j.net.TelnetAppender.SocketHandler.hasConnections()",1,1,1
"org.apache.log4j.net.TelnetAppender.SocketHandler.run()",2,5,6
"org.apache.log4j.net.TelnetAppender.SocketHandler.send(String)",1,5,5
"org.apache.log4j.net.TelnetAppender.TelnetAppender()",1,1,1
"org.apache.log4j.net.TelnetAppender.activateOptions()",1,2,2
"org.apache.log4j.net.TelnetAppender.append(LoggingEvent)",2,5,6
"org.apache.log4j.net.TelnetAppender.close()",1,2,3
"org.apache.log4j.net.TelnetAppender.getPort()",1,1,1
"org.apache.log4j.net.TelnetAppender.requiresLayout()",1,1,1
"org.apache.log4j.net.TelnetAppender.setPort(int)",1,1,1
"org.apache.log4j.net.UDPAppender.UDPAppender()",1,1,1
"org.apache.log4j.net.UDPAppender.UDPAppender(InetAddress,int)",1,1,1
"org.apache.log4j.net.UDPAppender.UDPAppender(String,int)",1,1,1
"org.apache.log4j.net.UDPAppender.activateOptions()",2,5,6
"org.apache.log4j.net.UDPAppender.append(LoggingEvent)",4,7,10
"org.apache.log4j.net.UDPAppender.cleanUp()",1,3,3
"org.apache.log4j.net.UDPAppender.close()",2,1,2
"org.apache.log4j.net.UDPAppender.connect(InetAddress,int)",2,2,3
"org.apache.log4j.net.UDPAppender.getAddressByName(String)",1,2,2
"org.apache.log4j.net.UDPAppender.getApplication()",1,1,1
"org.apache.log4j.net.UDPAppender.getEncoding()",1,1,1
"org.apache.log4j.net.UDPAppender.getOverrideProperties()",1,1,1
"org.apache.log4j.net.UDPAppender.getPort()",1,1,1
"org.apache.log4j.net.UDPAppender.getRemoteHost()",1,1,1
"org.apache.log4j.net.UDPAppender.isActive()",1,1,1
"org.apache.log4j.net.UDPAppender.requiresLayout()",1,1,1
"org.apache.log4j.net.UDPAppender.setApplication(String)",1,1,1
"org.apache.log4j.net.UDPAppender.setEncoding(String)",1,1,1
"org.apache.log4j.net.UDPAppender.setOverrideProperties(String)",1,1,1
"org.apache.log4j.net.UDPAppender.setPort(int)",1,1,1
"org.apache.log4j.net.UDPAppender.setRemoteHost(String)",1,1,1
"org.apache.log4j.net.UDPReceiver.UDPHandlerThread.UDPHandlerThread()",1,1,1
"org.apache.log4j.net.UDPReceiver.UDPHandlerThread.append(String)",1,1,1
"org.apache.log4j.net.UDPReceiver.UDPHandlerThread.close()",1,1,1
"org.apache.log4j.net.UDPReceiver.UDPHandlerThread.run()",1,10,12
"org.apache.log4j.net.UDPReceiver.UDPReceiverThread.UDPReceiverThread()",1,1,1
"org.apache.log4j.net.UDPReceiver.UDPReceiverThread.run()",1,4,5
"org.apache.log4j.net.UDPReceiver.activateOptions()",1,5,6
"org.apache.log4j.net.UDPReceiver.getDecoder()",1,1,1
"org.apache.log4j.net.UDPReceiver.getEncoding()",1,1,1
"org.apache.log4j.net.UDPReceiver.getPort()",1,1,1
"org.apache.log4j.net.UDPReceiver.isPaused()",1,1,1
"org.apache.log4j.net.UDPReceiver.setDecoder(String)",1,1,1
"org.apache.log4j.net.UDPReceiver.setEncoding(String)",1,1,1
"org.apache.log4j.net.UDPReceiver.setPaused(boolean)",1,1,1
"org.apache.log4j.net.UDPReceiver.setPort(int)",1,1,1
"org.apache.log4j.net.UDPReceiver.shutdown()",2,3,5
"org.apache.log4j.net.XMLSocketNode.XMLSocketNode(String,Socket,LoggerRepository)",1,4,5
"org.apache.log4j.net.XMLSocketNode.XMLSocketNode(String,Socket,Receiver)",1,4,5
"org.apache.log4j.net.XMLSocketNode.run()",4,17,19
"org.apache.log4j.net.XMLSocketNode.setListener(SocketNodeEventListener)",1,1,1
"org.apache.log4j.net.XMLSocketReceiver.XMLSocketReceiver()",1,1,1
"org.apache.log4j.net.XMLSocketReceiver.XMLSocketReceiver(int)",1,1,1
"org.apache.log4j.net.XMLSocketReceiver.XMLSocketReceiver(int,LoggerRepository)",1,1,1
"org.apache.log4j.net.XMLSocketReceiver.activateOptions()",1,2,2
"org.apache.log4j.net.XMLSocketReceiver.closeAllAcceptedSockets()",1,2,3
"org.apache.log4j.net.XMLSocketReceiver.closeServerSocket()",1,2,3
"org.apache.log4j.net.XMLSocketReceiver.doPost(LoggingEvent)",1,2,2
"org.apache.log4j.net.XMLSocketReceiver.doShutdown()",1,1,1
"org.apache.log4j.net.XMLSocketReceiver.getDecoder()",1,1,1
"org.apache.log4j.net.XMLSocketReceiver.getPort()",1,1,1
"org.apache.log4j.net.XMLSocketReceiver.hashCode()",1,3,3
"org.apache.log4j.net.XMLSocketReceiver.isActive()",1,1,1
"org.apache.log4j.net.XMLSocketReceiver.isEquivalent(Plugin)",2,3,4
"org.apache.log4j.net.XMLSocketReceiver.isPaused()",1,1,1
"org.apache.log4j.net.XMLSocketReceiver.run()",1,6,6
"org.apache.log4j.net.XMLSocketReceiver.setDecoder(String)",1,1,1
"org.apache.log4j.net.XMLSocketReceiver.setPaused(boolean)",1,1,1
"org.apache.log4j.net.XMLSocketReceiver.setPort(int)",1,1,1
"org.apache.log4j.net.XMLSocketReceiver.shutdown()",1,2,2
"org.apache.log4j.net.test.Loop.main(String[])",1,4,4
"org.apache.log4j.net.test.Loop.usage(String)",1,1,1
"org.apache.log4j.net.test.SMTPMin.init(String)",1,1,1
"org.apache.log4j.net.test.SMTPMin.main(String[])",1,2,2
"org.apache.log4j.net.test.SMTPMin.test()",1,1,1
"org.apache.log4j.net.test.SMTPMin.usage(String)",1,1,1
"org.apache.log4j.net.test.SocketMin.init(String,String)",1,3,3
"org.apache.log4j.net.test.SocketMin.loop()",4,3,6
"org.apache.log4j.net.test.SocketMin.main(String[])",1,3,3
"org.apache.log4j.net.test.SocketMin.test()",1,1,1
"org.apache.log4j.net.test.SocketMin.usage(String)",1,1,1
"org.apache.log4j.net.test.SyslogMin.ProgramInit(String)",1,1,1
"org.apache.log4j.net.test.SyslogMin.Usage(String)",1,1,1
"org.apache.log4j.net.test.SyslogMin.main(String[])",1,2,2
"org.apache.log4j.net.test.SyslogMin.test(String)",1,1,1
"org.apache.log4j.nt.NTEventLogAppender.NTEventLogAppender()",1,1,1
"org.apache.log4j.nt.NTEventLogAppender.NTEventLogAppender(Layout)",1,1,1
"org.apache.log4j.nt.NTEventLogAppender.NTEventLogAppender(String)",1,1,1
"org.apache.log4j.nt.NTEventLogAppender.NTEventLogAppender(String,Layout)",1,1,1
"org.apache.log4j.nt.NTEventLogAppender.NTEventLogAppender(String,String)",1,1,1
"org.apache.log4j.nt.NTEventLogAppender.NTEventLogAppender(String,String,Layout)",1,1,3
"org.apache.log4j.nt.NTEventLogAppender.activateOptions()",1,5,6
"org.apache.log4j.nt.NTEventLogAppender.append(LoggingEvent)",1,4,4
"org.apache.log4j.nt.NTEventLogAppender.close()",1,1,1
"org.apache.log4j.nt.NTEventLogAppender.deregisterEventSource(int)",1,1,1
"org.apache.log4j.nt.NTEventLogAppender.finalize()",1,1,1
"org.apache.log4j.nt.NTEventLogAppender.getSource()",1,1,1
"org.apache.log4j.nt.NTEventLogAppender.registerEventSource(String,String)",1,1,1
"org.apache.log4j.nt.NTEventLogAppender.reportEvent(int,String,int)",1,1,1
"org.apache.log4j.nt.NTEventLogAppender.requiresLayout()",1,1,1
"org.apache.log4j.nt.NTEventLogAppender.setSource(String)",1,1,1
"org.apache.log4j.or.DefaultRenderer.DefaultRenderer()",1,1,1
"org.apache.log4j.or.DefaultRenderer.doRender(Object)",1,1,1
"org.apache.log4j.or.RendererMap.RendererMap()",1,1,1
"org.apache.log4j.or.RendererMap.addRenderer(RendererSupport,String,String)",2,3,4
"org.apache.log4j.or.RendererMap.addRenderer(String,String)",2,4,5
"org.apache.log4j.or.RendererMap.clear()",1,1,1
"org.apache.log4j.or.RendererMap.findAndRender(Object)",2,2,2
"org.apache.log4j.or.RendererMap.get(Class)",4,2,4
"org.apache.log4j.or.RendererMap.get(Object)",2,2,2
"org.apache.log4j.or.RendererMap.getDefaultRenderer()",1,1,1
"org.apache.log4j.or.RendererMap.put(Class,ObjectRenderer)",1,1,1
"org.apache.log4j.or.RendererMap.searchInterfaces(Class)",4,3,4
"org.apache.log4j.or.ThreadGroupRenderer.ThreadGroupRenderer()",1,1,1
"org.apache.log4j.or.ThreadGroupRenderer.doRender(Object)",2,3,3
"org.apache.log4j.or.jms.MessageRenderer.MessageRenderer()",1,1,1
"org.apache.log4j.or.jms.MessageRenderer.doRender(Object)",3,4,6
"org.apache.log4j.or.sax.AttributesRenderer.AttributesRenderer()",1,1,1
"org.apache.log4j.or.sax.AttributesRenderer.doRender(Object)",2,4,4
"org.apache.log4j.pattern.BridgePatternConverter.BridgePatternConverter(String,LoggerRepository,ULogger)",1,5,5
"org.apache.log4j.pattern.BridgePatternConverter.convert(LoggingEvent)",1,1,1
"org.apache.log4j.pattern.BridgePatternConverter.format(StringBuffer,LoggingEvent)",1,2,2
"org.apache.log4j.pattern.BridgePatternConverter.ignoresThrowable()",1,1,1
"org.apache.log4j.pattern.BridgePatternParser.BridgePatternParser(String,LoggerRepository,ULogger)",1,1,1
"org.apache.log4j.pattern.BridgePatternParser.parse()",1,1,1
"org.apache.log4j.pattern.CachedDateFormat.CachedDateFormat(DateFormat,int)",3,1,3
"org.apache.log4j.pattern.CachedDateFormat.findMillisecondStart(long,String,DateFormat)",5,7,10
"org.apache.log4j.pattern.CachedDateFormat.format(Date,StringBuffer,FieldPosition)",1,1,1
"org.apache.log4j.pattern.CachedDateFormat.format(long,StringBuffer)",4,6,9
"org.apache.log4j.pattern.CachedDateFormat.getMaximumCacheValidity(String)",2,2,3
"org.apache.log4j.pattern.CachedDateFormat.getNumberFormat()",1,1,1
"org.apache.log4j.pattern.CachedDateFormat.millisecondFormat(int,StringBuffer,int)",1,1,1
"org.apache.log4j.pattern.CachedDateFormat.parse(String,ParsePosition)",1,1,1
"org.apache.log4j.pattern.CachedDateFormat.setTimeZone(TimeZone)",1,1,1
"org.apache.log4j.pattern.ClassNamePatternConverter.ClassNamePatternConverter(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.ClassNamePatternConverter.format(LoggingEvent,StringBuffer)",1,2,2
"org.apache.log4j.pattern.ClassNamePatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.DatePatternConverter.DatePatternConverter(String[],ULogger)",1,7,11
"org.apache.log4j.pattern.DatePatternConverter.format(Date,StringBuffer)",1,1,1
"org.apache.log4j.pattern.DatePatternConverter.format(LoggingEvent,StringBuffer)",1,1,1
"org.apache.log4j.pattern.DatePatternConverter.format(Object,StringBuffer)",1,2,2
"org.apache.log4j.pattern.DatePatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.FileDatePatternConverter.FileDatePatternConverter()",1,1,1
"org.apache.log4j.pattern.FileDatePatternConverter.newInstance(String[],ULogger)",2,2,3
"org.apache.log4j.pattern.FileLocationPatternConverter.FileLocationPatternConverter()",1,1,1
"org.apache.log4j.pattern.FileLocationPatternConverter.format(LoggingEvent,StringBuffer)",1,2,2
"org.apache.log4j.pattern.FileLocationPatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.FormattingInfo.FormattingInfo(boolean,int,int)",1,1,1
"org.apache.log4j.pattern.FormattingInfo.format(int,StringBuffer)",1,6,6
"org.apache.log4j.pattern.FormattingInfo.getDefault()",1,1,1
"org.apache.log4j.pattern.FormattingInfo.getMaxLength()",1,1,1
"org.apache.log4j.pattern.FormattingInfo.getMinLength()",1,1,1
"org.apache.log4j.pattern.FormattingInfo.isLeftAligned()",1,1,1
"org.apache.log4j.pattern.FullLocationPatternConverter.FullLocationPatternConverter()",1,1,1
"org.apache.log4j.pattern.FullLocationPatternConverter.format(LoggingEvent,StringBuffer)",1,2,2
"org.apache.log4j.pattern.FullLocationPatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.IntegerPatternConverter.IntegerPatternConverter()",1,1,1
"org.apache.log4j.pattern.IntegerPatternConverter.format(Object,StringBuffer)",1,3,3
"org.apache.log4j.pattern.IntegerPatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.LevelPatternConverter.LevelPatternConverter()",1,1,1
"org.apache.log4j.pattern.LevelPatternConverter.format(LoggingEvent,StringBuffer)",1,1,1
"org.apache.log4j.pattern.LevelPatternConverter.getStyleClass(Object)",9,3,9
"org.apache.log4j.pattern.LevelPatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.LineLocationPatternConverter.LineLocationPatternConverter()",1,1,1
"org.apache.log4j.pattern.LineLocationPatternConverter.format(LoggingEvent,StringBuffer)",1,2,2
"org.apache.log4j.pattern.LineLocationPatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.LineSeparatorPatternConverter.LineSeparatorPatternConverter()",1,1,1
"org.apache.log4j.pattern.LineSeparatorPatternConverter.format(LoggingEvent,StringBuffer)",1,1,1
"org.apache.log4j.pattern.LineSeparatorPatternConverter.format(Object,StringBuffer)",1,1,1
"org.apache.log4j.pattern.LineSeparatorPatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.LiteralPatternConverter.LiteralPatternConverter(String)",1,1,1
"org.apache.log4j.pattern.LiteralPatternConverter.format(LoggingEvent,StringBuffer)",1,1,1
"org.apache.log4j.pattern.LiteralPatternConverter.format(Object,StringBuffer)",1,1,1
"org.apache.log4j.pattern.LoggerPatternConverter.LoggerPatternConverter(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.LoggerPatternConverter.format(LoggingEvent,StringBuffer)",1,1,1
"org.apache.log4j.pattern.LoggerPatternConverter.newInstance(String[],ULogger)",2,1,3
"org.apache.log4j.pattern.LoggingEventPatternConverter.LoggingEventPatternConverter(String,String)",1,1,1
"org.apache.log4j.pattern.LoggingEventPatternConverter.format(Object,StringBuffer)",1,2,2
"org.apache.log4j.pattern.LoggingEventPatternConverter.handlesThrowable()",1,1,1
"org.apache.log4j.pattern.MessagePatternConverter.MessagePatternConverter()",1,1,1
"org.apache.log4j.pattern.MessagePatternConverter.format(LoggingEvent,StringBuffer)",1,1,1
"org.apache.log4j.pattern.MessagePatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.MethodLocationPatternConverter.MethodLocationPatternConverter()",1,1,1
"org.apache.log4j.pattern.MethodLocationPatternConverter.format(LoggingEvent,StringBuffer)",1,2,2
"org.apache.log4j.pattern.MethodLocationPatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.NDCPatternConverter.NDCPatternConverter()",1,1,1
"org.apache.log4j.pattern.NDCPatternConverter.format(LoggingEvent,StringBuffer)",1,1,1
"org.apache.log4j.pattern.NDCPatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.NameAbbreviator.MaxElementAbbreviator.MaxElementAbbreviator(int)",1,1,1
"org.apache.log4j.pattern.NameAbbreviator.MaxElementAbbreviator.abbreviate(int,StringBuffer)",3,2,4
"org.apache.log4j.pattern.NameAbbreviator.NOPAbbreviator.NOPAbbreviator()",1,1,1
"org.apache.log4j.pattern.NameAbbreviator.NOPAbbreviator.abbreviate(int,StringBuffer)",1,1,1
"org.apache.log4j.pattern.NameAbbreviator.PatternAbbreviator.PatternAbbreviator(List)",2,1,2
"org.apache.log4j.pattern.NameAbbreviator.PatternAbbreviator.abbreviate(int,StringBuffer)",1,5,5
"org.apache.log4j.pattern.NameAbbreviator.PatternAbbreviatorFragment.PatternAbbreviatorFragment(int,char)",1,1,1
"org.apache.log4j.pattern.NameAbbreviator.PatternAbbreviatorFragment.abbreviate(StringBuffer,int)",1,4,4
"org.apache.log4j.pattern.NameAbbreviator.getAbbreviator(String)",6,11,15
"org.apache.log4j.pattern.NameAbbreviator.getDefaultAbbreviator()",1,1,1
"org.apache.log4j.pattern.NamePatternConverter.NamePatternConverter(String,String,String[])",1,2,3
"org.apache.log4j.pattern.NamePatternConverter.abbreviate(int,StringBuffer)",1,1,1
"org.apache.log4j.pattern.PatternConverter.PatternConverter(String,String)",1,1,1
"org.apache.log4j.pattern.PatternConverter.getName()",1,1,1
"org.apache.log4j.pattern.PatternConverter.getStyleClass(Object)",1,1,1
"org.apache.log4j.pattern.PatternParser.PatternParser()",1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.ReadOnlyMap(Map)",1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.clear()",1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.containsKey(Object)",1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.containsValue(Object)",1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.entrySet()",1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.get(Object)",1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.isEmpty()",1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.keySet()",1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.put(Object,Object)",1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.putAll(Map)",1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.remove(Object)",1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.size()",1,1,1
"org.apache.log4j.pattern.PatternParser.ReadOnlyMap.values()",1,1,1
"org.apache.log4j.pattern.PatternParser.createConverter(String,StringBuffer,Map,Map,List,ULogger)",5,17,19
"org.apache.log4j.pattern.PatternParser.extractConverter(char,String,int,StringBuffer,StringBuffer)",2,3,4
"org.apache.log4j.pattern.PatternParser.extractOptions(String,int,List)",3,3,4
"org.apache.log4j.pattern.PatternParser.finalizeConverter(char,String,int,ULogger,StringBuffer,FormattingInfo,Map,Map,List,List)",1,6,6
"org.apache.log4j.pattern.PatternParser.getFileNamePatternRules()",1,1,1
"org.apache.log4j.pattern.PatternParser.getPatternLayoutRules()",1,1,1
"org.apache.log4j.pattern.PatternParser.parse(String,List,List,Map,Map,ULogger)",7,15,27
"org.apache.log4j.pattern.PropertiesPatternConverter.PropertiesPatternConverter(String[],ULogger)",1,1,5
"org.apache.log4j.pattern.PropertiesPatternConverter.format(LoggingEvent,StringBuffer)",1,4,4
"org.apache.log4j.pattern.PropertiesPatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.RelativeTimePatternConverter.CachedTimestamp.CachedTimestamp(long,String)",1,1,1
"org.apache.log4j.pattern.RelativeTimePatternConverter.CachedTimestamp.format(long,StringBuffer)",2,2,2
"org.apache.log4j.pattern.RelativeTimePatternConverter.RelativeTimePatternConverter()",1,1,1
"org.apache.log4j.pattern.RelativeTimePatternConverter.format(LoggingEvent,StringBuffer)",1,2,2
"org.apache.log4j.pattern.RelativeTimePatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.SequenceNumberPatternConverter.SequenceNumberPatternConverter()",1,1,1
"org.apache.log4j.pattern.SequenceNumberPatternConverter.format(LoggingEvent,StringBuffer)",1,1,1
"org.apache.log4j.pattern.SequenceNumberPatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.ThreadPatternConverter.ThreadPatternConverter()",1,1,1
"org.apache.log4j.pattern.ThreadPatternConverter.format(LoggingEvent,StringBuffer)",1,1,1
"org.apache.log4j.pattern.ThreadPatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.pattern.ThrowableInformationPatternConverter.ThrowableInformationPatternConverter(String[],ULogger)",1,1,3
"org.apache.log4j.pattern.ThrowableInformationPatternConverter.format(LoggingEvent,StringBuffer)",1,5,6
"org.apache.log4j.pattern.ThrowableInformationPatternConverter.handlesThrowable()",1,1,1
"org.apache.log4j.pattern.ThrowableInformationPatternConverter.newInstance(String[],ULogger)",1,1,1
"org.apache.log4j.plugins.PluginEvent.PluginEvent(Plugin)",1,1,1
"org.apache.log4j.plugins.PluginEvent.getPlugin()",1,1,1
"org.apache.log4j.plugins.PluginRegistry.PluginRegistry(LoggerRepositoryEx)",1,1,1
"org.apache.log4j.plugins.PluginRegistry.RepositoryListener.configurationChangedEvent(LoggerRepository)",1,1,1
"org.apache.log4j.plugins.PluginRegistry.RepositoryListener.configurationResetEvent(LoggerRepository)",1,1,1
"org.apache.log4j.plugins.PluginRegistry.RepositoryListener.shutdownEvent(LoggerRepository)",1,1,1
"org.apache.log4j.plugins.PluginRegistry.addPlugin(Plugin)",1,2,2
"org.apache.log4j.plugins.PluginRegistry.addPluginListener(PluginListener)",1,1,1
"org.apache.log4j.plugins.PluginRegistry.firePluginStarted(Plugin)",1,2,3
"org.apache.log4j.plugins.PluginRegistry.firePluginStopped(Plugin)",1,2,3
"org.apache.log4j.plugins.PluginRegistry.getLoggerRepository()",1,1,1
"org.apache.log4j.plugins.PluginRegistry.getPlugins()",1,2,2
"org.apache.log4j.plugins.PluginRegistry.getPlugins(Class)",1,3,3
"org.apache.log4j.plugins.PluginRegistry.pluginNameExists(String)",1,1,1
"org.apache.log4j.plugins.PluginRegistry.removePluginListener(PluginListener)",1,1,1
"org.apache.log4j.plugins.PluginRegistry.stopAllPlugins()",1,2,2
"org.apache.log4j.plugins.PluginRegistry.stopPlugin(String)",2,1,2
"org.apache.log4j.plugins.PluginSkeleton.addPropertyChangeListener(PropertyChangeListener)",1,1,1
"org.apache.log4j.plugins.PluginSkeleton.addPropertyChangeListener(String,PropertyChangeListener)",1,1,1
"org.apache.log4j.plugins.PluginSkeleton.firePropertyChange(PropertyChangeEvent)",1,1,1
"org.apache.log4j.plugins.PluginSkeleton.firePropertyChange(String,Object,Object)",1,1,1
"org.apache.log4j.plugins.PluginSkeleton.firePropertyChange(String,boolean,boolean)",1,1,1
"org.apache.log4j.plugins.PluginSkeleton.firePropertyChange(String,int,int)",1,1,1
"org.apache.log4j.plugins.PluginSkeleton.getLoggerRepository()",1,1,1
"org.apache.log4j.plugins.PluginSkeleton.getName()",1,1,1
"org.apache.log4j.plugins.PluginSkeleton.isActive()",1,1,1
"org.apache.log4j.plugins.PluginSkeleton.isEquivalent(Plugin)",1,6,6
"org.apache.log4j.plugins.PluginSkeleton.removePropertyChangeListener(PropertyChangeListener)",1,1,1
"org.apache.log4j.plugins.PluginSkeleton.removePropertyChangeListener(String,PropertyChangeListener)",1,1,1
"org.apache.log4j.plugins.PluginSkeleton.setLoggerRepository(LoggerRepository)",1,1,1
"org.apache.log4j.plugins.PluginSkeleton.setName(String)",1,1,1
"org.apache.log4j.plugins.Receiver.doPost(LoggingEvent)",2,2,3
"org.apache.log4j.plugins.Receiver.getThreshold()",1,1,1
"org.apache.log4j.plugins.Receiver.isAsSevereAsThreshold(Level)",1,2,2
"org.apache.log4j.plugins.Receiver.setThreshold(Level)",1,1,1
"org.apache.log4j.rolling.FilterBasedTriggeringPolicy.FilterBasedTriggeringPolicy()",1,1,1
"org.apache.log4j.rolling.FilterBasedTriggeringPolicy.activateOptions()",1,2,2
"org.apache.log4j.rolling.FilterBasedTriggeringPolicy.addFilter(Filter)",1,2,2
"org.apache.log4j.rolling.FilterBasedTriggeringPolicy.clearFilters()",1,1,1
"org.apache.log4j.rolling.FilterBasedTriggeringPolicy.getFilter()",1,1,1
"org.apache.log4j.rolling.FilterBasedTriggeringPolicy.isTriggeringEvent(Appender,LoggingEvent,String,long)",5,3,5
"org.apache.log4j.rolling.FixedWindowRollingPolicy.FixedWindowRollingPolicy()",1,1,1
"org.apache.log4j.rolling.FixedWindowRollingPolicy.activateOptions()",2,4,4
"org.apache.log4j.rolling.FixedWindowRollingPolicy.getMaxIndex()",1,1,1
"org.apache.log4j.rolling.FixedWindowRollingPolicy.getMinIndex()",1,1,1
"org.apache.log4j.rolling.FixedWindowRollingPolicy.initialize(String,boolean)",1,2,4
"org.apache.log4j.rolling.FixedWindowRollingPolicy.purge(int,int)",7,11,14
"org.apache.log4j.rolling.FixedWindowRollingPolicy.rollover(String)",3,4,6
"org.apache.log4j.rolling.FixedWindowRollingPolicy.setMaxIndex(int)",1,1,1
"org.apache.log4j.rolling.FixedWindowRollingPolicy.setMinIndex(int)",1,1,1
"org.apache.log4j.rolling.RollingFileAppender.CountingOutputStream.CountingOutputStream(OutputStream,RollingFileAppender)",1,1,1
"org.apache.log4j.rolling.RollingFileAppender.CountingOutputStream.close()",1,1,1
"org.apache.log4j.rolling.RollingFileAppender.CountingOutputStream.flush()",1,1,1
"org.apache.log4j.rolling.RollingFileAppender.CountingOutputStream.write(byte[])",1,1,1
"org.apache.log4j.rolling.RollingFileAppender.CountingOutputStream.write(byte[],int,int)",1,1,1
"org.apache.log4j.rolling.RollingFileAppender.CountingOutputStream.write(int)",1,1,1
"org.apache.log4j.rolling.RollingFileAppender.RollingFileAppender()",1,1,1
"org.apache.log4j.rolling.RollingFileAppender.activateOptions()",3,8,11
"org.apache.log4j.rolling.RollingFileAppender.close()",1,2,2
"org.apache.log4j.rolling.RollingFileAppender.createWriter(OutputStream)",1,1,1
"org.apache.log4j.rolling.RollingFileAppender.getFileLength()",1,1,1
"org.apache.log4j.rolling.RollingFileAppender.getRollingPolicy()",1,1,1
"org.apache.log4j.rolling.RollingFileAppender.getTriggeringPolicy()",1,1,1
"org.apache.log4j.rolling.RollingFileAppender.incrementFileLength(int)",1,1,1
"org.apache.log4j.rolling.RollingFileAppender.rollover()",3,15,18
"org.apache.log4j.rolling.RollingFileAppender.setRollingPolicy(RollingPolicy)",1,1,1
"org.apache.log4j.rolling.RollingFileAppender.setTriggeringPolicy(TriggeringPolicy)",1,1,1
"org.apache.log4j.rolling.RollingFileAppender.subAppend(LoggingEvent)",1,3,3
"org.apache.log4j.rolling.RollingPolicyBase.activateOptions()",2,2,2
"org.apache.log4j.rolling.RollingPolicyBase.formatFileName(Object,StringBuffer)",1,3,3
"org.apache.log4j.rolling.RollingPolicyBase.getActiveFileName()",1,1,1
"org.apache.log4j.rolling.RollingPolicyBase.getDatePatternConverter()",3,1,3
"org.apache.log4j.rolling.RollingPolicyBase.getFileNamePattern()",1,1,1
"org.apache.log4j.rolling.RollingPolicyBase.getIntegerPatternConverter()",3,1,3
"org.apache.log4j.rolling.RollingPolicyBase.parseFileNamePattern()",1,1,1
"org.apache.log4j.rolling.RollingPolicyBase.setActiveFileName(String)",1,1,1
"org.apache.log4j.rolling.RollingPolicyBase.setFileNamePattern(String)",1,1,1
"org.apache.log4j.rolling.RolloverDescriptionImpl.RolloverDescriptionImpl(String,boolean,Action,Action)",2,1,2
"org.apache.log4j.rolling.RolloverDescriptionImpl.getActiveFileName()",1,1,1
"org.apache.log4j.rolling.RolloverDescriptionImpl.getAppend()",1,1,1
"org.apache.log4j.rolling.RolloverDescriptionImpl.getAsynchronous()",1,1,1
"org.apache.log4j.rolling.RolloverDescriptionImpl.getSynchronous()",1,1,1
"org.apache.log4j.rolling.SizeBasedTriggeringPolicy.SizeBasedTriggeringPolicy()",1,1,1
"org.apache.log4j.rolling.SizeBasedTriggeringPolicy.SizeBasedTriggeringPolicy(long)",1,1,1
"org.apache.log4j.rolling.SizeBasedTriggeringPolicy.activateOptions()",1,1,1
"org.apache.log4j.rolling.SizeBasedTriggeringPolicy.getMaxFileSize()",1,1,1
"org.apache.log4j.rolling.SizeBasedTriggeringPolicy.isTriggeringEvent(Appender,LoggingEvent,String,long)",1,1,1
"org.apache.log4j.rolling.SizeBasedTriggeringPolicy.setMaxFileSize(long)",1,1,1
"org.apache.log4j.rolling.TimeBasedRollingPolicy.TimeBasedRollingPolicy()",1,1,1
"org.apache.log4j.rolling.TimeBasedRollingPolicy.activateOptions()",2,3,4
"org.apache.log4j.rolling.TimeBasedRollingPolicy.initialize(String,boolean)",3,3,3
"org.apache.log4j.rolling.TimeBasedRollingPolicy.isTriggeringEvent(Appender,LoggingEvent,String,long)",1,1,1
"org.apache.log4j.rolling.TimeBasedRollingPolicy.rollover(String)",2,3,5
"org.apache.log4j.rolling.helper.ActionBase.ActionBase()",1,1,1
"org.apache.log4j.rolling.helper.ActionBase.close()",1,1,1
"org.apache.log4j.rolling.helper.ActionBase.isComplete()",1,1,1
"org.apache.log4j.rolling.helper.ActionBase.reportException(Exception)",1,1,1
"org.apache.log4j.rolling.helper.ActionBase.run()",1,3,3
"org.apache.log4j.rolling.helper.CompositeAction.CompositeAction(List,boolean,ULogger)",1,1,1
"org.apache.log4j.rolling.helper.CompositeAction.execute()",5,4,8
"org.apache.log4j.rolling.helper.CompositeAction.run()",1,3,3
"org.apache.log4j.rolling.helper.FileRenameAction.FileRenameAction(File,File,boolean)",1,1,1
"org.apache.log4j.rolling.helper.FileRenameAction.execute()",1,1,1
"org.apache.log4j.rolling.helper.FileRenameAction.execute(File,File,boolean)",2,3,3
"org.apache.log4j.rolling.helper.GZCompressAction.GZCompressAction(File,File,boolean,ULogger)",3,1,3
"org.apache.log4j.rolling.helper.GZCompressAction.execute()",1,1,1
"org.apache.log4j.rolling.helper.GZCompressAction.execute(File,File,boolean,ULogger)",2,6,6
"org.apache.log4j.rolling.helper.GZCompressAction.reportException(Exception)",1,2,2
"org.apache.log4j.rolling.helper.ZipCompressAction.ZipCompressAction(File,File,boolean,ULogger)",3,1,3
"org.apache.log4j.rolling.helper.ZipCompressAction.execute()",1,1,1
"org.apache.log4j.rolling.helper.ZipCompressAction.execute(File,File,boolean,ULogger)",2,6,6
"org.apache.log4j.rolling.helper.ZipCompressAction.reportException(Exception)",1,2,2
"org.apache.log4j.rule.AbstractRule.addPropertyChangeListener(PropertyChangeListener)",1,1,1
"org.apache.log4j.rule.AbstractRule.firePropertyChange(PropertyChangeEvent)",1,1,1
"org.apache.log4j.rule.AbstractRule.firePropertyChange(String,Object,Object)",1,1,1
"org.apache.log4j.rule.AbstractRule.removePropertyChangeListener(PropertyChangeListener)",1,1,1
"org.apache.log4j.rule.AndRule.AndRule(Rule,Rule)",1,1,1
"org.apache.log4j.rule.AndRule.evaluate(LoggingEvent)",1,2,2
"org.apache.log4j.rule.AndRule.getRule(Rule,Rule)",1,1,1
"org.apache.log4j.rule.AndRule.getRule(Stack)",3,2,4
"org.apache.log4j.rule.ColorRule.ColorRule(String,Rule,Color,Color)",1,1,1
"org.apache.log4j.rule.ColorRule.evaluate(LoggingEvent)",1,2,2
"org.apache.log4j.rule.ColorRule.getBackgroundColor()",1,1,1
"org.apache.log4j.rule.ColorRule.getExpression()",1,1,1
"org.apache.log4j.rule.ColorRule.getForegroundColor()",1,1,1
"org.apache.log4j.rule.ColorRule.getRule()",1,1,1
"org.apache.log4j.rule.ColorRule.toString()",1,1,1
"org.apache.log4j.rule.EqualsRule.EqualsRule(String,String)",2,1,2
"org.apache.log4j.rule.EqualsRule.evaluate(LoggingEvent)",1,2,2
"org.apache.log4j.rule.EqualsRule.getRule(Stack)",2,2,2
"org.apache.log4j.rule.EqualsRule.getRule(String,String)",3,3,3
"org.apache.log4j.rule.ExistsRule.ExistsRule(String)",2,1,2
"org.apache.log4j.rule.ExistsRule.evaluate(LoggingEvent)",1,3,3
"org.apache.log4j.rule.ExistsRule.getRule(Stack)",2,2,2
"org.apache.log4j.rule.ExistsRule.getRule(String)",1,1,1
"org.apache.log4j.rule.ExpressionRule.ExpressionRule(Rule)",1,1,1
"org.apache.log4j.rule.ExpressionRule.PostFixExpressionCompiler.compileExpression(String)",3,17,18
"org.apache.log4j.rule.ExpressionRule.evaluate(LoggingEvent)",1,1,1
"org.apache.log4j.rule.ExpressionRule.getRule(String)",1,1,1
"org.apache.log4j.rule.ExpressionRule.getRule(String,boolean)",1,2,2
"org.apache.log4j.rule.ExpressionRule.toString()",1,1,1
"org.apache.log4j.rule.InFixToPostFix.InFixToPostFix()",1,1,1
"org.apache.log4j.rule.InFixToPostFix.convert(String)",1,1,1
"org.apache.log4j.rule.InFixToPostFix.infixToPostFix(StringTokenizer)",4,16,16
"org.apache.log4j.rule.InFixToPostFix.isOperand(String)",1,1,1
"org.apache.log4j.rule.InFixToPostFix.precedes(String,String)",3,1,3
"org.apache.log4j.rule.InequalityRule.InequalityRule(String,String,String)",2,1,2
"org.apache.log4j.rule.InequalityRule.evaluate(LoggingEvent)",1,4,7
"org.apache.log4j.rule.InequalityRule.getRule(String,Stack)",2,2,2
"org.apache.log4j.rule.InequalityRule.getRule(String,String,String)",3,3,3
"org.apache.log4j.rule.LevelEqualsRule.LevelEqualsRule(Level)",1,1,1
"org.apache.log4j.rule.LevelEqualsRule.evaluate(LoggingEvent)",1,1,1
"org.apache.log4j.rule.LevelEqualsRule.getRule(String)",1,2,2
"org.apache.log4j.rule.LevelEqualsRule.readObject(ObjectInputStream)",1,2,2
"org.apache.log4j.rule.LevelEqualsRule.writeObject(ObjectOutputStream)",1,1,1
"org.apache.log4j.rule.LevelInequalityRule.GreaterThanEqualsRule.GreaterThanEqualsRule(Level)",1,1,1
"org.apache.log4j.rule.LevelInequalityRule.GreaterThanEqualsRule.evaluate(LoggingEvent)",1,1,1
"org.apache.log4j.rule.LevelInequalityRule.GreaterThanRule.GreaterThanRule(Level)",1,1,1
"org.apache.log4j.rule.LevelInequalityRule.GreaterThanRule.evaluate(LoggingEvent)",1,1,1
"org.apache.log4j.rule.LevelInequalityRule.LessThanEqualsRule.LessThanEqualsRule(Level)",1,1,1
"org.apache.log4j.rule.LevelInequalityRule.LessThanEqualsRule.evaluate(LoggingEvent)",1,1,1
"org.apache.log4j.rule.LevelInequalityRule.LessThanRule.LessThanRule(Level)",1,1,1
"org.apache.log4j.rule.LevelInequalityRule.LessThanRule.evaluate(LoggingEvent)",1,1,1
"org.apache.log4j.rule.LevelInequalityRule.LevelInequalityRule()",1,1,1
"org.apache.log4j.rule.LevelInequalityRule.getRule(String,String)",6,2,7
"org.apache.log4j.rule.LikeRule.LikeRule(String,Pattern)",2,1,2
"org.apache.log4j.rule.LikeRule.evaluate(LoggingEvent)",1,3,3
"org.apache.log4j.rule.LikeRule.getRule(Stack)",2,2,2
"org.apache.log4j.rule.LikeRule.getRule(String,String)",1,2,2
"org.apache.log4j.rule.LikeRule.readObject(ObjectInputStream)",1,2,2
"org.apache.log4j.rule.LikeRule.writeObject(ObjectOutputStream)",1,1,1
"org.apache.log4j.rule.NotEqualsRule.NotEqualsRule(String,String)",2,1,2
"org.apache.log4j.rule.NotEqualsRule.evaluate(LoggingEvent)",1,2,2
"org.apache.log4j.rule.NotEqualsRule.getRule(Stack)",2,2,2
"org.apache.log4j.rule.NotEqualsRule.getRule(String,String)",1,1,1
"org.apache.log4j.rule.NotRule.NotRule(Rule)",1,1,1
"org.apache.log4j.rule.NotRule.evaluate(LoggingEvent)",1,1,1
"org.apache.log4j.rule.NotRule.getRule(Rule)",1,1,1
"org.apache.log4j.rule.NotRule.getRule(Stack)",3,2,3
"org.apache.log4j.rule.OrRule.OrRule(Rule,Rule)",1,1,1
"org.apache.log4j.rule.OrRule.evaluate(LoggingEvent)",1,2,2
"org.apache.log4j.rule.OrRule.getRule(Rule,Rule)",1,1,1
"org.apache.log4j.rule.OrRule.getRule(Stack)",3,2,4
"org.apache.log4j.rule.PartialTextMatchRule.PartialTextMatchRule(String,String)",2,1,2
"org.apache.log4j.rule.PartialTextMatchRule.evaluate(LoggingEvent)",2,1,3
"org.apache.log4j.rule.PartialTextMatchRule.getRule(Stack)",2,2,2
"org.apache.log4j.rule.PartialTextMatchRule.getRule(String,String)",1,1,1
"org.apache.log4j.rule.RuleFactory.RuleFactory()",1,1,1
"org.apache.log4j.rule.RuleFactory.getInstance()",1,1,1
"org.apache.log4j.rule.RuleFactory.getRule(String,Stack)",13,14,18
"org.apache.log4j.rule.RuleFactory.isRule(String)",2,1,2
"org.apache.log4j.rule.TimestampEqualsRule.TimestampEqualsRule(String)",1,1,2
"org.apache.log4j.rule.TimestampEqualsRule.evaluate(LoggingEvent)",1,1,1
"org.apache.log4j.rule.TimestampEqualsRule.getRule(String)",1,1,1
"org.apache.log4j.rule.TimestampEqualsRule.readObject(ObjectInputStream)",1,1,1
"org.apache.log4j.rule.TimestampEqualsRule.writeObject(ObjectOutputStream)",1,1,1
"org.apache.log4j.rule.TimestampInequalityRule.TimestampInequalityRule(String,String)",1,1,2
"org.apache.log4j.rule.TimestampInequalityRule.evaluate(LoggingEvent)",1,4,5
"org.apache.log4j.rule.TimestampInequalityRule.getRule(String,String)",1,1,1
"org.apache.log4j.rule.TimestampInequalityRule.readObject(ObjectInputStream)",1,1,1
"org.apache.log4j.rule.TimestampInequalityRule.writeObject(ObjectOutputStream)",1,1,1
"org.apache.log4j.scheduler.ScheduledJobEntry.ScheduledJobEntry(Job,long)",1,1,1
"org.apache.log4j.scheduler.ScheduledJobEntry.ScheduledJobEntry(Job,long,long)",1,1,1
"org.apache.log4j.scheduler.Scheduler.Scheduler()",1,1,1
"org.apache.log4j.scheduler.Scheduler.changePeriod(Job,long)",3,2,3
"org.apache.log4j.scheduler.Scheduler.delete(Job)",3,3,5
"org.apache.log4j.scheduler.Scheduler.executeInABox(Job)",1,2,2
"org.apache.log4j.scheduler.Scheduler.findIndex(Job)",4,2,4
"org.apache.log4j.scheduler.Scheduler.linger()",1,3,4
"org.apache.log4j.scheduler.Scheduler.linger(long)",1,1,2
"org.apache.log4j.scheduler.Scheduler.run()",1,5,5
"org.apache.log4j.scheduler.Scheduler.schedule(Job,long)",1,1,1
"org.apache.log4j.scheduler.Scheduler.schedule(Job,long,long)",1,1,1
"org.apache.log4j.scheduler.Scheduler.schedule(ScheduledJobEntry)",4,3,5
"org.apache.log4j.scheduler.Scheduler.shutdown()",1,1,1
"org.apache.log4j.selector.ContextJNDISelector.ContextJNDISelector()",1,1,1
"org.apache.log4j.selector.ContextJNDISelector.detachRepository(String)",1,1,1
"org.apache.log4j.selector.ContextJNDISelector.getLoggerRepository()",2,5,6
"org.apache.log4j.selector.ContextJNDISelector.getLoggerRepository(String)",2,2,2
"org.apache.log4j.selector.servlet.ContextDetachingSCL.contextDestroyed(ServletContextEvent)",1,5,6
"org.apache.log4j.selector.servlet.ContextDetachingSCL.contextInitialized(ServletContextEvent)",1,1,1
"org.apache.log4j.spi.ComponentBase.getLogger()",1,3,5
"org.apache.log4j.spi.ComponentBase.getLoggerRepository()",1,1,1
"org.apache.log4j.spi.ComponentBase.getNonFloodingLogger()",2,2,2
"org.apache.log4j.spi.ComponentBase.resetErrorCount()",1,1,1
"org.apache.log4j.spi.ComponentBase.setLoggerRepository(LoggerRepository)",3,1,3
"org.apache.log4j.spi.DefaultRepositorySelector.DefaultRepositorySelector(LoggerRepository)",2,1,2
"org.apache.log4j.spi.DefaultRepositorySelector.detachRepository(String)",1,1,1
"org.apache.log4j.spi.DefaultRepositorySelector.getLoggerRepository()",1,1,1
"org.apache.log4j.spi.ErrorItem.ErrorItem(String)",1,1,1
"org.apache.log4j.spi.ErrorItem.ErrorItem(String,Exception)",1,1,1
"org.apache.log4j.spi.ErrorItem.dump()",1,1,1
"org.apache.log4j.spi.ErrorItem.dump(PrintStream)",1,2,3
"org.apache.log4j.spi.ErrorItem.getColNumber()",1,1,1
"org.apache.log4j.spi.ErrorItem.getException()",1,1,1
"org.apache.log4j.spi.ErrorItem.getLineNumber()",1,1,1
"org.apache.log4j.spi.ErrorItem.getMessage()",1,1,1
"org.apache.log4j.spi.ErrorItem.setColNumber(int)",1,1,1
"org.apache.log4j.spi.ErrorItem.setException(Throwable)",1,1,1
"org.apache.log4j.spi.ErrorItem.setLineNumber(int)",1,1,1
"org.apache.log4j.spi.ErrorItem.setMessage(String)",1,1,1
"org.apache.log4j.spi.ErrorItem.toString()",1,1,3
"org.apache.log4j.spi.Filter.activateOptions()",1,1,1
"org.apache.log4j.spi.Filter.getNext()",1,1,1
"org.apache.log4j.spi.Filter.setNext(Filter)",1,1,1
"org.apache.log4j.spi.HierarchyEventListenerAdapter.HierarchyEventListenerAdapter(HierarchyEventListener)",2,1,2
"org.apache.log4j.spi.HierarchyEventListenerAdapter.appenderAddedEvent(Logger,Appender)",1,1,1
"org.apache.log4j.spi.HierarchyEventListenerAdapter.appenderRemovedEvent(Logger,Appender)",1,1,1
"org.apache.log4j.spi.HierarchyEventListenerAdapter.levelChangedEvent(Logger)",1,1,1
"org.apache.log4j.spi.LocationInfo.LocationInfo(String,String,String,String)",1,1,1
"org.apache.log4j.spi.LocationInfo.LocationInfo(Throwable,String)",2,2,3
"org.apache.log4j.spi.LocationInfo.equals(Object)",7,1,7
"org.apache.log4j.spi.LocationInfo.getClassName()",1,1,1
"org.apache.log4j.spi.LocationInfo.getFileName()",1,1,1
"org.apache.log4j.spi.LocationInfo.getFullInfo()",1,2,2
"org.apache.log4j.spi.LocationInfo.getLineNumber()",1,1,1
"org.apache.log4j.spi.LocationInfo.getMethodName()",1,1,1
"org.apache.log4j.spi.LocationInfo.hashCode()",1,1,1
"org.apache.log4j.spi.LocationInfo.toString()",1,1,1
"org.apache.log4j.spi.LoggingEvent.LoggingEvent()",1,1,1
"org.apache.log4j.spi.LoggingEvent.LoggingEvent(String,Category,Priority,Object,Throwable)",1,1,1
"org.apache.log4j.spi.LoggingEvent.LoggingEvent(String,Category,long,Priority,Object,Throwable)",1,1,2
"org.apache.log4j.spi.LoggingEvent.equals(Object)",8,2,9
"org.apache.log4j.spi.LoggingEvent.getFQNOfLoggerClass()",1,1,1
"org.apache.log4j.spi.LoggingEvent.getLevel()",1,1,1
"org.apache.log4j.spi.LoggingEvent.getLocationInformation()",1,1,3
"org.apache.log4j.spi.LoggingEvent.getLogger()",2,1,2
"org.apache.log4j.spi.LoggingEvent.getLoggerName()",1,1,1
"org.apache.log4j.spi.LoggingEvent.getMDC(String)",3,2,3
"org.apache.log4j.spi.LoggingEvent.getMDCCopy()",1,1,1
"org.apache.log4j.spi.LoggingEvent.getMessage()",2,2,2
"org.apache.log4j.spi.LoggingEvent.getNDC()",1,2,2
"org.apache.log4j.spi.LoggingEvent.getProperties()",1,1,1
"org.apache.log4j.spi.LoggingEvent.getProperty(String)",4,5,6
"org.apache.log4j.spi.LoggingEvent.getPropertyKeySet()",1,1,1
"org.apache.log4j.spi.LoggingEvent.getRenderedMessage()",1,4,5
"org.apache.log4j.spi.LoggingEvent.getSequenceCount()",1,1,1
"org.apache.log4j.spi.LoggingEvent.getSequenceNumber()",1,1,1
"org.apache.log4j.spi.LoggingEvent.getStartTime()",1,1,1
"org.apache.log4j.spi.LoggingEvent.getThreadName()",1,2,2
"org.apache.log4j.spi.LoggingEvent.getThrowableInformation()",1,1,1
"org.apache.log4j.spi.LoggingEvent.getThrowableStrRep()",2,2,2
"org.apache.log4j.spi.LoggingEvent.getTimeStamp()",1,1,1
"org.apache.log4j.spi.LoggingEvent.hashCode()",1,1,1
"org.apache.log4j.spi.LoggingEvent.initializeProperties()",1,5,5
"org.apache.log4j.spi.LoggingEvent.locationInformationExists()",1,1,1
"org.apache.log4j.spi.LoggingEvent.prepareForDeferredProcessing()",1,2,2
"org.apache.log4j.spi.LoggingEvent.readLevel(ObjectInputStream)",1,4,4
"org.apache.log4j.spi.LoggingEvent.readObject(ObjectInputStream)",1,1,2
"org.apache.log4j.spi.LoggingEvent.setFQNOfLoggerClass(String)",1,1,1
"org.apache.log4j.spi.LoggingEvent.setLevel(Level)",2,1,2
"org.apache.log4j.spi.LoggingEvent.setLocationInformation(LocationInfo)",2,1,2
"org.apache.log4j.spi.LoggingEvent.setLogger(Logger)",3,3,3
"org.apache.log4j.spi.LoggingEvent.setLoggerName(String)",2,1,2
"org.apache.log4j.spi.LoggingEvent.setMessage(Object)",3,1,3
"org.apache.log4j.spi.LoggingEvent.setNDC(String)",2,1,2
"org.apache.log4j.spi.LoggingEvent.setProperties(Hashtable)",1,1,1
"org.apache.log4j.spi.LoggingEvent.setProperty(String,String)",1,3,3
"org.apache.log4j.spi.LoggingEvent.setRenderedMessage(String)",2,1,2
"org.apache.log4j.spi.LoggingEvent.setSequenceNumber(long)",1,1,1
"org.apache.log4j.spi.LoggingEvent.setThreadName(String)",2,1,2
"org.apache.log4j.spi.LoggingEvent.setThrowableInformation(ThrowableInformation)",2,1,2
"org.apache.log4j.spi.LoggingEvent.setTimeStamp(long)",1,1,1
"org.apache.log4j.spi.LoggingEvent.writeLevel(ObjectOutputStream)",1,2,2
"org.apache.log4j.spi.LoggingEvent.writeObject(ObjectOutputStream)",1,1,1
"org.apache.log4j.spi.LoggingEventFieldResolver.LoggingEventFieldResolver()",1,1,1
"org.apache.log4j.spi.LoggingEventFieldResolver.applyFields(String,LoggingEvent)",3,5,6
"org.apache.log4j.spi.LoggingEventFieldResolver.getExceptionMessage(String[])",1,2,2
"org.apache.log4j.spi.LoggingEventFieldResolver.getInstance()",1,1,1
"org.apache.log4j.spi.LoggingEventFieldResolver.getValue(String,LoggingEvent)",13,19,21
"org.apache.log4j.spi.LoggingEventFieldResolver.isField(String)",2,3,3
"org.apache.log4j.spi.NOPULogger.NOPULogger()",1,1,1
"org.apache.log4j.spi.NOPULogger.debug(Object)",1,1,1
"org.apache.log4j.spi.NOPULogger.debug(Object,Object)",1,1,1
"org.apache.log4j.spi.NOPULogger.debug(Object,Throwable)",1,1,1
"org.apache.log4j.spi.NOPULogger.debug(String,Object,Object)",1,1,1
"org.apache.log4j.spi.NOPULogger.error(Object)",1,1,1
"org.apache.log4j.spi.NOPULogger.error(Object,Object)",1,1,1
"org.apache.log4j.spi.NOPULogger.error(Object,Throwable)",1,1,1
"org.apache.log4j.spi.NOPULogger.error(String,Object,Object)",1,1,1
"org.apache.log4j.spi.NOPULogger.getLogger(String)",1,1,1
"org.apache.log4j.spi.NOPULogger.info(Object)",1,1,1
"org.apache.log4j.spi.NOPULogger.info(Object,Object)",1,1,1
"org.apache.log4j.spi.NOPULogger.info(Object,Throwable)",1,1,1
"org.apache.log4j.spi.NOPULogger.info(String,Object,Object)",1,1,1
"org.apache.log4j.spi.NOPULogger.isDebugEnabled()",1,1,1
"org.apache.log4j.spi.NOPULogger.isErrorEnabled()",1,1,1
"org.apache.log4j.spi.NOPULogger.isInfoEnabled()",1,1,1
"org.apache.log4j.spi.NOPULogger.isWarnEnabled()",1,1,1
"org.apache.log4j.spi.NOPULogger.warn(Object)",1,1,1
"org.apache.log4j.spi.NOPULogger.warn(Object,Object)",1,1,1
"org.apache.log4j.spi.NOPULogger.warn(Object,Throwable)",1,1,1
"org.apache.log4j.spi.NOPULogger.warn(String,Object,Object)",1,1,1
"org.apache.log4j.spi.NullWriter.close()",1,1,1
"org.apache.log4j.spi.NullWriter.flush()",1,1,1
"org.apache.log4j.spi.NullWriter.write(char[],int,int)",1,1,1
"org.apache.log4j.spi.RootCategory.RootCategory(Level)",1,1,1
"org.apache.log4j.spi.RootCategory.getChainedLevel()",1,1,1
"org.apache.log4j.spi.RootCategory.setLevel(Level)",1,3,3
"org.apache.log4j.spi.RootCategory.setPriority(Level)",1,1,1
"org.apache.log4j.spi.RootLogger.RootLogger()",1,1,1
"org.apache.log4j.spi.RootLogger.RootLogger(Level)",1,1,1
"org.apache.log4j.spi.RootLogger.getChainedLevel()",1,1,1
"org.apache.log4j.spi.RootLogger.setLevel(Level)",1,3,3
"org.apache.log4j.spi.SimpleULogger.SimpleULogger(String)",1,1,1
"org.apache.log4j.spi.SimpleULogger.debug(Object)",1,1,1
"org.apache.log4j.spi.SimpleULogger.debug(Object,Object)",1,1,1
"org.apache.log4j.spi.SimpleULogger.debug(Object,Throwable)",1,1,1
"org.apache.log4j.spi.SimpleULogger.debug(String,Object,Object)",1,1,1
"org.apache.log4j.spi.SimpleULogger.error(Object)",1,1,1
"org.apache.log4j.spi.SimpleULogger.error(Object,Object)",1,1,1
"org.apache.log4j.spi.SimpleULogger.error(Object,Throwable)",1,1,1
"org.apache.log4j.spi.SimpleULogger.error(String,Object,Object)",1,1,1
"org.apache.log4j.spi.SimpleULogger.getLogger(String)",1,1,1
"org.apache.log4j.spi.SimpleULogger.info(Object)",1,1,1
"org.apache.log4j.spi.SimpleULogger.info(Object,Object)",1,1,1
"org.apache.log4j.spi.SimpleULogger.info(Object,Throwable)",1,1,1
"org.apache.log4j.spi.SimpleULogger.info(String,Object,Object)",1,1,1
"org.apache.log4j.spi.SimpleULogger.isDebugEnabled()",1,1,1
"org.apache.log4j.spi.SimpleULogger.isErrorEnabled()",1,1,1
"org.apache.log4j.spi.SimpleULogger.isInfoEnabled()",1,1,1
"org.apache.log4j.spi.SimpleULogger.isWarnEnabled()",1,1,1
"org.apache.log4j.spi.SimpleULogger.log(String,String,Throwable)",1,2,2
"org.apache.log4j.spi.SimpleULogger.parameterizedLog(String,Object,Object,Object)",1,2,2
"org.apache.log4j.spi.SimpleULogger.warn(Object)",1,1,1
"org.apache.log4j.spi.SimpleULogger.warn(Object,Object)",1,1,1
"org.apache.log4j.spi.SimpleULogger.warn(Object,Throwable)",1,1,1
"org.apache.log4j.spi.SimpleULogger.warn(String,Object,Object)",1,1,1
"org.apache.log4j.spi.ThrowableInformation.ThrowableInformation(String[])",1,1,1
"org.apache.log4j.spi.ThrowableInformation.ThrowableInformation(Throwable)",1,1,1
"org.apache.log4j.spi.ThrowableInformation.equals(Object)",8,2,8
"org.apache.log4j.spi.ThrowableInformation.extractStringRep(Throwable,VectorWriter)",4,9,12
"org.apache.log4j.spi.ThrowableInformation.getThrowable()",1,1,1
"org.apache.log4j.spi.ThrowableInformation.getThrowableStrRep()",1,1,1
"org.apache.log4j.spi.VectorWriter.VectorWriter()",1,1,1
"org.apache.log4j.spi.VectorWriter.print(Object)",1,1,1
"org.apache.log4j.spi.VectorWriter.print(String)",1,1,1
"org.apache.log4j.spi.VectorWriter.print(char[])",1,1,1
"org.apache.log4j.spi.VectorWriter.println(Object)",1,1,1
"org.apache.log4j.spi.VectorWriter.println(String)",1,1,1
"org.apache.log4j.spi.VectorWriter.println(char[])",1,1,1
"org.apache.log4j.spi.VectorWriter.toStringArray()",1,2,2
"org.apache.log4j.spi.VectorWriter.write(String)",1,1,1
"org.apache.log4j.spi.VectorWriter.write(String,int,int)",1,1,1
"org.apache.log4j.spi.VectorWriter.write(char[])",1,1,1
"org.apache.log4j.spi.VectorWriter.write(char[],int,int)",1,1,1
"org.apache.log4j.spi.location.LegacyExtractor.LegacyExtractor()",1,1,1
"org.apache.log4j.spi.location.LegacyExtractor.extract(LocationInfo,Throwable,String)",6,4,8
"org.apache.log4j.spi.location.LegacyExtractor.setClassName(LocationInfo,String)",2,4,5
"org.apache.log4j.spi.location.LegacyExtractor.setFileName(LocationInfo,String)",1,3,3
"org.apache.log4j.spi.location.LegacyExtractor.setLineNumber(LocationInfo,String)",1,3,3
"org.apache.log4j.spi.location.LegacyExtractor.setMethodName(LocationInfo,String)",1,3,3
"org.apache.log4j.spi.location.StackTraceElementExtractor.extract(LocationInfo,Throwable,String)",5,3,7
"org.apache.log4j.spi.location.StackTraceElementExtractor.setClassName(LocationInfo,Object)",1,1,2
"org.apache.log4j.spi.location.StackTraceElementExtractor.setFileName(LocationInfo,Object)",1,1,2
"org.apache.log4j.spi.location.StackTraceElementExtractor.setLineNumber(LocationInfo,Object)",1,2,3
"org.apache.log4j.spi.location.StackTraceElementExtractor.setMethodName(LocationInfo,Object)",1,1,2
"org.apache.log4j.varia.ExternallyRolledFileAppender.ExternallyRolledFileAppender()",1,1,1
"org.apache.log4j.varia.ExternallyRolledFileAppender.activateOptions()",1,3,3
"org.apache.log4j.varia.ExternallyRolledFileAppender.getPort()",1,1,1
"org.apache.log4j.varia.ExternallyRolledFileAppender.setPort(int)",1,1,1
"org.apache.log4j.varia.FallbackErrorHandler.activateOptions()",1,1,1
"org.apache.log4j.varia.FallbackErrorHandler.error(String)",1,1,1
"org.apache.log4j.varia.FallbackErrorHandler.error(String,Exception,int)",1,1,1
"org.apache.log4j.varia.FallbackErrorHandler.error(String,Exception,int,LoggingEvent)",1,1,1
"org.apache.log4j.varia.FallbackErrorHandler.setAppender(Appender)",1,1,1
"org.apache.log4j.varia.FallbackErrorHandler.setBackupAppender(Appender)",1,1,1
"org.apache.log4j.varia.FallbackErrorHandler.setLogger(Logger)",1,1,1
"org.apache.log4j.varia.HUP.HUP(ExternallyRolledFileAppender,int)",1,1,1
"org.apache.log4j.varia.HUP.run()",1,4,4
"org.apache.log4j.varia.HUPNode.HUPNode(Socket,ExternallyRolledFileAppender)",1,2,2
"org.apache.log4j.varia.HUPNode.run()",1,3,3
"org.apache.log4j.varia.ListAppender.ListAppender()",1,1,1
"org.apache.log4j.varia.ListAppender.append(LoggingEvent)",1,1,1
"org.apache.log4j.varia.ListAppender.clearList()",1,1,1
"org.apache.log4j.varia.ListAppender.close()",1,1,1
"org.apache.log4j.varia.ListAppender.getList()",1,1,1
"org.apache.log4j.varia.ListAppender.requiresLayout()",1,1,1
"org.apache.log4j.varia.ListModelAppender.ListModelAppender()",1,1,1
"org.apache.log4j.varia.ListModelAppender.append(LoggingEvent)",1,1,1
"org.apache.log4j.varia.ListModelAppender.clearModel()",1,1,1
"org.apache.log4j.varia.ListModelAppender.close()",1,1,1
"org.apache.log4j.varia.ListModelAppender.getModel()",1,1,1
"org.apache.log4j.varia.ListModelAppender.requiresLayout()",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.LogFilePatternReceiver()",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.activateOptions()",2,5,6
"org.apache.log4j.varia.LogFilePatternReceiver.buildEvent()",2,6,6
"org.apache.log4j.varia.LogFilePatternReceiver.buildException(int)",2,2,3
"org.apache.log4j.varia.LogFilePatternReceiver.buildMessage(String,int)",2,5,6
"org.apache.log4j.varia.LogFilePatternReceiver.convertTimestamp()",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.convertToEvent(Map,String[])",2,6,13
"org.apache.log4j.varia.LogFilePatternReceiver.getExceptionLine()",3,3,4
"org.apache.log4j.varia.LogFilePatternReceiver.getFileURL()",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.getFilterExpression()",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.getLogFormat()",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.getTimestampFormat()",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.initialize()",1,15,18
"org.apache.log4j.varia.LogFilePatternReceiver.isTailing()",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.main(String[])",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.passesExpression(LoggingEvent)",3,3,3
"org.apache.log4j.varia.LogFilePatternReceiver.process(Reader)",1,8,10
"org.apache.log4j.varia.LogFilePatternReceiver.processEvent(MatchResult)",1,2,2
"org.apache.log4j.varia.LogFilePatternReceiver.replace(String,String,String)",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.replaceMetaChars(String)",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.setFileURL(String)",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.setFilterExpression(String)",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.setHost(String)",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.setLogFormat(String)",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.setPath(String)",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.setTailing(boolean)",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.setTimestampFormat(String)",1,1,1
"org.apache.log4j.varia.LogFilePatternReceiver.shutdown()",1,3,3
"org.apache.log4j.varia.LogFilePatternReceiverBeanInfo.getPropertyDescriptors()",1,1,2
"org.apache.log4j.varia.NullAppender.NullAppender()",1,1,1
"org.apache.log4j.varia.NullAppender.append(LoggingEvent)",1,1,1
"org.apache.log4j.varia.NullAppender.close()",1,1,1
"org.apache.log4j.varia.NullAppender.doAppend(LoggingEvent)",1,1,1
"org.apache.log4j.varia.NullAppender.getInstance()",1,1,1
"org.apache.log4j.varia.NullAppender.requiresLayout()",1,1,1
"org.apache.log4j.varia.Roller.Roller()",1,1,1
"org.apache.log4j.varia.Roller.init(String,String)",1,2,2
"org.apache.log4j.varia.Roller.main(String[])",1,2,2
"org.apache.log4j.varia.Roller.roll()",1,3,3
"org.apache.log4j.varia.Roller.usage(String)",1,1,1
"org.apache.log4j.varia.SoundAppender.SoundAppender()",1,1,1
"org.apache.log4j.varia.SoundAppender.activateOptions()",1,3,3
"org.apache.log4j.varia.SoundAppender.append(LoggingEvent)",1,2,2
"org.apache.log4j.varia.SoundAppender.close()",1,1,1
"org.apache.log4j.varia.SoundAppender.getAudioURL()",1,1,1
"org.apache.log4j.varia.SoundAppender.requiresLayout()",1,1,1
"org.apache.log4j.varia.SoundAppender.setAudioURL(String)",1,1,1
"org.apache.log4j.varia.StringMatchFilter.getOptionStrings()",1,1,1
"org.apache.log4j.varia.StringMatchFilter.setOption(String,String)",1,3,3
"org.apache.log4j.watchdog.FileWatchdog.activateOptions()",2,5,5
"org.apache.log4j.watchdog.FileWatchdog.execute()",1,4,4
"org.apache.log4j.watchdog.FileWatchdog.getFile()",1,1,1
"org.apache.log4j.watchdog.FileWatchdog.getInitialConfigure()",1,1,1
"org.apache.log4j.watchdog.FileWatchdog.getInterval()",1,1,1
"org.apache.log4j.watchdog.FileWatchdog.getLastModTime()",1,1,1
"org.apache.log4j.watchdog.FileWatchdog.reconfigure()",1,2,4
"org.apache.log4j.watchdog.FileWatchdog.setFile(String)",1,1,1
"org.apache.log4j.watchdog.FileWatchdog.setInitialConfigure(boolean)",1,1,1
"org.apache.log4j.watchdog.FileWatchdog.setInterval(long)",1,1,1
"org.apache.log4j.watchdog.FileWatchdog.shutdown()",1,2,2
"org.apache.log4j.watchdog.WatchdogSkeleton.configure(Configurator)",3,4,4
"org.apache.log4j.watchdog.WatchdogSkeleton.getConfigurator()",1,1,1
"org.apache.log4j.watchdog.WatchdogSkeleton.getConfiguratorInstance()",1,2,2
"org.apache.log4j.watchdog.WatchdogSkeleton.reconfigureByStream(InputStream)",2,3,3
"org.apache.log4j.watchdog.WatchdogSkeleton.reconfigureByURL(URL)",2,3,3
"org.apache.log4j.watchdog.WatchdogSkeleton.setConfigurator(String)",1,1,1
"org.apache.log4j.xml.DOMConfigurator.DOMElementParseAction.DOMElementParseAction(Element)",1,1,1
"org.apache.log4j.xml.DOMConfigurator.DOMElementParseAction.parse(SAXParser,DefaultHandler)",1,1,1
"org.apache.log4j.xml.DOMConfigurator.DOMElementParseAction.replay(Element,DefaultHandler)",1,4,6
"org.apache.log4j.xml.DOMConfigurator.configure(Element)",1,1,1
"org.apache.log4j.xml.DOMConfigurator.configure(String)",1,1,1
"org.apache.log4j.xml.DOMConfigurator.configure(URL)",1,1,1
"org.apache.log4j.xml.DOMConfigurator.configureAndWatch(String)",1,1,1
"org.apache.log4j.xml.DOMConfigurator.configureAndWatch(String,long)",1,2,2
"org.apache.log4j.xml.DOMConfigurator.doConfigure(Element,LoggerRepository)",1,1,1
"org.apache.log4j.xml.Log4jEntityResolver.resolveEntity(String,String)",3,3,3
"org.apache.log4j.xml.LogFileXMLReceiver.activateOptions()",1,10,12
"org.apache.log4j.xml.LogFileXMLReceiver.getDecoder()",1,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.getFileURL()",1,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.getFilterExpression()",1,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.isTailing()",1,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.main(String[])",1,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.passesExpression(LoggingEvent)",3,3,3
"org.apache.log4j.xml.LogFileXMLReceiver.process(Reader)",1,5,5
"org.apache.log4j.xml.LogFileXMLReceiver.processEvents(Collection)",2,5,6
"org.apache.log4j.xml.LogFileXMLReceiver.setDecoder(String)",1,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.setFileURL(String)",1,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.setFilterExpression(String)",1,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.setTailing(boolean)",1,1,1
"org.apache.log4j.xml.LogFileXMLReceiver.shutdown()",1,3,3
"org.apache.log4j.xml.LogFileXMLReceiverBeanInfo.getPropertyDescriptors()",1,1,2
"org.apache.log4j.xml.SAXErrorHandler.error(SAXParseException)",1,1,1
"org.apache.log4j.xml.SAXErrorHandler.fatalError(SAXParseException)",1,1,1
"org.apache.log4j.xml.SAXErrorHandler.warning(SAXParseException)",1,1,1
"org.apache.log4j.xml.UtilLoggingEntityResolver.resolveEntity(String,String)",3,3,3
"org.apache.log4j.xml.UtilLoggingXMLDecoder.UtilLoggingXMLDecoder()",1,2,2
"org.apache.log4j.xml.UtilLoggingXMLDecoder.UtilLoggingXMLDecoder(Component)",1,1,1
"org.apache.log4j.xml.UtilLoggingXMLDecoder.decode(String)",3,2,3
"org.apache.log4j.xml.UtilLoggingXMLDecoder.decode(URL)",1,6,6
"org.apache.log4j.xml.UtilLoggingXMLDecoder.decodeEvents(Document)",3,20,26
"org.apache.log4j.xml.UtilLoggingXMLDecoder.decodeEvents(String)",5,3,7
"org.apache.log4j.xml.UtilLoggingXMLDecoder.getCData(Node)",1,4,4
"org.apache.log4j.xml.UtilLoggingXMLDecoder.parse(String)",2,4,6
"org.apache.log4j.xml.UtilLoggingXMLDecoder.setAdditionalProperties(Map)",1,1,1
"org.apache.log4j.xml.XMLDecoder.XMLDecoder()",1,2,2
"org.apache.log4j.xml.XMLDecoder.XMLDecoder(Component)",1,1,1
"org.apache.log4j.xml.XMLDecoder.decode(String)",3,2,3
"org.apache.log4j.xml.XMLDecoder.decode(URL)",1,7,7
"org.apache.log4j.xml.XMLDecoder.decodeEvents(Document)",3,17,24
"org.apache.log4j.xml.XMLDecoder.decodeEvents(String)",5,3,7
"org.apache.log4j.xml.XMLDecoder.getCData(Node)",1,4,4
"org.apache.log4j.xml.XMLDecoder.parse(String)",2,2,4
"org.apache.log4j.xml.XMLDecoder.setAdditionalProperties(Map)",1,1,1
"org.apache.log4j.xml.XMLLayout.XMLLayout()",1,1,1
"org.apache.log4j.xml.XMLLayout.activateOptions()",1,1,1
"org.apache.log4j.xml.XMLLayout.format(LoggingEvent)",1,9,9
"org.apache.log4j.xml.XMLLayout.getLocationInfo()",1,1,1
"org.apache.log4j.xml.XMLLayout.setLocationInfo(boolean)",1,1,1
"org.apache.log4j.xml.examples.ReportParserError.error(SAXParseException)",1,1,1
"org.apache.log4j.xml.examples.ReportParserError.fatalError(SAXParseException)",1,1,1
"org.apache.log4j.xml.examples.ReportParserError.report(String,SAXParseException)",1,1,1
"org.apache.log4j.xml.examples.ReportParserError.warning(SAXParseException)",1,1,1
"org.apache.log4j.xml.examples.XMLSample.Usage(String)",1,1,1
"org.apache.log4j.xml.examples.XMLSample.init(String)",1,1,1
"org.apache.log4j.xml.examples.XMLSample.main(String[])",1,2,2
"org.apache.log4j.xml.examples.XMLSample.sample()",1,1,1
"org.apache.log4j.xml.test.DOMTest.Usage(String)",1,1,1
"org.apache.log4j.xml.test.DOMTest.init(String)",1,1,1
"org.apache.log4j.xml.test.DOMTest.main(String[])",1,2,2
"org.apache.log4j.xml.test.DOMTest.test()",1,1,1

