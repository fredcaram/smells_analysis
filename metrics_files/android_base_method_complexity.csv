Method,ev(G),iv(G),v(G)
"android.accessibilityservice.AccessibilityService.IEventListenerWrapper.IEventListenerWrapper(AccessibilityService)",1,1,1
"android.accessibilityservice.AccessibilityService.IEventListenerWrapper.executeMessage(Message)",2,3,6
"android.accessibilityservice.AccessibilityService.IEventListenerWrapper.onAccessibilityEvent(AccessibilityEvent)",1,1,1
"android.accessibilityservice.AccessibilityService.IEventListenerWrapper.onInterrupt()",1,1,1
"android.accessibilityservice.AccessibilityService.IEventListenerWrapper.setConnection(IAccessibilityServiceConnection)",1,1,1
"android.accessibilityservice.AccessibilityService.onBind(Intent)",1,1,1
"android.accessibilityservice.AccessibilityService.onServiceConnected()",1,1,1
"android.accessibilityservice.AccessibilityService.sendServiceInfo()",1,3,4
"android.accessibilityservice.AccessibilityService.setServiceInfo(AccessibilityServiceInfo)",1,1,1
"android.accessibilityservice.AccessibilityServiceInfo.describeContents()",1,1,1
"android.accessibilityservice.AccessibilityServiceInfo.writeToParcel(Parcel,int)",1,1,1
"android.accounts.AbstractAccountAuthenticator.AbstractAccountAuthenticator(Context)",1,1,1
"android.accounts.AbstractAccountAuthenticator.Transport.addAccount(IAccountAuthenticatorResponse,String,String,String[],Bundle)",1,9,9
"android.accounts.AbstractAccountAuthenticator.Transport.confirmCredentials(IAccountAuthenticatorResponse,Account,Bundle)",1,8,8
"android.accounts.AbstractAccountAuthenticator.Transport.editProperties(IAccountAuthenticatorResponse,String)",1,3,3
"android.accounts.AbstractAccountAuthenticator.Transport.getAccountRemovalAllowed(IAccountAuthenticatorResponse,Account)",1,4,4
"android.accounts.AbstractAccountAuthenticator.Transport.getAuthToken(IAccountAuthenticatorResponse,Account,String,Bundle)",1,8,8
"android.accounts.AbstractAccountAuthenticator.Transport.getAuthTokenLabel(IAccountAuthenticatorResponse,String)",1,8,8
"android.accounts.AbstractAccountAuthenticator.Transport.hasFeatures(IAccountAuthenticatorResponse,Account,String[])",1,4,4
"android.accounts.AbstractAccountAuthenticator.Transport.updateCredentials(IAccountAuthenticatorResponse,Account,String,Bundle)",1,8,8
"android.accounts.AbstractAccountAuthenticator.checkBinderPermission()",2,1,2
"android.accounts.AbstractAccountAuthenticator.getAccountRemovalAllowed(AccountAuthenticatorResponse,Account)",1,1,1
"android.accounts.AbstractAccountAuthenticator.getIBinder()",1,1,1
"android.accounts.Account.Account(Parcel)",1,1,1
"android.accounts.Account.Account(String,String)",3,1,3
"android.accounts.Account.describeContents()",1,1,1
"android.accounts.Account.equals(Object)",3,2,4
"android.accounts.Account.hashCode()",1,1,1
"android.accounts.Account.toString()",1,1,1
"android.accounts.Account.writeToParcel(Parcel,int)",1,1,1
"android.accounts.AccountAuthenticatorActivity.finish()",1,3,3
"android.accounts.AccountAuthenticatorActivity.onCreate(Bundle)",1,2,2
"android.accounts.AccountAuthenticatorActivity.setAccountAuthenticatorResult(Bundle)",1,1,1
"android.accounts.AccountAuthenticatorCache.AccountAuthenticatorCache(Context)",1,1,1
"android.accounts.AccountAuthenticatorCache.MySerializer.createFromXml(XmlPullParser)",1,1,1
"android.accounts.AccountAuthenticatorCache.MySerializer.writeAsXml(AuthenticatorDescription,XmlSerializer)",1,1,1
"android.accounts.AccountAuthenticatorCache.parseServiceAttributes(Resources,String,AttributeSet)",2,1,2
"android.accounts.AccountAuthenticatorResponse.AccountAuthenticatorResponse(IAccountAuthenticatorResponse)",1,1,1
"android.accounts.AccountAuthenticatorResponse.AccountAuthenticatorResponse(Parcel)",1,1,1
"android.accounts.AccountAuthenticatorResponse.describeContents()",1,1,1
"android.accounts.AccountAuthenticatorResponse.onError(int,String)",1,2,3
"android.accounts.AccountAuthenticatorResponse.onRequestContinued()",1,2,3
"android.accounts.AccountAuthenticatorResponse.onResult(Bundle)",1,2,3
"android.accounts.AccountAuthenticatorResponse.writeToParcel(Parcel,int)",1,1,1
"android.accounts.AccountManager.AccountManager(Context,IAccountManager)",1,1,1
"android.accounts.AccountManager.AccountManager(Context,IAccountManager,Handler)",1,1,1
"android.accounts.AccountManager.AmsTask.AmsTask(Activity,Handler,AccountManagerCallback<Bundle>)",1,1,1
"android.accounts.AccountManager.AmsTask.Response.onError(int,String)",2,2,2
"android.accounts.AccountManager.AmsTask.Response.onResult(Bundle)",1,3,5
"android.accounts.AccountManager.AmsTask.done()",1,2,2
"android.accounts.AccountManager.AmsTask.getResult()",1,1,1
"android.accounts.AccountManager.AmsTask.getResult(long,TimeUnit)",1,1,1
"android.accounts.AccountManager.AmsTask.internalGetResult(Long,TimeUnit)",7,4,12
"android.accounts.AccountManager.AmsTask.set(Bundle)",1,2,2
"android.accounts.AccountManager.AmsTask.start()",1,2,2
"android.accounts.AccountManager.BaseFutureTask.BaseFutureTask(Handler)",1,1,1
"android.accounts.AccountManager.BaseFutureTask.Response.onError(int,String)",2,2,2
"android.accounts.AccountManager.BaseFutureTask.Response.onResult(Bundle)",2,1,4
"android.accounts.AccountManager.BaseFutureTask.postRunnableToHandler(Runnable)",1,1,2
"android.accounts.AccountManager.BaseFutureTask.startTask()",1,2,2
"android.accounts.AccountManager.Future2Task.Future2Task(Handler,AccountManagerCallback<T>)",1,1,1
"android.accounts.AccountManager.Future2Task.done()",1,2,2
"android.accounts.AccountManager.Future2Task.getResult()",1,1,1
"android.accounts.AccountManager.Future2Task.getResult(long,TimeUnit)",1,1,1
"android.accounts.AccountManager.Future2Task.internalGetResult(Long,TimeUnit)",7,4,12
"android.accounts.AccountManager.Future2Task.start()",1,1,1
"android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.GetAuthTokenByTypeAndFeaturesTask(String,String,String[],Activity,Bundle,Bundle,AccountManagerCallback<Bundle>,Handler)",2,1,2
"android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.doWork()",1,9,11
"android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask.run(AccountManagerFuture<Bundle>)",3,7,7
"android.accounts.AccountManager.addAccount(String,String,String[],Bundle,Activity,AccountManagerCallback<Bundle>,Handler)",2,1,2
"android.accounts.AccountManager.addAccountExplicitly(Account,String,Bundle)",2,1,3
"android.accounts.AccountManager.addOnAccountsUpdatedListener(OnAccountsUpdateListener,Handler,boolean)",3,3,5
"android.accounts.AccountManager.blockingGetAuthToken(Account,String,boolean)",4,2,4
"android.accounts.AccountManager.clearPassword(Account)",2,1,3
"android.accounts.AccountManager.confirmCredentials(Account,Bundle,Activity,AccountManagerCallback<Bundle>,Handler)",2,1,2
"android.accounts.AccountManager.convertErrorToException(int,String)",5,1,5
"android.accounts.AccountManager.editProperties(String,Activity,AccountManagerCallback<Bundle>,Handler)",2,1,2
"android.accounts.AccountManager.ensureNotOnMainThread()",3,3,4
"android.accounts.AccountManager.get(Context)",2,1,2
"android.accounts.AccountManager.getAccounts()",1,1,2
"android.accounts.AccountManager.getAccountsByType(String)",1,1,2
"android.accounts.AccountManager.getAccountsByTypeAndFeatures(String,String[],AccountManagerCallback<Account[]>,Handler)",3,1,4
"android.accounts.AccountManager.getAuthToken(Account,String,Bundle,Activity,AccountManagerCallback<Bundle>,Handler)",3,1,3
"android.accounts.AccountManager.getAuthToken(Account,String,boolean,AccountManagerCallback<Bundle>,Handler)",3,1,3
"android.accounts.AccountManager.getAuthTokenByFeatures(String,String,String[],Activity,Bundle,Bundle,AccountManagerCallback<Bundle>,Handler)",3,1,3
"android.accounts.AccountManager.getAuthenticatorTypes()",1,1,2
"android.accounts.AccountManager.getPassword(Account)",2,1,3
"android.accounts.AccountManager.getUserData(Account,String)",3,1,4
"android.accounts.AccountManager.hasFeatures(Account,String[],AccountManagerCallback<Boolean>,Handler)",4,1,4
"android.accounts.AccountManager.invalidateAuthToken(String,String)",2,2,4
"android.accounts.AccountManager.peekAuthToken(Account,String)",3,1,4
"android.accounts.AccountManager.postToHandler(Handler,AccountManagerCallback<Bundle>,AccountManagerFuture<Bundle>)",1,1,2
"android.accounts.AccountManager.postToHandler(Handler,OnAccountsUpdateListener,Account[])",1,2,3
"android.accounts.AccountManager.removeAccount(Account,AccountManagerCallback<Boolean>,Handler)",3,1,3
"android.accounts.AccountManager.removeOnAccountsUpdatedListener(OnAccountsUpdateListener)",3,3,4
"android.accounts.AccountManager.sanitizeResult(Bundle)",3,4,4
"android.accounts.AccountManager.setAuthToken(Account,String,String)",3,1,4
"android.accounts.AccountManager.setPassword(Account,String)",2,1,3
"android.accounts.AccountManager.setUserData(Account,String,String)",3,1,4
"android.accounts.AccountManager.updateCredentials(Account,String,Bundle,Activity,AccountManagerCallback<Bundle>,Handler)",2,1,2
"android.accounts.AccountManagerResponse.AccountManagerResponse(IAccountManagerResponse)",1,1,1
"android.accounts.AccountManagerResponse.AccountManagerResponse(Parcel)",1,1,1
"android.accounts.AccountManagerResponse.describeContents()",1,1,1
"android.accounts.AccountManagerResponse.onError(int,String)",1,1,2
"android.accounts.AccountManagerResponse.onResult(Bundle)",1,1,2
"android.accounts.AccountManagerResponse.writeToParcel(Parcel,int)",1,1,1
"android.accounts.AccountManagerService.AccountManagerService(Context)",1,1,1
"android.accounts.AccountManagerService.AccountManagerService(Context,PackageManager,IAccountAuthenticatorCache)",1,1,1
"android.accounts.AccountManagerService.DatabaseHelper.DatabaseHelper(Context)",1,1,1
"android.accounts.AccountManagerService.DatabaseHelper.createAccountsDeletionTrigger(SQLiteDatabase)",1,1,1
"android.accounts.AccountManagerService.DatabaseHelper.createGrantsTable(SQLiteDatabase)",1,1,1
"android.accounts.AccountManagerService.DatabaseHelper.onCreate(SQLiteDatabase)",1,1,1
"android.accounts.AccountManagerService.DatabaseHelper.onOpen(SQLiteDatabase)",1,2,2
"android.accounts.AccountManagerService.DatabaseHelper.onUpgrade(SQLiteDatabase,int,int)",1,3,4
"android.accounts.AccountManagerService.GetAccountsByTypeAndFeatureSession.GetAccountsByTypeAndFeatureSession(IAccountManagerResponse,String,String[])",1,1,1
"android.accounts.AccountManagerService.GetAccountsByTypeAndFeatureSession.checkAccount()",3,5,5
"android.accounts.AccountManagerService.GetAccountsByTypeAndFeatureSession.onResult(Bundle)",2,3,3
"android.accounts.AccountManagerService.GetAccountsByTypeAndFeatureSession.run()",1,1,1
"android.accounts.AccountManagerService.GetAccountsByTypeAndFeatureSession.sendResult()",1,6,6
"android.accounts.AccountManagerService.GetAccountsByTypeAndFeatureSession.toDebugString(long)",1,2,2
"android.accounts.AccountManagerService.MessageHandler.MessageHandler(Looper)",1,1,1
"android.accounts.AccountManagerService.MessageHandler.handleMessage(Message)",2,2,3
"android.accounts.AccountManagerService.RemoveAccountSession.RemoveAccountSession(IAccountManagerResponse,Account)",1,1,1
"android.accounts.AccountManagerService.RemoveAccountSession.onResult(Bundle)",1,7,8
"android.accounts.AccountManagerService.RemoveAccountSession.run()",1,1,1
"android.accounts.AccountManagerService.RemoveAccountSession.toDebugString(long)",1,1,1
"android.accounts.AccountManagerService.Session.Session(IAccountManagerResponse,String,boolean,boolean)",3,2,4
"android.accounts.AccountManagerService.Session.bind()",1,3,3
"android.accounts.AccountManagerService.Session.bindToAuthenticator(String)",3,6,6
"android.accounts.AccountManagerService.Session.binderDied()",1,1,1
"android.accounts.AccountManagerService.Session.cancelTimeout()",1,1,1
"android.accounts.AccountManagerService.Session.close()",2,2,3
"android.accounts.AccountManagerService.Session.getResponseAndClose()",2,1,2
"android.accounts.AccountManagerService.Session.onError(int,String)",1,6,6
"android.accounts.AccountManagerService.Session.onRequestContinued()",1,1,1
"android.accounts.AccountManagerService.Session.onResult(Bundle)",1,15,15
"android.accounts.AccountManagerService.Session.onServiceConnected(ComponentName,IBinder)",1,2,2
"android.accounts.AccountManagerService.Session.onServiceDisconnected(ComponentName)",1,2,2
"android.accounts.AccountManagerService.Session.onTimedOut()",1,2,2
"android.accounts.AccountManagerService.Session.scheduleTimeout()",1,1,1
"android.accounts.AccountManagerService.Session.toDebugString()",1,1,1
"android.accounts.AccountManagerService.Session.toDebugString(long)",1,1,1
"android.accounts.AccountManagerService.Session.unbind()",1,2,2
"android.accounts.AccountManagerService.SimWatcher.SimWatcher(Context)",1,1,1
"android.accounts.AccountManagerService.SimWatcher.onReceive(Context,Intent)",8,11,13
"android.accounts.AccountManagerService.TestFeaturesSession.TestFeaturesSession(IAccountManagerResponse,Account,String[])",1,1,1
"android.accounts.AccountManagerService.TestFeaturesSession.onResult(Bundle)",3,6,6
"android.accounts.AccountManagerService.TestFeaturesSession.run()",1,2,2
"android.accounts.AccountManagerService.TestFeaturesSession.toDebugString(long)",1,2,2
"android.accounts.AccountManagerService.addAccount(Account,String,Bundle)",2,2,3
"android.accounts.AccountManagerService.addAcount(IAccountManagerResponse,String,String,String[],boolean,Bundle)",3,3,5
"android.accounts.AccountManagerService.cancelNotification(int)",1,1,1
"android.accounts.AccountManagerService.checkAuthenticateAccountsPermission(Account)",1,1,1
"android.accounts.AccountManagerService.checkBinderPermission(String...)",3,4,4
"android.accounts.AccountManagerService.checkCallingUidAgainstAuthenticator(Account)",2,4,4
"android.accounts.AccountManagerService.checkManageAccountsOrUseCredentialsPermissions()",1,1,1
"android.accounts.AccountManagerService.checkManageAccountsPermission()",1,1,1
"android.accounts.AccountManagerService.checkReadAccountsPermission()",1,1,1
"android.accounts.AccountManagerService.clearPassword(Account)",2,2,3
"android.accounts.AccountManagerService.confirmCredentials(IAccountManagerResponse,Account,Bundle,boolean)",3,2,4
"android.accounts.AccountManagerService.createNoCredentialsPermissionNotification(Account,Intent)",1,1,1
"android.accounts.AccountManagerService.doNotification(Account,CharSequence,Intent)",1,4,4
"android.accounts.AccountManagerService.dump(FileDescriptor,PrintWriter,String[])",1,7,7
"android.accounts.AccountManagerService.editProperties(IAccountManagerResponse,String,boolean)",3,2,4
"android.accounts.AccountManagerService.getAccountId(SQLiteDatabase,Account)",2,2,2
"android.accounts.AccountManagerService.getAccountLabel(String)",2,1,3
"android.accounts.AccountManagerService.getAccounts(String)",1,2,2
"android.accounts.AccountManagerService.getAccountsByFeatures(IAccountManagerResponse,String,String[])",4,3,6
"android.accounts.AccountManagerService.getAccountsByTypeFromCache(String)",4,4,6
"android.accounts.AccountManagerService.getAuthToken(IAccountManagerResponse,Account,String,boolean,boolean,Bundle)",10,15,21
"android.accounts.AccountManagerService.getAuthTokenLabel(IAccountManagerResponse,Account,String)",4,2,4
"android.accounts.AccountManagerService.getAuthenticatorTypes()",1,2,3
"android.accounts.AccountManagerService.getCredentialPermissionNotificationId(Account,String,int)",1,2,2
"android.accounts.AccountManagerService.getDatabaseName()",2,2,2
"android.accounts.AccountManagerService.getExtrasId(SQLiteDatabase,long,String)",2,2,2
"android.accounts.AccountManagerService.getMetaValue(String)",2,2,2
"android.accounts.AccountManagerService.getPassword(Account)",2,2,3
"android.accounts.AccountManagerService.getSigninRequiredNotificationId(Account)",1,2,2
"android.accounts.AccountManagerService.getSingleton()",1,1,1
"android.accounts.AccountManagerService.getUserData(Account,String)",3,2,4
"android.accounts.AccountManagerService.grantAppPermission(Account,String,int)",2,3,4
"android.accounts.AccountManagerService.hasAuthenticatorUid(String,int)",3,4,4
"android.accounts.AccountManagerService.hasExplicitlyGrantedPermission(Account,String)",3,2,4
"android.accounts.AccountManagerService.hasFeatures(IAccountManagerResponse,Account,String[])",4,2,5
"android.accounts.AccountManagerService.inSystemImage(int)",3,2,5
"android.accounts.AccountManagerService.insertAccountIntoCache(Account)",1,2,3
"android.accounts.AccountManagerService.insertAccountIntoDatabase(Account,String,Bundle)",7,6,7
"android.accounts.AccountManagerService.insertExtra(SQLiteDatabase,long,String,String)",1,1,1
"android.accounts.AccountManagerService.installNotification(int,Notification)",1,1,1
"android.accounts.AccountManagerService.invalidateAuthToken(SQLiteDatabase,String,String)",2,2,4
"android.accounts.AccountManagerService.invalidateAuthToken(String,String)",3,2,4
"android.accounts.AccountManagerService.newGrantCredentialsPermissionIntent(Account,int,AccountAuthenticatorResponse,String,String)",1,1,1
"android.accounts.AccountManagerService.onBind(Intent)",1,1,1
"android.accounts.AccountManagerService.onResult(IAccountManagerResponse,Bundle)",1,5,5
"android.accounts.AccountManagerService.onServiceChanged(AuthenticatorDescription,boolean)",1,1,1
"android.accounts.AccountManagerService.peekAuthToken(Account,String)",3,2,4
"android.accounts.AccountManagerService.permissionIsGranted(Account,String,int)",1,4,6
"android.accounts.AccountManagerService.readAuthTokenFromCache(Account,String)",1,2,2
"android.accounts.AccountManagerService.readAuthTokensForAccountFromDatabase(Account)",1,2,2
"android.accounts.AccountManagerService.readPasswordFromDatabase(Account)",3,2,3
"android.accounts.AccountManagerService.readUserDataForAccountFromDatabase(Account)",1,2,2
"android.accounts.AccountManagerService.readUserDataFromCache(Account,String)",1,2,2
"android.accounts.AccountManagerService.removeAccount(Account)",1,1,1
"android.accounts.AccountManagerService.removeAccount(IAccountManagerResponse,Account)",3,4,6
"android.accounts.AccountManagerService.removeAccountFromCache(Account)",1,5,5
"android.accounts.AccountManagerService.revokeAppPermission(Account,String,int)",2,3,4
"android.accounts.AccountManagerService.saveAuthTokenToDatabase(Account,String,String)",4,2,5
"android.accounts.AccountManagerService.scanArgs(String[],String)",4,3,4
"android.accounts.AccountManagerService.sendAccountsChangedBroadcast()",1,1,1
"android.accounts.AccountManagerService.setAuthToken(Account,String,String)",3,2,4
"android.accounts.AccountManagerService.setMetaValue(String,String)",1,1,1
"android.accounts.AccountManagerService.setPassword(Account,String)",2,2,3
"android.accounts.AccountManagerService.setPasswordInDB(Account,String)",2,2,3
"android.accounts.AccountManagerService.setUserData(Account,String,String)",3,2,4
"android.accounts.AccountManagerService.stringArrayToString(String[])",1,2,2
"android.accounts.AccountManagerService.updateCredentials(IAccountManagerResponse,Account,String,boolean,Bundle)",4,3,6
"android.accounts.AccountManagerService.validateAccountsAndPopulateCache()",1,6,7
"android.accounts.AccountManagerService.writeAuthTokenIntoCache(Account,String,String)",1,3,3
"android.accounts.AccountManagerService.writeUserDataIntoCache(Account,String,String)",1,3,3
"android.accounts.AccountManagerService.writeUserdataIntoDatabase(Account,String,String)",6,2,7
"android.accounts.AccountsException.AccountsException()",1,1,1
"android.accounts.AccountsException.AccountsException(String)",1,1,1
"android.accounts.AccountsException.AccountsException(String,Throwable)",1,1,1
"android.accounts.AccountsException.AccountsException(Throwable)",1,1,1
"android.accounts.AuthenticatorDescription.AuthenticatorDescription(Parcel)",1,1,1
"android.accounts.AuthenticatorDescription.AuthenticatorDescription(String)",1,1,1
"android.accounts.AuthenticatorDescription.AuthenticatorDescription(String,String,int,int,int,int)",1,1,1
"android.accounts.AuthenticatorDescription.AuthenticatorDescription(String,String,int,int,int,int,boolean)",3,1,3
"android.accounts.AuthenticatorDescription.describeContents()",1,1,1
"android.accounts.AuthenticatorDescription.equals(Object)",3,1,3
"android.accounts.AuthenticatorDescription.hashCode()",1,1,1
"android.accounts.AuthenticatorDescription.newKey(String)",2,1,2
"android.accounts.AuthenticatorDescription.toString()",1,1,1
"android.accounts.AuthenticatorDescription.writeToParcel(Parcel,int)",1,1,2
"android.accounts.AuthenticatorException.AuthenticatorException()",1,1,1
"android.accounts.AuthenticatorException.AuthenticatorException(String)",1,1,1
"android.accounts.AuthenticatorException.AuthenticatorException(String,Throwable)",1,1,1
"android.accounts.AuthenticatorException.AuthenticatorException(Throwable)",1,1,1
"android.accounts.ChooseAccountActivity.finish()",1,3,3
"android.accounts.ChooseAccountActivity.onCreate(Bundle)",2,2,3
"android.accounts.ChooseAccountActivity.onListItemClick(ListView,View,int,long)",1,1,1
"android.accounts.GrantCredentialsPermissionActivity.finish()",1,3,3
"android.accounts.GrantCredentialsPermissionActivity.newPackageView(String)",1,1,1
"android.accounts.GrantCredentialsPermissionActivity.onClick(View)",2,2,3
"android.accounts.GrantCredentialsPermissionActivity.onCreate(Bundle)",2,5,8
"android.accounts.GrantCredentialsPermissionActivity.setAccountAuthenticatorResult(Bundle)",1,1,1
"android.accounts.NetworkErrorException.NetworkErrorException()",1,1,1
"android.accounts.NetworkErrorException.NetworkErrorException(String)",1,1,1
"android.accounts.NetworkErrorException.NetworkErrorException(String,Throwable)",1,1,1
"android.accounts.NetworkErrorException.NetworkErrorException(Throwable)",1,1,1
"android.accounts.OperationCanceledException.OperationCanceledException()",1,1,1
"android.accounts.OperationCanceledException.OperationCanceledException(String)",1,1,1
"android.accounts.OperationCanceledException.OperationCanceledException(String,Throwable)",1,1,1
"android.accounts.OperationCanceledException.OperationCanceledException(Throwable)",1,1,1
"android.animation.Animator.addListener(AnimatorListener)",1,1,2
"android.animation.Animator.cancel()",1,1,1
"android.animation.Animator.clone()",1,3,4
"android.animation.Animator.end()",1,1,1
"android.animation.Animator.getListeners()",1,1,1
"android.animation.Animator.removeAllListeners()",1,2,2
"android.animation.Animator.removeListener(AnimatorListener)",2,1,3
"android.animation.Animator.setTarget(Object)",1,1,1
"android.animation.Animator.setupEndValues()",1,1,1
"android.animation.Animator.setupStartValues()",1,1,1
"android.animation.Animator.start()",1,1,1
"android.animation.AnimatorInflater.createAnimatorFromXml(Context,XmlPullParser)",1,1,1
"android.animation.AnimatorInflater.createAnimatorFromXml(Context,XmlPullParser,AttributeSet,AnimatorSet,int)",6,10,14
"android.animation.AnimatorInflater.loadAnimator(Context,AttributeSet,ValueAnimator)",1,21,32
"android.animation.AnimatorInflater.loadAnimator(Context,int)",1,4,4
"android.animation.AnimatorInflater.loadObjectAnimator(Context,AttributeSet)",1,1,1
"android.animation.AnimatorListenerAdapter.onAnimationCancel(Animator)",1,1,1
"android.animation.AnimatorListenerAdapter.onAnimationEnd(Animator)",1,1,1
"android.animation.AnimatorListenerAdapter.onAnimationRepeat(Animator)",1,1,1
"android.animation.AnimatorListenerAdapter.onAnimationStart(Animator)",1,1,1
"android.animation.AnimatorSet.AnimatorSetListener.AnimatorSetListener(AnimatorSet)",1,1,1
"android.animation.AnimatorSet.AnimatorSetListener.onAnimationCancel(Animator)",1,4,4
"android.animation.AnimatorSet.AnimatorSetListener.onAnimationEnd(Animator)",3,5,6
"android.animation.AnimatorSet.AnimatorSetListener.onAnimationRepeat(Animator)",1,1,1
"android.animation.AnimatorSet.AnimatorSetListener.onAnimationStart(Animator)",1,1,1
"android.animation.AnimatorSet.Builder.Builder(Animator)",1,2,2
"android.animation.AnimatorSet.Builder.after(Animator)",1,2,2
"android.animation.AnimatorSet.Builder.after(long)",1,1,1
"android.animation.AnimatorSet.Builder.before(Animator)",1,2,2
"android.animation.AnimatorSet.Builder.with(Animator)",1,2,2
"android.animation.AnimatorSet.Dependency.Dependency(Node,int)",1,1,1
"android.animation.AnimatorSet.DependencyListener.DependencyListener(AnimatorSet,Node,int)",1,1,1
"android.animation.AnimatorSet.DependencyListener.onAnimationCancel(Animator)",1,1,1
"android.animation.AnimatorSet.DependencyListener.onAnimationEnd(Animator)",1,2,2
"android.animation.AnimatorSet.DependencyListener.onAnimationRepeat(Animator)",1,1,1
"android.animation.AnimatorSet.DependencyListener.onAnimationStart(Animator)",1,2,2
"android.animation.AnimatorSet.DependencyListener.startIfReady(Animator)",4,4,6
"android.animation.AnimatorSet.Node.Node(Animator)",1,1,1
"android.animation.AnimatorSet.Node.addDependency(Dependency)",1,2,4
"android.animation.AnimatorSet.Node.clone()",1,1,2
"android.animation.AnimatorSet.cancel()",2,9,9
"android.animation.AnimatorSet.clone()",1,10,11
"android.animation.AnimatorSet.end()",1,6,7
"android.animation.AnimatorSet.getChildAnimations()",1,2,2
"android.animation.AnimatorSet.getDuration()",1,1,1
"android.animation.AnimatorSet.getStartDelay()",1,1,1
"android.animation.AnimatorSet.isRunning()",3,2,3
"android.animation.AnimatorSet.play(Animator)",2,1,2
"android.animation.AnimatorSet.playSequentially(Animator...)",1,4,4
"android.animation.AnimatorSet.playSequentially(List<Animator>)",1,5,5
"android.animation.AnimatorSet.playTogether(Animator...)",1,3,3
"android.animation.AnimatorSet.playTogether(Collection<Animator>)",1,5,5
"android.animation.AnimatorSet.setDuration(long)",2,2,3
"android.animation.AnimatorSet.setInterpolator(TimeInterpolator)",1,2,2
"android.animation.AnimatorSet.setStartDelay(long)",1,1,1
"android.animation.AnimatorSet.setTarget(Object)",1,4,4
"android.animation.AnimatorSet.setupEndValues()",1,2,2
"android.animation.AnimatorSet.setupStartValues()",1,2,2
"android.animation.AnimatorSet.sortNodes()",3,15,17
"android.animation.AnimatorSet.start()",1,17,18
"android.animation.DoubleEvaluator.evaluate(float,Object,Object)",1,1,1
"android.animation.FloatEvaluator.evaluate(float,Object,Object)",1,1,1
"android.animation.FloatKeyframeSet.FloatKeyframeSet(FloatKeyframe...)",1,1,1
"android.animation.FloatKeyframeSet.clone()",1,2,2
"android.animation.FloatKeyframeSet.getFloatValue(float)",7,15,15
"android.animation.FloatKeyframeSet.getValue(float)",1,1,1
"android.animation.IntEvaluator.evaluate(float,Object,Object)",1,1,1
"android.animation.IntKeyframeSet.IntKeyframeSet(IntKeyframe...)",1,1,1
"android.animation.IntKeyframeSet.clone()",1,2,2
"android.animation.IntKeyframeSet.getIntValue(float)",7,15,15
"android.animation.IntKeyframeSet.getValue(float)",1,1,1
"android.animation.Keyframe.FloatKeyframe.FloatKeyframe(float)",1,1,1
"android.animation.Keyframe.FloatKeyframe.FloatKeyframe(float,float)",1,1,1
"android.animation.Keyframe.FloatKeyframe.clone()",1,1,1
"android.animation.Keyframe.FloatKeyframe.getFloatValue()",1,1,1
"android.animation.Keyframe.FloatKeyframe.getValue()",1,1,1
"android.animation.Keyframe.FloatKeyframe.setValue(Object)",1,3,3
"android.animation.Keyframe.IntKeyframe.IntKeyframe(float)",1,1,1
"android.animation.Keyframe.IntKeyframe.IntKeyframe(float,int)",1,1,1
"android.animation.Keyframe.IntKeyframe.clone()",1,1,1
"android.animation.Keyframe.IntKeyframe.getIntValue()",1,1,1
"android.animation.Keyframe.IntKeyframe.getValue()",1,1,1
"android.animation.Keyframe.IntKeyframe.setValue(Object)",1,3,3
"android.animation.Keyframe.ObjectKeyframe.ObjectKeyframe(float,Object)",1,2,2
"android.animation.Keyframe.ObjectKeyframe.clone()",1,1,1
"android.animation.Keyframe.ObjectKeyframe.getValue()",1,1,1
"android.animation.Keyframe.ObjectKeyframe.setValue(Object)",1,1,1
"android.animation.Keyframe.getFraction()",1,1,1
"android.animation.Keyframe.getInterpolator()",1,1,1
"android.animation.Keyframe.getType()",1,1,1
"android.animation.Keyframe.hasValue()",1,1,1
"android.animation.Keyframe.ofFloat(float)",1,1,1
"android.animation.Keyframe.ofFloat(float,float)",1,1,1
"android.animation.Keyframe.ofInt(float)",1,1,1
"android.animation.Keyframe.ofInt(float,int)",1,1,1
"android.animation.Keyframe.ofObject(float)",1,1,1
"android.animation.Keyframe.ofObject(float,Object)",1,1,1
"android.animation.Keyframe.setFraction(float)",1,1,1
"android.animation.Keyframe.setInterpolator(TimeInterpolator)",1,1,1
"android.animation.KeyframeSet.KeyframeSet(Keyframe...)",1,1,1
"android.animation.KeyframeSet.clone()",1,2,2
"android.animation.KeyframeSet.getValue(float)",6,10,10
"android.animation.KeyframeSet.ofFloat(float...)",1,3,3
"android.animation.KeyframeSet.ofInt(int...)",1,3,3
"android.animation.KeyframeSet.ofKeyframe(Keyframe...)",3,1,12
"android.animation.KeyframeSet.ofObject(Object...)",1,3,3
"android.animation.KeyframeSet.setEvaluator(TypeEvaluator)",1,1,1
"android.animation.LayoutTransition.LayoutTransition()",1,2,2
"android.animation.LayoutTransition.addChild(ViewGroup,View)",1,3,3
"android.animation.LayoutTransition.addTransitionListener(TransitionListener)",1,1,2
"android.animation.LayoutTransition.getAnimator(int)",5,2,5
"android.animation.LayoutTransition.getDuration(int)",5,2,5
"android.animation.LayoutTransition.getInterpolator(int)",5,2,5
"android.animation.LayoutTransition.getStagger(int)",3,2,3
"android.animation.LayoutTransition.getStartDelay(int)",5,2,5
"android.animation.LayoutTransition.getTransitionListeners()",1,1,1
"android.animation.LayoutTransition.hideChild(ViewGroup,View)",1,1,1
"android.animation.LayoutTransition.removeChild(ViewGroup,View)",1,3,3
"android.animation.LayoutTransition.removeTransitionListener(TransitionListener)",2,1,2
"android.animation.LayoutTransition.runAppearingTransition(ViewGroup,View)",2,8,8
"android.animation.LayoutTransition.runChangeTransition(ViewGroup,View,int)",3,7,11
"android.animation.LayoutTransition.runDisappearingTransition(ViewGroup,View)",2,8,8
"android.animation.LayoutTransition.setAnimator(int,Animator)",2,2,5
"android.animation.LayoutTransition.setDuration(int,long)",2,2,5
"android.animation.LayoutTransition.setDuration(long)",1,1,1
"android.animation.LayoutTransition.setInterpolator(int,TimeInterpolator)",2,2,5
"android.animation.LayoutTransition.setStagger(int,long)",2,2,3
"android.animation.LayoutTransition.setStartDelay(int,long)",2,2,5
"android.animation.LayoutTransition.showChild(ViewGroup,View)",1,1,1
"android.animation.ObjectAnimator.ObjectAnimator()",1,1,1
"android.animation.ObjectAnimator.ObjectAnimator(Object,String)",1,1,1
"android.animation.ObjectAnimator.animateValue(float)",1,2,2
"android.animation.ObjectAnimator.clone()",1,1,1
"android.animation.ObjectAnimator.getPropertyFunction(String,Class)",1,2,3
"android.animation.ObjectAnimator.getPropertyName()",1,1,1
"android.animation.ObjectAnimator.getTarget()",1,1,1
"android.animation.ObjectAnimator.initAnimation()",1,3,3
"android.animation.ObjectAnimator.ofFloat(Object,String,float...)",1,1,1
"android.animation.ObjectAnimator.ofInt(Object,String,int...)",1,1,1
"android.animation.ObjectAnimator.ofObject(Object,String,TypeEvaluator,Object...)",1,1,1
"android.animation.ObjectAnimator.ofPropertyValuesHolder(Object,PropertyValuesHolder...)",1,1,1
"android.animation.ObjectAnimator.setDuration(long)",1,1,1
"android.animation.ObjectAnimator.setFloatValues(float...)",1,2,3
"android.animation.ObjectAnimator.setIntValues(int...)",1,2,3
"android.animation.ObjectAnimator.setObjectValues(Object...)",1,2,3
"android.animation.ObjectAnimator.setPropertyName(String)",1,2,2
"android.animation.ObjectAnimator.setTarget(Object)",3,4,5
"android.animation.ObjectAnimator.setupEndValues()",1,2,2
"android.animation.ObjectAnimator.setupStartValues()",1,2,2
"android.animation.ObjectAnimator.start()",1,3,3
"android.animation.PropertyValuesHolder.FloatPropertyValuesHolder.FloatPropertyValuesHolder(String,FloatKeyframeSet)",1,1,1
"android.animation.PropertyValuesHolder.FloatPropertyValuesHolder.FloatPropertyValuesHolder(String,float...)",1,1,1
"android.animation.PropertyValuesHolder.FloatPropertyValuesHolder.calculateValue(float)",1,1,1
"android.animation.PropertyValuesHolder.FloatPropertyValuesHolder.clone()",1,1,1
"android.animation.PropertyValuesHolder.FloatPropertyValuesHolder.getAnimatedValue()",1,1,1
"android.animation.PropertyValuesHolder.FloatPropertyValuesHolder.setAnimatedValue(Object)",2,5,5
"android.animation.PropertyValuesHolder.FloatPropertyValuesHolder.setFloatValues(float...)",1,1,1
"android.animation.PropertyValuesHolder.FloatPropertyValuesHolder.setupSetter(Class)",1,6,8
"android.animation.PropertyValuesHolder.IntPropertyValuesHolder.IntPropertyValuesHolder(String,IntKeyframeSet)",1,1,1
"android.animation.PropertyValuesHolder.IntPropertyValuesHolder.IntPropertyValuesHolder(String,int...)",1,1,1
"android.animation.PropertyValuesHolder.IntPropertyValuesHolder.calculateValue(float)",1,1,1
"android.animation.PropertyValuesHolder.IntPropertyValuesHolder.clone()",1,1,1
"android.animation.PropertyValuesHolder.IntPropertyValuesHolder.getAnimatedValue()",1,1,1
"android.animation.PropertyValuesHolder.IntPropertyValuesHolder.setAnimatedValue(Object)",2,5,5
"android.animation.PropertyValuesHolder.IntPropertyValuesHolder.setIntValues(int...)",1,1,1
"android.animation.PropertyValuesHolder.IntPropertyValuesHolder.setupSetter(Class)",1,6,8
"android.animation.PropertyValuesHolder.PropertyValuesHolder(String)",1,1,1
"android.animation.PropertyValuesHolder.calculateValue(float)",1,1,1
"android.animation.PropertyValuesHolder.clone()",1,1,2
"android.animation.PropertyValuesHolder.getAnimatedValue()",1,1,1
"android.animation.PropertyValuesHolder.getMethodName(String,String)",1,1,1
"android.animation.PropertyValuesHolder.getPropertyFunction(Class,String,Class)",3,6,8
"android.animation.PropertyValuesHolder.getPropertyName()",1,1,1
"android.animation.PropertyValuesHolder.init()",1,2,5
"android.animation.PropertyValuesHolder.nCallFloatMethod(Object,int,float)",1,1,1
"android.animation.PropertyValuesHolder.nCallIntMethod(Object,int,int)",1,1,1
"android.animation.PropertyValuesHolder.nGetFloatMethod(Class,String)",1,1,1
"android.animation.PropertyValuesHolder.nGetIntMethod(Class,String)",1,1,1
"android.animation.PropertyValuesHolder.ofFloat(String,float...)",1,1,1
"android.animation.PropertyValuesHolder.ofInt(String,int...)",1,1,1
"android.animation.PropertyValuesHolder.ofKeyframe(String,Keyframe...)",3,3,3
"android.animation.PropertyValuesHolder.ofObject(String,TypeEvaluator,Object...)",1,1,1
"android.animation.PropertyValuesHolder.setAnimatedValue(Object)",1,4,4
"android.animation.PropertyValuesHolder.setEvaluator(TypeEvaluator)",1,1,1
"android.animation.PropertyValuesHolder.setFloatValues(float...)",1,1,1
"android.animation.PropertyValuesHolder.setIntValues(int...)",1,1,1
"android.animation.PropertyValuesHolder.setKeyframes(Keyframe...)",1,1,2
"android.animation.PropertyValuesHolder.setObjectValues(Object...)",1,1,1
"android.animation.PropertyValuesHolder.setPropertyName(String)",1,1,1
"android.animation.PropertyValuesHolder.setupEndValue(Object)",1,1,1
"android.animation.PropertyValuesHolder.setupGetter(Class)",1,1,1
"android.animation.PropertyValuesHolder.setupSetter(Class)",1,1,1
"android.animation.PropertyValuesHolder.setupSetterAndGetter(Object)",1,7,7
"android.animation.PropertyValuesHolder.setupSetterOrGetter(Class,HashMap<Class, HashMap<String, Method>>,String,Class)",1,4,4
"android.animation.PropertyValuesHolder.setupStartValue(Object)",1,1,1
"android.animation.PropertyValuesHolder.setupValue(Object,Keyframe)",1,4,4
"android.animation.RGBEvaluator.evaluate(float,Object,Object)",1,1,1
"android.animation.TimeAnimator.animateValue(float)",1,1,1
"android.animation.TimeAnimator.animationFrame(long)",1,2,5
"android.animation.TimeAnimator.initAnimation()",1,1,1
"android.animation.TimeAnimator.setTimeListener(TimeListener)",1,1,1
"android.animation.ValueAnimator.AnimationHandler.handleMessage(Message)",2,18,20
"android.animation.ValueAnimator.ValueAnimator()",1,1,1
"android.animation.ValueAnimator.addUpdateListener(AnimatorUpdateListener)",1,1,2
"android.animation.ValueAnimator.animateValue(float)",1,4,4
"android.animation.ValueAnimator.animationFrame(long)",2,6,13
"android.animation.ValueAnimator.cancel()",1,6,6
"android.animation.ValueAnimator.clone()",1,6,6
"android.animation.ValueAnimator.delayedAnimationFrame(long)",3,1,3
"android.animation.ValueAnimator.end()",1,4,5
"android.animation.ValueAnimator.endAnimation()",1,3,3
"android.animation.ValueAnimator.getAnimatedValue()",2,2,3
"android.animation.ValueAnimator.getAnimatedValue(String)",2,2,2
"android.animation.ValueAnimator.getCurrentAnimationsCount()",1,1,1
"android.animation.ValueAnimator.getCurrentPlayTime()",2,1,3
"android.animation.ValueAnimator.getDuration()",1,1,1
"android.animation.ValueAnimator.getFrameDelay()",1,1,1
"android.animation.ValueAnimator.getInterpolator()",1,1,1
"android.animation.ValueAnimator.getRepeatCount()",1,1,1
"android.animation.ValueAnimator.getRepeatMode()",1,1,1
"android.animation.ValueAnimator.getStartDelay()",1,1,1
"android.animation.ValueAnimator.getValues()",1,1,1
"android.animation.ValueAnimator.initAnimation()",1,3,3
"android.animation.ValueAnimator.isRunning()",1,1,1
"android.animation.ValueAnimator.ofFloat(float...)",1,1,1
"android.animation.ValueAnimator.ofInt(int...)",1,1,1
"android.animation.ValueAnimator.ofObject(TypeEvaluator,Object...)",1,1,1
"android.animation.ValueAnimator.ofPropertyValuesHolder(PropertyValuesHolder...)",1,1,1
"android.animation.ValueAnimator.removeAllUpdateListeners()",2,1,2
"android.animation.ValueAnimator.removeUpdateListener(AnimatorUpdateListener)",2,1,3
"android.animation.ValueAnimator.reverse()",1,2,2
"android.animation.ValueAnimator.setCurrentPlayTime(long)",1,1,2
"android.animation.ValueAnimator.setDuration(long)",2,1,2
"android.animation.ValueAnimator.setEvaluator(TypeEvaluator)",1,2,4
"android.animation.ValueAnimator.setFloatValues(float...)",2,2,5
"android.animation.ValueAnimator.setFrameDelay(long)",1,1,1
"android.animation.ValueAnimator.setIntValues(int...)",2,2,5
"android.animation.ValueAnimator.setInterpolator(TimeInterpolator)",1,1,2
"android.animation.ValueAnimator.setObjectValues(Object...)",2,2,5
"android.animation.ValueAnimator.setRepeatCount(int)",1,1,1
"android.animation.ValueAnimator.setRepeatMode(int)",1,1,1
"android.animation.ValueAnimator.setStartDelay(long)",1,1,1
"android.animation.ValueAnimator.setValues(PropertyValuesHolder...)",1,2,2
"android.animation.ValueAnimator.start()",1,1,1
"android.animation.ValueAnimator.start(boolean)",2,5,6
"android.animation.ValueAnimator.startAnimation()",1,3,4
"android.app.ActionBar.LayoutParams.LayoutParams(Context,AttributeSet)",1,1,1
"android.app.ActionBar.LayoutParams.LayoutParams(LayoutParams)",1,1,1
"android.app.ActionBar.LayoutParams.LayoutParams(int)",1,1,1
"android.app.ActionBar.LayoutParams.LayoutParams(int,int)",1,1,1
"android.app.ActionBar.LayoutParams.LayoutParams(int,int,int)",1,1,1
"android.app.Activity.ManagedCursor.ManagedCursor(Cursor)",1,1,1
"android.app.Activity.addContentView(View,LayoutParams)",1,1,1
"android.app.Activity.attach(Context,ActivityThread,Instrumentation,IBinder,Application,Intent,ActivityInfo,CharSequence,Activity,String,NonConfigurationInstances,Configuration)",1,1,1
"android.app.Activity.attach(Context,ActivityThread,Instrumentation,IBinder,int,Application,Intent,ActivityInfo,CharSequence,Activity,String,NonConfigurationInstances,Configuration)",1,3,3
"android.app.Activity.closeContextMenu()",1,1,1
"android.app.Activity.closeOptionsMenu()",1,1,1
"android.app.Activity.createDialog(Integer,Bundle,Bundle)",2,1,2
"android.app.Activity.createPendingResult(int,Intent,int)",1,1,4
"android.app.Activity.dismissDialog(int)",3,3,3
"android.app.Activity.dispatchActivityResult(String,int,int,Intent)",1,4,4
"android.app.Activity.dispatchKeyEvent(KeyEvent)",2,3,4
"android.app.Activity.dispatchPopulateAccessibilityEvent(AccessibilityEvent)",1,2,3
"android.app.Activity.dispatchTouchEvent(MotionEvent)",2,2,3
"android.app.Activity.dispatchTrackballEvent(MotionEvent)",2,1,2
"android.app.Activity.dump(String,FileDescriptor,PrintWriter,String[])",1,2,2
"android.app.Activity.ensureSearchManager()",2,1,2
"android.app.Activity.findFragmentById(int)",1,1,1
"android.app.Activity.findFragmentByTag(String)",1,1,1
"android.app.Activity.findViewById(int)",1,1,1
"android.app.Activity.finish()",1,3,5
"android.app.Activity.finishActivity(int)",1,2,3
"android.app.Activity.finishActivityFromChild(Activity,int)",1,1,2
"android.app.Activity.finishFromChild(Activity)",1,1,1
"android.app.Activity.getActionBar()",1,1,1
"android.app.Activity.getActivityToken()",1,2,2
"android.app.Activity.getApplication()",1,1,1
"android.app.Activity.getCallingActivity()",1,1,2
"android.app.Activity.getCallingPackage()",1,1,2
"android.app.Activity.getChangingConfigurations()",1,1,1
"android.app.Activity.getComponentName()",1,1,1
"android.app.Activity.getCurrentFocus()",1,2,2
"android.app.Activity.getFragmentManager()",1,1,1
"android.app.Activity.getIntent()",1,1,1
"android.app.Activity.getLastNonConfigurationChildInstances()",1,1,2
"android.app.Activity.getLastNonConfigurationInstance()",1,1,2
"android.app.Activity.getLayoutInflater()",1,1,1
"android.app.Activity.getLoaderManager()",2,1,2
"android.app.Activity.getLoaderManager(int,boolean,boolean)",1,3,4
"android.app.Activity.getLocalClassName()",2,3,4
"android.app.Activity.getMenuInflater()",1,1,1
"android.app.Activity.getParent()",1,1,1
"android.app.Activity.getPreferences(int)",1,1,1
"android.app.Activity.getRequestedOrientation()",2,2,3
"android.app.Activity.getSystemService(String)",4,3,4
"android.app.Activity.getTaskId()",1,1,2
"android.app.Activity.getTitle()",1,1,1
"android.app.Activity.getTitleColor()",1,1,1
"android.app.Activity.getVolumeControlStream()",1,1,1
"android.app.Activity.getWallpaperDesiredMinimumHeight()",1,2,2
"android.app.Activity.getWallpaperDesiredMinimumWidth()",1,2,2
"android.app.Activity.getWindow()",1,1,1
"android.app.Activity.getWindowManager()",1,1,1
"android.app.Activity.hasWindowFocus()",3,3,3
"android.app.Activity.initActionBar()",2,3,4
"android.app.Activity.invalidateFragmentIndex(int)",1,3,3
"android.app.Activity.invalidateOptionsMenu()",1,1,1
"android.app.Activity.isChangingConfigurations()",1,1,1
"android.app.Activity.isChild()",1,1,1
"android.app.Activity.isFinishing()",1,1,1
"android.app.Activity.isImmersive()",1,1,2
"android.app.Activity.isResumed()",1,1,1
"android.app.Activity.isTaskRoot()",1,1,2
"android.app.Activity.makeVisible()",1,2,2
"android.app.Activity.managedQuery(Uri,String[],String,String)",1,2,2
"android.app.Activity.managedQuery(Uri,String[],String,String[],String)",1,2,2
"android.app.Activity.missingDialog(int)",1,1,1
"android.app.Activity.moveTaskToBack(boolean)",1,1,2
"android.app.Activity.onActionModeFinished(ActionMode)",1,1,1
"android.app.Activity.onActionModeStarted(ActionMode)",1,1,1
"android.app.Activity.onActivityResult(int,int,Intent)",1,1,1
"android.app.Activity.onApplyThemeResource(Theme,int,boolean)",1,2,3
"android.app.Activity.onAttachFragment(Fragment)",1,1,1
"android.app.Activity.onAttachedToWindow()",1,1,1
"android.app.Activity.onBackPressed()",1,2,2
"android.app.Activity.onChildTitleChanged(Activity,CharSequence)",1,1,1
"android.app.Activity.onConfigurationChanged(Configuration)",1,2,2
"android.app.Activity.onContentChanged()",1,1,1
"android.app.Activity.onContextItemSelected(MenuItem)",2,2,2
"android.app.Activity.onContextMenuClosed(Menu)",1,2,2
"android.app.Activity.onCreate(Bundle)",1,2,4
"android.app.Activity.onCreateContextMenu(ContextMenu,View,ContextMenuInfo)",1,1,1
"android.app.Activity.onCreateDescription()",1,1,1
"android.app.Activity.onCreateDialog(int)",1,1,1
"android.app.Activity.onCreateDialog(int,Bundle)",1,1,1
"android.app.Activity.onCreateOptionsMenu(Menu)",2,2,2
"android.app.Activity.onCreatePanelMenu(int,Menu)",2,2,2
"android.app.Activity.onCreatePanelView(int)",1,1,1
"android.app.Activity.onCreateThumbnail(Bitmap,Canvas)",1,1,1
"android.app.Activity.onCreateView(String,Context,AttributeSet)",1,1,1
"android.app.Activity.onCreateView(View,String,Context,AttributeSet)",6,14,20
"android.app.Activity.onDestroy()",1,7,7
"android.app.Activity.onDetachedFromWindow()",1,1,1
"android.app.Activity.onKeyDown(int,KeyEvent)",6,11,14
"android.app.Activity.onKeyLongPress(int,KeyEvent)",1,1,1
"android.app.Activity.onKeyMultiple(int,int,KeyEvent)",1,1,1
"android.app.Activity.onKeyUp(int,KeyEvent)",3,5,5
"android.app.Activity.onLowMemory()",1,1,1
"android.app.Activity.onMenuItemSelected(int,MenuItem)",4,2,6
"android.app.Activity.onMenuOpened(int,Menu)",1,3,3
"android.app.Activity.onNewIntent(Intent)",1,1,1
"android.app.Activity.onOptionsItemSelected(MenuItem)",2,2,2
"android.app.Activity.onOptionsMenuClosed(Menu)",1,2,2
"android.app.Activity.onPanelClosed(int,Menu)",2,2,4
"android.app.Activity.onPause()",1,1,1
"android.app.Activity.onPostCreate(Bundle)",1,2,2
"android.app.Activity.onPostResume()",1,2,2
"android.app.Activity.onPrepareDialog(int,Dialog)",1,1,1
"android.app.Activity.onPrepareDialog(int,Dialog,Bundle)",1,1,1
"android.app.Activity.onPrepareOptionsMenu(Menu)",2,2,2
"android.app.Activity.onPreparePanel(int,View,Menu)",2,3,4
"android.app.Activity.onRestart()",1,1,1
"android.app.Activity.onRestoreInstanceState(Bundle)",1,3,3
"android.app.Activity.onResume()",1,1,1
"android.app.Activity.onRetainNonConfigurationChildInstances()",1,1,1
"android.app.Activity.onRetainNonConfigurationInstance()",1,1,1
"android.app.Activity.onSaveInstanceState(Bundle)",1,2,2
"android.app.Activity.onSearchRequested()",1,1,1
"android.app.Activity.onStart()",1,4,4
"android.app.Activity.onStop()",1,1,1
"android.app.Activity.onTitleChanged(CharSequence,int)",1,4,4
"android.app.Activity.onTouchEvent(MotionEvent)",1,1,1
"android.app.Activity.onTrackballEvent(MotionEvent)",1,1,1
"android.app.Activity.onUserInteraction()",1,1,1
"android.app.Activity.onUserLeaveHint()",1,1,1
"android.app.Activity.onWindowAttributesChanged(LayoutParams)",1,4,4
"android.app.Activity.onWindowFocusChanged(boolean)",1,1,1
"android.app.Activity.onWindowStartingActionMode(Callback)",2,2,2
"android.app.Activity.openContextMenu(View)",1,1,1
"android.app.Activity.openFragmentTransaction()",1,1,1
"android.app.Activity.openOptionsMenu()",1,1,1
"android.app.Activity.overridePendingTransition(int,int)",1,1,2
"android.app.Activity.performCreate(Bundle)",1,1,1
"android.app.Activity.performDestroy()",1,2,2
"android.app.Activity.performPause()",2,3,3
"android.app.Activity.performRestart()",6,5,7
"android.app.Activity.performRestoreInstanceState(Bundle)",1,1,1
"android.app.Activity.performResume()",3,3,3
"android.app.Activity.performSaveInstanceState(Bundle)",1,1,1
"android.app.Activity.performStart()",2,4,4
"android.app.Activity.performStop()",3,9,9
"android.app.Activity.performUserLeaving()",1,1,1
"android.app.Activity.recreate()",3,1,3
"android.app.Activity.registerForContextMenu(View)",1,1,1
"android.app.Activity.removeDialog(int)",1,3,3
"android.app.Activity.requestWindowFeature(int)",1,1,1
"android.app.Activity.restoreManagedDialogs(Bundle)",2,4,5
"android.app.Activity.retainNonConfigurationInstances()",2,4,8
"android.app.Activity.runOnUiThread(Runnable)",1,2,2
"android.app.Activity.saveManagedDialogs(Bundle)",3,3,5
"android.app.Activity.savedDialogArgsKeyFor(int)",1,1,1
"android.app.Activity.savedDialogKeyFor(int)",1,1,1
"android.app.Activity.setContentView(View)",1,1,1
"android.app.Activity.setContentView(View,LayoutParams)",1,1,1
"android.app.Activity.setContentView(int)",1,1,1
"android.app.Activity.setDefaultKeyMode(int)",2,2,4
"android.app.Activity.setFeatureDrawable(int,Drawable)",1,1,1
"android.app.Activity.setFeatureDrawableAlpha(int,int)",1,1,1
"android.app.Activity.setFeatureDrawableResource(int,int)",1,1,1
"android.app.Activity.setFeatureDrawableUri(int,Uri)",1,1,1
"android.app.Activity.setImmersive(boolean)",1,1,2
"android.app.Activity.setIntent(Intent)",1,1,1
"android.app.Activity.setParent(Activity)",1,1,1
"android.app.Activity.setPersistent(boolean)",1,1,1
"android.app.Activity.setProgress(int)",1,1,1
"android.app.Activity.setProgressBarIndeterminate(boolean)",1,1,2
"android.app.Activity.setProgressBarIndeterminateVisibility(boolean)",1,1,2
"android.app.Activity.setProgressBarVisibility(boolean)",1,1,2
"android.app.Activity.setRequestedOrientation(int)",1,2,3
"android.app.Activity.setResult(int)",1,1,1
"android.app.Activity.setResult(int,Intent)",1,1,1
"android.app.Activity.setSecondaryProgress(int)",1,1,1
"android.app.Activity.setTitle(CharSequence)",1,2,2
"android.app.Activity.setTitle(int)",1,1,1
"android.app.Activity.setTitleColor(int)",1,1,1
"android.app.Activity.setVisible(boolean)",1,4,4
"android.app.Activity.setVolumeControlStream(int)",1,1,1
"android.app.Activity.showDialog(int)",1,1,1
"android.app.Activity.showDialog(int,Bundle)",3,2,4
"android.app.Activity.startActionMode(Callback)",1,1,1
"android.app.Activity.startActivities(Intent[])",1,1,1
"android.app.Activity.startActivity(Intent)",1,1,1
"android.app.Activity.startActivityForResult(Intent,int)",1,3,4
"android.app.Activity.startActivityFromChild(Activity,Intent,int)",1,2,2
"android.app.Activity.startActivityFromFragment(Fragment,Intent,int)",1,2,2
"android.app.Activity.startActivityIfNeeded(Intent,int)",2,2,4
"android.app.Activity.startIntentSender(IntentSender,Intent,int,int,int)",1,1,1
"android.app.Activity.startIntentSenderForResult(IntentSender,int,Intent,int,int,int)",1,2,2
"android.app.Activity.startIntentSenderForResultInner(IntentSender,int,Intent,int,int,Activity)",2,2,5
"android.app.Activity.startIntentSenderFromChild(Activity,IntentSender,int,Intent,int,int,int)",1,1,1
"android.app.Activity.startManagingCursor(Cursor)",1,1,1
"android.app.Activity.startNextMatchingActivity(Intent)",2,2,3
"android.app.Activity.startSearch(String,boolean,Bundle,boolean)",1,1,1
"android.app.Activity.stopManagingCursor(Cursor)",3,3,3
"android.app.Activity.takeKeyEvents(boolean)",1,1,1
"android.app.Activity.triggerSearch(String,Bundle)",1,1,1
"android.app.Activity.unregisterForContextMenu(View)",1,1,1
"android.app.ActivityGroup.ActivityGroup()",1,1,1
"android.app.ActivityGroup.ActivityGroup(boolean)",1,1,1
"android.app.ActivityGroup.dispatchActivityResult(String,int,int,Intent)",3,3,3
"android.app.ActivityGroup.getCurrentActivity()",1,1,1
"android.app.ActivityGroup.getLocalActivityManager()",1,1,1
"android.app.ActivityGroup.onCreate(Bundle)",1,2,2
"android.app.ActivityGroup.onDestroy()",1,1,1
"android.app.ActivityGroup.onPause()",1,1,1
"android.app.ActivityGroup.onResume()",1,1,1
"android.app.ActivityGroup.onRetainNonConfigurationChildInstances()",1,1,1
"android.app.ActivityGroup.onSaveInstanceState(Bundle)",1,2,2
"android.app.ActivityGroup.onStop()",1,1,1
"android.app.ActivityManager.ActivityManager(Context,Handler)",1,1,1
"android.app.ActivityManager.MemoryInfo.MemoryInfo()",1,1,1
"android.app.ActivityManager.MemoryInfo.MemoryInfo(Parcel)",1,1,1
"android.app.ActivityManager.MemoryInfo.describeContents()",1,1,1
"android.app.ActivityManager.MemoryInfo.readFromParcel(Parcel)",1,1,1
"android.app.ActivityManager.MemoryInfo.writeToParcel(Parcel,int)",1,1,2
"android.app.ActivityManager.ProcessErrorStateInfo.ProcessErrorStateInfo()",1,1,1
"android.app.ActivityManager.ProcessErrorStateInfo.ProcessErrorStateInfo(Parcel)",1,1,1
"android.app.ActivityManager.ProcessErrorStateInfo.describeContents()",1,1,1
"android.app.ActivityManager.ProcessErrorStateInfo.readFromParcel(Parcel)",1,1,1
"android.app.ActivityManager.ProcessErrorStateInfo.writeToParcel(Parcel,int)",1,1,1
"android.app.ActivityManager.RecentTaskInfo.RecentTaskInfo()",1,1,1
"android.app.ActivityManager.RecentTaskInfo.RecentTaskInfo(Parcel)",1,1,1
"android.app.ActivityManager.RecentTaskInfo.describeContents()",1,1,1
"android.app.ActivityManager.RecentTaskInfo.readFromParcel(Parcel)",1,3,3
"android.app.ActivityManager.RecentTaskInfo.writeToParcel(Parcel,int)",1,3,3
"android.app.ActivityManager.RunningAppProcessInfo.RunningAppProcessInfo()",1,1,1
"android.app.ActivityManager.RunningAppProcessInfo.RunningAppProcessInfo(Parcel)",1,1,1
"android.app.ActivityManager.RunningAppProcessInfo.RunningAppProcessInfo(String,int,String[])",1,1,1
"android.app.ActivityManager.RunningAppProcessInfo.describeContents()",1,1,1
"android.app.ActivityManager.RunningAppProcessInfo.readFromParcel(Parcel)",1,1,1
"android.app.ActivityManager.RunningAppProcessInfo.writeToParcel(Parcel,int)",1,1,1
"android.app.ActivityManager.RunningServiceInfo.RunningServiceInfo()",1,1,1
"android.app.ActivityManager.RunningServiceInfo.RunningServiceInfo(Parcel)",1,1,1
"android.app.ActivityManager.RunningServiceInfo.describeContents()",1,1,1
"android.app.ActivityManager.RunningServiceInfo.readFromParcel(Parcel)",1,1,1
"android.app.ActivityManager.RunningServiceInfo.writeToParcel(Parcel,int)",1,1,3
"android.app.ActivityManager.RunningTaskInfo.RunningTaskInfo()",1,1,1
"android.app.ActivityManager.RunningTaskInfo.RunningTaskInfo(Parcel)",1,1,1
"android.app.ActivityManager.RunningTaskInfo.describeContents()",1,1,1
"android.app.ActivityManager.RunningTaskInfo.readFromParcel(Parcel)",1,2,2
"android.app.ActivityManager.RunningTaskInfo.writeToParcel(Parcel,int)",1,2,2
"android.app.ActivityManager.clearApplicationUserData(String,IPackageDataObserver)",1,1,2
"android.app.ActivityManager.forceStopPackage(String)",1,1,2
"android.app.ActivityManager.getDeviceConfigurationInfo()",1,1,2
"android.app.ActivityManager.getLargeMemoryClass()",1,1,1
"android.app.ActivityManager.getMemoryClass()",1,1,1
"android.app.ActivityManager.getMemoryInfo(MemoryInfo)",1,1,2
"android.app.ActivityManager.getProcessMemoryInfo(int[])",1,1,2
"android.app.ActivityManager.getProcessesInErrorState()",1,1,2
"android.app.ActivityManager.getRecentTasks(int,int)",1,1,2
"android.app.ActivityManager.getRunningAppProcesses()",1,1,2
"android.app.ActivityManager.getRunningExternalApplications()",1,1,2
"android.app.ActivityManager.getRunningServiceControlPanel(ComponentName)",1,1,2
"android.app.ActivityManager.getRunningServices(int)",1,1,2
"android.app.ActivityManager.getRunningTasks(int)",1,1,1
"android.app.ActivityManager.getRunningTasks(int,int,IThumbnailReceiver)",1,1,2
"android.app.ActivityManager.isUserAMonkey()",1,1,2
"android.app.ActivityManager.killBackgroundProcesses(String)",1,1,2
"android.app.ActivityManager.moveTaskToFront(int,int)",1,1,2
"android.app.ActivityManager.restartPackage(String)",1,1,1
"android.app.ActivityManager.staticGetLargeMemoryClass()",1,1,1
"android.app.ActivityManager.staticGetMemoryClass()",1,1,1
"android.app.ActivityManagerNative.ActivityManagerNative()",1,1,1
"android.app.ActivityManagerNative.asBinder()",1,1,1
"android.app.ActivityManagerNative.asInterface(IBinder)",3,1,3
"android.app.ActivityManagerNative.broadcastStickyIntent(Intent,String)",1,1,2
"android.app.ActivityManagerNative.getDefault()",1,1,1
"android.app.ActivityManagerNative.isSystemReady()",1,2,2
"android.app.ActivityManagerNative.noteWakeupAlarm(PendingIntent)",1,1,2
"android.app.ActivityManagerNative.onTransact(int,Parcel,Parcel,int)",117,145,163
"android.app.ActivityManagerProxy.ActivityManagerProxy(IBinder)",1,1,1
"android.app.ActivityManagerProxy.activityDestroyed(IBinder)",1,1,1
"android.app.ActivityManagerProxy.activityIdle(IBinder,Configuration)",1,2,2
"android.app.ActivityManagerProxy.activityPaused(IBinder)",1,1,1
"android.app.ActivityManagerProxy.activityStopped(IBinder,Bundle,Bitmap,CharSequence)",1,2,2
"android.app.ActivityManagerProxy.asBinder()",1,1,1
"android.app.ActivityManagerProxy.attachApplication(IApplicationThread)",1,1,1
"android.app.ActivityManagerProxy.backupAgentCreated(String,IBinder)",1,1,1
"android.app.ActivityManagerProxy.bindBackupAgent(ApplicationInfo,int)",1,1,1
"android.app.ActivityManagerProxy.bindService(IApplicationThread,IBinder,Intent,String,IServiceConnection,int)",1,2,2
"android.app.ActivityManagerProxy.broadcastIntent(IApplicationThread,Intent,String,IIntentReceiver,int,String,Bundle,String,boolean,boolean)",1,3,5
"android.app.ActivityManagerProxy.cancelIntentSender(IIntentSender)",1,1,1
"android.app.ActivityManagerProxy.checkGrantUriPermission(int,String,Uri,int)",1,1,1
"android.app.ActivityManagerProxy.checkPermission(String,int,int)",1,1,1
"android.app.ActivityManagerProxy.checkUriPermission(Uri,int,int,int)",1,1,1
"android.app.ActivityManagerProxy.clearApplicationUserData(String,IPackageDataObserver)",1,1,1
"android.app.ActivityManagerProxy.closeSystemDialogs(String)",1,1,1
"android.app.ActivityManagerProxy.crashApplication(int,int,String,String)",1,1,1
"android.app.ActivityManagerProxy.dumpHeap(String,boolean,String,ParcelFileDescriptor)",1,2,3
"android.app.ActivityManagerProxy.enterSafeMode()",1,1,1
"android.app.ActivityManagerProxy.finishActivity(IBinder,int,Intent)",1,2,2
"android.app.ActivityManagerProxy.finishHeavyWeightApp()",1,1,1
"android.app.ActivityManagerProxy.finishInstrumentation(IApplicationThread,int,Bundle)",1,2,2
"android.app.ActivityManagerProxy.finishOtherInstances(IBinder,ComponentName)",1,1,1
"android.app.ActivityManagerProxy.finishReceiver(IBinder,int,String,Bundle,boolean)",1,1,2
"android.app.ActivityManagerProxy.finishSubActivity(IBinder,String,int)",1,1,1
"android.app.ActivityManagerProxy.forceStopPackage(String)",1,1,1
"android.app.ActivityManagerProxy.getActivityClassForToken(IBinder)",1,1,1
"android.app.ActivityManagerProxy.getCallingActivity(IBinder)",1,1,1
"android.app.ActivityManagerProxy.getCallingPackage(IBinder)",1,1,1
"android.app.ActivityManagerProxy.getConfiguration()",1,1,1
"android.app.ActivityManagerProxy.getContentProvider(IApplicationThread,String)",1,3,3
"android.app.ActivityManagerProxy.getDeviceConfigurationInfo()",1,1,1
"android.app.ActivityManagerProxy.getIntentSender(int,String,IBinder,String,int,Intent[],String[],int)",1,2,2
"android.app.ActivityManagerProxy.getMemoryInfo(MemoryInfo)",1,1,1
"android.app.ActivityManagerProxy.getPackageForIntentSender(IIntentSender)",1,1,1
"android.app.ActivityManagerProxy.getPackageForToken(IBinder)",1,1,1
"android.app.ActivityManagerProxy.getProcessLimit()",1,1,1
"android.app.ActivityManagerProxy.getProcessMemoryInfo(int[])",1,1,1
"android.app.ActivityManagerProxy.getProcessesInErrorState()",1,1,1
"android.app.ActivityManagerProxy.getProviderMimeType(Uri)",1,1,1
"android.app.ActivityManagerProxy.getRecentTasks(int,int)",1,1,1
"android.app.ActivityManagerProxy.getRequestedOrientation(IBinder)",1,1,1
"android.app.ActivityManagerProxy.getRunningAppProcesses()",1,1,1
"android.app.ActivityManagerProxy.getRunningExternalApplications()",1,1,1
"android.app.ActivityManagerProxy.getRunningServiceControlPanel(ComponentName)",1,1,1
"android.app.ActivityManagerProxy.getServices(int,int)",1,3,3
"android.app.ActivityManagerProxy.getTaskForActivity(IBinder,boolean)",1,1,2
"android.app.ActivityManagerProxy.getTasks(int,int,IThumbnailReceiver)",1,4,4
"android.app.ActivityManagerProxy.goingToSleep()",1,1,1
"android.app.ActivityManagerProxy.grantUriPermission(IApplicationThread,String,Uri,int)",1,1,1
"android.app.ActivityManagerProxy.grantUriPermissionFromOwner(IBinder,int,String,Uri,int)",1,1,1
"android.app.ActivityManagerProxy.handleApplicationCrash(IBinder,CrashInfo)",1,1,1
"android.app.ActivityManagerProxy.handleApplicationStrictModeViolation(IBinder,int,ViolationInfo)",1,1,1
"android.app.ActivityManagerProxy.handleApplicationWtf(IBinder,String,CrashInfo)",1,1,1
"android.app.ActivityManagerProxy.isImmersive(IBinder)",1,1,1
"android.app.ActivityManagerProxy.isTopActivityImmersive()",1,1,1
"android.app.ActivityManagerProxy.isUserAMonkey()",1,1,1
"android.app.ActivityManagerProxy.killApplicationProcess(String,int)",1,1,1
"android.app.ActivityManagerProxy.killApplicationWithUid(String,int)",1,1,1
"android.app.ActivityManagerProxy.killBackgroundProcesses(String)",1,1,1
"android.app.ActivityManagerProxy.killPids(int[],String)",1,1,1
"android.app.ActivityManagerProxy.moveActivityTaskToBack(IBinder,boolean)",1,1,2
"android.app.ActivityManagerProxy.moveTaskBackwards(int)",1,1,1
"android.app.ActivityManagerProxy.moveTaskToBack(int)",1,1,1
"android.app.ActivityManagerProxy.moveTaskToFront(int,int)",1,1,1
"android.app.ActivityManagerProxy.newUriPermissionOwner(String)",1,1,1
"android.app.ActivityManagerProxy.noteWakeupAlarm(IIntentSender)",1,1,1
"android.app.ActivityManagerProxy.openContentUri(Uri)",1,2,2
"android.app.ActivityManagerProxy.overridePendingTransition(IBinder,String,int,int)",1,1,1
"android.app.ActivityManagerProxy.peekService(Intent,String)",1,1,1
"android.app.ActivityManagerProxy.profileControl(String,boolean,String,ParcelFileDescriptor)",1,2,3
"android.app.ActivityManagerProxy.publishContentProviders(IApplicationThread,List<ContentProviderHolder>)",1,2,2
"android.app.ActivityManagerProxy.publishService(IBinder,Intent,IBinder)",1,1,1
"android.app.ActivityManagerProxy.registerActivityWatcher(IActivityWatcher)",1,2,2
"android.app.ActivityManagerProxy.registerReceiver(IApplicationThread,IIntentReceiver,IntentFilter,String)",1,4,4
"android.app.ActivityManagerProxy.removeContentProvider(IApplicationThread,String)",1,2,2
"android.app.ActivityManagerProxy.reportThumbnail(IBinder,Bitmap,CharSequence)",1,2,2
"android.app.ActivityManagerProxy.resumeAppSwitches()",1,1,1
"android.app.ActivityManagerProxy.revokeUriPermission(IApplicationThread,Uri,int)",1,1,1
"android.app.ActivityManagerProxy.revokeUriPermissionFromOwner(IBinder,Uri,int)",1,2,2
"android.app.ActivityManagerProxy.serviceDoneExecuting(IBinder,int,int,int)",1,1,1
"android.app.ActivityManagerProxy.setActivityController(IActivityController)",1,2,2
"android.app.ActivityManagerProxy.setAlwaysFinish(boolean)",1,1,2
"android.app.ActivityManagerProxy.setDebugApp(String,boolean,boolean)",1,1,3
"android.app.ActivityManagerProxy.setImmersive(IBinder,boolean)",1,1,2
"android.app.ActivityManagerProxy.setProcessForeground(IBinder,int,boolean)",1,1,2
"android.app.ActivityManagerProxy.setProcessLimit(int)",1,1,1
"android.app.ActivityManagerProxy.setRequestedOrientation(IBinder,int)",1,1,1
"android.app.ActivityManagerProxy.setServiceForeground(ComponentName,IBinder,int,Notification,boolean)",1,2,3
"android.app.ActivityManagerProxy.showWaitingForDebugger(IApplicationThread,boolean)",1,1,2
"android.app.ActivityManagerProxy.shutdown(int)",1,1,1
"android.app.ActivityManagerProxy.signalPersistentProcesses(int)",1,1,1
"android.app.ActivityManagerProxy.startActivities(IApplicationThread,Intent[],String[],IBinder)",1,2,2
"android.app.ActivityManagerProxy.startActivitiesInPackage(int,Intent[],String[],IBinder)",1,1,1
"android.app.ActivityManagerProxy.startActivity(IApplicationThread,Intent,String,Uri[],int,IBinder,String,int,boolean,boolean)",1,2,4
"android.app.ActivityManagerProxy.startActivityAndWait(IApplicationThread,Intent,String,Uri[],int,IBinder,String,int,boolean,boolean)",1,2,4
"android.app.ActivityManagerProxy.startActivityInPackage(int,Intent,String,IBinder,String,int,boolean)",1,1,2
"android.app.ActivityManagerProxy.startActivityIntentSender(IApplicationThread,IntentSender,Intent,String,IBinder,String,int,int,int)",1,3,3
"android.app.ActivityManagerProxy.startActivityWithConfig(IApplicationThread,Intent,String,Uri[],int,IBinder,String,int,boolean,boolean,Configuration)",1,2,4
"android.app.ActivityManagerProxy.startInstrumentation(ComponentName,String,int,Bundle,IInstrumentationWatcher)",1,2,2
"android.app.ActivityManagerProxy.startNextMatchingActivity(IBinder,Intent)",1,1,1
"android.app.ActivityManagerProxy.startRunning(String,String,String,String)",1,1,1
"android.app.ActivityManagerProxy.startService(IApplicationThread,Intent,String)",1,2,2
"android.app.ActivityManagerProxy.stopAppSwitches()",1,1,1
"android.app.ActivityManagerProxy.stopService(IApplicationThread,Intent,String)",1,2,2
"android.app.ActivityManagerProxy.stopServiceToken(ComponentName,IBinder,int)",1,1,1
"android.app.ActivityManagerProxy.testIsSystemReady()",1,1,1
"android.app.ActivityManagerProxy.unbindBackupAgent(ApplicationInfo)",1,1,1
"android.app.ActivityManagerProxy.unbindFinished(IBinder,Intent,boolean)",1,1,2
"android.app.ActivityManagerProxy.unbindService(IServiceConnection)",1,1,1
"android.app.ActivityManagerProxy.unbroadcastIntent(IApplicationThread,Intent)",1,2,2
"android.app.ActivityManagerProxy.unhandledBack()",1,1,1
"android.app.ActivityManagerProxy.unregisterActivityWatcher(IActivityWatcher)",1,2,2
"android.app.ActivityManagerProxy.unregisterReceiver(IIntentReceiver)",1,1,1
"android.app.ActivityManagerProxy.updateConfiguration(Configuration)",1,1,1
"android.app.ActivityManagerProxy.wakingUp()",1,1,1
"android.app.ActivityManagerProxy.willActivityBeVisible(IBinder)",1,1,1
"android.app.ActivityThread.ActivityClientRecord.ActivityClientRecord()",1,1,1
"android.app.ActivityThread.ActivityClientRecord.isPreHoneycomb()",2,2,2
"android.app.ActivityThread.ActivityClientRecord.toString()",1,2,2
"android.app.ActivityThread.ActivityThread()",1,1,1
"android.app.ActivityThread.AppBindData.toString()",1,1,1
"android.app.ActivityThread.ApplicationThread.bindApplication(String,ApplicationInfo,List<ProviderInfo>,ComponentName,String,Bundle,IInstrumentationWatcher,int,boolean,Configuration,Map<String, IBinder>)",1,2,2
"android.app.ActivityThread.ApplicationThread.clearDnsCache()",1,1,1
"android.app.ActivityThread.ApplicationThread.dispatchPackageBroadcast(int,String[])",1,1,1
"android.app.ActivityThread.ApplicationThread.dump(FileDescriptor,PrintWriter,String[])",2,11,13
"android.app.ActivityThread.ApplicationThread.dumpActivity(FileDescriptor,IBinder,String,String[])",1,2,3
"android.app.ActivityThread.ApplicationThread.dumpHeap(boolean,String,ParcelFileDescriptor)",1,1,2
"android.app.ActivityThread.ApplicationThread.dumpService(FileDescriptor,IBinder,String[])",1,2,3
"android.app.ActivityThread.ApplicationThread.getMemoryInfo(MemoryInfo)",1,1,1
"android.app.ActivityThread.ApplicationThread.printRow(PrintWriter,String,Object...)",1,1,1
"android.app.ActivityThread.ApplicationThread.processInBackground()",1,1,1
"android.app.ActivityThread.ApplicationThread.profilerControl(boolean,String,ParcelFileDescriptor)",1,1,2
"android.app.ActivityThread.ApplicationThread.requestThumbnail(IBinder)",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleActivityConfigurationChanged(IBinder)",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleBindService(IBinder,Intent,boolean)",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleConfigurationChanged(Configuration)",1,2,3
"android.app.ActivityThread.ApplicationThread.scheduleCrash(String)",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleCreateBackupAgent(ApplicationInfo,int)",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleCreateService(IBinder,ServiceInfo)",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleDestroyActivity(IBinder,boolean,int)",1,1,2
"android.app.ActivityThread.ApplicationThread.scheduleDestroyBackupAgent(ApplicationInfo)",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleExit()",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleLaunchActivity(Intent,IBinder,int,ActivityInfo,Bundle,List<ResultInfo>,List<Intent>,boolean,boolean)",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleLowMemory()",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleNewIntent(List<Intent>,IBinder)",1,1,1
"android.app.ActivityThread.ApplicationThread.schedulePauseActivity(IBinder,boolean,boolean,int)",1,1,3
"android.app.ActivityThread.ApplicationThread.scheduleReceiver(Intent,ActivityInfo,int,String,Bundle,boolean)",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleRegisteredReceiver(IIntentReceiver,Intent,int,String,Bundle,boolean,boolean)",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleRelaunchActivity(IBinder,List<ResultInfo>,List<Intent>,int,boolean,Configuration)",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleResumeActivity(IBinder,boolean)",1,1,2
"android.app.ActivityThread.ApplicationThread.scheduleSendResult(IBinder,List<ResultInfo>)",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleServiceArgs(IBinder,int,int,Intent)",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleStopActivity(IBinder,boolean,int)",1,1,2
"android.app.ActivityThread.ApplicationThread.scheduleStopService(IBinder)",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleSuicide()",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleUnbindService(IBinder,Intent)",1,1,1
"android.app.ActivityThread.ApplicationThread.scheduleWindowVisibility(IBinder,boolean)",1,1,2
"android.app.ActivityThread.ApplicationThread.setHttpProxy(String,String,String)",1,1,1
"android.app.ActivityThread.ApplicationThread.setSchedulingGroup(int)",1,2,2
"android.app.ActivityThread.ApplicationThread.updateTimeZone()",1,1,1
"android.app.ActivityThread.BindServiceData.toString()",1,1,1
"android.app.ActivityThread.CreateBackupAgentData.toString()",1,1,1
"android.app.ActivityThread.CreateServiceData.toString()",1,1,1
"android.app.ActivityThread.GcIdler.queueIdle()",1,1,1
"android.app.ActivityThread.H.codeToString(int)",39,2,39
"android.app.ActivityThread.H.handleMessage(Message)",3,5,41
"android.app.ActivityThread.H.maybeSnapshot()",4,5,5
"android.app.ActivityThread.Idler.queueIdle()",1,5,8
"android.app.ActivityThread.NewIntentData.toString()",1,1,1
"android.app.ActivityThread.ProviderClientRecord.ProviderClientRecord(String,IContentProvider,ContentProvider)",1,1,1
"android.app.ActivityThread.ProviderClientRecord.binderDied()",1,1,1
"android.app.ActivityThread.ProviderRefCount.ProviderRefCount(int)",1,1,1
"android.app.ActivityThread.ReceiverData.ReceiverData(Intent,int,String,Bundle,boolean,boolean,IBinder)",1,1,1
"android.app.ActivityThread.ReceiverData.toString()",1,1,1
"android.app.ActivityThread.ResourcesKey.ResourcesKey(String,float)",1,1,1
"android.app.ActivityThread.ResourcesKey.equals(Object)",2,2,3
"android.app.ActivityThread.ResourcesKey.hashCode()",1,1,1
"android.app.ActivityThread.ResultData.toString()",1,1,1
"android.app.ActivityThread.ServiceArgsData.toString()",1,1,1
"android.app.ActivityThread.acquireExistingProvider(Context,String)",2,2,3
"android.app.ActivityThread.acquireProvider(Context,String)",2,2,3
"android.app.ActivityThread.applyConfigurationToResourcesLocked(Configuration)",2,7,8
"android.app.ActivityThread.attach(boolean)",2,6,7
"android.app.ActivityThread.cleanUpPendingRemoveWindows(ActivityClientRecord)",1,3,3
"android.app.ActivityThread.collectComponentCallbacksLocked(boolean,Configuration)",1,12,15
"android.app.ActivityThread.completeRemoveProvider(IContentProvider)",1,4,6
"android.app.ActivityThread.createThumbnailBitmap(ActivityClientRecord)",2,7,10
"android.app.ActivityThread.currentActivityThread()",1,1,1
"android.app.ActivityThread.currentApplication()",1,1,2
"android.app.ActivityThread.currentPackageName()",1,1,3
"android.app.ActivityThread.deliverNewIntents(ActivityClientRecord,List<Intent>)",1,2,2
"android.app.ActivityThread.deliverResults(ActivityClientRecord,List<ResultInfo>)",3,6,6
"android.app.ActivityThread.detach()",1,1,1
"android.app.ActivityThread.doGcIfNeeded()",1,2,2
"android.app.ActivityThread.ensureJitEnabled()",1,2,2
"android.app.ActivityThread.finishInstrumentation(int,Bundle)",1,2,4
"android.app.ActivityThread.getActivity(IBinder)",1,1,1
"android.app.ActivityThread.getApplication()",1,1,1
"android.app.ActivityThread.getApplicationThread()",1,1,1
"android.app.ActivityThread.getConfiguration()",1,1,1
"android.app.ActivityThread.getDisplayMetricsLocked(boolean)",2,2,4
"android.app.ActivityThread.getExistingProvider(Context,String)",2,1,2
"android.app.ActivityThread.getHandler()",1,1,1
"android.app.ActivityThread.getInstrumentation()",1,1,1
"android.app.ActivityThread.getIntentBeingBroadcast()",1,1,1
"android.app.ActivityThread.getLooper()",1,1,1
"android.app.ActivityThread.getPackageInfo(ApplicationInfo,ClassLoader,boolean,boolean)",1,8,11
"android.app.ActivityThread.getPackageInfo(ApplicationInfo,int)",3,1,8
"android.app.ActivityThread.getPackageInfo(String,int)",4,8,10
"android.app.ActivityThread.getPackageInfoNoCheck(ApplicationInfo)",1,1,1
"android.app.ActivityThread.getPackageManager()",2,1,2
"android.app.ActivityThread.getProcessName()",1,1,1
"android.app.ActivityThread.getProfileFilePath()",1,1,1
"android.app.ActivityThread.getProvider(Context,String)",3,3,6
"android.app.ActivityThread.getSystemContext()",1,2,2
"android.app.ActivityThread.getTopLevelResources(String,CompatibilityInfo)",4,10,11
"android.app.ActivityThread.getTopLevelResources(String,LoadedApk)",1,1,1
"android.app.ActivityThread.handleActivityConfigurationChanged(IBinder)",2,2,4
"android.app.ActivityThread.handleBindApplication(AppBindData)",4,13,19
"android.app.ActivityThread.handleBindService(BindServiceData)",3,5,6
"android.app.ActivityThread.handleConfigurationChanged(Configuration)",3,5,9
"android.app.ActivityThread.handleCreateBackupAgent(CreateBackupAgentData)",5,8,10
"android.app.ActivityThread.handleCreateService(CreateServiceData)",3,6,7
"android.app.ActivityThread.handleDestroyActivity(IBinder,boolean,int,boolean)",1,9,12
"android.app.ActivityThread.handleDestroyBackupAgent(CreateBackupAgentData)",1,4,4
"android.app.ActivityThread.handleDispatchPackageBroadcast(int,String[])",1,7,8
"android.app.ActivityThread.handleDumpActivity(DumpComponentInfo)",1,2,3
"android.app.ActivityThread.handleDumpHeap(boolean,DumpHeapData)",1,4,4
"android.app.ActivityThread.handleDumpService(DumpComponentInfo)",1,2,2
"android.app.ActivityThread.handleLaunchActivity(ActivityClientRecord,Intent)",5,7,10
"android.app.ActivityThread.handleLowMemory()",1,3,3
"android.app.ActivityThread.handleNewIntent(NewIntentData)",1,1,1
"android.app.ActivityThread.handlePauseActivity(IBinder,boolean,boolean,int)",1,3,4
"android.app.ActivityThread.handleProfilerControl(boolean,ProfilerControlData)",1,4,4
"android.app.ActivityThread.handleReceiver(ReceiverData)",2,8,8
"android.app.ActivityThread.handleRelaunchActivity(ActivityClientRecord)",3,22,25
"android.app.ActivityThread.handleRequestThumbnail(IBinder)",2,3,4
"android.app.ActivityThread.handleResumeActivity(IBinder,boolean,boolean)",1,17,25
"android.app.ActivityThread.handleSendResult(ResultData)",5,9,13
"android.app.ActivityThread.handleServiceArgs(ServiceArgsData)",3,5,6
"android.app.ActivityThread.handleStopActivity(IBinder,boolean,int)",1,2,3
"android.app.ActivityThread.handleStopService(IBinder)",3,6,7
"android.app.ActivityThread.handleUnbindService(BindServiceData)",3,5,6
"android.app.ActivityThread.handleWindowVisibility(IBinder,boolean)",2,6,8
"android.app.ActivityThread.installContentProviders(Context,List<ProviderInfo>)",1,3,4
"android.app.ActivityThread.installProvider(Context,IContentProvider,ProviderInfo,boolean)",6,14,16
"android.app.ActivityThread.installSystemApplicationInfo(ApplicationInfo)",1,1,1
"android.app.ActivityThread.installSystemProviders(List)",1,2,2
"android.app.ActivityThread.isProfiling()",1,1,2
"android.app.ActivityThread.main(String[])",2,3,5
"android.app.ActivityThread.performConfigurationChanged(ComponentCallbacks,Configuration)",4,6,11
"android.app.ActivityThread.performDestroyActivity(IBinder,boolean)",1,1,1
"android.app.ActivityThread.performDestroyActivity(IBinder,boolean,int,boolean)",11,17,21
"android.app.ActivityThread.performLaunchActivity(ActivityClientRecord,Intent)",7,19,22
"android.app.ActivityThread.performNewIntents(IBinder,List<Intent>)",1,4,4
"android.app.ActivityThread.performPauseActivity(ActivityClientRecord,boolean,boolean)",5,6,10
"android.app.ActivityThread.performPauseActivity(IBinder,boolean,boolean)",1,2,2
"android.app.ActivityThread.performRestartActivity(IBinder)",1,2,2
"android.app.ActivityThread.performResumeActivity(IBinder,boolean)",3,7,9
"android.app.ActivityThread.performStopActivity(IBinder,boolean)",1,1,1
"android.app.ActivityThread.performStopActivityInner(ActivityClientRecord,StopInfo,boolean,boolean)",8,12,15
"android.app.ActivityThread.performUserLeavingActivity(ActivityClientRecord)",1,1,1
"android.app.ActivityThread.queueOrSendMessage(int,Object)",1,1,1
"android.app.ActivityThread.queueOrSendMessage(int,Object,int)",1,1,1
"android.app.ActivityThread.queueOrSendMessage(int,Object,int,int)",1,2,2
"android.app.ActivityThread.releaseProvider(IContentProvider)",3,4,5
"android.app.ActivityThread.removeDeadProvider(String,IContentProvider)",1,3,3
"android.app.ActivityThread.removeDeadProviderLocked(String,IContentProvider)",1,3,3
"android.app.ActivityThread.removeProviderLocked(IContentProvider)",5,6,8
"android.app.ActivityThread.requestRelaunchActivity(IBinder,List<ResultInfo>,List<Intent>,int,boolean,Configuration,boolean)",3,9,12
"android.app.ActivityThread.resolveActivityInfo(Intent)",1,2,2
"android.app.ActivityThread.safeToComponentShortString(Intent)",1,2,2
"android.app.ActivityThread.scheduleContextCleanup(ContextImpl,String,String)",1,1,1
"android.app.ActivityThread.scheduleGcIdler()",1,2,2
"android.app.ActivityThread.sendActivityResult(IBinder,String,int,int,Intent)",1,2,2
"android.app.ActivityThread.startActivityNow(Activity,String,Intent,ActivityInfo,IBinder,Bundle,NonConfigurationInstances)",1,3,3
"android.app.ActivityThread.systemMain()",1,1,1
"android.app.ActivityThread.unscheduleGcIdler()",1,2,2
"android.app.ActivityThread.updateVisibility(ActivityClientRecord,boolean)",1,8,8
"android.app.AlarmManager.AlarmManager(IAlarmManager)",1,1,1
"android.app.AlarmManager.cancel(PendingIntent)",1,1,2
"android.app.AlarmManager.set(int,long,PendingIntent)",1,1,2
"android.app.AlarmManager.setInexactRepeating(int,long,long,PendingIntent)",1,1,2
"android.app.AlarmManager.setRepeating(int,long,long,PendingIntent)",1,1,2
"android.app.AlarmManager.setTime(long)",1,1,2
"android.app.AlarmManager.setTimeZone(String)",1,1,2
"android.app.AlertDialog.AlertDialog(Context)",1,1,1
"android.app.AlertDialog.AlertDialog(Context,boolean,OnCancelListener)",1,1,1
"android.app.AlertDialog.AlertDialog(Context,int)",1,2,2
"android.app.AlertDialog.Builder.Builder(Context)",1,1,1
"android.app.AlertDialog.Builder.Builder(Context,int)",1,1,1
"android.app.AlertDialog.Builder.create()",1,2,2
"android.app.AlertDialog.Builder.getContext()",1,1,1
"android.app.AlertDialog.Builder.setAdapter(ListAdapter,OnClickListener)",1,1,1
"android.app.AlertDialog.Builder.setCancelable(boolean)",1,1,1
"android.app.AlertDialog.Builder.setCursor(Cursor,OnClickListener,String)",1,1,1
"android.app.AlertDialog.Builder.setCustomTitle(View)",1,1,1
"android.app.AlertDialog.Builder.setIcon(Drawable)",1,1,1
"android.app.AlertDialog.Builder.setIcon(int)",1,1,1
"android.app.AlertDialog.Builder.setInverseBackgroundForced(boolean)",1,1,1
"android.app.AlertDialog.Builder.setItems(CharSequence[],OnClickListener)",1,1,1
"android.app.AlertDialog.Builder.setItems(int,OnClickListener)",1,1,1
"android.app.AlertDialog.Builder.setMessage(CharSequence)",1,1,1
"android.app.AlertDialog.Builder.setMessage(int)",1,1,1
"android.app.AlertDialog.Builder.setMultiChoiceItems(CharSequence[],boolean[],OnMultiChoiceClickListener)",1,1,1
"android.app.AlertDialog.Builder.setMultiChoiceItems(Cursor,String,String,OnMultiChoiceClickListener)",1,1,1
"android.app.AlertDialog.Builder.setMultiChoiceItems(int,boolean[],OnMultiChoiceClickListener)",1,1,1
"android.app.AlertDialog.Builder.setNegativeButton(CharSequence,OnClickListener)",1,1,1
"android.app.AlertDialog.Builder.setNegativeButton(int,OnClickListener)",1,1,1
"android.app.AlertDialog.Builder.setNeutralButton(CharSequence,OnClickListener)",1,1,1
"android.app.AlertDialog.Builder.setNeutralButton(int,OnClickListener)",1,1,1
"android.app.AlertDialog.Builder.setOnCancelListener(OnCancelListener)",1,1,1
"android.app.AlertDialog.Builder.setOnItemSelectedListener(OnItemSelectedListener)",1,1,1
"android.app.AlertDialog.Builder.setOnKeyListener(OnKeyListener)",1,1,1
"android.app.AlertDialog.Builder.setPositiveButton(CharSequence,OnClickListener)",1,1,1
"android.app.AlertDialog.Builder.setPositiveButton(int,OnClickListener)",1,1,1
"android.app.AlertDialog.Builder.setRecycleOnMeasureEnabled(boolean)",1,1,1
"android.app.AlertDialog.Builder.setSingleChoiceItems(CharSequence[],int,OnClickListener)",1,1,1
"android.app.AlertDialog.Builder.setSingleChoiceItems(Cursor,int,String,OnClickListener)",1,1,1
"android.app.AlertDialog.Builder.setSingleChoiceItems(ListAdapter,int,OnClickListener)",1,1,1
"android.app.AlertDialog.Builder.setSingleChoiceItems(int,int,OnClickListener)",1,1,1
"android.app.AlertDialog.Builder.setTitle(CharSequence)",1,1,1
"android.app.AlertDialog.Builder.setTitle(int)",1,1,1
"android.app.AlertDialog.Builder.setView(View)",1,1,1
"android.app.AlertDialog.Builder.setView(View,int,int,int,int)",1,1,1
"android.app.AlertDialog.Builder.show()",1,1,1
"android.app.AlertDialog.getButton(int)",1,1,1
"android.app.AlertDialog.getDefaultDialogTheme(Context)",1,1,1
"android.app.AlertDialog.getListView()",1,1,1
"android.app.AlertDialog.onCreate(Bundle)",1,1,1
"android.app.AlertDialog.onKeyDown(int,KeyEvent)",2,1,2
"android.app.AlertDialog.onKeyUp(int,KeyEvent)",2,1,2
"android.app.AlertDialog.onTouchEvent(MotionEvent)",3,6,9
"android.app.AlertDialog.setButton(CharSequence,Message)",1,1,1
"android.app.AlertDialog.setButton(CharSequence,OnClickListener)",1,1,1
"android.app.AlertDialog.setButton(int,CharSequence,Message)",1,1,1
"android.app.AlertDialog.setButton(int,CharSequence,OnClickListener)",1,1,1
"android.app.AlertDialog.setButton2(CharSequence,Message)",1,1,1
"android.app.AlertDialog.setButton2(CharSequence,OnClickListener)",1,1,1
"android.app.AlertDialog.setButton3(CharSequence,Message)",1,1,1
"android.app.AlertDialog.setButton3(CharSequence,OnClickListener)",1,1,1
"android.app.AlertDialog.setCustomTitle(View)",1,1,1
"android.app.AlertDialog.setIcon(Drawable)",1,1,1
"android.app.AlertDialog.setIcon(int)",1,1,1
"android.app.AlertDialog.setInverseBackgroundForced(boolean)",1,1,1
"android.app.AlertDialog.setMessage(CharSequence)",1,1,1
"android.app.AlertDialog.setTitle(CharSequence)",1,1,1
"android.app.AlertDialog.setView(View)",1,1,1
"android.app.AlertDialog.setView(View,int,int,int,int)",1,1,1
"android.app.AliasActivity.onCreate(Bundle)",3,2,7
"android.app.AliasActivity.parseAlias(XmlPullParser)",4,7,11
"android.app.AppGlobals.getInitialApplication()",1,1,1
"android.app.AppGlobals.getInitialPackage()",1,1,1
"android.app.AppGlobals.getPackageManager()",1,1,1
"android.app.Application.Application()",1,1,1
"android.app.Application.attach(Context)",1,1,1
"android.app.Application.onConfigurationChanged(Configuration)",1,1,1
"android.app.Application.onCreate()",1,1,1
"android.app.Application.onLowMemory()",1,1,1
"android.app.Application.onTerminate()",1,1,1
"android.app.ApplicationErrorReport.AnrInfo.AnrInfo()",1,1,1
"android.app.ApplicationErrorReport.AnrInfo.AnrInfo(Parcel)",1,1,1
"android.app.ApplicationErrorReport.AnrInfo.dump(Printer,String)",1,1,1
"android.app.ApplicationErrorReport.AnrInfo.writeToParcel(Parcel,int)",1,1,1
"android.app.ApplicationErrorReport.ApplicationErrorReport()",1,1,1
"android.app.ApplicationErrorReport.ApplicationErrorReport(Parcel)",1,1,1
"android.app.ApplicationErrorReport.BatteryInfo.BatteryInfo()",1,1,1
"android.app.ApplicationErrorReport.BatteryInfo.BatteryInfo(Parcel)",1,1,1
"android.app.ApplicationErrorReport.BatteryInfo.dump(Printer,String)",1,1,1
"android.app.ApplicationErrorReport.BatteryInfo.writeToParcel(Parcel,int)",1,1,1
"android.app.ApplicationErrorReport.CrashInfo.CrashInfo()",1,1,1
"android.app.ApplicationErrorReport.CrashInfo.CrashInfo(Parcel)",1,1,1
"android.app.ApplicationErrorReport.CrashInfo.CrashInfo(Throwable)",1,3,4
"android.app.ApplicationErrorReport.CrashInfo.dump(Printer,String)",1,1,1
"android.app.ApplicationErrorReport.CrashInfo.writeToParcel(Parcel,int)",1,1,1
"android.app.ApplicationErrorReport.RunningServiceInfo.RunningServiceInfo()",1,1,1
"android.app.ApplicationErrorReport.RunningServiceInfo.RunningServiceInfo(Parcel)",1,1,1
"android.app.ApplicationErrorReport.RunningServiceInfo.dump(Printer,String)",1,1,1
"android.app.ApplicationErrorReport.RunningServiceInfo.writeToParcel(Parcel,int)",1,1,1
"android.app.ApplicationErrorReport.describeContents()",1,1,1
"android.app.ApplicationErrorReport.dump(Printer,String)",2,2,5
"android.app.ApplicationErrorReport.getErrorReportReceiver(Context,String,int)",5,2,5
"android.app.ApplicationErrorReport.getErrorReportReceiver(PackageManager,String,String)",4,2,6
"android.app.ApplicationErrorReport.readFromParcel(Parcel)",2,2,5
"android.app.ApplicationErrorReport.writeToParcel(Parcel,int)",2,2,6
"android.app.ApplicationLoaders.getClassLoader(String,String,ClassLoader)",3,2,4
"android.app.ApplicationLoaders.getDefault()",1,1,1
"android.app.ApplicationPackageManager.ApplicationPackageManager(ContextImpl,IPackageManager)",1,1,1
"android.app.ApplicationPackageManager.ResourceName.ResourceName(ApplicationInfo,int)",1,1,1
"android.app.ApplicationPackageManager.ResourceName.ResourceName(ComponentInfo,int)",1,1,1
"android.app.ApplicationPackageManager.ResourceName.ResourceName(ResolveInfo,int)",1,1,1
"android.app.ApplicationPackageManager.ResourceName.ResourceName(String,int)",1,1,1
"android.app.ApplicationPackageManager.ResourceName.equals(Object)",4,3,6
"android.app.ApplicationPackageManager.ResourceName.hashCode()",1,1,1
"android.app.ApplicationPackageManager.ResourceName.toString()",1,1,1
"android.app.ApplicationPackageManager.addPackageToPreferred(String)",1,1,2
"android.app.ApplicationPackageManager.addPermission(PermissionInfo)",1,1,2
"android.app.ApplicationPackageManager.addPermissionAsync(PermissionInfo)",1,1,2
"android.app.ApplicationPackageManager.addPreferredActivity(IntentFilter,int,ComponentName[],ComponentName)",1,1,2
"android.app.ApplicationPackageManager.canonicalToCurrentPackageNames(String[])",1,1,2
"android.app.ApplicationPackageManager.checkPermission(String,String)",1,1,2
"android.app.ApplicationPackageManager.checkSignatures(String,String)",1,1,2
"android.app.ApplicationPackageManager.checkSignatures(int,int)",1,1,2
"android.app.ApplicationPackageManager.clearApplicationUserData(String,IPackageDataObserver)",1,1,2
"android.app.ApplicationPackageManager.clearPackagePreferredActivities(String)",1,1,2
"android.app.ApplicationPackageManager.configurationChanged()",1,1,1
"android.app.ApplicationPackageManager.currentToCanonicalPackageNames(String[])",1,1,2
"android.app.ApplicationPackageManager.deleteApplicationCacheFiles(String,IPackageDataObserver)",1,1,2
"android.app.ApplicationPackageManager.deletePackage(String,IPackageDeleteObserver,int)",1,1,2
"android.app.ApplicationPackageManager.freeStorage(long,IntentSender)",1,1,2
"android.app.ApplicationPackageManager.freeStorageAndNotify(long,IPackageDataObserver)",1,1,2
"android.app.ApplicationPackageManager.getActivityIcon(ComponentName)",1,1,1
"android.app.ApplicationPackageManager.getActivityIcon(Intent)",3,3,3
"android.app.ApplicationPackageManager.getActivityInfo(ComponentName,int)",2,1,3
"android.app.ApplicationPackageManager.getActivityLogo(ComponentName)",1,1,1
"android.app.ApplicationPackageManager.getActivityLogo(Intent)",3,3,3
"android.app.ApplicationPackageManager.getAllPermissionGroups(int)",1,1,2
"android.app.ApplicationPackageManager.getApplicationEnabledSetting(String)",1,1,2
"android.app.ApplicationPackageManager.getApplicationIcon(ApplicationInfo)",1,1,1
"android.app.ApplicationPackageManager.getApplicationIcon(String)",1,1,1
"android.app.ApplicationPackageManager.getApplicationInfo(String,int)",2,1,3
"android.app.ApplicationPackageManager.getApplicationLabel(ApplicationInfo)",1,1,1
"android.app.ApplicationPackageManager.getApplicationLogo(ApplicationInfo)",1,1,1
"android.app.ApplicationPackageManager.getApplicationLogo(String)",1,1,1
"android.app.ApplicationPackageManager.getCachedIcon(ResourceName)",3,5,5
"android.app.ApplicationPackageManager.getCachedString(ResourceName)",3,2,3
"android.app.ApplicationPackageManager.getComponentEnabledSetting(ComponentName)",1,1,2
"android.app.ApplicationPackageManager.getDefaultActivityIcon()",1,1,1
"android.app.ApplicationPackageManager.getDrawable(String,int,ApplicationInfo)",3,6,8
"android.app.ApplicationPackageManager.getInstalledApplications(int)",1,1,2
"android.app.ApplicationPackageManager.getInstalledPackages(int)",1,1,2
"android.app.ApplicationPackageManager.getInstallerPackageName(String)",1,1,2
"android.app.ApplicationPackageManager.getInstrumentationInfo(ComponentName,int)",2,1,3
"android.app.ApplicationPackageManager.getLaunchIntentForPackage(String)",2,4,5
"android.app.ApplicationPackageManager.getNameForUid(int)",1,1,2
"android.app.ApplicationPackageManager.getPackageGids(String)",2,1,4
"android.app.ApplicationPackageManager.getPackageInfo(String,int)",2,1,3
"android.app.ApplicationPackageManager.getPackageSizeInfo(String,IPackageStatsObserver)",1,1,2
"android.app.ApplicationPackageManager.getPackagesForUid(int)",1,1,2
"android.app.ApplicationPackageManager.getPermissionGroupInfo(String,int)",2,1,3
"android.app.ApplicationPackageManager.getPermissionInfo(String,int)",2,1,3
"android.app.ApplicationPackageManager.getPreferredActivities(List<IntentFilter>,List<ComponentName>,String)",1,1,2
"android.app.ApplicationPackageManager.getPreferredPackages(int)",1,1,2
"android.app.ApplicationPackageManager.getProviderInfo(ComponentName,int)",2,1,3
"android.app.ApplicationPackageManager.getReceiverInfo(ComponentName,int)",2,1,3
"android.app.ApplicationPackageManager.getResourcesForActivity(ComponentName)",1,1,1
"android.app.ApplicationPackageManager.getResourcesForApplication(ApplicationInfo)",3,2,4
"android.app.ApplicationPackageManager.getResourcesForApplication(String)",1,1,1
"android.app.ApplicationPackageManager.getServiceInfo(ComponentName,int)",2,1,3
"android.app.ApplicationPackageManager.getSystemAvailableFeatures()",1,1,2
"android.app.ApplicationPackageManager.getSystemSharedLibraryNames()",1,1,2
"android.app.ApplicationPackageManager.getText(String,int,ApplicationInfo)",3,4,6
"android.app.ApplicationPackageManager.getUidForSharedUser(String)",2,1,3
"android.app.ApplicationPackageManager.getXml(String,int,ApplicationInfo)",2,4,5
"android.app.ApplicationPackageManager.handlePackageBroadcast(int,String[],boolean)",1,11,14
"android.app.ApplicationPackageManager.hasSystemFeature(String)",1,1,2
"android.app.ApplicationPackageManager.installPackage(Uri,IPackageInstallObserver,int,String)",1,1,2
"android.app.ApplicationPackageManager.isSafeMode()",1,2,4
"android.app.ApplicationPackageManager.movePackage(String,IPackageMoveObserver,int)",1,1,2
"android.app.ApplicationPackageManager.putCachedIcon(ResourceName,Drawable)",1,2,2
"android.app.ApplicationPackageManager.putCachedString(ResourceName,CharSequence)",1,1,1
"android.app.ApplicationPackageManager.queryBroadcastReceivers(Intent,int)",1,1,2
"android.app.ApplicationPackageManager.queryContentProviders(String,int,int)",1,1,2
"android.app.ApplicationPackageManager.queryInstrumentation(String,int)",1,1,2
"android.app.ApplicationPackageManager.queryIntentActivities(Intent,int)",1,1,2
"android.app.ApplicationPackageManager.queryIntentActivityOptions(ComponentName,Intent[],Intent,int)",1,4,7
"android.app.ApplicationPackageManager.queryIntentServices(Intent,int)",1,1,2
"android.app.ApplicationPackageManager.queryPermissionsByGroup(String,int)",2,1,3
"android.app.ApplicationPackageManager.removePackageFromPreferred(String)",1,1,2
"android.app.ApplicationPackageManager.removePermission(String)",1,1,2
"android.app.ApplicationPackageManager.replacePreferredActivity(IntentFilter,int,ComponentName[],ComponentName)",1,1,2
"android.app.ApplicationPackageManager.resolveActivity(Intent,int)",1,1,2
"android.app.ApplicationPackageManager.resolveContentProvider(String,int)",1,1,2
"android.app.ApplicationPackageManager.resolveService(Intent,int)",1,1,2
"android.app.ApplicationPackageManager.setApplicationEnabledSetting(String,int,int)",1,1,2
"android.app.ApplicationPackageManager.setComponentEnabledSetting(ComponentName,int,int)",1,1,2
"android.app.ApplicationPackageManager.setInstallerPackageName(String,String)",1,1,2
"android.app.ApplicationPackageManager.setPackageObbPath(String,String)",1,1,2
"android.app.ApplicationThreadNative.ApplicationThreadNative()",1,1,1
"android.app.ApplicationThreadNative.asBinder()",1,1,1
"android.app.ApplicationThreadNative.asInterface(IBinder)",3,1,3
"android.app.ApplicationThreadNative.onTransact(int,Parcel,Parcel,int)",38,44,47
"android.app.ApplicationThreadProxy.ApplicationThreadProxy(IBinder)",1,1,1
"android.app.ApplicationThreadProxy.asBinder()",1,1,1
"android.app.ApplicationThreadProxy.bindApplication(String,ApplicationInfo,List<ProviderInfo>,ComponentName,String,Bundle,IInstrumentationWatcher,int,boolean,Configuration,Map<String, IBinder>)",1,2,3
"android.app.ApplicationThreadProxy.clearDnsCache()",1,1,1
"android.app.ApplicationThreadProxy.dispatchPackageBroadcast(int,String[])",1,1,1
"android.app.ApplicationThreadProxy.dumpActivity(FileDescriptor,IBinder,String,String[])",1,1,1
"android.app.ApplicationThreadProxy.dumpHeap(boolean,String,ParcelFileDescriptor)",1,2,3
"android.app.ApplicationThreadProxy.dumpService(FileDescriptor,IBinder,String[])",1,1,1
"android.app.ApplicationThreadProxy.getMemoryInfo(MemoryInfo)",1,1,1
"android.app.ApplicationThreadProxy.processInBackground()",1,1,1
"android.app.ApplicationThreadProxy.profilerControl(boolean,String,ParcelFileDescriptor)",1,2,3
"android.app.ApplicationThreadProxy.requestThumbnail(IBinder)",1,1,1
"android.app.ApplicationThreadProxy.scheduleActivityConfigurationChanged(IBinder)",1,1,1
"android.app.ApplicationThreadProxy.scheduleBindService(IBinder,Intent,boolean)",1,1,2
"android.app.ApplicationThreadProxy.scheduleConfigurationChanged(Configuration)",1,1,1
"android.app.ApplicationThreadProxy.scheduleCrash(String)",1,1,1
"android.app.ApplicationThreadProxy.scheduleCreateBackupAgent(ApplicationInfo,int)",1,1,1
"android.app.ApplicationThreadProxy.scheduleCreateService(IBinder,ServiceInfo)",1,1,1
"android.app.ApplicationThreadProxy.scheduleDestroyActivity(IBinder,boolean,int)",1,1,2
"android.app.ApplicationThreadProxy.scheduleDestroyBackupAgent(ApplicationInfo)",1,1,1
"android.app.ApplicationThreadProxy.scheduleExit()",1,1,1
"android.app.ApplicationThreadProxy.scheduleLaunchActivity(Intent,IBinder,int,ActivityInfo,Bundle,List<ResultInfo>,List<Intent>,boolean,boolean)",1,1,3
"android.app.ApplicationThreadProxy.scheduleLowMemory()",1,1,1
"android.app.ApplicationThreadProxy.scheduleNewIntent(List<Intent>,IBinder)",1,1,1
"android.app.ApplicationThreadProxy.schedulePauseActivity(IBinder,boolean,boolean,int)",1,1,3
"android.app.ApplicationThreadProxy.scheduleReceiver(Intent,ActivityInfo,int,String,Bundle,boolean)",1,1,2
"android.app.ApplicationThreadProxy.scheduleRegisteredReceiver(IIntentReceiver,Intent,int,String,Bundle,boolean,boolean)",1,1,3
"android.app.ApplicationThreadProxy.scheduleRelaunchActivity(IBinder,List<ResultInfo>,List<Intent>,int,boolean,Configuration)",1,2,3
"android.app.ApplicationThreadProxy.scheduleResumeActivity(IBinder,boolean)",1,1,2
"android.app.ApplicationThreadProxy.scheduleSendResult(IBinder,List<ResultInfo>)",1,1,1
"android.app.ApplicationThreadProxy.scheduleServiceArgs(IBinder,int,int,Intent)",1,2,2
"android.app.ApplicationThreadProxy.scheduleStopActivity(IBinder,boolean,int)",1,1,2
"android.app.ApplicationThreadProxy.scheduleStopService(IBinder)",1,1,1
"android.app.ApplicationThreadProxy.scheduleSuicide()",1,1,1
"android.app.ApplicationThreadProxy.scheduleUnbindService(IBinder,Intent)",1,1,1
"android.app.ApplicationThreadProxy.scheduleWindowVisibility(IBinder,boolean)",1,1,2
"android.app.ApplicationThreadProxy.setHttpProxy(String,String,String)",1,1,1
"android.app.ApplicationThreadProxy.setSchedulingGroup(int)",1,1,1
"android.app.ApplicationThreadProxy.updateTimeZone()",1,1,1
"android.app.BackStackRecord.BackStackRecord(FragmentManagerImpl)",1,1,1
"android.app.BackStackRecord.add(Fragment,String)",1,1,1
"android.app.BackStackRecord.add(int,Fragment)",1,1,1
"android.app.BackStackRecord.add(int,Fragment,String)",1,1,1
"android.app.BackStackRecord.addOp(Op)",1,1,2
"android.app.BackStackRecord.addToBackStack(String)",2,1,2
"android.app.BackStackRecord.bumpBackStackNesting(int)",2,7,8
"android.app.BackStackRecord.commit()",1,1,1
"android.app.BackStackRecord.commitAllowingStateLoss()",1,1,1
"android.app.BackStackRecord.commitInternal(boolean)",2,3,4
"android.app.BackStackRecord.disallowAddToBackStack()",2,1,2
"android.app.BackStackRecord.doAddOp(int,Fragment,String,int)",6,3,8
"android.app.BackStackRecord.dump(String,FileDescriptor,PrintWriter,String[])",1,12,16
"android.app.BackStackRecord.getBreadCrumbShortTitle()",2,2,2
"android.app.BackStackRecord.getBreadCrumbTitle()",2,2,2
"android.app.BackStackRecord.getId()",1,1,1
"android.app.BackStackRecord.getName()",1,1,1
"android.app.BackStackRecord.getTransition()",1,1,1
"android.app.BackStackRecord.getTransitionStyle()",1,1,1
"android.app.BackStackRecord.hide(Fragment)",2,1,2
"android.app.BackStackRecord.isAddToBackStackAllowed()",1,1,1
"android.app.BackStackRecord.isEmpty()",1,1,1
"android.app.BackStackRecord.popFromBackStack(boolean)",3,8,13
"android.app.BackStackRecord.remove(Fragment)",2,1,2
"android.app.BackStackRecord.replace(int,Fragment)",1,1,1
"android.app.BackStackRecord.replace(int,Fragment,String)",2,1,2
"android.app.BackStackRecord.run()",5,11,19
"android.app.BackStackRecord.setBreadCrumbShortTitle(CharSequence)",1,1,1
"android.app.BackStackRecord.setBreadCrumbShortTitle(int)",1,1,1
"android.app.BackStackRecord.setBreadCrumbTitle(CharSequence)",1,1,1
"android.app.BackStackRecord.setBreadCrumbTitle(int)",1,1,1
"android.app.BackStackRecord.setCustomAnimations(int,int)",1,1,1
"android.app.BackStackRecord.setTransition(int)",1,1,1
"android.app.BackStackRecord.setTransitionStyle(int)",1,1,1
"android.app.BackStackRecord.show(Fragment)",2,1,2
"android.app.BackStackState.BackStackState(FragmentManagerImpl,BackStackRecord)",2,6,7
"android.app.BackStackState.BackStackState(Parcel)",1,1,1
"android.app.BackStackState.describeContents()",1,1,1
"android.app.BackStackState.instantiate(FragmentManagerImpl)",1,6,6
"android.app.BackStackState.writeToParcel(Parcel,int)",1,1,1
"android.app.ContextImpl.ApplicationContentResolver.ApplicationContentResolver(Context,ActivityThread)",1,1,1
"android.app.ContextImpl.ApplicationContentResolver.acquireExistingProvider(Context,String)",1,1,1
"android.app.ContextImpl.ApplicationContentResolver.acquireProvider(Context,String)",1,1,1
"android.app.ContextImpl.ApplicationContentResolver.releaseProvider(IContentProvider)",1,1,1
"android.app.ContextImpl.ContextImpl()",1,1,1
"android.app.ContextImpl.ContextImpl(ContextImpl)",1,1,1
"android.app.ContextImpl.ServiceFetcher.createService(ContextImpl)",1,1,1
"android.app.ContextImpl.ServiceFetcher.getService(ContextImpl)",3,3,4
"android.app.ContextImpl.StaticServiceFetcher.getService(ContextImpl)",2,1,2
"android.app.ContextImpl.bindService(Intent,ServiceConnection,int)",3,2,4
"android.app.ContextImpl.checkCallingOrSelfPermission(String)",2,1,2
"android.app.ContextImpl.checkCallingOrSelfUriPermission(Uri,int)",1,1,1
"android.app.ContextImpl.checkCallingPermission(String)",4,2,4
"android.app.ContextImpl.checkCallingUriPermission(Uri,int)",3,2,3
"android.app.ContextImpl.checkPermission(String,int,int)",3,1,4
"android.app.ContextImpl.checkUriPermission(Uri,String,String,int,int,int)",5,7,9
"android.app.ContextImpl.checkUriPermission(Uri,int,int,int)",2,1,3
"android.app.ContextImpl.clearWallpaper()",1,1,1
"android.app.ContextImpl.createDropBoxManager()",2,1,2
"android.app.ContextImpl.createPackageContext(String,int)",4,4,5
"android.app.ContextImpl.createSystemContext(ActivityThread)",1,1,1
"android.app.ContextImpl.databaseList()",1,1,2
"android.app.ContextImpl.deleteDatabase(String)",1,1,2
"android.app.ContextImpl.deleteFile(String)",1,1,1
"android.app.ContextImpl.enforce(String,int,boolean,int,String)",2,1,4
"android.app.ContextImpl.enforceCallingOrSelfPermission(String,String)",1,1,1
"android.app.ContextImpl.enforceCallingOrSelfUriPermission(Uri,int,String)",1,1,1
"android.app.ContextImpl.enforceCallingPermission(String,String)",1,1,1
"android.app.ContextImpl.enforceCallingUriPermission(Uri,int,String)",1,1,1
"android.app.ContextImpl.enforceForUri(int,int,boolean,int,Uri,String)",2,2,4
"android.app.ContextImpl.enforcePermission(String,int,int,String)",1,1,1
"android.app.ContextImpl.enforceUriPermission(Uri,String,String,int,int,int,String)",1,1,1
"android.app.ContextImpl.enforceUriPermission(Uri,int,int,int,String)",1,1,1
"android.app.ContextImpl.fileList()",1,1,2
"android.app.ContextImpl.getActivityToken()",1,1,1
"android.app.ContextImpl.getApplicationContext()",1,2,2
"android.app.ContextImpl.getApplicationInfo()",2,2,2
"android.app.ContextImpl.getAssets()",1,1,1
"android.app.ContextImpl.getCacheDir()",3,4,4
"android.app.ContextImpl.getClassLoader()",1,2,2
"android.app.ContextImpl.getContentResolver()",1,1,1
"android.app.ContextImpl.getDataDirFile()",2,2,2
"android.app.ContextImpl.getDatabasePath(String)",1,1,1
"android.app.ContextImpl.getDatabasesDir()",1,2,3
"android.app.ContextImpl.getDir(String,int)",1,2,2
"android.app.ContextImpl.getExternalCacheDir()",3,4,5
"android.app.ContextImpl.getExternalFilesDir(String)",6,6,8
"android.app.ContextImpl.getFileStreamPath(String)",1,1,1
"android.app.ContextImpl.getFilesDir()",3,4,4
"android.app.ContextImpl.getMainLooper()",1,1,1
"android.app.ContextImpl.getOuterContext()",1,1,1
"android.app.ContextImpl.getPackageCodePath()",2,2,2
"android.app.ContextImpl.getPackageManager()",3,1,3
"android.app.ContextImpl.getPackageName()",2,2,2
"android.app.ContextImpl.getPackageResourcePath()",2,2,2
"android.app.ContextImpl.getPreferencesDir()",1,2,2
"android.app.ContextImpl.getReceiverRestrictedContext()",2,1,2
"android.app.ContextImpl.getResources()",1,1,1
"android.app.ContextImpl.getSharedPreferences(String,int)",2,4,4
"android.app.ContextImpl.getSharedPrefsFile(String)",1,1,1
"android.app.ContextImpl.getSystemService(String)",1,2,2
"android.app.ContextImpl.getTheme()",1,3,4
"android.app.ContextImpl.getWallpaper()",1,1,1
"android.app.ContextImpl.getWallpaperDesiredMinimumHeight()",1,1,1
"android.app.ContextImpl.getWallpaperDesiredMinimumWidth()",1,1,1
"android.app.ContextImpl.getWallpaperManager()",1,1,1
"android.app.ContextImpl.grantUriPermission(String,Uri,int)",1,1,2
"android.app.ContextImpl.init(LoadedApk,IBinder,ActivityThread)",1,1,1
"android.app.ContextImpl.init(LoadedApk,IBinder,ActivityThread,Resources)",1,5,5
"android.app.ContextImpl.init(Resources,ActivityThread)",1,1,1
"android.app.ContextImpl.isRestricted()",1,1,1
"android.app.ContextImpl.makeFilename(File,String)",2,1,2
"android.app.ContextImpl.openFileInput(String)",1,1,1
"android.app.ContextImpl.openFileOutput(String,int)",1,1,2
"android.app.ContextImpl.openOrCreateDatabase(String,int,CursorFactory)",1,1,1
"android.app.ContextImpl.openOrCreateDatabase(String,int,CursorFactory,DatabaseErrorHandler)",1,1,1
"android.app.ContextImpl.peekWallpaper()",1,1,1
"android.app.ContextImpl.performFinalCleanup(String,String)",1,1,1
"android.app.ContextImpl.registerReceiver(BroadcastReceiver,IntentFilter)",1,1,1
"android.app.ContextImpl.registerReceiver(BroadcastReceiver,IntentFilter,String,Handler)",1,1,1
"android.app.ContextImpl.registerReceiverInternal(BroadcastReceiver,IntentFilter,String,Handler,Context)",1,5,7
"android.app.ContextImpl.registerService(String,ServiceFetcher)",1,1,2
"android.app.ContextImpl.removeStickyBroadcast(Intent)",1,2,3
"android.app.ContextImpl.revokeUriPermission(Uri,int)",1,1,2
"android.app.ContextImpl.scheduleFinalCleanup(String,String)",1,1,1
"android.app.ContextImpl.sendBroadcast(Intent)",1,1,2
"android.app.ContextImpl.sendBroadcast(Intent,String)",1,1,2
"android.app.ContextImpl.sendOrderedBroadcast(Intent,String)",1,1,2
"android.app.ContextImpl.sendOrderedBroadcast(Intent,String,BroadcastReceiver,Handler,int,String,Bundle)",1,5,6
"android.app.ContextImpl.sendStickyBroadcast(Intent)",1,1,2
"android.app.ContextImpl.sendStickyOrderedBroadcast(Intent,BroadcastReceiver,Handler,int,String,Bundle)",1,5,6
"android.app.ContextImpl.setActivityToken(IBinder)",1,1,1
"android.app.ContextImpl.setFilePermissionsFromMode(String,int,int)",1,2,4
"android.app.ContextImpl.setOuterContext(Context)",1,1,1
"android.app.ContextImpl.setTheme(int)",1,1,1
"android.app.ContextImpl.setWallpaper(Bitmap)",1,1,1
"android.app.ContextImpl.setWallpaper(InputStream)",1,1,1
"android.app.ContextImpl.startActivities(Intent[])",2,1,2
"android.app.ContextImpl.startActivity(Intent)",2,1,2
"android.app.ContextImpl.startInstrumentation(ComponentName,String,Bundle)",1,1,2
"android.app.ContextImpl.startIntentSender(IntentSender,Intent,int,int,int)",2,2,4
"android.app.ContextImpl.startService(Intent)",2,3,4
"android.app.ContextImpl.stopService(Intent)",2,1,3
"android.app.ContextImpl.unbindService(ServiceConnection)",2,2,3
"android.app.ContextImpl.unregisterReceiver(BroadcastReceiver)",2,2,3
"android.app.ContextImpl.uriModeFlagToString(int)",4,2,4
"android.app.ContextImpl.validateFilePath(String,boolean)",1,5,5
"android.app.DatePickerDialog.DatePickerDialog(Context,OnDateSetListener,int,int,int)",1,1,1
"android.app.DatePickerDialog.DatePickerDialog(Context,int,OnDateSetListener,int,int,int)",1,1,1
"android.app.DatePickerDialog.getDatePicker()",1,1,1
"android.app.DatePickerDialog.onClick(DialogInterface,int)",1,2,2
"android.app.DatePickerDialog.onDateChanged(DatePicker,int,int,int)",1,1,1
"android.app.DatePickerDialog.onRestoreInstanceState(Bundle)",1,1,1
"android.app.DatePickerDialog.onSaveInstanceState()",1,1,1
"android.app.DatePickerDialog.updateDate(int,int,int)",1,1,1
"android.app.Dialog.Dialog(Context)",1,1,1
"android.app.Dialog.Dialog(Context,boolean,Message)",1,1,1
"android.app.Dialog.Dialog(Context,boolean,OnCancelListener)",1,1,1
"android.app.Dialog.Dialog(Context,int)",1,2,2
"android.app.Dialog.ListenersHandler.ListenersHandler(Dialog)",1,1,1
"android.app.Dialog.ListenersHandler.handleMessage(Message)",2,2,4
"android.app.Dialog.addContentView(View,LayoutParams)",1,1,1
"android.app.Dialog.cancel()",1,2,3
"android.app.Dialog.closeOptionsMenu()",1,1,1
"android.app.Dialog.dismiss()",1,2,2
"android.app.Dialog.dismissDialog()",2,1,3
"android.app.Dialog.dispatchKeyEvent(KeyEvent)",3,3,5
"android.app.Dialog.dispatchOnCreate(Bundle)",1,2,2
"android.app.Dialog.dispatchPopulateAccessibilityEvent(AccessibilityEvent)",1,1,2
"android.app.Dialog.dispatchTouchEvent(MotionEvent)",2,1,2
"android.app.Dialog.dispatchTrackballEvent(MotionEvent)",2,1,2
"android.app.Dialog.findViewById(int)",1,1,1
"android.app.Dialog.getActionBar()",1,1,1
"android.app.Dialog.getAssociatedActivity()",1,5,6
"android.app.Dialog.getContext()",1,1,1
"android.app.Dialog.getCurrentFocus()",1,2,2
"android.app.Dialog.getLayoutInflater()",1,1,1
"android.app.Dialog.getOwnerActivity()",1,1,1
"android.app.Dialog.getVolumeControlStream()",1,1,1
"android.app.Dialog.getWindow()",1,1,1
"android.app.Dialog.hide()",1,2,2
"android.app.Dialog.invalidateOptionsMenu()",1,1,1
"android.app.Dialog.isOutOfBounds(MotionEvent)",1,4,4
"android.app.Dialog.isShowing()",1,1,1
"android.app.Dialog.onActionModeFinished(ActionMode)",1,1,1
"android.app.Dialog.onActionModeStarted(ActionMode)",1,1,1
"android.app.Dialog.onAttachedToWindow()",1,1,1
"android.app.Dialog.onBackPressed()",1,2,2
"android.app.Dialog.onContentChanged()",1,1,1
"android.app.Dialog.onContextItemSelected(MenuItem)",1,1,1
"android.app.Dialog.onContextMenuClosed(Menu)",1,1,1
"android.app.Dialog.onCreate(Bundle)",1,1,1
"android.app.Dialog.onCreateContextMenu(ContextMenu,View,ContextMenuInfo)",1,1,1
"android.app.Dialog.onCreateOptionsMenu(Menu)",1,1,1
"android.app.Dialog.onCreatePanelMenu(int,Menu)",2,2,2
"android.app.Dialog.onCreatePanelView(int)",1,1,1
"android.app.Dialog.onDetachedFromWindow()",1,1,1
"android.app.Dialog.onKeyDown(int,KeyEvent)",2,2,2
"android.app.Dialog.onKeyLongPress(int,KeyEvent)",1,1,1
"android.app.Dialog.onKeyMultiple(int,int,KeyEvent)",1,1,1
"android.app.Dialog.onKeyUp(int,KeyEvent)",2,4,4
"android.app.Dialog.onMenuItemSelected(int,MenuItem)",1,1,1
"android.app.Dialog.onMenuOpened(int,Menu)",1,2,2
"android.app.Dialog.onOptionsItemSelected(MenuItem)",1,1,1
"android.app.Dialog.onOptionsMenuClosed(Menu)",1,1,1
"android.app.Dialog.onPanelClosed(int,Menu)",1,2,2
"android.app.Dialog.onPrepareOptionsMenu(Menu)",1,1,1
"android.app.Dialog.onPreparePanel(int,View,Menu)",2,3,4
"android.app.Dialog.onRestoreInstanceState(Bundle)",2,2,3
"android.app.Dialog.onSaveInstanceState()",1,2,2
"android.app.Dialog.onSearchRequested()",2,2,2
"android.app.Dialog.onStart()",1,1,1
"android.app.Dialog.onStop()",1,1,1
"android.app.Dialog.onTouchEvent(MotionEvent)",2,7,7
"android.app.Dialog.onTrackballEvent(MotionEvent)",1,1,1
"android.app.Dialog.onWindowAttributesChanged(LayoutParams)",1,2,2
"android.app.Dialog.onWindowFocusChanged(boolean)",1,1,1
"android.app.Dialog.onWindowStartingActionMode(Callback)",2,2,2
"android.app.Dialog.openContextMenu(View)",1,1,1
"android.app.Dialog.openOptionsMenu()",1,1,1
"android.app.Dialog.registerForContextMenu(View)",1,1,1
"android.app.Dialog.requestWindowFeature(int)",1,1,1
"android.app.Dialog.sendDismissMessage()",1,2,2
"android.app.Dialog.sendShowMessage()",1,2,2
"android.app.Dialog.setCancelMessage(Message)",1,1,1
"android.app.Dialog.setCancelable(boolean)",1,1,1
"android.app.Dialog.setCanceledOnTouchOutside(boolean)",1,1,3
"android.app.Dialog.setContentView(View)",1,1,1
"android.app.Dialog.setContentView(View,LayoutParams)",1,1,1
"android.app.Dialog.setContentView(int)",1,1,1
"android.app.Dialog.setDismissMessage(Message)",1,1,1
"android.app.Dialog.setFeatureDrawable(int,Drawable)",1,1,1
"android.app.Dialog.setFeatureDrawableAlpha(int,int)",1,1,1
"android.app.Dialog.setFeatureDrawableResource(int,int)",1,1,1
"android.app.Dialog.setFeatureDrawableUri(int,Uri)",1,1,1
"android.app.Dialog.setOnCancelListener(OnCancelListener)",1,2,2
"android.app.Dialog.setOnDismissListener(OnDismissListener)",1,2,2
"android.app.Dialog.setOnKeyListener(OnKeyListener)",1,1,1
"android.app.Dialog.setOnShowListener(OnShowListener)",1,2,2
"android.app.Dialog.setOwnerActivity(Activity)",1,1,1
"android.app.Dialog.setTitle(CharSequence)",1,1,1
"android.app.Dialog.setTitle(int)",1,1,1
"android.app.Dialog.setVolumeControlStream(int)",1,1,1
"android.app.Dialog.show()",2,7,8
"android.app.Dialog.takeKeyEvents(boolean)",1,1,1
"android.app.Dialog.unregisterForContextMenu(View)",1,1,1
"android.app.DialogFragment.DialogFragment()",1,1,1
"android.app.DialogFragment.dismiss()",1,1,1
"android.app.DialogFragment.dismissInternal(boolean)",1,4,4
"android.app.DialogFragment.getCancelable()",1,1,1
"android.app.DialogFragment.getDialog()",1,1,1
"android.app.DialogFragment.getShowsDialog()",1,1,1
"android.app.DialogFragment.getTheme()",1,1,1
"android.app.DialogFragment.onActivityCreated(Bundle)",5,6,8
"android.app.DialogFragment.onCancel(DialogInterface)",1,1,1
"android.app.DialogFragment.onCreate(Bundle)",1,2,2
"android.app.DialogFragment.onCreateDialog(Bundle)",1,1,1
"android.app.DialogFragment.onDestroyView()",1,2,2
"android.app.DialogFragment.onDismiss(DialogInterface)",1,2,2
"android.app.DialogFragment.onSaveInstanceState(Bundle)",1,8,8
"android.app.DialogFragment.onStart()",1,2,2
"android.app.DialogFragment.onStop()",1,2,2
"android.app.DialogFragment.setCancelable(boolean)",1,2,2
"android.app.DialogFragment.setShowsDialog(boolean)",1,1,1
"android.app.DialogFragment.setStyle(int,int)",1,1,4
"android.app.DialogFragment.show(Activity,String)",1,1,1
"android.app.DialogFragment.show(FragmentManager,String)",1,1,1
"android.app.DialogFragment.show(FragmentTransaction,String)",1,1,1
"android.app.DownloadManager.CursorTranslator.CursorTranslator(Cursor,Uri)",1,1,1
"android.app.DownloadManager.CursorTranslator.getErrorCode(int)",11,2,14
"android.app.DownloadManager.CursorTranslator.getInt(int)",1,1,1
"android.app.DownloadManager.CursorTranslator.getLocalUri()",3,2,4
"android.app.DownloadManager.CursorTranslator.getLong(int)",3,3,3
"android.app.DownloadManager.CursorTranslator.getPausedReason(int)",5,2,5
"android.app.DownloadManager.CursorTranslator.getReason(int)",4,4,4
"android.app.DownloadManager.CursorTranslator.getString(int)",1,2,2
"android.app.DownloadManager.CursorTranslator.translateStatus(int)",6,2,6
"android.app.DownloadManager.DownloadManager(ContentResolver,String)",1,1,1
"android.app.DownloadManager.Query.joinStrings(String,Iterable<String>)",1,3,3
"android.app.DownloadManager.Query.orderBy(String,int)",4,2,5
"android.app.DownloadManager.Query.runQuery(ContentResolver,String[],Uri)",1,9,10
"android.app.DownloadManager.Query.setFilterById(long...)",1,1,1
"android.app.DownloadManager.Query.setFilterByStatus(int)",1,1,1
"android.app.DownloadManager.Query.setOnlyIncludeVisibleInDownloadsUi(boolean)",1,1,1
"android.app.DownloadManager.Query.statusClause(String,int)",1,1,1
"android.app.DownloadManager.Request.Request(Uri)",3,3,5
"android.app.DownloadManager.Request.addRequestHeader(String,String)",3,1,4
"android.app.DownloadManager.Request.allowScanningByMediaScanner()",1,1,1
"android.app.DownloadManager.Request.encodeHttpHeaders(ContentValues)",1,2,2
"android.app.DownloadManager.Request.putIfNonNull(ContentValues,String,Object)",1,2,2
"android.app.DownloadManager.Request.setAllowedNetworkTypes(int)",1,1,1
"android.app.DownloadManager.Request.setAllowedOverRoaming(boolean)",1,1,1
"android.app.DownloadManager.Request.setDescription(CharSequence)",1,1,1
"android.app.DownloadManager.Request.setDestinationFromBase(File,String)",2,1,2
"android.app.DownloadManager.Request.setDestinationInExternalFilesDir(Context,String,String)",1,1,1
"android.app.DownloadManager.Request.setDestinationInExternalPublicDir(String,String)",4,4,4
"android.app.DownloadManager.Request.setDestinationToSystemCache()",1,1,1
"android.app.DownloadManager.Request.setDestinationUri(Uri)",1,1,1
"android.app.DownloadManager.Request.setMimeType(String)",1,1,1
"android.app.DownloadManager.Request.setNotificationVisibility(int)",1,1,1
"android.app.DownloadManager.Request.setShowRunningNotification(boolean)",1,2,2
"android.app.DownloadManager.Request.setTitle(CharSequence)",1,1,1
"android.app.DownloadManager.Request.setVisibleInDownloadsUi(boolean)",1,1,1
"android.app.DownloadManager.Request.toContentValues(String)",1,3,5
"android.app.DownloadManager.enqueue(Request)",1,1,1
"android.app.DownloadManager.getDownloadUri(long)",1,1,1
"android.app.DownloadManager.getMimeTypeForDownloadedFile(long)",3,3,4
"android.app.DownloadManager.getUriForDownloadedFile(long)",5,5,9
"android.app.DownloadManager.getWhereArgsForIds(long[])",1,2,2
"android.app.DownloadManager.getWhereClauseForIds(long[])",1,3,3
"android.app.DownloadManager.markRowDeleted(long...)",3,2,4
"android.app.DownloadManager.openDownloadedFile(long)",1,1,1
"android.app.DownloadManager.query(Query)",2,1,2
"android.app.DownloadManager.remove(long...)",1,1,1
"android.app.DownloadManager.restartDownload(long...)",3,3,4
"android.app.DownloadManager.setAccessAllDownloads(boolean)",1,1,2
"android.app.ExpandableListActivity.ensureList()",2,1,2
"android.app.ExpandableListActivity.getExpandableListAdapter()",1,1,1
"android.app.ExpandableListActivity.getExpandableListView()",1,1,1
"android.app.ExpandableListActivity.getSelectedId()",1,1,1
"android.app.ExpandableListActivity.getSelectedPosition()",1,1,1
"android.app.ExpandableListActivity.onChildClick(ExpandableListView,View,int,int,long)",1,1,1
"android.app.ExpandableListActivity.onContentChanged()",2,3,4
"android.app.ExpandableListActivity.onCreateContextMenu(ContextMenu,View,ContextMenuInfo)",1,1,1
"android.app.ExpandableListActivity.onGroupCollapse(int)",1,1,1
"android.app.ExpandableListActivity.onGroupExpand(int)",1,1,1
"android.app.ExpandableListActivity.onRestoreInstanceState(Bundle)",1,1,1
"android.app.ExpandableListActivity.setListAdapter(ExpandableListAdapter)",1,1,1
"android.app.ExpandableListActivity.setSelectedChild(int,int,boolean)",1,1,1
"android.app.ExpandableListActivity.setSelectedGroup(int)",1,1,1
"android.app.Fragment.Fragment()",1,1,1
"android.app.Fragment.InstantiationException.InstantiationException(String,Exception)",1,1,1
"android.app.Fragment.clearIndex()",1,1,1
"android.app.Fragment.dump(String,FileDescriptor,PrintWriter,String[])",1,13,13
"android.app.Fragment.equals(Object)",1,1,1
"android.app.Fragment.getActivity()",1,1,1
"android.app.Fragment.getArguments()",1,1,1
"android.app.Fragment.getFragmentManager()",1,1,1
"android.app.Fragment.getId()",1,1,1
"android.app.Fragment.getLoaderManager()",2,1,2
"android.app.Fragment.getResources()",1,1,1
"android.app.Fragment.getRetainInstance()",1,1,1
"android.app.Fragment.getString(int)",1,1,1
"android.app.Fragment.getString(int,Object...)",1,1,1
"android.app.Fragment.getTag()",1,1,1
"android.app.Fragment.getTargetFragment()",1,1,1
"android.app.Fragment.getTargetRequestCode()",1,1,1
"android.app.Fragment.getText(int)",1,1,1
"android.app.Fragment.getView()",1,1,1
"android.app.Fragment.hashCode()",1,1,1
"android.app.Fragment.instantiate(Context,String)",1,1,1
"android.app.Fragment.instantiate(Context,String,Bundle)",1,3,6
"android.app.Fragment.isAdded()",1,2,2
"android.app.Fragment.isHidden()",1,1,1
"android.app.Fragment.isInLayout()",1,1,1
"android.app.Fragment.isResumed()",1,1,1
"android.app.Fragment.isVisible()",1,5,5
"android.app.Fragment.onActivityCreated(Bundle)",1,1,1
"android.app.Fragment.onActivityResult(int,int,Intent)",1,1,1
"android.app.Fragment.onAttach(Activity)",1,1,1
"android.app.Fragment.onConfigurationChanged(Configuration)",1,1,1
"android.app.Fragment.onContextItemSelected(MenuItem)",1,1,1
"android.app.Fragment.onCreate(Bundle)",1,1,1
"android.app.Fragment.onCreateAnimator(int,boolean,int)",1,1,1
"android.app.Fragment.onCreateContextMenu(ContextMenu,View,ContextMenuInfo)",1,1,1
"android.app.Fragment.onCreateOptionsMenu(Menu,MenuInflater)",1,1,1
"android.app.Fragment.onCreateView(LayoutInflater,ViewGroup,Bundle)",1,1,1
"android.app.Fragment.onDestroy()",1,3,3
"android.app.Fragment.onDestroyOptionsMenu()",1,1,1
"android.app.Fragment.onDestroyView()",1,1,1
"android.app.Fragment.onDetach()",1,1,1
"android.app.Fragment.onHiddenChanged(boolean)",1,1,1
"android.app.Fragment.onInflate(AttributeSet,Bundle)",1,1,1
"android.app.Fragment.onLowMemory()",1,1,1
"android.app.Fragment.onOptionsItemSelected(MenuItem)",1,1,1
"android.app.Fragment.onOptionsMenuClosed(Menu)",1,1,1
"android.app.Fragment.onPause()",1,1,1
"android.app.Fragment.onPrepareOptionsMenu(Menu)",1,1,1
"android.app.Fragment.onResume()",1,1,1
"android.app.Fragment.onSaveInstanceState(Bundle)",1,1,1
"android.app.Fragment.onStart()",1,4,4
"android.app.Fragment.onStop()",1,1,1
"android.app.Fragment.performStop()",1,5,6
"android.app.Fragment.registerForContextMenu(View)",1,1,1
"android.app.Fragment.restoreViewState()",1,2,2
"android.app.Fragment.setArguments(Bundle)",2,1,2
"android.app.Fragment.setHasOptionsMenu(boolean)",1,4,4
"android.app.Fragment.setIndex(int)",1,1,1
"android.app.Fragment.setRetainInstance(boolean)",1,1,1
"android.app.Fragment.setTargetFragment(Fragment,int)",1,1,1
"android.app.Fragment.startActivity(Intent)",1,1,1
"android.app.Fragment.startActivityForResult(Intent,int)",1,1,1
"android.app.Fragment.toString()",1,4,4
"android.app.Fragment.unregisterForContextMenu(View)",1,1,1
"android.app.FragmentBreadCrumbs.FragmentBreadCrumbs(Context)",1,1,1
"android.app.FragmentBreadCrumbs.FragmentBreadCrumbs(Context,AttributeSet)",1,1,1
"android.app.FragmentBreadCrumbs.FragmentBreadCrumbs(Context,AttributeSet,int)",1,1,1
"android.app.FragmentBreadCrumbs.createBackStackEntry(CharSequence,CharSequence)",2,1,2
"android.app.FragmentBreadCrumbs.getPreEntry(int)",2,1,3
"android.app.FragmentBreadCrumbs.getPreEntryCount()",1,1,3
"android.app.FragmentBreadCrumbs.onBackStackChanged()",1,1,1
"android.app.FragmentBreadCrumbs.onLayout(boolean,int,int,int,int)",1,2,2
"android.app.FragmentBreadCrumbs.onMeasure(int,int)",1,3,3
"android.app.FragmentBreadCrumbs.setActivity(Activity)",1,1,1
"android.app.FragmentBreadCrumbs.setMaxVisible(int)",2,1,2
"android.app.FragmentBreadCrumbs.setParentTitle(CharSequence,CharSequence,OnClickListener)",1,1,1
"android.app.FragmentBreadCrumbs.setTitle(CharSequence,CharSequence)",1,1,1
"android.app.FragmentBreadCrumbs.updateCrumbs()",1,11,14
"android.app.FragmentManager.enableDebugLogging(boolean)",1,1,1
"android.app.FragmentManagerImpl.addBackStackState(BackStackRecord)",1,1,2
"android.app.FragmentManagerImpl.addFragment(Fragment,boolean)",1,3,5
"android.app.FragmentManagerImpl.addOnBackStackChangedListener(OnBackStackChangedListener)",1,1,2
"android.app.FragmentManagerImpl.allocBackStackIndex(BackStackRecord)",2,5,6
"android.app.FragmentManagerImpl.attachActivity(Activity)",2,1,2
"android.app.FragmentManagerImpl.checkStateLoss()",3,1,3
"android.app.FragmentManagerImpl.countBackStackEntries()",1,2,2
"android.app.FragmentManagerImpl.dispatchActivityCreated()",1,1,1
"android.app.FragmentManagerImpl.dispatchConfigurationChanged(Configuration)",1,4,4
"android.app.FragmentManagerImpl.dispatchContextItemSelected(MenuItem)",5,4,6
"android.app.FragmentManagerImpl.dispatchCreate()",1,1,1
"android.app.FragmentManagerImpl.dispatchCreateOptionsMenu(Menu,MenuInflater)",1,8,11
"android.app.FragmentManagerImpl.dispatchDestroy()",1,1,1
"android.app.FragmentManagerImpl.dispatchLowMemory()",1,4,4
"android.app.FragmentManagerImpl.dispatchOptionsItemSelected(MenuItem)",5,4,7
"android.app.FragmentManagerImpl.dispatchOptionsMenuClosed(Menu)",1,4,6
"android.app.FragmentManagerImpl.dispatchPause()",1,1,1
"android.app.FragmentManagerImpl.dispatchPrepareOptionsMenu(Menu)",1,4,6
"android.app.FragmentManagerImpl.dispatchResume()",1,1,1
"android.app.FragmentManagerImpl.dispatchStart()",1,1,1
"android.app.FragmentManagerImpl.dispatchStop()",1,1,1
"android.app.FragmentManagerImpl.dump(String,FileDescriptor,PrintWriter,String[])",1,26,26
"android.app.FragmentManagerImpl.enqueueAction(Runnable,boolean)",2,3,5
"android.app.FragmentManagerImpl.execPendingActions()",5,4,9
"android.app.FragmentManagerImpl.executePendingTransactions()",1,1,1
"android.app.FragmentManagerImpl.findFragmentById(int)",6,4,8
"android.app.FragmentManagerImpl.findFragmentByTag(String)",6,6,9
"android.app.FragmentManagerImpl.findFragmentByWho(String)",4,4,6
"android.app.FragmentManagerImpl.freeBackStackIndex(int)",1,2,3
"android.app.FragmentManagerImpl.getBackStackEntry(int)",1,1,1
"android.app.FragmentManagerImpl.getFragment(Bundle,String)",4,1,4
"android.app.FragmentManagerImpl.hideFragment(Fragment,int,int)",1,5,7
"android.app.FragmentManagerImpl.loadAnimator(Fragment,int,boolean,int)",8,4,10
"android.app.FragmentManagerImpl.makeActive(Fragment)",2,3,5
"android.app.FragmentManagerImpl.makeInactive(Fragment)",2,2,4
"android.app.FragmentManagerImpl.moveToState(Fragment)",1,1,1
"android.app.FragmentManagerImpl.moveToState(Fragment,int,int,int)",33,50,66
"android.app.FragmentManagerImpl.moveToState(int,boolean)",1,1,1
"android.app.FragmentManagerImpl.moveToState(int,int,int,boolean)",3,5,10
"android.app.FragmentManagerImpl.noteStateNotSaved()",1,1,1
"android.app.FragmentManagerImpl.openTransaction()",1,1,1
"android.app.FragmentManagerImpl.popBackStack()",1,1,1
"android.app.FragmentManagerImpl.popBackStack(String,int)",1,1,1
"android.app.FragmentManagerImpl.popBackStack(int,int)",2,1,2
"android.app.FragmentManagerImpl.popBackStackImmediate()",1,1,1
"android.app.FragmentManagerImpl.popBackStackImmediate(String,int)",1,1,1
"android.app.FragmentManagerImpl.popBackStackImmediate(int,int)",2,1,2
"android.app.FragmentManagerImpl.popBackStackState(Handler,String,int,int)",13,12,24
"android.app.FragmentManagerImpl.putFragment(Bundle,String,Fragment)",2,1,2
"android.app.FragmentManagerImpl.removeFragment(Fragment,int,int)",1,3,5
"android.app.FragmentManagerImpl.removeOnBackStackChangedListener(OnBackStackChangedListener)",1,2,2
"android.app.FragmentManagerImpl.reportBackStackChanged()",1,3,3
"android.app.FragmentManagerImpl.restoreAllState(Parcelable,ArrayList<Fragment>)",6,22,26
"android.app.FragmentManagerImpl.retainNonConfig()",1,4,6
"android.app.FragmentManagerImpl.reverseTransit(int)",2,2,5
"android.app.FragmentManagerImpl.saveAllState()",3,20,26
"android.app.FragmentManagerImpl.saveFragmentViewState(Fragment)",2,1,4
"android.app.FragmentManagerImpl.setBackStackIndex(int,BackStackRecord)",1,6,8
"android.app.FragmentManagerImpl.showFragment(Fragment,int,int)",1,5,7
"android.app.FragmentManagerImpl.toString()",1,1,1
"android.app.FragmentManagerImpl.transitToStyleIndex(int,boolean)",2,2,9
"android.app.FragmentManagerState.FragmentManagerState()",1,1,1
"android.app.FragmentManagerState.FragmentManagerState(Parcel)",1,1,1
"android.app.FragmentManagerState.describeContents()",1,1,1
"android.app.FragmentManagerState.writeToParcel(Parcel,int)",1,1,1
"android.app.FragmentState.FragmentState(Fragment)",1,1,1
"android.app.FragmentState.FragmentState(Parcel)",1,1,1
"android.app.FragmentState.describeContents()",1,1,1
"android.app.FragmentState.instantiate(Activity)",2,3,4
"android.app.FragmentState.writeToParcel(Parcel,int)",1,1,3
"android.app.FullBackupAgent.onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)",1,8,8
"android.app.FullBackupAgent.onRestore(BackupDataInput,int,ParcelFileDescriptor)",1,1,1
"android.app.IActivityManager.ContentProviderHolder.ContentProviderHolder(Parcel)",1,1,1
"android.app.IActivityManager.ContentProviderHolder.ContentProviderHolder(ProviderInfo)",1,1,1
"android.app.IActivityManager.ContentProviderHolder.describeContents()",1,1,1
"android.app.IActivityManager.ContentProviderHolder.writeToParcel(Parcel,int)",1,2,3
"android.app.IActivityManager.WaitResult.WaitResult()",1,1,1
"android.app.IActivityManager.WaitResult.WaitResult(Parcel)",1,1,1
"android.app.IActivityManager.WaitResult.describeContents()",1,1,1
"android.app.IActivityManager.WaitResult.writeToParcel(Parcel,int)",1,1,2
"android.app.Instrumentation.ActivityGoing.ActivityGoing(ActivityWaiter)",1,1,1
"android.app.Instrumentation.ActivityGoing.queueIdle()",1,1,1
"android.app.Instrumentation.ActivityMonitor.ActivityMonitor(IntentFilter,ActivityResult,boolean)",1,1,1
"android.app.Instrumentation.ActivityMonitor.ActivityMonitor(String,ActivityResult,boolean)",1,1,1
"android.app.Instrumentation.ActivityMonitor.getFilter()",1,1,1
"android.app.Instrumentation.ActivityMonitor.getHits()",1,1,1
"android.app.Instrumentation.ActivityMonitor.getLastActivity()",1,1,1
"android.app.Instrumentation.ActivityMonitor.getResult()",1,1,1
"android.app.Instrumentation.ActivityMonitor.isBlocking()",1,1,1
"android.app.Instrumentation.ActivityMonitor.match(Context,Activity,Intent)",4,7,9
"android.app.Instrumentation.ActivityMonitor.waitForActivity()",1,2,3
"android.app.Instrumentation.ActivityMonitor.waitForActivityWithTimeout(long)",2,1,3
"android.app.Instrumentation.ActivityResult.ActivityResult(int,Intent)",1,1,1
"android.app.Instrumentation.ActivityResult.getResultCode()",1,1,1
"android.app.Instrumentation.ActivityResult.getResultData()",1,1,1
"android.app.Instrumentation.ActivityWaiter.ActivityWaiter(Intent)",1,1,1
"android.app.Instrumentation.EmptyRunnable.run()",1,1,1
"android.app.Instrumentation.Idler.Idler(Runnable)",1,1,1
"android.app.Instrumentation.Idler.queueIdle()",1,2,2
"android.app.Instrumentation.Idler.waitForIdle()",1,2,3
"android.app.Instrumentation.Instrumentation()",1,1,1
"android.app.Instrumentation.InstrumentationThread.InstrumentationThread(String)",1,1,1
"android.app.Instrumentation.InstrumentationThread.run()",1,3,3
"android.app.Instrumentation.SyncRunnable.SyncRunnable(Runnable)",1,1,1
"android.app.Instrumentation.SyncRunnable.run()",1,1,1
"android.app.Instrumentation.SyncRunnable.waitForComplete()",1,2,3
"android.app.Instrumentation.addMonitor(ActivityMonitor)",1,1,2
"android.app.Instrumentation.addMonitor(IntentFilter,ActivityResult,boolean)",1,1,1
"android.app.Instrumentation.addMonitor(String,ActivityResult,boolean)",1,1,1
"android.app.Instrumentation.addValue(String,int,Bundle)",1,3,3
"android.app.Instrumentation.callActivityOnCreate(Activity,Bundle)",1,6,6
"android.app.Instrumentation.callActivityOnDestroy(Activity)",1,3,3
"android.app.Instrumentation.callActivityOnNewIntent(Activity,Intent)",1,1,1
"android.app.Instrumentation.callActivityOnPause(Activity)",1,1,1
"android.app.Instrumentation.callActivityOnPostCreate(Activity,Bundle)",1,1,1
"android.app.Instrumentation.callActivityOnRestart(Activity)",1,1,1
"android.app.Instrumentation.callActivityOnRestoreInstanceState(Activity,Bundle)",1,1,1
"android.app.Instrumentation.callActivityOnResume(Activity)",1,3,3
"android.app.Instrumentation.callActivityOnSaveInstanceState(Activity,Bundle)",1,1,1
"android.app.Instrumentation.callActivityOnStart(Activity)",1,1,1
"android.app.Instrumentation.callActivityOnStop(Activity)",1,1,1
"android.app.Instrumentation.callActivityOnUserLeaving(Activity)",1,1,1
"android.app.Instrumentation.callApplicationOnCreate(Application)",1,1,1
"android.app.Instrumentation.checkMonitorHit(ActivityMonitor,int)",2,1,2
"android.app.Instrumentation.checkStartActivityResult(int,Object)",8,4,9
"android.app.Instrumentation.endPerformanceSnapshot()",1,2,2
"android.app.Instrumentation.execStartActivities(Context,IBinder,IBinder,Activity,Intent[])",5,5,7
"android.app.Instrumentation.execStartActivity(Context,IBinder,IBinder,Activity,Intent,int)",5,6,8
"android.app.Instrumentation.execStartActivity(Context,IBinder,IBinder,Fragment,Intent,int)",5,6,8
"android.app.Instrumentation.finish(int,Bundle)",1,3,3
"android.app.Instrumentation.getAllocCounts()",1,1,1
"android.app.Instrumentation.getBinderCounts()",1,1,1
"android.app.Instrumentation.getComponentName()",1,1,1
"android.app.Instrumentation.getContext()",1,1,1
"android.app.Instrumentation.getTargetContext()",1,1,1
"android.app.Instrumentation.init(ActivityThread,Context,Context,ComponentName,IInstrumentationWatcher)",1,1,1
"android.app.Instrumentation.invokeContextMenuAction(Activity,int,int)",1,2,2
"android.app.Instrumentation.invokeMenuActionSync(Activity,int,int)",1,1,1
"android.app.Instrumentation.isProfiling()",1,1,1
"android.app.Instrumentation.newActivity(Class<?>,Context,IBinder,Application,Intent,ActivityInfo,CharSequence,Activity,String,Object)",1,1,1
"android.app.Instrumentation.newActivity(ClassLoader,String,Intent)",1,1,1
"android.app.Instrumentation.newApplication(Class<?>,Context)",1,1,1
"android.app.Instrumentation.newApplication(ClassLoader,String,Context)",1,1,1
"android.app.Instrumentation.onCreate(Bundle)",1,1,1
"android.app.Instrumentation.onDestroy()",1,1,1
"android.app.Instrumentation.onException(Object,Throwable)",1,1,1
"android.app.Instrumentation.onStart()",1,1,1
"android.app.Instrumentation.removeMonitor(ActivityMonitor)",1,1,1
"android.app.Instrumentation.runOnMainSync(Runnable)",1,1,1
"android.app.Instrumentation.sendCharacterSync(int)",1,1,1
"android.app.Instrumentation.sendKeyDownUpSync(int)",1,1,1
"android.app.Instrumentation.sendKeySync(KeyEvent)",1,1,2
"android.app.Instrumentation.sendPointerSync(MotionEvent)",1,1,2
"android.app.Instrumentation.sendStatus(int,Bundle)",1,2,3
"android.app.Instrumentation.sendStringSync(String)",2,3,4
"android.app.Instrumentation.sendTrackballEventSync(MotionEvent)",1,1,2
"android.app.Instrumentation.setAutomaticPerformanceSnapshots()",1,1,1
"android.app.Instrumentation.setInTouchMode(boolean)",1,1,2
"android.app.Instrumentation.start()",2,1,2
"android.app.Instrumentation.startActivitySync(Intent)",3,2,6
"android.app.Instrumentation.startAllocCounting()",1,1,1
"android.app.Instrumentation.startPerformanceSnapshot()",1,2,2
"android.app.Instrumentation.startProfiling()",1,2,2
"android.app.Instrumentation.stopAllocCounting()",1,1,1
"android.app.Instrumentation.stopProfiling()",1,2,2
"android.app.Instrumentation.validateNotAppThread()",2,1,2
"android.app.Instrumentation.waitForIdle(Runnable)",1,1,1
"android.app.Instrumentation.waitForIdleSync()",1,1,1
"android.app.Instrumentation.waitForMonitor(ActivityMonitor)",1,1,1
"android.app.Instrumentation.waitForMonitorWithTimeout(ActivityMonitor,long)",1,1,1
"android.app.IntentReceiverLeaked.IntentReceiverLeaked(String)",1,1,1
"android.app.IntentService.IntentService(String)",1,1,1
"android.app.IntentService.ServiceHandler.ServiceHandler(Looper)",1,1,1
"android.app.IntentService.ServiceHandler.handleMessage(Message)",1,1,1
"android.app.IntentService.onBind(Intent)",1,1,1
"android.app.IntentService.onCreate()",1,1,1
"android.app.IntentService.onDestroy()",1,1,1
"android.app.IntentService.onStart(Intent,int)",1,1,1
"android.app.IntentService.onStartCommand(Intent,int,int)",1,1,2
"android.app.IntentService.setIntentRedelivery(boolean)",1,1,1
"android.app.KeyguardManager.KeyguardLock.KeyguardLock(String)",1,1,1
"android.app.KeyguardManager.KeyguardLock.disableKeyguard()",1,1,2
"android.app.KeyguardManager.KeyguardLock.reenableKeyguard()",1,1,2
"android.app.KeyguardManager.KeyguardManager()",1,1,1
"android.app.KeyguardManager.exitKeyguardSecurely(OnKeyguardExitResult)",1,1,2
"android.app.KeyguardManager.inKeyguardRestrictedInputMode()",1,1,2
"android.app.KeyguardManager.newKeyguardLock(String)",1,1,1
"android.app.LauncherActivity.ActivityAdapter.ActivityAdapter(IconResizer)",1,1,1
"android.app.LauncherActivity.ActivityAdapter.ArrayFilter.performFiltering(CharSequence)",5,6,7
"android.app.LauncherActivity.ActivityAdapter.ArrayFilter.publishResults(CharSequence,FilterResults)",1,2,2
"android.app.LauncherActivity.ActivityAdapter.bindView(View,ListItem)",1,3,3
"android.app.LauncherActivity.ActivityAdapter.getCount()",1,2,2
"android.app.LauncherActivity.ActivityAdapter.getFilter()",1,1,2
"android.app.LauncherActivity.ActivityAdapter.getItem(int)",1,1,1
"android.app.LauncherActivity.ActivityAdapter.getItemId(int)",1,1,1
"android.app.LauncherActivity.ActivityAdapter.getView(int,View,ViewGroup)",1,2,2
"android.app.LauncherActivity.ActivityAdapter.intentForPosition(int)",2,2,3
"android.app.LauncherActivity.ActivityAdapter.itemForPosition(int)",2,1,2
"android.app.LauncherActivity.IconResizer.IconResizer()",1,1,1
"android.app.LauncherActivity.IconResizer.createIconThumbnail(Drawable)",1,5,11
"android.app.LauncherActivity.ListItem.ListItem()",1,1,1
"android.app.LauncherActivity.ListItem.ListItem(PackageManager,ResolveInfo,IconResizer)",1,2,5
"android.app.LauncherActivity.getTargetIntent()",1,1,1
"android.app.LauncherActivity.intentForPosition(int)",1,1,1
"android.app.LauncherActivity.itemForPosition(int)",1,1,1
"android.app.LauncherActivity.makeListItems()",1,2,2
"android.app.LauncherActivity.onCreate(Bundle)",1,1,1
"android.app.LauncherActivity.onEvaluateShowIcons()",1,1,1
"android.app.LauncherActivity.onListItemClick(ListView,View,int,long)",1,1,1
"android.app.LauncherActivity.onQueryPackageManager(Intent)",1,1,1
"android.app.LauncherActivity.onSetContentView()",1,1,1
"android.app.LauncherActivity.setTitle(CharSequence)",1,1,1
"android.app.LauncherActivity.setTitle(int)",1,1,1
"android.app.LauncherActivity.updateAlertTitle()",1,2,2
"android.app.LauncherActivity.updateButtonText()",1,2,2
"android.app.ListActivity.ensureList()",2,1,2
"android.app.ListActivity.getListAdapter()",1,1,1
"android.app.ListActivity.getListView()",1,1,1
"android.app.ListActivity.getSelectedItemId()",1,1,1
"android.app.ListActivity.getSelectedItemPosition()",1,1,1
"android.app.ListActivity.onContentChanged()",2,3,4
"android.app.ListActivity.onDestroy()",1,1,1
"android.app.ListActivity.onListItemClick(ListView,View,int,long)",1,1,1
"android.app.ListActivity.onRestoreInstanceState(Bundle)",1,1,1
"android.app.ListActivity.setListAdapter(ListAdapter)",1,1,1
"android.app.ListActivity.setSelection(int)",1,1,1
"android.app.ListFragment.ListFragment()",1,1,1
"android.app.ListFragment.ensureList()",6,6,10
"android.app.ListFragment.getListAdapter()",1,1,1
"android.app.ListFragment.getListView()",1,1,1
"android.app.ListFragment.getSelectedItemId()",1,1,1
"android.app.ListFragment.getSelectedItemPosition()",1,1,1
"android.app.ListFragment.onActivityCreated(Bundle)",1,1,1
"android.app.ListFragment.onCreateView(LayoutInflater,ViewGroup,Bundle)",1,1,1
"android.app.ListFragment.onDestroyView()",1,1,1
"android.app.ListFragment.onListItemClick(ListView,View,int,long)",1,1,1
"android.app.ListFragment.setEmptyText(CharSequence)",2,2,3
"android.app.ListFragment.setListAdapter(ListAdapter)",1,3,4
"android.app.ListFragment.setListShown(boolean)",1,1,1
"android.app.ListFragment.setListShown(boolean,boolean)",3,4,6
"android.app.ListFragment.setListShownNoAnimation(boolean)",1,1,1
"android.app.ListFragment.setSelection(int)",1,1,1
"android.app.LoadedApk.LoadedApk(ActivityThread,ApplicationInfo,ActivityThread,ClassLoader,boolean,boolean)",1,3,5
"android.app.LoadedApk.LoadedApk(ActivityThread,String,Context,ApplicationInfo)",1,1,2
"android.app.LoadedApk.ReceiverDispatcher.Args.Args(Intent,int,String,Bundle,boolean,boolean)",1,1,2
"android.app.LoadedApk.ReceiverDispatcher.Args.run()",3,10,13
"android.app.LoadedApk.ReceiverDispatcher.InnerReceiver.InnerReceiver(ReceiverDispatcher,boolean)",1,1,2
"android.app.LoadedApk.ReceiverDispatcher.InnerReceiver.performReceive(Intent,int,String,Bundle,boolean,boolean)",1,5,6
"android.app.LoadedApk.ReceiverDispatcher.ReceiverDispatcher(BroadcastReceiver,Context,Handler,Instrumentation,boolean)",2,1,2
"android.app.LoadedApk.ReceiverDispatcher.getIIntentReceiver()",1,1,1
"android.app.LoadedApk.ReceiverDispatcher.getIntentReceiver()",1,1,1
"android.app.LoadedApk.ReceiverDispatcher.getLocation()",1,1,1
"android.app.LoadedApk.ReceiverDispatcher.getUnregisterLocation()",1,1,1
"android.app.LoadedApk.ReceiverDispatcher.performReceive(Intent,int,String,Bundle,boolean,boolean)",1,5,6
"android.app.LoadedApk.ReceiverDispatcher.setUnregisterLocation(RuntimeException)",1,1,1
"android.app.LoadedApk.ReceiverDispatcher.validate(Context,Handler)",3,1,3
"android.app.LoadedApk.ServiceDispatcher.DeathMonitor.DeathMonitor(ComponentName,IBinder)",1,1,1
"android.app.LoadedApk.ServiceDispatcher.DeathMonitor.binderDied()",1,1,1
"android.app.LoadedApk.ServiceDispatcher.InnerConnection.InnerConnection(ServiceDispatcher)",1,1,1
"android.app.LoadedApk.ServiceDispatcher.InnerConnection.connected(ComponentName,IBinder)",1,2,2
"android.app.LoadedApk.ServiceDispatcher.RunConnection.RunConnection(ComponentName,IBinder,int)",1,1,1
"android.app.LoadedApk.ServiceDispatcher.RunConnection.run()",1,3,3
"android.app.LoadedApk.ServiceDispatcher.ServiceDispatcher(ServiceConnection,Context,Handler,int)",1,1,1
"android.app.LoadedApk.ServiceDispatcher.connected(ComponentName,IBinder)",1,2,2
"android.app.LoadedApk.ServiceDispatcher.death(ComponentName,IBinder)",2,2,4
"android.app.LoadedApk.ServiceDispatcher.doConnected(ComponentName,IBinder)",3,6,8
"android.app.LoadedApk.ServiceDispatcher.doDeath(ComponentName,IBinder)",1,1,1
"android.app.LoadedApk.ServiceDispatcher.doForget()",1,2,2
"android.app.LoadedApk.ServiceDispatcher.getFlags()",1,1,1
"android.app.LoadedApk.ServiceDispatcher.getIServiceConnection()",1,1,1
"android.app.LoadedApk.ServiceDispatcher.getLocation()",1,1,1
"android.app.LoadedApk.ServiceDispatcher.getServiceConnection()",1,1,1
"android.app.LoadedApk.ServiceDispatcher.getUnbindLocation()",1,1,1
"android.app.LoadedApk.ServiceDispatcher.setUnbindLocation(RuntimeException)",1,1,1
"android.app.LoadedApk.ServiceDispatcher.validate(Context,Handler)",3,1,3
"android.app.LoadedApk.WarningContextClassLoader.clearAssertionStatus()",1,1,1
"android.app.LoadedApk.WarningContextClassLoader.getResource(String)",1,1,1
"android.app.LoadedApk.WarningContextClassLoader.getResourceAsStream(String)",1,1,1
"android.app.LoadedApk.WarningContextClassLoader.getResources(String)",1,1,1
"android.app.LoadedApk.WarningContextClassLoader.loadClass(String)",1,1,1
"android.app.LoadedApk.WarningContextClassLoader.setClassAssertionStatus(String,boolean)",1,1,1
"android.app.LoadedApk.WarningContextClassLoader.setDefaultAssertionStatus(boolean)",1,1,1
"android.app.LoadedApk.WarningContextClassLoader.setPackageAssertionStatus(String,boolean)",1,1,1
"android.app.LoadedApk.WarningContextClassLoader.warn(String)",2,1,2
"android.app.LoadedApk.combineLibs(String[],String[])",4,8,9
"android.app.LoadedApk.forgetReceiverDispatcher(Context,BroadcastReceiver)",6,8,9
"android.app.LoadedApk.forgetServiceDispatcher(Context,ServiceConnection)",6,8,9
"android.app.LoadedApk.getAppDir()",1,1,1
"android.app.LoadedApk.getApplication()",1,1,1
"android.app.LoadedApk.getApplicationInfo()",1,1,1
"android.app.LoadedApk.getAssets(ActivityThread)",1,1,1
"android.app.LoadedApk.getClassLoader()",2,9,11
"android.app.LoadedApk.getDataDir()",1,1,1
"android.app.LoadedApk.getDataDirFile()",1,1,1
"android.app.LoadedApk.getLibrariesFor(String)",2,1,3
"android.app.LoadedApk.getPackageName()",1,1,1
"android.app.LoadedApk.getReceiverDispatcher(BroadcastReceiver,Context,Handler,Instrumentation,boolean)",1,6,6
"android.app.LoadedApk.getResDir()",1,1,1
"android.app.LoadedApk.getResources(ActivityThread)",1,2,2
"android.app.LoadedApk.getServiceDispatcher(ServiceConnection,Context,Handler,int)",1,4,4
"android.app.LoadedApk.initializeJavaContextClassLoader()",1,2,5
"android.app.LoadedApk.isSecurityViolation()",1,1,1
"android.app.LoadedApk.makeApplication(boolean,Instrumentation)",5,6,9
"android.app.LoadedApk.removeContextRegistrations(Context,String,String)",1,5,7
"android.app.LoaderManager.enableDebugLogging(boolean)",1,1,1
"android.app.LoaderManager.stopLoader(int)",1,1,1
"android.app.LoaderManagerImpl.LoaderInfo.LoaderInfo(int,Bundle,LoaderCallbacks<Object>)",1,1,1
"android.app.LoaderManagerImpl.LoaderInfo.callOnLoadFinished(Loader<Object>,Object)",1,3,5
"android.app.LoaderManagerImpl.LoaderInfo.destroy()",1,6,11
"android.app.LoaderManagerImpl.LoaderInfo.dump(String,FileDescriptor,PrintWriter,String[])",1,2,2
"android.app.LoaderManagerImpl.LoaderInfo.finishRetain()",1,6,7
"android.app.LoaderManagerImpl.LoaderInfo.onLoadComplete(Loader<Object>,Object)",2,7,8
"android.app.LoaderManagerImpl.LoaderInfo.retain()",1,2,2
"android.app.LoaderManagerImpl.LoaderInfo.start()",5,6,11
"android.app.LoaderManagerImpl.LoaderInfo.stop()",1,4,5
"android.app.LoaderManagerImpl.LoaderInfo.toString()",1,1,1
"android.app.LoaderManagerImpl.LoaderManagerImpl(Activity,boolean)",1,1,1
"android.app.LoaderManagerImpl.createLoader(int,Bundle,LoaderCallbacks<Object>)",1,2,2
"android.app.LoaderManagerImpl.destroyLoader(int)",1,4,4
"android.app.LoaderManagerImpl.doDestroy()",1,6,6
"android.app.LoaderManagerImpl.doRetain()",2,4,4
"android.app.LoaderManagerImpl.doStart()",2,4,4
"android.app.LoaderManagerImpl.doStop()",2,4,4
"android.app.LoaderManagerImpl.dump(String,FileDescriptor,PrintWriter,String[])",1,5,5
"android.app.LoaderManagerImpl.finishRetain()",1,4,4
"android.app.LoaderManagerImpl.getLoader(int)",2,2,2
"android.app.LoaderManagerImpl.initLoader(int,Bundle,LoaderCallbacks<D>)",1,6,7
"android.app.LoaderManagerImpl.restartLoader(int,Bundle,LoaderCallbacks<D>)",1,8,8
"android.app.LoaderManagerImpl.toString()",1,1,1
"android.app.LoaderManagerImpl.updateActivity(Activity)",1,1,1
"android.app.LocalActivityManager.LocalActivityManager(Activity,boolean)",1,1,1
"android.app.LocalActivityManager.LocalActivityRecord.LocalActivityRecord(String,Intent)",1,1,1
"android.app.LocalActivityManager.destroyActivity(String,boolean)",1,3,3
"android.app.LocalActivityManager.dispatchCreate(Bundle)",1,5,5
"android.app.LocalActivityManager.dispatchDestroy(boolean)",1,3,3
"android.app.LocalActivityManager.dispatchPause(boolean)",1,5,6
"android.app.LocalActivityManager.dispatchResume()",1,4,4
"android.app.LocalActivityManager.dispatchRetainNonConfigurationInstance()",1,4,6
"android.app.LocalActivityManager.dispatchStop()",1,2,2
"android.app.LocalActivityManager.getActivity(String)",1,1,2
"android.app.LocalActivityManager.getCurrentActivity()",1,1,2
"android.app.LocalActivityManager.getCurrentId()",1,1,2
"android.app.LocalActivityManager.moveToState(LocalActivityRecord,int)",5,21,27
"android.app.LocalActivityManager.performDestroy(LocalActivityRecord,boolean)",1,3,5
"android.app.LocalActivityManager.performPause(LocalActivityRecord,boolean)",1,1,2
"android.app.LocalActivityManager.removeAllActivities()",1,1,1
"android.app.LocalActivityManager.saveInstanceState()",1,4,7
"android.app.LocalActivityManager.startActivity(String,Intent)",7,16,23
"android.app.NativeActivity.InputMethodCallback.InputMethodCallback(NativeActivity)",1,1,1
"android.app.NativeActivity.InputMethodCallback.finishedEvent(int,boolean)",1,2,2
"android.app.NativeActivity.InputMethodCallback.sessionCreated(IInputMethodSession)",1,1,1
"android.app.NativeActivity.NativeContentView.NativeContentView(Context)",1,1,1
"android.app.NativeActivity.NativeContentView.NativeContentView(Context,AttributeSet)",1,1,1
"android.app.NativeActivity.dispatchKeyEvent(KeyEvent)",2,2,2
"android.app.NativeActivity.dispatchKeyEventNative(int,KeyEvent)",1,1,1
"android.app.NativeActivity.dispatchUnhandledKeyEvent(KeyEvent)",2,2,2
"android.app.NativeActivity.finishPreDispatchKeyEventNative(int,int,boolean)",1,1,1
"android.app.NativeActivity.hideIme(int)",1,1,1
"android.app.NativeActivity.loadNativeCode(String,String,MessageQueue,String,String,int,AssetManager,byte[])",1,1,1
"android.app.NativeActivity.onConfigurationChanged(Configuration)",1,2,2
"android.app.NativeActivity.onConfigurationChangedNative(int)",1,1,1
"android.app.NativeActivity.onContentRectChangedNative(int,int,int,int,int)",1,1,1
"android.app.NativeActivity.onCreate(Bundle)",3,4,9
"android.app.NativeActivity.onDestroy()",1,3,3
"android.app.NativeActivity.onGlobalLayout()",1,3,6
"android.app.NativeActivity.onInputChannelCreatedNative(int,InputChannel)",1,1,1
"android.app.NativeActivity.onInputChannelDestroyedNative(int,InputChannel)",1,1,1
"android.app.NativeActivity.onInputQueueCreated(InputQueue)",1,2,2
"android.app.NativeActivity.onInputQueueDestroyed(InputQueue)",1,2,2
"android.app.NativeActivity.onLowMemory()",1,2,2
"android.app.NativeActivity.onLowMemoryNative(int)",1,1,1
"android.app.NativeActivity.onPause()",1,1,1
"android.app.NativeActivity.onPauseNative(int)",1,1,1
"android.app.NativeActivity.onResume()",1,1,1
"android.app.NativeActivity.onResumeNative(int)",1,1,1
"android.app.NativeActivity.onSaveInstanceState(Bundle)",1,2,2
"android.app.NativeActivity.onSaveInstanceStateNative(int)",1,1,1
"android.app.NativeActivity.onStart()",1,1,1
"android.app.NativeActivity.onStartNative(int)",1,1,1
"android.app.NativeActivity.onStop()",1,1,1
"android.app.NativeActivity.onStopNative(int)",1,1,1
"android.app.NativeActivity.onSurfaceChangedNative(int,Surface,int,int,int)",1,1,1
"android.app.NativeActivity.onSurfaceCreatedNative(int,Surface)",1,1,1
"android.app.NativeActivity.onSurfaceDestroyedNative(int)",1,1,1
"android.app.NativeActivity.onSurfaceRedrawNeededNative(int,Surface)",1,1,1
"android.app.NativeActivity.onWindowFocusChanged(boolean)",1,2,2
"android.app.NativeActivity.onWindowFocusChangedNative(int,boolean)",1,1,1
"android.app.NativeActivity.preDispatchKeyEvent(KeyEvent,int)",1,1,1
"android.app.NativeActivity.setWindowFlags(int,int)",1,1,1
"android.app.NativeActivity.setWindowFormat(int)",1,1,1
"android.app.NativeActivity.showIme(int)",1,1,1
"android.app.NativeActivity.surfaceChanged(SurfaceHolder,int,int,int)",1,2,2
"android.app.NativeActivity.surfaceCreated(SurfaceHolder)",1,2,2
"android.app.NativeActivity.surfaceDestroyed(SurfaceHolder)",1,2,2
"android.app.NativeActivity.surfaceRedrawNeeded(SurfaceHolder)",1,2,2
"android.app.NativeActivity.unloadNativeCode(int)",1,1,1
"android.app.Notification.Builder.Builder(Context)",1,1,1
"android.app.Notification.Builder.getNotification()",1,1,4
"android.app.Notification.Builder.makeContentView()",2,2,3
"android.app.Notification.Builder.makeRemoteViews(int)",1,7,7
"android.app.Notification.Builder.makeTickerView()",3,3,4
"android.app.Notification.Builder.setAutoCancel(boolean)",1,1,1
"android.app.Notification.Builder.setContent(RemoteViews)",1,1,1
"android.app.Notification.Builder.setContentInfo(CharSequence)",1,1,1
"android.app.Notification.Builder.setContentIntent(PendingIntent)",1,1,1
"android.app.Notification.Builder.setContentText(CharSequence)",1,1,1
"android.app.Notification.Builder.setContentTitle(CharSequence)",1,1,1
"android.app.Notification.Builder.setDefaults(int)",1,1,1
"android.app.Notification.Builder.setDeleteIntent(PendingIntent)",1,1,1
"android.app.Notification.Builder.setFlag(int,boolean)",1,1,2
"android.app.Notification.Builder.setFullScreenIntent(PendingIntent,boolean)",1,1,1
"android.app.Notification.Builder.setLargeIcon(Bitmap)",1,1,1
"android.app.Notification.Builder.setLights(int,int,int)",1,1,1
"android.app.Notification.Builder.setNumber(int)",1,1,1
"android.app.Notification.Builder.setOngoing(boolean)",1,1,1
"android.app.Notification.Builder.setOnlyAlertOnce(boolean)",1,1,1
"android.app.Notification.Builder.setSmallIcon(int)",1,1,1
"android.app.Notification.Builder.setSmallIcon(int,int)",1,1,1
"android.app.Notification.Builder.setSound(Uri)",1,1,1
"android.app.Notification.Builder.setSound(Uri,int)",1,1,1
"android.app.Notification.Builder.setTicker(CharSequence)",1,1,1
"android.app.Notification.Builder.setTicker(CharSequence,RemoteViews)",1,1,1
"android.app.Notification.Builder.setVibrate(long[])",1,1,1
"android.app.Notification.Builder.setWhen(long)",1,1,1
"android.app.Notification.Notification()",1,1,1
"android.app.Notification.Notification(Context,int,CharSequence,long,CharSequence,CharSequence,Intent)",1,1,1
"android.app.Notification.Notification(Parcel)",1,9,9
"android.app.Notification.Notification(int,CharSequence,long)",1,1,1
"android.app.Notification.clone()",1,6,6
"android.app.Notification.describeContents()",1,1,1
"android.app.Notification.setLatestEventInfo(Context,CharSequence,CharSequence,PendingIntent)",1,5,5
"android.app.Notification.toString()",1,8,8
"android.app.Notification.writeToParcel(Parcel,int)",1,9,9
"android.app.NotificationManager.NotificationManager(Context,Handler)",1,1,1
"android.app.NotificationManager.cancel(String,int)",1,2,3
"android.app.NotificationManager.cancel(int)",1,1,1
"android.app.NotificationManager.cancelAll()",1,2,3
"android.app.NotificationManager.getService()",2,1,2
"android.app.NotificationManager.notify(String,int,Notification)",1,3,4
"android.app.NotificationManager.notify(int,Notification)",1,1,1
"android.app.PendingIntent.CanceledException.CanceledException()",1,1,1
"android.app.PendingIntent.CanceledException.CanceledException(Exception)",1,1,1
"android.app.PendingIntent.CanceledException.CanceledException(String)",1,1,1
"android.app.PendingIntent.FinishedDispatcher.FinishedDispatcher(PendingIntent,OnFinished,Handler)",1,1,1
"android.app.PendingIntent.FinishedDispatcher.performReceive(Intent,int,String,Bundle,boolean,boolean)",1,2,2
"android.app.PendingIntent.FinishedDispatcher.run()",1,1,1
"android.app.PendingIntent.PendingIntent(IBinder)",1,1,1
"android.app.PendingIntent.PendingIntent(IIntentSender)",1,1,1
"android.app.PendingIntent.cancel()",1,1,2
"android.app.PendingIntent.describeContents()",1,1,1
"android.app.PendingIntent.equals(Object)",2,2,2
"android.app.PendingIntent.getActivities(Context,int,Intent[],int)",1,2,4
"android.app.PendingIntent.getActivity(Context,int,Intent,int)",1,2,5
"android.app.PendingIntent.getBroadcast(Context,int,Intent,int)",1,2,5
"android.app.PendingIntent.getIntentSender()",1,1,1
"android.app.PendingIntent.getService(Context,int,Intent,int)",1,2,5
"android.app.PendingIntent.getTarget()",1,1,1
"android.app.PendingIntent.getTargetPackage()",1,1,2
"android.app.PendingIntent.hashCode()",1,1,1
"android.app.PendingIntent.readPendingIntentOrNullFromParcel(Parcel)",1,1,2
"android.app.PendingIntent.send()",1,1,1
"android.app.PendingIntent.send(Context,int,Intent)",1,1,1
"android.app.PendingIntent.send(Context,int,Intent,OnFinished,Handler)",2,2,5
"android.app.PendingIntent.send(int)",1,1,1
"android.app.PendingIntent.send(int,OnFinished,Handler)",1,1,1
"android.app.PendingIntent.toString()",1,2,2
"android.app.PendingIntent.writePendingIntentOrNullToParcel(PendingIntent,Parcel)",1,2,2
"android.app.PendingIntent.writeToParcel(Parcel,int)",1,1,1
"android.app.ProgressDialog.ProgressDialog(Context)",1,1,1
"android.app.ProgressDialog.ProgressDialog(Context,int)",1,1,1
"android.app.ProgressDialog.getMax()",2,2,2
"android.app.ProgressDialog.getProgress()",2,2,2
"android.app.ProgressDialog.getSecondaryProgress()",2,2,2
"android.app.ProgressDialog.incrementProgressBy(int)",1,2,2
"android.app.ProgressDialog.incrementSecondaryProgressBy(int)",1,2,2
"android.app.ProgressDialog.isIndeterminate()",2,2,2
"android.app.ProgressDialog.onCreate(Bundle)",1,10,10
"android.app.ProgressDialog.onProgressChanged()",1,2,2
"android.app.ProgressDialog.onStart()",1,1,1
"android.app.ProgressDialog.onStop()",1,1,1
"android.app.ProgressDialog.setIndeterminate(boolean)",1,2,2
"android.app.ProgressDialog.setIndeterminateDrawable(Drawable)",1,2,2
"android.app.ProgressDialog.setMax(int)",1,2,2
"android.app.ProgressDialog.setMessage(CharSequence)",1,3,3
"android.app.ProgressDialog.setProgress(int)",1,2,2
"android.app.ProgressDialog.setProgressDrawable(Drawable)",1,2,2
"android.app.ProgressDialog.setProgressNumberFormat(String)",1,1,1
"android.app.ProgressDialog.setProgressStyle(int)",1,1,1
"android.app.ProgressDialog.setSecondaryProgress(int)",1,2,2
"android.app.ProgressDialog.show(Context,CharSequence,CharSequence)",1,1,1
"android.app.ProgressDialog.show(Context,CharSequence,CharSequence,boolean)",1,1,1
"android.app.ProgressDialog.show(Context,CharSequence,CharSequence,boolean,boolean)",1,1,1
"android.app.ProgressDialog.show(Context,CharSequence,CharSequence,boolean,boolean,OnCancelListener)",1,1,1
"android.app.QueuedWork.add(Runnable)",1,1,1
"android.app.QueuedWork.hasPendingWork()",1,1,1
"android.app.QueuedWork.remove(Runnable)",1,1,1
"android.app.QueuedWork.singleThreadExecutor()",1,2,2
"android.app.QueuedWork.waitToFinish()",1,2,2
"android.app.ReceiverRestrictedContext.ReceiverRestrictedContext(Context)",1,1,1
"android.app.ReceiverRestrictedContext.bindService(Intent,ServiceConnection,int)",1,1,1
"android.app.ReceiverRestrictedContext.registerReceiver(BroadcastReceiver,IntentFilter)",1,1,1
"android.app.ReceiverRestrictedContext.registerReceiver(BroadcastReceiver,IntentFilter,String,Handler)",1,1,1
"android.app.RemoteServiceException.RemoteServiceException(String)",1,1,1
"android.app.ResultInfo.ResultInfo(Parcel)",1,2,2
"android.app.ResultInfo.ResultInfo(String,int,int,Intent)",1,1,1
"android.app.ResultInfo.describeContents()",1,1,1
"android.app.ResultInfo.toString()",1,1,1
"android.app.ResultInfo.writeToParcel(Parcel,int)",1,2,2
"android.app.SearchDialog.SearchBar.SearchBar(Context)",1,1,1
"android.app.SearchDialog.SearchBar.SearchBar(Context,AttributeSet)",1,1,1
"android.app.SearchDialog.SearchBar.dispatchKeyEventPreIme(KeyEvent)",5,10,10
"android.app.SearchDialog.SearchBar.setSearchDialog(SearchDialog)",1,1,1
"android.app.SearchDialog.SearchDialog(Context,SearchManager)",1,1,1
"android.app.SearchDialog.createContentView()",1,1,1
"android.app.SearchDialog.createIntent(String,Uri,String,String,int,String)",1,6,6
"android.app.SearchDialog.doShow(String,boolean,ComponentName,Bundle)",2,2,3
"android.app.SearchDialog.hide()",2,2,3
"android.app.SearchDialog.isEmpty(AutoCompleteTextView)",1,1,1
"android.app.SearchDialog.isLandscapeMode(Context)",1,1,1
"android.app.SearchDialog.isOutOfBounds(View,MotionEvent)",1,4,4
"android.app.SearchDialog.launchIntent(Intent)",2,2,3
"android.app.SearchDialog.launchQuerySearch()",1,1,1
"android.app.SearchDialog.launchQuerySearch(int,String)",1,1,1
"android.app.SearchDialog.onBackPressed()",2,3,4
"android.app.SearchDialog.onClosePressed()",2,2,2
"android.app.SearchDialog.onConfigurationChanged()",1,4,4
"android.app.SearchDialog.onCreate(Bundle)",1,1,1
"android.app.SearchDialog.onRestoreInstanceState(Bundle)",3,1,3
"android.app.SearchDialog.onSaveInstanceState()",2,1,2
"android.app.SearchDialog.onStart()",1,1,1
"android.app.SearchDialog.onStop()",1,1,1
"android.app.SearchDialog.onTouchEvent(MotionEvent)",2,4,4
"android.app.SearchDialog.setListSelection(int)",1,1,1
"android.app.SearchDialog.setUserQuery(String)",1,1,2
"android.app.SearchDialog.setWorking(boolean)",1,1,2
"android.app.SearchDialog.show(ComponentName,Bundle)",2,3,4
"android.app.SearchDialog.show(String,boolean,ComponentName,Bundle)",1,2,2
"android.app.SearchDialog.updateSearchAppIcon()",1,3,3
"android.app.SearchDialog.updateSearchAutoComplete()",1,1,1
"android.app.SearchDialog.updateSearchBadge()",1,5,5
"android.app.SearchDialog.updateUI()",1,4,5
"android.app.SearchManager.SearchManager(Context,Handler)",1,1,1
"android.app.SearchManager.ensureSearchDialog()",1,2,2
"android.app.SearchManager.getGlobalSearchActivity()",1,2,2
"android.app.SearchManager.getSearchableInfo(ComponentName)",1,2,2
"android.app.SearchManager.getSearchablesInGlobalSearch()",1,2,2
"android.app.SearchManager.getSuggestions(SearchableInfo,String)",1,1,1
"android.app.SearchManager.getSuggestions(SearchableInfo,String,int)",3,4,6
"android.app.SearchManager.getWebSearchActivity()",1,2,2
"android.app.SearchManager.isVisible()",1,2,2
"android.app.SearchManager.onCancel(DialogInterface)",1,2,2
"android.app.SearchManager.onDismiss(DialogInterface)",1,2,2
"android.app.SearchManager.setOnCancelListener(OnCancelListener)",1,1,1
"android.app.SearchManager.setOnDismissListener(OnDismissListener)",1,1,1
"android.app.SearchManager.startGlobalSearch(String,boolean,Bundle)",2,7,8
"android.app.SearchManager.startSearch(String,boolean,ComponentName,Bundle,boolean)",2,2,2
"android.app.SearchManager.stopSearch()",1,2,2
"android.app.SearchManager.triggerSearch(String,ComponentName,Bundle)",3,3,4
"android.app.SearchableInfo.ActionKeyInfo.ActionKeyInfo(Context,AttributeSet)",3,1,5
"android.app.SearchableInfo.ActionKeyInfo.ActionKeyInfo(Parcel)",1,1,1
"android.app.SearchableInfo.ActionKeyInfo.describeContents()",1,1,1
"android.app.SearchableInfo.ActionKeyInfo.getKeyCode()",1,1,1
"android.app.SearchableInfo.ActionKeyInfo.getQueryActionMsg()",1,1,1
"android.app.SearchableInfo.ActionKeyInfo.getSuggestActionMsg()",1,1,1
"android.app.SearchableInfo.ActionKeyInfo.getSuggestActionMsgColumn()",1,1,1
"android.app.SearchableInfo.ActionKeyInfo.writeToParcel(Parcel,int)",1,1,1
"android.app.SearchableInfo.SearchableInfo(Context,AttributeSet,ComponentName)",2,2,4
"android.app.SearchableInfo.SearchableInfo(Parcel)",1,2,2
"android.app.SearchableInfo.addActionKey(ActionKeyInfo)",1,1,2
"android.app.SearchableInfo.autoUrlDetect()",1,1,1
"android.app.SearchableInfo.createActivityContext(Context,ComponentName)",1,3,3
"android.app.SearchableInfo.describeContents()",1,1,1
"android.app.SearchableInfo.findActionKey(int)",2,1,2
"android.app.SearchableInfo.getActivityContext(Context)",1,1,1
"android.app.SearchableInfo.getActivityMetaData(Context,ActivityInfo)",2,3,4
"android.app.SearchableInfo.getActivityMetaData(Context,XmlPullParser,ComponentName)",9,11,13
"android.app.SearchableInfo.getHintId()",1,1,1
"android.app.SearchableInfo.getIconId()",1,1,1
"android.app.SearchableInfo.getImeOptions()",1,1,1
"android.app.SearchableInfo.getInputType()",1,1,1
"android.app.SearchableInfo.getLabelId()",1,1,1
"android.app.SearchableInfo.getProviderContext(Context,Context)",2,2,5
"android.app.SearchableInfo.getSearchActivity()",1,1,1
"android.app.SearchableInfo.getSearchButtonText()",1,1,1
"android.app.SearchableInfo.getSettingsDescriptionId()",1,1,1
"android.app.SearchableInfo.getSuggestAuthority()",1,1,1
"android.app.SearchableInfo.getSuggestIntentAction()",1,1,1
"android.app.SearchableInfo.getSuggestIntentData()",1,1,1
"android.app.SearchableInfo.getSuggestPackage()",1,1,1
"android.app.SearchableInfo.getSuggestPath()",1,1,1
"android.app.SearchableInfo.getSuggestSelection()",1,1,1
"android.app.SearchableInfo.getSuggestThreshold()",1,1,1
"android.app.SearchableInfo.getVoiceLanguageId()",1,1,1
"android.app.SearchableInfo.getVoiceLanguageModeId()",1,1,1
"android.app.SearchableInfo.getVoiceMaxResults()",1,1,1
"android.app.SearchableInfo.getVoicePromptTextId()",1,1,1
"android.app.SearchableInfo.getVoiceSearchEnabled()",1,1,1
"android.app.SearchableInfo.getVoiceSearchLaunchRecognizer()",1,1,1
"android.app.SearchableInfo.getVoiceSearchLaunchWebSearch()",1,1,1
"android.app.SearchableInfo.queryAfterZeroResults()",1,1,1
"android.app.SearchableInfo.shouldIncludeInGlobalSearch()",1,1,1
"android.app.SearchableInfo.shouldRewriteQueryFromData()",1,1,1
"android.app.SearchableInfo.shouldRewriteQueryFromText()",1,1,1
"android.app.SearchableInfo.useBadgeIcon()",1,1,2
"android.app.SearchableInfo.useBadgeLabel()",1,1,1
"android.app.SearchableInfo.writeToParcel(Parcel,int)",1,3,6
"android.app.Service.Service()",1,1,1
"android.app.Service.attach(Context,ActivityThread,String,IBinder,Application,Object)",1,1,1
"android.app.Service.dump(FileDescriptor,PrintWriter,String[])",1,1,1
"android.app.Service.finalize()",1,1,1
"android.app.Service.getApplication()",1,1,1
"android.app.Service.getClassName()",1,1,1
"android.app.Service.onConfigurationChanged(Configuration)",1,1,1
"android.app.Service.onCreate()",1,1,1
"android.app.Service.onDestroy()",1,1,1
"android.app.Service.onLowMemory()",1,1,1
"android.app.Service.onRebind(Intent)",1,1,1
"android.app.Service.onStart(Intent,int)",1,1,1
"android.app.Service.onStartCommand(Intent,int,int)",1,1,2
"android.app.Service.onUnbind(Intent)",1,1,1
"android.app.Service.setForeground(boolean)",1,1,1
"android.app.Service.startForeground(int,Notification)",1,1,2
"android.app.Service.stopForeground(boolean)",1,1,2
"android.app.Service.stopSelf()",1,1,1
"android.app.Service.stopSelf(int)",2,1,3
"android.app.Service.stopSelfResult(int)",2,1,3
"android.app.ServiceConnectionLeaked.ServiceConnectionLeaked(String)",1,1,1
"android.app.SharedPreferencesImpl.EditorImpl.apply()",1,1,2
"android.app.SharedPreferencesImpl.EditorImpl.clear()",1,1,1
"android.app.SharedPreferencesImpl.EditorImpl.commit()",1,1,2
"android.app.SharedPreferencesImpl.EditorImpl.commitToMemory()",6,9,12
"android.app.SharedPreferencesImpl.EditorImpl.notifyListeners(MemoryCommitResult)",2,7,8
"android.app.SharedPreferencesImpl.EditorImpl.putBoolean(String,boolean)",1,1,1
"android.app.SharedPreferencesImpl.EditorImpl.putFloat(String,float)",1,1,1
"android.app.SharedPreferencesImpl.EditorImpl.putInt(String,int)",1,1,1
"android.app.SharedPreferencesImpl.EditorImpl.putLong(String,long)",1,1,1
"android.app.SharedPreferencesImpl.EditorImpl.putString(String,String)",1,1,1
"android.app.SharedPreferencesImpl.EditorImpl.putStringSet(String,Set<String>)",1,1,1
"android.app.SharedPreferencesImpl.EditorImpl.remove(String)",1,1,1
"android.app.SharedPreferencesImpl.MemoryCommitResult.setDiskWriteResult(boolean)",1,1,1
"android.app.SharedPreferencesImpl.SharedPreferencesImpl(File,int)",1,1,1
"android.app.SharedPreferencesImpl.awaitLoadedLocked()",1,3,4
"android.app.SharedPreferencesImpl.contains(String)",1,1,1
"android.app.SharedPreferencesImpl.createFileOutputStream(File)",2,4,4
"android.app.SharedPreferencesImpl.edit()",1,1,1
"android.app.SharedPreferencesImpl.enqueueDiskWrite(MemoryCommitResult,Runnable)",3,4,4
"android.app.SharedPreferencesImpl.getAll()",1,1,1
"android.app.SharedPreferencesImpl.getBoolean(String,boolean)",1,1,2
"android.app.SharedPreferencesImpl.getFloat(String,float)",1,1,2
"android.app.SharedPreferencesImpl.getInt(String,int)",1,1,2
"android.app.SharedPreferencesImpl.getLong(String,long)",1,1,2
"android.app.SharedPreferencesImpl.getString(String,String)",1,1,2
"android.app.SharedPreferencesImpl.getStringSet(String,Set<String>)",1,1,2
"android.app.SharedPreferencesImpl.hasFileChangedUnexpectedly()",3,3,5
"android.app.SharedPreferencesImpl.loadFromDiskLocked()",2,9,11
"android.app.SharedPreferencesImpl.makeBackupFile(File)",1,1,1
"android.app.SharedPreferencesImpl.registerOnSharedPreferenceChangeListener(OnSharedPreferenceChangeListener)",1,1,1
"android.app.SharedPreferencesImpl.startLoadFromDisk()",1,1,1
"android.app.SharedPreferencesImpl.startReloadIfChangedUnexpectedly()",2,1,2
"android.app.SharedPreferencesImpl.unregisterOnSharedPreferenceChangeListener(OnSharedPreferenceChangeListener)",1,1,1
"android.app.SharedPreferencesImpl.writeToFile(MemoryCommitResult)",6,10,11
"android.app.StatusBarManager.StatusBarManager(Context)",1,1,1
"android.app.StatusBarManager.collapse()",1,1,2
"android.app.StatusBarManager.disable(int)",1,1,2
"android.app.StatusBarManager.expand()",1,1,2
"android.app.StatusBarManager.removeIcon(String)",1,1,2
"android.app.StatusBarManager.setIcon(String,int,int)",1,1,2
"android.app.StatusBarManager.setIconVisibility(String,boolean)",1,1,2
"android.app.SuperNotCalledException.SuperNotCalledException(String)",1,1,1
"android.app.TabActivity.TabActivity()",1,1,1
"android.app.TabActivity.ensureTabHost()",1,2,2
"android.app.TabActivity.getTabHost()",1,1,1
"android.app.TabActivity.getTabWidget()",1,1,1
"android.app.TabActivity.onChildTitleChanged(Activity,CharSequence)",1,3,4
"android.app.TabActivity.onContentChanged()",2,1,2
"android.app.TabActivity.onPostCreate(Bundle)",1,2,2
"android.app.TabActivity.onRestoreInstanceState(Bundle)",1,5,5
"android.app.TabActivity.onSaveInstanceState(Bundle)",1,2,2
"android.app.TabActivity.setDefaultTab(String)",1,1,1
"android.app.TabActivity.setDefaultTab(int)",1,1,1
"android.app.TimePickerDialog.TimePickerDialog(Context,OnTimeSetListener,int,int,boolean)",1,1,1
"android.app.TimePickerDialog.TimePickerDialog(Context,int,OnTimeSetListener,int,int,boolean)",1,1,1
"android.app.TimePickerDialog.onClick(DialogInterface,int)",1,2,2
"android.app.TimePickerDialog.onRestoreInstanceState(Bundle)",1,1,1
"android.app.TimePickerDialog.onSaveInstanceState()",1,1,1
"android.app.TimePickerDialog.onTimeChanged(TimePicker,int,int)",1,1,1
"android.app.TimePickerDialog.updateTime(int,int)",1,1,1
"android.app.UiModeManager.UiModeManager()",1,1,1
"android.app.UiModeManager.disableCarMode(int)",1,3,3
"android.app.UiModeManager.enableCarMode(int)",1,3,3
"android.app.UiModeManager.getCurrentModeType()",2,3,3
"android.app.UiModeManager.getNightMode()",2,3,3
"android.app.UiModeManager.setNightMode(int)",1,3,3
"android.app.WallpaperInfo.WallpaperInfo(Context,ResolveInfo)",3,3,7
"android.app.WallpaperInfo.WallpaperInfo(Parcel)",1,1,1
"android.app.WallpaperInfo.describeContents()",1,1,1
"android.app.WallpaperInfo.dump(Printer,String)",1,1,1
"android.app.WallpaperInfo.getComponent()",1,1,1
"android.app.WallpaperInfo.getPackageName()",1,1,1
"android.app.WallpaperInfo.getServiceInfo()",1,1,1
"android.app.WallpaperInfo.getServiceName()",1,1,1
"android.app.WallpaperInfo.getSettingsActivity()",1,1,1
"android.app.WallpaperInfo.loadAuthor(PackageManager)",2,1,3
"android.app.WallpaperInfo.loadDescription(PackageManager)",3,2,4
"android.app.WallpaperInfo.loadIcon(PackageManager)",1,1,1
"android.app.WallpaperInfo.loadLabel(PackageManager)",1,1,1
"android.app.WallpaperInfo.loadThumbnail(PackageManager)",2,1,2
"android.app.WallpaperInfo.toString()",1,1,1
"android.app.WallpaperInfo.writeToParcel(Parcel,int)",1,1,1
"android.app.WallpaperManager.FastBitmapDrawable.FastBitmapDrawable(Bitmap)",1,1,1
"android.app.WallpaperManager.FastBitmapDrawable.draw(Canvas)",1,1,1
"android.app.WallpaperManager.FastBitmapDrawable.getIntrinsicHeight()",1,1,1
"android.app.WallpaperManager.FastBitmapDrawable.getIntrinsicWidth()",1,1,1
"android.app.WallpaperManager.FastBitmapDrawable.getMinimumHeight()",1,1,1
"android.app.WallpaperManager.FastBitmapDrawable.getMinimumWidth()",1,1,1
"android.app.WallpaperManager.FastBitmapDrawable.getOpacity()",1,1,1
"android.app.WallpaperManager.FastBitmapDrawable.setAlpha(int)",1,1,1
"android.app.WallpaperManager.FastBitmapDrawable.setBounds(Rect)",1,1,1
"android.app.WallpaperManager.FastBitmapDrawable.setBounds(int,int,int,int)",1,1,1
"android.app.WallpaperManager.FastBitmapDrawable.setColorFilter(ColorFilter)",1,1,1
"android.app.WallpaperManager.FastBitmapDrawable.setDither(boolean)",1,1,1
"android.app.WallpaperManager.FastBitmapDrawable.setFilterBitmap(boolean)",1,1,1
"android.app.WallpaperManager.Globals.Globals(Looper)",2,2,2
"android.app.WallpaperManager.Globals.getCurrentWallpaperLocked(Context)",3,5,9
"android.app.WallpaperManager.Globals.getDefaultWallpaperLocked(Context)",3,6,10
"android.app.WallpaperManager.Globals.onWallpaperChanged()",1,1,1
"android.app.WallpaperManager.Globals.peekWallpaperBitmap(Context,boolean)",4,3,6
"android.app.WallpaperManager.WallpaperManager(Context,Handler)",1,1,1
"android.app.WallpaperManager.clear()",1,1,1
"android.app.WallpaperManager.clearWallpaperOffsets(IBinder)",1,1,2
"android.app.WallpaperManager.generateBitmap(Context,Bitmap,int,int)",2,1,5
"android.app.WallpaperManager.getDesiredMinimumHeight()",1,1,2
"android.app.WallpaperManager.getDesiredMinimumWidth()",1,1,2
"android.app.WallpaperManager.getDrawable()",2,2,2
"android.app.WallpaperManager.getFastDrawable()",2,1,2
"android.app.WallpaperManager.getIWallpaperManager()",1,1,1
"android.app.WallpaperManager.getInstance(Context)",1,1,1
"android.app.WallpaperManager.getWallpaperInfo()",1,1,2
"android.app.WallpaperManager.initGlobals(Looper)",1,1,2
"android.app.WallpaperManager.peekDrawable()",2,2,2
"android.app.WallpaperManager.peekFastDrawable()",2,1,2
"android.app.WallpaperManager.sendWallpaperCommand(IBinder,String,int,int,int,Bundle)",1,1,2
"android.app.WallpaperManager.setBitmap(Bitmap)",2,2,4
"android.app.WallpaperManager.setResource(int)",1,3,4
"android.app.WallpaperManager.setStream(InputStream)",2,2,4
"android.app.WallpaperManager.setWallpaper(InputStream,FileOutputStream)",1,2,2
"android.app.WallpaperManager.setWallpaperOffsetSteps(float,float)",1,1,1
"android.app.WallpaperManager.setWallpaperOffsets(IBinder,float,float)",1,1,2
"android.app.WallpaperManager.suggestDesiredDimensions(int,int)",1,1,2
"android.app.admin.DeviceAdminInfo.DeviceAdminInfo(Context,ResolveInfo)",8,11,19
"android.app.admin.DeviceAdminInfo.DeviceAdminInfo(Parcel)",1,1,1
"android.app.admin.DeviceAdminInfo.PolicyInfo.PolicyInfo(int,String,int,int)",1,1,1
"android.app.admin.DeviceAdminInfo.describeContents()",1,1,1
"android.app.admin.DeviceAdminInfo.dump(Printer,String)",1,1,1
"android.app.admin.DeviceAdminInfo.getActivityInfo()",1,1,1
"android.app.admin.DeviceAdminInfo.getComponent()",1,1,1
"android.app.admin.DeviceAdminInfo.getPackageName()",1,1,1
"android.app.admin.DeviceAdminInfo.getReceiverName()",1,1,1
"android.app.admin.DeviceAdminInfo.getTagForPolicy(int)",1,1,1
"android.app.admin.DeviceAdminInfo.getUsedPolicies()",1,3,3
"android.app.admin.DeviceAdminInfo.isVisible()",1,1,1
"android.app.admin.DeviceAdminInfo.loadDescription(PackageManager)",2,2,3
"android.app.admin.DeviceAdminInfo.loadIcon(PackageManager)",1,1,1
"android.app.admin.DeviceAdminInfo.loadLabel(PackageManager)",1,1,1
"android.app.admin.DeviceAdminInfo.readPoliciesFromXml(XmlPullParser)",1,1,1
"android.app.admin.DeviceAdminInfo.toString()",1,1,1
"android.app.admin.DeviceAdminInfo.usesPolicy(int)",1,1,1
"android.app.admin.DeviceAdminInfo.writePoliciesToXml(XmlSerializer)",1,1,1
"android.app.admin.DeviceAdminInfo.writeToParcel(Parcel,int)",1,1,1
"android.app.admin.DeviceAdminReceiver.getManager(Context)",2,1,2
"android.app.admin.DeviceAdminReceiver.getWho(Context)",2,1,2
"android.app.admin.DeviceAdminReceiver.onDisableRequested(Context,Intent)",1,1,1
"android.app.admin.DeviceAdminReceiver.onDisabled(Context,Intent)",1,1,1
"android.app.admin.DeviceAdminReceiver.onEnabled(Context,Intent)",1,1,1
"android.app.admin.DeviceAdminReceiver.onPasswordChanged(Context,Intent)",1,1,1
"android.app.admin.DeviceAdminReceiver.onPasswordExpiring(Context,Intent)",1,1,1
"android.app.admin.DeviceAdminReceiver.onPasswordFailed(Context,Intent)",1,1,1
"android.app.admin.DeviceAdminReceiver.onPasswordSucceeded(Context,Intent)",1,1,1
"android.app.admin.DeviceAdminReceiver.onReceive(Context,Intent)",1,9,9
"android.app.admin.DevicePolicyManager.DevicePolicyManager(Context,Handler)",1,1,1
"android.app.admin.DevicePolicyManager.create(Context,Handler)",1,1,2
"android.app.admin.DevicePolicyManager.getActiveAdmins()",2,3,3
"android.app.admin.DevicePolicyManager.getAdminInfo(ComponentName)",1,4,4
"android.app.admin.DevicePolicyManager.getCurrentFailedPasswordAttempts()",2,3,3
"android.app.admin.DevicePolicyManager.getGlobalProxyAdmin()",2,3,3
"android.app.admin.DevicePolicyManager.getMaximumFailedPasswordsForWipe(ComponentName)",2,3,3
"android.app.admin.DevicePolicyManager.getMaximumTimeToLock(ComponentName)",2,3,3
"android.app.admin.DevicePolicyManager.getPasswordExpiration(ComponentName)",2,3,3
"android.app.admin.DevicePolicyManager.getPasswordExpirationTimeout(ComponentName)",2,3,3
"android.app.admin.DevicePolicyManager.getPasswordHistoryLength(ComponentName)",2,3,3
"android.app.admin.DevicePolicyManager.getPasswordMaximumLength(int)",1,1,1
"android.app.admin.DevicePolicyManager.getPasswordMinimumLength(ComponentName)",2,3,3
"android.app.admin.DevicePolicyManager.getPasswordMinimumLetters(ComponentName)",2,3,3
"android.app.admin.DevicePolicyManager.getPasswordMinimumLowerCase(ComponentName)",2,3,3
"android.app.admin.DevicePolicyManager.getPasswordMinimumNonLetter(ComponentName)",2,3,3
"android.app.admin.DevicePolicyManager.getPasswordMinimumNumeric(ComponentName)",2,3,3
"android.app.admin.DevicePolicyManager.getPasswordMinimumSymbols(ComponentName)",2,3,3
"android.app.admin.DevicePolicyManager.getPasswordMinimumUpperCase(ComponentName)",2,3,3
"android.app.admin.DevicePolicyManager.getPasswordQuality(ComponentName)",2,3,3
"android.app.admin.DevicePolicyManager.getRemoveWarning(ComponentName,RemoteCallback)",1,3,3
"android.app.admin.DevicePolicyManager.hasGrantedPolicy(ComponentName,int)",2,3,3
"android.app.admin.DevicePolicyManager.isActivePasswordSufficient()",2,3,3
"android.app.admin.DevicePolicyManager.isAdminActive(ComponentName)",2,3,3
"android.app.admin.DevicePolicyManager.lockNow()",1,3,3
"android.app.admin.DevicePolicyManager.packageHasActiveAdmins(String)",2,3,3
"android.app.admin.DevicePolicyManager.removeActiveAdmin(ComponentName)",1,3,3
"android.app.admin.DevicePolicyManager.reportFailedPasswordAttempt()",1,3,3
"android.app.admin.DevicePolicyManager.reportSuccessfulPasswordAttempt()",1,3,3
"android.app.admin.DevicePolicyManager.resetPassword(String,int)",2,3,3
"android.app.admin.DevicePolicyManager.setActiveAdmin(ComponentName,boolean)",1,3,3
"android.app.admin.DevicePolicyManager.setActivePasswordState(int,int,int,int,int,int,int,int)",1,3,3
"android.app.admin.DevicePolicyManager.setGlobalProxy(ComponentName,Proxy,List<String>)",5,7,9
"android.app.admin.DevicePolicyManager.setMaximumFailedPasswordsForWipe(ComponentName,int)",1,3,3
"android.app.admin.DevicePolicyManager.setMaximumTimeToLock(ComponentName,long)",1,3,3
"android.app.admin.DevicePolicyManager.setPasswordExpirationTimeout(ComponentName,long)",1,3,3
"android.app.admin.DevicePolicyManager.setPasswordHistoryLength(ComponentName,int)",1,3,3
"android.app.admin.DevicePolicyManager.setPasswordMinimumLength(ComponentName,int)",1,3,3
"android.app.admin.DevicePolicyManager.setPasswordMinimumLetters(ComponentName,int)",1,3,3
"android.app.admin.DevicePolicyManager.setPasswordMinimumLowerCase(ComponentName,int)",1,3,3
"android.app.admin.DevicePolicyManager.setPasswordMinimumNonLetter(ComponentName,int)",1,3,3
"android.app.admin.DevicePolicyManager.setPasswordMinimumNumeric(ComponentName,int)",1,3,3
"android.app.admin.DevicePolicyManager.setPasswordMinimumSymbols(ComponentName,int)",1,3,3
"android.app.admin.DevicePolicyManager.setPasswordMinimumUpperCase(ComponentName,int)",1,3,3
"android.app.admin.DevicePolicyManager.setPasswordQuality(ComponentName,int)",1,3,3
"android.app.admin.DevicePolicyManager.wipeData(int)",1,3,3
"android.app.backup.AbsoluteFileBackupHelper.AbsoluteFileBackupHelper(Context,String...)",1,1,1
"android.app.backup.AbsoluteFileBackupHelper.performBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)",1,1,1
"android.app.backup.AbsoluteFileBackupHelper.restoreEntity(BackupDataInputStream)",1,3,3
"android.app.backup.BackupAgent.BackupAgent()",1,1,1
"android.app.backup.BackupAgent.BackupServiceBinder.doBackup(ParcelFileDescriptor,ParcelFileDescriptor,ParcelFileDescriptor,int,IBackupManager)",1,4,5
"android.app.backup.BackupAgent.BackupServiceBinder.doRestore(ParcelFileDescriptor,int,ParcelFileDescriptor,int,IBackupManager)",1,4,5
"android.app.backup.BackupAgent.attach(Context)",1,1,1
"android.app.backup.BackupAgent.onBind()",1,1,1
"android.app.backup.BackupAgent.onCreate()",1,1,1
"android.app.backup.BackupAgent.onDestroy()",1,1,1
"android.app.backup.BackupAgentHelper.addHelper(String,BackupHelper)",1,1,1
"android.app.backup.BackupAgentHelper.getDispatcher()",1,1,1
"android.app.backup.BackupAgentHelper.onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)",1,1,1
"android.app.backup.BackupAgentHelper.onRestore(BackupDataInput,int,ParcelFileDescriptor)",1,1,1
"android.app.backup.BackupDataInput.BackupDataInput(FileDescriptor)",3,1,3
"android.app.backup.BackupDataInput.ctor(FileDescriptor)",1,1,1
"android.app.backup.BackupDataInput.dtor(int)",1,1,1
"android.app.backup.BackupDataInput.finalize()",1,1,1
"android.app.backup.BackupDataInput.getDataSize()",2,1,2
"android.app.backup.BackupDataInput.getKey()",2,1,2
"android.app.backup.BackupDataInput.readEntityData(byte[],int,int)",3,3,3
"android.app.backup.BackupDataInput.readEntityData_native(int,byte[],int,int)",1,1,1
"android.app.backup.BackupDataInput.readNextHeader()",3,3,3
"android.app.backup.BackupDataInput.readNextHeader_native(int,EntityHeader)",1,1,1
"android.app.backup.BackupDataInput.skipEntityData()",2,2,2
"android.app.backup.BackupDataInput.skipEntityData_native(int)",1,1,1
"android.app.backup.BackupDataInputStream.BackupDataInputStream(BackupDataInput)",1,1,1
"android.app.backup.BackupDataInputStream.getKey()",1,1,1
"android.app.backup.BackupDataInputStream.read()",1,1,2
"android.app.backup.BackupDataInputStream.read(byte[])",1,1,1
"android.app.backup.BackupDataInputStream.read(byte[],int,int)",1,1,1
"android.app.backup.BackupDataInputStream.size()",1,1,1
"android.app.backup.BackupDataOutput.BackupDataOutput(FileDescriptor)",3,1,3
"android.app.backup.BackupDataOutput.ctor(FileDescriptor)",1,1,1
"android.app.backup.BackupDataOutput.dtor(int)",1,1,1
"android.app.backup.BackupDataOutput.finalize()",1,1,1
"android.app.backup.BackupDataOutput.setKeyPrefix(String)",1,1,1
"android.app.backup.BackupDataOutput.setKeyPrefix_native(int,String)",1,1,1
"android.app.backup.BackupDataOutput.writeEntityData(byte[],int)",2,2,2
"android.app.backup.BackupDataOutput.writeEntityData_native(int,byte[],int)",1,1,1
"android.app.backup.BackupDataOutput.writeEntityHeader(String,int)",2,2,2
"android.app.backup.BackupDataOutput.writeEntityHeader_native(int,String,int)",1,1,1
"android.app.backup.BackupHelperDispatcher.BackupHelperDispatcher()",1,1,1
"android.app.backup.BackupHelperDispatcher.addHelper(String,BackupHelper)",1,1,1
"android.app.backup.BackupHelperDispatcher.allocateHeader_native(Header,FileDescriptor)",1,1,1
"android.app.backup.BackupHelperDispatcher.doOneBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor,Header,BackupHelper)",3,1,3
"android.app.backup.BackupHelperDispatcher.performBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)",1,6,6
"android.app.backup.BackupHelperDispatcher.performRestore(BackupDataInput,int,ParcelFileDescriptor)",1,7,7
"android.app.backup.BackupHelperDispatcher.readHeader_native(Header,FileDescriptor)",1,1,1
"android.app.backup.BackupHelperDispatcher.skipChunk_native(FileDescriptor,int)",1,1,1
"android.app.backup.BackupHelperDispatcher.writeHeader_native(Header,FileDescriptor,int)",1,1,1
"android.app.backup.BackupManager.BackupManager(Context)",1,1,1
"android.app.backup.BackupManager.beginRestoreSession()",1,3,3
"android.app.backup.BackupManager.checkServiceBinder()",1,2,2
"android.app.backup.BackupManager.dataChanged()",1,3,3
"android.app.backup.BackupManager.dataChanged(String)",1,3,3
"android.app.backup.BackupManager.requestRestore(RestoreObserver)",1,4,4
"android.app.backup.FileBackupHelper.FileBackupHelper(Context,String...)",1,1,1
"android.app.backup.FileBackupHelper.performBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)",1,2,2
"android.app.backup.FileBackupHelper.restoreEntity(BackupDataInputStream)",1,3,3
"android.app.backup.FileBackupHelperBase.FileBackupHelperBase(Context)",1,1,1
"android.app.backup.FileBackupHelperBase.ctor()",1,1,1
"android.app.backup.FileBackupHelperBase.dtor(int)",1,1,1
"android.app.backup.FileBackupHelperBase.finalize()",1,1,1
"android.app.backup.FileBackupHelperBase.isKeyInList(String,String[])",3,2,3
"android.app.backup.FileBackupHelperBase.performBackup_checked(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor,String[],String[])",7,4,8
"android.app.backup.FileBackupHelperBase.performBackup_native(FileDescriptor,int,FileDescriptor,String[],String[])",1,1,1
"android.app.backup.FileBackupHelperBase.writeFile(File,BackupDataInputStream)",1,3,3
"android.app.backup.FileBackupHelperBase.writeFile_native(int,String,int)",1,1,1
"android.app.backup.FileBackupHelperBase.writeNewStateDescription(ParcelFileDescriptor)",1,1,1
"android.app.backup.FileBackupHelperBase.writeSnapshot_native(int,FileDescriptor)",1,1,1
"android.app.backup.RestoreObserver.onUpdate(int,String)",1,1,1
"android.app.backup.RestoreObserver.restoreFinished(int)",1,1,1
"android.app.backup.RestoreObserver.restoreSetsAvailable(RestoreSet[])",1,1,1
"android.app.backup.RestoreObserver.restoreStarting(int)",1,1,1
"android.app.backup.RestoreSession.RestoreObserverWrapper.RestoreObserverWrapper(Context,RestoreObserver)",2,2,5
"android.app.backup.RestoreSession.RestoreObserverWrapper.onUpdate(int,String)",1,1,1
"android.app.backup.RestoreSession.RestoreObserverWrapper.restoreFinished(int)",1,1,1
"android.app.backup.RestoreSession.RestoreObserverWrapper.restoreSetsAvailable(RestoreSet[])",1,1,1
"android.app.backup.RestoreSession.RestoreObserverWrapper.restoreStarting(int)",1,1,1
"android.app.backup.RestoreSession.RestoreSession(Context,IRestoreSession)",1,1,1
"android.app.backup.RestoreSession.endRestoreSession()",1,2,2
"android.app.backup.RestoreSession.getAvailableRestoreSets(RestoreObserver)",1,2,2
"android.app.backup.RestoreSession.restoreAll(long,RestoreObserver)",2,3,3
"android.app.backup.RestoreSession.restorePackage(String,RestoreObserver)",2,3,3
"android.app.backup.RestoreSet.RestoreSet()",1,1,1
"android.app.backup.RestoreSet.RestoreSet(Parcel)",1,1,1
"android.app.backup.RestoreSet.RestoreSet(String,String,long)",1,1,1
"android.app.backup.RestoreSet.describeContents()",1,1,1
"android.app.backup.RestoreSet.writeToParcel(Parcel,int)",1,1,1
"android.app.backup.SharedPreferencesBackupHelper.SharedPreferencesBackupHelper(Context,String...)",1,1,1
"android.app.backup.SharedPreferencesBackupHelper.performBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)",1,2,2
"android.app.backup.SharedPreferencesBackupHelper.restoreEntity(BackupDataInputStream)",1,3,3
"android.app.backup.WallpaperBackupHelper.WallpaperBackupHelper(Context,String...)",1,1,1
"android.app.backup.WallpaperBackupHelper.performBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)",1,1,1
"android.app.backup.WallpaperBackupHelper.restoreEntity(BackupDataInputStream)",1,8,11
"android.appwidget.AppWidgetHost.AppWidgetHost(Context,int)",1,2,2
"android.appwidget.AppWidgetHost.Callbacks.providerChanged(int,AppWidgetProviderInfo)",1,1,1
"android.appwidget.AppWidgetHost.Callbacks.updateAppWidget(int,RemoteViews)",1,1,1
"android.appwidget.AppWidgetHost.Callbacks.viewDataChanged(int,int)",1,1,1
"android.appwidget.AppWidgetHost.UpdateHandler.UpdateHandler(Looper)",1,1,1
"android.appwidget.AppWidgetHost.UpdateHandler.handleMessage(Message)",2,4,4
"android.appwidget.AppWidgetHost.allocateAppWidgetId()",1,2,3
"android.appwidget.AppWidgetHost.createView(Context,int,AppWidgetProviderInfo)",1,1,2
"android.appwidget.AppWidgetHost.deleteAllHosts()",1,1,2
"android.appwidget.AppWidgetHost.deleteAppWidgetId(int)",1,1,2
"android.appwidget.AppWidgetHost.deleteHost()",1,1,2
"android.appwidget.AppWidgetHost.onCreateView(Context,int,AppWidgetProviderInfo)",1,1,1
"android.appwidget.AppWidgetHost.onProviderChanged(int,AppWidgetProviderInfo)",1,2,2
"android.appwidget.AppWidgetHost.startListening()",1,3,4
"android.appwidget.AppWidgetHost.stopListening()",1,1,2
"android.appwidget.AppWidgetHost.updateAppWidgetView(int,RemoteViews)",1,2,2
"android.appwidget.AppWidgetHost.viewDataChanged(int,int)",1,2,2
"android.appwidget.AppWidgetHostView.AppWidgetHostView(Context)",1,1,1
"android.appwidget.AppWidgetHostView.AppWidgetHostView(Context,int,int)",1,1,1
"android.appwidget.AppWidgetHostView.ParcelableSparseArray.describeContents()",1,1,1
"android.appwidget.AppWidgetHostView.ParcelableSparseArray.writeToParcel(Parcel,int)",1,2,2
"android.appwidget.AppWidgetHostView.dispatchRestoreInstanceState(SparseArray<Parcelable>)",1,1,4
"android.appwidget.AppWidgetHostView.dispatchSaveInstanceState(SparseArray<Parcelable>)",1,1,1
"android.appwidget.AppWidgetHostView.drawChild(Canvas,View,long)",2,6,8
"android.appwidget.AppWidgetHostView.generateId()",1,1,2
"android.appwidget.AppWidgetHostView.generateLayoutParams(AttributeSet)",1,1,2
"android.appwidget.AppWidgetHostView.getAppWidgetId()",1,1,1
"android.appwidget.AppWidgetHostView.getAppWidgetInfo()",1,1,1
"android.appwidget.AppWidgetHostView.getDefaultView()",1,6,8
"android.appwidget.AppWidgetHostView.getErrorView()",1,1,1
"android.appwidget.AppWidgetHostView.getRemoteContext(RemoteViews)",2,2,3
"android.appwidget.AppWidgetHostView.prepareView(View)",1,1,2
"android.appwidget.AppWidgetHostView.resetAppWidget(AppWidgetProviderInfo)",1,1,1
"android.appwidget.AppWidgetHostView.setAppWidget(int,AppWidgetProviderInfo)",1,1,1
"android.appwidget.AppWidgetHostView.updateAppWidget(RemoteViews)",5,15,22
"android.appwidget.AppWidgetHostView.viewDataChanged(int)",1,3,4
"android.appwidget.AppWidgetManager.AppWidgetManager(Context)",1,1,1
"android.appwidget.AppWidgetManager.bindAppWidgetId(int,ComponentName)",1,1,2
"android.appwidget.AppWidgetManager.getAppWidgetIds(ComponentName)",1,1,2
"android.appwidget.AppWidgetManager.getAppWidgetInfo(int)",1,2,3
"android.appwidget.AppWidgetManager.getInstalledProviders()",1,2,3
"android.appwidget.AppWidgetManager.getInstance(Context)",1,4,4
"android.appwidget.AppWidgetManager.notifyAppWidgetViewDataChanged(int,int)",1,1,1
"android.appwidget.AppWidgetManager.notifyAppWidgetViewDataChanged(int[],int)",1,1,2
"android.appwidget.AppWidgetManager.partiallyUpdateAppWidget(int,RemoteViews)",1,1,1
"android.appwidget.AppWidgetManager.partiallyUpdateAppWidget(int[],RemoteViews)",1,1,2
"android.appwidget.AppWidgetManager.updateAppWidget(ComponentName,RemoteViews)",1,1,2
"android.appwidget.AppWidgetManager.updateAppWidget(int,RemoteViews)",1,1,1
"android.appwidget.AppWidgetManager.updateAppWidget(int[],RemoteViews)",1,1,2
"android.appwidget.AppWidgetProvider.AppWidgetProvider()",1,1,1
"android.appwidget.AppWidgetProvider.onDeleted(Context,int[])",1,1,1
"android.appwidget.AppWidgetProvider.onDisabled(Context)",1,1,1
"android.appwidget.AppWidgetProvider.onEnabled(Context)",1,1,1
"android.appwidget.AppWidgetProvider.onReceive(Context,Intent)",1,9,10
"android.appwidget.AppWidgetProvider.onUpdate(Context,AppWidgetManager,int[])",1,1,1
"android.appwidget.AppWidgetProviderInfo.AppWidgetProviderInfo()",1,1,1
"android.appwidget.AppWidgetProviderInfo.AppWidgetProviderInfo(Parcel)",1,1,3
"android.appwidget.AppWidgetProviderInfo.describeContents()",1,1,1
"android.appwidget.AppWidgetProviderInfo.toString()",1,1,1
"android.appwidget.AppWidgetProviderInfo.writeToParcel(Parcel,int)",1,3,3
"android.bluetooth.AtCommandHandler.handleActionCommand()",1,1,1
"android.bluetooth.AtCommandHandler.handleBasicCommand(String)",1,1,1
"android.bluetooth.AtCommandHandler.handleReadCommand()",1,1,1
"android.bluetooth.AtCommandHandler.handleSetCommand(Object[])",1,1,1
"android.bluetooth.AtCommandHandler.handleTestCommand()",1,1,1
"android.bluetooth.AtCommandResult.AtCommandResult(String)",1,1,1
"android.bluetooth.AtCommandResult.AtCommandResult(int)",1,1,1
"android.bluetooth.AtCommandResult.addResponse(String)",1,1,1
"android.bluetooth.AtCommandResult.addResult(AtCommandResult)",1,2,2
"android.bluetooth.AtCommandResult.appendWithCrlf(StringBuilder,String)",1,3,3
"android.bluetooth.AtCommandResult.getResultCode()",1,1,1
"android.bluetooth.AtCommandResult.toString()",2,2,3
"android.bluetooth.AtParser.AtParser()",1,1,1
"android.bluetooth.AtParser.clean(String)",4,5,5
"android.bluetooth.AtParser.findChar(char,String,int)",5,4,5
"android.bluetooth.AtParser.findEndExtendedName(String,int)",6,3,7
"android.bluetooth.AtParser.generateArgs(String)",1,3,3
"android.bluetooth.AtParser.isAtoZ(char)",1,1,2
"android.bluetooth.AtParser.process(String)",10,11,19
"android.bluetooth.AtParser.register(Character,AtCommandHandler)",1,1,1
"android.bluetooth.AtParser.register(String,AtCommandHandler)",1,1,1
"android.bluetooth.BluetoothA2dp.BluetoothA2dp(Context,ServiceListener)",1,3,3
"android.bluetooth.BluetoothA2dp.connect(BluetoothDevice)",2,7,7
"android.bluetooth.BluetoothA2dp.disconnect(BluetoothDevice)",2,7,7
"android.bluetooth.BluetoothA2dp.getConnectedDevices()",2,6,6
"android.bluetooth.BluetoothA2dp.getConnectionState(BluetoothDevice)",2,7,7
"android.bluetooth.BluetoothA2dp.getDevicesMatchingConnectionStates(int[])",2,6,6
"android.bluetooth.BluetoothA2dp.getPriority(BluetoothDevice)",2,7,7
"android.bluetooth.BluetoothA2dp.isA2dpPlaying(BluetoothDevice)",2,6,6
"android.bluetooth.BluetoothA2dp.isEnabled()",2,1,2
"android.bluetooth.BluetoothA2dp.isValidDevice(BluetoothDevice)",3,1,3
"android.bluetooth.BluetoothA2dp.log(String)",1,1,1
"android.bluetooth.BluetoothA2dp.resumeSink(BluetoothDevice)",2,6,6
"android.bluetooth.BluetoothA2dp.setPriority(BluetoothDevice,int)",3,7,9
"android.bluetooth.BluetoothA2dp.shouldSendVolumeKeys(BluetoothDevice)",5,4,6
"android.bluetooth.BluetoothA2dp.stateToString(int)",8,2,8
"android.bluetooth.BluetoothA2dp.suspendSink(BluetoothDevice)",2,6,6
"android.bluetooth.BluetoothAdapter.BluetoothAdapter(IBluetooth)",2,1,2
"android.bluetooth.BluetoothAdapter.RfcommChannelPicker.RfcommChannelPicker(UUID)",1,4,4
"android.bluetooth.BluetoothAdapter.RfcommChannelPicker.nextChannel()",2,1,2
"android.bluetooth.BluetoothAdapter.cancelDiscovery()",2,2,3
"android.bluetooth.BluetoothAdapter.checkBluetoothAddress(String)",4,4,11
"android.bluetooth.BluetoothAdapter.closeProfileProxy(int,BluetoothProfile)",1,3,3
"android.bluetooth.BluetoothAdapter.createNewRfcommSocketAndRecord(String,UUID,boolean,boolean)",6,8,12
"android.bluetooth.BluetoothAdapter.disable()",1,2,2
"android.bluetooth.BluetoothAdapter.enable()",1,2,2
"android.bluetooth.BluetoothAdapter.getAddress()",1,2,2
"android.bluetooth.BluetoothAdapter.getBondedDevices()",2,3,3
"android.bluetooth.BluetoothAdapter.getConnectionState()",2,2,3
"android.bluetooth.BluetoothAdapter.getDefaultAdapter()",1,3,3
"android.bluetooth.BluetoothAdapter.getDiscoverableTimeout()",2,2,3
"android.bluetooth.BluetoothAdapter.getName()",1,2,2
"android.bluetooth.BluetoothAdapter.getProfileProxy(Context,ServiceListener,int)",4,1,5
"android.bluetooth.BluetoothAdapter.getRemoteDevice(String)",1,1,1
"android.bluetooth.BluetoothAdapter.getScanMode()",2,2,3
"android.bluetooth.BluetoothAdapter.getState()",1,2,2
"android.bluetooth.BluetoothAdapter.getUuids()",1,2,2
"android.bluetooth.BluetoothAdapter.isDiscovering()",2,2,3
"android.bluetooth.BluetoothAdapter.isEnabled()",1,2,2
"android.bluetooth.BluetoothAdapter.listenUsingInsecureRfcommOn(int)",1,2,3
"android.bluetooth.BluetoothAdapter.listenUsingInsecureRfcommWithServiceRecord(String,UUID)",1,1,1
"android.bluetooth.BluetoothAdapter.listenUsingRfcommOn(int)",1,2,3
"android.bluetooth.BluetoothAdapter.listenUsingRfcommWithServiceRecord(String,UUID)",1,1,1
"android.bluetooth.BluetoothAdapter.listenUsingScoOn()",1,2,3
"android.bluetooth.BluetoothAdapter.readOutOfBandData()",3,3,6
"android.bluetooth.BluetoothAdapter.setDiscoverableTimeout(int)",2,2,3
"android.bluetooth.BluetoothAdapter.setName(String)",2,2,3
"android.bluetooth.BluetoothAdapter.setScanMode(int)",2,1,2
"android.bluetooth.BluetoothAdapter.setScanMode(int,int)",2,2,3
"android.bluetooth.BluetoothAdapter.startDiscovery()",2,2,3
"android.bluetooth.BluetoothAdapter.toDeviceSet(String[])",1,2,2
"android.bluetooth.BluetoothAssignedNumbers.BluetoothAssignedNumbers()",1,1,1
"android.bluetooth.BluetoothAudioGateway.BluetoothAudioGateway(BluetoothAdapter)",1,1,1
"android.bluetooth.BluetoothAudioGateway.BluetoothAudioGateway(BluetoothAdapter,int,int)",1,1,1
"android.bluetooth.BluetoothAudioGateway.IncomingConnectionInfo.IncomingConnectionInfo(BluetoothAdapter,BluetoothDevice,int,int)",1,1,1
"android.bluetooth.BluetoothAudioGateway.classInitNative()",1,1,1
"android.bluetooth.BluetoothAudioGateway.cleanupNativeDataNative()",1,1,1
"android.bluetooth.BluetoothAudioGateway.finalize()",1,1,1
"android.bluetooth.BluetoothAudioGateway.initializeNativeDataNative()",1,1,1
"android.bluetooth.BluetoothAudioGateway.log(String)",1,1,1
"android.bluetooth.BluetoothAudioGateway.setUpListeningSocketsNative()",1,1,1
"android.bluetooth.BluetoothAudioGateway.start(Handler)",3,11,11
"android.bluetooth.BluetoothAudioGateway.stop()",1,5,5
"android.bluetooth.BluetoothAudioGateway.tearDownListeningSocketsNative()",1,1,1
"android.bluetooth.BluetoothAudioGateway.waitForHandsfreeConnectNative(int)",1,1,1
"android.bluetooth.BluetoothClass.BluetoothClass(int)",1,1,1
"android.bluetooth.BluetoothClass.describeContents()",1,1,1
"android.bluetooth.BluetoothClass.doesClassMatch(int)",16,9,17
"android.bluetooth.BluetoothClass.equals(Object)",2,1,2
"android.bluetooth.BluetoothClass.getDeviceClass()",1,1,1
"android.bluetooth.BluetoothClass.getMajorDeviceClass()",1,1,1
"android.bluetooth.BluetoothClass.hasService(int)",1,1,1
"android.bluetooth.BluetoothClass.hashCode()",1,1,1
"android.bluetooth.BluetoothClass.toString()",1,1,1
"android.bluetooth.BluetoothClass.writeToParcel(Parcel,int)",1,1,1
"android.bluetooth.BluetoothDevice.BluetoothDevice(String)",2,1,2
"android.bluetooth.BluetoothDevice.cancelBondProcess()",1,2,2
"android.bluetooth.BluetoothDevice.cancelPairingUserInput()",1,2,2
"android.bluetooth.BluetoothDevice.convertPinToBytes(String)",3,2,5
"android.bluetooth.BluetoothDevice.createBond()",1,2,2
"android.bluetooth.BluetoothDevice.createBondOutOfBand(byte[],byte[])",1,2,2
"android.bluetooth.BluetoothDevice.createInsecureRfcommSocket(int)",1,1,1
"android.bluetooth.BluetoothDevice.createInsecureRfcommSocketToServiceRecord(UUID)",1,1,1
"android.bluetooth.BluetoothDevice.createRfcommSocket(int)",1,1,1
"android.bluetooth.BluetoothDevice.createRfcommSocketToServiceRecord(UUID)",1,1,1
"android.bluetooth.BluetoothDevice.createScoSocket()",1,1,1
"android.bluetooth.BluetoothDevice.describeContents()",1,1,1
"android.bluetooth.BluetoothDevice.equals(Object)",2,2,2
"android.bluetooth.BluetoothDevice.fetchUuidsWithSdp()",1,2,2
"android.bluetooth.BluetoothDevice.getAddress()",1,1,1
"android.bluetooth.BluetoothDevice.getBluetoothClass()",2,2,3
"android.bluetooth.BluetoothDevice.getBondState()",1,2,2
"android.bluetooth.BluetoothDevice.getName()",1,2,2
"android.bluetooth.BluetoothDevice.getService()",3,2,3
"android.bluetooth.BluetoothDevice.getServiceChannel(ParcelUuid)",1,2,2
"android.bluetooth.BluetoothDevice.getTrustState()",1,2,2
"android.bluetooth.BluetoothDevice.getUuids()",1,2,2
"android.bluetooth.BluetoothDevice.hashCode()",1,1,1
"android.bluetooth.BluetoothDevice.isBluetoothDock()",1,2,2
"android.bluetooth.BluetoothDevice.removeBond()",1,2,2
"android.bluetooth.BluetoothDevice.setDeviceOutOfBandData(byte[],byte[])",1,2,2
"android.bluetooth.BluetoothDevice.setPairingConfirmation(boolean)",1,2,2
"android.bluetooth.BluetoothDevice.setPasskey(int)",1,2,2
"android.bluetooth.BluetoothDevice.setPin(byte[])",1,2,2
"android.bluetooth.BluetoothDevice.setRemoteOutOfBandData()",1,2,2
"android.bluetooth.BluetoothDevice.setTrust(boolean)",1,2,2
"android.bluetooth.BluetoothDevice.toString()",1,1,1
"android.bluetooth.BluetoothDevice.writeToParcel(Parcel,int)",1,1,1
"android.bluetooth.BluetoothDeviceProfileState.BluetoothDeviceProfileState(Context,String,BluetoothService,BluetoothA2dpService)",1,1,1
"android.bluetooth.BluetoothDeviceProfileState.BondedDevice.enter()",1,1,1
"android.bluetooth.BluetoothDeviceProfileState.BondedDevice.processMessage(Message)",2,19,32
"android.bluetooth.BluetoothDeviceProfileState.IncomingA2dp.enter()",1,3,4
"android.bluetooth.BluetoothDeviceProfileState.IncomingA2dp.processMessage(Message)",2,2,14
"android.bluetooth.BluetoothDeviceProfileState.IncomingHandsfree.enter()",1,3,4
"android.bluetooth.BluetoothDeviceProfileState.IncomingHandsfree.processMessage(Message)",2,2,14
"android.bluetooth.BluetoothDeviceProfileState.IncomingHid.enter()",1,3,4
"android.bluetooth.BluetoothDeviceProfileState.IncomingHid.processMessage(Message)",2,2,7
"android.bluetooth.BluetoothDeviceProfileState.OutgoingA2dp.enter()",1,3,4
"android.bluetooth.BluetoothDeviceProfileState.OutgoingA2dp.processMessage(Message)",2,7,20
"android.bluetooth.BluetoothDeviceProfileState.OutgoingHandsfree.enter()",1,3,4
"android.bluetooth.BluetoothDeviceProfileState.OutgoingHandsfree.processMessage(Message)",2,9,22
"android.bluetooth.BluetoothDeviceProfileState.OutgoingHid.enter()",1,3,4
"android.bluetooth.BluetoothDeviceProfileState.OutgoingHid.processMessage(Message)",2,4,12
"android.bluetooth.BluetoothDeviceProfileState.PbapServiceListener.PbapServiceListener()",1,1,1
"android.bluetooth.BluetoothDeviceProfileState.PbapServiceListener.onServiceConnected()",1,1,1
"android.bluetooth.BluetoothDeviceProfileState.PbapServiceListener.onServiceDisconnected()",1,1,1
"android.bluetooth.BluetoothDeviceProfileState.cancelCommand(int)",1,3,3
"android.bluetooth.BluetoothDeviceProfileState.deferProfileServiceMessage(int)",1,1,1
"android.bluetooth.BluetoothDeviceProfileState.getDevice()",1,1,1
"android.bluetooth.BluetoothDeviceProfileState.handleConnectionOfOtherProfiles(int)",2,5,7
"android.bluetooth.BluetoothDeviceProfileState.isPhoneDocked(BluetoothDevice)",4,4,5
"android.bluetooth.BluetoothDeviceProfileState.log(String)",1,2,2
"android.bluetooth.BluetoothDeviceProfileState.processCommand(int)",16,16,27
"android.bluetooth.BluetoothHeadset.BluetoothHeadset(Context,ServiceListener)",1,2,2
"android.bluetooth.BluetoothHeadset.acceptIncomingConnect(BluetoothDevice)",2,6,6
"android.bluetooth.BluetoothHeadset.cancelConnectThread()",2,6,6
"android.bluetooth.BluetoothHeadset.close()",1,3,3
"android.bluetooth.BluetoothHeadset.connect(BluetoothDevice)",2,7,7
"android.bluetooth.BluetoothHeadset.connectHeadsetInternal(BluetoothDevice)",2,6,6
"android.bluetooth.BluetoothHeadset.createIncomingConnect(BluetoothDevice)",2,6,6
"android.bluetooth.BluetoothHeadset.disconnect(BluetoothDevice)",2,7,7
"android.bluetooth.BluetoothHeadset.disconnectHeadsetInternal(BluetoothDevice)",2,6,6
"android.bluetooth.BluetoothHeadset.getAudioState(BluetoothDevice)",2,6,6
"android.bluetooth.BluetoothHeadset.getBatteryUsageHint(BluetoothDevice)",2,7,7
"android.bluetooth.BluetoothHeadset.getConnectedDevices()",2,6,6
"android.bluetooth.BluetoothHeadset.getConnectionState(BluetoothDevice)",2,7,7
"android.bluetooth.BluetoothHeadset.getDevicesMatchingConnectionStates(int[])",2,6,6
"android.bluetooth.BluetoothHeadset.getPriority(BluetoothDevice)",2,7,7
"android.bluetooth.BluetoothHeadset.isAudioConnected(BluetoothDevice)",2,7,7
"android.bluetooth.BluetoothHeadset.isBluetoothVoiceDialingEnabled(Context)",1,1,1
"android.bluetooth.BluetoothHeadset.isEnabled()",2,1,2
"android.bluetooth.BluetoothHeadset.isValidDevice(BluetoothDevice)",3,1,3
"android.bluetooth.BluetoothHeadset.log(String)",1,1,1
"android.bluetooth.BluetoothHeadset.setAudioState(BluetoothDevice,int)",2,6,6
"android.bluetooth.BluetoothHeadset.setPriority(BluetoothDevice,int)",3,7,9
"android.bluetooth.BluetoothHeadset.startVirtualVoiceCall(BluetoothDevice)",2,7,7
"android.bluetooth.BluetoothHeadset.startVoiceRecognition(BluetoothDevice)",2,7,7
"android.bluetooth.BluetoothHeadset.stopVirtualVoiceCall(BluetoothDevice)",2,7,7
"android.bluetooth.BluetoothHeadset.stopVoiceRecognition(BluetoothDevice)",2,7,7
"android.bluetooth.BluetoothInputDevice.BluetoothInputDevice(Context)",1,2,2
"android.bluetooth.BluetoothInputDevice.connectInputDevice(BluetoothDevice)",1,3,3
"android.bluetooth.BluetoothInputDevice.disconnectInputDevice(BluetoothDevice)",1,3,3
"android.bluetooth.BluetoothInputDevice.getConnectedInputDevices()",1,3,3
"android.bluetooth.BluetoothInputDevice.getInputDevicePriority(BluetoothDevice)",1,3,3
"android.bluetooth.BluetoothInputDevice.getInputDeviceState(BluetoothDevice)",1,3,3
"android.bluetooth.BluetoothInputDevice.isInputDeviceConnected(BluetoothDevice)",2,2,3
"android.bluetooth.BluetoothInputDevice.log(String)",1,1,1
"android.bluetooth.BluetoothInputDevice.setInputDevicePriority(BluetoothDevice,int)",1,3,3
"android.bluetooth.BluetoothInputStream.BluetoothInputStream(BluetoothSocket)",1,1,1
"android.bluetooth.BluetoothInputStream.available()",1,1,1
"android.bluetooth.BluetoothInputStream.close()",1,1,1
"android.bluetooth.BluetoothInputStream.read()",2,1,2
"android.bluetooth.BluetoothInputStream.read(byte[],int,int)",3,1,4
"android.bluetooth.BluetoothOutputStream.BluetoothOutputStream(BluetoothSocket)",1,1,1
"android.bluetooth.BluetoothOutputStream.close()",1,1,1
"android.bluetooth.BluetoothOutputStream.write(byte[],int,int)",3,1,4
"android.bluetooth.BluetoothOutputStream.write(int)",1,1,1
"android.bluetooth.BluetoothPan.BluetoothPan(Context)",1,2,2
"android.bluetooth.BluetoothPan.connect(BluetoothDevice)",1,3,3
"android.bluetooth.BluetoothPan.disconnect(BluetoothDevice)",1,3,3
"android.bluetooth.BluetoothPan.getConnectedDevices()",1,3,3
"android.bluetooth.BluetoothPan.getPanDeviceState(BluetoothDevice)",1,3,3
"android.bluetooth.BluetoothPan.isTetheringOn()",1,2,2
"android.bluetooth.BluetoothPan.log(String)",1,1,1
"android.bluetooth.BluetoothPan.setBluetoothTethering(boolean)",1,2,2
"android.bluetooth.BluetoothPbap.BluetoothPbap(Context,ServiceListener)",1,2,2
"android.bluetooth.BluetoothPbap.close()",1,2,2
"android.bluetooth.BluetoothPbap.disconnect()",2,5,5
"android.bluetooth.BluetoothPbap.doesClassMatchSink(BluetoothClass)",3,2,3
"android.bluetooth.BluetoothPbap.finalize()",1,1,1
"android.bluetooth.BluetoothPbap.getClient()",2,5,5
"android.bluetooth.BluetoothPbap.getState()",2,5,5
"android.bluetooth.BluetoothPbap.isConnected(BluetoothDevice)",2,5,5
"android.bluetooth.BluetoothPbap.log(String)",1,1,1
"android.bluetooth.BluetoothProfileState.BluetoothProfileState(Context,int)",1,1,1
"android.bluetooth.BluetoothProfileState.PendingCommandState.dispatchMessage(Message)",1,3,3
"android.bluetooth.BluetoothProfileState.PendingCommandState.enter()",1,1,1
"android.bluetooth.BluetoothProfileState.PendingCommandState.processMessage(Message)",1,2,2
"android.bluetooth.BluetoothProfileState.StableState.enter()",1,1,1
"android.bluetooth.BluetoothProfileState.StableState.processMessage(Message)",1,2,2
"android.bluetooth.BluetoothProfileState.log(String)",1,2,2
"android.bluetooth.BluetoothServerSocket.BluetoothServerSocket(int,boolean,boolean,int)",1,1,1
"android.bluetooth.BluetoothServerSocket.accept()",1,1,1
"android.bluetooth.BluetoothServerSocket.accept(int)",1,1,1
"android.bluetooth.BluetoothServerSocket.close()",1,2,2
"android.bluetooth.BluetoothServerSocket.setCloseHandler(Handler,int)",1,1,1
"android.bluetooth.BluetoothSocket.BluetoothSocket(int,int,boolean,boolean,BluetoothDevice,int,ParcelUuid)",3,3,9
"android.bluetooth.BluetoothSocket.BluetoothSocket(int,int,boolean,boolean,String,int)",1,1,1
"android.bluetooth.BluetoothSocket.SdpHelper.SdpHelper(BluetoothDevice,ParcelUuid)",1,1,1
"android.bluetooth.BluetoothSocket.SdpHelper.cancel()",1,2,2
"android.bluetooth.BluetoothSocket.SdpHelper.doSdp()",5,2,7
"android.bluetooth.BluetoothSocket.SdpHelper.onRfcommChannelFound(int)",1,2,2
"android.bluetooth.BluetoothSocket.abortNative()",1,1,1
"android.bluetooth.BluetoothSocket.accept(int)",2,1,2
"android.bluetooth.BluetoothSocket.acceptNative(int)",1,1,1
"android.bluetooth.BluetoothSocket.available()",2,1,2
"android.bluetooth.BluetoothSocket.availableNative()",1,1,1
"android.bluetooth.BluetoothSocket.bindListen()",2,1,2
"android.bluetooth.BluetoothSocket.bindListenNative()",1,1,1
"android.bluetooth.BluetoothSocket.close()",2,2,3
"android.bluetooth.BluetoothSocket.connect()",2,2,3
"android.bluetooth.BluetoothSocket.connectNative()",1,1,1
"android.bluetooth.BluetoothSocket.destroyNative()",1,1,1
"android.bluetooth.BluetoothSocket.finalize()",1,1,1
"android.bluetooth.BluetoothSocket.getInputStream()",1,1,1
"android.bluetooth.BluetoothSocket.getOutputStream()",1,1,1
"android.bluetooth.BluetoothSocket.getRemoteDevice()",1,1,1
"android.bluetooth.BluetoothSocket.initSocketFromFdNative(int)",1,1,1
"android.bluetooth.BluetoothSocket.initSocketNative()",1,1,1
"android.bluetooth.BluetoothSocket.read(byte[],int,int)",2,1,2
"android.bluetooth.BluetoothSocket.readNative(byte[],int,int)",1,1,1
"android.bluetooth.BluetoothSocket.throwErrnoNative(int)",1,1,1
"android.bluetooth.BluetoothSocket.write(byte[],int,int)",2,1,2
"android.bluetooth.BluetoothSocket.writeNative(byte[],int,int)",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.BluetoothTetheringDataTracker()",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.Clone()",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.defaultRouteSet(boolean)",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.getDefaultGatewayAddr()",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.getInstance()",1,1,2
"android.bluetooth.BluetoothTetheringDataTracker.getLinkCapabilities()",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.getLinkProperties()",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.getNetworkInfo()",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.getTcpBufferSizesPropName()",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.isAvailable()",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.isDefaultRouteSet()",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.isPrivateDnsRouteSet()",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.isTeardownRequested()",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.privateDnsRouteSet(boolean)",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.reconnect()",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.setDataEnable(boolean)",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.setRadio(boolean)",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.setTeardownRequested(boolean)",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.startMonitoring(Context,Handler)",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.startReverseTether(String,BluetoothDevice)",2,6,6
"android.bluetooth.BluetoothTetheringDataTracker.startUsingNetworkFeature(String,int,int)",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.stopReverseTether(String)",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.stopUsingNetworkFeature(String,int,int)",1,1,1
"android.bluetooth.BluetoothTetheringDataTracker.teardown()",1,2,2
"android.bluetooth.BluetoothUuid.containsAllUuids(ParcelUuid[],ParcelUuid[])",6,2,8
"android.bluetooth.BluetoothUuid.containsAnyUuid(ParcelUuid[],ParcelUuid[])",6,2,9
"android.bluetooth.BluetoothUuid.getServiceIdentifierFromParcelUuid(ParcelUuid)",1,1,1
"android.bluetooth.BluetoothUuid.isAdvAudioDist(ParcelUuid)",1,1,1
"android.bluetooth.BluetoothUuid.isAudioSink(ParcelUuid)",1,1,1
"android.bluetooth.BluetoothUuid.isAudioSource(ParcelUuid)",1,1,1
"android.bluetooth.BluetoothUuid.isAvrcpController(ParcelUuid)",1,1,1
"android.bluetooth.BluetoothUuid.isAvrcpTarget(ParcelUuid)",1,1,1
"android.bluetooth.BluetoothUuid.isBnep(ParcelUuid)",1,1,1
"android.bluetooth.BluetoothUuid.isHandsfree(ParcelUuid)",1,1,1
"android.bluetooth.BluetoothUuid.isHeadset(ParcelUuid)",1,1,1
"android.bluetooth.BluetoothUuid.isInputDevice(ParcelUuid)",1,1,1
"android.bluetooth.BluetoothUuid.isNap(ParcelUuid)",1,1,1
"android.bluetooth.BluetoothUuid.isPanu(ParcelUuid)",1,1,1
"android.bluetooth.BluetoothUuid.isUuidPresent(ParcelUuid[],ParcelUuid)",5,2,7
"android.bluetooth.HeadsetBase.HeadsetBase(PowerManager,BluetoothAdapter,BluetoothDevice,int)",1,1,1
"android.bluetooth.HeadsetBase.HeadsetBase(PowerManager,BluetoothAdapter,BluetoothDevice,int,int,Handler)",1,1,1
"android.bluetooth.HeadsetBase.acquireWakeLock()",1,2,2
"android.bluetooth.HeadsetBase.classInitNative()",1,1,1
"android.bluetooth.HeadsetBase.cleanupNativeDataNative()",1,1,1
"android.bluetooth.HeadsetBase.connect(Handler)",3,2,3
"android.bluetooth.HeadsetBase.connectAsync()",1,1,2
"android.bluetooth.HeadsetBase.connectAsyncNative()",1,1,1
"android.bluetooth.HeadsetBase.connectNative()",1,1,1
"android.bluetooth.HeadsetBase.disconnect()",1,2,2
"android.bluetooth.HeadsetBase.disconnectNative()",1,1,1
"android.bluetooth.HeadsetBase.finalize()",1,1,1
"android.bluetooth.HeadsetBase.getAtInputCount()",1,1,1
"android.bluetooth.HeadsetBase.getAtParser()",1,1,1
"android.bluetooth.HeadsetBase.getConnectTimestamp()",1,1,1
"android.bluetooth.HeadsetBase.getDirection()",1,1,1
"android.bluetooth.HeadsetBase.getLastReadStatusNative()",1,1,1
"android.bluetooth.HeadsetBase.getRemainingAsyncConnectWaitingTimeMs()",1,1,1
"android.bluetooth.HeadsetBase.getRemoteDevice()",1,1,1
"android.bluetooth.HeadsetBase.handleInput(String)",1,4,5
"android.bluetooth.HeadsetBase.initializeAtParser()",1,1,1
"android.bluetooth.HeadsetBase.initializeNativeDataNative(int)",1,1,1
"android.bluetooth.HeadsetBase.isConnected()",1,1,1
"android.bluetooth.HeadsetBase.log(String)",1,1,1
"android.bluetooth.HeadsetBase.readNative(int)",1,1,1
"android.bluetooth.HeadsetBase.releaseWakeLock()",1,2,2
"android.bluetooth.HeadsetBase.sendURC(String)",2,2,2
"android.bluetooth.HeadsetBase.sendURCNative(String)",1,1,1
"android.bluetooth.HeadsetBase.startEventThread()",4,5,5
"android.bluetooth.HeadsetBase.stopEventThread()",1,1,2
"android.bluetooth.HeadsetBase.waitForAsyncConnect(int,Handler)",1,1,2
"android.bluetooth.HeadsetBase.waitForAsyncConnectNative(int)",1,1,1
"android.content.AbstractThreadedSyncAdapter.AbstractThreadedSyncAdapter(Context,boolean)",1,1,1
"android.content.AbstractThreadedSyncAdapter.AbstractThreadedSyncAdapter(Context,boolean,boolean)",1,1,1
"android.content.AbstractThreadedSyncAdapter.ISyncAdapterImpl.cancelSync(ISyncContext)",3,4,5
"android.content.AbstractThreadedSyncAdapter.ISyncAdapterImpl.initialize(Account,String)",1,1,1
"android.content.AbstractThreadedSyncAdapter.ISyncAdapterImpl.startSync(ISyncContext,String,Account,Bundle)",3,7,7
"android.content.AbstractThreadedSyncAdapter.SyncThread.SyncThread(String,SyncContext,String,Account,Bundle)",1,1,1
"android.content.AbstractThreadedSyncAdapter.SyncThread.isCanceled()",1,1,1
"android.content.AbstractThreadedSyncAdapter.SyncThread.run()",2,4,5
"android.content.AbstractThreadedSyncAdapter.getContext()",1,1,1
"android.content.AbstractThreadedSyncAdapter.getSyncAdapterBinder()",1,1,1
"android.content.AbstractThreadedSyncAdapter.onSyncCanceled()",1,2,2
"android.content.AbstractThreadedSyncAdapter.onSyncCanceled(Thread)",1,1,1
"android.content.AbstractThreadedSyncAdapter.toSyncKey(Account)",2,1,2
"android.content.ActivityNotFoundException.ActivityNotFoundException()",1,1,1
"android.content.ActivityNotFoundException.ActivityNotFoundException(String)",1,1,1
"android.content.AsyncQueryHandler.AsyncQueryHandler(ContentResolver)",1,2,2
"android.content.AsyncQueryHandler.WorkerHandler.WorkerHandler(Looper)",1,1,1
"android.content.AsyncQueryHandler.WorkerHandler.handleMessage(Message)",3,5,9
"android.content.AsyncQueryHandler.cancelOperation(int)",1,1,1
"android.content.AsyncQueryHandler.createHandler(Looper)",1,1,1
"android.content.AsyncQueryHandler.handleMessage(Message)",2,3,6
"android.content.AsyncQueryHandler.onDeleteComplete(int,Object,int)",1,1,1
"android.content.AsyncQueryHandler.onInsertComplete(int,Object,Uri)",1,1,1
"android.content.AsyncQueryHandler.onQueryComplete(int,Object,Cursor)",1,1,1
"android.content.AsyncQueryHandler.onUpdateComplete(int,Object,int)",1,1,1
"android.content.AsyncQueryHandler.startDelete(int,Object,Uri,String,String[])",1,1,1
"android.content.AsyncQueryHandler.startInsert(int,Object,Uri,ContentValues)",1,1,1
"android.content.AsyncQueryHandler.startQuery(int,Object,Uri,String[],String,String[],String)",1,1,1
"android.content.AsyncQueryHandler.startUpdate(int,Object,Uri,ContentValues,String,String[])",1,1,1
"android.content.AsyncTaskLoader.AsyncTaskLoader(Context)",1,1,1
"android.content.AsyncTaskLoader.LoadTask.doInBackground(Void...)",1,1,1
"android.content.AsyncTaskLoader.LoadTask.onCancelled()",1,1,1
"android.content.AsyncTaskLoader.LoadTask.onPostExecute(D)",1,1,1
"android.content.AsyncTaskLoader.cancelLoad()",2,2,2
"android.content.AsyncTaskLoader.dispatchOnLoadComplete(LoadTask,D)",1,2,2
"android.content.AsyncTaskLoader.onCancelled(D)",1,1,1
"android.content.AsyncTaskLoader.onForceLoad()",1,1,1
"android.content.BroadcastReceiver.BroadcastReceiver()",1,1,1
"android.content.BroadcastReceiver.PendingResult.PendingResult(int,String,Bundle,int,boolean,boolean,IBinder)",1,1,1
"android.content.BroadcastReceiver.PendingResult.abortBroadcast()",1,1,1
"android.content.BroadcastReceiver.PendingResult.checkSynchronousHint()",2,1,3
"android.content.BroadcastReceiver.PendingResult.clearAbortBroadcast()",1,1,1
"android.content.BroadcastReceiver.PendingResult.finish()",1,7,8
"android.content.BroadcastReceiver.PendingResult.getAbortBroadcast()",1,1,1
"android.content.BroadcastReceiver.PendingResult.getResultCode()",1,1,1
"android.content.BroadcastReceiver.PendingResult.getResultData()",1,1,1
"android.content.BroadcastReceiver.PendingResult.getResultExtras(boolean)",2,1,3
"android.content.BroadcastReceiver.PendingResult.sendFinished(IActivityManager)",2,2,4
"android.content.BroadcastReceiver.PendingResult.setExtrasClassLoader(ClassLoader)",1,2,2
"android.content.BroadcastReceiver.PendingResult.setResult(int,String,Bundle)",1,1,1
"android.content.BroadcastReceiver.PendingResult.setResultCode(int)",1,1,1
"android.content.BroadcastReceiver.PendingResult.setResultData(String)",1,1,1
"android.content.BroadcastReceiver.PendingResult.setResultExtras(Bundle)",1,1,1
"android.content.BroadcastReceiver.abortBroadcast()",1,1,1
"android.content.BroadcastReceiver.checkSynchronousHint()",3,1,4
"android.content.BroadcastReceiver.clearAbortBroadcast()",1,1,2
"android.content.BroadcastReceiver.getAbortBroadcast()",1,1,2
"android.content.BroadcastReceiver.getDebugUnregister()",1,1,1
"android.content.BroadcastReceiver.getPendingResult()",1,1,1
"android.content.BroadcastReceiver.getResultCode()",1,1,2
"android.content.BroadcastReceiver.getResultData()",1,1,2
"android.content.BroadcastReceiver.getResultExtras(boolean)",3,1,4
"android.content.BroadcastReceiver.goAsync()",1,1,1
"android.content.BroadcastReceiver.isInitialStickyBroadcast()",1,1,2
"android.content.BroadcastReceiver.isOrderedBroadcast()",1,1,2
"android.content.BroadcastReceiver.peekService(Context,Intent)",1,1,2
"android.content.BroadcastReceiver.setDebugUnregister(boolean)",1,1,1
"android.content.BroadcastReceiver.setOrderedHint(boolean)",1,1,1
"android.content.BroadcastReceiver.setPendingResult(PendingResult)",1,1,1
"android.content.BroadcastReceiver.setResult(int,String,Bundle)",1,1,1
"android.content.BroadcastReceiver.setResultCode(int)",1,1,1
"android.content.BroadcastReceiver.setResultData(String)",1,1,1
"android.content.BroadcastReceiver.setResultExtras(Bundle)",1,1,1
"android.content.ClipData.ClipData(CharSequence,String[],Bitmap,Item)",2,1,2
"android.content.ClipData.ClipData(ClipDescription,Bitmap,Item)",2,1,2
"android.content.ClipData.ClipData(Parcel)",1,5,5
"android.content.ClipData.Item.Item(CharSequence)",1,1,1
"android.content.ClipData.Item.Item(CharSequence,Intent,Uri)",1,1,1
"android.content.ClipData.Item.Item(Intent)",1,1,1
"android.content.ClipData.Item.Item(Uri)",1,1,1
"android.content.ClipData.Item.coerceToText(Context)",4,6,9
"android.content.ClipData.Item.getIntent()",1,1,1
"android.content.ClipData.Item.getText()",1,1,1
"android.content.ClipData.Item.getUri()",1,1,1
"android.content.ClipData.addItem(Item)",2,1,2
"android.content.ClipData.describeContents()",1,1,1
"android.content.ClipData.getDescription()",1,1,1
"android.content.ClipData.getIcon()",1,1,1
"android.content.ClipData.getItem(int)",1,1,1
"android.content.ClipData.getItemCount()",1,1,1
"android.content.ClipData.newIntent(CharSequence,Bitmap,Intent)",1,1,1
"android.content.ClipData.newPlainText(CharSequence,Bitmap,CharSequence)",1,1,1
"android.content.ClipData.newRawUri(CharSequence,Bitmap,Uri)",1,1,1
"android.content.ClipData.newUri(ContentResolver,CharSequence,Bitmap,Uri)",1,3,7
"android.content.ClipData.writeToParcel(Parcel,int)",1,5,5
"android.content.ClipDescription.ClipDescription(CharSequence,String[])",2,1,2
"android.content.ClipDescription.ClipDescription(ClipDescription)",1,1,1
"android.content.ClipDescription.ClipDescription(Parcel)",1,1,1
"android.content.ClipDescription.compareMimeTypes(String,String)",6,5,8
"android.content.ClipDescription.describeContents()",1,1,1
"android.content.ClipDescription.filterMimeTypes(String)",2,3,5
"android.content.ClipDescription.getLabel()",1,1,1
"android.content.ClipDescription.getMimeType(int)",1,1,1
"android.content.ClipDescription.getMimeTypeCount()",1,1,1
"android.content.ClipDescription.hasMimeType(String)",3,2,3
"android.content.ClipDescription.validate()",5,1,5
"android.content.ClipDescription.writeToParcel(Parcel,int)",1,1,1
"android.content.ClipboardManager.ClipboardManager(Context,Handler)",1,1,1
"android.content.ClipboardManager.addPrimaryClipChangedListener(OnPrimaryClipChangedListener)",1,2,3
"android.content.ClipboardManager.getPrimaryClip()",1,1,2
"android.content.ClipboardManager.getPrimaryClipDescription()",1,1,2
"android.content.ClipboardManager.getService()",2,1,2
"android.content.ClipboardManager.getText()",2,3,3
"android.content.ClipboardManager.hasPrimaryClip()",1,1,2
"android.content.ClipboardManager.hasText()",1,1,2
"android.content.ClipboardManager.removePrimaryClipChangedListener(OnPrimaryClipChangedListener)",1,2,3
"android.content.ClipboardManager.reportPrimaryClipChanged()",2,2,3
"android.content.ClipboardManager.setPrimaryClip(ClipData)",1,1,2
"android.content.ClipboardManager.setText(CharSequence)",1,1,1
"android.content.ComponentName.ComponentName(Context,Class<?>)",1,1,1
"android.content.ComponentName.ComponentName(Context,String)",2,1,2
"android.content.ComponentName.ComponentName(Parcel)",3,1,3
"android.content.ComponentName.ComponentName(String,Parcel)",1,1,1
"android.content.ComponentName.ComponentName(String,String)",3,1,3
"android.content.ComponentName.clone()",1,1,1
"android.content.ComponentName.compareTo(ComponentName)",2,1,2
"android.content.ComponentName.describeContents()",1,1,1
"android.content.ComponentName.equals(Object)",2,3,4
"android.content.ComponentName.flattenToShortString()",1,1,1
"android.content.ComponentName.flattenToString()",1,1,1
"android.content.ComponentName.getClassName()",1,1,1
"android.content.ComponentName.getPackageName()",1,1,1
"android.content.ComponentName.getShortClassName()",3,4,4
"android.content.ComponentName.hashCode()",1,1,1
"android.content.ComponentName.readFromParcel(Parcel)",1,1,2
"android.content.ComponentName.toShortString()",1,1,1
"android.content.ComponentName.toString()",1,1,1
"android.content.ComponentName.unflattenFromString(String)",2,3,5
"android.content.ComponentName.writeToParcel(ComponentName,Parcel)",1,2,2
"android.content.ComponentName.writeToParcel(Parcel,int)",1,1,1
"android.content.ContentProvider.ContentProvider()",1,1,1
"android.content.ContentProvider.ContentProvider(Context,String,String,PathPermission[])",1,1,1
"android.content.ContentProvider.Transport.applyBatch(ArrayList<ContentProviderOperation>)",1,4,4
"android.content.ContentProvider.Transport.bulkInsert(Uri,ContentValues[])",1,1,1
"android.content.ContentProvider.Transport.bulkQuery(Uri,String[],String,String[],String,IContentObserver,CursorWindow)",2,1,2
"android.content.ContentProvider.Transport.call(String,String,Bundle)",1,1,1
"android.content.ContentProvider.Transport.delete(Uri,String,String[])",1,1,1
"android.content.ContentProvider.Transport.enforceReadPermission(Uri)",8,7,11
"android.content.ContentProvider.Transport.enforceWritePermission(Uri)",2,1,2
"android.content.ContentProvider.Transport.getContentProvider()",1,1,1
"android.content.ContentProvider.Transport.getStreamTypes(Uri,String)",1,1,1
"android.content.ContentProvider.Transport.getType(Uri)",1,1,1
"android.content.ContentProvider.Transport.hasWritePermission(Uri)",8,7,11
"android.content.ContentProvider.Transport.insert(Uri,ContentValues)",1,1,1
"android.content.ContentProvider.Transport.openAssetFile(Uri,String)",1,3,3
"android.content.ContentProvider.Transport.openFile(Uri,String)",1,3,3
"android.content.ContentProvider.Transport.openTypedAssetFile(Uri,String,Bundle)",1,1,1
"android.content.ContentProvider.Transport.query(Uri,String[],String,String[],String)",1,1,1
"android.content.ContentProvider.Transport.update(Uri,ContentValues,String,String[])",1,1,1
"android.content.ContentProvider.applyBatch(ArrayList<ContentProviderOperation>)",1,2,2
"android.content.ContentProvider.attachInfo(Context,ProviderInfo)",1,3,3
"android.content.ContentProvider.bulkInsert(Uri,ContentValues[])",1,2,2
"android.content.ContentProvider.call(String,String,Bundle)",1,1,1
"android.content.ContentProvider.coerceToLocalContentProvider(IContentProvider)",2,2,2
"android.content.ContentProvider.getContext()",1,1,1
"android.content.ContentProvider.getIContentProvider()",1,1,1
"android.content.ContentProvider.getPathPermissions()",1,1,1
"android.content.ContentProvider.getReadPermission()",1,1,1
"android.content.ContentProvider.getStreamTypes(Uri,String)",1,1,1
"android.content.ContentProvider.getWritePermission()",1,1,1
"android.content.ContentProvider.isTemporary()",1,1,1
"android.content.ContentProvider.onConfigurationChanged(Configuration)",1,1,1
"android.content.ContentProvider.onLowMemory()",1,1,1
"android.content.ContentProvider.openAssetFile(Uri,String)",1,1,2
"android.content.ContentProvider.openFile(Uri,String)",1,1,1
"android.content.ContentProvider.openFileHelper(Uri,String)",4,5,7
"android.content.ContentProvider.openPipeHelper(Uri,String,Bundle,T,PipeDataWriter<T>)",1,2,3
"android.content.ContentProvider.openTypedAssetFile(Uri,String,Bundle)",3,4,4
"android.content.ContentProvider.setPathPermissions(PathPermission[])",1,1,1
"android.content.ContentProvider.setReadPermission(String)",1,1,1
"android.content.ContentProvider.setWritePermission(String)",1,1,1
"android.content.ContentProvider.shutdown()",1,1,1
"android.content.ContentProviderClient.ContentProviderClient(ContentResolver,IContentProvider)",1,1,1
"android.content.ContentProviderClient.applyBatch(ArrayList<ContentProviderOperation>)",1,1,1
"android.content.ContentProviderClient.bulkInsert(Uri,ContentValues[])",1,1,1
"android.content.ContentProviderClient.delete(Uri,String,String[])",1,1,1
"android.content.ContentProviderClient.getLocalContentProvider()",1,1,1
"android.content.ContentProviderClient.getStreamTypes(Uri,String)",1,1,1
"android.content.ContentProviderClient.getType(Uri)",1,1,1
"android.content.ContentProviderClient.insert(Uri,ContentValues)",1,1,1
"android.content.ContentProviderClient.openAssetFile(Uri,String)",1,1,1
"android.content.ContentProviderClient.openFile(Uri,String)",1,1,1
"android.content.ContentProviderClient.openTypedAssetFileDescriptor(Uri,String,Bundle)",1,1,1
"android.content.ContentProviderClient.query(Uri,String[],String,String[],String)",1,1,1
"android.content.ContentProviderClient.release()",1,1,1
"android.content.ContentProviderClient.update(Uri,ContentValues,String,String[])",1,1,1
"android.content.ContentProviderNative.ContentProviderNative()",1,1,1
"android.content.ContentProviderNative.asBinder()",1,1,1
"android.content.ContentProviderNative.asInterface(IBinder)",3,1,3
"android.content.ContentProviderNative.onTransact(int,Parcel,Parcel,int)",13,24,24
"android.content.ContentProviderOperation.Builder.Builder(int,Uri)",2,1,2
"android.content.ContentProviderOperation.Builder.build()",5,10,12
"android.content.ContentProviderOperation.Builder.withExpectedCount(int)",2,1,4
"android.content.ContentProviderOperation.Builder.withSelection(String,String[])",2,2,5
"android.content.ContentProviderOperation.Builder.withSelectionBackReference(int,int)",2,1,5
"android.content.ContentProviderOperation.Builder.withValue(String,Object)",12,11,15
"android.content.ContentProviderOperation.Builder.withValueBackReference(String,int)",2,1,5
"android.content.ContentProviderOperation.Builder.withValueBackReferences(ContentValues)",2,1,4
"android.content.ContentProviderOperation.Builder.withValues(ContentValues)",2,1,5
"android.content.ContentProviderOperation.Builder.withYieldAllowed(boolean)",1,1,1
"android.content.ContentProviderOperation.ContentProviderOperation(Builder)",1,1,1
"android.content.ContentProviderOperation.ContentProviderOperation(Parcel)",1,8,9
"android.content.ContentProviderOperation.apply(ContentProvider,ContentProviderResult[],int)",11,12,14
"android.content.ContentProviderOperation.backRefToValue(ContentProviderResult[],int,Integer)",2,3,3
"android.content.ContentProviderOperation.describeContents()",1,1,1
"android.content.ContentProviderOperation.getType()",1,1,1
"android.content.ContentProviderOperation.getUri()",1,1,1
"android.content.ContentProviderOperation.isReadOperation()",1,1,1
"android.content.ContentProviderOperation.isWriteOperation()",1,1,3
"android.content.ContentProviderOperation.isYieldAllowed()",1,1,1
"android.content.ContentProviderOperation.newAssertQuery(Uri)",1,1,1
"android.content.ContentProviderOperation.newDelete(Uri)",1,1,1
"android.content.ContentProviderOperation.newInsert(Uri)",1,1,1
"android.content.ContentProviderOperation.newUpdate(Uri)",1,1,1
"android.content.ContentProviderOperation.resolveSelectionArgsBackReferences(ContentProviderResult[],int)",2,2,3
"android.content.ContentProviderOperation.resolveValueBackReferences(ContentProviderResult[],int)",4,3,5
"android.content.ContentProviderOperation.toString()",1,1,1
"android.content.ContentProviderOperation.writeToParcel(Parcel,int)",1,8,9
"android.content.ContentProviderProxy.ContentProviderProxy(IBinder)",1,1,1
"android.content.ContentProviderProxy.applyBatch(ArrayList<ContentProviderOperation>)",1,2,2
"android.content.ContentProviderProxy.asBinder()",1,1,1
"android.content.ContentProviderProxy.bulkInsert(Uri,ContentValues[])",1,1,1
"android.content.ContentProviderProxy.bulkQuery(Uri,String[],String,String[],String,IContentObserver,CursorWindow)",1,1,1
"android.content.ContentProviderProxy.bulkQueryInternal(Uri,String[],String,String[],String,IContentObserver,CursorWindow,BulkCursorToCursorAdaptor)",1,6,9
"android.content.ContentProviderProxy.call(String,String,Bundle)",1,1,1
"android.content.ContentProviderProxy.delete(Uri,String,String[])",1,1,1
"android.content.ContentProviderProxy.getStreamTypes(Uri,String)",1,1,1
"android.content.ContentProviderProxy.getType(Uri)",1,1,1
"android.content.ContentProviderProxy.insert(Uri,ContentValues)",1,1,1
"android.content.ContentProviderProxy.openAssetFile(Uri,String)",1,2,2
"android.content.ContentProviderProxy.openFile(Uri,String)",1,2,2
"android.content.ContentProviderProxy.openTypedAssetFile(Uri,String,Bundle)",1,2,2
"android.content.ContentProviderProxy.query(Uri,String[],String,String[],String)",2,1,2
"android.content.ContentProviderProxy.update(Uri,ContentValues,String,String[])",1,1,1
"android.content.ContentProviderResult.ContentProviderResult(Parcel)",1,2,2
"android.content.ContentProviderResult.ContentProviderResult(Uri)",2,1,2
"android.content.ContentProviderResult.ContentProviderResult(int)",1,1,1
"android.content.ContentProviderResult.describeContents()",1,1,1
"android.content.ContentProviderResult.toString()",2,2,2
"android.content.ContentProviderResult.writeToParcel(Parcel,int)",1,2,2
"android.content.ContentQueryMap.ContentQueryMap(Cursor,String,boolean,Handler)",1,2,2
"android.content.ContentQueryMap.close()",1,2,2
"android.content.ContentQueryMap.finalize()",1,2,2
"android.content.ContentQueryMap.getRows()",1,2,2
"android.content.ContentQueryMap.getValues(String)",1,2,2
"android.content.ContentQueryMap.readCursorIntoCache(Cursor)",1,5,5
"android.content.ContentQueryMap.requery()",3,1,3
"android.content.ContentQueryMap.setKeepUpdated(boolean)",2,4,6
"android.content.ContentResolver.ContentResolver(Context)",1,1,1
"android.content.ContentResolver.CursorWrapperInner.CursorWrapperInner(Cursor,IContentProvider)",1,1,1
"android.content.ContentResolver.CursorWrapperInner.close()",1,1,1
"android.content.ContentResolver.CursorWrapperInner.finalize()",1,2,2
"android.content.ContentResolver.ParcelFileDescriptorInner.ParcelFileDescriptorInner(ParcelFileDescriptor,IContentProvider)",1,1,1
"android.content.ContentResolver.ParcelFileDescriptorInner.close()",1,2,2
"android.content.ContentResolver.ParcelFileDescriptorInner.finalize()",1,2,2
"android.content.ContentResolver.acquireContentProviderClient(String)",2,1,2
"android.content.ContentResolver.acquireContentProviderClient(Uri)",2,1,2
"android.content.ContentResolver.acquireExistingProvider(Context,String)",1,1,1
"android.content.ContentResolver.acquireExistingProvider(Uri)",3,2,3
"android.content.ContentResolver.acquireProvider(String)",2,1,2
"android.content.ContentResolver.acquireProvider(Uri)",3,2,3
"android.content.ContentResolver.addPeriodicSync(Account,String,Bundle,long)",4,7,11
"android.content.ContentResolver.addStatusChangeListener(int,SyncStatusObserver)",2,1,3
"android.content.ContentResolver.applyBatch(String,ArrayList<ContentProviderOperation>)",2,1,2
"android.content.ContentResolver.bulkInsert(Uri,ContentValues[])",2,1,3
"android.content.ContentResolver.cancelSync(Account,String)",1,1,2
"android.content.ContentResolver.cancelSync(Uri)",1,2,2
"android.content.ContentResolver.delete(Uri,String,String[])",2,1,3
"android.content.ContentResolver.getContentService()",2,3,4
"android.content.ContentResolver.getCurrentSync()",2,1,3
"android.content.ContentResolver.getCurrentSyncs()",1,1,2
"android.content.ContentResolver.getIsSyncable(Account,String)",1,1,2
"android.content.ContentResolver.getMasterSyncAutomatically()",1,1,2
"android.content.ContentResolver.getPeriodicSyncs(Account,String)",3,1,4
"android.content.ContentResolver.getResourceId(Uri)",6,4,8
"android.content.ContentResolver.getStreamTypes(Uri,String)",2,1,3
"android.content.ContentResolver.getSyncAdapterTypes()",1,1,2
"android.content.ContentResolver.getSyncAutomatically(Account,String)",1,1,2
"android.content.ContentResolver.getSyncStatus(Account,String)",1,1,2
"android.content.ContentResolver.getType(Uri)",3,4,7
"android.content.ContentResolver.insert(Uri,ContentValues)",2,1,3
"android.content.ContentResolver.isSyncActive(Account,String)",1,1,2
"android.content.ContentResolver.isSyncPending(Account,String)",1,1,2
"android.content.ContentResolver.maybeLogQueryToEventLog(long,Uri,String[],String,String)",3,5,9
"android.content.ContentResolver.maybeLogUpdateToEventLog(long,Uri,String,String)",3,2,5
"android.content.ContentResolver.modeToMode(Uri,String)",6,6,7
"android.content.ContentResolver.notifyChange(Uri,ContentObserver)",1,1,1
"android.content.ContentResolver.notifyChange(Uri,ContentObserver,boolean)",1,3,4
"android.content.ContentResolver.openAssetFileDescriptor(Uri,String)",7,6,11
"android.content.ContentResolver.openFileDescriptor(Uri,String)",3,2,4
"android.content.ContentResolver.openInputStream(Uri)",3,4,6
"android.content.ContentResolver.openOutputStream(Uri)",1,1,1
"android.content.ContentResolver.openOutputStream(Uri,String)",1,2,3
"android.content.ContentResolver.openTypedAssetFileDescriptor(Uri,String,Bundle)",3,3,6
"android.content.ContentResolver.query(Uri,String[],String,String[],String)",3,4,5
"android.content.ContentResolver.registerContentObserver(Uri,boolean,ContentObserver)",1,1,2
"android.content.ContentResolver.removePeriodicSync(Account,String,Bundle)",3,1,4
"android.content.ContentResolver.removeStatusChangeListener(Object)",2,1,3
"android.content.ContentResolver.requestSync(Account,String,Bundle)",1,1,2
"android.content.ContentResolver.samplePercentForDuration(long)",2,1,2
"android.content.ContentResolver.setIsSyncable(Account,String,int)",1,1,2
"android.content.ContentResolver.setMasterSyncAutomatically(boolean)",1,1,2
"android.content.ContentResolver.setSyncAutomatically(Account,String,boolean)",1,1,2
"android.content.ContentResolver.startSync(Uri,Bundle)",1,3,4
"android.content.ContentResolver.unregisterContentObserver(ContentObserver)",1,2,3
"android.content.ContentResolver.update(Uri,ContentValues,String,String[])",2,1,3
"android.content.ContentResolver.validateSyncExtrasBundle(Bundle)",10,2,12
"android.content.ContentService.ContentService(Context,boolean)",1,1,1
"android.content.ContentService.ObserverCall.ObserverCall(ObserverNode,IContentObserver,boolean)",1,1,1
"android.content.ContentService.ObserverNode.ObserverEntry.ObserverEntry(IContentObserver,boolean,Object)",1,2,2
"android.content.ContentService.ObserverNode.ObserverEntry.binderDied()",1,1,1
"android.content.ContentService.ObserverNode.ObserverNode(String)",1,1,1
"android.content.ContentService.ObserverNode.addObserverLocked(Uri,IContentObserver,boolean,Object)",1,1,1
"android.content.ContentService.ObserverNode.addObserverLocked(Uri,int,IContentObserver,boolean,Object)",5,4,5
"android.content.ContentService.ObserverNode.collectMyObserversLocked(boolean,IContentObserver,boolean,ArrayList<ObserverCall>)",3,5,8
"android.content.ContentService.ObserverNode.collectObserversLocked(Uri,int,IContentObserver,boolean,ArrayList<ObserverCall>)",4,6,7
"android.content.ContentService.ObserverNode.countUriSegments(Uri)",2,1,2
"android.content.ContentService.ObserverNode.getUriSegment(Uri,int)",3,3,3
"android.content.ContentService.ObserverNode.removeObserverLocked(IContentObserver)",4,6,7
"android.content.ContentService.addPeriodicSync(Account,String,Bundle,long)",1,1,1
"android.content.ContentService.addStatusChangeListener(int,ISyncStatusObserver)",1,2,3
"android.content.ContentService.cancelSync(Account,String)",1,2,2
"android.content.ContentService.dump(FileDescriptor,PrintWriter,String[])",1,2,2
"android.content.ContentService.getCurrentSyncs()",1,1,1
"android.content.ContentService.getIsSyncable(Account,String)",2,2,2
"android.content.ContentService.getMasterSyncAutomatically()",2,2,2
"android.content.ContentService.getPeriodicSyncs(Account,String)",1,1,1
"android.content.ContentService.getSyncAdapterTypes()",1,1,1
"android.content.ContentService.getSyncAutomatically(Account,String)",2,2,2
"android.content.ContentService.getSyncManager()",1,2,3
"android.content.ContentService.getSyncStatus(Account,String)",2,2,2
"android.content.ContentService.isSyncActive(Account,String)",2,2,2
"android.content.ContentService.isSyncPending(Account,String)",2,2,2
"android.content.ContentService.main(Context,boolean)",1,1,1
"android.content.ContentService.notifyChange(Uri,IContentObserver,boolean,boolean)",1,9,9
"android.content.ContentService.onTransact(int,Parcel,Parcel,int)",1,3,3
"android.content.ContentService.registerContentObserver(Uri,boolean,IContentObserver)",2,2,4
"android.content.ContentService.removePeriodicSync(Account,String,Bundle)",1,1,1
"android.content.ContentService.removeStatusChangeListener(ISyncStatusObserver)",1,2,3
"android.content.ContentService.requestSync(Account,String,Bundle)",1,2,2
"android.content.ContentService.setIsSyncable(Account,String,int)",1,2,2
"android.content.ContentService.setMasterSyncAutomatically(boolean)",1,2,2
"android.content.ContentService.setSyncAutomatically(Account,String,boolean)",1,2,2
"android.content.ContentService.unregisterContentObserver(IContentObserver)",2,2,3
"android.content.ContentUris.appendId(Builder,long)",1,1,1
"android.content.ContentUris.parseId(Uri)",1,2,2
"android.content.ContentUris.withAppendedId(Uri,long)",1,1,1
"android.content.ContentValues.ContentValues()",1,1,1
"android.content.ContentValues.ContentValues(ContentValues)",1,1,1
"android.content.ContentValues.ContentValues(HashMap<String, Object>)",1,1,1
"android.content.ContentValues.ContentValues(int)",1,1,1
"android.content.ContentValues.clear()",1,1,1
"android.content.ContentValues.containsKey(String)",1,1,1
"android.content.ContentValues.describeContents()",1,1,1
"android.content.ContentValues.equals(Object)",2,1,2
"android.content.ContentValues.get(String)",1,1,1
"android.content.ContentValues.getAsBoolean(String)",3,4,4
"android.content.ContentValues.getAsByte(String)",2,5,5
"android.content.ContentValues.getAsByteArray(String)",2,1,2
"android.content.ContentValues.getAsDouble(String)",2,5,5
"android.content.ContentValues.getAsFloat(String)",2,5,5
"android.content.ContentValues.getAsInteger(String)",2,5,5
"android.content.ContentValues.getAsLong(String)",2,5,5
"android.content.ContentValues.getAsShort(String)",2,5,5
"android.content.ContentValues.getAsString(String)",1,2,2
"android.content.ContentValues.getStringArrayList(String)",1,1,1
"android.content.ContentValues.hashCode()",1,1,1
"android.content.ContentValues.keySet()",1,1,1
"android.content.ContentValues.put(String,Boolean)",1,1,1
"android.content.ContentValues.put(String,Byte)",1,1,1
"android.content.ContentValues.put(String,Double)",1,1,1
"android.content.ContentValues.put(String,Float)",1,1,1
"android.content.ContentValues.put(String,Integer)",1,1,1
"android.content.ContentValues.put(String,Long)",1,1,1
"android.content.ContentValues.put(String,Short)",1,1,1
"android.content.ContentValues.put(String,String)",1,1,1
"android.content.ContentValues.put(String,byte[])",1,1,1
"android.content.ContentValues.putAll(ContentValues)",1,1,1
"android.content.ContentValues.putNull(String)",1,1,1
"android.content.ContentValues.putStringArrayList(String,ArrayList<String>)",1,1,1
"android.content.ContentValues.remove(String)",1,1,1
"android.content.ContentValues.size()",1,1,1
"android.content.ContentValues.toString()",1,3,3
"android.content.ContentValues.valueSet()",1,1,1
"android.content.ContentValues.writeToParcel(Parcel,int)",1,1,1
"android.content.Context.getString(int)",1,1,1
"android.content.Context.getString(int,Object...)",1,1,1
"android.content.Context.getText(int)",1,1,1
"android.content.Context.isRestricted()",1,1,1
"android.content.Context.obtainStyledAttributes(AttributeSet,int[])",1,1,1
"android.content.Context.obtainStyledAttributes(AttributeSet,int[],int,int)",1,1,1
"android.content.Context.obtainStyledAttributes(int,int[])",1,1,1
"android.content.Context.obtainStyledAttributes(int[])",1,1,1
"android.content.ContextWrapper.ContextWrapper(Context)",1,1,1
"android.content.ContextWrapper.attachBaseContext(Context)",2,1,2
"android.content.ContextWrapper.bindService(Intent,ServiceConnection,int)",1,1,1
"android.content.ContextWrapper.checkCallingOrSelfPermission(String)",1,1,1
"android.content.ContextWrapper.checkCallingOrSelfUriPermission(Uri,int)",1,1,1
"android.content.ContextWrapper.checkCallingPermission(String)",1,1,1
"android.content.ContextWrapper.checkCallingUriPermission(Uri,int)",1,1,1
"android.content.ContextWrapper.checkPermission(String,int,int)",1,1,1
"android.content.ContextWrapper.checkUriPermission(Uri,String,String,int,int,int)",1,1,1
"android.content.ContextWrapper.checkUriPermission(Uri,int,int,int)",1,1,1
"android.content.ContextWrapper.clearWallpaper()",1,1,1
"android.content.ContextWrapper.createPackageContext(String,int)",1,1,1
"android.content.ContextWrapper.databaseList()",1,1,1
"android.content.ContextWrapper.deleteDatabase(String)",1,1,1
"android.content.ContextWrapper.deleteFile(String)",1,1,1
"android.content.ContextWrapper.enforceCallingOrSelfPermission(String,String)",1,1,1
"android.content.ContextWrapper.enforceCallingOrSelfUriPermission(Uri,int,String)",1,1,1
"android.content.ContextWrapper.enforceCallingPermission(String,String)",1,1,1
"android.content.ContextWrapper.enforceCallingUriPermission(Uri,int,String)",1,1,1
"android.content.ContextWrapper.enforcePermission(String,int,int,String)",1,1,1
"android.content.ContextWrapper.enforceUriPermission(Uri,String,String,int,int,int,String)",1,1,1
"android.content.ContextWrapper.enforceUriPermission(Uri,int,int,int,String)",1,1,1
"android.content.ContextWrapper.fileList()",1,1,1
"android.content.ContextWrapper.getApplicationContext()",1,1,1
"android.content.ContextWrapper.getApplicationInfo()",1,1,1
"android.content.ContextWrapper.getAssets()",1,1,1
"android.content.ContextWrapper.getBaseContext()",1,1,1
"android.content.ContextWrapper.getCacheDir()",1,1,1
"android.content.ContextWrapper.getClassLoader()",1,1,1
"android.content.ContextWrapper.getContentResolver()",1,1,1
"android.content.ContextWrapper.getDatabasePath(String)",1,1,1
"android.content.ContextWrapper.getDir(String,int)",1,1,1
"android.content.ContextWrapper.getExternalCacheDir()",1,1,1
"android.content.ContextWrapper.getExternalFilesDir(String)",1,1,1
"android.content.ContextWrapper.getFileStreamPath(String)",1,1,1
"android.content.ContextWrapper.getFilesDir()",1,1,1
"android.content.ContextWrapper.getMainLooper()",1,1,1
"android.content.ContextWrapper.getPackageCodePath()",1,1,1
"android.content.ContextWrapper.getPackageManager()",1,1,1
"android.content.ContextWrapper.getPackageName()",1,1,1
"android.content.ContextWrapper.getPackageResourcePath()",1,1,1
"android.content.ContextWrapper.getResources()",1,1,1
"android.content.ContextWrapper.getSharedPreferences(String,int)",1,1,1
"android.content.ContextWrapper.getSharedPrefsFile(String)",1,1,1
"android.content.ContextWrapper.getSystemService(String)",1,1,1
"android.content.ContextWrapper.getTheme()",1,1,1
"android.content.ContextWrapper.getWallpaper()",1,1,1
"android.content.ContextWrapper.getWallpaperDesiredMinimumHeight()",1,1,1
"android.content.ContextWrapper.getWallpaperDesiredMinimumWidth()",1,1,1
"android.content.ContextWrapper.grantUriPermission(String,Uri,int)",1,1,1
"android.content.ContextWrapper.isRestricted()",1,1,1
"android.content.ContextWrapper.openFileInput(String)",1,1,1
"android.content.ContextWrapper.openFileOutput(String,int)",1,1,1
"android.content.ContextWrapper.openOrCreateDatabase(String,int,CursorFactory)",1,1,1
"android.content.ContextWrapper.openOrCreateDatabase(String,int,CursorFactory,DatabaseErrorHandler)",1,1,1
"android.content.ContextWrapper.peekWallpaper()",1,1,1
"android.content.ContextWrapper.registerReceiver(BroadcastReceiver,IntentFilter)",1,1,1
"android.content.ContextWrapper.registerReceiver(BroadcastReceiver,IntentFilter,String,Handler)",1,1,1
"android.content.ContextWrapper.removeStickyBroadcast(Intent)",1,1,1
"android.content.ContextWrapper.revokeUriPermission(Uri,int)",1,1,1
"android.content.ContextWrapper.sendBroadcast(Intent)",1,1,1
"android.content.ContextWrapper.sendBroadcast(Intent,String)",1,1,1
"android.content.ContextWrapper.sendOrderedBroadcast(Intent,String)",1,1,1
"android.content.ContextWrapper.sendOrderedBroadcast(Intent,String,BroadcastReceiver,Handler,int,String,Bundle)",1,1,1
"android.content.ContextWrapper.sendStickyBroadcast(Intent)",1,1,1
"android.content.ContextWrapper.sendStickyOrderedBroadcast(Intent,BroadcastReceiver,Handler,int,String,Bundle)",1,1,1
"android.content.ContextWrapper.setTheme(int)",1,1,1
"android.content.ContextWrapper.setWallpaper(Bitmap)",1,1,1
"android.content.ContextWrapper.setWallpaper(InputStream)",1,1,1
"android.content.ContextWrapper.startActivities(Intent[])",1,1,1
"android.content.ContextWrapper.startActivity(Intent)",1,1,1
"android.content.ContextWrapper.startInstrumentation(ComponentName,String,Bundle)",1,1,1
"android.content.ContextWrapper.startIntentSender(IntentSender,Intent,int,int,int)",1,1,1
"android.content.ContextWrapper.startService(Intent)",1,1,1
"android.content.ContextWrapper.stopService(Intent)",1,1,1
"android.content.ContextWrapper.unbindService(ServiceConnection)",1,1,1
"android.content.ContextWrapper.unregisterReceiver(BroadcastReceiver)",1,1,1
"android.content.CursorEntityIterator.CursorEntityIterator(Cursor)",1,1,1
"android.content.CursorEntityIterator.close()",2,1,2
"android.content.CursorEntityIterator.hasNext()",2,1,2
"android.content.CursorEntityIterator.next()",3,1,4
"android.content.CursorEntityIterator.remove()",1,1,1
"android.content.CursorEntityIterator.reset()",2,1,2
"android.content.CursorLoader.CursorLoader(Context,Uri,String[],String,String[],String)",1,1,1
"android.content.CursorLoader.deliverResult(Cursor)",2,7,7
"android.content.CursorLoader.dump(String,FileDescriptor,PrintWriter,String[])",1,1,1
"android.content.CursorLoader.getProjection()",1,1,1
"android.content.CursorLoader.getSelection()",1,1,1
"android.content.CursorLoader.getSelectionArgs()",1,1,1
"android.content.CursorLoader.getSortOrder()",1,1,1
"android.content.CursorLoader.getUri()",1,1,1
"android.content.CursorLoader.loadInBackground()",1,2,2
"android.content.CursorLoader.onCancelled(Cursor)",1,3,3
"android.content.CursorLoader.onReset()",1,3,3
"android.content.CursorLoader.onStartLoading()",1,4,4
"android.content.CursorLoader.onStopLoading()",1,1,1
"android.content.CursorLoader.registerContentObserver(Cursor,ContentObserver)",1,1,1
"android.content.CursorLoader.setProjection(String[])",1,1,1
"android.content.CursorLoader.setSelection(String)",1,1,1
"android.content.CursorLoader.setSelectionArgs(String[])",1,1,1
"android.content.CursorLoader.setSortOrder(String)",1,1,1
"android.content.CursorLoader.setUri(Uri)",1,1,1
"android.content.DefaultDataHandler.characters(char[],int,int)",1,1,1
"android.content.DefaultDataHandler.endDocument()",1,1,1
"android.content.DefaultDataHandler.endElement(String,String,String)",3,3,4
"android.content.DefaultDataHandler.endPrefixMapping(String)",1,1,1
"android.content.DefaultDataHandler.ignorableWhitespace(char[],int,int)",1,1,1
"android.content.DefaultDataHandler.insert(ContentResolver,InputStream)",1,1,1
"android.content.DefaultDataHandler.insert(ContentResolver,String)",1,1,1
"android.content.DefaultDataHandler.insertRow()",1,1,1
"android.content.DefaultDataHandler.parseRow(Attributes)",4,5,5
"android.content.DefaultDataHandler.processingInstruction(String,String)",1,1,1
"android.content.DefaultDataHandler.setDocumentLocator(Locator)",1,1,1
"android.content.DefaultDataHandler.skippedEntity(String)",1,1,1
"android.content.DefaultDataHandler.startDocument()",1,1,1
"android.content.DefaultDataHandler.startElement(String,String,String,Attributes)",10,15,18
"android.content.DefaultDataHandler.startPrefixMapping(String,String)",1,1,1
"android.content.Entity.Entity(ContentValues)",1,1,1
"android.content.Entity.NamedContentValues.NamedContentValues(Uri,ContentValues)",1,1,1
"android.content.Entity.addSubValue(Uri,ContentValues)",1,1,1
"android.content.Entity.getEntityValues()",1,1,1
"android.content.Entity.getSubValues()",1,1,1
"android.content.Entity.toString()",1,2,2
"android.content.Intent.FilterComparison.FilterComparison(Intent)",1,1,1
"android.content.Intent.FilterComparison.equals(Object)",2,2,2
"android.content.Intent.FilterComparison.getIntent()",1,1,1
"android.content.Intent.FilterComparison.hashCode()",1,1,1
"android.content.Intent.Intent()",1,1,1
"android.content.Intent.Intent(Context,Class<?>)",1,1,1
"android.content.Intent.Intent(Intent)",1,1,4
"android.content.Intent.Intent(Intent,boolean)",1,1,2
"android.content.Intent.Intent(Parcel)",1,1,1
"android.content.Intent.Intent(String)",1,1,1
"android.content.Intent.Intent(String,Uri)",1,1,1
"android.content.Intent.Intent(String,Uri,Context,Class<?>)",1,1,1
"android.content.Intent.ShortcutIconResource.describeContents()",1,1,1
"android.content.Intent.ShortcutIconResource.fromContext(Context,int)",1,1,1
"android.content.Intent.ShortcutIconResource.toString()",1,1,1
"android.content.Intent.ShortcutIconResource.writeToParcel(Parcel,int)",1,1,1
"android.content.Intent.addCategory(String)",1,1,2
"android.content.Intent.addFlags(int)",1,1,1
"android.content.Intent.clone()",1,1,1
"android.content.Intent.cloneFilter()",1,1,1
"android.content.Intent.createChooser(Intent,CharSequence)",1,2,2
"android.content.Intent.describeContents()",1,2,2
"android.content.Intent.fillIn(Intent,int)",1,4,25
"android.content.Intent.filterEquals(Intent)",26,13,26
"android.content.Intent.filterHashCode()",1,7,7
"android.content.Intent.getAction()",1,1,1
"android.content.Intent.getBooleanArrayExtra(String)",1,2,2
"android.content.Intent.getBooleanExtra(String,boolean)",1,2,2
"android.content.Intent.getBundleExtra(String)",1,2,2
"android.content.Intent.getByteArrayExtra(String)",1,2,2
"android.content.Intent.getByteExtra(String,byte)",1,2,2
"android.content.Intent.getCategories()",1,1,1
"android.content.Intent.getCharArrayExtra(String)",1,2,2
"android.content.Intent.getCharExtra(String,char)",1,2,2
"android.content.Intent.getCharSequenceArrayExtra(String)",1,2,2
"android.content.Intent.getCharSequenceArrayListExtra(String)",1,2,2
"android.content.Intent.getCharSequenceExtra(String)",1,2,2
"android.content.Intent.getComponent()",1,1,1
"android.content.Intent.getData()",1,1,1
"android.content.Intent.getDataString()",1,2,2
"android.content.Intent.getDoubleArrayExtra(String)",1,2,2
"android.content.Intent.getDoubleExtra(String,double)",1,2,2
"android.content.Intent.getExtra(String)",1,1,1
"android.content.Intent.getExtra(String,Object)",1,2,3
"android.content.Intent.getExtras()",1,1,2
"android.content.Intent.getFlags()",1,1,1
"android.content.Intent.getFloatArrayExtra(String)",1,2,2
"android.content.Intent.getFloatExtra(String,float)",1,2,2
"android.content.Intent.getIBinderExtra(String)",1,2,2
"android.content.Intent.getIntArrayExtra(String)",1,2,2
"android.content.Intent.getIntExtra(String,int)",1,2,2
"android.content.Intent.getIntegerArrayListExtra(String)",1,2,2
"android.content.Intent.getIntent(String)",1,1,1
"android.content.Intent.getIntentOld(String)",10,14,36
"android.content.Intent.getLongArrayExtra(String)",1,2,2
"android.content.Intent.getLongExtra(String,long)",1,2,2
"android.content.Intent.getPackage()",1,1,1
"android.content.Intent.getParcelableArrayExtra(String)",1,2,2
"android.content.Intent.getParcelableArrayListExtra(String)",1,2,2
"android.content.Intent.getParcelableExtra(String)",1,2,2
"android.content.Intent.getScheme()",1,2,2
"android.content.Intent.getSerializableExtra(String)",1,2,2
"android.content.Intent.getShortArrayExtra(String)",1,2,2
"android.content.Intent.getShortExtra(String,short)",1,2,2
"android.content.Intent.getSourceBounds()",1,1,1
"android.content.Intent.getStringArrayExtra(String)",1,2,2
"android.content.Intent.getStringArrayListExtra(String)",1,2,2
"android.content.Intent.getStringExtra(String)",1,2,2
"android.content.Intent.getType()",1,1,1
"android.content.Intent.hasCategory(String)",1,2,2
"android.content.Intent.hasExtra(String)",1,2,2
"android.content.Intent.hasFileDescriptors()",1,2,2
"android.content.Intent.makeMainActivity(ComponentName)",1,1,1
"android.content.Intent.makeRestartActivityTask(ComponentName)",1,1,1
"android.content.Intent.parseIntent(Resources,XmlPullParser,AttributeSet)",3,9,13
"android.content.Intent.parseUri(String,int)",25,29,32
"android.content.Intent.putCharSequenceArrayListExtra(String,ArrayList<CharSequence>)",1,1,2
"android.content.Intent.putExtra(String,Bundle)",1,1,2
"android.content.Intent.putExtra(String,CharSequence)",1,1,2
"android.content.Intent.putExtra(String,CharSequence[])",1,1,2
"android.content.Intent.putExtra(String,IBinder)",1,1,2
"android.content.Intent.putExtra(String,Parcelable)",1,1,2
"android.content.Intent.putExtra(String,Parcelable[])",1,1,2
"android.content.Intent.putExtra(String,Serializable)",1,1,2
"android.content.Intent.putExtra(String,String)",1,1,2
"android.content.Intent.putExtra(String,String[])",1,1,2
"android.content.Intent.putExtra(String,boolean)",1,1,2
"android.content.Intent.putExtra(String,boolean[])",1,1,2
"android.content.Intent.putExtra(String,byte)",1,1,2
"android.content.Intent.putExtra(String,byte[])",1,1,2
"android.content.Intent.putExtra(String,char)",1,1,2
"android.content.Intent.putExtra(String,char[])",1,1,2
"android.content.Intent.putExtra(String,double)",1,1,2
"android.content.Intent.putExtra(String,double[])",1,1,2
"android.content.Intent.putExtra(String,float)",1,1,2
"android.content.Intent.putExtra(String,float[])",1,1,2
"android.content.Intent.putExtra(String,int)",1,1,2
"android.content.Intent.putExtra(String,int[])",1,1,2
"android.content.Intent.putExtra(String,long)",1,1,2
"android.content.Intent.putExtra(String,long[])",1,1,2
"android.content.Intent.putExtra(String,short)",1,1,2
"android.content.Intent.putExtra(String,short[])",1,1,2
"android.content.Intent.putExtras(Bundle)",1,1,2
"android.content.Intent.putExtras(Intent)",1,3,3
"android.content.Intent.putIntegerArrayListExtra(String,ArrayList<Integer>)",1,1,2
"android.content.Intent.putParcelableArrayListExtra(String,ArrayList<? extends Parcelable>)",1,1,2
"android.content.Intent.putStringArrayListExtra(String,ArrayList<String>)",1,1,2
"android.content.Intent.readFromParcel(Parcel)",1,4,4
"android.content.Intent.removeCategory(String)",1,2,3
"android.content.Intent.removeExtra(String)",1,2,3
"android.content.Intent.replaceExtras(Bundle)",1,1,2
"android.content.Intent.replaceExtras(Intent)",1,1,2
"android.content.Intent.resolveActivity(PackageManager)",3,1,3
"android.content.Intent.resolveActivityInfo(PackageManager,int)",1,2,4
"android.content.Intent.resolveType(ContentResolver)",4,3,4
"android.content.Intent.resolveType(Context)",1,1,1
"android.content.Intent.resolveTypeIfNeeded(ContentResolver)",2,1,2
"android.content.Intent.setAction(String)",1,1,1
"android.content.Intent.setClass(Context,Class<?>)",1,1,1
"android.content.Intent.setClassName(Context,String)",1,1,1
"android.content.Intent.setClassName(String,String)",1,1,1
"android.content.Intent.setComponent(ComponentName)",1,1,1
"android.content.Intent.setData(Uri)",1,1,1
"android.content.Intent.setDataAndType(Uri,String)",1,1,1
"android.content.Intent.setExtrasClassLoader(ClassLoader)",1,2,2
"android.content.Intent.setFlags(int)",1,1,1
"android.content.Intent.setPackage(String)",1,1,1
"android.content.Intent.setSourceBounds(Rect)",1,1,2
"android.content.Intent.setType(String)",1,1,1
"android.content.Intent.toShortString(StringBuilder,boolean,boolean)",1,23,25
"android.content.Intent.toShortString(boolean,boolean)",1,1,1
"android.content.Intent.toString()",1,1,1
"android.content.Intent.toURI()",1,1,1
"android.content.Intent.toUri(int)",6,18,34
"android.content.Intent.writeToParcel(Parcel,int)",1,4,4
"android.content.IntentFilter.AuthorityEntry.AuthorityEntry(Parcel)",1,1,1
"android.content.IntentFilter.AuthorityEntry.AuthorityEntry(String,String)",1,4,4
"android.content.IntentFilter.AuthorityEntry.getHost()",1,1,1
"android.content.IntentFilter.AuthorityEntry.getPort()",1,1,1
"android.content.IntentFilter.AuthorityEntry.match(Uri)",7,4,8
"android.content.IntentFilter.AuthorityEntry.writeToParcel(Parcel)",1,1,2
"android.content.IntentFilter.IntentFilter()",1,1,1
"android.content.IntentFilter.IntentFilter(IntentFilter)",1,1,6
"android.content.IntentFilter.IntentFilter(Parcel)",1,8,8
"android.content.IntentFilter.IntentFilter(String)",1,1,1
"android.content.IntentFilter.IntentFilter(String,String)",1,1,1
"android.content.IntentFilter.MalformedMimeTypeException.MalformedMimeTypeException()",1,1,1
"android.content.IntentFilter.MalformedMimeTypeException.MalformedMimeTypeException(String)",1,1,1
"android.content.IntentFilter.actionsIterator()",1,2,2
"android.content.IntentFilter.addAction(String)",1,2,2
"android.content.IntentFilter.addCategory(String)",1,2,3
"android.content.IntentFilter.addDataAuthority(String,String)",1,2,3
"android.content.IntentFilter.addDataPath(String,int)",1,1,2
"android.content.IntentFilter.addDataScheme(String)",1,2,3
"android.content.IntentFilter.addDataType(String)",2,6,8
"android.content.IntentFilter.addStringToSet(String[],String,int[],int)",4,1,4
"android.content.IntentFilter.authoritiesIterator()",1,2,2
"android.content.IntentFilter.categoriesIterator()",1,2,2
"android.content.IntentFilter.countActions()",1,1,1
"android.content.IntentFilter.countCategories()",1,2,2
"android.content.IntentFilter.countDataAuthorities()",1,2,2
"android.content.IntentFilter.countDataPaths()",1,2,2
"android.content.IntentFilter.countDataSchemes()",1,2,2
"android.content.IntentFilter.countDataTypes()",1,2,2
"android.content.IntentFilter.create(String,String)",1,1,2
"android.content.IntentFilter.debugCheck()",1,1,1
"android.content.IntentFilter.describeContents()",1,1,1
"android.content.IntentFilter.dump(Printer,String)",1,15,16
"android.content.IntentFilter.findMimeType(String)",10,9,14
"android.content.IntentFilter.findStringInSet(String[],String,int[],int)",4,2,4
"android.content.IntentFilter.getAction(int)",1,1,1
"android.content.IntentFilter.getCategory(int)",1,1,1
"android.content.IntentFilter.getDataAuthority(int)",1,1,1
"android.content.IntentFilter.getDataPath(int)",1,1,1
"android.content.IntentFilter.getDataScheme(int)",1,1,1
"android.content.IntentFilter.getDataType(int)",1,1,1
"android.content.IntentFilter.getPriority()",1,1,1
"android.content.IntentFilter.hasAction(String)",1,1,1
"android.content.IntentFilter.hasCategory(String)",1,2,2
"android.content.IntentFilter.hasDataAuthority(Uri)",1,1,1
"android.content.IntentFilter.hasDataPath(String)",4,2,4
"android.content.IntentFilter.hasDataScheme(String)",1,2,2
"android.content.IntentFilter.hasDataType(String)",1,2,2
"android.content.IntentFilter.match(ContentResolver,Intent,boolean,String)",1,2,2
"android.content.IntentFilter.match(String,String,String,Uri,Set<String>,String)",4,12,12
"android.content.IntentFilter.matchAction(String)",2,3,4
"android.content.IntentFilter.matchCategories(Set<String>)",5,4,6
"android.content.IntentFilter.matchData(String,String,Uri)",12,9,19
"android.content.IntentFilter.matchDataAuthority(Uri)",4,2,4
"android.content.IntentFilter.pathsIterator()",1,2,2
"android.content.IntentFilter.readFromXml(XmlPullParser)",3,18,21
"android.content.IntentFilter.removeStringFromSet(String[],String,int[],int)",3,5,6
"android.content.IntentFilter.schemesIterator()",1,2,2
"android.content.IntentFilter.setPriority(int)",1,1,1
"android.content.IntentFilter.typesIterator()",1,2,2
"android.content.IntentFilter.writeToParcel(Parcel,int)",1,8,9
"android.content.IntentFilter.writeToXml(XmlSerializer)",2,9,12
"android.content.IntentSender.FinishedDispatcher.FinishedDispatcher(IntentSender,OnFinished,Handler)",1,1,1
"android.content.IntentSender.FinishedDispatcher.performReceive(Intent,int,String,Bundle,boolean,boolean)",1,2,2
"android.content.IntentSender.FinishedDispatcher.run()",1,1,1
"android.content.IntentSender.IntentSender(IBinder)",1,1,1
"android.content.IntentSender.IntentSender(IIntentSender)",1,1,1
"android.content.IntentSender.SendIntentException.SendIntentException()",1,1,1
"android.content.IntentSender.SendIntentException.SendIntentException(Exception)",1,1,1
"android.content.IntentSender.SendIntentException.SendIntentException(String)",1,1,1
"android.content.IntentSender.describeContents()",1,1,1
"android.content.IntentSender.equals(Object)",2,2,2
"android.content.IntentSender.getTarget()",1,1,1
"android.content.IntentSender.getTargetPackage()",1,1,2
"android.content.IntentSender.hashCode()",1,1,1
"android.content.IntentSender.readIntentSenderOrNullFromParcel(Parcel)",1,1,2
"android.content.IntentSender.sendIntent(Context,int,Intent,OnFinished,Handler)",2,2,5
"android.content.IntentSender.toString()",1,2,2
"android.content.IntentSender.writeIntentSenderOrNullToParcel(IntentSender,Parcel)",1,2,2
"android.content.IntentSender.writeToParcel(Parcel,int)",1,1,1
"android.content.Loader.ForceLoadContentObserver.ForceLoadContentObserver()",1,1,1
"android.content.Loader.ForceLoadContentObserver.deliverSelfNotifications()",1,1,1
"android.content.Loader.ForceLoadContentObserver.onChange(boolean)",1,1,1
"android.content.Loader.Loader(Context)",1,1,1
"android.content.Loader.dataToString(D)",1,1,1
"android.content.Loader.deliverResult(D)",1,2,2
"android.content.Loader.dump(String,FileDescriptor,PrintWriter,String[])",1,1,1
"android.content.Loader.forceLoad()",1,1,1
"android.content.Loader.getContext()",1,1,1
"android.content.Loader.getId()",1,1,1
"android.content.Loader.isReset()",1,1,1
"android.content.Loader.isStarted()",1,1,1
"android.content.Loader.onContentChanged()",1,2,2
"android.content.Loader.onForceLoad()",1,1,1
"android.content.Loader.onReset()",1,1,1
"android.content.Loader.onStartLoading()",1,1,1
"android.content.Loader.onStopLoading()",1,1,1
"android.content.Loader.registerListener(int,OnLoadCompleteListener<D>)",2,1,2
"android.content.Loader.reset()",1,1,1
"android.content.Loader.startLoading()",1,1,1
"android.content.Loader.stopLoading()",1,1,1
"android.content.Loader.takeContentChanged()",1,1,1
"android.content.Loader.toString()",1,1,1
"android.content.Loader.unregisterListener(OnLoadCompleteListener<D>)",3,1,3
"android.content.MutableContextWrapper.MutableContextWrapper(Context)",1,1,1
"android.content.MutableContextWrapper.setBaseContext(Context)",1,1,1
"android.content.OperationApplicationException.OperationApplicationException()",1,1,1
"android.content.OperationApplicationException.OperationApplicationException(String)",1,1,1
"android.content.OperationApplicationException.OperationApplicationException(String,Throwable)",1,1,1
"android.content.OperationApplicationException.OperationApplicationException(String,int)",1,1,1
"android.content.OperationApplicationException.OperationApplicationException(Throwable)",1,1,1
"android.content.OperationApplicationException.OperationApplicationException(int)",1,1,1
"android.content.OperationApplicationException.getNumSuccessfulYieldPoints()",1,1,1
"android.content.PeriodicSync.PeriodicSync(Account,String,Bundle,long)",1,1,1
"android.content.PeriodicSync.describeContents()",1,1,1
"android.content.PeriodicSync.equals(Object)",3,4,6
"android.content.PeriodicSync.writeToParcel(Parcel,int)",1,1,1
"android.content.ReceiverCallNotAllowedException.ReceiverCallNotAllowedException(String)",1,1,1
"android.content.SearchRecentSuggestionsProvider.DatabaseHelper.DatabaseHelper(Context,int)",1,1,1
"android.content.SearchRecentSuggestionsProvider.DatabaseHelper.onCreate(SQLiteDatabase)",1,2,2
"android.content.SearchRecentSuggestionsProvider.DatabaseHelper.onUpgrade(SQLiteDatabase,int,int)",1,1,1
"android.content.SearchRecentSuggestionsProvider.delete(Uri,String,String[])",3,2,3
"android.content.SearchRecentSuggestionsProvider.getType(Uri)",6,2,6
"android.content.SearchRecentSuggestionsProvider.insert(Uri,ContentValues)",3,4,6
"android.content.SearchRecentSuggestionsProvider.onCreate()",2,1,3
"android.content.SearchRecentSuggestionsProvider.query(Uri,String[],String,String[],String)",4,7,13
"android.content.SearchRecentSuggestionsProvider.setupSuggestions(String,int)",2,2,4
"android.content.SearchRecentSuggestionsProvider.update(Uri,ContentValues,String,String[])",1,1,1
"android.content.SyncActivityTooManyDeletes.onCreate(Bundle)",2,2,2
"android.content.SyncActivityTooManyDeletes.onItemClick(AdapterView<?>,View,int,long)",1,3,3
"android.content.SyncActivityTooManyDeletes.startSyncReallyDelete()",1,1,1
"android.content.SyncActivityTooManyDeletes.startSyncUndoDeletes()",1,1,1
"android.content.SyncAdapterType.SyncAdapterType(Parcel)",1,1,1
"android.content.SyncAdapterType.SyncAdapterType(String,String)",3,1,3
"android.content.SyncAdapterType.SyncAdapterType(String,String,boolean,boolean)",3,1,3
"android.content.SyncAdapterType.SyncAdapterType(String,String,boolean,boolean,boolean,boolean)",3,1,3
"android.content.SyncAdapterType.allowParallelSyncs()",2,1,2
"android.content.SyncAdapterType.describeContents()",1,1,1
"android.content.SyncAdapterType.equals(Object)",3,2,4
"android.content.SyncAdapterType.hashCode()",1,1,1
"android.content.SyncAdapterType.isAlwaysSyncable()",2,1,2
"android.content.SyncAdapterType.isUserVisible()",2,1,2
"android.content.SyncAdapterType.newKey(String,String)",1,1,1
"android.content.SyncAdapterType.supportsUploading()",2,1,2
"android.content.SyncAdapterType.toString()",2,1,2
"android.content.SyncAdapterType.writeToParcel(Parcel,int)",2,1,6
"android.content.SyncAdaptersCache.MySerializer.createFromXml(XmlPullParser)",1,1,1
"android.content.SyncAdaptersCache.MySerializer.writeAsXml(SyncAdapterType,XmlSerializer)",1,1,1
"android.content.SyncAdaptersCache.SyncAdaptersCache(Context)",1,1,1
"android.content.SyncAdaptersCache.parseServiceAttributes(Resources,String,AttributeSet)",2,1,3
"android.content.SyncContext.SyncContext(ISyncContext)",1,1,1
"android.content.SyncContext.getSyncContextBinder()",1,2,2
"android.content.SyncContext.onFinished(SyncResult)",1,2,3
"android.content.SyncContext.setStatusText(String)",1,1,1
"android.content.SyncContext.updateHeartbeat()",2,2,4
"android.content.SyncInfo.SyncInfo(Parcel)",1,1,1
"android.content.SyncInfo.SyncInfo(int,Account,String,long)",1,1,1
"android.content.SyncInfo.describeContents()",1,1,1
"android.content.SyncInfo.writeToParcel(Parcel,int)",1,1,1
"android.content.SyncManager.ActiveSyncContext.ActiveSyncContext(SyncOperation,long,int)",1,1,1
"android.content.SyncManager.ActiveSyncContext.bindToSyncAdapter(ServiceInfo)",1,2,3
"android.content.SyncManager.ActiveSyncContext.binderDied()",1,1,1
"android.content.SyncManager.ActiveSyncContext.close()",1,3,3
"android.content.SyncManager.ActiveSyncContext.onFinished(SyncResult)",1,2,2
"android.content.SyncManager.ActiveSyncContext.onServiceConnected(ComponentName,IBinder)",1,1,1
"android.content.SyncManager.ActiveSyncContext.onServiceDisconnected(ComponentName)",1,1,1
"android.content.SyncManager.ActiveSyncContext.sendHeartbeat()",1,1,1
"android.content.SyncManager.ActiveSyncContext.toString()",1,1,1
"android.content.SyncManager.ActiveSyncContext.toString(StringBuilder)",1,1,1
"android.content.SyncManager.InitializerServiceConnection.InitializerServiceConnection(Account,String,Context,Handler)",1,1,1
"android.content.SyncManager.InitializerServiceConnection.onServiceConnected(ComponentName,IBinder)",1,5,5
"android.content.SyncManager.InitializerServiceConnection.onServiceDisconnected(ComponentName)",1,2,2
"android.content.SyncManager.ServiceConnectionData.ServiceConnectionData(ActiveSyncContext,ISyncAdapter)",1,1,1
"android.content.SyncManager.SyncAlarmIntentReceiver.onReceive(Context,Intent)",1,1,1
"android.content.SyncManager.SyncHandler.SyncHandler(Looper)",1,1,1
"android.content.SyncManager.SyncHandler.SyncNotificationInfo.toString()",1,1,1
"android.content.SyncManager.SyncHandler.SyncNotificationInfo.toString(StringBuilder)",1,1,1
"android.content.SyncManager.SyncHandler.cancelActiveSyncLocked(Account,String)",7,5,7
"android.content.SyncManager.SyncHandler.closeActiveSyncContext(ActiveSyncContext)",1,1,1
"android.content.SyncManager.SyncHandler.dispatchSyncOperation(SyncOperation)",3,6,6
"android.content.SyncManager.SyncHandler.getSyncWakeLock(String,String)",1,2,2
"android.content.SyncManager.SyncHandler.handleMessage(Message)",2,16,18
"android.content.SyncManager.SyncHandler.insertStartSyncEvent(SyncOperation)",1,1,1
"android.content.SyncManager.SyncHandler.installHandleTooManyDeletesNotification(Account,String,long)",4,2,4
"android.content.SyncManager.SyncHandler.isActivityAvailable(Intent)",3,2,3
"android.content.SyncManager.SyncHandler.manageSyncAlarmLocked(long,long)",3,14,22
"android.content.SyncManager.SyncHandler.manageSyncNotificationLocked()",6,7,10
"android.content.SyncManager.SyncHandler.maybeStartNextSyncLocked()",15,41,46
"android.content.SyncManager.SyncHandler.onBootCompleted()",1,2,2
"android.content.SyncManager.SyncHandler.runBoundToSyncAdapter(ActiveSyncContext,ISyncAdapter)",1,3,3
"android.content.SyncManager.SyncHandler.runSyncFinishedOrCanceledLocked(SyncResult,ActiveSyncContext)",1,10,13
"android.content.SyncManager.SyncHandler.scheduleReadyPeriodicSyncs()",10,5,14
"android.content.SyncManager.SyncHandler.sendSyncStateIntent()",1,1,1
"android.content.SyncManager.SyncHandler.stopSyncEvent(long,SyncOperation,String,int,int,long)",1,1,1
"android.content.SyncManager.SyncHandler.syncResultToErrorNumber(SyncResult)",9,1,9
"android.content.SyncManager.SyncHandler.waitUntilReadyToRun()",3,4,4
"android.content.SyncManager.SyncHandlerMessagePayload.SyncHandlerMessagePayload(ActiveSyncContext,SyncResult)",1,1,1
"android.content.SyncManager.SyncManager(Context,boolean)",1,5,5
"android.content.SyncManager.SyncTimeTracker.timeSpentSyncing()",2,1,2
"android.content.SyncManager.SyncTimeTracker.update()",2,1,3
"android.content.SyncManager.cancelActiveSync(Account,String)",1,1,1
"android.content.SyncManager.clearBackoffSetting(SyncOperation)",1,1,1
"android.content.SyncManager.clearScheduledSyncOperations(Account,String)",1,1,1
"android.content.SyncManager.dump(FileDescriptor,PrintWriter)",1,2,2
"android.content.SyncManager.dumpDayStatistic(PrintWriter,DayStats)",1,3,3
"android.content.SyncManager.dumpSyncHistory(PrintWriter,StringBuilder)",9,12,22
"android.content.SyncManager.dumpSyncState(PrintWriter,StringBuilder)",4,12,17
"android.content.SyncManager.dumpTimeSec(PrintWriter,long)",1,1,1
"android.content.SyncManager.ensureAlarmService()",1,2,2
"android.content.SyncManager.formatTime(long)",1,1,1
"android.content.SyncManager.getConnectivityManager()",1,2,2
"android.content.SyncManager.getSyncAdapterTypes()",1,1,2
"android.content.SyncManager.getSyncStorageEngine()",1,1,1
"android.content.SyncManager.increaseBackoffSetting(SyncOperation)",3,5,6
"android.content.SyncManager.initializeSyncAdapter(Account,String)",2,4,4
"android.content.SyncManager.isSyncStillActive(ActiveSyncContext)",3,1,3
"android.content.SyncManager.jitterize(long,long)",2,1,2
"android.content.SyncManager.maybeRescheduleSync(SyncResult,SyncOperation)",1,13,13
"android.content.SyncManager.onAccountsUpdated(Account[])",1,5,5
"android.content.SyncManager.scheduleLocalSync(Account,String)",1,1,1
"android.content.SyncManager.scheduleSync(Account,String,Bundle,long,boolean)",10,23,35
"android.content.SyncManager.scheduleSyncOperation(SyncOperation)",1,4,4
"android.content.SyncManager.sendCancelSyncsMessage(Account,String)",1,2,2
"android.content.SyncManager.sendCheckAlarmsMessage()",1,2,2
"android.content.SyncManager.sendSyncAlarmMessage()",1,2,2
"android.content.SyncManager.sendSyncFinishedOrCanceledMessage(ActiveSyncContext,SyncResult)",1,2,2
"android.content.SyncManager.setDelayUntilTime(SyncOperation,long)",1,2,2
"android.content.SyncOperation.SyncOperation(Account,int,String,Bundle,long,long,long,boolean)",1,1,2
"android.content.SyncOperation.SyncOperation(SyncOperation)",1,1,1
"android.content.SyncOperation.compareTo(Object)",3,1,5
"android.content.SyncOperation.dump(boolean)",1,4,4
"android.content.SyncOperation.extrasToStringBuilder(Bundle,StringBuilder)",1,2,2
"android.content.SyncOperation.ignoreBackoff()",1,1,1
"android.content.SyncOperation.isInitialization()",1,1,1
"android.content.SyncOperation.removeFalseExtra(String)",1,2,2
"android.content.SyncOperation.toKey()",1,1,1
"android.content.SyncOperation.toString()",1,1,1
"android.content.SyncOperation.updateEffectiveRunTime()",1,2,2
"android.content.SyncQueue.SyncQueue(SyncStorageEngine,SyncAdaptersCache)",3,2,4
"android.content.SyncQueue.add(SyncOperation)",1,1,1
"android.content.SyncQueue.add(SyncOperation,PendingOperation)",4,4,7
"android.content.SyncQueue.dump(StringBuilder)",1,3,3
"android.content.SyncQueue.onBackoffChanged(Account,String,long)",1,4,4
"android.content.SyncQueue.onDelayUntilTimeChanged(Account,String,long)",1,4,4
"android.content.SyncQueue.remove(Account,String)",4,5,7
"android.content.SyncQueue.remove(SyncOperation)",2,2,3
"android.content.SyncResult.SyncResult()",1,1,1
"android.content.SyncResult.SyncResult(Parcel)",1,1,1
"android.content.SyncResult.SyncResult(boolean)",1,1,1
"android.content.SyncResult.clear()",2,1,2
"android.content.SyncResult.describeContents()",1,1,1
"android.content.SyncResult.hasError()",1,2,2
"android.content.SyncResult.hasHardError()",1,1,6
"android.content.SyncResult.hasSoftError()",1,1,2
"android.content.SyncResult.madeSomeProgress()",1,1,4
"android.content.SyncResult.toDebugString()",1,13,13
"android.content.SyncResult.toString()",1,9,9
"android.content.SyncResult.writeToParcel(Parcel,int)",1,1,8
"android.content.SyncStats.SyncStats()",1,1,1
"android.content.SyncStats.SyncStats(Parcel)",1,1,1
"android.content.SyncStats.clear()",1,1,1
"android.content.SyncStats.describeContents()",1,1,1
"android.content.SyncStats.toString()",1,10,10
"android.content.SyncStats.writeToParcel(Parcel,int)",1,1,1
"android.content.SyncStatusInfo.SyncStatusInfo(Parcel)",1,5,6
"android.content.SyncStatusInfo.SyncStatusInfo(int)",1,1,1
"android.content.SyncStatusInfo.describeContents()",1,1,1
"android.content.SyncStatusInfo.ensurePeriodicSyncTimeSize(int)",1,3,4
"android.content.SyncStatusInfo.getLastFailureMesgAsInt(int)",2,3,3
"android.content.SyncStatusInfo.getPeriodicSyncTime(int)",2,2,3
"android.content.SyncStatusInfo.removePeriodicSyncTime(int)",1,1,1
"android.content.SyncStatusInfo.setPeriodicSyncTime(int,long)",1,1,1
"android.content.SyncStatusInfo.writeToParcel(Parcel,int)",1,3,5
"android.content.SyncStorageEngine.AccountInfo.AccountInfo(Account)",1,1,1
"android.content.SyncStorageEngine.AuthorityInfo.AuthorityInfo(Account,String,int)",1,1,1
"android.content.SyncStorageEngine.DayStats.DayStats(int)",1,1,1
"android.content.SyncStorageEngine.PendingOperation.PendingOperation(Account,int,String,Bundle,boolean)",1,1,2
"android.content.SyncStorageEngine.PendingOperation.PendingOperation(PendingOperation)",1,1,1
"android.content.SyncStorageEngine.SyncStorageEngine(Context,File)",1,1,1
"android.content.SyncStorageEngine.addActiveSync(ActiveSyncContext)",1,2,2
"android.content.SyncStorageEngine.addPeriodicSync(Account,String,Bundle,long)",1,1,1
"android.content.SyncStorageEngine.addStatusChangeListener(int,ISyncStatusObserver)",1,1,1
"android.content.SyncStorageEngine.appendPendingOperationLocked(PendingOperation)",1,5,6
"android.content.SyncStorageEngine.clearAllBackoffs()",1,6,7
"android.content.SyncStorageEngine.clearAndReadState()",1,1,1
"android.content.SyncStorageEngine.clearPending()",1,3,3
"android.content.SyncStorageEngine.deleteFromPending(PendingOperation)",5,11,12
"android.content.SyncStorageEngine.doDatabaseCleanup(Account[])",1,12,12
"android.content.SyncStorageEngine.equals(Bundle,Bundle)",6,2,6
"android.content.SyncStorageEngine.flattenBundle(Bundle)",1,1,1
"android.content.SyncStorageEngine.getAuthorities()",1,2,2
"android.content.SyncStorageEngine.getAuthority(int)",1,1,1
"android.content.SyncStorageEngine.getAuthorityLocked(Account,String,String)",3,7,7
"android.content.SyncStorageEngine.getBackoff(Account,String)",2,1,3
"android.content.SyncStorageEngine.getCurrentDayLocked()",1,2,2
"android.content.SyncStorageEngine.getCurrentSyncs()",1,1,1
"android.content.SyncStorageEngine.getDayStatistics()",1,1,1
"android.content.SyncStorageEngine.getDelayUntilTime(Account,String)",2,1,2
"android.content.SyncStorageEngine.getInitialSyncFailureTime()",2,2,7
"android.content.SyncStorageEngine.getIntColumn(Cursor,String)",1,1,1
"android.content.SyncStorageEngine.getIsSyncable(Account,String)",5,3,5
"android.content.SyncStorageEngine.getLongColumn(Cursor,String)",1,1,1
"android.content.SyncStorageEngine.getMasterSyncAutomatically()",1,1,1
"android.content.SyncStorageEngine.getOrCreateAuthority(Account,String)",1,1,1
"android.content.SyncStorageEngine.getOrCreateAuthorityLocked(Account,String,int,boolean)",1,5,6
"android.content.SyncStorageEngine.getOrCreateSyncStatus(AuthorityInfo)",1,1,1
"android.content.SyncStorageEngine.getOrCreateSyncStatusLocked(int)",1,2,2
"android.content.SyncStorageEngine.getPendingOperationCount()",1,1,1
"android.content.SyncStorageEngine.getPendingOperations()",1,1,1
"android.content.SyncStorageEngine.getPeriodicSyncs(Account,String)",1,3,3
"android.content.SyncStorageEngine.getSingleton()",2,1,2
"android.content.SyncStorageEngine.getStatusByAccountAndAuthority(Account,String)",4,4,7
"android.content.SyncStorageEngine.getSyncAutomatically(Account,String)",4,4,6
"android.content.SyncStorageEngine.getSyncHistory()",1,2,2
"android.content.SyncStorageEngine.getSyncStatus()",1,2,2
"android.content.SyncStorageEngine.handleMessage(Message)",1,3,3
"android.content.SyncStorageEngine.init(Context)",2,1,2
"android.content.SyncStorageEngine.insertIntoPending(PendingOperation)",2,2,3
"android.content.SyncStorageEngine.insertStartSyncEvent(Account,String,long,int)",2,4,6
"android.content.SyncStorageEngine.isSyncActive(Account,String)",3,4,5
"android.content.SyncStorageEngine.isSyncPending(Account,String)",5,4,7
"android.content.SyncStorageEngine.maybeMigrateSettingsForRenamedAuthorities()",5,3,6
"android.content.SyncStorageEngine.newTestInstance(Context)",1,1,1
"android.content.SyncStorageEngine.parseAuthority(XmlPullParser,int)",1,12,14
"android.content.SyncStorageEngine.parseExtra(XmlPullParser,Pair<Bundle, Long>)",1,10,10
"android.content.SyncStorageEngine.parsePeriodicSync(XmlPullParser,AuthorityInfo)",1,3,3
"android.content.SyncStorageEngine.readAccountInfoLocked()",1,21,25
"android.content.SyncStorageEngine.readAndDeleteLegacyAccountInfoLocked()",9,16,21
"android.content.SyncStorageEngine.readPendingOperationsLocked()",3,9,10
"android.content.SyncStorageEngine.readStatisticsLocked()",3,4,7
"android.content.SyncStorageEngine.readStatusLocked()",3,7,7
"android.content.SyncStorageEngine.removeActiveSync(SyncInfo)",1,2,2
"android.content.SyncStorageEngine.removeAuthority(Account,String)",1,1,1
"android.content.SyncStorageEngine.removeAuthorityLocked(Account,String,boolean)",1,4,4
"android.content.SyncStorageEngine.removePeriodicSync(Account,String,Bundle)",1,1,1
"android.content.SyncStorageEngine.removeStatusChangeListener(ISyncStatusObserver)",1,1,1
"android.content.SyncStorageEngine.reportActiveChange()",1,1,1
"android.content.SyncStorageEngine.reportChange(int)",3,5,8
"android.content.SyncStorageEngine.setBackoff(Account,String,long,long)",7,8,15
"android.content.SyncStorageEngine.setDelayUntilTime(Account,String,long)",2,2,3
"android.content.SyncStorageEngine.setIsSyncable(Account,String,int)",2,3,5
"android.content.SyncStorageEngine.setMasterSyncAutomatically(boolean)",2,2,3
"android.content.SyncStorageEngine.setSyncAutomatically(Account,String,boolean)",2,3,3
"android.content.SyncStorageEngine.stopSyncEvent(long,long,String,long,long)",5,12,23
"android.content.SyncStorageEngine.unflattenBundle(byte[])",1,1,2
"android.content.SyncStorageEngine.updateOrRemovePeriodicSync(Account,String,Bundle,long,boolean)",6,9,13
"android.content.SyncStorageEngine.writeAccountInfoLocked()",1,16,16
"android.content.SyncStorageEngine.writeAllState()",1,2,2
"android.content.SyncStorageEngine.writePendingOperationLocked(PendingOperation,Parcel)",1,2,4
"android.content.SyncStorageEngine.writePendingOperationsLocked()",2,7,7
"android.content.SyncStorageEngine.writeStatisticsLocked()",3,5,6
"android.content.SyncStorageEngine.writeStatusLocked()",1,5,5
"android.content.UriMatcher.UriMatcher()",1,1,1
"android.content.UriMatcher.UriMatcher(int)",1,1,1
"android.content.UriMatcher.addURI(String,String,int)",5,6,11
"android.content.UriMatcher.match(Uri)",10,7,16
"android.content.XmlDocumentProvider.XMLCursor.XMLCursor(String,String[])",1,1,1
"android.content.XmlDocumentProvider.XMLCursor.createPattern(String)",1,1,1
"android.content.XmlDocumentProvider.XMLCursor.createProjectionPattern(String[])",1,4,4
"android.content.XmlDocumentProvider.XMLCursor.parseWith(XmlPullParser)",1,20,21
"android.content.XmlDocumentProvider.delete(Uri,String,String[])",1,1,1
"android.content.XmlDocumentProvider.getResourceXmlPullParser(Uri)",1,2,2
"android.content.XmlDocumentProvider.getType(Uri)",1,1,1
"android.content.XmlDocumentProvider.getUriXmlPullParser(String)",1,6,6
"android.content.XmlDocumentProvider.insert(Uri,ContentValues)",1,1,1
"android.content.XmlDocumentProvider.onCreate()",1,1,1
"android.content.XmlDocumentProvider.query(Uri,String[],String,String[],String)",2,7,7
"android.content.XmlDocumentProvider.update(Uri,ContentValues,String,String[])",1,1,1
"android.content.pm.ActivityInfo.ActivityInfo()",1,1,1
"android.content.pm.ActivityInfo.ActivityInfo(ActivityInfo)",1,1,1
"android.content.pm.ActivityInfo.ActivityInfo(Parcel)",1,1,1
"android.content.pm.ActivityInfo.describeContents()",1,1,1
"android.content.pm.ActivityInfo.dump(Printer,String)",1,4,8
"android.content.pm.ActivityInfo.getThemeResource()",1,1,2
"android.content.pm.ActivityInfo.toString()",1,1,1
"android.content.pm.ActivityInfo.writeToParcel(Parcel,int)",1,1,1
"android.content.pm.ApplicationInfo.ApplicationInfo()",1,1,1
"android.content.pm.ApplicationInfo.ApplicationInfo(ApplicationInfo)",1,1,1
"android.content.pm.ApplicationInfo.ApplicationInfo(Parcel)",1,1,1
"android.content.pm.ApplicationInfo.DisplayNameComparator.DisplayNameComparator(PackageManager)",1,1,1
"android.content.pm.ApplicationInfo.DisplayNameComparator.compare(ApplicationInfo,ApplicationInfo)",1,1,3
"android.content.pm.ApplicationInfo.describeContents()",1,1,1
"android.content.pm.ApplicationInfo.disableCompatibilityMode()",1,1,1
"android.content.pm.ApplicationInfo.dump(Printer,String)",1,10,10
"android.content.pm.ApplicationInfo.getApplicationInfo()",1,1,1
"android.content.pm.ApplicationInfo.isPackageUnavailable(PackageManager)",1,1,2
"android.content.pm.ApplicationInfo.loadDefaultIcon(PackageManager)",2,3,3
"android.content.pm.ApplicationInfo.loadDescription(PackageManager)",3,2,3
"android.content.pm.ApplicationInfo.toString()",1,1,1
"android.content.pm.ApplicationInfo.writeToParcel(Parcel,int)",1,1,2
"android.content.pm.ComponentInfo.ComponentInfo()",1,1,1
"android.content.pm.ComponentInfo.ComponentInfo(ComponentInfo)",1,1,1
"android.content.pm.ComponentInfo.ComponentInfo(Parcel)",1,1,1
"android.content.pm.ComponentInfo.dumpBack(Printer,String)",1,2,2
"android.content.pm.ComponentInfo.dumpFront(Printer,String)",1,2,2
"android.content.pm.ComponentInfo.getApplicationInfo()",1,1,1
"android.content.pm.ComponentInfo.getIconResource()",1,1,2
"android.content.pm.ComponentInfo.loadDefaultIcon(PackageManager)",1,1,1
"android.content.pm.ComponentInfo.loadDefaultLogo(PackageManager)",1,1,1
"android.content.pm.ComponentInfo.loadLabel(PackageManager)",7,3,7
"android.content.pm.ComponentInfo.writeToParcel(Parcel,int)",1,1,3
"android.content.pm.ConfigurationInfo.ConfigurationInfo()",1,1,1
"android.content.pm.ConfigurationInfo.ConfigurationInfo(ConfigurationInfo)",1,1,1
"android.content.pm.ConfigurationInfo.ConfigurationInfo(Parcel)",1,1,1
"android.content.pm.ConfigurationInfo.describeContents()",1,1,1
"android.content.pm.ConfigurationInfo.getGlEsVersion()",1,1,1
"android.content.pm.ConfigurationInfo.toString()",1,1,1
"android.content.pm.ConfigurationInfo.writeToParcel(Parcel,int)",1,1,1
"android.content.pm.FeatureInfo.FeatureInfo()",1,1,1
"android.content.pm.FeatureInfo.FeatureInfo(FeatureInfo)",1,1,1
"android.content.pm.FeatureInfo.FeatureInfo(Parcel)",1,1,1
"android.content.pm.FeatureInfo.describeContents()",1,1,1
"android.content.pm.FeatureInfo.getGlEsVersion()",1,1,1
"android.content.pm.FeatureInfo.toString()",2,2,2
"android.content.pm.FeatureInfo.writeToParcel(Parcel,int)",1,1,1
"android.content.pm.InstrumentationInfo.InstrumentationInfo()",1,1,1
"android.content.pm.InstrumentationInfo.InstrumentationInfo(InstrumentationInfo)",1,1,1
"android.content.pm.InstrumentationInfo.InstrumentationInfo(Parcel)",1,1,1
"android.content.pm.InstrumentationInfo.describeContents()",1,1,1
"android.content.pm.InstrumentationInfo.toString()",1,1,1
"android.content.pm.InstrumentationInfo.writeToParcel(Parcel,int)",1,1,3
"android.content.pm.LabeledIntent.LabeledIntent(Intent,String,CharSequence,int)",1,1,1
"android.content.pm.LabeledIntent.LabeledIntent(Intent,String,int,int)",1,1,1
"android.content.pm.LabeledIntent.LabeledIntent(Parcel)",1,1,1
"android.content.pm.LabeledIntent.LabeledIntent(String,CharSequence,int)",1,1,1
"android.content.pm.LabeledIntent.LabeledIntent(String,int,int)",1,1,1
"android.content.pm.LabeledIntent.getIconResource()",1,1,1
"android.content.pm.LabeledIntent.getLabelResource()",1,1,1
"android.content.pm.LabeledIntent.getNonLocalizedLabel()",1,1,1
"android.content.pm.LabeledIntent.getSourcePackage()",1,1,1
"android.content.pm.LabeledIntent.loadIcon(PackageManager)",3,2,4
"android.content.pm.LabeledIntent.loadLabel(PackageManager)",4,2,5
"android.content.pm.LabeledIntent.readFromParcel(Parcel)",1,1,1
"android.content.pm.LabeledIntent.writeToParcel(Parcel,int)",1,1,1
"android.content.pm.PackageInfo.PackageInfo()",1,1,1
"android.content.pm.PackageInfo.PackageInfo(Parcel)",1,2,2
"android.content.pm.PackageInfo.describeContents()",1,1,1
"android.content.pm.PackageInfo.toString()",1,1,1
"android.content.pm.PackageInfo.writeToParcel(Parcel,int)",1,2,2
"android.content.pm.PackageInfoLite.PackageInfoLite()",1,1,1
"android.content.pm.PackageInfoLite.PackageInfoLite(Parcel)",1,1,1
"android.content.pm.PackageInfoLite.describeContents()",1,1,1
"android.content.pm.PackageInfoLite.toString()",1,1,1
"android.content.pm.PackageInfoLite.writeToParcel(Parcel,int)",1,1,1
"android.content.pm.PackageItemInfo.DisplayNameComparator.DisplayNameComparator(PackageManager)",1,1,1
"android.content.pm.PackageItemInfo.DisplayNameComparator.compare(PackageItemInfo,PackageItemInfo)",1,1,3
"android.content.pm.PackageItemInfo.PackageItemInfo()",1,1,1
"android.content.pm.PackageItemInfo.PackageItemInfo(PackageItemInfo)",1,3,3
"android.content.pm.PackageItemInfo.PackageItemInfo(Parcel)",1,1,1
"android.content.pm.PackageItemInfo.dumpBack(Printer,String)",1,1,1
"android.content.pm.PackageItemInfo.dumpFront(Printer,String)",1,3,5
"android.content.pm.PackageItemInfo.getApplicationInfo()",1,1,1
"android.content.pm.PackageItemInfo.loadDefaultIcon(PackageManager)",1,1,1
"android.content.pm.PackageItemInfo.loadDefaultLogo(PackageManager)",1,1,1
"android.content.pm.PackageItemInfo.loadIcon(PackageManager)",3,2,3
"android.content.pm.PackageItemInfo.loadLabel(PackageManager)",5,3,5
"android.content.pm.PackageItemInfo.loadLogo(PackageManager)",3,2,3
"android.content.pm.PackageItemInfo.loadXmlMetaData(PackageManager,String)",3,3,3
"android.content.pm.PackageItemInfo.writeToParcel(Parcel,int)",1,1,1
"android.content.pm.PackageManager.NameNotFoundException.NameNotFoundException()",1,1,1
"android.content.pm.PackageManager.NameNotFoundException.NameNotFoundException(String)",1,1,1
"android.content.pm.PackageManager.getPackageArchiveInfo(String,int)",2,1,2
"android.content.pm.PackageParser.Activity.Activity(ParseComponentArgs,ActivityInfo)",1,1,1
"android.content.pm.PackageParser.Activity.setPackageName(String)",1,1,1
"android.content.pm.PackageParser.Activity.toString()",1,1,1
"android.content.pm.PackageParser.ActivityIntentInfo.ActivityIntentInfo(Activity)",1,1,1
"android.content.pm.PackageParser.ActivityIntentInfo.toString()",1,1,1
"android.content.pm.PackageParser.Component.Component(Component<II>)",1,1,1
"android.content.pm.PackageParser.Component.Component(Package)",1,1,1
"android.content.pm.PackageParser.Component.Component(ParseComponentArgs,ComponentInfo)",2,4,5
"android.content.pm.PackageParser.Component.Component(ParsePackageItemArgs,PackageItemInfo)",3,2,7
"android.content.pm.PackageParser.Component.getComponentName()",2,1,3
"android.content.pm.PackageParser.Component.getComponentShortName()",2,2,3
"android.content.pm.PackageParser.Component.setPackageName(String)",1,1,1
"android.content.pm.PackageParser.Instrumentation.Instrumentation(ParsePackageItemArgs,InstrumentationInfo)",1,1,1
"android.content.pm.PackageParser.Instrumentation.setPackageName(String)",1,1,1
"android.content.pm.PackageParser.Instrumentation.toString()",1,1,1
"android.content.pm.PackageParser.NewPermissionInfo.NewPermissionInfo(String,int,int)",1,1,1
"android.content.pm.PackageParser.Package.Package(String)",1,1,1
"android.content.pm.PackageParser.Package.setPackageName(String)",1,8,8
"android.content.pm.PackageParser.Package.toString()",1,1,1
"android.content.pm.PackageParser.PackageLite.PackageLite(String,int)",1,1,1
"android.content.pm.PackageParser.PackageParser(String)",1,1,1
"android.content.pm.PackageParser.ParseComponentArgs.ParseComponentArgs(Package,String[],int,int,int,int,String[],int,int,int)",1,1,1
"android.content.pm.PackageParser.ParsePackageItemArgs.ParsePackageItemArgs(Package,String[],int,int,int,int)",1,1,1
"android.content.pm.PackageParser.Permission.Permission(Package)",1,1,1
"android.content.pm.PackageParser.Permission.Permission(Package,PermissionInfo)",1,1,1
"android.content.pm.PackageParser.Permission.setPackageName(String)",1,1,1
"android.content.pm.PackageParser.Permission.toString()",1,1,1
"android.content.pm.PackageParser.PermissionGroup.PermissionGroup(Package)",1,1,1
"android.content.pm.PackageParser.PermissionGroup.PermissionGroup(Package,PermissionGroupInfo)",1,1,1
"android.content.pm.PackageParser.PermissionGroup.setPackageName(String)",1,1,1
"android.content.pm.PackageParser.PermissionGroup.toString()",1,1,1
"android.content.pm.PackageParser.Provider.Provider(ParseComponentArgs,ProviderInfo)",1,1,1
"android.content.pm.PackageParser.Provider.Provider(Provider)",1,1,1
"android.content.pm.PackageParser.Provider.setPackageName(String)",1,1,1
"android.content.pm.PackageParser.Provider.toString()",1,1,1
"android.content.pm.PackageParser.Service.Service(ParseComponentArgs,ServiceInfo)",1,1,1
"android.content.pm.PackageParser.Service.setPackageName(String)",1,1,1
"android.content.pm.PackageParser.Service.toString()",1,1,1
"android.content.pm.PackageParser.ServiceIntentInfo.ServiceIntentInfo(Service)",1,1,1
"android.content.pm.PackageParser.ServiceIntentInfo.toString()",1,1,1
"android.content.pm.PackageParser.buildClassName(String,CharSequence,String[])",5,5,7
"android.content.pm.PackageParser.buildCompoundName(String,CharSequence,String,String[])",5,3,7
"android.content.pm.PackageParser.buildProcessName(String,String,CharSequence,int,String[],String[])",6,7,11
"android.content.pm.PackageParser.buildTaskAffinityName(String,String,CharSequence,String[])",3,1,3
"android.content.pm.PackageParser.collectCertificates(Package,int)",13,20,28
"android.content.pm.PackageParser.copyNeeded(int,Package,Bundle)",5,1,8
"android.content.pm.PackageParser.generateActivityInfo(Activity,int)",3,1,3
"android.content.pm.PackageParser.generateApplicationInfo(Package,int)",3,4,7
"android.content.pm.PackageParser.generateInstrumentationInfo(Instrumentation,int)",3,1,3
"android.content.pm.PackageParser.generatePackageInfo(Package,int[],int,long,long)",1,39,49
"android.content.pm.PackageParser.generatePermissionGroupInfo(PermissionGroup,int)",3,1,3
"android.content.pm.PackageParser.generatePermissionInfo(Permission,int)",3,1,3
"android.content.pm.PackageParser.generateProviderInfo(Provider,int)",3,2,6
"android.content.pm.PackageParser.generateServiceInfo(Service,int)",3,1,3
"android.content.pm.PackageParser.getParseError()",1,1,1
"android.content.pm.PackageParser.isPackageFilename(String)",1,1,1
"android.content.pm.PackageParser.loadCertificates(JarFile,JarEntry,byte[])",1,4,5
"android.content.pm.PackageParser.parseActivity(Package,Resources,XmlPullParser,AttributeSet,int,String[],boolean,boolean)",10,16,37
"android.content.pm.PackageParser.parseActivityAlias(Package,Resources,XmlPullParser,AttributeSet,int,String[])",15,17,25
"android.content.pm.PackageParser.parseAllMetaData(Resources,XmlPullParser,AttributeSet,String,Component,String[])",6,6,9
"android.content.pm.PackageParser.parseApplication(Package,Resources,XmlPullParser,AttributeSet,int,String[])",21,31,59
"android.content.pm.PackageParser.parseInstrumentation(Package,Resources,XmlPullParser,AttributeSet,String[])",4,3,6
"android.content.pm.PackageParser.parseIntent(Resources,XmlPullParser,AttributeSet,int,IntentInfo,String[],boolean)",10,20,29
"android.content.pm.PackageParser.parseMetaData(Resources,XmlPullParser,AttributeSet,Bundle,String[])",2,10,13
"android.content.pm.PackageParser.parsePackage(File,String,DisplayMetrics,int)",5,12,15
"android.content.pm.PackageParser.parsePackage(Resources,XmlResourceParser,int,String[])",38,47,89
"android.content.pm.PackageParser.parsePackageItemInfo(Package,PackageItemInfo,String[],String,TypedArray,int,int,int,int)",3,2,7
"android.content.pm.PackageParser.parsePackageLite(String,int)",2,8,8
"android.content.pm.PackageParser.parsePackageLite(XmlPullParser,AttributeSet,int,String[])",7,7,13
"android.content.pm.PackageParser.parsePackageName(XmlPullParser,AttributeSet,int,String[])",5,5,11
"android.content.pm.PackageParser.parsePermission(Package,Resources,XmlPullParser,AttributeSet,String[])",4,3,5
"android.content.pm.PackageParser.parsePermissionGroup(Package,Resources,XmlPullParser,AttributeSet,String[])",3,2,3
"android.content.pm.PackageParser.parsePermissionTree(Package,Resources,XmlPullParser,AttributeSet,String[])",4,3,5
"android.content.pm.PackageParser.parseProvider(Package,Resources,XmlPullParser,AttributeSet,int,String[])",6,6,13
"android.content.pm.PackageParser.parseProviderTags(Resources,XmlPullParser,AttributeSet,Provider,String[])",14,18,29
"android.content.pm.PackageParser.parseService(Package,Resources,XmlPullParser,AttributeSet,int,String[])",11,12,19
"android.content.pm.PackageParser.setCompatibilityModeEnabled(boolean)",1,1,1
"android.content.pm.PackageParser.setSeparateProcesses(String[])",1,1,1
"android.content.pm.PackageParser.stringToSignature(String)",1,2,2
"android.content.pm.PackageParser.validateName(String,boolean)",6,2,13
"android.content.pm.PackageStats.PackageStats(PackageStats)",1,1,1
"android.content.pm.PackageStats.PackageStats(Parcel)",1,1,1
"android.content.pm.PackageStats.PackageStats(String)",1,1,1
"android.content.pm.PackageStats.describeContents()",1,1,1
"android.content.pm.PackageStats.toString()",1,1,1
"android.content.pm.PackageStats.writeToParcel(Parcel,int)",1,1,1
"android.content.pm.PathPermission.PathPermission(Parcel)",1,1,1
"android.content.pm.PathPermission.PathPermission(String,int,String,String)",1,1,1
"android.content.pm.PathPermission.getReadPermission()",1,1,1
"android.content.pm.PathPermission.getWritePermission()",1,1,1
"android.content.pm.PathPermission.writeToParcel(Parcel,int)",1,1,1
"android.content.pm.PermissionGroupInfo.PermissionGroupInfo()",1,1,1
"android.content.pm.PermissionGroupInfo.PermissionGroupInfo(Parcel)",1,1,1
"android.content.pm.PermissionGroupInfo.PermissionGroupInfo(PermissionGroupInfo)",1,1,1
"android.content.pm.PermissionGroupInfo.describeContents()",1,1,1
"android.content.pm.PermissionGroupInfo.loadDescription(PackageManager)",4,2,4
"android.content.pm.PermissionGroupInfo.toString()",1,1,1
"android.content.pm.PermissionGroupInfo.writeToParcel(Parcel,int)",1,1,1
"android.content.pm.PermissionInfo.PermissionInfo()",1,1,1
"android.content.pm.PermissionInfo.PermissionInfo(Parcel)",1,1,1
"android.content.pm.PermissionInfo.PermissionInfo(PermissionInfo)",1,1,1
"android.content.pm.PermissionInfo.describeContents()",1,1,1
"android.content.pm.PermissionInfo.loadDescription(PackageManager)",4,2,4
"android.content.pm.PermissionInfo.toString()",1,1,1
"android.content.pm.PermissionInfo.writeToParcel(Parcel,int)",1,1,1
"android.content.pm.ProviderInfo.ProviderInfo()",1,1,1
"android.content.pm.ProviderInfo.ProviderInfo(Parcel)",1,1,1
"android.content.pm.ProviderInfo.ProviderInfo(ProviderInfo)",1,1,1
"android.content.pm.ProviderInfo.describeContents()",1,1,1
"android.content.pm.ProviderInfo.toString()",1,1,2
"android.content.pm.ProviderInfo.writeToParcel(Parcel,int)",1,1,4
"android.content.pm.RegisteredServicesCache.RegisteredServicesCache(Context,String,String,String,XmlSerializerAndParser<V>)",1,1,1
"android.content.pm.RegisteredServicesCache.ServiceInfo.ServiceInfo(V,ComponentName,int)",1,1,1
"android.content.pm.RegisteredServicesCache.ServiceInfo.toString()",1,1,1
"android.content.pm.RegisteredServicesCache.close()",1,2,2
"android.content.pm.RegisteredServicesCache.containsType(ArrayList<ServiceInfo<V>>,V)",3,2,3
"android.content.pm.RegisteredServicesCache.containsTypeAndUid(ArrayList<ServiceInfo<V>>,V,int)",3,3,4
"android.content.pm.RegisteredServicesCache.dump(FileDescriptor,PrintWriter,String[])",1,2,2
"android.content.pm.RegisteredServicesCache.finalize()",1,2,2
"android.content.pm.RegisteredServicesCache.generateServicesMap()",3,18,18
"android.content.pm.RegisteredServicesCache.getAllServices()",1,1,1
"android.content.pm.RegisteredServicesCache.getListener()",1,1,1
"android.content.pm.RegisteredServicesCache.getServiceInfo(V)",1,1,1
"android.content.pm.RegisteredServicesCache.inSystemImage(int)",3,2,4
"android.content.pm.RegisteredServicesCache.notifyListener(V,boolean)",2,2,4
"android.content.pm.RegisteredServicesCache.parseServiceInfo(ResolveInfo)",4,3,8
"android.content.pm.RegisteredServicesCache.readPersistentServicesLocked()",8,9,13
"android.content.pm.RegisteredServicesCache.setListener(RegisteredServicesCacheListener<V>,Handler)",1,2,2
"android.content.pm.RegisteredServicesCache.writePersistentServicesLocked()",2,4,5
"android.content.pm.ResolveInfo.DisplayNameComparator.DisplayNameComparator(PackageManager)",1,1,1
"android.content.pm.ResolveInfo.DisplayNameComparator.compare(ResolveInfo,ResolveInfo)",1,1,3
"android.content.pm.ResolveInfo.ResolveInfo()",1,1,1
"android.content.pm.ResolveInfo.ResolveInfo(Parcel)",2,3,5
"android.content.pm.ResolveInfo.describeContents()",1,1,1
"android.content.pm.ResolveInfo.dump(Printer,String)",1,6,8
"android.content.pm.ResolveInfo.getIconResource()",4,3,4
"android.content.pm.ResolveInfo.loadIcon(PackageManager)",5,3,7
"android.content.pm.ResolveInfo.loadLabel(PackageManager)",6,6,9
"android.content.pm.ResolveInfo.toString()",1,1,2
"android.content.pm.ResolveInfo.writeToParcel(Parcel,int)",1,4,4
"android.content.pm.ServiceInfo.ServiceInfo()",1,1,1
"android.content.pm.ServiceInfo.ServiceInfo(Parcel)",1,1,1
"android.content.pm.ServiceInfo.ServiceInfo(ServiceInfo)",1,1,1
"android.content.pm.ServiceInfo.describeContents()",1,1,1
"android.content.pm.ServiceInfo.dump(Printer,String)",1,1,1
"android.content.pm.ServiceInfo.toString()",1,1,1
"android.content.pm.ServiceInfo.writeToParcel(Parcel,int)",1,1,1
"android.content.pm.Signature.Signature(Parcel)",1,1,1
"android.content.pm.Signature.Signature(String)",1,2,4
"android.content.pm.Signature.Signature(byte[])",1,1,1
"android.content.pm.Signature.describeContents()",1,1,1
"android.content.pm.Signature.equals(Object)",2,2,3
"android.content.pm.Signature.hashCode()",2,1,2
"android.content.pm.Signature.toByteArray()",1,1,1
"android.content.pm.Signature.toChars()",1,1,1
"android.content.pm.Signature.toChars(char[],int[])",1,1,7
"android.content.pm.Signature.toCharsString()",2,2,3
"android.content.pm.Signature.writeToParcel(Parcel,int)",1,1,1
"android.content.res.AssetFileDescriptor.AssetFileDescriptor(Parcel)",1,1,1
"android.content.res.AssetFileDescriptor.AssetFileDescriptor(ParcelFileDescriptor,long,long)",2,1,3
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.AutoCloseInputStream(AssetFileDescriptor)",1,1,1
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.available()",1,2,3
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.mark(int)",2,1,2
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.markSupported()",2,1,2
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.read()",1,1,2
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.read(byte[])",1,1,1
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.read(byte[],int,int)",3,2,5
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.reset()",2,1,2
"android.content.res.AssetFileDescriptor.AutoCloseInputStream.skip(long)",3,2,5
"android.content.res.AssetFileDescriptor.AutoCloseOutputStream.AutoCloseOutputStream(AssetFileDescriptor)",2,1,2
"android.content.res.AssetFileDescriptor.AutoCloseOutputStream.write(byte[])",3,2,4
"android.content.res.AssetFileDescriptor.AutoCloseOutputStream.write(byte[],int,int)",3,2,4
"android.content.res.AssetFileDescriptor.AutoCloseOutputStream.write(int)",3,2,3
"android.content.res.AssetFileDescriptor.close()",1,1,1
"android.content.res.AssetFileDescriptor.createInputStream()",2,1,2
"android.content.res.AssetFileDescriptor.createOutputStream()",2,1,2
"android.content.res.AssetFileDescriptor.describeContents()",1,1,1
"android.content.res.AssetFileDescriptor.getDeclaredLength()",1,1,1
"android.content.res.AssetFileDescriptor.getFileDescriptor()",1,1,1
"android.content.res.AssetFileDescriptor.getLength()",2,1,3
"android.content.res.AssetFileDescriptor.getParcelFileDescriptor()",1,1,1
"android.content.res.AssetFileDescriptor.getStartOffset()",1,1,1
"android.content.res.AssetFileDescriptor.toString()",1,1,1
"android.content.res.AssetFileDescriptor.writeToParcel(Parcel,int)",1,1,1
"android.content.res.AssetManager.AssetInputStream.AssetInputStream(int)",1,1,1
"android.content.res.AssetManager.AssetInputStream.available()",1,1,2
"android.content.res.AssetManager.AssetInputStream.close()",1,2,2
"android.content.res.AssetManager.AssetInputStream.finalize()",1,1,1
"android.content.res.AssetManager.AssetInputStream.getAssetInt()",1,1,1
"android.content.res.AssetManager.AssetInputStream.mark(int)",1,1,1
"android.content.res.AssetManager.AssetInputStream.markSupported()",1,1,1
"android.content.res.AssetManager.AssetInputStream.read()",1,1,1
"android.content.res.AssetManager.AssetInputStream.read(byte[])",1,1,1
"android.content.res.AssetManager.AssetInputStream.read(byte[],int,int)",1,1,1
"android.content.res.AssetManager.AssetInputStream.reset()",1,1,1
"android.content.res.AssetManager.AssetInputStream.skip(long)",1,2,3
"android.content.res.AssetManager.AssetManager()",1,3,3
"android.content.res.AssetManager.AssetManager(boolean)",1,3,3
"android.content.res.AssetManager.addAssetPath(String)",1,1,1
"android.content.res.AssetManager.addAssetPaths(String[])",2,2,3
"android.content.res.AssetManager.applyStyle(int,int,int,int,int[],int[],int[])",1,1,1
"android.content.res.AssetManager.applyThemeStyle(int,int,boolean)",1,1,1
"android.content.res.AssetManager.close()",1,2,2
"android.content.res.AssetManager.copyTheme(int,int)",1,1,1
"android.content.res.AssetManager.createTheme()",2,1,2
"android.content.res.AssetManager.decRefsLocked(int)",1,3,4
"android.content.res.AssetManager.deleteTheme(int)",1,1,1
"android.content.res.AssetManager.destroy()",1,1,1
"android.content.res.AssetManager.destroyAsset(int)",1,1,1
"android.content.res.AssetManager.dumpTheme(int,int,String,String)",1,1,1
"android.content.res.AssetManager.ensureStringBlocks()",1,3,3
"android.content.res.AssetManager.ensureSystemAssets()",1,2,2
"android.content.res.AssetManager.finalize()",1,4,5
"android.content.res.AssetManager.getArrayIntResource(int)",1,1,1
"android.content.res.AssetManager.getArraySize(int)",1,1,1
"android.content.res.AssetManager.getArrayStringInfo(int)",1,1,1
"android.content.res.AssetManager.getArrayStringResource(int)",1,1,1
"android.content.res.AssetManager.getAssetAllocations()",1,1,1
"android.content.res.AssetManager.getAssetLength(int)",1,1,1
"android.content.res.AssetManager.getAssetRemainingLength(int)",1,1,1
"android.content.res.AssetManager.getCookieName(int)",1,1,1
"android.content.res.AssetManager.getGlobalAssetCount()",1,1,1
"android.content.res.AssetManager.getGlobalAssetManagerCount()",1,1,1
"android.content.res.AssetManager.getLocales()",1,1,1
"android.content.res.AssetManager.getNativeStringBlock(int)",1,1,1
"android.content.res.AssetManager.getPooledString(int,int)",1,1,1
"android.content.res.AssetManager.getResourceBagText(int,int)",3,3,3
"android.content.res.AssetManager.getResourceEntryName(int)",1,1,1
"android.content.res.AssetManager.getResourceIdentifier(String,String,String)",1,1,1
"android.content.res.AssetManager.getResourceName(int)",1,1,1
"android.content.res.AssetManager.getResourcePackageName(int)",1,1,1
"android.content.res.AssetManager.getResourceStringArray(int)",1,1,1
"android.content.res.AssetManager.getResourceText(int)",3,3,3
"android.content.res.AssetManager.getResourceTextArray(int)",1,3,3
"android.content.res.AssetManager.getResourceTypeName(int)",1,1,1
"android.content.res.AssetManager.getResourceValue(int,int,TypedValue,boolean)",3,2,3
"android.content.res.AssetManager.getStringBlockCount()",1,1,1
"android.content.res.AssetManager.getSystem()",1,1,1
"android.content.res.AssetManager.getThemeValue(int,int,TypedValue,boolean)",3,3,4
"android.content.res.AssetManager.incRefsLocked(int)",1,3,3
"android.content.res.AssetManager.init()",1,1,1
"android.content.res.AssetManager.isUpToDate()",1,1,1
"android.content.res.AssetManager.list(String)",1,1,1
"android.content.res.AssetManager.loadResourceBagValue(int,int,TypedValue,boolean)",1,1,1
"android.content.res.AssetManager.loadResourceValue(int,short,TypedValue,boolean)",1,1,1
"android.content.res.AssetManager.loadThemeAttributeValue(int,int,TypedValue,boolean)",1,1,1
"android.content.res.AssetManager.makeStringBlocks(boolean)",1,4,5
"android.content.res.AssetManager.newTheme()",1,1,1
"android.content.res.AssetManager.open(String)",1,1,1
"android.content.res.AssetManager.open(String,int)",3,2,3
"android.content.res.AssetManager.openAsset(String,int)",1,1,1
"android.content.res.AssetManager.openAssetFd(String,long[])",1,1,1
"android.content.res.AssetManager.openFd(String)",3,1,3
"android.content.res.AssetManager.openNonAsset(String)",1,1,1
"android.content.res.AssetManager.openNonAsset(String,int)",1,1,1
"android.content.res.AssetManager.openNonAsset(int,String)",1,1,1
"android.content.res.AssetManager.openNonAsset(int,String,int)",3,2,3
"android.content.res.AssetManager.openNonAssetFd(String)",1,1,1
"android.content.res.AssetManager.openNonAssetFd(int,String)",3,1,3
"android.content.res.AssetManager.openNonAssetFdNative(int,String,long[])",1,1,1
"android.content.res.AssetManager.openNonAssetNative(int,String,int)",1,1,1
"android.content.res.AssetManager.openXmlAssetNative(int,String)",1,1,1
"android.content.res.AssetManager.openXmlBlockAsset(String)",1,1,1
"android.content.res.AssetManager.openXmlBlockAsset(int,String)",3,2,3
"android.content.res.AssetManager.openXmlResourceParser(String)",1,1,1
"android.content.res.AssetManager.openXmlResourceParser(int,String)",1,1,1
"android.content.res.AssetManager.readAsset(int,byte[],int,int)",1,1,1
"android.content.res.AssetManager.readAssetChar(int)",1,1,1
"android.content.res.AssetManager.releaseTheme(int)",1,1,1
"android.content.res.AssetManager.retrieveArray(int,int[])",1,1,1
"android.content.res.AssetManager.retrieveAttributes(int,int[],int[],int[])",1,1,1
"android.content.res.AssetManager.seekAsset(int,long,int)",1,1,1
"android.content.res.AssetManager.setConfiguration(int,int,String,int,int,int,int,int,int,int,int,int,int,int)",1,1,1
"android.content.res.AssetManager.setLocale(String)",1,1,1
"android.content.res.AssetManager.xmlBlockGone(int)",1,1,1
"android.content.res.ColorStateList.ColorStateList()",1,1,1
"android.content.res.ColorStateList.ColorStateList(int[][],int[])",1,1,4
"android.content.res.ColorStateList.createFromXml(Resources,XmlPullParser)",2,2,4
"android.content.res.ColorStateList.createFromXmlInner(Resources,XmlPullParser,AttributeSet)",2,2,2
"android.content.res.ColorStateList.describeContents()",1,1,1
"android.content.res.ColorStateList.getColorForState(int[],int)",3,2,3
"android.content.res.ColorStateList.getDefaultColor()",1,1,1
"android.content.res.ColorStateList.inflate(Resources,XmlPullParser,AttributeSet)",8,11,17
"android.content.res.ColorStateList.isStateful()",1,1,1
"android.content.res.ColorStateList.toString()",1,1,1
"android.content.res.ColorStateList.valueOf(int)",2,2,3
"android.content.res.ColorStateList.withAlpha(int)",1,1,2
"android.content.res.ColorStateList.writeToParcel(Parcel,int)",1,2,2
"android.content.res.CompatibilityInfo.CompatibilityInfo()",1,1,1
"android.content.res.CompatibilityInfo.CompatibilityInfo(ApplicationInfo)",1,1,5
"android.content.res.CompatibilityInfo.CompatibilityInfo(int,int,int,float,float)",1,1,1
"android.content.res.CompatibilityInfo.Translator.Translator()",1,1,1
"android.content.res.CompatibilityInfo.Translator.Translator(float,float)",1,1,1
"android.content.res.CompatibilityInfo.Translator.getTranslatedContentInsets(Rect)",1,1,2
"android.content.res.CompatibilityInfo.Translator.getTranslatedVisbileInsets(Rect)",1,1,2
"android.content.res.CompatibilityInfo.Translator.translateCanvas(Canvas)",1,2,2
"android.content.res.CompatibilityInfo.Translator.translateEventInScreenToAppWindow(MotionEvent)",1,1,1
"android.content.res.CompatibilityInfo.Translator.translateLayoutParamsInAppWindowToScreen(LayoutParams)",1,1,1
"android.content.res.CompatibilityInfo.Translator.translatePointInScreenToAppWindow(PointF)",1,1,2
"android.content.res.CompatibilityInfo.Translator.translateRectInAppWindowToScreen(Rect)",1,1,1
"android.content.res.CompatibilityInfo.Translator.translateRectInScreenToAppWinFrame(Rect)",1,1,1
"android.content.res.CompatibilityInfo.Translator.translateRectInScreenToAppWindow(Rect)",1,1,1
"android.content.res.CompatibilityInfo.Translator.translateRegionInWindowToScreen(Region)",1,1,1
"android.content.res.CompatibilityInfo.Translator.translateWindowLayout(LayoutParams)",1,1,1
"android.content.res.CompatibilityInfo.copy()",1,1,1
"android.content.res.CompatibilityInfo.getTranslator()",1,1,2
"android.content.res.CompatibilityInfo.isConfiguredExpandable()",1,1,1
"android.content.res.CompatibilityInfo.isConfiguredLargeScreens()",1,1,1
"android.content.res.CompatibilityInfo.isConfiguredXLargeScreens()",1,1,1
"android.content.res.CompatibilityInfo.isScalingRequired()",1,1,1
"android.content.res.CompatibilityInfo.setExpandable(boolean)",1,1,2
"android.content.res.CompatibilityInfo.setLargeScreens(boolean)",1,1,2
"android.content.res.CompatibilityInfo.setXLargeScreens(boolean)",1,1,2
"android.content.res.CompatibilityInfo.supportsScreen()",1,1,1
"android.content.res.CompatibilityInfo.toString()",1,1,1
"android.content.res.CompatibilityInfo.updateCompatibleScreenFrame(DisplayMetrics,int,Rect)",1,2,2
"android.content.res.Configuration.Configuration()",1,1,1
"android.content.res.Configuration.Configuration(Configuration)",1,1,1
"android.content.res.Configuration.Configuration(Parcel)",1,1,1
"android.content.res.Configuration.compareTo(Configuration)",19,3,19
"android.content.res.Configuration.describeContents()",1,1,1
"android.content.res.Configuration.diff(Configuration)",1,3,28
"android.content.res.Configuration.equals(Configuration)",3,1,3
"android.content.res.Configuration.equals(Object)",1,1,2
"android.content.res.Configuration.hashCode()",1,2,2
"android.content.res.Configuration.isLayoutSizeAtLeast(int)",2,1,2
"android.content.res.Configuration.isOtherSeqNewer(Configuration)",5,1,5
"android.content.res.Configuration.makeDefault()",1,1,1
"android.content.res.Configuration.needNewResources(int,int)",1,1,1
"android.content.res.Configuration.readFromParcel(Parcel)",1,2,2
"android.content.res.Configuration.setTo(Configuration)",1,2,2
"android.content.res.Configuration.setToDefaults()",1,1,1
"android.content.res.Configuration.toString()",2,3,5
"android.content.res.Configuration.updateFrom(Configuration)",1,5,35
"android.content.res.Configuration.writeToParcel(Parcel,int)",1,3,3
"android.content.res.ObbInfo.ObbInfo()",1,1,1
"android.content.res.ObbInfo.ObbInfo(Parcel)",1,1,1
"android.content.res.ObbInfo.describeContents()",1,1,1
"android.content.res.ObbInfo.toString()",1,1,1
"android.content.res.ObbInfo.writeToParcel(Parcel,int)",1,1,1
"android.content.res.ObbScanner.ObbScanner()",1,1,1
"android.content.res.ObbScanner.getObbInfo(String)",3,1,3
"android.content.res.ObbScanner.getObbInfo_native(String,ObbInfo)",1,1,1
"android.content.res.Resources.NotFoundException.NotFoundException()",1,1,1
"android.content.res.Resources.NotFoundException.NotFoundException(String)",1,1,1
"android.content.res.Resources.Resources()",1,1,1
"android.content.res.Resources.Resources(AssetManager,DisplayMetrics,Configuration)",1,1,1
"android.content.res.Resources.Resources(AssetManager,DisplayMetrics,Configuration,CompatibilityInfo)",1,1,2
"android.content.res.Resources.Theme.Theme()",1,1,1
"android.content.res.Resources.Theme.applyStyle(int,boolean)",1,1,1
"android.content.res.Resources.Theme.dump(int,String,String)",1,1,1
"android.content.res.Resources.Theme.finalize()",1,1,1
"android.content.res.Resources.Theme.obtainStyledAttributes(AttributeSet,int[],int,int)",1,5,6
"android.content.res.Resources.Theme.obtainStyledAttributes(int,int[])",1,4,4
"android.content.res.Resources.Theme.obtainStyledAttributes(int[])",1,1,1
"android.content.res.Resources.Theme.resolveAttribute(int,TypedValue,boolean)",1,2,2
"android.content.res.Resources.Theme.setTo(Theme)",1,1,1
"android.content.res.Resources.attrForQuantityCode(int)",7,2,7
"android.content.res.Resources.clearDrawableCache(LongSparseArray<WeakReference<ConstantState>>,int)",1,8,8
"android.content.res.Resources.emptySparseArray()",1,1,1
"android.content.res.Resources.finishPreloading()",1,2,2
"android.content.res.Resources.flushLayoutCache()",1,3,3
"android.content.res.Resources.getAnimation(int)",1,1,1
"android.content.res.Resources.getAssets()",1,1,1
"android.content.res.Resources.getBoolean(int)",2,1,3
"android.content.res.Resources.getCachedColorStateList(int)",3,3,3
"android.content.res.Resources.getCachedDrawable(LongSparseArray<WeakReference<ConstantState>>,long)",3,3,3
"android.content.res.Resources.getCachedStyledAttributes(int)",3,1,3
"android.content.res.Resources.getColor(int)",3,3,4
"android.content.res.Resources.getColorStateList(int)",1,1,1
"android.content.res.Resources.getCompatibilityInfo()",1,1,1
"android.content.res.Resources.getConfiguration()",1,1,1
"android.content.res.Resources.getDefaultDisplay(Display)",1,4,4
"android.content.res.Resources.getDimension(int)",2,2,2
"android.content.res.Resources.getDimensionPixelOffset(int)",2,2,2
"android.content.res.Resources.getDimensionPixelSize(int)",2,2,2
"android.content.res.Resources.getDisplayMetrics()",1,1,1
"android.content.res.Resources.getDrawable(int)",1,1,1
"android.content.res.Resources.getDrawableForDensity(int,int)",1,1,4
"android.content.res.Resources.getFraction(int,int,int)",2,2,2
"android.content.res.Resources.getIdentifier(String,String,String)",1,1,2
"android.content.res.Resources.getIntArray(int)",2,1,2
"android.content.res.Resources.getInteger(int)",2,1,3
"android.content.res.Resources.getLayout(int)",1,1,1
"android.content.res.Resources.getMovie(int)",1,1,2
"android.content.res.Resources.getPluralRule()",1,2,2
"android.content.res.Resources.getQuantityString(int,int)",1,1,1
"android.content.res.Resources.getQuantityString(int,int,Object...)",1,1,1
"android.content.res.Resources.getQuantityText(int,int)",3,1,3
"android.content.res.Resources.getResourceEntryName(int)",2,1,2
"android.content.res.Resources.getResourceName(int)",2,1,2
"android.content.res.Resources.getResourcePackageName(int)",2,1,2
"android.content.res.Resources.getResourceTypeName(int)",2,1,2
"android.content.res.Resources.getString(int)",2,2,2
"android.content.res.Resources.getString(int,Object...)",1,1,1
"android.content.res.Resources.getStringArray(int)",2,1,2
"android.content.res.Resources.getSystem()",1,1,2
"android.content.res.Resources.getText(int)",2,1,2
"android.content.res.Resources.getText(int,CharSequence)",1,2,3
"android.content.res.Resources.getTextArray(int)",2,1,2
"android.content.res.Resources.getValue(String,TypedValue,boolean)",2,2,2
"android.content.res.Resources.getValue(int,TypedValue,boolean)",2,1,2
"android.content.res.Resources.getValueForDensity(int,int,TypedValue,boolean)",2,1,2
"android.content.res.Resources.getXml(int)",1,1,1
"android.content.res.Resources.loadColorStateList(TypedValue,int)",7,10,15
"android.content.res.Resources.loadDrawable(TypedValue,int)",6,16,23
"android.content.res.Resources.loadXmlResourceParser(String,int,int,String)",5,7,8
"android.content.res.Resources.loadXmlResourceParser(int,String)",2,2,2
"android.content.res.Resources.newTheme()",1,1,1
"android.content.res.Resources.obtainAttributes(AttributeSet,int[])",1,1,1
"android.content.res.Resources.obtainTypedArray(int)",2,2,2
"android.content.res.Resources.openRawResource(int)",1,1,1
"android.content.res.Resources.openRawResource(int,TypedValue)",1,2,2
"android.content.res.Resources.openRawResourceFd(int)",1,2,2
"android.content.res.Resources.parseBundleExtra(String,AttributeSet,Bundle)",7,7,8
"android.content.res.Resources.parseBundleExtras(XmlResourceParser,Bundle)",3,5,7
"android.content.res.Resources.setCompatibilityInfo(CompatibilityInfo)",1,1,1
"android.content.res.Resources.startPreloading()",2,1,2
"android.content.res.Resources.stringForQuantityCode(int)",7,2,7
"android.content.res.Resources.updateConfiguration(Configuration,DisplayMetrics)",1,7,10
"android.content.res.Resources.updateSystemConfiguration(Configuration,DisplayMetrics)",1,2,2
"android.content.res.StringBlock.Height.Height(int)",1,1,1
"android.content.res.StringBlock.Height.chooseHeight(CharSequence,int,int,int,int,FontMetricsInt)",1,1,1
"android.content.res.StringBlock.Height.chooseHeight(CharSequence,int,int,int,int,FontMetricsInt,TextPaint)",1,3,6
"android.content.res.StringBlock.StringBlock(byte[],boolean)",1,2,2
"android.content.res.StringBlock.StringBlock(byte[],int,int,boolean)",1,2,2
"android.content.res.StringBlock.StringBlock(int,boolean)",1,2,2
"android.content.res.StringBlock.addParagraphSpan(Spannable,Object,int,int)",7,9,11
"android.content.res.StringBlock.applyStyles(String,int[],StyleIDs)",19,23,26
"android.content.res.StringBlock.finalize()",1,2,2
"android.content.res.StringBlock.get(int)",8,18,35
"android.content.res.StringBlock.nativeCreate(byte[],int,int)",1,1,1
"android.content.res.StringBlock.nativeDestroy(int)",1,1,1
"android.content.res.StringBlock.nativeGetSize(int)",1,1,1
"android.content.res.StringBlock.nativeGetString(int,int)",1,1,1
"android.content.res.StringBlock.nativeGetStyle(int,int)",1,1,1
"android.content.res.StringBlock.subtag(String,String)",3,2,3
"android.content.res.TypedArray.TypedArray(Resources,int[],int[],int)",1,1,1
"android.content.res.TypedArray.getBoolean(int,boolean)",4,2,5
"android.content.res.TypedArray.getColor(int,int)",5,5,6
"android.content.res.TypedArray.getColorStateList(int)",2,2,2
"android.content.res.TypedArray.getDimension(int,float)",3,3,3
"android.content.res.TypedArray.getDimensionPixelOffset(int,int)",3,3,3
"android.content.res.TypedArray.getDimensionPixelSize(int,int)",3,3,3
"android.content.res.TypedArray.getDrawable(int)",2,3,3
"android.content.res.TypedArray.getFloat(int,float)",6,5,7
"android.content.res.TypedArray.getFraction(int,int,int,float)",3,3,3
"android.content.res.TypedArray.getIndex(int)",1,1,1
"android.content.res.TypedArray.getIndexCount()",1,1,1
"android.content.res.TypedArray.getInt(int,int)",4,2,5
"android.content.res.TypedArray.getInteger(int,int)",3,1,4
"android.content.res.TypedArray.getLayoutDimension(int,String)",3,3,4
"android.content.res.TypedArray.getLayoutDimension(int,int)",3,3,4
"android.content.res.TypedArray.getNonConfigurationString(int,int)",5,5,6
"android.content.res.TypedArray.getNonResourceString(int)",3,3,3
"android.content.res.TypedArray.getPositionDescription()",1,2,2
"android.content.res.TypedArray.getResourceId(int,int)",3,1,3
"android.content.res.TypedArray.getResources()",1,1,1
"android.content.res.TypedArray.getString(int)",4,5,5
"android.content.res.TypedArray.getText(int)",4,4,4
"android.content.res.TypedArray.getTextArray(int)",2,3,3
"android.content.res.TypedArray.getValue(int,TypedValue)",1,1,1
"android.content.res.TypedArray.getValueAt(int,TypedValue)",2,2,3
"android.content.res.TypedArray.hasValue(int)",1,1,1
"android.content.res.TypedArray.length()",1,1,1
"android.content.res.TypedArray.loadStringValueAt(int)",3,3,3
"android.content.res.TypedArray.peekValue(int)",2,1,2
"android.content.res.TypedArray.recycle()",1,1,3
"android.content.res.TypedArray.toString()",1,1,1
"android.content.res.XmlBlock.Parser.Parser(int,XmlBlock)",1,1,1
"android.content.res.XmlBlock.Parser.close()",1,2,2
"android.content.res.XmlBlock.Parser.defineEntityReplacementText(String,String)",1,1,1
"android.content.res.XmlBlock.Parser.finalize()",1,1,1
"android.content.res.XmlBlock.Parser.getAttributeBooleanValue(String,String,boolean)",2,2,2
"android.content.res.XmlBlock.Parser.getAttributeBooleanValue(int,boolean)",2,2,3
"android.content.res.XmlBlock.Parser.getAttributeCount()",1,2,2
"android.content.res.XmlBlock.Parser.getAttributeFloatValue(String,String,float)",2,2,2
"android.content.res.XmlBlock.Parser.getAttributeFloatValue(int,float)",2,2,2
"android.content.res.XmlBlock.Parser.getAttributeIntValue(String,String,int)",2,2,2
"android.content.res.XmlBlock.Parser.getAttributeIntValue(int,int)",2,2,3
"android.content.res.XmlBlock.Parser.getAttributeListValue(String,String,String[],int)",2,2,2
"android.content.res.XmlBlock.Parser.getAttributeListValue(int,String[],int)",2,2,2
"android.content.res.XmlBlock.Parser.getAttributeName(int)",2,3,3
"android.content.res.XmlBlock.Parser.getAttributeNameResource(int)",1,1,1
"android.content.res.XmlBlock.Parser.getAttributeNamespace(int)",3,3,4
"android.content.res.XmlBlock.Parser.getAttributePrefix(int)",1,1,1
"android.content.res.XmlBlock.Parser.getAttributeResourceValue(String,String,int)",2,2,2
"android.content.res.XmlBlock.Parser.getAttributeResourceValue(int,int)",2,2,2
"android.content.res.XmlBlock.Parser.getAttributeType(int)",1,1,1
"android.content.res.XmlBlock.Parser.getAttributeUnsignedIntValue(String,String,int)",2,2,2
"android.content.res.XmlBlock.Parser.getAttributeUnsignedIntValue(int,int)",2,2,3
"android.content.res.XmlBlock.Parser.getAttributeValue(String,String)",2,4,4
"android.content.res.XmlBlock.Parser.getAttributeValue(int)",3,4,4
"android.content.res.XmlBlock.Parser.getClassAttribute()",1,2,2
"android.content.res.XmlBlock.Parser.getColumnNumber()",1,1,1
"android.content.res.XmlBlock.Parser.getDepth()",1,1,1
"android.content.res.XmlBlock.Parser.getEventType()",1,1,1
"android.content.res.XmlBlock.Parser.getFeature(String)",3,1,3
"android.content.res.XmlBlock.Parser.getIdAttribute()",1,2,2
"android.content.res.XmlBlock.Parser.getIdAttributeResourceValue(int)",1,1,1
"android.content.res.XmlBlock.Parser.getInputEncoding()",1,1,1
"android.content.res.XmlBlock.Parser.getLineNumber()",1,1,1
"android.content.res.XmlBlock.Parser.getName()",1,2,2
"android.content.res.XmlBlock.Parser.getNamespace()",1,2,2
"android.content.res.XmlBlock.Parser.getNamespace(String)",1,1,1
"android.content.res.XmlBlock.Parser.getNamespaceCount(int)",1,1,1
"android.content.res.XmlBlock.Parser.getNamespacePrefix(int)",1,1,1
"android.content.res.XmlBlock.Parser.getNamespaceUri(int)",1,1,1
"android.content.res.XmlBlock.Parser.getPooledString(int)",1,1,1
"android.content.res.XmlBlock.Parser.getPositionDescription()",1,1,1
"android.content.res.XmlBlock.Parser.getPrefix()",1,1,1
"android.content.res.XmlBlock.Parser.getProperty(String)",1,1,1
"android.content.res.XmlBlock.Parser.getStyleAttribute()",1,1,1
"android.content.res.XmlBlock.Parser.getText()",1,2,2
"android.content.res.XmlBlock.Parser.getTextCharacters(int[])",1,2,2
"android.content.res.XmlBlock.Parser.isAttributeDefault(int)",1,1,1
"android.content.res.XmlBlock.Parser.isEmptyElementTag()",1,1,1
"android.content.res.XmlBlock.Parser.isWhitespace()",1,1,1
"android.content.res.XmlBlock.Parser.next()",4,3,7
"android.content.res.XmlBlock.Parser.nextTag()",2,4,5
"android.content.res.XmlBlock.Parser.nextText()",5,5,5
"android.content.res.XmlBlock.Parser.nextToken()",1,1,1
"android.content.res.XmlBlock.Parser.require(int,String,String)",2,6,6
"android.content.res.XmlBlock.Parser.setFeature(String,boolean)",3,3,5
"android.content.res.XmlBlock.Parser.setInput(InputStream,String)",1,1,1
"android.content.res.XmlBlock.Parser.setInput(Reader)",1,1,1
"android.content.res.XmlBlock.Parser.setProperty(String,Object)",1,1,1
"android.content.res.XmlBlock.XmlBlock(AssetManager,int)",1,1,1
"android.content.res.XmlBlock.XmlBlock(byte[])",1,1,1
"android.content.res.XmlBlock.XmlBlock(byte[],int,int)",1,1,1
"android.content.res.XmlBlock.close()",1,2,2
"android.content.res.XmlBlock.decOpenCountLocked()",1,3,3
"android.content.res.XmlBlock.finalize()",1,1,1
"android.content.res.XmlBlock.nativeCreate(byte[],int,int)",1,1,1
"android.content.res.XmlBlock.nativeCreateParseState(int)",1,1,1
"android.content.res.XmlBlock.nativeDestroy(int)",1,1,1
"android.content.res.XmlBlock.nativeDestroyParseState(int)",1,1,1
"android.content.res.XmlBlock.nativeGetAttributeCount(int)",1,1,1
"android.content.res.XmlBlock.nativeGetAttributeData(int,int)",1,1,1
"android.content.res.XmlBlock.nativeGetAttributeDataType(int,int)",1,1,1
"android.content.res.XmlBlock.nativeGetAttributeIndex(int,String,String)",1,1,1
"android.content.res.XmlBlock.nativeGetAttributeName(int,int)",1,1,1
"android.content.res.XmlBlock.nativeGetAttributeNamespace(int,int)",1,1,1
"android.content.res.XmlBlock.nativeGetAttributeResource(int,int)",1,1,1
"android.content.res.XmlBlock.nativeGetAttributeStringValue(int,int)",1,1,1
"android.content.res.XmlBlock.nativeGetClassAttribute(int)",1,1,1
"android.content.res.XmlBlock.nativeGetIdAttribute(int)",1,1,1
"android.content.res.XmlBlock.nativeGetLineNumber(int)",1,1,1
"android.content.res.XmlBlock.nativeGetName(int)",1,1,1
"android.content.res.XmlBlock.nativeGetNamespace(int)",1,1,1
"android.content.res.XmlBlock.nativeGetStringBlock(int)",1,1,1
"android.content.res.XmlBlock.nativeGetStyleAttribute(int)",1,1,1
"android.content.res.XmlBlock.nativeGetText(int)",1,1,1
"android.content.res.XmlBlock.nativeNext(int)",1,1,1
"android.content.res.XmlBlock.newParser()",2,2,2
"android.database.AbstractCursor.AbstractCursor()",1,1,1
"android.database.AbstractCursor.SelfContentObserver.SelfContentObserver(AbstractCursor)",1,1,1
"android.database.AbstractCursor.SelfContentObserver.deliverSelfNotifications()",1,1,1
"android.database.AbstractCursor.SelfContentObserver.onChange(boolean)",1,2,2
"android.database.AbstractCursor.checkPosition()",2,3,3
"android.database.AbstractCursor.close()",1,1,1
"android.database.AbstractCursor.copyStringToBuffer(int,CharArrayBuffer)",1,4,4
"android.database.AbstractCursor.deactivate()",1,1,1
"android.database.AbstractCursor.deactivateInternal()",1,2,2
"android.database.AbstractCursor.fillWindow(int,CursorWindow)",7,8,10
"android.database.AbstractCursor.finalize()",1,2,3
"android.database.AbstractCursor.getBlob(int)",1,1,1
"android.database.AbstractCursor.getColumnCount()",1,1,1
"android.database.AbstractCursor.getColumnIndex(String)",3,5,6
"android.database.AbstractCursor.getColumnIndexOrThrow(String)",2,1,2
"android.database.AbstractCursor.getColumnName(int)",1,1,1
"android.database.AbstractCursor.getDataSetObservable()",1,1,1
"android.database.AbstractCursor.getExtras()",1,1,1
"android.database.AbstractCursor.getNotificationUri()",1,1,1
"android.database.AbstractCursor.getPosition()",1,1,1
"android.database.AbstractCursor.getType(int)",1,1,1
"android.database.AbstractCursor.getUpdatedField(int)",1,1,1
"android.database.AbstractCursor.getWantsAllOnMoveCalls()",1,1,1
"android.database.AbstractCursor.getWindow()",1,1,1
"android.database.AbstractCursor.isAfterLast()",2,1,2
"android.database.AbstractCursor.isBeforeFirst()",2,1,2
"android.database.AbstractCursor.isClosed()",1,1,1
"android.database.AbstractCursor.isFieldUpdated(int)",1,1,1
"android.database.AbstractCursor.isFirst()",1,2,2
"android.database.AbstractCursor.isLast()",1,1,2
"android.database.AbstractCursor.move(int)",1,1,1
"android.database.AbstractCursor.moveToFirst()",1,1,1
"android.database.AbstractCursor.moveToLast()",1,1,1
"android.database.AbstractCursor.moveToNext()",1,1,1
"android.database.AbstractCursor.moveToPosition(int)",4,3,6
"android.database.AbstractCursor.moveToPrevious()",1,1,1
"android.database.AbstractCursor.notifyDataSetChange()",1,1,1
"android.database.AbstractCursor.onChange(boolean)",1,2,3
"android.database.AbstractCursor.onMove(int,int)",1,1,1
"android.database.AbstractCursor.registerContentObserver(ContentObserver)",1,1,1
"android.database.AbstractCursor.registerDataSetObserver(DataSetObserver)",1,1,1
"android.database.AbstractCursor.requery()",1,2,3
"android.database.AbstractCursor.respond(Bundle)",1,1,1
"android.database.AbstractCursor.setNotificationUri(ContentResolver,Uri)",1,2,2
"android.database.AbstractCursor.unregisterContentObserver(ContentObserver)",1,2,2
"android.database.AbstractCursor.unregisterDataSetObserver(DataSetObserver)",1,1,1
"android.database.AbstractWindowedCursor.checkPosition()",2,1,2
"android.database.AbstractWindowedCursor.copyStringToBuffer(int,CharArrayBuffer)",1,1,1
"android.database.AbstractWindowedCursor.getBlob(int)",1,1,1
"android.database.AbstractWindowedCursor.getDouble(int)",1,1,1
"android.database.AbstractWindowedCursor.getFloat(int)",1,1,1
"android.database.AbstractWindowedCursor.getInt(int)",1,1,1
"android.database.AbstractWindowedCursor.getLong(int)",1,1,1
"android.database.AbstractWindowedCursor.getShort(int)",1,1,1
"android.database.AbstractWindowedCursor.getString(int)",1,1,1
"android.database.AbstractWindowedCursor.getType(int)",1,1,1
"android.database.AbstractWindowedCursor.getWindow()",1,1,1
"android.database.AbstractWindowedCursor.hasWindow()",1,1,1
"android.database.AbstractWindowedCursor.isBlob(int)",1,1,1
"android.database.AbstractWindowedCursor.isFloat(int)",1,1,1
"android.database.AbstractWindowedCursor.isLong(int)",1,1,1
"android.database.AbstractWindowedCursor.isNull(int)",1,1,1
"android.database.AbstractWindowedCursor.isString(int)",1,1,1
"android.database.AbstractWindowedCursor.setWindow(CursorWindow)",1,2,2
"android.database.BulkCursorNative.BulkCursorNative()",1,1,1
"android.database.BulkCursorNative.asBinder()",1,1,1
"android.database.BulkCursorNative.asInterface(IBinder)",3,1,3
"android.database.BulkCursorNative.onTransact(int,Parcel,Parcel,int)",12,14,15
"android.database.BulkCursorProxy.BulkCursorProxy(IBinder)",1,1,1
"android.database.BulkCursorProxy.asBinder()",1,1,1
"android.database.BulkCursorProxy.close()",1,1,1
"android.database.BulkCursorProxy.count()",1,2,2
"android.database.BulkCursorProxy.deactivate()",1,1,1
"android.database.BulkCursorProxy.getColumnNames()",1,2,2
"android.database.BulkCursorProxy.getExtras()",1,2,2
"android.database.BulkCursorProxy.getWantsAllOnMoveCalls()",1,1,1
"android.database.BulkCursorProxy.getWindow(int)",1,2,2
"android.database.BulkCursorProxy.onMove(int)",1,1,1
"android.database.BulkCursorProxy.requery(IContentObserver,CursorWindow)",1,2,2
"android.database.BulkCursorProxy.respond(Bundle)",1,1,1
"android.database.BulkCursorToCursorAdaptor.close()",1,2,2
"android.database.BulkCursorToCursorAdaptor.deactivate()",1,2,2
"android.database.BulkCursorToCursorAdaptor.findRowIdColumnIndex(String[])",3,2,3
"android.database.BulkCursorToCursorAdaptor.getColumnNames()",2,3,3
"android.database.BulkCursorToCursorAdaptor.getCount()",1,1,1
"android.database.BulkCursorToCursorAdaptor.getExtras()",1,1,2
"android.database.BulkCursorToCursorAdaptor.getObserver()",1,1,2
"android.database.BulkCursorToCursorAdaptor.onMove(int,int)",2,6,7
"android.database.BulkCursorToCursorAdaptor.requery()",2,3,3
"android.database.BulkCursorToCursorAdaptor.respond(Bundle)",1,2,2
"android.database.BulkCursorToCursorAdaptor.set(IBulkCursor)",1,2,2
"android.database.BulkCursorToCursorAdaptor.set(IBulkCursor,int,int)",1,1,1
"android.database.CharArrayBuffer.CharArrayBuffer(char[])",1,1,1
"android.database.CharArrayBuffer.CharArrayBuffer(int)",1,1,1
"android.database.ContentObservable.dispatchChange(boolean)",1,4,4
"android.database.ContentObservable.notifyChange(boolean)",1,2,2
"android.database.ContentObservable.registerObserver(ContentObserver)",1,1,1
"android.database.ContentObserver.ContentObserver(Handler)",1,1,1
"android.database.ContentObserver.NotificationRunnable.NotificationRunnable(boolean)",1,1,1
"android.database.ContentObserver.NotificationRunnable.run()",1,1,1
"android.database.ContentObserver.Transport.Transport(ContentObserver)",1,1,1
"android.database.ContentObserver.Transport.deliverSelfNotifications()",2,2,2
"android.database.ContentObserver.Transport.onChange(boolean)",1,2,2
"android.database.ContentObserver.Transport.releaseContentObserver()",1,1,1
"android.database.ContentObserver.deliverSelfNotifications()",1,1,1
"android.database.ContentObserver.dispatchChange(boolean)",1,2,2
"android.database.ContentObserver.getContentObserver()",1,1,2
"android.database.ContentObserver.onChange(boolean)",1,1,1
"android.database.ContentObserver.releaseContentObserver()",1,2,2
"android.database.CursorIndexOutOfBoundsException.CursorIndexOutOfBoundsException(String)",1,1,1
"android.database.CursorIndexOutOfBoundsException.CursorIndexOutOfBoundsException(int,int)",1,1,1
"android.database.CursorJoiner.CursorJoiner(Cursor,String[],Cursor,String[])",2,1,2
"android.database.CursorJoiner.buildColumnIndiciesArray(Cursor,String[])",1,2,2
"android.database.CursorJoiner.compareStrings(String...)",7,2,8
"android.database.CursorJoiner.hasNext()",6,10,10
"android.database.CursorJoiner.incrementCursors()",2,3,5
"android.database.CursorJoiner.iterator()",1,1,1
"android.database.CursorJoiner.next()",3,3,8
"android.database.CursorJoiner.populateValues(String[],Cursor,int[],int)",1,2,3
"android.database.CursorJoiner.remove()",1,1,1
"android.database.CursorToBulkCursorAdaptor.ContentObserverProxy.ContentObserverProxy(IContentObserver,DeathRecipient)",1,1,2
"android.database.CursorToBulkCursorAdaptor.ContentObserverProxy.deliverSelfNotifications()",1,1,1
"android.database.CursorToBulkCursorAdaptor.ContentObserverProxy.onChange(boolean)",1,1,2
"android.database.CursorToBulkCursorAdaptor.ContentObserverProxy.unlinkToDeath(DeathRecipient)",1,1,1
"android.database.CursorToBulkCursorAdaptor.CursorToBulkCursorAdaptor(Cursor,IContentObserver,String,boolean,CursorWindow)",1,5,6
"android.database.CursorToBulkCursorAdaptor.binderDied()",1,2,2
"android.database.CursorToBulkCursorAdaptor.close()",1,1,1
"android.database.CursorToBulkCursorAdaptor.count()",1,1,1
"android.database.CursorToBulkCursorAdaptor.createAndRegisterObserverProxy(IContentObserver)",2,1,2
"android.database.CursorToBulkCursorAdaptor.deactivate()",1,1,1
"android.database.CursorToBulkCursorAdaptor.getColumnNames()",1,1,1
"android.database.CursorToBulkCursorAdaptor.getExtras()",1,1,1
"android.database.CursorToBulkCursorAdaptor.getWantsAllOnMoveCalls()",1,1,1
"android.database.CursorToBulkCursorAdaptor.getWindow(int)",2,4,4
"android.database.CursorToBulkCursorAdaptor.maybeUnregisterObserverProxy()",1,2,2
"android.database.CursorToBulkCursorAdaptor.onMove(int)",1,1,1
"android.database.CursorToBulkCursorAdaptor.requery(IContentObserver,CursorWindow)",2,4,5
"android.database.CursorToBulkCursorAdaptor.respond(Bundle)",1,1,1
"android.database.CursorWindow.CursorWindow(Parcel)",1,1,1
"android.database.CursorWindow.CursorWindow(boolean)",1,1,1
"android.database.CursorWindow.allocRow()",1,1,1
"android.database.CursorWindow.allocRow_native()",1,1,1
"android.database.CursorWindow.clear()",1,1,1
"android.database.CursorWindow.close()",1,1,1
"android.database.CursorWindow.close_native()",1,1,1
"android.database.CursorWindow.copyStringToBuffer(int,int,CharArrayBuffer)",2,1,4
"android.database.CursorWindow.copyStringToBuffer_native(int,int,int,CharArrayBuffer)",1,1,1
"android.database.CursorWindow.describeContents()",1,1,1
"android.database.CursorWindow.finalize()",1,1,1
"android.database.CursorWindow.freeLastRow()",1,1,1
"android.database.CursorWindow.freeLastRow_native()",1,1,1
"android.database.CursorWindow.getBlob(int,int)",1,1,1
"android.database.CursorWindow.getBlob_native(int,int)",1,1,1
"android.database.CursorWindow.getDouble(int,int)",1,1,1
"android.database.CursorWindow.getDouble_native(int,int)",1,1,1
"android.database.CursorWindow.getFloat(int,int)",1,1,1
"android.database.CursorWindow.getInt(int,int)",1,1,1
"android.database.CursorWindow.getLong(int,int)",1,1,1
"android.database.CursorWindow.getLong_native(int,int)",1,1,1
"android.database.CursorWindow.getNumRows()",1,1,1
"android.database.CursorWindow.getNumRows_native()",1,1,1
"android.database.CursorWindow.getShort(int,int)",1,1,1
"android.database.CursorWindow.getStartPosition()",1,1,1
"android.database.CursorWindow.getString(int,int)",1,1,1
"android.database.CursorWindow.getString_native(int,int)",1,1,1
"android.database.CursorWindow.getType(int,int)",1,1,1
"android.database.CursorWindow.getType_native(int,int)",1,1,1
"android.database.CursorWindow.isBlob(int,int)",1,1,2
"android.database.CursorWindow.isFloat(int,int)",1,1,1
"android.database.CursorWindow.isLong(int,int)",1,1,1
"android.database.CursorWindow.isNull(int,int)",1,1,1
"android.database.CursorWindow.isString(int,int)",1,1,2
"android.database.CursorWindow.native_clear()",1,1,1
"android.database.CursorWindow.native_getBinder()",1,1,1
"android.database.CursorWindow.native_init(IBinder)",1,1,1
"android.database.CursorWindow.native_init(int,boolean)",1,1,1
"android.database.CursorWindow.newFromParcel(Parcel)",1,1,1
"android.database.CursorWindow.onAllReferencesReleased()",1,1,1
"android.database.CursorWindow.printDebugMsgIfError(int)",2,2,2
"android.database.CursorWindow.printStats()",2,5,6
"android.database.CursorWindow.putBlob(byte[],int,int)",1,1,1
"android.database.CursorWindow.putBlob_native(byte[],int,int)",1,1,1
"android.database.CursorWindow.putDouble(double,int,int)",1,1,1
"android.database.CursorWindow.putDouble_native(double,int,int)",1,1,1
"android.database.CursorWindow.putLong(long,int,int)",1,1,1
"android.database.CursorWindow.putLong_native(long,int,int)",1,1,1
"android.database.CursorWindow.putNull(int,int)",1,1,1
"android.database.CursorWindow.putNull_native(int,int)",1,1,1
"android.database.CursorWindow.putString(String,int,int)",1,1,1
"android.database.CursorWindow.putString_native(String,int,int)",1,1,1
"android.database.CursorWindow.recordClosingOfWindow(int,int)",2,1,2
"android.database.CursorWindow.recordNewWindow(int,int)",1,2,2
"android.database.CursorWindow.setNumColumns(int)",1,1,1
"android.database.CursorWindow.setNumColumns_native(int)",1,1,1
"android.database.CursorWindow.setStartPosition(int)",1,1,1
"android.database.CursorWindow.writeToParcel(Parcel,int)",1,1,1
"android.database.CursorWindowAllocationException.CursorWindowAllocationException()",1,1,1
"android.database.CursorWindowAllocationException.CursorWindowAllocationException(String)",1,1,1
"android.database.CursorWrapper.CursorWrapper(Cursor)",1,1,1
"android.database.CursorWrapper.close()",1,1,1
"android.database.CursorWrapper.copyStringToBuffer(int,CharArrayBuffer)",1,1,1
"android.database.CursorWrapper.deactivate()",1,1,1
"android.database.CursorWrapper.getBlob(int)",1,1,1
"android.database.CursorWrapper.getColumnCount()",1,1,1
"android.database.CursorWrapper.getColumnIndex(String)",1,1,1
"android.database.CursorWrapper.getColumnIndexOrThrow(String)",1,1,1
"android.database.CursorWrapper.getColumnName(int)",1,1,1
"android.database.CursorWrapper.getColumnNames()",1,1,1
"android.database.CursorWrapper.getCount()",1,1,1
"android.database.CursorWrapper.getDouble(int)",1,1,1
"android.database.CursorWrapper.getExtras()",1,1,1
"android.database.CursorWrapper.getFloat(int)",1,1,1
"android.database.CursorWrapper.getInt(int)",1,1,1
"android.database.CursorWrapper.getLong(int)",1,1,1
"android.database.CursorWrapper.getPosition()",1,1,1
"android.database.CursorWrapper.getShort(int)",1,1,1
"android.database.CursorWrapper.getString(int)",1,1,1
"android.database.CursorWrapper.getType(int)",1,1,1
"android.database.CursorWrapper.getWantsAllOnMoveCalls()",1,1,1
"android.database.CursorWrapper.getWrappedCursor()",1,1,1
"android.database.CursorWrapper.isAfterLast()",1,1,1
"android.database.CursorWrapper.isBeforeFirst()",1,1,1
"android.database.CursorWrapper.isClosed()",1,1,1
"android.database.CursorWrapper.isFirst()",1,1,1
"android.database.CursorWrapper.isLast()",1,1,1
"android.database.CursorWrapper.isNull(int)",1,1,1
"android.database.CursorWrapper.move(int)",1,1,1
"android.database.CursorWrapper.moveToFirst()",1,1,1
"android.database.CursorWrapper.moveToLast()",1,1,1
"android.database.CursorWrapper.moveToNext()",1,1,1
"android.database.CursorWrapper.moveToPosition(int)",1,1,1
"android.database.CursorWrapper.moveToPrevious()",1,1,1
"android.database.CursorWrapper.registerContentObserver(ContentObserver)",1,1,1
"android.database.CursorWrapper.registerDataSetObserver(DataSetObserver)",1,1,1
"android.database.CursorWrapper.requery()",1,1,1
"android.database.CursorWrapper.respond(Bundle)",1,1,1
"android.database.CursorWrapper.setNotificationUri(ContentResolver,Uri)",1,1,1
"android.database.CursorWrapper.unregisterContentObserver(ContentObserver)",1,1,1
"android.database.CursorWrapper.unregisterDataSetObserver(DataSetObserver)",1,1,1
"android.database.DataSetObservable.notifyChanged()",1,2,2
"android.database.DataSetObservable.notifyInvalidated()",1,2,2
"android.database.DataSetObserver.onChanged()",1,1,1
"android.database.DataSetObserver.onInvalidated()",1,1,1
"android.database.DatabaseUtils.InsertHelper.InsertHelper(SQLiteDatabase,String)",1,1,1
"android.database.DatabaseUtils.InsertHelper.bind(int,String)",1,2,2
"android.database.DatabaseUtils.InsertHelper.bind(int,boolean)",1,1,2
"android.database.DatabaseUtils.InsertHelper.bind(int,byte[])",1,2,2
"android.database.DatabaseUtils.InsertHelper.bind(int,double)",1,1,1
"android.database.DatabaseUtils.InsertHelper.bind(int,float)",1,1,1
"android.database.DatabaseUtils.InsertHelper.bind(int,int)",1,1,1
"android.database.DatabaseUtils.InsertHelper.bind(int,long)",1,1,1
"android.database.DatabaseUtils.InsertHelper.bindNull(int)",1,1,1
"android.database.DatabaseUtils.InsertHelper.buildSQL()",1,5,7
"android.database.DatabaseUtils.InsertHelper.close()",1,3,3
"android.database.DatabaseUtils.InsertHelper.execute()",2,3,4
"android.database.DatabaseUtils.InsertHelper.getColumnIndex(String)",2,1,2
"android.database.DatabaseUtils.InsertHelper.getStatement(boolean)",2,6,6
"android.database.DatabaseUtils.InsertHelper.insert(ContentValues)",1,1,1
"android.database.DatabaseUtils.InsertHelper.insertInternal(ContentValues,boolean)",1,5,5
"android.database.DatabaseUtils.InsertHelper.prepareForInsert()",1,1,1
"android.database.DatabaseUtils.InsertHelper.prepareForReplace()",1,1,1
"android.database.DatabaseUtils.InsertHelper.replace(ContentValues)",1,1,1
"android.database.DatabaseUtils.appendEscapedSQLString(StringBuilder,String)",1,4,4
"android.database.DatabaseUtils.appendSelectionArgs(String[],String[])",2,1,3
"android.database.DatabaseUtils.appendValueToSql(StringBuilder,Object)",1,4,4
"android.database.DatabaseUtils.bindObjectToProgram(SQLiteProgram,int,Object)",1,7,8
"android.database.DatabaseUtils.blobFileDescriptorForQuery(SQLiteDatabase,String,String[])",1,1,1
"android.database.DatabaseUtils.blobFileDescriptorForQuery(SQLiteStatement,String[])",1,1,1
"android.database.DatabaseUtils.concatenateWhere(String,String)",3,1,3
"android.database.DatabaseUtils.createDbFromSqlStatements(Context,String,int,String)",3,2,3
"android.database.DatabaseUtils.cursorDoubleToContentValues(Cursor,String,ContentValues,String)",1,2,2
"android.database.DatabaseUtils.cursorDoubleToContentValuesIfPresent(Cursor,ContentValues,String)",1,3,3
"android.database.DatabaseUtils.cursorDoubleToCursorValues(Cursor,String,ContentValues)",1,1,1
"android.database.DatabaseUtils.cursorFloatToContentValuesIfPresent(Cursor,ContentValues,String)",1,3,3
"android.database.DatabaseUtils.cursorIntToContentValues(Cursor,String,ContentValues)",1,1,1
"android.database.DatabaseUtils.cursorIntToContentValues(Cursor,String,ContentValues,String)",1,2,2
"android.database.DatabaseUtils.cursorIntToContentValuesIfPresent(Cursor,ContentValues,String)",1,3,3
"android.database.DatabaseUtils.cursorLongToContentValues(Cursor,String,ContentValues)",1,1,1
"android.database.DatabaseUtils.cursorLongToContentValues(Cursor,String,ContentValues,String)",1,2,2
"android.database.DatabaseUtils.cursorLongToContentValuesIfPresent(Cursor,ContentValues,String)",1,3,3
"android.database.DatabaseUtils.cursorRowToContentValues(Cursor,ContentValues)",1,4,5
"android.database.DatabaseUtils.cursorShortToContentValuesIfPresent(Cursor,ContentValues,String)",1,3,3
"android.database.DatabaseUtils.cursorStringToContentValues(Cursor,String,ContentValues)",1,1,1
"android.database.DatabaseUtils.cursorStringToContentValues(Cursor,String,ContentValues,String)",1,1,1
"android.database.DatabaseUtils.cursorStringToContentValuesIfPresent(Cursor,ContentValues,String)",1,3,3
"android.database.DatabaseUtils.cursorStringToInsertHelper(Cursor,String,InsertHelper,int)",1,1,1
"android.database.DatabaseUtils.dumpCurrentRow(Cursor)",1,1,1
"android.database.DatabaseUtils.dumpCurrentRow(Cursor,PrintStream)",1,2,3
"android.database.DatabaseUtils.dumpCurrentRow(Cursor,StringBuilder)",1,2,3
"android.database.DatabaseUtils.dumpCurrentRowToString(Cursor)",1,1,1
"android.database.DatabaseUtils.dumpCursor(Cursor)",1,1,1
"android.database.DatabaseUtils.dumpCursor(Cursor,PrintStream)",1,3,3
"android.database.DatabaseUtils.dumpCursor(Cursor,StringBuilder)",1,3,3
"android.database.DatabaseUtils.dumpCursorToString(Cursor)",1,1,1
"android.database.DatabaseUtils.getCollationKey(String)",1,1,2
"android.database.DatabaseUtils.getCollationKeyInBytes(String)",1,2,2
"android.database.DatabaseUtils.getHexCollationKey(String)",1,1,1
"android.database.DatabaseUtils.getKeyLen(byte[])",2,1,2
"android.database.DatabaseUtils.getSqlStatementType(String)",12,16,18
"android.database.DatabaseUtils.getTypeOfObject(Object)",5,1,7
"android.database.DatabaseUtils.longForQuery(SQLiteDatabase,String,String[])",1,1,1
"android.database.DatabaseUtils.longForQuery(SQLiteStatement,String[])",1,1,1
"android.database.DatabaseUtils.queryNumEntries(SQLiteDatabase,String)",1,1,1
"android.database.DatabaseUtils.queryNumEntries(SQLiteDatabase,String,String)",1,1,1
"android.database.DatabaseUtils.queryNumEntries(SQLiteDatabase,String,String,String[])",1,1,2
"android.database.DatabaseUtils.readExceptionFromParcel(Parcel)",2,1,2
"android.database.DatabaseUtils.readExceptionFromParcel(Parcel,String,int)",10,2,10
"android.database.DatabaseUtils.readExceptionWithFileNotFoundExceptionFromParcel(Parcel)",3,2,3
"android.database.DatabaseUtils.readExceptionWithOperationApplicationExceptionFromParcel(Parcel)",3,2,3
"android.database.DatabaseUtils.sqlEscapeString(String)",1,1,1
"android.database.DatabaseUtils.stringForQuery(SQLiteDatabase,String,String[])",1,1,1
"android.database.DatabaseUtils.stringForQuery(SQLiteStatement,String[])",1,1,1
"android.database.DatabaseUtils.writeExceptionToParcel(Parcel,Exception)",11,12,12
"android.database.DefaultDatabaseErrorHandler.deleteDatabaseFile(String)",2,3,4
"android.database.DefaultDatabaseErrorHandler.onCorruption(SQLiteDatabase)",2,4,6
"android.database.MatrixCursor.MatrixCursor(String[])",1,1,1
"android.database.MatrixCursor.MatrixCursor(String[],int)",1,1,2
"android.database.MatrixCursor.RowBuilder.RowBuilder(int,int)",1,1,1
"android.database.MatrixCursor.RowBuilder.add(Object)",2,1,2
"android.database.MatrixCursor.addRow(ArrayList<?>,int)",2,2,3
"android.database.MatrixCursor.addRow(Iterable<?>)",5,2,5
"android.database.MatrixCursor.addRow(Object[])",2,1,2
"android.database.MatrixCursor.ensureCapacity(int)",1,2,3
"android.database.MatrixCursor.get(int)",4,1,5
"android.database.MatrixCursor.getColumnNames()",1,1,1
"android.database.MatrixCursor.getCount()",1,1,1
"android.database.MatrixCursor.getDouble(int)",3,2,3
"android.database.MatrixCursor.getFloat(int)",3,2,3
"android.database.MatrixCursor.getInt(int)",3,2,3
"android.database.MatrixCursor.getLong(int)",3,2,3
"android.database.MatrixCursor.getShort(int)",3,2,3
"android.database.MatrixCursor.getString(int)",2,1,2
"android.database.MatrixCursor.getType(int)",1,1,1
"android.database.MatrixCursor.isNull(int)",1,1,1
"android.database.MatrixCursor.newRow()",1,1,1
"android.database.MergeCursor.MergeCursor(Cursor[])",3,2,3
"android.database.MergeCursor.close()",3,2,3
"android.database.MergeCursor.deactivate()",1,3,3
"android.database.MergeCursor.getBlob(int)",1,1,1
"android.database.MergeCursor.getColumnNames()",2,2,2
"android.database.MergeCursor.getCount()",1,3,3
"android.database.MergeCursor.getDouble(int)",1,1,1
"android.database.MergeCursor.getFloat(int)",1,1,1
"android.database.MergeCursor.getInt(int)",1,1,1
"android.database.MergeCursor.getLong(int)",1,1,1
"android.database.MergeCursor.getShort(int)",1,1,1
"android.database.MergeCursor.getString(int)",1,1,1
"android.database.MergeCursor.getType(int)",1,1,1
"android.database.MergeCursor.isNull(int)",1,1,1
"android.database.MergeCursor.onMove(int,int)",5,3,5
"android.database.MergeCursor.registerContentObserver(ContentObserver)",1,3,3
"android.database.MergeCursor.registerDataSetObserver(DataSetObserver)",1,3,3
"android.database.MergeCursor.requery()",4,2,4
"android.database.MergeCursor.unregisterContentObserver(ContentObserver)",1,3,3
"android.database.MergeCursor.unregisterDataSetObserver(DataSetObserver)",1,3,3
"android.database.Observable.registerObserver(T)",3,1,3
"android.database.Observable.unregisterAll()",1,1,1
"android.database.Observable.unregisterObserver(T)",3,1,3
"android.database.SQLException.SQLException()",1,1,1
"android.database.SQLException.SQLException(String)",1,1,1
"android.database.StaleDataException.StaleDataException()",1,1,1
"android.database.StaleDataException.StaleDataException(String)",1,1,1
"android.database.sqlite.DatabaseConnectionPool.DatabaseConnectionPool(SQLiteDatabase)",1,2,2
"android.database.sqlite.DatabaseConnectionPool.PoolObj.PoolObj(SQLiteDatabase)",1,1,1
"android.database.sqlite.DatabaseConnectionPool.PoolObj.acquire()",1,2,2
"android.database.sqlite.DatabaseConnectionPool.PoolObj.getNumHolders()",1,1,1
"android.database.sqlite.DatabaseConnectionPool.PoolObj.isFree()",1,2,2
"android.database.sqlite.DatabaseConnectionPool.PoolObj.release()",1,2,3
"android.database.sqlite.DatabaseConnectionPool.PoolObj.toString()",1,2,2
"android.database.sqlite.DatabaseConnectionPool.PoolObj.verify()",1,1,2
"android.database.sqlite.DatabaseConnectionPool.close()",1,3,3
"android.database.sqlite.DatabaseConnectionPool.doAsserts()",1,2,2
"android.database.sqlite.DatabaseConnectionPool.get(String)",11,16,16
"android.database.sqlite.DatabaseConnectionPool.getConnectionList()",1,2,2
"android.database.sqlite.DatabaseConnectionPool.getFreePoolSize()",1,2,3
"android.database.sqlite.DatabaseConnectionPool.getMaxPoolSize()",1,1,1
"android.database.sqlite.DatabaseConnectionPool.getPool()",1,1,1
"android.database.sqlite.DatabaseConnectionPool.getSize()",1,1,1
"android.database.sqlite.DatabaseConnectionPool.isDatabaseObjFree(SQLiteDatabase)",1,1,1
"android.database.sqlite.DatabaseConnectionPool.release(SQLiteDatabase)",2,4,5
"android.database.sqlite.DatabaseConnectionPool.setMaxPoolSize(int)",1,1,1
"android.database.sqlite.DatabaseConnectionPool.toString()",1,2,2
"android.database.sqlite.DatabaseObjectNotClosedException.DatabaseObjectNotClosedException()",1,1,1
"android.database.sqlite.SQLiteAbortException.SQLiteAbortException()",1,1,1
"android.database.sqlite.SQLiteAbortException.SQLiteAbortException(String)",1,1,1
"android.database.sqlite.SQLiteAccessPermException.SQLiteAccessPermException()",1,1,1
"android.database.sqlite.SQLiteAccessPermException.SQLiteAccessPermException(String)",1,1,1
"android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException.SQLiteBindOrColumnIndexOutOfRangeException()",1,1,1
"android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException.SQLiteBindOrColumnIndexOutOfRangeException(String)",1,1,1
"android.database.sqlite.SQLiteBlobTooBigException.SQLiteBlobTooBigException()",1,1,1
"android.database.sqlite.SQLiteBlobTooBigException.SQLiteBlobTooBigException(String)",1,1,1
"android.database.sqlite.SQLiteCantOpenDatabaseException.SQLiteCantOpenDatabaseException()",1,1,1
"android.database.sqlite.SQLiteCantOpenDatabaseException.SQLiteCantOpenDatabaseException(String)",1,1,1
"android.database.sqlite.SQLiteClosable.acquireReference()",2,2,2
"android.database.sqlite.SQLiteClosable.getObjInfo()",1,4,4
"android.database.sqlite.SQLiteClosable.onAllReferencesReleasedFromContainer()",1,1,1
"android.database.sqlite.SQLiteClosable.releaseReference()",1,2,2
"android.database.sqlite.SQLiteClosable.releaseReferenceFromContainer()",1,2,2
"android.database.sqlite.SQLiteCompiledSql.SQLiteCompiledSql(SQLiteDatabase,String)",1,1,1
"android.database.sqlite.SQLiteCompiledSql.acquire()",2,1,2
"android.database.sqlite.SQLiteCompiledSql.finalize()",2,3,5
"android.database.sqlite.SQLiteCompiledSql.native_compile(String)",1,1,1
"android.database.sqlite.SQLiteCompiledSql.release()",1,1,1
"android.database.sqlite.SQLiteCompiledSql.releaseIfNotInUse()",1,2,2
"android.database.sqlite.SQLiteCompiledSql.releaseSqlStatement()",1,2,2
"android.database.sqlite.SQLiteCompiledSql.toString()",1,1,2
"android.database.sqlite.SQLiteConstraintException.SQLiteConstraintException()",1,1,1
"android.database.sqlite.SQLiteConstraintException.SQLiteConstraintException(String)",1,1,1
"android.database.sqlite.SQLiteCursor.MainThreadNotificationHandler.handleMessage(Message)",1,1,1
"android.database.sqlite.SQLiteCursor.QueryThread.QueryThread(int)",1,1,1
"android.database.sqlite.SQLiteCursor.QueryThread.run()",5,6,8
"android.database.sqlite.SQLiteCursor.QueryThread.sendMessage()",1,2,2
"android.database.sqlite.SQLiteCursor.SQLiteCursor(SQLiteCursorDriver,String,SQLiteQuery)",3,3,6
"android.database.sqlite.SQLiteCursor.SQLiteCursor(SQLiteDatabase,SQLiteCursorDriver,String,SQLiteQuery)",1,1,1
"android.database.sqlite.SQLiteCursor.close()",1,1,1
"android.database.sqlite.SQLiteCursor.deactivate()",1,1,1
"android.database.sqlite.SQLiteCursor.deactivateCommon()",1,4,4
"android.database.sqlite.SQLiteCursor.fillWindow(int)",4,6,7
"android.database.sqlite.SQLiteCursor.finalize()",1,4,5
"android.database.sqlite.SQLiteCursor.getColumnIndex(String)",2,5,5
"android.database.sqlite.SQLiteCursor.getColumnNames()",1,1,1
"android.database.sqlite.SQLiteCursor.getCount()",1,2,2
"android.database.sqlite.SQLiteCursor.getDatabase()",1,1,1
"android.database.sqlite.SQLiteCursor.getMCount()",1,1,1
"android.database.sqlite.SQLiteCursor.getQuery()",1,1,1
"android.database.sqlite.SQLiteCursor.onMove(int,int)",1,4,4
"android.database.sqlite.SQLiteCursor.queryThreadLock()",1,2,2
"android.database.sqlite.SQLiteCursor.queryThreadUnlock()",1,2,2
"android.database.sqlite.SQLiteCursor.registerDataSetObserver(DataSetObserver)",1,3,5
"android.database.sqlite.SQLiteCursor.requery()",2,6,7
"android.database.sqlite.SQLiteCursor.setLoadStyle(int,int)",1,1,1
"android.database.sqlite.SQLiteCursor.setSelectionArguments(String[])",1,1,1
"android.database.sqlite.SQLiteCursor.setWindow(CursorWindow)",1,2,2
"android.database.sqlite.SQLiteDatabase.SQLiteDatabase(String,CursorFactory,int,DatabaseErrorHandler,short)",2,1,3
"android.database.sqlite.SQLiteDatabase.addCustomFunction(String,int,CustomFunction)",2,2,2
"android.database.sqlite.SQLiteDatabase.addSQLiteClosable(SQLiteClosable)",1,1,1
"android.database.sqlite.SQLiteDatabase.addToCompiledQueries(String,SQLiteCompiledSql)",2,7,9
"android.database.sqlite.SQLiteDatabase.amIInTransaction()",1,4,5
"android.database.sqlite.SQLiteDatabase.beginTransaction()",1,1,1
"android.database.sqlite.SQLiteDatabase.beginTransaction(SQLiteTransactionListener,boolean)",4,7,8
"android.database.sqlite.SQLiteDatabase.beginTransactionNonExclusive()",1,1,1
"android.database.sqlite.SQLiteDatabase.beginTransactionWithListener(SQLiteTransactionListener)",1,1,1
"android.database.sqlite.SQLiteDatabase.beginTransactionWithListenerNonExclusive(SQLiteTransactionListener)",1,1,1
"android.database.sqlite.SQLiteDatabase.checkLockHoldTime()",2,6,8
"android.database.sqlite.SQLiteDatabase.close()",3,4,6
"android.database.sqlite.SQLiteDatabase.closeClosable()",1,3,3
"android.database.sqlite.SQLiteDatabase.closeDatabase()",2,7,8
"android.database.sqlite.SQLiteDatabase.closePendingStatements()",2,3,3
"android.database.sqlite.SQLiteDatabase.compileStatement(String)",1,1,1
"android.database.sqlite.SQLiteDatabase.create(CursorFactory)",1,1,1
"android.database.sqlite.SQLiteDatabase.createPoolConnection(short)",1,1,1
"android.database.sqlite.SQLiteDatabase.dbclose()",1,1,1
"android.database.sqlite.SQLiteDatabase.dbopen(String,int)",1,1,1
"android.database.sqlite.SQLiteDatabase.deallocCachedSqlStatements()",1,2,2
"android.database.sqlite.SQLiteDatabase.delete(String,String,String[])",1,2,3
"android.database.sqlite.SQLiteDatabase.disableWriteAheadLogging()",2,1,2
"android.database.sqlite.SQLiteDatabase.enableSqlProfiling(String,short)",1,1,1
"android.database.sqlite.SQLiteDatabase.enableSqlTracing(String,short)",1,1,1
"android.database.sqlite.SQLiteDatabase.enableWriteAheadLogging()",5,4,6
"android.database.sqlite.SQLiteDatabase.endTransaction()",4,9,13
"android.database.sqlite.SQLiteDatabase.execSQL(String)",1,3,4
"android.database.sqlite.SQLiteDatabase.execSQL(String,Object[])",2,1,2
"android.database.sqlite.SQLiteDatabase.executeSql(String,Object[])",1,2,2
"android.database.sqlite.SQLiteDatabase.finalize()",1,2,2
"android.database.sqlite.SQLiteDatabase.finalizeStatementLater(int)",3,1,3
"android.database.sqlite.SQLiteDatabase.findEditTable(String)",4,4,8
"android.database.sqlite.SQLiteDatabase.getAttachedDbs()",3,4,5
"android.database.sqlite.SQLiteDatabase.getCacheHitNum()",1,1,1
"android.database.sqlite.SQLiteDatabase.getCacheMissNum()",1,1,1
"android.database.sqlite.SQLiteDatabase.getCachesize()",1,1,1
"android.database.sqlite.SQLiteDatabase.getCompiledStatementForSql(String)",2,1,2
"android.database.sqlite.SQLiteDatabase.getDatabaseHandle(String)",3,4,4
"android.database.sqlite.SQLiteDatabase.getDbConnection(String)",3,4,5
"android.database.sqlite.SQLiteDatabase.getDbStats()",4,9,14
"android.database.sqlite.SQLiteDatabase.getMaximumSize()",1,1,1
"android.database.sqlite.SQLiteDatabase.getPageSize()",1,1,1
"android.database.sqlite.SQLiteDatabase.getParentDbConnObj()",1,1,1
"android.database.sqlite.SQLiteDatabase.getPath()",1,1,1
"android.database.sqlite.SQLiteDatabase.getPathForLogs()",3,2,4
"android.database.sqlite.SQLiteDatabase.getQueuedUpStmtList()",1,1,1
"android.database.sqlite.SQLiteDatabase.getSyncedTables()",1,1,1
"android.database.sqlite.SQLiteDatabase.getVersion()",1,1,1
"android.database.sqlite.SQLiteDatabase.handleCorruptedDatabase(SQLiteDatabase,String,CursorFactory,int,DatabaseErrorHandler)",1,1,1
"android.database.sqlite.SQLiteDatabase.inTransaction()",1,2,2
"android.database.sqlite.SQLiteDatabase.insert(String,String,ContentValues)",1,2,2
"android.database.sqlite.SQLiteDatabase.insertOrThrow(String,String,ContentValues)",1,1,1
"android.database.sqlite.SQLiteDatabase.insertWithOnConflict(String,String,ContentValues,int)",1,7,9
"android.database.sqlite.SQLiteDatabase.isDatabaseIntegrityOk()",4,6,6
"android.database.sqlite.SQLiteDatabase.isDbLockedByCurrentThread()",1,1,1
"android.database.sqlite.SQLiteDatabase.isDbLockedByOtherThreads()",1,2,2
"android.database.sqlite.SQLiteDatabase.isInStatementCache(String)",1,1,1
"android.database.sqlite.SQLiteDatabase.isOpen()",1,1,1
"android.database.sqlite.SQLiteDatabase.isPooledConnection()",1,1,1
"android.database.sqlite.SQLiteDatabase.isReadOnly()",1,1,1
"android.database.sqlite.SQLiteDatabase.lock()",1,1,1
"android.database.sqlite.SQLiteDatabase.lock(boolean)",3,3,6
"android.database.sqlite.SQLiteDatabase.lockForced()",1,1,1
"android.database.sqlite.SQLiteDatabase.logTimeStat(String,long)",1,1,1
"android.database.sqlite.SQLiteDatabase.logTimeStat(String,long,String)",4,4,9
"android.database.sqlite.SQLiteDatabase.markTableSyncable(String,String)",1,1,1
"android.database.sqlite.SQLiteDatabase.markTableSyncable(String,String,String)",1,1,1
"android.database.sqlite.SQLiteDatabase.native_addCustomFunction(String,int,CustomFunction)",1,1,1
"android.database.sqlite.SQLiteDatabase.native_finalize(int)",1,1,1
"android.database.sqlite.SQLiteDatabase.native_getDbLookaside()",1,1,1
"android.database.sqlite.SQLiteDatabase.native_releaseCustomFunction(int)",1,1,1
"android.database.sqlite.SQLiteDatabase.native_setLocale(String,int)",1,1,1
"android.database.sqlite.SQLiteDatabase.native_setSqliteSoftHeapLimit(int)",1,1,1
"android.database.sqlite.SQLiteDatabase.needUpgrade(int)",1,1,1
"android.database.sqlite.SQLiteDatabase.onAllReferencesReleased()",1,2,2
"android.database.sqlite.SQLiteDatabase.onCorruption()",1,1,1
"android.database.sqlite.SQLiteDatabase.openDatabase(String,CursorFactory,int)",1,1,1
"android.database.sqlite.SQLiteDatabase.openDatabase(String,CursorFactory,int,DatabaseErrorHandler)",1,3,3
"android.database.sqlite.SQLiteDatabase.openDatabase(String,CursorFactory,int,DatabaseErrorHandler,short)",1,7,7
"android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(File,CursorFactory)",1,1,1
"android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(String,CursorFactory)",1,1,1
"android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(String,CursorFactory,DatabaseErrorHandler)",1,1,1
"android.database.sqlite.SQLiteDatabase.query(String,String[],String,String[],String,String,String)",1,1,1
"android.database.sqlite.SQLiteDatabase.query(String,String[],String,String[],String,String,String,String)",1,1,1
"android.database.sqlite.SQLiteDatabase.query(boolean,String,String[],String,String[],String,String,String,String)",1,1,1
"android.database.sqlite.SQLiteDatabase.queryWithFactory(CursorFactory,boolean,String,String[],String,String[],String,String,String,String)",1,1,1
"android.database.sqlite.SQLiteDatabase.rawQuery(String,String[])",1,1,1
"android.database.sqlite.SQLiteDatabase.rawQuery(String,String[],int,int)",1,1,1
"android.database.sqlite.SQLiteDatabase.rawQueryWithFactory(CursorFactory,String,String[],String)",1,6,10
"android.database.sqlite.SQLiteDatabase.releaseCompiledSqlObj(SQLiteCompiledSql)",1,2,2
"android.database.sqlite.SQLiteDatabase.releaseCustomFunctions()",1,2,2
"android.database.sqlite.SQLiteDatabase.releaseDbConnection(SQLiteDatabase)",2,4,5
"android.database.sqlite.SQLiteDatabase.releaseMemory()",1,1,1
"android.database.sqlite.SQLiteDatabase.removeSQLiteClosable(SQLiteClosable)",1,1,1
"android.database.sqlite.SQLiteDatabase.replace(String,String,ContentValues)",1,2,2
"android.database.sqlite.SQLiteDatabase.replaceOrThrow(String,String,ContentValues)",1,1,1
"android.database.sqlite.SQLiteDatabase.resetTransactionUsingExecSqlFlag()",1,3,3
"android.database.sqlite.SQLiteDatabase.setJournalMode(String,String)",2,3,4
"android.database.sqlite.SQLiteDatabase.setLocale(Locale)",1,1,1
"android.database.sqlite.SQLiteDatabase.setLockingEnabled(boolean)",1,1,1
"android.database.sqlite.SQLiteDatabase.setMaxSqlCacheSize(int)",3,1,4
"android.database.sqlite.SQLiteDatabase.setMaximumSize(long)",1,1,2
"android.database.sqlite.SQLiteDatabase.setPageSize(long)",1,1,1
"android.database.sqlite.SQLiteDatabase.setTransactionSuccessful()",3,1,3
"android.database.sqlite.SQLiteDatabase.setTransactionUsingExecSqlFlag()",1,2,2
"android.database.sqlite.SQLiteDatabase.setVersion(int)",1,1,1
"android.database.sqlite.SQLiteDatabase.unlock()",2,3,4
"android.database.sqlite.SQLiteDatabase.unlockForced()",1,3,3
"android.database.sqlite.SQLiteDatabase.update(String,ContentValues,String,String[])",1,1,1
"android.database.sqlite.SQLiteDatabase.updateWithOnConflict(String,ContentValues,String,String[],int)",2,5,10
"android.database.sqlite.SQLiteDatabase.verifyDbIsOpen()",2,2,2
"android.database.sqlite.SQLiteDatabase.verifyLockOwner()",2,2,3
"android.database.sqlite.SQLiteDatabase.yieldIfContended()",1,1,1
"android.database.sqlite.SQLiteDatabase.yieldIfContendedHelper(boolean,long)",7,6,9
"android.database.sqlite.SQLiteDatabase.yieldIfContendedSafely()",1,1,1
"android.database.sqlite.SQLiteDatabase.yieldIfContendedSafely(long)",1,1,1
"android.database.sqlite.SQLiteDatabaseCorruptException.SQLiteDatabaseCorruptException()",1,1,1
"android.database.sqlite.SQLiteDatabaseCorruptException.SQLiteDatabaseCorruptException(String)",1,1,1
"android.database.sqlite.SQLiteDatabaseLockedException.SQLiteDatabaseLockedException()",1,1,1
"android.database.sqlite.SQLiteDatabaseLockedException.SQLiteDatabaseLockedException(String)",1,1,1
"android.database.sqlite.SQLiteDatatypeMismatchException.SQLiteDatatypeMismatchException()",1,1,1
"android.database.sqlite.SQLiteDatatypeMismatchException.SQLiteDatatypeMismatchException(String)",1,1,1
"android.database.sqlite.SQLiteDebug.DbStats.DbStats(String,long,long,int,int,int,int)",1,1,1
"android.database.sqlite.SQLiteDebug.getDatabaseInfo()",1,1,1
"android.database.sqlite.SQLiteDebug.getHeapAllocatedSize()",1,1,1
"android.database.sqlite.SQLiteDebug.getHeapDirtyPages(int[])",1,1,1
"android.database.sqlite.SQLiteDebug.getHeapFreeSize()",1,1,1
"android.database.sqlite.SQLiteDebug.getHeapSize()",1,1,1
"android.database.sqlite.SQLiteDebug.getNumActiveCursorsFinalized()",1,1,1
"android.database.sqlite.SQLiteDebug.getPagerStats(PagerStats)",1,1,1
"android.database.sqlite.SQLiteDebug.notifyActiveCursorFinalized()",1,1,1
"android.database.sqlite.SQLiteDirectCursorDriver.SQLiteDirectCursorDriver(SQLiteDatabase,String,String)",1,1,1
"android.database.sqlite.SQLiteDirectCursorDriver.cursorClosed()",1,1,1
"android.database.sqlite.SQLiteDirectCursorDriver.cursorDeactivated()",1,1,1
"android.database.sqlite.SQLiteDirectCursorDriver.cursorRequeried(Cursor)",1,1,1
"android.database.sqlite.SQLiteDirectCursorDriver.query(CursorFactory,String[])",1,3,3
"android.database.sqlite.SQLiteDirectCursorDriver.setBindArguments(String[])",1,1,1
"android.database.sqlite.SQLiteDirectCursorDriver.toString()",1,1,1
"android.database.sqlite.SQLiteDiskIOException.SQLiteDiskIOException()",1,1,1
"android.database.sqlite.SQLiteDiskIOException.SQLiteDiskIOException(String)",1,1,1
"android.database.sqlite.SQLiteDoneException.SQLiteDoneException()",1,1,1
"android.database.sqlite.SQLiteDoneException.SQLiteDoneException(String)",1,1,1
"android.database.sqlite.SQLiteException.SQLiteException()",1,1,1
"android.database.sqlite.SQLiteException.SQLiteException(String)",1,1,1
"android.database.sqlite.SQLiteFullException.SQLiteFullException()",1,1,1
"android.database.sqlite.SQLiteFullException.SQLiteFullException(String)",1,1,1
"android.database.sqlite.SQLiteMisuseException.SQLiteMisuseException()",1,1,1
"android.database.sqlite.SQLiteMisuseException.SQLiteMisuseException(String)",1,1,1
"android.database.sqlite.SQLiteOpenHelper.SQLiteOpenHelper(Context,String,CursorFactory,int)",1,1,1
"android.database.sqlite.SQLiteOpenHelper.SQLiteOpenHelper(Context,String,CursorFactory,int,DatabaseErrorHandler)",3,1,3
"android.database.sqlite.SQLiteOpenHelper.close()",2,3,4
"android.database.sqlite.SQLiteOpenHelper.getReadableDatabase()",6,5,9
"android.database.sqlite.SQLiteOpenHelper.getWritableDatabase()",5,12,15
"android.database.sqlite.SQLiteOpenHelper.onDowngrade(SQLiteDatabase,int,int)",1,1,1
"android.database.sqlite.SQLiteOpenHelper.onOpen(SQLiteDatabase)",1,1,1
"android.database.sqlite.SQLiteOutOfMemoryException.SQLiteOutOfMemoryException()",1,1,1
"android.database.sqlite.SQLiteOutOfMemoryException.SQLiteOutOfMemoryException(String)",1,1,1
"android.database.sqlite.SQLiteProgram.SQLiteProgram(SQLiteDatabase,String)",1,1,1
"android.database.sqlite.SQLiteProgram.SQLiteProgram(SQLiteDatabase,String,Object[],boolean)",2,5,8
"android.database.sqlite.SQLiteProgram.addToBindArgs(int,Object)",1,1,2
"android.database.sqlite.SQLiteProgram.bind(int,int,Object)",2,3,8
"android.database.sqlite.SQLiteProgram.bindAllArgsAsStrings(String[])",2,2,3
"android.database.sqlite.SQLiteProgram.bindBlob(int,byte[])",2,1,2
"android.database.sqlite.SQLiteProgram.bindDouble(int,double)",1,1,1
"android.database.sqlite.SQLiteProgram.bindLong(int,long)",1,1,1
"android.database.sqlite.SQLiteProgram.bindNull(int)",1,1,1
"android.database.sqlite.SQLiteProgram.bindString(int,String)",2,1,2
"android.database.sqlite.SQLiteProgram.clearBindings()",2,1,2
"android.database.sqlite.SQLiteProgram.close()",2,2,3
"android.database.sqlite.SQLiteProgram.compile(String,boolean)",1,1,1
"android.database.sqlite.SQLiteProgram.compileAndbindAllArgs()",5,9,15
"android.database.sqlite.SQLiteProgram.compileSql()",2,2,4
"android.database.sqlite.SQLiteProgram.getSqlStatementId()",1,1,2
"android.database.sqlite.SQLiteProgram.getSqlString()",1,1,1
"android.database.sqlite.SQLiteProgram.getUniqueId()",1,1,1
"android.database.sqlite.SQLiteProgram.native_bind_blob(int,byte[])",1,1,1
"android.database.sqlite.SQLiteProgram.native_bind_double(int,double)",1,1,1
"android.database.sqlite.SQLiteProgram.native_bind_long(int,long)",1,1,1
"android.database.sqlite.SQLiteProgram.native_bind_null(int)",1,1,1
"android.database.sqlite.SQLiteProgram.native_bind_string(int,String)",1,1,1
"android.database.sqlite.SQLiteProgram.native_clear_bindings()",1,1,1
"android.database.sqlite.SQLiteProgram.native_compile(String)",1,1,1
"android.database.sqlite.SQLiteProgram.native_finalize()",1,1,1
"android.database.sqlite.SQLiteProgram.onAllReferencesReleased()",1,1,1
"android.database.sqlite.SQLiteProgram.onAllReferencesReleasedFromContainer()",1,1,1
"android.database.sqlite.SQLiteProgram.release()",2,1,2
"android.database.sqlite.SQLiteProgram.setNativeHandle(int)",1,1,1
"android.database.sqlite.SQLiteQuery.SQLiteQuery(SQLiteDatabase,SQLiteQuery)",1,1,1
"android.database.sqlite.SQLiteQuery.SQLiteQuery(SQLiteDatabase,String,int,String[])",1,1,1
"android.database.sqlite.SQLiteQuery.close()",1,1,1
"android.database.sqlite.SQLiteQuery.columnCountLocked()",1,1,1
"android.database.sqlite.SQLiteQuery.columnNameLocked(int)",1,1,1
"android.database.sqlite.SQLiteQuery.fillWindow(CursorWindow,int,int)",1,3,4
"android.database.sqlite.SQLiteQuery.native_column_count()",1,1,1
"android.database.sqlite.SQLiteQuery.native_column_name(int)",1,1,1
"android.database.sqlite.SQLiteQuery.native_fill_window(CursorWindow,int,int,int,int)",1,1,1
"android.database.sqlite.SQLiteQuery.requery()",2,1,2
"android.database.sqlite.SQLiteQuery.toString()",1,1,1
"android.database.sqlite.SQLiteQueryBuilder.SQLiteQueryBuilder()",1,1,1
"android.database.sqlite.SQLiteQueryBuilder.appendClause(StringBuilder,String,String)",1,2,2
"android.database.sqlite.SQLiteQueryBuilder.appendClauseEscapeClause(StringBuilder,String,String)",1,2,2
"android.database.sqlite.SQLiteQueryBuilder.appendColumns(StringBuilder,String[])",1,4,4
"android.database.sqlite.SQLiteQueryBuilder.appendWhere(CharSequence)",1,3,3
"android.database.sqlite.SQLiteQueryBuilder.appendWhereEscapeString(String)",1,3,3
"android.database.sqlite.SQLiteQueryBuilder.buildQuery(String[],String,String,String,String,String)",1,6,6
"android.database.sqlite.SQLiteQueryBuilder.buildQuery(String[],String,String[],String,String,String,String)",1,1,1
"android.database.sqlite.SQLiteQueryBuilder.buildQueryString(boolean,String,String[],String,String,String,String,String)",3,5,8
"android.database.sqlite.SQLiteQueryBuilder.buildUnionQuery(String[],String,String)",1,3,4
"android.database.sqlite.SQLiteQueryBuilder.buildUnionSubQuery(String,String[],Set<String>,int,String,String,String,String)",1,4,5
"android.database.sqlite.SQLiteQueryBuilder.buildUnionSubQuery(String,String[],Set<String>,int,String,String,String[],String,String)",1,1,1
"android.database.sqlite.SQLiteQueryBuilder.computeProjection(String[])",9,8,12
"android.database.sqlite.SQLiteQueryBuilder.getTables()",1,1,1
"android.database.sqlite.SQLiteQueryBuilder.query(SQLiteDatabase,String[],String,String[],String,String,String)",1,1,1
"android.database.sqlite.SQLiteQueryBuilder.query(SQLiteDatabase,String[],String,String[],String,String,String,String)",2,2,3
"android.database.sqlite.SQLiteQueryBuilder.setCursorFactory(CursorFactory)",1,1,1
"android.database.sqlite.SQLiteQueryBuilder.setDistinct(boolean)",1,1,1
"android.database.sqlite.SQLiteQueryBuilder.setProjectionMap(Map<String, String>)",1,1,1
"android.database.sqlite.SQLiteQueryBuilder.setStrictProjectionMap(boolean)",1,1,1
"android.database.sqlite.SQLiteQueryBuilder.setTables(String)",1,1,1
"android.database.sqlite.SQLiteReadOnlyDatabaseException.SQLiteReadOnlyDatabaseException()",1,1,1
"android.database.sqlite.SQLiteReadOnlyDatabaseException.SQLiteReadOnlyDatabaseException(String)",1,1,1
"android.database.sqlite.SQLiteStatement.SQLiteStatement(SQLiteDatabase,String,Object[])",1,1,1
"android.database.sqlite.SQLiteStatement.acquireAndLock(boolean)",1,8,8
"android.database.sqlite.SQLiteStatement.execute()",1,1,1
"android.database.sqlite.SQLiteStatement.executeInsert()",1,1,1
"android.database.sqlite.SQLiteStatement.executeUpdateDelete()",1,2,2
"android.database.sqlite.SQLiteStatement.native_1x1_blob_ashmem()",1,1,1
"android.database.sqlite.SQLiteStatement.native_1x1_long()",1,1,1
"android.database.sqlite.SQLiteStatement.native_1x1_string()",1,1,1
"android.database.sqlite.SQLiteStatement.native_execute()",1,1,1
"android.database.sqlite.SQLiteStatement.native_executeInsert()",1,1,1
"android.database.sqlite.SQLiteStatement.native_executeSql(String)",1,1,1
"android.database.sqlite.SQLiteStatement.releaseAndUnlock()",1,4,5
"android.database.sqlite.SQLiteStatement.simpleQueryForBlobFileDescriptor()",1,2,2
"android.database.sqlite.SQLiteStatement.simpleQueryForLong()",1,1,1
"android.database.sqlite.SQLiteStatement.simpleQueryForString()",1,1,1
"android.database.sqlite.SQLiteTableLockedException.SQLiteTableLockedException()",1,1,1
"android.database.sqlite.SQLiteTableLockedException.SQLiteTableLockedException(String)",1,1,1
"android.database.sqlite.SQLiteUnfinalizedObjectsException.SQLiteUnfinalizedObjectsException()",1,1,1
"android.database.sqlite.SQLiteUnfinalizedObjectsException.SQLiteUnfinalizedObjectsException(String)",1,1,1
"android.database.sqlite.SqliteWrapper.SqliteWrapper()",1,1,1
"android.database.sqlite.SqliteWrapper.checkSQLiteException(Context,SQLiteException)",2,2,2
"android.database.sqlite.SqliteWrapper.delete(Context,ContentResolver,Uri,String,String[])",1,2,2
"android.database.sqlite.SqliteWrapper.insert(Context,ContentResolver,Uri,ContentValues)",1,2,2
"android.database.sqlite.SqliteWrapper.isLowMemory(SQLiteException)",1,1,1
"android.database.sqlite.SqliteWrapper.query(Context,ContentResolver,Uri,String[],String,String[],String)",1,2,2
"android.database.sqlite.SqliteWrapper.requery(Context,Cursor)",1,2,2
"android.database.sqlite.SqliteWrapper.update(Context,ContentResolver,Uri,ContentValues,String,String[])",1,2,2
"android.ddm.DdmHandleAppName.DdmHandleAppName()",1,1,1
"android.ddm.DdmHandleAppName.connected()",1,1,1
"android.ddm.DdmHandleAppName.disconnected()",1,1,1
"android.ddm.DdmHandleAppName.getAppName()",1,1,1
"android.ddm.DdmHandleAppName.handleChunk(Chunk)",1,1,1
"android.ddm.DdmHandleAppName.register()",1,1,1
"android.ddm.DdmHandleAppName.sendAPNM(String)",1,2,2
"android.ddm.DdmHandleAppName.setAppName(String)",2,2,3
"android.ddm.DdmHandleExit.DdmHandleExit()",1,1,1
"android.ddm.DdmHandleExit.connected()",1,1,1
"android.ddm.DdmHandleExit.disconnected()",1,1,1
"android.ddm.DdmHandleExit.handleChunk(Chunk)",1,2,2
"android.ddm.DdmHandleExit.register()",1,1,1
"android.ddm.DdmHandleHeap.DdmHandleHeap()",1,1,1
"android.ddm.DdmHandleHeap.connected()",1,1,1
"android.ddm.DdmHandleHeap.disconnected()",1,1,1
"android.ddm.DdmHandleHeap.handleChunk(Chunk)",10,11,11
"android.ddm.DdmHandleHeap.handleHPDS(Chunk)",2,4,5
"android.ddm.DdmHandleHeap.handleHPDU(Chunk)",1,3,5
"android.ddm.DdmHandleHeap.handleHPGC(Chunk)",1,2,2
"android.ddm.DdmHandleHeap.handleHPIF(Chunk)",2,3,3
"android.ddm.DdmHandleHeap.handleHPSGNHSG(Chunk,boolean)",2,3,3
"android.ddm.DdmHandleHeap.handleREAE(Chunk)",1,2,2
"android.ddm.DdmHandleHeap.handleREAL(Chunk)",1,2,2
"android.ddm.DdmHandleHeap.handleREAQ(Chunk)",1,1,2
"android.ddm.DdmHandleHeap.register()",1,1,1
"android.ddm.DdmHandleHello.DdmHandleHello()",1,1,1
"android.ddm.DdmHandleHello.connected()",1,3,3
"android.ddm.DdmHandleHello.disconnected()",1,2,2
"android.ddm.DdmHandleHello.handleChunk(Chunk)",3,4,4
"android.ddm.DdmHandleHello.handleFEAT(Chunk)",1,4,4
"android.ddm.DdmHandleHello.handleHELO(Chunk)",2,4,4
"android.ddm.DdmHandleHello.register()",1,1,1
"android.ddm.DdmHandleHello.sendWAIT(int)",1,1,1
"android.ddm.DdmHandleNativeHeap.DdmHandleNativeHeap()",1,1,1
"android.ddm.DdmHandleNativeHeap.connected()",1,1,1
"android.ddm.DdmHandleNativeHeap.disconnected()",1,1,1
"android.ddm.DdmHandleNativeHeap.getLeakInfo()",1,1,1
"android.ddm.DdmHandleNativeHeap.handleChunk(Chunk)",2,2,2
"android.ddm.DdmHandleNativeHeap.handleNHGT(Chunk)",2,2,2
"android.ddm.DdmHandleNativeHeap.register()",1,1,1
"android.ddm.DdmHandleProfiling.DdmHandleProfiling()",1,1,1
"android.ddm.DdmHandleProfiling.connected()",1,1,1
"android.ddm.DdmHandleProfiling.disconnected()",1,1,1
"android.ddm.DdmHandleProfiling.handleChunk(Chunk)",6,7,7
"android.ddm.DdmHandleProfiling.handleMPRE(Chunk)",1,2,2
"android.ddm.DdmHandleProfiling.handleMPRQ(Chunk)",1,1,2
"android.ddm.DdmHandleProfiling.handleMPRS(Chunk)",1,3,3
"android.ddm.DdmHandleProfiling.handleMPSE(Chunk)",1,3,3
"android.ddm.DdmHandleProfiling.handleMPSS(Chunk)",1,3,3
"android.ddm.DdmHandleProfiling.register()",1,1,1
"android.ddm.DdmHandleThread.DdmHandleThread()",1,1,1
"android.ddm.DdmHandleThread.connected()",1,1,1
"android.ddm.DdmHandleThread.createStackChunk(StackTraceElement[],int)",1,5,5
"android.ddm.DdmHandleThread.disconnected()",1,1,1
"android.ddm.DdmHandleThread.handleChunk(Chunk)",4,5,5
"android.ddm.DdmHandleThread.handleSTKL(Chunk)",2,2,2
"android.ddm.DdmHandleThread.handleTHEN(Chunk)",1,1,1
"android.ddm.DdmHandleThread.handleTHST(Chunk)",2,2,2
"android.ddm.DdmHandleThread.register()",1,1,1
"android.ddm.DdmRegister.DdmRegister()",1,1,1
"android.ddm.DdmRegister.registerHandlers()",1,2,2
"android.debug.JNITest.JNITest()",1,1,1
"android.debug.JNITest.part1(int,double,String,int[])",1,1,1
"android.debug.JNITest.part2(double,int,String)",1,1,1
"android.debug.JNITest.part3(String)",1,1,1
"android.debug.JNITest.test(int,double,String)",1,1,1
"android.emoji.EmojiFactory.CustomLinkedHashMap.CustomLinkedHashMap()",1,1,1
"android.emoji.EmojiFactory.CustomLinkedHashMap.removeEldestEntry(Entry<K, V>)",1,1,1
"android.emoji.EmojiFactory.EmojiFactory(int,String)",1,1,1
"android.emoji.EmojiFactory.finalize()",1,1,1
"android.emoji.EmojiFactory.getAndroidPuaFromVendorSpecificPua(String)",5,3,6
"android.emoji.EmojiFactory.getAndroidPuaFromVendorSpecificPua(int)",1,1,1
"android.emoji.EmojiFactory.getAndroidPuaFromVendorSpecificSjis(char)",1,1,1
"android.emoji.EmojiFactory.getBitmapFromAndroidPua(int)",3,4,4
"android.emoji.EmojiFactory.getBitmapFromVendorSpecificPua(int)",1,1,1
"android.emoji.EmojiFactory.getBitmapFromVendorSpecificSjis(char)",1,1,1
"android.emoji.EmojiFactory.getMaximumAndroidPua()",1,1,1
"android.emoji.EmojiFactory.getMinimumAndroidPua()",1,1,1
"android.emoji.EmojiFactory.getVendorSpecificPuaFromAndroidPua(String)",5,3,6
"android.emoji.EmojiFactory.getVendorSpecificPuaFromAndroidPua(int)",1,1,1
"android.emoji.EmojiFactory.getVendorSpecificSjisFromAndroidPua(int)",1,1,1
"android.emoji.EmojiFactory.name()",1,1,1
"android.emoji.EmojiFactory.nativeDestructor(int)",1,1,1
"android.emoji.EmojiFactory.nativeGetAndroidPuaFromVendorSpecificPua(int,int)",1,1,1
"android.emoji.EmojiFactory.nativeGetAndroidPuaFromVendorSpecificSjis(int,char)",1,1,1
"android.emoji.EmojiFactory.nativeGetBitmapFromAndroidPua(int,int)",1,1,1
"android.emoji.EmojiFactory.nativeGetMaximumAndroidPua(int)",1,1,1
"android.emoji.EmojiFactory.nativeGetMaximumVendorSpecificPua(int)",1,1,1
"android.emoji.EmojiFactory.nativeGetMinimumAndroidPua(int)",1,1,1
"android.emoji.EmojiFactory.nativeGetMinimumVendorSpecificPua(int)",1,1,1
"android.emoji.EmojiFactory.nativeGetVendorSpecificPuaFromAndroidPua(int,int)",1,1,1
"android.emoji.EmojiFactory.nativeGetVendorSpecificSjisFromAndroidPua(int,int)",1,1,1
"android.emoji.EmojiFactory.newAvailableInstance()",1,1,1
"android.emoji.EmojiFactory.newInstance(String)",1,1,1
"android.gesture.Gesture.Gesture()",1,1,1
"android.gesture.Gesture.addStroke(GestureStroke)",1,1,1
"android.gesture.Gesture.clone()",1,2,2
"android.gesture.Gesture.describeContents()",1,1,1
"android.gesture.Gesture.deserialize(DataInputStream)",1,2,2
"android.gesture.Gesture.getBoundingBox()",1,1,1
"android.gesture.Gesture.getID()",1,1,1
"android.gesture.Gesture.getLength()",1,2,2
"android.gesture.Gesture.getStrokes()",1,1,1
"android.gesture.Gesture.getStrokesCount()",1,1,1
"android.gesture.Gesture.serialize(DataOutputStream)",1,2,2
"android.gesture.Gesture.setID(long)",1,1,1
"android.gesture.Gesture.toBitmap(int,int,int,int)",1,1,2
"android.gesture.Gesture.toBitmap(int,int,int,int,int)",1,2,2
"android.gesture.Gesture.toPath()",1,1,1
"android.gesture.Gesture.toPath(Path)",1,2,3
"android.gesture.Gesture.toPath(Path,int,int,int,int)",1,2,3
"android.gesture.Gesture.toPath(int,int,int,int)",1,1,1
"android.gesture.Gesture.writeToParcel(Parcel,int)",1,3,3
"android.gesture.GestureLibraries.FileGestureLibrary.FileGestureLibrary(File)",1,1,1
"android.gesture.GestureLibraries.FileGestureLibrary.isReadOnly()",1,1,1
"android.gesture.GestureLibraries.FileGestureLibrary.load()",1,5,5
"android.gesture.GestureLibraries.FileGestureLibrary.save()",4,4,6
"android.gesture.GestureLibraries.GestureLibraries()",1,1,1
"android.gesture.GestureLibraries.ResourceGestureLibrary.ResourceGestureLibrary(Context,int)",1,1,1
"android.gesture.GestureLibraries.ResourceGestureLibrary.isReadOnly()",1,1,1
"android.gesture.GestureLibraries.ResourceGestureLibrary.load()",1,3,3
"android.gesture.GestureLibraries.ResourceGestureLibrary.save()",1,1,1
"android.gesture.GestureLibraries.fromFile(File)",1,1,1
"android.gesture.GestureLibraries.fromFile(String)",1,1,1
"android.gesture.GestureLibraries.fromPrivateFile(Context,String)",1,1,1
"android.gesture.GestureLibraries.fromRawResource(Context,int)",1,1,1
"android.gesture.GestureLibrary.GestureLibrary()",1,1,1
"android.gesture.GestureLibrary.addGesture(String,Gesture)",1,1,1
"android.gesture.GestureLibrary.getGestureEntries()",1,1,1
"android.gesture.GestureLibrary.getGestures(String)",1,1,1
"android.gesture.GestureLibrary.getLearner()",1,1,1
"android.gesture.GestureLibrary.getOrientationStyle()",1,1,1
"android.gesture.GestureLibrary.getSequenceType()",1,1,1
"android.gesture.GestureLibrary.isReadOnly()",1,1,1
"android.gesture.GestureLibrary.recognize(Gesture)",1,1,1
"android.gesture.GestureLibrary.removeEntry(String)",1,1,1
"android.gesture.GestureLibrary.removeGesture(String,Gesture)",1,1,1
"android.gesture.GestureLibrary.setOrientationStyle(int)",1,1,1
"android.gesture.GestureLibrary.setSequenceType(int)",1,1,1
"android.gesture.GestureOverlayView.FadeOutRunnable.run()",1,5,5
"android.gesture.GestureOverlayView.GestureOverlayView(Context)",1,1,1
"android.gesture.GestureOverlayView.GestureOverlayView(Context,AttributeSet)",1,1,1
"android.gesture.GestureOverlayView.GestureOverlayView(Context,AttributeSet,int)",1,1,1
"android.gesture.GestureOverlayView.addOnGestureListener(OnGestureListener)",1,1,1
"android.gesture.GestureOverlayView.addOnGesturePerformedListener(OnGesturePerformedListener)",1,1,2
"android.gesture.GestureOverlayView.addOnGesturingListener(OnGesturingListener)",1,1,1
"android.gesture.GestureOverlayView.cancelClearAnimation()",1,1,1
"android.gesture.GestureOverlayView.cancelGesture()",1,3,3
"android.gesture.GestureOverlayView.cancelGesture(MotionEvent)",1,2,2
"android.gesture.GestureOverlayView.clear(boolean)",1,1,1
"android.gesture.GestureOverlayView.clear(boolean,boolean,boolean)",1,5,6
"android.gesture.GestureOverlayView.dispatchTouchEvent(MotionEvent)",2,7,7
"android.gesture.GestureOverlayView.draw(Canvas)",1,2,3
"android.gesture.GestureOverlayView.fireOnGesturePerformed()",1,2,2
"android.gesture.GestureOverlayView.getCurrentStroke()",1,1,1
"android.gesture.GestureOverlayView.getFadeOffset()",1,1,1
"android.gesture.GestureOverlayView.getGesture()",1,1,1
"android.gesture.GestureOverlayView.getGestureColor()",1,1,1
"android.gesture.GestureOverlayView.getGesturePaint()",1,1,1
"android.gesture.GestureOverlayView.getGesturePath()",1,1,1
"android.gesture.GestureOverlayView.getGesturePath(Path)",1,1,1
"android.gesture.GestureOverlayView.getGestureStrokeAngleThreshold()",1,1,1
"android.gesture.GestureOverlayView.getGestureStrokeLengthThreshold()",1,1,1
"android.gesture.GestureOverlayView.getGestureStrokeSquarenessTreshold()",1,1,1
"android.gesture.GestureOverlayView.getGestureStrokeType()",1,1,1
"android.gesture.GestureOverlayView.getGestureStrokeWidth()",1,1,1
"android.gesture.GestureOverlayView.getOrientation()",1,1,1
"android.gesture.GestureOverlayView.getUncertainGestureColor()",1,1,1
"android.gesture.GestureOverlayView.init()",1,1,1
"android.gesture.GestureOverlayView.isEventsInterceptionEnabled()",1,1,1
"android.gesture.GestureOverlayView.isFadeEnabled()",1,1,1
"android.gesture.GestureOverlayView.isGestureVisible()",1,1,1
"android.gesture.GestureOverlayView.isGesturing()",1,1,1
"android.gesture.GestureOverlayView.onDetachedFromWindow()",1,1,1
"android.gesture.GestureOverlayView.processEvent(MotionEvent)",5,6,9
"android.gesture.GestureOverlayView.removeAllOnGestureListeners()",1,1,1
"android.gesture.GestureOverlayView.removeAllOnGesturePerformedListeners()",1,1,1
"android.gesture.GestureOverlayView.removeAllOnGesturingListeners()",1,1,1
"android.gesture.GestureOverlayView.removeOnGestureListener(OnGestureListener)",1,1,1
"android.gesture.GestureOverlayView.removeOnGesturePerformedListener(OnGesturePerformedListener)",1,1,2
"android.gesture.GestureOverlayView.removeOnGesturingListener(OnGesturingListener)",1,1,1
"android.gesture.GestureOverlayView.setCurrentColor(int)",1,2,2
"android.gesture.GestureOverlayView.setEventsInterceptionEnabled(boolean)",1,1,1
"android.gesture.GestureOverlayView.setFadeEnabled(boolean)",1,1,1
"android.gesture.GestureOverlayView.setFadeOffset(long)",1,1,1
"android.gesture.GestureOverlayView.setGesture(Gesture)",1,2,2
"android.gesture.GestureOverlayView.setGestureColor(int)",1,1,1
"android.gesture.GestureOverlayView.setGestureStrokeAngleThreshold(float)",1,1,1
"android.gesture.GestureOverlayView.setGestureStrokeLengthThreshold(float)",1,1,1
"android.gesture.GestureOverlayView.setGestureStrokeSquarenessTreshold(float)",1,1,1
"android.gesture.GestureOverlayView.setGestureStrokeType(int)",1,1,1
"android.gesture.GestureOverlayView.setGestureStrokeWidth(float)",1,1,1
"android.gesture.GestureOverlayView.setGestureVisible(boolean)",1,1,1
"android.gesture.GestureOverlayView.setOrientation(int)",1,1,1
"android.gesture.GestureOverlayView.setPaintAlpha(int)",1,1,1
"android.gesture.GestureOverlayView.setUncertainGestureColor(int)",1,1,1
"android.gesture.GestureOverlayView.touchDown(MotionEvent)",1,9,11
"android.gesture.GestureOverlayView.touchMove(MotionEvent)",1,7,12
"android.gesture.GestureOverlayView.touchUp(MotionEvent,boolean)",1,5,7
"android.gesture.GesturePoint.GesturePoint(float,float,long)",1,1,1
"android.gesture.GesturePoint.clone()",1,1,1
"android.gesture.GesturePoint.deserialize(DataInputStream)",1,1,1
"android.gesture.GestureStore.GestureStore()",1,1,1
"android.gesture.GestureStore.addGesture(String,Gesture)",2,3,4
"android.gesture.GestureStore.getGestureEntries()",1,1,1
"android.gesture.GestureStore.getGestures(String)",2,1,2
"android.gesture.GestureStore.getLearner()",1,1,1
"android.gesture.GestureStore.getOrientationStyle()",1,1,1
"android.gesture.GestureStore.getSequenceType()",1,1,1
"android.gesture.GestureStore.hasChanged()",1,1,1
"android.gesture.GestureStore.load(InputStream)",1,1,1
"android.gesture.GestureStore.load(InputStream,boolean)",2,5,6
"android.gesture.GestureStore.readFormatV1(DataInputStream)",1,3,3
"android.gesture.GestureStore.recognize(Gesture)",1,1,1
"android.gesture.GestureStore.removeEntry(String)",1,1,1
"android.gesture.GestureStore.removeGesture(String,Gesture)",2,2,3
"android.gesture.GestureStore.save(OutputStream)",1,1,1
"android.gesture.GestureStore.save(OutputStream,boolean)",1,6,7
"android.gesture.GestureStore.setOrientationStyle(int)",1,1,1
"android.gesture.GestureStore.setSequenceType(int)",1,1,1
"android.gesture.GestureStroke.GestureStroke(ArrayList<GesturePoint>)",1,3,3
"android.gesture.GestureStroke.GestureStroke(RectF,float,float[],long[])",1,1,1
"android.gesture.GestureStroke.clearPath()",1,2,2
"android.gesture.GestureStroke.clone()",1,1,1
"android.gesture.GestureStroke.computeOrientedBoundingBox()",1,1,1
"android.gesture.GestureStroke.deserialize(DataInputStream)",1,2,2
"android.gesture.GestureStroke.draw(Canvas,Paint)",1,2,2
"android.gesture.GestureStroke.getPath()",1,2,2
"android.gesture.GestureStroke.makePath()",1,4,5
"android.gesture.GestureStroke.serialize(DataOutputStream)",1,2,2
"android.gesture.GestureStroke.toPath(float,float,int)",1,4,6
"android.gesture.GestureUtils.GestureUtils()",1,1,1
"android.gesture.GestureUtils.closeStream(Closeable)",1,3,3
"android.gesture.GestureUtils.computeCentroid(float[])",1,1,2
"android.gesture.GestureUtils.computeCoVariance(float[])",1,1,2
"android.gesture.GestureUtils.computeOrientation(float[][])",1,1,5
"android.gesture.GestureUtils.computeOrientedBoundingBox(ArrayList<GesturePoint>)",1,2,2
"android.gesture.GestureUtils.computeOrientedBoundingBox(float[])",1,1,2
"android.gesture.GestureUtils.computeOrientedBoundingBox(float[],float[])",1,2,8
"android.gesture.GestureUtils.computeStraightness(float[])",1,1,1
"android.gesture.GestureUtils.computeStraightness(float[],float)",1,1,1
"android.gesture.GestureUtils.computeTotalLength(float[])",1,2,2
"android.gesture.GestureUtils.cosineDistance(float[],float[])",1,1,2
"android.gesture.GestureUtils.minimumCosineDistance(float[],float[],int)",3,4,5
"android.gesture.GestureUtils.plot(float,float,float[],int)",1,2,10
"android.gesture.GestureUtils.rotate(float[],float)",1,1,2
"android.gesture.GestureUtils.scale(float[],float,float)",1,1,2
"android.gesture.GestureUtils.spatialSampling(Gesture,int)",1,1,1
"android.gesture.GestureUtils.spatialSampling(Gesture,int,boolean)",1,12,25
"android.gesture.GestureUtils.squaredEuclideanDistance(float[],float[])",1,1,2
"android.gesture.GestureUtils.temporalSampling(GestureStroke,int)",4,2,6
"android.gesture.GestureUtils.translate(float[],float,float)",1,1,2
"android.gesture.Instance.Instance(long,float[],String)",1,1,1
"android.gesture.Instance.createInstance(int,int,Gesture,String)",1,2,2
"android.gesture.Instance.normalize()",1,1,3
"android.gesture.Instance.spatialSampler(Gesture)",1,1,1
"android.gesture.Instance.temporalSampler(int,Gesture)",1,3,4
"android.gesture.InstanceLearner.classify(int,int,float[])",3,5,8
"android.gesture.Learner.addInstance(Instance)",1,1,1
"android.gesture.Learner.getInstances()",1,1,1
"android.gesture.Learner.removeInstance(long)",3,3,3
"android.gesture.Learner.removeInstances(String)",1,5,6
"android.gesture.OrientedBoundingBox.OrientedBoundingBox(float,float,float,float,float)",1,1,2
"android.gesture.OrientedBoundingBox.toPath()",1,1,1
"android.gesture.Prediction.Prediction(String,double)",1,1,1
"android.gesture.Prediction.toString()",1,1,1
"android.hardware.Camera.Camera(int)",1,2,3
"android.hardware.Camera.EventHandler.EventHandler(Camera,Looper)",1,1,1
"android.hardware.Camera.EventHandler.handleMessage(Message)",2,12,21
"android.hardware.Camera.Parameters.Parameters()",1,1,1
"android.hardware.Camera.Parameters.cameraFormatForPixelFormat(int)",7,2,7
"android.hardware.Camera.Parameters.dump()",1,2,2
"android.hardware.Camera.Parameters.flatten()",1,2,2
"android.hardware.Camera.Parameters.get(String)",1,1,1
"android.hardware.Camera.Parameters.getAntibanding()",1,1,1
"android.hardware.Camera.Parameters.getColorEffect()",1,1,1
"android.hardware.Camera.Parameters.getExposureCompensation()",1,1,1
"android.hardware.Camera.Parameters.getExposureCompensationStep()",1,1,1
"android.hardware.Camera.Parameters.getFlashMode()",1,1,1
"android.hardware.Camera.Parameters.getFloat(String,float)",1,1,2
"android.hardware.Camera.Parameters.getFocalLength()",1,1,1
"android.hardware.Camera.Parameters.getFocusDistances(float[])",2,1,3
"android.hardware.Camera.Parameters.getFocusMode()",1,1,1
"android.hardware.Camera.Parameters.getHorizontalViewAngle()",1,1,1
"android.hardware.Camera.Parameters.getInt(String)",1,1,1
"android.hardware.Camera.Parameters.getInt(String,int)",1,1,2
"android.hardware.Camera.Parameters.getJpegQuality()",1,1,1
"android.hardware.Camera.Parameters.getJpegThumbnailQuality()",1,1,1
"android.hardware.Camera.Parameters.getJpegThumbnailSize()",1,1,1
"android.hardware.Camera.Parameters.getMaxExposureCompensation()",1,1,1
"android.hardware.Camera.Parameters.getMaxZoom()",1,1,1
"android.hardware.Camera.Parameters.getMinExposureCompensation()",1,1,1
"android.hardware.Camera.Parameters.getPictureFormat()",1,1,1
"android.hardware.Camera.Parameters.getPictureSize()",1,1,1
"android.hardware.Camera.Parameters.getPreferredPreviewSizeForVideo()",1,1,1
"android.hardware.Camera.Parameters.getPreviewFormat()",1,1,1
"android.hardware.Camera.Parameters.getPreviewFpsRange(int[])",2,1,3
"android.hardware.Camera.Parameters.getPreviewFrameRate()",1,1,1
"android.hardware.Camera.Parameters.getPreviewSize()",1,1,1
"android.hardware.Camera.Parameters.getSceneMode()",1,1,1
"android.hardware.Camera.Parameters.getSupportedAntibanding()",1,1,1
"android.hardware.Camera.Parameters.getSupportedColorEffects()",1,1,1
"android.hardware.Camera.Parameters.getSupportedFlashModes()",1,1,1
"android.hardware.Camera.Parameters.getSupportedFocusModes()",1,1,1
"android.hardware.Camera.Parameters.getSupportedJpegThumbnailSizes()",1,1,1
"android.hardware.Camera.Parameters.getSupportedPictureFormats()",3,2,3
"android.hardware.Camera.Parameters.getSupportedPictureSizes()",1,1,1
"android.hardware.Camera.Parameters.getSupportedPreviewFormats()",3,2,3
"android.hardware.Camera.Parameters.getSupportedPreviewFpsRange()",1,1,1
"android.hardware.Camera.Parameters.getSupportedPreviewFrameRates()",1,1,1
"android.hardware.Camera.Parameters.getSupportedPreviewSizes()",1,1,1
"android.hardware.Camera.Parameters.getSupportedSceneModes()",1,1,1
"android.hardware.Camera.Parameters.getSupportedVideoSizes()",1,1,1
"android.hardware.Camera.Parameters.getSupportedWhiteBalance()",1,1,1
"android.hardware.Camera.Parameters.getVerticalViewAngle()",1,1,1
"android.hardware.Camera.Parameters.getWhiteBalance()",1,1,1
"android.hardware.Camera.Parameters.getZoom()",1,1,1
"android.hardware.Camera.Parameters.getZoomRatios()",1,1,1
"android.hardware.Camera.Parameters.isSmoothZoomSupported()",1,1,1
"android.hardware.Camera.Parameters.isZoomSupported()",1,1,1
"android.hardware.Camera.Parameters.pixelFormatForCameraFormat(String)",7,1,7
"android.hardware.Camera.Parameters.remove(String)",1,1,1
"android.hardware.Camera.Parameters.removeGpsData()",1,1,1
"android.hardware.Camera.Parameters.set(String,String)",3,5,5
"android.hardware.Camera.Parameters.set(String,int)",1,1,1
"android.hardware.Camera.Parameters.setAntibanding(String)",1,1,1
"android.hardware.Camera.Parameters.setColorEffect(String)",1,1,1
"android.hardware.Camera.Parameters.setExposureCompensation(int)",1,1,1
"android.hardware.Camera.Parameters.setFlashMode(String)",1,1,1
"android.hardware.Camera.Parameters.setFocusMode(String)",1,1,1
"android.hardware.Camera.Parameters.setGpsAltitude(double)",1,1,1
"android.hardware.Camera.Parameters.setGpsLatitude(double)",1,1,1
"android.hardware.Camera.Parameters.setGpsLongitude(double)",1,1,1
"android.hardware.Camera.Parameters.setGpsProcessingMethod(String)",1,1,1
"android.hardware.Camera.Parameters.setGpsTimestamp(long)",1,1,1
"android.hardware.Camera.Parameters.setJpegQuality(int)",1,1,1
"android.hardware.Camera.Parameters.setJpegThumbnailQuality(int)",1,1,1
"android.hardware.Camera.Parameters.setJpegThumbnailSize(int,int)",1,1,1
"android.hardware.Camera.Parameters.setPictureFormat(int)",2,1,2
"android.hardware.Camera.Parameters.setPictureSize(int,int)",1,1,1
"android.hardware.Camera.Parameters.setPreviewFormat(int)",2,1,2
"android.hardware.Camera.Parameters.setPreviewFpsRange(int,int)",1,1,1
"android.hardware.Camera.Parameters.setPreviewFrameRate(int)",1,1,1
"android.hardware.Camera.Parameters.setPreviewSize(int,int)",1,1,1
"android.hardware.Camera.Parameters.setRotation(int)",2,2,5
"android.hardware.Camera.Parameters.setSceneMode(String)",1,1,1
"android.hardware.Camera.Parameters.setWhiteBalance(String)",1,1,1
"android.hardware.Camera.Parameters.setZoom(int)",1,1,1
"android.hardware.Camera.Parameters.split(String)",2,2,3
"android.hardware.Camera.Parameters.splitFloat(String,float[])",2,2,3
"android.hardware.Camera.Parameters.splitInt(String)",3,2,4
"android.hardware.Camera.Parameters.splitInt(String,int[])",2,2,3
"android.hardware.Camera.Parameters.splitRange(String)",3,6,7
"android.hardware.Camera.Parameters.splitSize(String)",3,3,5
"android.hardware.Camera.Parameters.strToSize(String)",3,2,3
"android.hardware.Camera.Parameters.unflatten(String)",3,2,3
"android.hardware.Camera.Size.Size(int,int)",1,1,1
"android.hardware.Camera.Size.equals(Object)",2,1,3
"android.hardware.Camera.Size.hashCode()",1,1,1
"android.hardware.Camera.addCallbackBuffer(byte[])",1,1,1
"android.hardware.Camera.autoFocus(AutoFocusCallback)",1,1,1
"android.hardware.Camera.cancelAutoFocus()",1,1,1
"android.hardware.Camera.finalize()",1,1,1
"android.hardware.Camera.getCameraInfo(int,CameraInfo)",1,1,1
"android.hardware.Camera.getNumberOfCameras()",1,1,1
"android.hardware.Camera.getParameters()",1,1,1
"android.hardware.Camera.lock()",1,1,1
"android.hardware.Camera.native_autoFocus()",1,1,1
"android.hardware.Camera.native_cancelAutoFocus()",1,1,1
"android.hardware.Camera.native_getParameters()",1,1,1
"android.hardware.Camera.native_release()",1,1,1
"android.hardware.Camera.native_setParameters(String)",1,1,1
"android.hardware.Camera.native_setup(Object,int)",1,1,1
"android.hardware.Camera.native_takePicture()",1,1,1
"android.hardware.Camera.open()",3,2,3
"android.hardware.Camera.open(int)",1,1,1
"android.hardware.Camera.postEventFromNative(Object,int,int,int,Object)",2,2,3
"android.hardware.Camera.previewEnabled()",1,1,1
"android.hardware.Camera.reconnect()",1,1,1
"android.hardware.Camera.release()",1,1,1
"android.hardware.Camera.setDisplayOrientation(int)",1,1,1
"android.hardware.Camera.setErrorCallback(ErrorCallback)",1,1,1
"android.hardware.Camera.setHasPreviewCallback(boolean,boolean)",1,1,1
"android.hardware.Camera.setOneShotPreviewCallback(PreviewCallback)",1,1,1
"android.hardware.Camera.setParameters(Parameters)",1,1,1
"android.hardware.Camera.setPreviewCallback(PreviewCallback)",1,1,1
"android.hardware.Camera.setPreviewCallbackWithBuffer(PreviewCallback)",1,1,1
"android.hardware.Camera.setPreviewDisplay(Surface)",1,1,1
"android.hardware.Camera.setPreviewDisplay(SurfaceHolder)",1,2,2
"android.hardware.Camera.setZoomChangeListener(OnZoomChangeListener)",1,1,1
"android.hardware.Camera.startPreview()",1,1,1
"android.hardware.Camera.startSmoothZoom(int)",1,1,1
"android.hardware.Camera.stopPreview()",1,1,1
"android.hardware.Camera.stopSmoothZoom()",1,1,1
"android.hardware.Camera.takePicture(ShutterCallback,PictureCallback,PictureCallback)",1,1,1
"android.hardware.Camera.takePicture(ShutterCallback,PictureCallback,PictureCallback,PictureCallback)",1,1,1
"android.hardware.Camera.unlock()",1,1,1
"android.hardware.GeomagneticField.GeomagneticField(float,float,float,long)",1,1,5
"android.hardware.GeomagneticField.LegendreTable.LegendreTable(int,float)",1,1,7
"android.hardware.GeomagneticField.computeGeocentricCoordinates(float,float,float)",1,1,1
"android.hardware.GeomagneticField.computeSchmidtQuasiNormFactors(int)",1,3,4
"android.hardware.GeomagneticField.getDeclination()",1,1,1
"android.hardware.GeomagneticField.getFieldStrength()",1,1,1
"android.hardware.GeomagneticField.getHorizontalStrength()",1,1,1
"android.hardware.GeomagneticField.getInclination()",1,1,1
"android.hardware.GeomagneticField.getX()",1,1,1
"android.hardware.GeomagneticField.getY()",1,1,1
"android.hardware.GeomagneticField.getZ()",1,1,1
"android.hardware.Sensor.Sensor()",1,1,1
"android.hardware.Sensor.getHandle()",1,1,1
"android.hardware.Sensor.getLegacyType()",1,1,1
"android.hardware.Sensor.getMaximumRange()",1,1,1
"android.hardware.Sensor.getMinDelay()",1,1,1
"android.hardware.Sensor.getName()",1,1,1
"android.hardware.Sensor.getPower()",1,1,1
"android.hardware.Sensor.getResolution()",1,1,1
"android.hardware.Sensor.getType()",1,1,1
"android.hardware.Sensor.getVendor()",1,1,1
"android.hardware.Sensor.getVersion()",1,1,1
"android.hardware.Sensor.setLegacyType(int)",1,1,1
"android.hardware.Sensor.setRange(float,float)",1,1,1
"android.hardware.SensorEvent.SensorEvent(int)",1,1,1
"android.hardware.SensorManager.LegacyListener.LegacyListener(SensorListener)",1,1,1
"android.hardware.SensorManager.LegacyListener.mapSensorDataToWindow(int,float[],int)",4,4,12
"android.hardware.SensorManager.LegacyListener.onAccuracyChanged(Sensor,int)",1,1,2
"android.hardware.SensorManager.LegacyListener.onSensorChanged(SensorEvent)",1,4,4
"android.hardware.SensorManager.LegacyListener.registerSensor(int)",1,1,1
"android.hardware.SensorManager.LegacyListener.unregisterSensor(int)",2,1,3
"android.hardware.SensorManager.ListenerDelegate.ListenerDelegate(SensorEventListener,Sensor,Handler)",1,3,3
"android.hardware.SensorManager.ListenerDelegate.addSensor(Sensor)",1,1,1
"android.hardware.SensorManager.ListenerDelegate.createSensorEvent()",1,1,1
"android.hardware.SensorManager.ListenerDelegate.getFromPool()",1,2,2
"android.hardware.SensorManager.ListenerDelegate.getListener()",1,1,1
"android.hardware.SensorManager.ListenerDelegate.getSensors()",1,1,1
"android.hardware.SensorManager.ListenerDelegate.hasSensor(Sensor)",1,1,1
"android.hardware.SensorManager.ListenerDelegate.onSensorChangedLocked(Sensor,float[],long[],int)",1,1,1
"android.hardware.SensorManager.ListenerDelegate.removeSensor(Sensor)",1,1,1
"android.hardware.SensorManager.ListenerDelegate.returnToPool(SensorEvent)",1,1,2
"android.hardware.SensorManager.LmsFilter.LmsFilter()",1,1,1
"android.hardware.SensorManager.LmsFilter.filter(long,float)",1,2,8
"android.hardware.SensorManager.SensorManager(Looper)",1,5,6
"android.hardware.SensorManager.SensorThread.SensorThread()",1,1,1
"android.hardware.SensorManager.SensorThread.SensorThreadRunnable.SensorThreadRunnable()",1,1,1
"android.hardware.SensorManager.SensorThread.SensorThreadRunnable.open()",1,1,1
"android.hardware.SensorManager.SensorThread.SensorThreadRunnable.run()",4,9,10
"android.hardware.SensorManager.SensorThread.finalize()",1,1,1
"android.hardware.SensorManager.SensorThread.startLocked()",1,3,5
"android.hardware.SensorManager.disableSensorLocked(Sensor)",3,2,3
"android.hardware.SensorManager.enableSensorLocked(Sensor,int)",3,3,3
"android.hardware.SensorManager.getAltitude(float,float)",1,1,1
"android.hardware.SensorManager.getAngleChange(float[],float[],float[])",1,1,5
"android.hardware.SensorManager.getDefaultSensor(int)",1,2,2
"android.hardware.SensorManager.getInclination(float[])",2,2,2
"android.hardware.SensorManager.getLegacySensorType(int)",5,2,5
"android.hardware.SensorManager.getOrientation(float[],float[])",1,2,2
"android.hardware.SensorManager.getQuaternionFromVector(float[],float[])",1,2,2
"android.hardware.SensorManager.getRotation()",1,1,1
"android.hardware.SensorManager.getRotationMatrix(float[],float[],float[],float[])",2,2,8
"android.hardware.SensorManager.getRotationMatrixFromVector(float[],float[])",1,2,4
"android.hardware.SensorManager.getSensorList(int)",1,5,5
"android.hardware.SensorManager.getSensors()",2,3,5
"android.hardware.SensorManager.nativeClassInit()",1,1,1
"android.hardware.SensorManager.onRotationChanged(int)",1,1,1
"android.hardware.SensorManager.registerLegacyListener(int,int,SensorListener,int,int)",2,4,5
"android.hardware.SensorManager.registerListener(SensorEventListener,Sensor,int)",1,1,1
"android.hardware.SensorManager.registerListener(SensorEventListener,Sensor,int,Handler)",5,8,15
"android.hardware.SensorManager.registerListener(SensorListener,int)",1,1,1
"android.hardware.SensorManager.registerListener(SensorListener,int,int)",2,6,7
"android.hardware.SensorManager.remapCoordinateSystem(float[],int,int,float[])",3,2,4
"android.hardware.SensorManager.remapCoordinateSystemImpl(float[],int,int,float[])",5,1,18
"android.hardware.SensorManager.sensors_create_queue()",1,1,1
"android.hardware.SensorManager.sensors_data_poll(int,float[],int[],long[])",1,1,1
"android.hardware.SensorManager.sensors_destroy_queue(int)",1,1,1
"android.hardware.SensorManager.sensors_enable_sensor(int,String,int,int)",1,1,1
"android.hardware.SensorManager.sensors_module_get_next_sensor(Sensor,int)",1,1,1
"android.hardware.SensorManager.sensors_module_init()",1,1,1
"android.hardware.SensorManager.unregisterLegacyListener(int,int,SensorListener,int)",8,7,9
"android.hardware.SensorManager.unregisterListener(Object)",4,4,5
"android.hardware.SensorManager.unregisterListener(Object,Sensor)",4,4,6
"android.hardware.SensorManager.unregisterListener(SensorEventListener)",1,1,1
"android.hardware.SensorManager.unregisterListener(SensorEventListener,Sensor)",1,1,1
"android.hardware.SensorManager.unregisterListener(SensorListener)",1,1,1
"android.hardware.SensorManager.unregisterListener(SensorListener,int)",1,1,1
"android.hardware.UsbManager.getDeviceId(String)",1,1,1
"android.hardware.UsbManager.getDeviceName(int)",1,1,1
"android.hardware.UsbManager.getFunctionEnableFile(String)",1,1,1
"android.hardware.UsbManager.isFunctionEnabled(String)",1,1,2
"android.hardware.UsbManager.isFunctionSupported(String)",1,1,1
"android.hardware.UsbManager.native_get_device_id(String)",1,1,1
"android.hardware.UsbManager.native_get_device_name(int)",1,1,1
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl.createSession(SessionCallback)",1,1,1
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl.revokeSession(InputMethodSession)",1,1,1
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl.setSessionEnabled(InputMethodSession,boolean)",1,1,1
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.dispatchKeyEvent(int,KeyEvent,EventCallback)",1,2,2
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.dispatchTrackballEvent(int,MotionEvent,EventCallback)",1,2,2
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.isEnabled()",1,1,1
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.isRevoked()",1,1,1
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.revokeSelf()",1,1,1
"android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl.setEnabled(boolean)",1,1,2
"android.inputmethodservice.AbstractInputMethodService.dump(FileDescriptor,PrintWriter,String[])",1,1,1
"android.inputmethodservice.AbstractInputMethodService.getKeyDispatcherState()",1,1,1
"android.inputmethodservice.AbstractInputMethodService.onBind(Intent)",1,2,2
"android.inputmethodservice.AbstractInputMethodService.onTrackballEvent(MotionEvent)",1,1,1
"android.inputmethodservice.ExtractButton.ExtractButton(Context)",1,1,1
"android.inputmethodservice.ExtractButton.ExtractButton(Context,AttributeSet)",1,1,1
"android.inputmethodservice.ExtractButton.ExtractButton(Context,AttributeSet,int)",1,1,1
"android.inputmethodservice.ExtractButton.hasWindowFocus()",1,1,2
"android.inputmethodservice.ExtractEditText.ExtractEditText(Context)",1,1,1
"android.inputmethodservice.ExtractEditText.ExtractEditText(Context,AttributeSet)",1,1,1
"android.inputmethodservice.ExtractEditText.ExtractEditText(Context,AttributeSet,int)",1,1,1
"android.inputmethodservice.ExtractEditText.finishInternalChanges()",1,1,1
"android.inputmethodservice.ExtractEditText.hasFocus()",1,1,1
"android.inputmethodservice.ExtractEditText.hasVerticalScrollBar()",1,1,1
"android.inputmethodservice.ExtractEditText.hasWindowFocus()",1,1,1
"android.inputmethodservice.ExtractEditText.isFocused()",1,1,1
"android.inputmethodservice.ExtractEditText.isInputMethodTarget()",1,1,1
"android.inputmethodservice.ExtractEditText.onSelectionChanged(int,int)",1,2,5
"android.inputmethodservice.ExtractEditText.onTextContextMenuItem(int)",3,2,4
"android.inputmethodservice.ExtractEditText.performClick()",2,3,3
"android.inputmethodservice.ExtractEditText.setExtractedText(ExtractedText)",1,1,1
"android.inputmethodservice.ExtractEditText.setIME(InputMethodService)",1,1,1
"android.inputmethodservice.ExtractEditText.startInternalChanges()",1,1,1
"android.inputmethodservice.IInputMethodSessionWrapper.IInputMethodSessionWrapper(Context,InputMethodSession)",1,1,1
"android.inputmethodservice.IInputMethodSessionWrapper.InputMethodEventCallbackWrapper.InputMethodEventCallbackWrapper(IInputMethodCallback)",1,1,1
"android.inputmethodservice.IInputMethodSessionWrapper.InputMethodEventCallbackWrapper.finishedEvent(int,boolean)",1,1,2
"android.inputmethodservice.IInputMethodSessionWrapper.appPrivateCommand(String,Bundle)",1,1,1
"android.inputmethodservice.IInputMethodSessionWrapper.dispatchKeyEvent(int,KeyEvent,IInputMethodCallback)",1,1,1
"android.inputmethodservice.IInputMethodSessionWrapper.dispatchTrackballEvent(int,MotionEvent,IInputMethodCallback)",1,1,1
"android.inputmethodservice.IInputMethodSessionWrapper.displayCompletions(CompletionInfo[])",1,1,1
"android.inputmethodservice.IInputMethodSessionWrapper.executeMessage(Message)",8,8,11
"android.inputmethodservice.IInputMethodSessionWrapper.finishInput()",1,1,1
"android.inputmethodservice.IInputMethodSessionWrapper.finishSession()",1,1,1
"android.inputmethodservice.IInputMethodSessionWrapper.getInternalInputMethodSession()",1,1,1
"android.inputmethodservice.IInputMethodSessionWrapper.toggleSoftInput(int,int)",1,1,1
"android.inputmethodservice.IInputMethodSessionWrapper.updateCursor(Rect)",1,1,1
"android.inputmethodservice.IInputMethodSessionWrapper.updateExtractedText(int,ExtractedText)",1,1,1
"android.inputmethodservice.IInputMethodSessionWrapper.updateSelection(int,int,int,int,int,int)",1,1,1
"android.inputmethodservice.IInputMethodWrapper.IInputMethodWrapper(AbstractInputMethodService,InputMethod)",1,1,1
"android.inputmethodservice.IInputMethodWrapper.InputMethodSessionCallbackWrapper.InputMethodSessionCallbackWrapper(Context,IInputMethodCallback)",1,1,1
"android.inputmethodservice.IInputMethodWrapper.InputMethodSessionCallbackWrapper.sessionCreated(InputMethodSession)",1,2,3
"android.inputmethodservice.IInputMethodWrapper.attachToken(IBinder)",1,1,1
"android.inputmethodservice.IInputMethodWrapper.bindInput(InputBinding)",1,1,1
"android.inputmethodservice.IInputMethodWrapper.changeInputMethodSubtype(InputMethodSubtype)",1,1,1
"android.inputmethodservice.IInputMethodWrapper.createSession(IInputMethodCallback)",1,1,1
"android.inputmethodservice.IInputMethodWrapper.dump(FileDescriptor,PrintWriter,String[])",3,4,5
"android.inputmethodservice.IInputMethodWrapper.executeMessage(Message)",10,10,19
"android.inputmethodservice.IInputMethodWrapper.getInternalInputMethod()",1,1,1
"android.inputmethodservice.IInputMethodWrapper.hideSoftInput(int,ResultReceiver)",1,1,1
"android.inputmethodservice.IInputMethodWrapper.restartInput(IInputContext,EditorInfo)",1,1,1
"android.inputmethodservice.IInputMethodWrapper.revokeSession(IInputMethodSession)",1,2,2
"android.inputmethodservice.IInputMethodWrapper.setSessionEnabled(IInputMethodSession,boolean)",1,2,3
"android.inputmethodservice.IInputMethodWrapper.showSoftInput(int,ResultReceiver)",1,1,1
"android.inputmethodservice.IInputMethodWrapper.startInput(IInputContext,EditorInfo)",1,1,1
"android.inputmethodservice.IInputMethodWrapper.unbindInput()",1,1,1
"android.inputmethodservice.InputMethodService.InputMethodImpl.attachToken(IBinder)",1,2,2
"android.inputmethodservice.InputMethodService.InputMethodImpl.bindInput(InputBinding)",1,3,3
"android.inputmethodservice.InputMethodService.InputMethodImpl.changeInputMethodSubtype(InputMethodSubtype)",1,1,1
"android.inputmethodservice.InputMethodService.InputMethodImpl.hideSoftInput(int,ResultReceiver)",1,3,5
"android.inputmethodservice.InputMethodService.InputMethodImpl.restartInput(InputConnection,EditorInfo)",1,2,2
"android.inputmethodservice.InputMethodService.InputMethodImpl.showSoftInput(int,ResultReceiver)",1,4,6
"android.inputmethodservice.InputMethodService.InputMethodImpl.startInput(InputConnection,EditorInfo)",1,2,2
"android.inputmethodservice.InputMethodService.InputMethodImpl.unbindInput()",1,2,2
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.appPrivateCommand(String,Bundle)",2,1,2
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.displayCompletions(CompletionInfo[])",2,1,2
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.finishInput()",2,2,3
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.toggleSoftInput(int,int)",1,1,1
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.updateCursor(Rect)",2,1,2
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.updateExtractedText(int,ExtractedText)",2,1,2
"android.inputmethodservice.InputMethodService.InputMethodSessionImpl.updateSelection(int,int,int,int,int,int)",2,1,2
"android.inputmethodservice.InputMethodService.doFinishInput()",1,7,7
"android.inputmethodservice.InputMethodService.doMovementKey(int,KeyEvent,int)",8,12,14
"android.inputmethodservice.InputMethodService.doStartInput(InputConnection,EditorInfo,boolean)",1,8,8
"android.inputmethodservice.InputMethodService.dump(FileDescriptor,PrintWriter,String[])",1,3,3
"android.inputmethodservice.InputMethodService.getCandidatesHiddenVisibility()",1,1,2
"android.inputmethodservice.InputMethodService.getCurrentInputBinding()",1,1,1
"android.inputmethodservice.InputMethodService.getCurrentInputConnection()",2,1,2
"android.inputmethodservice.InputMethodService.getCurrentInputEditorInfo()",1,1,1
"android.inputmethodservice.InputMethodService.getCurrentInputStarted()",1,1,1
"android.inputmethodservice.InputMethodService.getLayoutInflater()",1,1,1
"android.inputmethodservice.InputMethodService.getMaxWidth()",1,1,1
"android.inputmethodservice.InputMethodService.getTextForImeAction(int)",9,8,9
"android.inputmethodservice.InputMethodService.getWindow()",1,1,1
"android.inputmethodservice.InputMethodService.handleBack(boolean)",3,7,7
"android.inputmethodservice.InputMethodService.hideStatusIcon()",1,1,1
"android.inputmethodservice.InputMethodService.hideWindow()",1,6,6
"android.inputmethodservice.InputMethodService.initViews()",1,2,2
"android.inputmethodservice.InputMethodService.initialize()",1,2,2
"android.inputmethodservice.InputMethodService.isExtractViewShown()",1,1,2
"android.inputmethodservice.InputMethodService.isFullscreenMode()",1,1,1
"android.inputmethodservice.InputMethodService.isInputViewShown()",1,1,2
"android.inputmethodservice.InputMethodService.isShowInputRequested()",1,1,1
"android.inputmethodservice.InputMethodService.onAppPrivateCommand(String,Bundle)",1,1,1
"android.inputmethodservice.InputMethodService.onBindInput()",1,1,1
"android.inputmethodservice.InputMethodService.onComputeInsets(Insets)",1,4,4
"android.inputmethodservice.InputMethodService.onConfigurationChanged(Configuration)",1,7,7
"android.inputmethodservice.InputMethodService.onConfigureWindow(Window,boolean,boolean)",1,2,2
"android.inputmethodservice.InputMethodService.onCreate()",1,1,1
"android.inputmethodservice.InputMethodService.onCreateCandidatesView()",1,1,1
"android.inputmethodservice.InputMethodService.onCreateExtractTextView()",1,1,1
"android.inputmethodservice.InputMethodService.onCreateInputMethodInterface()",1,1,1
"android.inputmethodservice.InputMethodService.onCreateInputMethodSessionInterface()",1,1,1
"android.inputmethodservice.InputMethodService.onCreateInputView()",1,1,1
"android.inputmethodservice.InputMethodService.onCurrentInputMethodSubtypeChanged(InputMethodSubtype)",1,3,3
"android.inputmethodservice.InputMethodService.onDestroy()",1,2,2
"android.inputmethodservice.InputMethodService.onDisplayCompletions(CompletionInfo[])",1,1,1
"android.inputmethodservice.InputMethodService.onEvaluateFullscreenMode()",3,1,4
"android.inputmethodservice.InputMethodService.onEvaluateInputViewShown()",1,1,2
"android.inputmethodservice.InputMethodService.onExtractTextContextMenuItem(int)",1,2,2
"android.inputmethodservice.InputMethodService.onExtractedCursorMovement(int,int)",2,2,4
"android.inputmethodservice.InputMethodService.onExtractedSelectionChanged(int,int)",1,2,2
"android.inputmethodservice.InputMethodService.onExtractedTextClicked()",2,2,3
"android.inputmethodservice.InputMethodService.onExtractingInputChanged(EditorInfo)",1,2,2
"android.inputmethodservice.InputMethodService.onFinishCandidatesView(boolean)",1,3,3
"android.inputmethodservice.InputMethodService.onFinishInput()",1,2,2
"android.inputmethodservice.InputMethodService.onFinishInputView(boolean)",1,3,3
"android.inputmethodservice.InputMethodService.onInitializeInterface()",1,1,1
"android.inputmethodservice.InputMethodService.onKeyDown(int,KeyEvent)",3,3,3
"android.inputmethodservice.InputMethodService.onKeyLongPress(int,KeyEvent)",1,1,1
"android.inputmethodservice.InputMethodService.onKeyMultiple(int,int,KeyEvent)",1,1,1
"android.inputmethodservice.InputMethodService.onKeyUp(int,KeyEvent)",2,4,4
"android.inputmethodservice.InputMethodService.onShowInputRequested(int,boolean)",5,3,7
"android.inputmethodservice.InputMethodService.onStartCandidatesView(EditorInfo,boolean)",1,1,1
"android.inputmethodservice.InputMethodService.onStartInput(EditorInfo,boolean)",1,1,1
"android.inputmethodservice.InputMethodService.onStartInputView(EditorInfo,boolean)",1,1,1
"android.inputmethodservice.InputMethodService.onToggleSoftInput(int,int)",1,3,3
"android.inputmethodservice.InputMethodService.onTrackballEvent(MotionEvent)",1,1,1
"android.inputmethodservice.InputMethodService.onUnbindInput()",1,1,1
"android.inputmethodservice.InputMethodService.onUpdateCursor(Rect)",1,1,1
"android.inputmethodservice.InputMethodService.onUpdateExtractedText(int,ExtractedText)",2,3,4
"android.inputmethodservice.InputMethodService.onUpdateExtractingViews(EditorInfo)",3,5,10
"android.inputmethodservice.InputMethodService.onUpdateExtractingVisibility(EditorInfo)",2,2,3
"android.inputmethodservice.InputMethodService.onUpdateSelection(int,int,int,int,int,int)",1,4,8
"android.inputmethodservice.InputMethodService.onWindowHidden()",1,1,1
"android.inputmethodservice.InputMethodService.onWindowShown()",1,1,1
"android.inputmethodservice.InputMethodService.reportExtractedMovement(int,int)",2,2,5
"android.inputmethodservice.InputMethodService.requestHideSelf(int)",1,1,1
"android.inputmethodservice.InputMethodService.requestShowSelf(int)",1,1,1
"android.inputmethodservice.InputMethodService.sendDefaultEditorAction(boolean)",2,3,6
"android.inputmethodservice.InputMethodService.sendDownUpKeyEvents(int)",2,1,2
"android.inputmethodservice.InputMethodService.sendKeyChar(char)",2,5,7
"android.inputmethodservice.InputMethodService.setCandidatesView(View)",1,1,1
"android.inputmethodservice.InputMethodService.setCandidatesViewShown(boolean)",1,3,4
"android.inputmethodservice.InputMethodService.setExtractView(View)",1,3,3
"android.inputmethodservice.InputMethodService.setExtractViewShown(boolean)",1,2,2
"android.inputmethodservice.InputMethodService.setInputView(View)",1,1,1
"android.inputmethodservice.InputMethodService.setTheme(int)",2,1,2
"android.inputmethodservice.InputMethodService.showStatusIcon(int)",1,1,1
"android.inputmethodservice.InputMethodService.showWindow(boolean)",2,3,3
"android.inputmethodservice.InputMethodService.showWindowInner(boolean)",1,14,18
"android.inputmethodservice.InputMethodService.startExtractingText(boolean)",1,8,11
"android.inputmethodservice.InputMethodService.switchInputMethod(String)",1,1,1
"android.inputmethodservice.InputMethodService.updateCandidatesVisibility(boolean)",1,3,3
"android.inputmethodservice.InputMethodService.updateExtractFrameVisibility()",1,5,7
"android.inputmethodservice.InputMethodService.updateFullscreenMode()",1,9,10
"android.inputmethodservice.InputMethodService.updateInputViewShown()",1,5,7
"android.inputmethodservice.Keyboard.Key.Key(Resources,Row,int,int,XmlResourceParser)",1,7,8
"android.inputmethodservice.Keyboard.Key.Key(Row)",1,1,1
"android.inputmethodservice.Keyboard.Key.getCurrentDrawableState()",1,1,6
"android.inputmethodservice.Keyboard.Key.isInside(int,int)",2,1,13
"android.inputmethodservice.Keyboard.Key.onPressed()",1,1,1
"android.inputmethodservice.Keyboard.Key.onReleased(boolean)",1,1,2
"android.inputmethodservice.Keyboard.Key.parseCSV(String)",1,4,5
"android.inputmethodservice.Keyboard.Key.squaredDistanceFrom(int,int)",1,1,1
"android.inputmethodservice.Keyboard.Keyboard(Context,int)",1,1,1
"android.inputmethodservice.Keyboard.Keyboard(Context,int,CharSequence,int,int)",1,2,6
"android.inputmethodservice.Keyboard.Keyboard(Context,int,int)",1,1,1
"android.inputmethodservice.Keyboard.Keyboard(Context,int,int,int,int)",1,1,1
"android.inputmethodservice.Keyboard.Row.Row(Keyboard)",1,1,1
"android.inputmethodservice.Keyboard.Row.Row(Resources,Keyboard,XmlResourceParser)",1,1,1
"android.inputmethodservice.Keyboard.computeNearestNeighbors()",1,7,8
"android.inputmethodservice.Keyboard.createKeyFromXml(Resources,Row,int,int,XmlResourceParser)",1,1,1
"android.inputmethodservice.Keyboard.createRowFromXml(Resources,XmlResourceParser)",1,1,1
"android.inputmethodservice.Keyboard.getDimensionOrFraction(TypedArray,int,int,int)",4,3,4
"android.inputmethodservice.Keyboard.getHeight()",1,1,1
"android.inputmethodservice.Keyboard.getHorizontalGap()",1,1,1
"android.inputmethodservice.Keyboard.getKeyHeight()",1,1,1
"android.inputmethodservice.Keyboard.getKeyWidth()",1,1,1
"android.inputmethodservice.Keyboard.getKeys()",1,1,1
"android.inputmethodservice.Keyboard.getMinWidth()",1,1,1
"android.inputmethodservice.Keyboard.getModifierKeys()",1,1,1
"android.inputmethodservice.Keyboard.getNearestKeys(int,int)",3,5,7
"android.inputmethodservice.Keyboard.getShiftKeyIndex()",1,1,1
"android.inputmethodservice.Keyboard.getVerticalGap()",1,1,1
"android.inputmethodservice.Keyboard.isShifted()",1,1,1
"android.inputmethodservice.Keyboard.loadKeyboard(Context,XmlResourceParser)",1,10,15
"android.inputmethodservice.Keyboard.parseKeyboardAttributes(Resources,XmlResourceParser)",1,1,1
"android.inputmethodservice.Keyboard.setHorizontalGap(int)",1,1,1
"android.inputmethodservice.Keyboard.setKeyHeight(int)",1,1,1
"android.inputmethodservice.Keyboard.setKeyWidth(int)",1,1,1
"android.inputmethodservice.Keyboard.setShifted(boolean)",2,1,3
"android.inputmethodservice.Keyboard.setVerticalGap(int)",1,1,1
"android.inputmethodservice.Keyboard.skipToEndOfRow(XmlResourceParser)",3,3,4
"android.inputmethodservice.KeyboardView.KeyboardView(Context,AttributeSet)",1,1,1
"android.inputmethodservice.KeyboardView.KeyboardView(Context,AttributeSet,int)",2,4,14
"android.inputmethodservice.KeyboardView.SwipeTracker.addMovement(MotionEvent)",1,2,2
"android.inputmethodservice.KeyboardView.SwipeTracker.addPoint(float,float,long)",3,2,9
"android.inputmethodservice.KeyboardView.SwipeTracker.clear()",1,1,1
"android.inputmethodservice.KeyboardView.SwipeTracker.computeCurrentVelocity(int)",1,1,1
"android.inputmethodservice.KeyboardView.SwipeTracker.computeCurrentVelocity(int,float)",5,3,9
"android.inputmethodservice.KeyboardView.SwipeTracker.getXVelocity()",1,1,1
"android.inputmethodservice.KeyboardView.SwipeTracker.getYVelocity()",1,1,1
"android.inputmethodservice.KeyboardView.adjustCase(CharSequence)",1,5,5
"android.inputmethodservice.KeyboardView.checkMultiTap(long,int)",4,2,7
"android.inputmethodservice.KeyboardView.closing()",1,2,2
"android.inputmethodservice.KeyboardView.computeProximityThreshold(Keyboard)",4,2,6
"android.inputmethodservice.KeyboardView.detectAndSendKey(int,int,int,long)",1,5,6
"android.inputmethodservice.KeyboardView.dismissPopupKeyboard()",1,2,2
"android.inputmethodservice.KeyboardView.getKeyIndices(int,int,int[])",6,8,13
"android.inputmethodservice.KeyboardView.getKeyboard()",1,1,1
"android.inputmethodservice.KeyboardView.getOnKeyboardActionListener()",1,1,1
"android.inputmethodservice.KeyboardView.getPreviewText(Key)",2,2,3
"android.inputmethodservice.KeyboardView.handleBack()",2,2,2
"android.inputmethodservice.KeyboardView.initGestureDetector()",10,10,23
"android.inputmethodservice.KeyboardView.invalidateAllKeys()",1,1,1
"android.inputmethodservice.KeyboardView.invalidateKey(int)",3,1,4
"android.inputmethodservice.KeyboardView.isPreviewEnabled()",1,1,1
"android.inputmethodservice.KeyboardView.isProximityCorrectionEnabled()",1,1,1
"android.inputmethodservice.KeyboardView.isShifted()",2,2,2
"android.inputmethodservice.KeyboardView.onBufferDraw()",4,16,27
"android.inputmethodservice.KeyboardView.onClick(View)",1,1,1
"android.inputmethodservice.KeyboardView.onDetachedFromWindow()",1,1,1
"android.inputmethodservice.KeyboardView.onDraw(Canvas)",1,2,4
"android.inputmethodservice.KeyboardView.onLongPress(Key)",2,6,7
"android.inputmethodservice.KeyboardView.onMeasure(int,int)",1,3,3
"android.inputmethodservice.KeyboardView.onModifiedTouchEvent(MotionEvent,boolean)",5,14,31
"android.inputmethodservice.KeyboardView.onSizeChanged(int,int,int,int)",1,1,1
"android.inputmethodservice.KeyboardView.onTouchEvent(MotionEvent)",1,5,5
"android.inputmethodservice.KeyboardView.openPopupIfRequired(MotionEvent)",3,2,5
"android.inputmethodservice.KeyboardView.removeMessages()",1,1,1
"android.inputmethodservice.KeyboardView.repeatKey()",1,1,1
"android.inputmethodservice.KeyboardView.resetMultiTap()",1,1,1
"android.inputmethodservice.KeyboardView.setKeyboard(Keyboard)",1,2,2
"android.inputmethodservice.KeyboardView.setOnKeyboardActionListener(OnKeyboardActionListener)",1,1,1
"android.inputmethodservice.KeyboardView.setPopupOffset(int,int)",1,2,2
"android.inputmethodservice.KeyboardView.setPopupParent(View)",1,1,1
"android.inputmethodservice.KeyboardView.setPreviewEnabled(boolean)",1,1,1
"android.inputmethodservice.KeyboardView.setProximityCorrectionEnabled(boolean)",1,1,1
"android.inputmethodservice.KeyboardView.setShifted(boolean)",3,3,3
"android.inputmethodservice.KeyboardView.setVerticalCorrection(int)",1,1,1
"android.inputmethodservice.KeyboardView.showKey(int)",2,8,14
"android.inputmethodservice.KeyboardView.showPreview(int)",1,10,13
"android.inputmethodservice.KeyboardView.swipeDown()",1,1,1
"android.inputmethodservice.KeyboardView.swipeLeft()",1,1,1
"android.inputmethodservice.KeyboardView.swipeRight()",1,1,1
"android.inputmethodservice.KeyboardView.swipeUp()",1,1,1
"android.inputmethodservice.SoftInputWindow.SoftInputWindow(Context,int,DispatcherState)",1,1,1
"android.inputmethodservice.SoftInputWindow.getSize()",2,1,3
"android.inputmethodservice.SoftInputWindow.initDockWindow()",1,1,1
"android.inputmethodservice.SoftInputWindow.onWindowFocusChanged(boolean)",1,1,1
"android.inputmethodservice.SoftInputWindow.setGravity(int)",1,2,4
"android.inputmethodservice.SoftInputWindow.setSize(int)",1,1,3
"android.inputmethodservice.SoftInputWindow.setToken(IBinder)",1,1,1
"android.net.ConnectivityManager.ConnectivityManager()",1,1,1
"android.net.ConnectivityManager.ConnectivityManager(IConnectivityManager)",2,1,2
"android.net.ConnectivityManager.getActiveLinkProperties()",1,1,2
"android.net.ConnectivityManager.getActiveNetworkInfo()",1,1,2
"android.net.ConnectivityManager.getAllNetworkInfo()",1,1,2
"android.net.ConnectivityManager.getBackgroundDataSetting()",1,1,2
"android.net.ConnectivityManager.getGlobalProxy()",1,1,2
"android.net.ConnectivityManager.getLastTetherError(String)",1,1,2
"android.net.ConnectivityManager.getLinkProperties(int)",1,1,2
"android.net.ConnectivityManager.getMobileDataEnabled()",1,1,2
"android.net.ConnectivityManager.getNetworkInfo(int)",1,1,2
"android.net.ConnectivityManager.getNetworkPreference()",1,1,2
"android.net.ConnectivityManager.getProxy()",1,1,2
"android.net.ConnectivityManager.getTetherableBluetoothRegexs()",1,1,2
"android.net.ConnectivityManager.getTetherableIfaces()",1,1,2
"android.net.ConnectivityManager.getTetherableUsbRegexs()",1,1,2
"android.net.ConnectivityManager.getTetherableWifiRegexs()",1,1,2
"android.net.ConnectivityManager.getTetheredIfaces()",1,1,2
"android.net.ConnectivityManager.getTetheringErroredIfaces()",1,1,2
"android.net.ConnectivityManager.isNetworkTypeValid(int)",1,1,2
"android.net.ConnectivityManager.isTetheringSupported()",1,1,2
"android.net.ConnectivityManager.reportInetCondition(int,int)",1,1,2
"android.net.ConnectivityManager.requestNetworkTransitionWakelock(String)",1,1,2
"android.net.ConnectivityManager.requestRouteToHost(int,int)",2,1,2
"android.net.ConnectivityManager.requestRouteToHostAddress(int,InetAddress)",1,1,2
"android.net.ConnectivityManager.setBackgroundDataSetting(boolean)",1,1,2
"android.net.ConnectivityManager.setGlobalProxy(ProxyProperties)",1,1,2
"android.net.ConnectivityManager.setMobileDataEnabled(boolean)",1,1,2
"android.net.ConnectivityManager.setNetworkPreference(int)",1,1,2
"android.net.ConnectivityManager.setRadio(int,boolean)",1,1,2
"android.net.ConnectivityManager.setRadios(boolean)",1,1,2
"android.net.ConnectivityManager.startUsingNetworkFeature(int,String)",1,1,2
"android.net.ConnectivityManager.stopUsingNetworkFeature(int,String)",1,1,2
"android.net.ConnectivityManager.tether(String)",1,1,2
"android.net.ConnectivityManager.untether(String)",1,1,2
"android.net.Credentials.Credentials(int,int,int)",1,1,1
"android.net.Credentials.getGid()",1,1,1
"android.net.Credentials.getPid()",1,1,1
"android.net.Credentials.getUid()",1,1,1
"android.net.DhcpInfo.DhcpInfo()",1,1,1
"android.net.DhcpInfo.DhcpInfo(DhcpInfo)",1,1,2
"android.net.DhcpInfo.describeContents()",1,1,1
"android.net.DhcpInfo.putAddress(StringBuffer,int)",1,1,1
"android.net.DhcpInfo.toString()",1,1,1
"android.net.DhcpInfo.writeToParcel(Parcel,int)",1,1,1
"android.net.Downloads.ById.ById()",1,1,1
"android.net.Downloads.ById.deleteDownload(Context,long)",1,1,1
"android.net.Downloads.ById.getDownloadUri(long)",1,1,1
"android.net.Downloads.ById.getMimeTypeForId(Context,long)",1,3,3
"android.net.Downloads.ById.getStatus(Context,long)",3,4,7
"android.net.Downloads.ById.openDownload(Context,long,String)",1,1,1
"android.net.Downloads.ById.openDownloadStream(Context,long)",1,1,1
"android.net.Downloads.ByUri.ByUri()",1,1,1
"android.net.Downloads.ByUri.getCurrentOtaDownloads(Context,String)",1,1,1
"android.net.Downloads.ByUri.getProgressColumnCurrentBytes()",1,1,1
"android.net.Downloads.ByUri.getProgressColumnId()",1,1,1
"android.net.Downloads.ByUri.getProgressColumnTotalBytes()",1,1,1
"android.net.Downloads.ByUri.getProgressCursor(Context,long)",1,1,1
"android.net.Downloads.ByUri.getStatus(Context,String,long)",4,5,9
"android.net.Downloads.ByUri.removeAllDownloadsByPackage(Context,String,String)",1,1,1
"android.net.Downloads.DownloadBase.DownloadBase()",1,1,1
"android.net.Downloads.DownloadBase.startDownloadByUri(Context,String,String,boolean,int,boolean,boolean,String,String,String,String)",2,6,11
"android.net.Downloads.Downloads()",1,1,1
"android.net.Downloads.StatusInfo.isComplete()",1,1,1
"android.net.Downloads.StatusInfo.isSuccessful()",1,1,1
"android.net.Downloads.getStatusOfDownload(Cursor,long)",5,2,6
"android.net.Downloads.isStatusError(int)",1,1,2
"android.net.Downloads.isStatusSuccess(int)",1,1,2
"android.net.DummyDataStateTracker.DummyDataStateTracker(int,String)",1,1,1
"android.net.DummyDataStateTracker.defaultRouteSet(boolean)",1,1,1
"android.net.DummyDataStateTracker.getDefaultGatewayAddr()",1,1,1
"android.net.DummyDataStateTracker.getDnsPropNames()",1,1,1
"android.net.DummyDataStateTracker.getLinkCapabilities()",1,1,1
"android.net.DummyDataStateTracker.getLinkProperties()",1,1,1
"android.net.DummyDataStateTracker.getNetworkInfo()",1,1,1
"android.net.DummyDataStateTracker.getTcpBufferSizesPropName()",1,1,1
"android.net.DummyDataStateTracker.isAvailable()",1,1,1
"android.net.DummyDataStateTracker.isDefaultRouteSet()",1,1,1
"android.net.DummyDataStateTracker.isPrivateDnsRouteSet()",1,1,1
"android.net.DummyDataStateTracker.isTeardownRequested()",1,1,1
"android.net.DummyDataStateTracker.log(String)",1,1,1
"android.net.DummyDataStateTracker.loge(String)",1,1,1
"android.net.DummyDataStateTracker.privateDnsRouteSet(boolean)",1,1,1
"android.net.DummyDataStateTracker.reconnect()",1,1,1
"android.net.DummyDataStateTracker.releaseWakeLock()",1,1,1
"android.net.DummyDataStateTracker.setDataEnable(boolean)",1,1,1
"android.net.DummyDataStateTracker.setDetailedState(DetailedState,String,String)",1,2,2
"android.net.DummyDataStateTracker.setRadio(boolean)",1,1,1
"android.net.DummyDataStateTracker.setTeardownRequested(boolean)",1,1,1
"android.net.DummyDataStateTracker.startMonitoring(Context,Handler)",1,1,1
"android.net.DummyDataStateTracker.startUsingNetworkFeature(String,int,int)",1,1,1
"android.net.DummyDataStateTracker.stopUsingNetworkFeature(String,int,int)",1,1,1
"android.net.DummyDataStateTracker.teardown()",1,1,1
"android.net.DummyDataStateTracker.toString()",1,1,1
"android.net.InterfaceConfiguration.InterfaceConfiguration()",1,1,1
"android.net.InterfaceConfiguration.describeContents()",1,1,1
"android.net.InterfaceConfiguration.toString()",1,1,1
"android.net.InterfaceConfiguration.writeToParcel(Parcel,int)",1,3,3
"android.net.LinkAddress.LinkAddress(InetAddress,InetAddress)",1,1,1
"android.net.LinkAddress.LinkAddress(InetAddress,int)",1,1,1
"android.net.LinkAddress.LinkAddress(InterfaceAddress)",1,1,1
"android.net.LinkAddress.computeprefixLength(InetAddress)",1,1,4
"android.net.LinkAddress.describeContents()",1,1,1
"android.net.LinkAddress.equals(Object)",2,2,3
"android.net.LinkAddress.getAddress()",1,1,1
"android.net.LinkAddress.getNetworkPrefixLength()",1,1,1
"android.net.LinkAddress.toString()",1,2,2
"android.net.LinkAddress.writeToParcel(Parcel,int)",1,2,2
"android.net.LinkCapabilities.Key.Key()",1,1,1
"android.net.LinkCapabilities.LinkCapabilities()",1,1,1
"android.net.LinkCapabilities.LinkCapabilities(LinkCapabilities)",1,1,2
"android.net.LinkCapabilities.Role.Role()",1,1,1
"android.net.LinkCapabilities.clear()",1,1,1
"android.net.LinkCapabilities.containsKey(int)",1,1,1
"android.net.LinkCapabilities.containsValue(String)",1,1,1
"android.net.LinkCapabilities.createNeedsMap(String)",1,2,2
"android.net.LinkCapabilities.describeContents()",1,1,1
"android.net.LinkCapabilities.entrySet()",1,1,1
"android.net.LinkCapabilities.get(int)",1,1,1
"android.net.LinkCapabilities.isEmpty()",1,1,1
"android.net.LinkCapabilities.keySet()",1,1,1
"android.net.LinkCapabilities.log(String)",1,1,1
"android.net.LinkCapabilities.put(int,String)",1,1,1
"android.net.LinkCapabilities.size()",1,1,1
"android.net.LinkCapabilities.toString()",2,3,3
"android.net.LinkCapabilities.values()",1,1,1
"android.net.LinkCapabilities.writeToParcel(Parcel,int)",1,2,2
"android.net.LinkProperties.LinkProperties()",1,1,1
"android.net.LinkProperties.LinkProperties(LinkProperties)",1,2,2
"android.net.LinkProperties.addDns(InetAddress)",1,1,1
"android.net.LinkProperties.addLinkAddress(LinkAddress)",1,1,1
"android.net.LinkProperties.clear()",1,1,1
"android.net.LinkProperties.describeContents()",1,1,1
"android.net.LinkProperties.getAddresses()",1,2,2
"android.net.LinkProperties.getDnses()",1,1,1
"android.net.LinkProperties.getGateway()",1,1,1
"android.net.LinkProperties.getHttpProxy()",1,1,1
"android.net.LinkProperties.getInterfaceName()",1,1,1
"android.net.LinkProperties.getLinkAddresses()",1,1,1
"android.net.LinkProperties.setGateway(InetAddress)",1,1,1
"android.net.LinkProperties.setHttpProxy(ProxyProperties)",1,1,1
"android.net.LinkProperties.setInterfaceName(String)",1,1,1
"android.net.LinkProperties.toString()",1,5,6
"android.net.LinkProperties.writeToParcel(Parcel,int)",1,5,5
"android.net.LinkSocket.LinkRequestReason.LinkRequestReason()",1,1,1
"android.net.LinkSocket.LinkSocket()",1,2,2
"android.net.LinkSocket.LinkSocket(LinkSocketNotifier)",1,2,2
"android.net.LinkSocket.LinkSocket(LinkSocketNotifier,Proxy)",1,2,2
"android.net.LinkSocket.bind(SocketAddress)",1,2,2
"android.net.LinkSocket.close()",1,2,2
"android.net.LinkSocket.connect()",1,2,2
"android.net.LinkSocket.connect(SocketAddress)",1,2,2
"android.net.LinkSocket.connect(SocketAddress,int)",1,2,2
"android.net.LinkSocket.connect(String,int)",1,2,2
"android.net.LinkSocket.connect(String,int,int)",1,2,2
"android.net.LinkSocket.connect(int)",1,2,2
"android.net.LinkSocket.getCapabilities()",1,2,2
"android.net.LinkSocket.getCapabilities(Set<Integer>)",1,2,2
"android.net.LinkSocket.getLinkProperties()",1,2,2
"android.net.LinkSocket.getNeededCapabilities()",1,2,2
"android.net.LinkSocket.getTrackedCapabilities()",1,2,2
"android.net.LinkSocket.log(String)",1,1,1
"android.net.LinkSocket.requestNewLink(LinkRequestReason)",1,2,2
"android.net.LinkSocket.setNeededCapabilities(LinkCapabilities)",1,2,2
"android.net.LinkSocket.setTrackedCapabilities(Set<Integer>)",1,2,2
"android.net.LocalServerSocket.LocalServerSocket(FileDescriptor)",1,1,1
"android.net.LocalServerSocket.LocalServerSocket(String)",1,1,1
"android.net.LocalServerSocket.accept()",1,1,1
"android.net.LocalServerSocket.close()",1,1,1
"android.net.LocalServerSocket.getFileDescriptor()",1,1,1
"android.net.LocalServerSocket.getLocalSocketAddress()",1,1,1
"android.net.LocalSocket.LocalSocket()",1,1,1
"android.net.LocalSocket.LocalSocket(LocalSocketImpl)",1,1,1
"android.net.LocalSocket.bind(LocalSocketAddress)",2,1,2
"android.net.LocalSocket.close()",1,1,1
"android.net.LocalSocket.connect(LocalSocketAddress)",2,1,2
"android.net.LocalSocket.connect(LocalSocketAddress,int)",1,1,1
"android.net.LocalSocket.getAncillaryFileDescriptors()",1,1,1
"android.net.LocalSocket.getFileDescriptor()",1,1,1
"android.net.LocalSocket.getInputStream()",1,1,1
"android.net.LocalSocket.getLocalSocketAddress()",1,1,1
"android.net.LocalSocket.getOutputStream()",1,1,1
"android.net.LocalSocket.getPeerCredentials()",1,1,1
"android.net.LocalSocket.getReceiveBufferSize()",1,1,1
"android.net.LocalSocket.getRemoteSocketAddress()",1,1,1
"android.net.LocalSocket.getSendBufferSize()",1,1,1
"android.net.LocalSocket.getSoTimeout()",1,1,1
"android.net.LocalSocket.implCreateIfNeeded()",1,3,3
"android.net.LocalSocket.isBound()",1,1,1
"android.net.LocalSocket.isClosed()",1,1,1
"android.net.LocalSocket.isConnected()",1,1,1
"android.net.LocalSocket.isInputShutdown()",1,1,1
"android.net.LocalSocket.isOutputShutdown()",1,1,1
"android.net.LocalSocket.setFileDescriptorsForSend(FileDescriptor[])",1,1,1
"android.net.LocalSocket.setReceiveBufferSize(int)",1,1,1
"android.net.LocalSocket.setSendBufferSize(int)",1,1,1
"android.net.LocalSocket.setSoTimeout(int)",1,1,1
"android.net.LocalSocket.shutdownInput()",1,1,1
"android.net.LocalSocket.shutdownOutput()",1,1,1
"android.net.LocalSocket.toString()",1,1,1
"android.net.LocalSocketAddress.LocalSocketAddress(String)",1,1,1
"android.net.LocalSocketAddress.LocalSocketAddress(String,Namespace)",1,1,1
"android.net.LocalSocketAddress.Namespace.Namespace(int)",1,1,1
"android.net.LocalSocketAddress.Namespace.getId()",1,1,1
"android.net.LocalSocketAddress.getName()",1,1,1
"android.net.LocalSocketAddress.getNamespace()",1,1,1
"android.net.LocalSocketImpl.LocalSocketImpl()",1,1,1
"android.net.LocalSocketImpl.LocalSocketImpl(FileDescriptor)",1,1,1
"android.net.LocalSocketImpl.SocketInputStream.available()",1,1,1
"android.net.LocalSocketImpl.SocketInputStream.close()",1,1,1
"android.net.LocalSocketImpl.SocketInputStream.read()",2,1,2
"android.net.LocalSocketImpl.SocketInputStream.read(byte[])",1,1,1
"android.net.LocalSocketImpl.SocketInputStream.read(byte[],int,int)",3,1,5
"android.net.LocalSocketImpl.SocketOutputStream.close()",1,1,1
"android.net.LocalSocketImpl.SocketOutputStream.write(byte[])",1,1,1
"android.net.LocalSocketImpl.SocketOutputStream.write(byte[],int,int)",3,1,5
"android.net.LocalSocketImpl.SocketOutputStream.write(int)",2,1,2
"android.net.LocalSocketImpl.accept(FileDescriptor,LocalSocketImpl)",1,1,1
"android.net.LocalSocketImpl.accept(LocalSocketImpl)",2,1,2
"android.net.LocalSocketImpl.available()",1,1,1
"android.net.LocalSocketImpl.available_native(FileDescriptor)",1,1,1
"android.net.LocalSocketImpl.bind(LocalSocketAddress)",2,1,2
"android.net.LocalSocketImpl.bindLocal(FileDescriptor,String,int)",1,1,1
"android.net.LocalSocketImpl.close()",2,1,2
"android.net.LocalSocketImpl.close_native(FileDescriptor)",1,1,1
"android.net.LocalSocketImpl.connect(LocalSocketAddress,int)",2,1,2
"android.net.LocalSocketImpl.connectLocal(FileDescriptor,String,int)",1,1,1
"android.net.LocalSocketImpl.create(boolean)",1,2,2
"android.net.LocalSocketImpl.create_native(boolean)",1,1,1
"android.net.LocalSocketImpl.finalize()",1,1,1
"android.net.LocalSocketImpl.getAncillaryFileDescriptors()",1,1,1
"android.net.LocalSocketImpl.getFileDescriptor()",1,1,1
"android.net.LocalSocketImpl.getInputStream()",2,1,3
"android.net.LocalSocketImpl.getOption(int)",5,2,5
"android.net.LocalSocketImpl.getOption_native(FileDescriptor,int)",1,1,1
"android.net.LocalSocketImpl.getOutputStream()",2,1,3
"android.net.LocalSocketImpl.getPeerCredentials()",1,1,1
"android.net.LocalSocketImpl.getPeerCredentials_native(FileDescriptor)",1,1,1
"android.net.LocalSocketImpl.getSockAddress()",1,1,1
"android.net.LocalSocketImpl.listen(int)",2,1,2
"android.net.LocalSocketImpl.listen_native(FileDescriptor,int)",1,1,1
"android.net.LocalSocketImpl.read_native(FileDescriptor)",1,1,1
"android.net.LocalSocketImpl.readba_native(byte[],int,int,FileDescriptor)",1,1,1
"android.net.LocalSocketImpl.sendUrgentData(int)",1,1,1
"android.net.LocalSocketImpl.setFileDescriptorsForSend(FileDescriptor[])",1,1,1
"android.net.LocalSocketImpl.setOption(int,Object)",4,1,5
"android.net.LocalSocketImpl.setOption_native(FileDescriptor,int,int,int)",1,1,1
"android.net.LocalSocketImpl.shutdown(FileDescriptor,boolean)",1,1,1
"android.net.LocalSocketImpl.shutdownInput()",2,1,2
"android.net.LocalSocketImpl.shutdownOutput()",2,1,2
"android.net.LocalSocketImpl.supportsUrgentData()",1,1,1
"android.net.LocalSocketImpl.toString()",1,1,1
"android.net.LocalSocketImpl.write_native(int,FileDescriptor)",1,1,1
"android.net.LocalSocketImpl.writeba_native(byte[],int,int,FileDescriptor)",1,1,1
"android.net.MailTo.MailTo()",1,1,1
"android.net.MailTo.getBody()",1,1,1
"android.net.MailTo.getCc()",1,1,1
"android.net.MailTo.getHeaders()",1,1,1
"android.net.MailTo.getSubject()",1,1,1
"android.net.MailTo.getTo()",1,1,1
"android.net.MailTo.isMailTo(String)",2,2,3
"android.net.MailTo.parse(String)",6,5,9
"android.net.MailTo.toString()",1,2,2
"android.net.MobileDataStateTracker.MdstHandler.MdstHandler(Looper,MobileDataStateTracker)",1,1,1
"android.net.MobileDataStateTracker.MdstHandler.handleMessage(Message)",2,5,7
"android.net.MobileDataStateTracker.MobileDataStateReceiver.onReceive(Context,Intent)",6,22,32
"android.net.MobileDataStateTracker.MobileDataStateTracker(int,String)",1,1,3
"android.net.MobileDataStateTracker.defaultRouteSet(boolean)",1,1,1
"android.net.MobileDataStateTracker.getDefaultGatewayAddr()",1,1,1
"android.net.MobileDataStateTracker.getDnsPropNames()",1,1,1
"android.net.MobileDataStateTracker.getLinkCapabilities()",1,1,1
"android.net.MobileDataStateTracker.getLinkProperties()",1,1,1
"android.net.MobileDataStateTracker.getNetworkInfo()",1,1,1
"android.net.MobileDataStateTracker.getPhoneService(boolean)",1,2,3
"android.net.MobileDataStateTracker.getTcpBufferSizesPropName()",2,2,16
"android.net.MobileDataStateTracker.isAvailable()",1,1,1
"android.net.MobileDataStateTracker.isDefaultRouteSet()",1,1,1
"android.net.MobileDataStateTracker.isPrivateDnsRouteSet()",1,1,1
"android.net.MobileDataStateTracker.isTeardownRequested()",1,1,1
"android.net.MobileDataStateTracker.log(String)",1,1,1
"android.net.MobileDataStateTracker.loge(String)",1,1,1
"android.net.MobileDataStateTracker.networkTypeToApnType(int)",7,2,7
"android.net.MobileDataStateTracker.privateDnsRouteSet(boolean)",1,1,1
"android.net.MobileDataStateTracker.reconnect()",2,2,5
"android.net.MobileDataStateTracker.releaseWakeLock()",1,1,1
"android.net.MobileDataStateTracker.setDataEnable(boolean)",1,2,3
"android.net.MobileDataStateTracker.setDetailedState(DetailedState,String,String)",1,3,7
"android.net.MobileDataStateTracker.setEnableApn(String,boolean)",4,6,7
"android.net.MobileDataStateTracker.setRadio(boolean)",3,5,6
"android.net.MobileDataStateTracker.setTeardownRequested(boolean)",1,1,1
"android.net.MobileDataStateTracker.sloge(String)",1,1,1
"android.net.MobileDataStateTracker.startMonitoring(Context,Handler)",1,1,1
"android.net.MobileDataStateTracker.startUsingNetworkFeature(String,int,int)",1,1,1
"android.net.MobileDataStateTracker.stopUsingNetworkFeature(String,int,int)",1,1,1
"android.net.MobileDataStateTracker.teardown()",1,1,1
"android.net.MobileDataStateTracker.toString()",1,1,1
"android.net.NetworkInfo.NetworkInfo(int)",1,1,1
"android.net.NetworkInfo.NetworkInfo(int,int,String,String)",2,1,2
"android.net.NetworkInfo.describeContents()",1,1,1
"android.net.NetworkInfo.getDetailedState()",1,1,1
"android.net.NetworkInfo.getExtraInfo()",1,1,1
"android.net.NetworkInfo.getReason()",1,1,1
"android.net.NetworkInfo.getState()",1,1,1
"android.net.NetworkInfo.getSubtype()",1,1,1
"android.net.NetworkInfo.getSubtypeName()",1,1,1
"android.net.NetworkInfo.getType()",1,1,1
"android.net.NetworkInfo.getTypeName()",1,1,1
"android.net.NetworkInfo.isAvailable()",1,1,1
"android.net.NetworkInfo.isConnected()",1,1,1
"android.net.NetworkInfo.isConnectedOrConnecting()",1,1,2
"android.net.NetworkInfo.isFailover()",1,1,1
"android.net.NetworkInfo.isRoaming()",1,1,1
"android.net.NetworkInfo.setDetailedState(DetailedState,String,String)",1,1,1
"android.net.NetworkInfo.setFailover(boolean)",1,1,1
"android.net.NetworkInfo.setIsAvailable(boolean)",1,1,1
"android.net.NetworkInfo.setRoaming(boolean)",1,1,1
"android.net.NetworkInfo.setSubtype(int,String)",1,1,1
"android.net.NetworkInfo.toString()",1,1,3
"android.net.NetworkInfo.writeToParcel(Parcel,int)",1,1,4
"android.net.NetworkUtils.addDefaultRoute(String,InetAddress)",3,3,3
"android.net.NetworkUtils.addHostRoute(String,InetAddress,InetAddress)",4,5,5
"android.net.NetworkUtils.addRoute(String,String,int,String)",1,1,1
"android.net.NetworkUtils.configureInterface(String,DhcpInfo)",1,1,1
"android.net.NetworkUtils.configureNative(String,int,int,int,int,int)",1,1,1
"android.net.NetworkUtils.disableInterface(String)",1,1,1
"android.net.NetworkUtils.enableInterface(String)",1,1,1
"android.net.NetworkUtils.getDefaultRoute(String)",1,1,1
"android.net.NetworkUtils.getDefaultRouteNative(String)",1,1,1
"android.net.NetworkUtils.getDhcpError()",1,1,1
"android.net.NetworkUtils.inetAddressToInt(InetAddress)",2,1,2
"android.net.NetworkUtils.intToInetAddress(int)",1,1,2
"android.net.NetworkUtils.prefixLengthToNetmaskInt(int)",2,1,3
"android.net.NetworkUtils.releaseDhcpLease(String)",1,1,1
"android.net.NetworkUtils.removeDefaultRoute(String)",1,1,1
"android.net.NetworkUtils.removeHostRoutes(String)",1,1,1
"android.net.NetworkUtils.resetConnections(String)",1,1,1
"android.net.NetworkUtils.runDhcp(String,DhcpInfo)",1,1,1
"android.net.NetworkUtils.stopDhcp(String)",1,1,1
"android.net.ParseException.ParseException(String)",1,1,1
"android.net.Proxy.AndroidProxySelectorRoutePlanner.AndroidProxySelectorRoutePlanner(SchemeRegistry,ProxySelector,Context)",1,1,1
"android.net.Proxy.AndroidProxySelectorRoutePlanner.chooseProxy(List<Proxy>,HttpHost,HttpRequest,HttpContext)",1,1,1
"android.net.Proxy.AndroidProxySelectorRoutePlanner.determineProxy(HttpHost,HttpRequest,HttpContext)",1,1,1
"android.net.Proxy.AndroidProxySelectorRoutePlanner.determineRoute(HttpHost,HttpRequest,HttpContext)",2,1,2
"android.net.Proxy.getAndroidProxySelectorRoutePlanner(Context)",1,1,1
"android.net.Proxy.getDefaultHost()",2,1,2
"android.net.Proxy.getDefaultPort()",2,1,3
"android.net.Proxy.getHost(Context)",2,1,3
"android.net.Proxy.getPort(Context)",2,1,3
"android.net.Proxy.getPreferredHttpHost(Context,String)",2,2,2
"android.net.Proxy.getProxy(Context,String)",5,6,7
"android.net.Proxy.isLocalHost(String)",6,3,8
"android.net.Proxy.setHttpProxySystemProperty(ProxyProperties)",1,2,2
"android.net.Proxy.setHttpProxySystemProperty(String,String,String)",1,6,6
"android.net.Proxy.validate(String,String,String)",7,3,10
"android.net.ProxyProperties.ProxyProperties(ProxyProperties)",1,2,2
"android.net.ProxyProperties.ProxyProperties(String,int,String)",1,1,1
"android.net.ProxyProperties.ProxyProperties(String,int,String,String[])",1,1,1
"android.net.ProxyProperties.describeContents()",1,1,1
"android.net.ProxyProperties.equals(Object)",7,4,12
"android.net.ProxyProperties.getExclusionList()",1,1,1
"android.net.ProxyProperties.getHost()",1,1,1
"android.net.ProxyProperties.getPort()",1,1,1
"android.net.ProxyProperties.getSocketAddress()",1,1,2
"android.net.ProxyProperties.isExcluded(String)",5,5,8
"android.net.ProxyProperties.makeProxy()",1,1,3
"android.net.ProxyProperties.setExclusionList(String)",1,4,4
"android.net.ProxyProperties.toString()",1,3,3
"android.net.ProxyProperties.writeToParcel(Parcel,int)",1,2,2
"android.net.SSLCertificateSocketFactory.SSLCertificateSocketFactory(int)",1,1,1
"android.net.SSLCertificateSocketFactory.SSLCertificateSocketFactory(int,SSLSessionCache,boolean)",1,1,2
"android.net.SSLCertificateSocketFactory.createSocket()",1,1,1
"android.net.SSLCertificateSocketFactory.createSocket(InetAddress,int)",1,1,1
"android.net.SSLCertificateSocketFactory.createSocket(InetAddress,int,InetAddress,int)",1,1,1
"android.net.SSLCertificateSocketFactory.createSocket(Socket,String,int,boolean)",1,2,2
"android.net.SSLCertificateSocketFactory.createSocket(String,int)",1,2,2
"android.net.SSLCertificateSocketFactory.createSocket(String,int,InetAddress,int)",1,2,2
"android.net.SSLCertificateSocketFactory.getDefault(int)",1,1,1
"android.net.SSLCertificateSocketFactory.getDefault(int,SSLSessionCache)",1,1,1
"android.net.SSLCertificateSocketFactory.getDefaultCipherSuites()",1,1,1
"android.net.SSLCertificateSocketFactory.getDelegate()",2,6,6
"android.net.SSLCertificateSocketFactory.getHttpSocketFactory(int,SSLSessionCache)",1,1,1
"android.net.SSLCertificateSocketFactory.getInsecure(int,SSLSessionCache)",1,1,1
"android.net.SSLCertificateSocketFactory.getSupportedCipherSuites()",1,1,1
"android.net.SSLCertificateSocketFactory.isSslCheckRelaxed()",1,2,2
"android.net.SSLCertificateSocketFactory.makeSocketFactory(TrustManager[])",1,2,2
"android.net.SSLCertificateSocketFactory.verifyHostname(Socket,String)",5,2,5
"android.net.SSLSessionCache.SSLSessionCache(Context)",1,2,2
"android.net.SSLSessionCache.SSLSessionCache(File)",1,1,1
"android.net.SntpClient.getNtpTime()",1,1,1
"android.net.SntpClient.getNtpTimeReference()",1,1,1
"android.net.SntpClient.getRoundTripTime()",1,1,1
"android.net.SntpClient.read32(byte[],int)",1,1,5
"android.net.SntpClient.readTimeStamp(byte[],int)",1,1,1
"android.net.SntpClient.requestTime(String,int)",1,4,4
"android.net.SntpClient.writeTimeStamp(byte[],int,long)",1,1,1
"android.net.ThrottleManager.ThrottleManager()",1,1,1
"android.net.ThrottleManager.ThrottleManager(IThrottleManager)",2,1,2
"android.net.ThrottleManager.getByteCount(String,int,int,int)",1,1,2
"android.net.ThrottleManager.getCliffLevel(String,int)",1,1,2
"android.net.ThrottleManager.getCliffThreshold(String,int)",1,1,2
"android.net.ThrottleManager.getHelpUri()",1,1,2
"android.net.ThrottleManager.getPeriodStartTime(String)",1,1,2
"android.net.ThrottleManager.getResetTime(String)",1,1,2
"android.net.TrafficStats.getMobileRxBytes()",1,1,1
"android.net.TrafficStats.getMobileRxPackets()",1,1,1
"android.net.TrafficStats.getMobileTxBytes()",1,1,1
"android.net.TrafficStats.getMobileTxPackets()",1,1,1
"android.net.TrafficStats.getTotalRxBytes()",1,1,1
"android.net.TrafficStats.getTotalRxPackets()",1,1,1
"android.net.TrafficStats.getTotalTxBytes()",1,1,1
"android.net.TrafficStats.getTotalTxPackets()",1,1,1
"android.net.TrafficStats.getUidRxBytes(int)",1,1,1
"android.net.TrafficStats.getUidTxBytes(int)",1,1,1
"android.net.Uri.AbstractHierarchicalUri.getEncodedUserInfo()",1,1,1
"android.net.Uri.AbstractHierarchicalUri.getHost()",1,2,2
"android.net.Uri.AbstractHierarchicalUri.getLastPathSegment()",2,1,2
"android.net.Uri.AbstractHierarchicalUri.getPort()",1,2,2
"android.net.Uri.AbstractHierarchicalUri.getUserInfo()",1,1,1
"android.net.Uri.AbstractHierarchicalUri.getUserInfoPart()",1,2,2
"android.net.Uri.AbstractHierarchicalUri.parseHost()",2,2,3
"android.net.Uri.AbstractHierarchicalUri.parsePort()",3,2,4
"android.net.Uri.AbstractHierarchicalUri.parseUserInfo()",2,2,3
"android.net.Uri.AbstractPart.AbstractPart(String,String)",1,1,1
"android.net.Uri.AbstractPart.getDecoded()",1,2,2
"android.net.Uri.AbstractPart.writeTo(Parcel)",4,4,5
"android.net.Uri.Builder.Builder()",1,1,1
"android.net.Uri.Builder.appendEncodedPath(String)",1,1,1
"android.net.Uri.Builder.appendPath(String)",1,1,1
"android.net.Uri.Builder.appendQueryParameter(String,String)",2,4,4
"android.net.Uri.Builder.authority(Part)",1,1,1
"android.net.Uri.Builder.authority(String)",1,1,1
"android.net.Uri.Builder.build()",3,4,6
"android.net.Uri.Builder.clearQuery()",1,1,1
"android.net.Uri.Builder.encodedAuthority(String)",1,1,1
"android.net.Uri.Builder.encodedFragment(String)",1,1,1
"android.net.Uri.Builder.encodedOpaquePart(String)",1,1,1
"android.net.Uri.Builder.encodedPath(String)",1,1,1
"android.net.Uri.Builder.encodedQuery(String)",1,1,1
"android.net.Uri.Builder.fragment(Part)",1,1,1
"android.net.Uri.Builder.fragment(String)",1,1,1
"android.net.Uri.Builder.hasSchemeOrAuthority()",1,1,3
"android.net.Uri.Builder.opaquePart(Part)",1,1,1
"android.net.Uri.Builder.opaquePart(String)",1,1,1
"android.net.Uri.Builder.path(PathPart)",1,1,1
"android.net.Uri.Builder.path(String)",1,1,1
"android.net.Uri.Builder.query(Part)",1,1,1
"android.net.Uri.Builder.query(String)",1,1,1
"android.net.Uri.Builder.scheme(String)",1,1,1
"android.net.Uri.Builder.toString()",1,1,1
"android.net.Uri.HierarchicalUri.HierarchicalUri(String,Part,PathPart,Part,Part)",1,1,2
"android.net.Uri.HierarchicalUri.appendSspTo(StringBuilder)",1,4,4
"android.net.Uri.HierarchicalUri.buildUpon()",1,1,1
"android.net.Uri.HierarchicalUri.describeContents()",1,1,1
"android.net.Uri.HierarchicalUri.getAuthority()",1,1,1
"android.net.Uri.HierarchicalUri.getEncodedAuthority()",1,1,1
"android.net.Uri.HierarchicalUri.getEncodedFragment()",1,1,1
"android.net.Uri.HierarchicalUri.getEncodedPath()",1,1,1
"android.net.Uri.HierarchicalUri.getEncodedQuery()",1,1,1
"android.net.Uri.HierarchicalUri.getEncodedSchemeSpecificPart()",1,1,1
"android.net.Uri.HierarchicalUri.getFragment()",1,1,1
"android.net.Uri.HierarchicalUri.getPath()",1,1,1
"android.net.Uri.HierarchicalUri.getPathSegments()",1,1,1
"android.net.Uri.HierarchicalUri.getQuery()",1,1,1
"android.net.Uri.HierarchicalUri.getScheme()",1,1,1
"android.net.Uri.HierarchicalUri.getSchemeSpecificPart()",1,1,1
"android.net.Uri.HierarchicalUri.getSsp()",1,2,2
"android.net.Uri.HierarchicalUri.isHierarchical()",1,1,1
"android.net.Uri.HierarchicalUri.isRelative()",1,1,1
"android.net.Uri.HierarchicalUri.makeSchemeSpecificPart()",1,1,1
"android.net.Uri.HierarchicalUri.makeUriString()",1,3,3
"android.net.Uri.HierarchicalUri.readFrom(Parcel)",1,1,1
"android.net.Uri.HierarchicalUri.toString()",1,2,2
"android.net.Uri.HierarchicalUri.writeToParcel(Parcel,int)",1,1,1
"android.net.Uri.OpaqueUri.OpaqueUri(String,Part,Part)",1,1,2
"android.net.Uri.OpaqueUri.buildUpon()",1,1,1
"android.net.Uri.OpaqueUri.describeContents()",1,1,1
"android.net.Uri.OpaqueUri.getAuthority()",1,1,1
"android.net.Uri.OpaqueUri.getEncodedAuthority()",1,1,1
"android.net.Uri.OpaqueUri.getEncodedFragment()",1,1,1
"android.net.Uri.OpaqueUri.getEncodedPath()",1,1,1
"android.net.Uri.OpaqueUri.getEncodedQuery()",1,1,1
"android.net.Uri.OpaqueUri.getEncodedSchemeSpecificPart()",1,1,1
"android.net.Uri.OpaqueUri.getEncodedUserInfo()",1,1,1
"android.net.Uri.OpaqueUri.getFragment()",1,1,1
"android.net.Uri.OpaqueUri.getHost()",1,1,1
"android.net.Uri.OpaqueUri.getLastPathSegment()",1,1,1
"android.net.Uri.OpaqueUri.getPath()",1,1,1
"android.net.Uri.OpaqueUri.getPathSegments()",1,1,1
"android.net.Uri.OpaqueUri.getPort()",1,1,1
"android.net.Uri.OpaqueUri.getQuery()",1,1,1
"android.net.Uri.OpaqueUri.getScheme()",1,1,1
"android.net.Uri.OpaqueUri.getSchemeSpecificPart()",1,1,1
"android.net.Uri.OpaqueUri.getUserInfo()",1,1,1
"android.net.Uri.OpaqueUri.isHierarchical()",1,1,1
"android.net.Uri.OpaqueUri.isRelative()",1,1,1
"android.net.Uri.OpaqueUri.readFrom(Parcel)",1,1,1
"android.net.Uri.OpaqueUri.toString()",2,2,3
"android.net.Uri.OpaqueUri.writeToParcel(Parcel,int)",1,1,1
"android.net.Uri.Part.EmptyPart.EmptyPart(String)",1,1,1
"android.net.Uri.Part.EmptyPart.isEmpty()",1,1,1
"android.net.Uri.Part.Part(String,String)",1,1,1
"android.net.Uri.Part.from(String,String)",5,1,5
"android.net.Uri.Part.fromDecoded(String)",1,1,1
"android.net.Uri.Part.fromEncoded(String)",1,1,1
"android.net.Uri.Part.getEncoded()",1,2,2
"android.net.Uri.Part.isEmpty()",1,1,1
"android.net.Uri.Part.nonNull(Part)",1,1,2
"android.net.Uri.Part.readFrom(Parcel)",5,5,5
"android.net.Uri.PathPart.PathPart(String,String)",1,1,1
"android.net.Uri.PathPart.appendDecodedSegment(PathPart,String)",1,1,1
"android.net.Uri.PathPart.appendEncodedSegment(PathPart,String)",2,3,5
"android.net.Uri.PathPart.from(String,String)",3,1,3
"android.net.Uri.PathPart.fromDecoded(String)",1,1,1
"android.net.Uri.PathPart.fromEncoded(String)",1,1,1
"android.net.Uri.PathPart.getEncoded()",1,2,2
"android.net.Uri.PathPart.getPathSegments()",3,4,6
"android.net.Uri.PathPart.makeAbsolute(PathPart)",2,3,7
"android.net.Uri.PathPart.readFrom(Parcel)",5,5,5
"android.net.Uri.PathSegments.PathSegments(String[],int)",1,1,1
"android.net.Uri.PathSegments.get(int)",2,1,2
"android.net.Uri.PathSegments.size()",1,1,1
"android.net.Uri.PathSegmentsBuilder.add(String)",1,3,3
"android.net.Uri.PathSegmentsBuilder.build()",2,1,2
"android.net.Uri.StringUri.StringUri(String)",2,1,2
"android.net.Uri.StringUri.buildUpon()",2,2,2
"android.net.Uri.StringUri.describeContents()",1,1,1
"android.net.Uri.StringUri.findFragmentSeparator()",1,2,2
"android.net.Uri.StringUri.findSchemeSeparator()",1,2,2
"android.net.Uri.StringUri.getAuthority()",1,1,1
"android.net.Uri.StringUri.getAuthorityPart()",2,2,2
"android.net.Uri.StringUri.getEncodedAuthority()",1,1,1
"android.net.Uri.StringUri.getEncodedFragment()",1,1,1
"android.net.Uri.StringUri.getEncodedPath()",1,1,1
"android.net.Uri.StringUri.getEncodedQuery()",1,1,1
"android.net.Uri.StringUri.getEncodedSchemeSpecificPart()",1,1,1
"android.net.Uri.StringUri.getFragment()",1,1,1
"android.net.Uri.StringUri.getFragmentPart()",1,2,2
"android.net.Uri.StringUri.getPath()",1,1,1
"android.net.Uri.StringUri.getPathPart()",1,2,2
"android.net.Uri.StringUri.getPathSegments()",1,1,1
"android.net.Uri.StringUri.getQuery()",1,1,1
"android.net.Uri.StringUri.getQueryPart()",1,2,2
"android.net.Uri.StringUri.getScheme()",1,2,2
"android.net.Uri.StringUri.getSchemeSpecificPart()",1,1,1
"android.net.Uri.StringUri.getSsp()",1,2,2
"android.net.Uri.StringUri.isHierarchical()",3,1,3
"android.net.Uri.StringUri.isRelative()",1,1,1
"android.net.Uri.StringUri.parseAuthority(String,int)",4,6,6
"android.net.Uri.StringUri.parseFragment()",1,2,2
"android.net.Uri.StringUri.parsePath()",4,2,4
"android.net.Uri.StringUri.parsePath(String,int)",6,8,9
"android.net.Uri.StringUri.parseQuery()",4,2,4
"android.net.Uri.StringUri.parseScheme()",1,2,2
"android.net.Uri.StringUri.parseSsp()",1,2,2
"android.net.Uri.StringUri.readFrom(Parcel)",1,1,1
"android.net.Uri.StringUri.toString()",1,1,1
"android.net.Uri.StringUri.writeToParcel(Parcel,int)",1,1,1
"android.net.Uri.Uri()",1,1,1
"android.net.Uri.compareTo(Uri)",1,1,1
"android.net.Uri.decode(String)",5,11,15
"android.net.Uri.encode(String)",1,1,1
"android.net.Uri.encode(String,String)",5,9,14
"android.net.Uri.equals(Object)",2,1,2
"android.net.Uri.fromFile(File)",2,1,2
"android.net.Uri.fromParts(String,String,String)",3,1,3
"android.net.Uri.getBooleanQueryParameter(String,boolean)",2,2,3
"android.net.Uri.getQueryParameter(String)",8,5,12
"android.net.Uri.getQueryParameterNames()",3,4,7
"android.net.Uri.getQueryParameters(String)",6,7,13
"android.net.Uri.hashCode()",1,1,1
"android.net.Uri.isAbsolute()",1,1,1
"android.net.Uri.isAllowed(char,String)",1,6,9
"android.net.Uri.isOpaque()",1,1,1
"android.net.Uri.parse(String)",1,1,1
"android.net.Uri.withAppendedPath(Uri,String)",1,1,1
"android.net.Uri.writeToParcel(Parcel,Uri)",1,2,2
"android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.IllegalCharacterValueSanitizer(int)",1,1,1
"android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.characterIsLegal(char)",11,2,14
"android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.isWhitespace(char)",3,2,3
"android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.sanitize(String)",5,6,10
"android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer.trimWhitespace(String)",2,3,7
"android.net.UrlQuerySanitizer.ParameterValuePair.ParameterValuePair(String,String)",1,1,1
"android.net.UrlQuerySanitizer.UrlQuerySanitizer()",1,1,1
"android.net.UrlQuerySanitizer.UrlQuerySanitizer(String)",1,1,1
"android.net.UrlQuerySanitizer.addSanitizedEntry(String,String)",3,2,3
"android.net.UrlQuerySanitizer.clear()",1,1,1
"android.net.UrlQuerySanitizer.decodeHexDigit(char)",4,1,7
"android.net.UrlQuerySanitizer.getAllButNulAndAngleBracketsLegal()",1,1,1
"android.net.UrlQuerySanitizer.getAllButNulLegal()",1,1,1
"android.net.UrlQuerySanitizer.getAllButWhitespaceLegal()",1,1,1
"android.net.UrlQuerySanitizer.getAllIllegal()",1,1,1
"android.net.UrlQuerySanitizer.getAllowUnregisteredParamaters()",1,1,1
"android.net.UrlQuerySanitizer.getAmpAndSpaceLegal()",1,1,1
"android.net.UrlQuerySanitizer.getAmpLegal()",1,1,1
"android.net.UrlQuerySanitizer.getEffectiveValueSanitizer(String)",1,2,3
"android.net.UrlQuerySanitizer.getParameterList()",1,1,1
"android.net.UrlQuerySanitizer.getParameterSet()",1,1,1
"android.net.UrlQuerySanitizer.getPreferFirstRepeatedParameter()",1,1,1
"android.net.UrlQuerySanitizer.getSpaceLegal()",1,1,1
"android.net.UrlQuerySanitizer.getUnregisteredParameterValueSanitizer()",1,1,1
"android.net.UrlQuerySanitizer.getUrlAndSpaceLegal()",1,1,1
"android.net.UrlQuerySanitizer.getUrlLegal()",1,1,1
"android.net.UrlQuerySanitizer.getValue(String)",1,1,1
"android.net.UrlQuerySanitizer.getValueSanitizer(String)",1,1,1
"android.net.UrlQuerySanitizer.hasParameter(String)",1,1,1
"android.net.UrlQuerySanitizer.isHexDigit(char)",1,1,1
"android.net.UrlQuerySanitizer.parseEntry(String,String)",2,1,2
"android.net.UrlQuerySanitizer.parseQuery(String)",1,4,4
"android.net.UrlQuerySanitizer.parseUrl(String)",1,2,2
"android.net.UrlQuerySanitizer.registerParameter(String,ValueSanitizer)",1,2,2
"android.net.UrlQuerySanitizer.registerParameters(String[],ValueSanitizer)",1,2,2
"android.net.UrlQuerySanitizer.setAllowUnregisteredParamaters(boolean)",1,1,1
"android.net.UrlQuerySanitizer.setPreferFirstRepeatedParameter(boolean)",1,1,1
"android.net.UrlQuerySanitizer.setUnregisteredParameterValueSanitizer(ValueSanitizer)",1,1,1
"android.net.UrlQuerySanitizer.unescape(String)",3,7,9
"android.net.WebAddress.WebAddress(String)",4,10,17
"android.net.WebAddress.getAuthInfo()",1,1,1
"android.net.WebAddress.getHost()",1,1,1
"android.net.WebAddress.getPath()",1,1,1
"android.net.WebAddress.getPort()",1,1,1
"android.net.WebAddress.getScheme()",1,1,1
"android.net.WebAddress.setAuthInfo(String)",1,1,1
"android.net.WebAddress.setHost(String)",1,1,1
"android.net.WebAddress.setPath(String)",1,1,1
"android.net.WebAddress.setPort(int)",1,1,1
"android.net.WebAddress.setScheme(String)",1,1,1
"android.net.WebAddress.toString()",1,5,6
"android.net.dhcp.DhcpAckPacket.DhcpAckPacket(int,boolean,InetAddress,InetAddress,byte[])",1,1,1
"android.net.dhcp.DhcpAckPacket.buildPacket(int,short,short)",1,1,3
"android.net.dhcp.DhcpAckPacket.doNextOp(DhcpStateMachine)",1,1,1
"android.net.dhcp.DhcpAckPacket.finishPacket(ByteBuffer)",1,2,2
"android.net.dhcp.DhcpAckPacket.getInt(Integer)",2,2,2
"android.net.dhcp.DhcpAckPacket.toString()",1,2,2
"android.net.dhcp.DhcpDeclinePacket.DhcpDeclinePacket(int,InetAddress,InetAddress,InetAddress,InetAddress,byte[])",1,1,1
"android.net.dhcp.DhcpDeclinePacket.buildPacket(int,short,short)",1,1,1
"android.net.dhcp.DhcpDeclinePacket.doNextOp(DhcpStateMachine)",1,1,1
"android.net.dhcp.DhcpDeclinePacket.finishPacket(ByteBuffer)",1,1,1
"android.net.dhcp.DhcpDeclinePacket.toString()",1,1,1
"android.net.dhcp.DhcpDiscoverPacket.DhcpDiscoverPacket(int,byte[],boolean)",1,1,1
"android.net.dhcp.DhcpDiscoverPacket.buildPacket(int,short,short)",1,1,1
"android.net.dhcp.DhcpDiscoverPacket.doNextOp(DhcpStateMachine)",1,1,1
"android.net.dhcp.DhcpDiscoverPacket.finishPacket(ByteBuffer)",1,1,1
"android.net.dhcp.DhcpDiscoverPacket.toString()",1,1,2
"android.net.dhcp.DhcpInformPacket.DhcpInformPacket(int,InetAddress,InetAddress,InetAddress,InetAddress,byte[])",1,1,1
"android.net.dhcp.DhcpInformPacket.buildPacket(int,short,short)",1,1,1
"android.net.dhcp.DhcpInformPacket.doNextOp(DhcpStateMachine)",1,1,2
"android.net.dhcp.DhcpInformPacket.finishPacket(ByteBuffer)",1,1,1
"android.net.dhcp.DhcpInformPacket.toString()",1,1,1
"android.net.dhcp.DhcpNakPacket.DhcpNakPacket(int,InetAddress,InetAddress,InetAddress,InetAddress,byte[])",1,1,1
"android.net.dhcp.DhcpNakPacket.buildPacket(int,short,short)",1,1,1
"android.net.dhcp.DhcpNakPacket.doNextOp(DhcpStateMachine)",1,1,1
"android.net.dhcp.DhcpNakPacket.finishPacket(ByteBuffer)",1,1,1
"android.net.dhcp.DhcpNakPacket.toString()",1,1,2
"android.net.dhcp.DhcpOfferPacket.DhcpOfferPacket(int,boolean,InetAddress,InetAddress,byte[])",1,1,1
"android.net.dhcp.DhcpOfferPacket.buildPacket(int,short,short)",1,1,3
"android.net.dhcp.DhcpOfferPacket.doNextOp(DhcpStateMachine)",1,1,1
"android.net.dhcp.DhcpOfferPacket.finishPacket(ByteBuffer)",1,2,2
"android.net.dhcp.DhcpOfferPacket.toString()",1,1,3
"android.net.dhcp.DhcpPacket.DhcpPacket(int,InetAddress,InetAddress,InetAddress,InetAddress,byte[],boolean)",1,1,1
"android.net.dhcp.DhcpPacket.addTlv(ByteBuffer,byte,InetAddress)",1,2,2
"android.net.dhcp.DhcpPacket.addTlv(ByteBuffer,byte,Integer)",1,2,2
"android.net.dhcp.DhcpPacket.addTlv(ByteBuffer,byte,List<InetAddress>)",1,4,4
"android.net.dhcp.DhcpPacket.addTlv(ByteBuffer,byte,String)",1,3,3
"android.net.dhcp.DhcpPacket.addTlv(ByteBuffer,byte,byte)",1,1,1
"android.net.dhcp.DhcpPacket.addTlv(ByteBuffer,byte,byte[])",1,2,2
"android.net.dhcp.DhcpPacket.addTlvEnd(ByteBuffer)",1,1,1
"android.net.dhcp.DhcpPacket.buildAckPacket(int,int,boolean,InetAddress,InetAddress,byte[],Integer,InetAddress,InetAddress,InetAddress,List<InetAddress>,InetAddress,String)",1,1,1
"android.net.dhcp.DhcpPacket.buildDiscoverPacket(int,int,byte[],boolean,byte[])",1,1,1
"android.net.dhcp.DhcpPacket.buildNakPacket(int,int,InetAddress,InetAddress,byte[])",1,1,1
"android.net.dhcp.DhcpPacket.buildOfferPacket(int,int,boolean,InetAddress,InetAddress,byte[],Integer,InetAddress,InetAddress,InetAddress,List<InetAddress>,InetAddress,String)",1,1,1
"android.net.dhcp.DhcpPacket.buildRequestPacket(int,int,InetAddress,boolean,byte[],InetAddress,InetAddress,byte[],String)",1,1,1
"android.net.dhcp.DhcpPacket.checksum(ByteBuffer,int,int,int)",1,3,4
"android.net.dhcp.DhcpPacket.decodeFullPacket(ByteBuffer,int)",13,10,40
"android.net.dhcp.DhcpPacket.decodeFullPacket(byte[],int)",1,1,1
"android.net.dhcp.DhcpPacket.fillInPacket(int,InetAddress,InetAddress,short,short,ByteBuffer,byte,boolean)",1,5,5
"android.net.dhcp.DhcpPacket.getTransactionId()",1,1,1
"android.net.dhcp.DhcpPacket.intAbs(short)",2,1,2
"android.net.dhcp.DhcpPacket.macToString(byte[])",1,2,3
"android.net.dhcp.DhcpPacket.readAsciiString(ByteBuffer,int)",1,1,1
"android.net.dhcp.DhcpPacket.readIpAddress(ByteBuffer)",1,1,2
"android.net.dhcp.DhcpPacket.toString()",1,1,1
"android.net.dhcp.DhcpRequestPacket.DhcpRequestPacket(int,InetAddress,byte[],boolean)",1,1,1
"android.net.dhcp.DhcpRequestPacket.buildPacket(int,short,short)",1,1,1
"android.net.dhcp.DhcpRequestPacket.doNextOp(DhcpStateMachine)",1,1,2
"android.net.dhcp.DhcpRequestPacket.finishPacket(ByteBuffer)",1,1,1
"android.net.dhcp.DhcpRequestPacket.toString()",1,1,2
"android.net.http.AndroidHttpClient.AndroidHttpClient(ClientConnectionManager,HttpParams)",1,1,1
"android.net.http.AndroidHttpClient.CurlLogger.process(HttpRequest,HttpContext)",1,4,4
"android.net.http.AndroidHttpClient.LoggingConfiguration.LoggingConfiguration(String,int)",1,1,1
"android.net.http.AndroidHttpClient.LoggingConfiguration.isLoggable()",1,1,1
"android.net.http.AndroidHttpClient.LoggingConfiguration.println(String)",1,1,1
"android.net.http.AndroidHttpClient.close()",1,2,2
"android.net.http.AndroidHttpClient.disableCurlLogging()",1,1,1
"android.net.http.AndroidHttpClient.enableCurlLogging(String,int)",3,1,4
"android.net.http.AndroidHttpClient.execute(HttpHost,HttpRequest)",1,1,1
"android.net.http.AndroidHttpClient.execute(HttpHost,HttpRequest,HttpContext)",1,1,1
"android.net.http.AndroidHttpClient.execute(HttpHost,HttpRequest,ResponseHandler<? extends T>)",1,1,1
"android.net.http.AndroidHttpClient.execute(HttpHost,HttpRequest,ResponseHandler<? extends T>,HttpContext)",1,1,1
"android.net.http.AndroidHttpClient.execute(HttpUriRequest)",1,1,1
"android.net.http.AndroidHttpClient.execute(HttpUriRequest,HttpContext)",1,1,1
"android.net.http.AndroidHttpClient.execute(HttpUriRequest,ResponseHandler<? extends T>)",1,1,1
"android.net.http.AndroidHttpClient.execute(HttpUriRequest,ResponseHandler<? extends T>,HttpContext)",1,1,1
"android.net.http.AndroidHttpClient.finalize()",1,2,2
"android.net.http.AndroidHttpClient.getCompressedEntity(byte[],ContentResolver)",1,2,2
"android.net.http.AndroidHttpClient.getConnectionManager()",1,1,1
"android.net.http.AndroidHttpClient.getMinGzipSize(ContentResolver)",1,1,1
"android.net.http.AndroidHttpClient.getParams()",1,1,1
"android.net.http.AndroidHttpClient.getUngzippedContent(HttpEntity)",4,1,5
"android.net.http.AndroidHttpClient.isBinaryContent(HttpUriRequest)",8,6,8
"android.net.http.AndroidHttpClient.modifyRequestToAcceptGzipResponse(HttpRequest)",1,1,1
"android.net.http.AndroidHttpClient.newInstance(String)",1,1,1
"android.net.http.AndroidHttpClient.newInstance(String,Context)",1,1,2
"android.net.http.AndroidHttpClient.parseDate(String)",1,1,1
"android.net.http.AndroidHttpClient.toCurl(HttpUriRequest,boolean)",3,11,12
"android.net.http.AndroidHttpClientConnection.AndroidHttpClientConnection()",1,1,1
"android.net.http.AndroidHttpClientConnection.assertNotOpen()",2,1,2
"android.net.http.AndroidHttpClientConnection.assertOpen()",2,1,2
"android.net.http.AndroidHttpClientConnection.bind(Socket,HttpParams)",3,2,4
"android.net.http.AndroidHttpClientConnection.close()",2,1,5
"android.net.http.AndroidHttpClientConnection.determineLength(Headers)",3,2,3
"android.net.http.AndroidHttpClientConnection.doFlush()",1,1,1
"android.net.http.AndroidHttpClientConnection.flush()",1,1,1
"android.net.http.AndroidHttpClientConnection.getLocalAddress()",2,2,2
"android.net.http.AndroidHttpClientConnection.getLocalPort()",2,2,2
"android.net.http.AndroidHttpClientConnection.getMetrics()",1,1,1
"android.net.http.AndroidHttpClientConnection.getRemoteAddress()",2,2,2
"android.net.http.AndroidHttpClientConnection.getRemotePort()",2,2,2
"android.net.http.AndroidHttpClientConnection.getSocketTimeout()",2,2,3
"android.net.http.AndroidHttpClientConnection.isOpen()",1,3,3
"android.net.http.AndroidHttpClientConnection.isStale()",1,1,2
"android.net.http.AndroidHttpClientConnection.parseResponseHeader(Headers)",9,11,20
"android.net.http.AndroidHttpClientConnection.receiveResponseEntity(Headers)",1,5,5
"android.net.http.AndroidHttpClientConnection.sendRequestEntity(HttpEntityEnclosingRequest)",3,1,3
"android.net.http.AndroidHttpClientConnection.sendRequestHeader(HttpRequest)",2,1,2
"android.net.http.AndroidHttpClientConnection.setSocketTimeout(int)",1,2,3
"android.net.http.AndroidHttpClientConnection.shutdown()",1,2,2
"android.net.http.AndroidHttpClientConnection.toString()",1,2,2
"android.net.http.CertificateChainValidator.CertificateChainValidator()",1,1,1
"android.net.http.CertificateChainValidator.closeSocketThrowException(SSLSocket,String)",1,4,4
"android.net.http.CertificateChainValidator.closeSocketThrowException(SSLSocket,String,String)",1,1,2
"android.net.http.CertificateChainValidator.doHandshakeAndValidateServerCertificates(HttpsConnection,SSLSocket,String)",1,5,6
"android.net.http.CertificateChainValidator.getInstance()",1,1,1
"android.net.http.CertificateChainValidator.verifyServerCertificates(byte[][],String,String)",2,1,4
"android.net.http.CertificateChainValidator.verifyServerDomainAndCertificates(X509Certificate[],String,String)",3,5,6
"android.net.http.CertificateValidatorCache.CacheEntry.CacheEntry(String,byte[],long)",1,1,1
"android.net.http.CertificateValidatorCache.CacheEntry.expired()",1,1,1
"android.net.http.CertificateValidatorCache.CacheEntry.has(String,byte[])",8,3,9
"android.net.http.CertificateValidatorCache.CertificateValidatorCache()",1,1,1
"android.net.http.CertificateValidatorCache.has(String,byte[])",1,6,8
"android.net.http.CertificateValidatorCache.put(String,byte[],long)",3,4,5
"android.net.http.CertificateValidatorCache.secureHash(Certificate[])",1,7,9
"android.net.http.CharArrayBuffers.containsIgnoreCaseTrimmed(CharArrayBuffer,int,String)",1,4,6
"android.net.http.CharArrayBuffers.setLowercaseIndexOf(CharArrayBuffer,int)",3,1,5
"android.net.http.CharArrayBuffers.toLower(char)",1,1,3
"android.net.http.Connection.Connection(Context,HttpHost,RequestFeeder)",1,1,1
"android.net.http.Connection.cancel()",1,2,2
"android.net.http.Connection.clearPipe(LinkedList<Request>)",1,5,5
"android.net.http.Connection.getBuf()",1,1,2
"android.net.http.Connection.getCanPersist()",1,1,1
"android.net.http.Connection.getCertificate()",1,1,1
"android.net.http.Connection.getConnection(Context,HttpHost,HttpHost,RequestFeeder)",2,1,2
"android.net.http.Connection.getHost()",1,1,1
"android.net.http.Connection.getHttpContext()",1,1,1
"android.net.http.Connection.httpFailure(Request,int,Exception)",1,5,5
"android.net.http.Connection.keepAlive(HttpEntity,ProtocolVersion,int,HttpContext)",7,5,9
"android.net.http.Connection.openHttpConnection(Request)",3,11,13
"android.net.http.Connection.processRequests(Request)",2,20,38
"android.net.http.Connection.setCanPersist(HttpEntity,ProtocolVersion,int)",1,1,1
"android.net.http.Connection.setCanPersist(boolean)",1,1,1
"android.net.http.Connection.toString()",1,1,1
"android.net.http.ConnectionThread.ConnectionThread(Context,int,ConnectionManager,RequestFeeder)",1,1,1
"android.net.http.ConnectionThread.requestStop()",1,1,1
"android.net.http.ConnectionThread.run()",1,10,11
"android.net.http.ConnectionThread.toString()",1,2,3
"android.net.http.ErrorStrings.ErrorStrings()",1,1,1
"android.net.http.ErrorStrings.getResource(int)",18,2,18
"android.net.http.ErrorStrings.getString(int,Context)",1,1,1
"android.net.http.Headers.Headers()",1,1,1
"android.net.http.Headers.getAcceptRanges()",1,1,1
"android.net.http.Headers.getCacheControl()",1,1,1
"android.net.http.Headers.getConnectionType()",1,1,1
"android.net.http.Headers.getContentDisposition()",1,1,1
"android.net.http.Headers.getContentEncoding()",1,1,1
"android.net.http.Headers.getContentLength()",1,1,1
"android.net.http.Headers.getContentType()",1,1,1
"android.net.http.Headers.getEtag()",1,1,1
"android.net.http.Headers.getExpires()",1,1,1
"android.net.http.Headers.getHeaders(HeaderCallback)",1,5,5
"android.net.http.Headers.getLastModified()",1,1,1
"android.net.http.Headers.getLocation()",1,1,1
"android.net.http.Headers.getPragma()",1,1,1
"android.net.http.Headers.getProxyAuthenticate()",1,1,1
"android.net.http.Headers.getRefresh()",1,1,1
"android.net.http.Headers.getSetCookie()",1,1,1
"android.net.http.Headers.getTransferEncoding()",1,1,1
"android.net.http.Headers.getWwwAuthenticate()",1,1,1
"android.net.http.Headers.getXPermittedCrossDomainPolicies()",1,1,1
"android.net.http.Headers.parseHeader(CharArrayBuffer)",4,14,50
"android.net.http.Headers.setAcceptRanges(String)",1,1,1
"android.net.http.Headers.setCacheControl(String)",1,1,1
"android.net.http.Headers.setConnectionType(CharArrayBuffer,int)",1,2,3
"android.net.http.Headers.setContentDisposition(String)",1,1,1
"android.net.http.Headers.setContentEncoding(String)",1,1,1
"android.net.http.Headers.setContentLength(long)",1,1,1
"android.net.http.Headers.setContentType(String)",1,1,1
"android.net.http.Headers.setEtag(String)",1,1,1
"android.net.http.Headers.setExpires(String)",1,1,1
"android.net.http.Headers.setLastModified(String)",1,1,1
"android.net.http.Headers.setLocation(String)",1,1,1
"android.net.http.Headers.setProxyAuthenticate(String)",1,1,1
"android.net.http.Headers.setWwwAuthenticate(String)",1,1,1
"android.net.http.Headers.setXPermittedCrossDomainPolicies(String)",1,1,1
"android.net.http.HttpAuthHeader.HttpAuthHeader(String)",1,2,2
"android.net.http.HttpAuthHeader.getAlgorithm()",1,1,1
"android.net.http.HttpAuthHeader.getNonce()",1,1,1
"android.net.http.HttpAuthHeader.getOpaque()",1,1,1
"android.net.http.HttpAuthHeader.getPassword()",1,1,1
"android.net.http.HttpAuthHeader.getQop()",1,1,1
"android.net.http.HttpAuthHeader.getRealm()",1,1,1
"android.net.http.HttpAuthHeader.getScheme()",1,1,1
"android.net.http.HttpAuthHeader.getStale()",1,1,1
"android.net.http.HttpAuthHeader.getUsername()",1,1,1
"android.net.http.HttpAuthHeader.isBasic()",1,1,1
"android.net.http.HttpAuthHeader.isDigest()",1,1,1
"android.net.http.HttpAuthHeader.isProxy()",1,1,1
"android.net.http.HttpAuthHeader.isSupportedScheme()",4,6,6
"android.net.http.HttpAuthHeader.parseHeader(String)",1,5,5
"android.net.http.HttpAuthHeader.parseParameter(String)",1,6,6
"android.net.http.HttpAuthHeader.parseParameter(String,String)",7,5,8
"android.net.http.HttpAuthHeader.parseParameters(String)",1,5,5
"android.net.http.HttpAuthHeader.parseScheme(String)",3,4,5
"android.net.http.HttpAuthHeader.parseStale(String)",1,2,3
"android.net.http.HttpAuthHeader.setPassword(String)",1,1,1
"android.net.http.HttpAuthHeader.setProxy()",1,1,1
"android.net.http.HttpAuthHeader.setUsername(String)",1,1,1
"android.net.http.HttpAuthHeader.trimDoubleQuotesIfAny(String)",3,5,5
"android.net.http.HttpConnection.HttpConnection(Context,HttpHost,RequestFeeder)",1,1,1
"android.net.http.HttpConnection.closeConnection()",1,5,5
"android.net.http.HttpConnection.getScheme()",1,1,1
"android.net.http.HttpConnection.openConnection(Request)",1,1,1
"android.net.http.HttpConnection.restartConnection(boolean)",1,1,1
"android.net.http.HttpLog.e(String)",1,1,1
"android.net.http.HttpLog.v(String)",1,1,1
"android.net.http.HttpsConnection.HttpsConnection(Context,HttpHost,HttpHost,RequestFeeder)",1,1,1
"android.net.http.HttpsConnection.closeConnection()",1,6,6
"android.net.http.HttpsConnection.getScheme()",1,1,1
"android.net.http.HttpsConnection.getSocketFactory()",1,1,1
"android.net.http.HttpsConnection.initializeEngine(File)",1,2,4
"android.net.http.HttpsConnection.openConnection(Request)",6,22,30
"android.net.http.HttpsConnection.restartConnection(boolean)",1,3,3
"android.net.http.HttpsConnection.setCertificate(SslCertificate)",1,1,1
"android.net.http.IdleCache.IdleCache()",1,1,2
"android.net.http.IdleCache.IdleReaper.run()",1,4,5
"android.net.http.IdleCache.cacheConnection(HttpHost,Connection)",4,6,7
"android.net.http.IdleCache.clear()",1,3,4
"android.net.http.IdleCache.clearIdle()",1,4,5
"android.net.http.IdleCache.getConnection(HttpHost)",4,4,6
"android.net.http.LoggingEventHandler.certificate(SslCertificate)",1,2,2
"android.net.http.LoggingEventHandler.data(byte[],int)",1,2,2
"android.net.http.LoggingEventHandler.endData()",1,2,2
"android.net.http.LoggingEventHandler.error(int,String)",1,2,2
"android.net.http.LoggingEventHandler.handleSslErrorRequest(SslError)",1,2,2
"android.net.http.LoggingEventHandler.headers(Headers)",1,2,2
"android.net.http.LoggingEventHandler.locationChanged(String,boolean)",1,2,2
"android.net.http.LoggingEventHandler.requestSent()",1,1,1
"android.net.http.LoggingEventHandler.status(int,int,int,String)",1,2,2
"android.net.http.Request.Request(String,HttpHost,HttpHost,String,InputStream,int,EventHandler,Map<String, String>)",1,4,4
"android.net.http.Request.addHeader(String,String)",3,4,4
"android.net.http.Request.addHeaders(Map<String, String>)",2,2,3
"android.net.http.Request.canResponseHaveBody(HttpRequest,int)",2,1,4
"android.net.http.Request.cancel()",1,3,3
"android.net.http.Request.complete()",1,1,1
"android.net.http.Request.error(int,int)",1,1,1
"android.net.http.Request.getEventHandler()",1,1,1
"android.net.http.Request.getHostPort()",2,5,5
"android.net.http.Request.getUri()",2,2,3
"android.net.http.Request.handleSslErrorResponse(boolean)",1,2,2
"android.net.http.Request.readResponse(AndroidHttpClientConnection)",4,19,26
"android.net.http.Request.reset()",1,5,5
"android.net.http.Request.sendRequest(AndroidHttpClientConnection)",2,6,7
"android.net.http.Request.setBodyProvider(InputStream,int)",2,1,2
"android.net.http.Request.setConnection(Connection)",1,1,1
"android.net.http.Request.setLoadingPaused(boolean)",1,2,2
"android.net.http.Request.toString()",1,1,1
"android.net.http.Request.waitUntilComplete()",1,3,4
"android.net.http.RequestHandle.H(String)",3,3,3
"android.net.http.RequestHandle.KD(String,String)",1,1,1
"android.net.http.RequestHandle.RequestHandle(RequestQueue,String,WebAddress,String,Map<String, String>,InputStream,int,Request)",1,1,3
"android.net.http.RequestHandle.RequestHandle(RequestQueue,String,WebAddress,String,Map<String, String>,InputStream,int,Request,Connection)",1,1,1
"android.net.http.RequestHandle.authorizationHeader(boolean)",2,1,2
"android.net.http.RequestHandle.bufferToHex(byte[])",3,4,4
"android.net.http.RequestHandle.cancel()",1,2,2
"android.net.http.RequestHandle.computeBasicAuthResponse(String,String)",1,1,1
"android.net.http.RequestHandle.computeCnonce()",1,2,2
"android.net.http.RequestHandle.computeDigest(String,String,String,String,String,String)",3,4,4
"android.net.http.RequestHandle.computeDigestAuthResponse(String,String,String,String,String,String,String)",1,3,4
"android.net.http.RequestHandle.createAndQueueNewRequest()",2,2,2
"android.net.http.RequestHandle.doubleQuote(String)",2,1,2
"android.net.http.RequestHandle.getMethod()",1,1,1
"android.net.http.RequestHandle.getRedirectCount()",1,1,1
"android.net.http.RequestHandle.handleSslErrorResponse(boolean)",1,2,2
"android.net.http.RequestHandle.isRedirectMax()",1,1,1
"android.net.http.RequestHandle.pauseRequest(boolean)",1,2,2
"android.net.http.RequestHandle.processRequest()",1,2,2
"android.net.http.RequestHandle.setRedirectCount(int)",1,1,1
"android.net.http.RequestHandle.setupAuthResponse()",1,4,4
"android.net.http.RequestHandle.setupBasicAuthResponse(boolean,String,String)",1,2,2
"android.net.http.RequestHandle.setupDigestAuthResponse(boolean,String,String,String,String,String,String,String)",1,2,2
"android.net.http.RequestHandle.setupRedirect(String,int,Map<String, String>)",3,17,18
"android.net.http.RequestHandle.waitUntilComplete()",1,1,1
"android.net.http.RequestQueue.ActivePool.ActivePool(int)",1,1,2
"android.net.http.RequestQueue.ActivePool.disablePersistence()",1,3,3
"android.net.http.RequestQueue.ActivePool.getConnection(Context,HttpHost)",1,2,2
"android.net.http.RequestQueue.ActivePool.getProxyHost()",1,1,1
"android.net.http.RequestQueue.ActivePool.getThread(HttpHost)",3,3,4
"android.net.http.RequestQueue.ActivePool.logState()",1,2,2
"android.net.http.RequestQueue.ActivePool.recycleConnection(Connection)",1,1,1
"android.net.http.RequestQueue.ActivePool.shutdown()",1,2,2
"android.net.http.RequestQueue.ActivePool.startConnectionThread()",1,1,1
"android.net.http.RequestQueue.ActivePool.startTiming()",1,1,2
"android.net.http.RequestQueue.ActivePool.startup()",1,2,2
"android.net.http.RequestQueue.ActivePool.stopTiming()",1,1,3
"android.net.http.RequestQueue.RequestQueue(Context)",1,1,1
"android.net.http.RequestQueue.RequestQueue(Context,int)",1,1,1
"android.net.http.RequestQueue.SyncFeeder.SyncFeeder()",1,1,1
"android.net.http.RequestQueue.SyncFeeder.getRequest()",1,1,1
"android.net.http.RequestQueue.SyncFeeder.getRequest(HttpHost)",1,1,1
"android.net.http.RequestQueue.SyncFeeder.haveRequest(HttpHost)",1,1,1
"android.net.http.RequestQueue.SyncFeeder.requeueRequest(Request)",1,1,1
"android.net.http.RequestQueue.determineHost(HttpHost)",1,2,3
"android.net.http.RequestQueue.disablePlatformNotifications()",1,3,3
"android.net.http.RequestQueue.dump()",1,4,4
"android.net.http.RequestQueue.enablePlatformNotifications()",1,3,3
"android.net.http.RequestQueue.getProxyHost()",1,1,1
"android.net.http.RequestQueue.getRequest()",1,3,3
"android.net.http.RequestQueue.getRequest(HttpHost)",1,4,4
"android.net.http.RequestQueue.haveRequest(HttpHost)",1,1,1
"android.net.http.RequestQueue.queueRequest(Request,boolean)",1,3,4
"android.net.http.RequestQueue.queueRequest(String,String,Map<String, String>,EventHandler,InputStream,int)",1,1,1
"android.net.http.RequestQueue.queueRequest(String,WebAddress,String,Map<String, String>,EventHandler,InputStream,int)",1,2,3
"android.net.http.RequestQueue.queueSynchronousRequest(String,WebAddress,String,Map<String, String>,EventHandler,InputStream,int)",1,2,2
"android.net.http.RequestQueue.removeFirst(LinkedHashMap<HttpHost, LinkedList<Request>>)",1,3,3
"android.net.http.RequestQueue.requestsPending()",1,1,1
"android.net.http.RequestQueue.requeueRequest(Request)",1,1,1
"android.net.http.RequestQueue.setProxyConfig()",1,5,5
"android.net.http.RequestQueue.shutdown()",1,1,1
"android.net.http.RequestQueue.startTiming()",1,1,1
"android.net.http.RequestQueue.stopTiming()",1,1,1
"android.net.http.SSLConnectionClosedByUserException.SSLConnectionClosedByUserException(String)",1,1,1
"android.net.http.SslCertificate.DName.DName(String)",6,6,7
"android.net.http.SslCertificate.DName.getCName()",1,1,2
"android.net.http.SslCertificate.DName.getDName()",1,1,2
"android.net.http.SslCertificate.DName.getOName()",1,1,2
"android.net.http.SslCertificate.DName.getUName()",1,1,2
"android.net.http.SslCertificate.SslCertificate(String,String,Date,Date)",1,1,1
"android.net.http.SslCertificate.SslCertificate(String,String,String,String)",1,1,1
"android.net.http.SslCertificate.SslCertificate(X509Certificate)",1,1,1
"android.net.http.SslCertificate.cloneDate(Date)",2,1,2
"android.net.http.SslCertificate.formatDate(Date)",2,1,2
"android.net.http.SslCertificate.getIssuedBy()",1,1,1
"android.net.http.SslCertificate.getIssuedTo()",1,1,1
"android.net.http.SslCertificate.getValidNotAfter()",1,1,1
"android.net.http.SslCertificate.getValidNotAfterDate()",1,1,1
"android.net.http.SslCertificate.getValidNotBefore()",1,1,1
"android.net.http.SslCertificate.getValidNotBeforeDate()",1,1,1
"android.net.http.SslCertificate.parseDate(String)",1,1,2
"android.net.http.SslCertificate.restoreState(Bundle)",2,2,2
"android.net.http.SslCertificate.saveState(SslCertificate)",1,2,2
"android.net.http.SslCertificate.toString()",1,1,1
"android.net.http.SslError.SslError(int,SslCertificate)",1,1,1
"android.net.http.SslError.SslError(int,X509Certificate)",1,1,1
"android.net.http.SslError.addError(int)",1,1,3
"android.net.http.SslError.getCertificate()",1,1,1
"android.net.http.SslError.getPrimaryError()",4,1,4
"android.net.http.SslError.hasError(int)",1,1,3
"android.net.http.SslError.toString()",1,1,1
"android.net.http.Timer.Timer()",1,1,1
"android.net.http.Timer.mark(String)",1,2,2
"android.nfc.ErrorCodes.asString(int)",23,2,23
"android.nfc.ErrorCodes.isError(int)",2,1,2
"android.nfc.FormatException.FormatException()",1,1,1
"android.nfc.FormatException.FormatException(String)",1,1,1
"android.nfc.LlcpPacket.LlcpPacket(int,byte[])",1,1,1
"android.nfc.LlcpPacket.describeContents()",1,1,1
"android.nfc.LlcpPacket.getDataBuffer()",1,1,1
"android.nfc.LlcpPacket.getRemoteSap()",1,1,1
"android.nfc.LlcpPacket.writeToParcel(Parcel,int)",1,1,1
"android.nfc.NdefMessage.NdefMessage(NdefRecord[])",1,1,1
"android.nfc.NdefMessage.NdefMessage(byte[])",2,1,2
"android.nfc.NdefMessage.describeContents()",1,1,1
"android.nfc.NdefMessage.getRecords()",1,1,1
"android.nfc.NdefMessage.parseNdefMessage(byte[])",1,1,1
"android.nfc.NdefMessage.toByteArray()",2,2,6
"android.nfc.NdefMessage.writeToParcel(Parcel,int)",1,1,1
"android.nfc.NdefRecord.NdefRecord(byte[])",2,1,2
"android.nfc.NdefRecord.NdefRecord(short,byte[],byte[],byte[])",3,1,8
"android.nfc.NdefRecord.describeContents()",1,1,1
"android.nfc.NdefRecord.generate(short,short,byte[],byte[],byte[])",1,1,1
"android.nfc.NdefRecord.getId()",1,1,1
"android.nfc.NdefRecord.getPayload()",1,1,1
"android.nfc.NdefRecord.getTnf()",1,1,1
"android.nfc.NdefRecord.getType()",1,1,1
"android.nfc.NdefRecord.parseNdefRecord(byte[])",1,1,1
"android.nfc.NdefRecord.toByteArray()",1,1,1
"android.nfc.NdefRecord.writeToParcel(Parcel,int)",1,1,1
"android.nfc.NfcAdapter.NfcAdapter(Context)",2,1,2
"android.nfc.NfcAdapter.attemptDeadServiceRecovery(Exception)",2,2,2
"android.nfc.NfcAdapter.createNfcSecureElementConnection()",1,2,2
"android.nfc.NfcAdapter.disable()",1,2,2
"android.nfc.NfcAdapter.enable()",1,2,2
"android.nfc.NfcAdapter.getDefaultAdapter()",1,1,1
"android.nfc.NfcAdapter.getDefaultAdapter(Context)",1,1,1
"android.nfc.NfcAdapter.getLocalNdefMessage()",1,2,2
"android.nfc.NfcAdapter.getService()",1,1,1
"android.nfc.NfcAdapter.getServiceInterface()",2,1,2
"android.nfc.NfcAdapter.hasNfcFeature()",2,3,3
"android.nfc.NfcAdapter.isEnabled()",1,2,2
"android.nfc.NfcAdapter.setLocalNdefMessage(NdefMessage)",1,2,2
"android.nfc.NfcAdapter.setupService()",4,4,4
"android.nfc.NfcManager.NfcManager(Context)",1,1,2
"android.nfc.NfcManager.getDefaultAdapter()",1,1,1
"android.nfc.NfcSecureElement.NfcSecureElement(INfcSecureElement)",1,1,1
"android.nfc.NfcSecureElement.closeSecureElementConnection(int)",2,2,3
"android.nfc.NfcSecureElement.exchangeAPDU(int,byte[])",2,2,3
"android.nfc.NfcSecureElement.getSecureElementTechList(int)",1,2,2
"android.nfc.NfcSecureElement.getSecureElementUid(int)",2,2,3
"android.nfc.NfcSecureElement.openSecureElementConnection(String)",4,3,5
"android.nfc.Tag.Tag(byte[],int[],Bundle[],int)",2,1,2
"android.nfc.Tag.createMockTag(byte[],int[],Bundle[])",1,1,1
"android.nfc.Tag.describeContents()",1,1,1
"android.nfc.Tag.getConnectedTechnology()",1,1,1
"android.nfc.Tag.getId()",1,1,1
"android.nfc.Tag.getServiceHandle()",1,1,1
"android.nfc.Tag.getTechnology(NfcAdapter,int)",14,2,15
"android.nfc.Tag.getTechnologyList()",1,1,1
"android.nfc.Tag.readBytesWithNull(Parcel)",1,2,2
"android.nfc.Tag.setConnectedTechnology(int)",2,1,2
"android.nfc.Tag.setTechnologyDisconnected()",1,1,1
"android.nfc.Tag.toString()",1,2,2
"android.nfc.Tag.writeBytesWithNull(Parcel,byte[])",2,2,2
"android.nfc.Tag.writeToParcel(Parcel,int)",1,1,1
"android.nfc.technology.BasicTagTechnology.BasicTagTechnology(NfcAdapter,Tag)",1,1,1
"android.nfc.technology.BasicTagTechnology.BasicTagTechnology(NfcAdapter,Tag,int)",4,2,5
"android.nfc.technology.BasicTagTechnology.attemptDeadServiceRecovery(Exception)",1,2,2
"android.nfc.technology.BasicTagTechnology.checkConnected()",2,2,3
"android.nfc.technology.BasicTagTechnology.close()",1,2,2
"android.nfc.technology.BasicTagTechnology.connect()",2,3,3
"android.nfc.technology.BasicTagTechnology.getTag()",1,1,1
"android.nfc.technology.BasicTagTechnology.getTechnologyId()",1,1,1
"android.nfc.technology.BasicTagTechnology.isConnected()",2,2,3
"android.nfc.technology.BasicTagTechnology.reconnect()",3,4,4
"android.nfc.technology.BasicTagTechnology.transceive(byte[])",2,2,3
"android.nfc.technology.IsoDep.IsoDep(NfcAdapter,Tag,Bundle)",1,2,2
"android.nfc.technology.IsoDep.getAttrib()",1,1,1
"android.nfc.technology.IsoDep.getHistoricalBytes()",1,1,1
"android.nfc.technology.MifareClassic.MifareClassic(NfcAdapter,Tag,Bundle)",2,2,14
"android.nfc.technology.MifareClassic.authenticateBlock(int,byte[],boolean)",2,1,4
"android.nfc.technology.MifareClassic.authenticateSector(int,byte[],boolean)",1,1,1
"android.nfc.technology.MifareClassic.decrement(int)",1,1,1
"android.nfc.technology.MifareClassic.firstBlockInSector(int)",2,1,2
"android.nfc.technology.MifareClassic.getBlockCount(int)",3,2,3
"android.nfc.technology.MifareClassic.getSectorCount()",6,2,6
"android.nfc.technology.MifareClassic.getSectorSize(int)",1,1,1
"android.nfc.technology.MifareClassic.getSize()",1,1,1
"android.nfc.technology.MifareClassic.getTotalBlockCount()",1,2,2
"android.nfc.technology.MifareClassic.getType()",1,1,1
"android.nfc.technology.MifareClassic.increment(int)",1,1,1
"android.nfc.technology.MifareClassic.isEmulated()",1,1,1
"android.nfc.technology.MifareClassic.readBlock(int)",1,1,1
"android.nfc.technology.MifareClassic.readBlock(int,int)",1,1,1
"android.nfc.technology.MifareClassic.restore(int)",1,1,1
"android.nfc.technology.MifareClassic.transceive(byte[])",2,2,3
"android.nfc.technology.MifareClassic.transfer(int)",1,1,1
"android.nfc.technology.MifareClassic.writeBlock(int,byte[])",1,1,1
"android.nfc.technology.MifareClassic.writeBlock(int,int,byte[])",1,1,1
"android.nfc.technology.MifareUltralight.MifareUltralight(NfcAdapter,Tag,Bundle)",1,2,3
"android.nfc.technology.MifareUltralight.getType()",1,1,1
"android.nfc.technology.MifareUltralight.readBlock(int)",1,1,1
"android.nfc.technology.MifareUltralight.readOTP()",1,1,1
"android.nfc.technology.MifareUltralight.transceive(byte[])",2,2,3
"android.nfc.technology.MifareUltralight.writeBlock(int,byte[])",1,1,1
"android.nfc.technology.MifareUltralight.writePage(int,byte[])",1,1,1
"android.nfc.technology.Ndef.Ndef(NfcAdapter,Tag,int,Bundle)",2,2,2
"android.nfc.technology.Ndef.getCachedNdefMessage()",1,1,1
"android.nfc.technology.Ndef.getExtraNdefMessage()",1,1,1
"android.nfc.technology.Ndef.getMaxSize()",1,1,1
"android.nfc.technology.Ndef.getNdefMessage()",6,5,7
"android.nfc.technology.Ndef.getType()",1,1,1
"android.nfc.technology.Ndef.isWritable()",1,1,1
"android.nfc.technology.Ndef.makeLowLevelReadonly()",1,1,1
"android.nfc.technology.Ndef.makeReadonly()",5,3,6
"android.nfc.technology.Ndef.transceive(byte[])",1,1,1
"android.nfc.technology.Ndef.writeExtraNdefMessage(int,NdefMessage)",1,1,1
"android.nfc.technology.Ndef.writeNdefMessage(NdefMessage)",5,4,7
"android.nfc.technology.NdefFormatable.NdefFormatable(NfcAdapter,Tag,int,Bundle)",1,1,1
"android.nfc.technology.NdefFormatable.format(NdefMessage)",8,5,11
"android.nfc.technology.NdefFormatable.transceive(byte[])",1,1,1
"android.nfc.technology.NfcA.NfcA(NfcAdapter,Tag,Bundle)",1,1,1
"android.nfc.technology.NfcA.getAtqa()",1,1,1
"android.nfc.technology.NfcA.getSak()",1,1,1
"android.nfc.technology.NfcB.NfcB(NfcAdapter,Tag,Bundle)",1,1,1
"android.nfc.technology.NfcB.getAtqb()",1,1,1
"android.nfc.technology.NfcF.NfcF(NfcAdapter,Tag,Bundle)",1,2,2
"android.nfc.technology.NfcF.getManufacturer()",1,1,1
"android.nfc.technology.NfcF.getSystemCode()",1,1,1
"android.nfc.technology.NfcV.NfcV(NfcAdapter,Tag,Bundle)",1,1,1
"android.nfc.technology.NfcV.getDsfId()",1,1,1
"android.nfc.technology.NfcV.getResponseFlags()",1,1,1
"android.os.AsyncResult.AsyncResult(Object,Object,Throwable)",1,1,1
"android.os.AsyncResult.forMessage(Message)",1,1,1
"android.os.AsyncResult.forMessage(Message,Object,Throwable)",1,1,1
"android.os.AsyncTask.AsyncTask()",1,5,6
"android.os.AsyncTask.AsyncTaskResult.AsyncTaskResult(AsyncTask,Data...)",1,1,1
"android.os.AsyncTask.InternalHandler.handleMessage(Message)",2,2,4
"android.os.AsyncTask.cancel(boolean)",1,1,1
"android.os.AsyncTask.execute(Params...)",4,2,4
"android.os.AsyncTask.finish(Result)",1,1,2
"android.os.AsyncTask.get()",1,1,1
"android.os.AsyncTask.get(long,TimeUnit)",1,1,1
"android.os.AsyncTask.getStatus()",1,1,1
"android.os.AsyncTask.init()",1,1,1
"android.os.AsyncTask.isCancelled()",1,1,1
"android.os.AsyncTask.onCancelled()",1,1,1
"android.os.AsyncTask.onPostExecute(Result)",1,1,1
"android.os.AsyncTask.onPreExecute()",1,1,1
"android.os.AsyncTask.onProgressUpdate(Progress...)",1,1,1
"android.os.AsyncTask.publishProgress(Progress...)",1,2,2
"android.os.BadParcelableException.BadParcelableException(Exception)",1,1,1
"android.os.BadParcelableException.BadParcelableException(String)",1,1,1
"android.os.BatteryStats.BitDescription.BitDescription(int,String)",1,1,1
"android.os.BatteryStats.BitDescription.BitDescription(int,int,String,String[])",1,1,1
"android.os.BatteryStats.HistoryItem.HistoryItem()",1,1,1
"android.os.BatteryStats.HistoryItem.HistoryItem(long,Parcel)",1,1,1
"android.os.BatteryStats.HistoryItem.describeContents()",1,1,1
"android.os.BatteryStats.HistoryItem.same(HistoryItem)",1,1,7
"android.os.BatteryStats.HistoryItem.setTo(HistoryItem)",1,1,1
"android.os.BatteryStats.HistoryItem.setTo(long,byte,HistoryItem)",1,1,1
"android.os.BatteryStats.HistoryItem.writeToParcel(Parcel,int)",1,1,1
"android.os.BatteryStats.dumpCheckinLocked(PrintWriter,String[],List<ApplicationInfo>)",1,11,11
"android.os.BatteryStats.dumpCheckinLocked(PrintWriter,int,int)",3,36,46
"android.os.BatteryStats.dumpLine(PrintWriter,int,String,String,Object...)",1,2,2
"android.os.BatteryStats.dumpLocked(PrintWriter)",4,27,42
"android.os.BatteryStats.dumpLocked(PrintWriter,String,int,int)",9,54,68
"android.os.BatteryStats.formatBytesLocked(long)",4,4,4
"android.os.BatteryStats.formatRatioLocked(long,long)",2,1,2
"android.os.BatteryStats.formatTime(StringBuilder,long)",1,1,1
"android.os.BatteryStats.formatTimeMs(StringBuilder,long)",1,1,1
"android.os.BatteryStats.formatTimeRaw(StringBuilder,long)",1,5,8
"android.os.BatteryStats.getRadioDataUptimeMs()",1,1,1
"android.os.BatteryStats.printBitDescriptions(PrintWriter,int,int,BitDescription[])",2,5,9
"android.os.BatteryStats.printWakeLock(StringBuilder,Timer,long,String,int,String)",3,4,4
"android.os.BatteryStats.printWakeLockCheckin(StringBuilder,Timer,long,String,int,String)",1,2,3
"android.os.Binder.Binder()",1,6,6
"android.os.Binder.attachInterface(IInterface,String)",1,1,1
"android.os.Binder.clearCallingIdentity()",1,1,1
"android.os.Binder.destroy()",1,1,1
"android.os.Binder.dump(FileDescriptor,PrintWriter,String[])",1,1,1
"android.os.Binder.dump(FileDescriptor,String[])",1,1,1
"android.os.Binder.execTransact(int,int,int,int)",1,4,4
"android.os.Binder.finalize()",1,1,1
"android.os.Binder.flushPendingCommands()",1,1,1
"android.os.Binder.getCallingPid()",1,1,1
"android.os.Binder.getCallingUid()",1,1,1
"android.os.Binder.getInterfaceDescriptor()",1,1,1
"android.os.Binder.getThreadStrictModePolicy()",1,1,1
"android.os.Binder.init()",1,1,1
"android.os.Binder.isBinderAlive()",1,1,1
"android.os.Binder.joinThreadPool()",1,1,1
"android.os.Binder.linkToDeath(DeathRecipient,int)",1,1,1
"android.os.Binder.onTransact(int,Parcel,Parcel,int)",3,5,6
"android.os.Binder.pingBinder()",1,1,1
"android.os.Binder.queryLocalInterface(String)",2,1,2
"android.os.Binder.restoreCallingIdentity(long)",1,1,1
"android.os.Binder.setThreadStrictModePolicy(int)",1,1,1
"android.os.Binder.transact(int,Parcel,Parcel,int)",1,4,4
"android.os.Binder.unlinkToDeath(DeathRecipient,int)",1,1,1
"android.os.BinderProxy.BinderProxy()",1,1,1
"android.os.BinderProxy.destroy()",1,1,1
"android.os.BinderProxy.dump(FileDescriptor,String[])",1,1,1
"android.os.BinderProxy.finalize()",1,1,1
"android.os.BinderProxy.getInterfaceDescriptor()",1,1,1
"android.os.BinderProxy.isBinderAlive()",1,1,1
"android.os.BinderProxy.linkToDeath(DeathRecipient,int)",1,1,1
"android.os.BinderProxy.pingBinder()",1,1,1
"android.os.BinderProxy.queryLocalInterface(String)",1,1,1
"android.os.BinderProxy.sendDeathNotice(DeathRecipient)",1,3,3
"android.os.BinderProxy.transact(int,Parcel,Parcel,int)",1,1,1
"android.os.BinderProxy.unlinkToDeath(DeathRecipient,int)",1,1,1
"android.os.Broadcaster.Broadcaster()",1,1,1
"android.os.Broadcaster.broadcast(Message)",4,3,6
"android.os.Broadcaster.cancelRequest(int,Handler,int)",7,6,10
"android.os.Broadcaster.dumpRegistrations()",1,4,4
"android.os.Broadcaster.request(int,Handler,int)",7,3,10
"android.os.Build.getLong(String)",1,1,2
"android.os.Build.getString(String)",1,1,1
"android.os.Bundle.Bundle()",1,1,1
"android.os.Bundle.Bundle(Bundle)",1,2,3
"android.os.Bundle.Bundle(ClassLoader)",1,1,1
"android.os.Bundle.Bundle(Parcel)",1,1,1
"android.os.Bundle.Bundle(Parcel,int)",1,1,1
"android.os.Bundle.Bundle(int)",1,1,1
"android.os.Bundle.clear()",1,1,1
"android.os.Bundle.clone()",1,1,1
"android.os.Bundle.containsKey(String)",1,1,1
"android.os.Bundle.describeContents()",1,1,2
"android.os.Bundle.forPair(String,String)",1,1,1
"android.os.Bundle.get(String)",1,1,1
"android.os.Bundle.getBoolean(String)",1,1,1
"android.os.Bundle.getBoolean(String,boolean)",2,2,3
"android.os.Bundle.getBooleanArray(String)",2,2,3
"android.os.Bundle.getBundle(String)",2,2,3
"android.os.Bundle.getByte(String)",1,1,1
"android.os.Bundle.getByte(String,byte)",2,2,3
"android.os.Bundle.getByteArray(String)",2,2,3
"android.os.Bundle.getChar(String)",1,1,1
"android.os.Bundle.getChar(String,char)",2,2,3
"android.os.Bundle.getCharArray(String)",2,2,3
"android.os.Bundle.getCharSequence(String)",2,2,3
"android.os.Bundle.getCharSequenceArray(String)",2,2,3
"android.os.Bundle.getCharSequenceArrayList(String)",2,2,3
"android.os.Bundle.getClassLoader()",1,1,1
"android.os.Bundle.getDouble(String)",1,1,1
"android.os.Bundle.getDouble(String,double)",2,2,3
"android.os.Bundle.getDoubleArray(String)",2,2,3
"android.os.Bundle.getFloat(String)",1,1,1
"android.os.Bundle.getFloat(String,float)",2,2,3
"android.os.Bundle.getFloatArray(String)",2,2,3
"android.os.Bundle.getIBinder(String)",2,2,3
"android.os.Bundle.getInt(String)",1,1,1
"android.os.Bundle.getInt(String,int)",2,2,3
"android.os.Bundle.getIntArray(String)",2,2,3
"android.os.Bundle.getIntegerArrayList(String)",2,2,3
"android.os.Bundle.getLong(String)",1,1,1
"android.os.Bundle.getLong(String,long)",2,2,3
"android.os.Bundle.getLongArray(String)",2,2,3
"android.os.Bundle.getPairValue()",2,3,4
"android.os.Bundle.getParcelable(String)",2,2,3
"android.os.Bundle.getParcelableArray(String)",2,2,3
"android.os.Bundle.getParcelableArrayList(String)",2,2,3
"android.os.Bundle.getSerializable(String)",2,2,3
"android.os.Bundle.getShort(String)",1,1,1
"android.os.Bundle.getShort(String,short)",2,2,3
"android.os.Bundle.getShortArray(String)",2,2,3
"android.os.Bundle.getSparseParcelableArray(String)",2,2,3
"android.os.Bundle.getString(String)",2,2,3
"android.os.Bundle.getStringArray(String)",2,2,3
"android.os.Bundle.getStringArrayList(String)",2,2,3
"android.os.Bundle.hasFileDescriptors()",16,15,20
"android.os.Bundle.isEmpty()",1,1,1
"android.os.Bundle.keySet()",1,1,1
"android.os.Bundle.putAll(Bundle)",1,1,2
"android.os.Bundle.putBoolean(String,boolean)",1,1,1
"android.os.Bundle.putBooleanArray(String,boolean[])",1,1,1
"android.os.Bundle.putBundle(String,Bundle)",1,1,1
"android.os.Bundle.putByte(String,byte)",1,1,1
"android.os.Bundle.putByteArray(String,byte[])",1,1,1
"android.os.Bundle.putChar(String,char)",1,1,1
"android.os.Bundle.putCharArray(String,char[])",1,1,1
"android.os.Bundle.putCharSequence(String,CharSequence)",1,1,1
"android.os.Bundle.putCharSequenceArray(String,CharSequence[])",1,1,1
"android.os.Bundle.putCharSequenceArrayList(String,ArrayList<CharSequence>)",1,1,1
"android.os.Bundle.putDouble(String,double)",1,1,1
"android.os.Bundle.putDoubleArray(String,double[])",1,1,1
"android.os.Bundle.putFloat(String,float)",1,1,1
"android.os.Bundle.putFloatArray(String,float[])",1,1,1
"android.os.Bundle.putIBinder(String,IBinder)",1,1,1
"android.os.Bundle.putInt(String,int)",1,1,1
"android.os.Bundle.putIntArray(String,int[])",1,1,1
"android.os.Bundle.putIntegerArrayList(String,ArrayList<Integer>)",1,1,1
"android.os.Bundle.putLong(String,long)",1,1,1
"android.os.Bundle.putLongArray(String,long[])",1,1,1
"android.os.Bundle.putParcelable(String,Parcelable)",1,1,1
"android.os.Bundle.putParcelableArray(String,Parcelable[])",1,1,1
"android.os.Bundle.putParcelableArrayList(String,ArrayList<? extends Parcelable>)",1,1,1
"android.os.Bundle.putSerializable(String,Serializable)",1,1,1
"android.os.Bundle.putShort(String,short)",1,1,1
"android.os.Bundle.putShortArray(String,short[])",1,1,1
"android.os.Bundle.putSparseParcelableArray(String,SparseArray<? extends Parcelable>)",1,1,1
"android.os.Bundle.putString(String,String)",1,1,1
"android.os.Bundle.putStringArray(String,String[])",1,1,1
"android.os.Bundle.putStringArrayList(String,ArrayList<String>)",1,1,1
"android.os.Bundle.readFromParcel(Parcel)",2,1,2
"android.os.Bundle.readFromParcelInner(Parcel,int)",1,2,2
"android.os.Bundle.remove(String)",1,1,1
"android.os.Bundle.setClassLoader(ClassLoader)",1,1,1
"android.os.Bundle.size()",1,1,1
"android.os.Bundle.toString()",2,2,2
"android.os.Bundle.typeWarning(String,Object,String,ClassCastException)",1,1,1
"android.os.Bundle.typeWarning(String,Object,String,Object,ClassCastException)",1,1,1
"android.os.Bundle.unparcel()",3,1,4
"android.os.Bundle.writeToParcel(Parcel,int)",1,2,2
"android.os.ConditionVariable.ConditionVariable()",1,1,1
"android.os.ConditionVariable.ConditionVariable(boolean)",1,1,1
"android.os.ConditionVariable.block()",1,2,3
"android.os.ConditionVariable.block(long)",2,3,5
"android.os.ConditionVariable.close()",1,1,1
"android.os.ConditionVariable.open()",1,2,2
"android.os.CountDownTimer.CountDownTimer(long,long)",1,1,1
"android.os.CountDownTimer.cancel()",1,1,1
"android.os.CountDownTimer.start()",2,2,2
"android.os.DeadObjectException.DeadObjectException()",1,1,1
"android.os.Debug.Debug()",1,1,1
"android.os.Debug.InstructionCount.InstructionCount()",1,1,1
"android.os.Debug.InstructionCount.collect()",1,1,2
"android.os.Debug.InstructionCount.globalMethodInvocations()",1,2,3
"android.os.Debug.InstructionCount.globalTotal()",1,1,2
"android.os.Debug.InstructionCount.resetAndStart()",1,1,2
"android.os.Debug.MemoryInfo.MemoryInfo()",1,1,1
"android.os.Debug.MemoryInfo.MemoryInfo(Parcel)",1,1,1
"android.os.Debug.MemoryInfo.describeContents()",1,1,1
"android.os.Debug.MemoryInfo.getTotalPrivateDirty()",1,1,1
"android.os.Debug.MemoryInfo.getTotalPss()",1,1,1
"android.os.Debug.MemoryInfo.getTotalSharedDirty()",1,1,1
"android.os.Debug.MemoryInfo.readFromParcel(Parcel)",1,1,1
"android.os.Debug.MemoryInfo.writeToParcel(Parcel,int)",1,1,1
"android.os.Debug.cacheRegisterMap(String)",1,1,1
"android.os.Debug.changeDebugPort(int)",1,1,1
"android.os.Debug.countInstancesOfClass(Class)",1,1,1
"android.os.Debug.dumpHprofData(String)",1,1,1
"android.os.Debug.dumpHprofData(String,FileDescriptor)",1,1,1
"android.os.Debug.dumpHprofDataDdms()",1,1,1
"android.os.Debug.dumpNativeHeap(FileDescriptor)",1,1,1
"android.os.Debug.dumpReferenceTables()",1,1,1
"android.os.Debug.dumpService(String,FileDescriptor,String[])",2,3,3
"android.os.Debug.enableEmulatorTraceOutput()",1,1,1
"android.os.Debug.fieldTypeMatches(Field,Class<?>)",2,1,4
"android.os.Debug.getBinderDeathObjectCount()",1,1,1
"android.os.Debug.getBinderLocalObjectCount()",1,1,1
"android.os.Debug.getBinderProxyObjectCount()",1,1,1
"android.os.Debug.getBinderReceivedTransactions()",1,1,1
"android.os.Debug.getBinderSentTransactions()",1,1,1
"android.os.Debug.getGlobalAllocCount()",1,1,1
"android.os.Debug.getGlobalAllocSize()",1,1,1
"android.os.Debug.getGlobalClassInitCount()",1,1,1
"android.os.Debug.getGlobalClassInitTime()",1,1,1
"android.os.Debug.getGlobalExternalAllocCount()",1,1,1
"android.os.Debug.getGlobalExternalAllocSize()",1,1,1
"android.os.Debug.getGlobalExternalFreedCount()",1,1,1
"android.os.Debug.getGlobalExternalFreedSize()",1,1,1
"android.os.Debug.getGlobalFreedCount()",1,1,1
"android.os.Debug.getGlobalFreedSize()",1,1,1
"android.os.Debug.getGlobalGcInvocationCount()",1,1,1
"android.os.Debug.getLoadedClassCount()",1,1,1
"android.os.Debug.getMemoryInfo(MemoryInfo)",1,1,1
"android.os.Debug.getMemoryInfo(int,MemoryInfo)",1,1,1
"android.os.Debug.getNativeHeapAllocatedSize()",1,1,1
"android.os.Debug.getNativeHeapFreeSize()",1,1,1
"android.os.Debug.getNativeHeapSize()",1,1,1
"android.os.Debug.getThreadAllocCount()",1,1,1
"android.os.Debug.getThreadAllocSize()",1,1,1
"android.os.Debug.getThreadExternalAllocCount()",1,1,1
"android.os.Debug.getThreadExternalAllocSize()",1,1,1
"android.os.Debug.getThreadGcInvocationCount()",1,1,1
"android.os.Debug.getVmFeatureList()",1,1,1
"android.os.Debug.isDebuggerConnected()",1,1,1
"android.os.Debug.isMethodTracingActive()",1,1,1
"android.os.Debug.modifyFieldIfSet(Field,TypedProperties,String)",8,6,11
"android.os.Debug.printLoadedClasses(int)",1,1,1
"android.os.Debug.resetAllCounts()",1,1,1
"android.os.Debug.resetGlobalAllocCount()",1,1,1
"android.os.Debug.resetGlobalAllocSize()",1,1,1
"android.os.Debug.resetGlobalClassInitCount()",1,1,1
"android.os.Debug.resetGlobalClassInitTime()",1,1,1
"android.os.Debug.resetGlobalExternalAllocCount()",1,1,1
"android.os.Debug.resetGlobalExternalAllocSize()",1,1,1
"android.os.Debug.resetGlobalExternalFreedCount()",1,1,1
"android.os.Debug.resetGlobalExternalFreedSize()",1,1,1
"android.os.Debug.resetGlobalFreedCount()",1,1,1
"android.os.Debug.resetGlobalFreedSize()",1,1,1
"android.os.Debug.resetGlobalGcInvocationCount()",1,1,1
"android.os.Debug.resetThreadAllocCount()",1,1,1
"android.os.Debug.resetThreadAllocSize()",1,1,1
"android.os.Debug.resetThreadExternalAllocCount()",1,1,1
"android.os.Debug.resetThreadExternalAllocSize()",1,1,1
"android.os.Debug.resetThreadGcInvocationCount()",1,1,1
"android.os.Debug.setAllocationLimit(int)",1,1,1
"android.os.Debug.setFieldsOn(Class<?>)",1,1,1
"android.os.Debug.setFieldsOn(Class<?>,boolean)",6,7,9
"android.os.Debug.setGlobalAllocationLimit(int)",2,1,3
"android.os.Debug.startAllocCounting()",1,1,1
"android.os.Debug.startMethodTracing()",1,1,1
"android.os.Debug.startMethodTracing(String)",1,1,1
"android.os.Debug.startMethodTracing(String,FileDescriptor,int,int)",1,1,1
"android.os.Debug.startMethodTracing(String,int)",1,1,1
"android.os.Debug.startMethodTracing(String,int,int)",1,1,3
"android.os.Debug.startMethodTracingDdms(int,int)",1,1,1
"android.os.Debug.startNativeTracing()",1,2,3
"android.os.Debug.stopAllocCounting()",1,1,1
"android.os.Debug.stopMethodTracing()",1,1,1
"android.os.Debug.stopNativeTracing()",1,2,3
"android.os.Debug.threadCpuTimeNanos()",1,1,1
"android.os.Debug.waitForDebugger()",6,5,9
"android.os.Debug.waitingForDebugger()",1,1,1
"android.os.DropBoxManager.DropBoxManager()",1,1,1
"android.os.DropBoxManager.DropBoxManager(IDropBoxManagerService)",1,1,1
"android.os.DropBoxManager.Entry.Entry(String,long)",2,1,2
"android.os.DropBoxManager.Entry.Entry(String,long,File,int)",3,1,3
"android.os.DropBoxManager.Entry.Entry(String,long,ParcelFileDescriptor,int)",3,1,3
"android.os.DropBoxManager.Entry.Entry(String,long,String)",3,1,3
"android.os.DropBoxManager.Entry.Entry(String,long,byte[],int)",3,1,3
"android.os.DropBoxManager.Entry.close()",1,2,3
"android.os.DropBoxManager.Entry.describeContents()",1,1,2
"android.os.DropBoxManager.Entry.getFlags()",1,1,1
"android.os.DropBoxManager.Entry.getInputStream()",3,1,4
"android.os.DropBoxManager.Entry.getTag()",1,1,1
"android.os.DropBoxManager.Entry.getText(int)",4,4,9
"android.os.DropBoxManager.Entry.getTimeMillis()",1,1,1
"android.os.DropBoxManager.Entry.writeToParcel(Parcel,int)",1,2,2
"android.os.DropBoxManager.addData(String,byte[],int)",2,1,3
"android.os.DropBoxManager.addFile(String,File,int)",2,1,3
"android.os.DropBoxManager.addText(String,String)",1,1,2
"android.os.DropBoxManager.getNextEntry(String,long)",1,1,2
"android.os.DropBoxManager.isTagEnabled(String)",1,1,2
"android.os.Environment.getDataDirectory()",1,1,1
"android.os.Environment.getDirectory(String,String)",1,1,2
"android.os.Environment.getDownloadCacheDirectory()",1,1,1
"android.os.Environment.getExternalStorageAndroidDataDir()",1,1,1
"android.os.Environment.getExternalStorageAppCacheDirectory(String)",1,1,1
"android.os.Environment.getExternalStorageAppDataDirectory(String)",1,1,1
"android.os.Environment.getExternalStorageAppFilesDirectory(String)",1,1,1
"android.os.Environment.getExternalStorageAppMediaDirectory(String)",1,1,1
"android.os.Environment.getExternalStorageDirectory()",1,1,1
"android.os.Environment.getExternalStoragePublicDirectory(String)",1,1,1
"android.os.Environment.getExternalStorageState()",1,1,2
"android.os.Environment.getRootDirectory()",1,1,1
"android.os.Environment.getSecureDataDirectory()",2,1,2
"android.os.Environment.getSystemSecureDirectory()",2,1,2
"android.os.Environment.isEncryptedFilesystemEnabled()",1,1,1
"android.os.Environment.isExternalStorageEmulated()",1,3,4
"android.os.Environment.isExternalStorageRemovable()",1,1,1
"android.os.FileObserver.FileObserver(String)",1,1,1
"android.os.FileObserver.FileObserver(String,int)",1,1,1
"android.os.FileObserver.ObserverThread.ObserverThread()",1,1,1
"android.os.FileObserver.ObserverThread.init()",1,1,1
"android.os.FileObserver.ObserverThread.observe(int)",1,1,1
"android.os.FileObserver.ObserverThread.onEvent(int,int,String)",1,5,5
"android.os.FileObserver.ObserverThread.run()",1,1,1
"android.os.FileObserver.ObserverThread.startWatching(String,int,FileObserver)",1,2,2
"android.os.FileObserver.ObserverThread.startWatching(int,String,int)",1,1,1
"android.os.FileObserver.ObserverThread.stopWatching(int)",1,1,1
"android.os.FileObserver.ObserverThread.stopWatching(int,int)",1,1,1
"android.os.FileObserver.finalize()",1,1,1
"android.os.FileObserver.startWatching()",1,2,2
"android.os.FileObserver.stopWatching()",1,2,2
"android.os.FileUtils.copyFile(File,File)",1,1,2
"android.os.FileUtils.copyToFile(InputStream,File)",1,3,5
"android.os.FileUtils.getFatVolumeId(String)",1,1,1
"android.os.FileUtils.getFileStatus(String,FileStatus)",1,1,1
"android.os.FileUtils.getFileStatusNative(String,FileStatus)",1,1,1
"android.os.FileUtils.getPermissions(String,int[])",1,1,1
"android.os.FileUtils.isFilenameSafe(File)",1,1,1
"android.os.FileUtils.readTextFile(File,int,String)",9,7,22
"android.os.FileUtils.setPermissions(String,int,int,int)",1,1,1
"android.os.FileUtils.setUMask(int)",1,1,1
"android.os.FileUtils.sync(FileOutputStream)",1,2,3
"android.os.Handler.Handler()",2,6,7
"android.os.Handler.Handler(Callback)",2,6,7
"android.os.Handler.Handler(Looper)",1,1,1
"android.os.Handler.Handler(Looper,Callback)",1,1,1
"android.os.Handler.MessengerImpl.send(Message)",1,1,1
"android.os.Handler.dispatchMessage(Message)",4,3,4
"android.os.Handler.dump(Printer,String)",1,2,2
"android.os.Handler.getIMessenger()",2,1,2
"android.os.Handler.getLooper()",1,1,1
"android.os.Handler.getPostMessage(Runnable)",1,1,1
"android.os.Handler.getPostMessage(Runnable,Object)",1,1,1
"android.os.Handler.handleCallback(Message)",1,1,1
"android.os.Handler.handleMessage(Message)",1,1,1
"android.os.Handler.hasMessages(int)",1,1,1
"android.os.Handler.hasMessages(int,Object)",1,1,1
"android.os.Handler.obtainMessage()",1,1,1
"android.os.Handler.obtainMessage(int)",1,1,1
"android.os.Handler.obtainMessage(int,Object)",1,1,1
"android.os.Handler.obtainMessage(int,int,int)",1,1,1
"android.os.Handler.obtainMessage(int,int,int,Object)",1,1,1
"android.os.Handler.post(Runnable)",1,1,1
"android.os.Handler.postAtFrontOfQueue(Runnable)",1,1,1
"android.os.Handler.postAtTime(Runnable,Object,long)",1,1,1
"android.os.Handler.postAtTime(Runnable,long)",1,1,1
"android.os.Handler.postDelayed(Runnable,long)",1,1,1
"android.os.Handler.removeCallbacks(Runnable)",1,1,1
"android.os.Handler.removeCallbacks(Runnable,Object)",1,1,1
"android.os.Handler.removeCallbacksAndMessages(Object)",1,1,1
"android.os.Handler.removeMessages(int)",1,1,1
"android.os.Handler.removeMessages(int,Object)",1,1,1
"android.os.Handler.sendEmptyMessage(int)",1,1,1
"android.os.Handler.sendEmptyMessageAtTime(int,long)",1,1,1
"android.os.Handler.sendEmptyMessageDelayed(int,long)",1,1,1
"android.os.Handler.sendMessage(Message)",1,1,1
"android.os.Handler.sendMessageAtFrontOfQueue(Message)",1,2,2
"android.os.Handler.sendMessageAtTime(Message,long)",1,2,2
"android.os.Handler.sendMessageDelayed(Message,long)",1,1,2
"android.os.Handler.toString()",1,1,1
"android.os.HandlerThread.HandlerThread(String)",1,1,1
"android.os.HandlerThread.HandlerThread(String,int)",1,1,1
"android.os.HandlerThread.getLooper()",2,3,5
"android.os.HandlerThread.getThreadId()",1,1,1
"android.os.HandlerThread.onLooperPrepared()",1,1,1
"android.os.HandlerThread.quit()",2,2,2
"android.os.HandlerThread.run()",1,1,1
"android.os.LatencyTimer.LatencyTimer(int,int)",1,1,2
"android.os.LatencyTimer.getArray(String)",1,3,3
"android.os.LatencyTimer.sample(String,long)",1,2,3
"android.os.Looper.HandlerException.HandlerException(Message,Throwable)",1,1,1
"android.os.Looper.HandlerException.createMessage(Throwable)",1,2,2
"android.os.Looper.Looper()",1,1,1
"android.os.Looper.dump(Printer,String)",1,3,4
"android.os.Looper.getMainLooper()",1,1,1
"android.os.Looper.getQueue()",1,1,1
"android.os.Looper.getThread()",1,1,1
"android.os.Looper.loop()",5,5,7
"android.os.Looper.myLooper()",1,1,1
"android.os.Looper.myQueue()",1,1,1
"android.os.Looper.prepare()",2,1,2
"android.os.Looper.prepareMainLooper()",1,2,2
"android.os.Looper.quit()",1,1,1
"android.os.Looper.setMainLooper(Looper)",1,1,1
"android.os.Looper.setMessageLogging(Printer)",1,1,1
"android.os.Looper.toString()",1,1,1
"android.os.MemoryFile.MemoryFile(String,int)",1,2,2
"android.os.MemoryFile.MemoryInputStream.available()",2,1,2
"android.os.MemoryFile.MemoryInputStream.mark(int)",1,1,1
"android.os.MemoryFile.MemoryInputStream.markSupported()",1,1,1
"android.os.MemoryFile.MemoryInputStream.read()",2,1,3
"android.os.MemoryFile.MemoryInputStream.read(byte[],int,int)",3,1,6
"android.os.MemoryFile.MemoryInputStream.reset()",1,1,1
"android.os.MemoryFile.MemoryInputStream.skip(long)",1,1,2
"android.os.MemoryFile.MemoryOutputStream.write(byte[],int,int)",1,1,1
"android.os.MemoryFile.MemoryOutputStream.write(int)",1,1,2
"android.os.MemoryFile.allowPurging(boolean)",1,2,2
"android.os.MemoryFile.close()",1,2,2
"android.os.MemoryFile.deactivate()",1,3,3
"android.os.MemoryFile.finalize()",1,2,2
"android.os.MemoryFile.getFileDescriptor()",1,1,1
"android.os.MemoryFile.getInputStream()",1,1,1
"android.os.MemoryFile.getOutputStream()",1,1,1
"android.os.MemoryFile.getSize(FileDescriptor)",1,1,1
"android.os.MemoryFile.isClosed()",1,1,1
"android.os.MemoryFile.isDeactivated()",1,1,1
"android.os.MemoryFile.isPurgingAllowed()",1,1,1
"android.os.MemoryFile.length()",1,1,1
"android.os.MemoryFile.native_close(FileDescriptor)",1,1,1
"android.os.MemoryFile.native_get_size(FileDescriptor)",1,1,1
"android.os.MemoryFile.native_mmap(FileDescriptor,int,int)",1,1,1
"android.os.MemoryFile.native_munmap(int,int)",1,1,1
"android.os.MemoryFile.native_open(String,int)",1,1,1
"android.os.MemoryFile.native_pin(FileDescriptor,boolean)",1,1,1
"android.os.MemoryFile.native_read(FileDescriptor,int,byte[],int,int,int,boolean)",1,1,1
"android.os.MemoryFile.native_write(FileDescriptor,int,byte[],int,int,int,boolean)",1,1,1
"android.os.MemoryFile.readBytes(byte[],int,int,int)",3,1,9
"android.os.MemoryFile.writeBytes(byte[],int,int,int)",3,1,9
"android.os.Message.Message()",1,1,1
"android.os.Message.clearForRecycle()",1,1,1
"android.os.Message.copyFrom(Message)",1,2,2
"android.os.Message.describeContents()",1,1,1
"android.os.Message.getCallback()",1,1,1
"android.os.Message.getData()",1,1,2
"android.os.Message.getTarget()",1,1,1
"android.os.Message.getWhen()",1,1,1
"android.os.Message.isInUse()",1,1,1
"android.os.Message.markInUse()",1,1,1
"android.os.Message.obtain()",2,1,2
"android.os.Message.obtain(Handler)",1,1,1
"android.os.Message.obtain(Handler,Runnable)",1,1,1
"android.os.Message.obtain(Handler,int)",1,1,1
"android.os.Message.obtain(Handler,int,Object)",1,1,1
"android.os.Message.obtain(Handler,int,int,int)",1,1,1
"android.os.Message.obtain(Handler,int,int,int,Object)",1,1,1
"android.os.Message.obtain(Message)",1,1,2
"android.os.Message.peekData()",1,1,1
"android.os.Message.readFromParcel(Parcel)",1,2,2
"android.os.Message.recycle()",1,2,2
"android.os.Message.sendToTarget()",1,1,1
"android.os.Message.setData(Bundle)",1,1,1
"android.os.Message.setTarget(Handler)",1,1,1
"android.os.Message.toString()",1,1,1
"android.os.Message.toString(long)",1,4,4
"android.os.Message.writeToParcel(Parcel,int)",3,2,4
"android.os.MessageQueue.MessageQueue()",1,1,1
"android.os.MessageQueue.addIdleHandler(IdleHandler)",2,1,2
"android.os.MessageQueue.enqueueMessage(Message,long)",4,3,12
"android.os.MessageQueue.finalize()",1,1,1
"android.os.MessageQueue.nativeDestroy()",1,1,1
"android.os.MessageQueue.nativeInit()",1,1,1
"android.os.MessageQueue.nativePollOnce(int,int)",1,1,1
"android.os.MessageQueue.nativeWake(int)",1,1,1
"android.os.MessageQueue.next()",5,11,12
"android.os.MessageQueue.removeCallbacksAndMessages(Handler,Object)",4,5,10
"android.os.MessageQueue.removeIdleHandler(IdleHandler)",1,1,1
"android.os.MessageQueue.removeMessages(Handler,Runnable,Object)",5,5,13
"android.os.MessageQueue.removeMessages(Handler,int,Object,boolean)",7,5,14
"android.os.Messenger.Messenger(Handler)",1,1,1
"android.os.Messenger.Messenger(IBinder)",1,1,1
"android.os.Messenger.describeContents()",1,1,1
"android.os.Messenger.equals(Object)",2,1,3
"android.os.Messenger.getBinder()",1,1,1
"android.os.Messenger.hashCode()",1,1,1
"android.os.Messenger.readMessengerOrNullFromParcel(Parcel)",1,1,2
"android.os.Messenger.send(Message)",1,1,1
"android.os.Messenger.writeMessengerOrNullToParcel(Messenger,Parcel)",1,2,2
"android.os.Messenger.writeToParcel(Parcel,int)",1,1,1
"android.os.Parcel.Parcel(int)",1,1,2
"android.os.Parcel.appendFrom(Parcel,int,int)",1,1,1
"android.os.Parcel.closeFileDescriptor(FileDescriptor)",1,1,1
"android.os.Parcel.createBinderArray()",2,3,3
"android.os.Parcel.createBinderArrayList()",2,2,3
"android.os.Parcel.createBooleanArray()",2,4,4
"android.os.Parcel.createByteArray()",1,1,1
"android.os.Parcel.createCharArray()",2,4,4
"android.os.Parcel.createDoubleArray()",2,4,4
"android.os.Parcel.createFloatArray()",2,4,4
"android.os.Parcel.createIntArray()",2,4,4
"android.os.Parcel.createLongArray()",2,4,4
"android.os.Parcel.createStringArray()",2,3,3
"android.os.Parcel.createStringArrayList()",2,2,3
"android.os.Parcel.createTypedArray(Creator<T>)",2,3,4
"android.os.Parcel.createTypedArrayList(Creator<T>)",2,3,4
"android.os.Parcel.dataAvail()",1,1,1
"android.os.Parcel.dataCapacity()",1,1,1
"android.os.Parcel.dataPosition()",1,1,1
"android.os.Parcel.dataSize()",1,1,1
"android.os.Parcel.destroy()",1,1,1
"android.os.Parcel.enforceInterface(String)",1,1,1
"android.os.Parcel.finalize()",1,3,3
"android.os.Parcel.freeBuffer()",1,1,1
"android.os.Parcel.hasFileDescriptors()",1,1,1
"android.os.Parcel.init(int)",1,1,1
"android.os.Parcel.internalReadFileDescriptor()",1,1,1
"android.os.Parcel.marshall()",1,1,1
"android.os.Parcel.obtain()",3,1,4
"android.os.Parcel.obtain(int)",3,3,4
"android.os.Parcel.openFileDescriptor(String,int)",1,1,1
"android.os.Parcel.readArray(ClassLoader)",2,1,2
"android.os.Parcel.readArrayInternal(Object[],int,ClassLoader)",1,2,2
"android.os.Parcel.readArrayList(ClassLoader)",2,1,2
"android.os.Parcel.readBinderArray(IBinder[])",2,3,3
"android.os.Parcel.readBinderList(List<IBinder>)",1,4,5
"android.os.Parcel.readBooleanArray(boolean[])",2,3,3
"android.os.Parcel.readBundle()",1,1,1
"android.os.Parcel.readBundle(ClassLoader)",2,2,3
"android.os.Parcel.readByte()",1,1,1
"android.os.Parcel.readByteArray(byte[])",2,2,2
"android.os.Parcel.readCharArray(char[])",2,3,3
"android.os.Parcel.readCharSequence()",1,1,1
"android.os.Parcel.readCharSequenceArray()",1,3,3
"android.os.Parcel.readDouble()",1,1,1
"android.os.Parcel.readDoubleArray(double[])",2,3,3
"android.os.Parcel.readException()",1,2,2
"android.os.Parcel.readException(int,String)",6,2,6
"android.os.Parcel.readExceptionCode()",2,3,3
"android.os.Parcel.readFileDescriptor()",1,1,2
"android.os.Parcel.readFloat()",1,1,1
"android.os.Parcel.readFloatArray(float[])",2,3,3
"android.os.Parcel.readHashMap(ClassLoader)",2,1,2
"android.os.Parcel.readInt()",1,1,1
"android.os.Parcel.readIntArray(int[])",2,3,3
"android.os.Parcel.readList(List,ClassLoader)",1,1,1
"android.os.Parcel.readListInternal(List,int,ClassLoader)",1,2,2
"android.os.Parcel.readLong()",1,1,1
"android.os.Parcel.readLongArray(long[])",2,3,3
"android.os.Parcel.readMap(Map,ClassLoader)",1,1,1
"android.os.Parcel.readMapInternal(Map,int,ClassLoader)",1,2,2
"android.os.Parcel.readParcelable(ClassLoader)",4,6,10
"android.os.Parcel.readParcelableArray(ClassLoader)",2,2,3
"android.os.Parcel.readSerializable()",2,1,4
"android.os.Parcel.readSparseArray(ClassLoader)",2,1,2
"android.os.Parcel.readSparseArrayInternal(SparseArray,int,ClassLoader)",1,2,2
"android.os.Parcel.readSparseBooleanArray()",2,1,2
"android.os.Parcel.readSparseBooleanArrayInternal(SparseBooleanArray,int)",1,2,2
"android.os.Parcel.readString()",1,1,1
"android.os.Parcel.readStringArray()",1,3,3
"android.os.Parcel.readStringArray(String[])",2,3,3
"android.os.Parcel.readStringList(List<String>)",1,4,5
"android.os.Parcel.readStrongBinder()",1,1,1
"android.os.Parcel.readTypedArray(Creator<T>)",1,1,1
"android.os.Parcel.readTypedArray(T[],Creator<T>)",2,4,4
"android.os.Parcel.readTypedList(List<T>,Creator<T>)",1,6,7
"android.os.Parcel.readValue(ClassLoader)",28,27,28
"android.os.Parcel.recycle()",3,1,5
"android.os.Parcel.setDataCapacity(int)",1,1,1
"android.os.Parcel.setDataPosition(int)",1,1,1
"android.os.Parcel.setDataSize(int)",1,1,1
"android.os.Parcel.unmarshall(byte[],int,int)",1,1,1
"android.os.Parcel.writeArray(Object[])",2,3,3
"android.os.Parcel.writeBinderArray(IBinder[])",1,3,3
"android.os.Parcel.writeBinderList(List<IBinder>)",2,3,3
"android.os.Parcel.writeBooleanArray(boolean[])",1,3,4
"android.os.Parcel.writeBundle(Bundle)",2,2,2
"android.os.Parcel.writeByte(byte)",1,1,1
"android.os.Parcel.writeByteArray(byte[])",1,1,2
"android.os.Parcel.writeByteArray(byte[],int,int)",3,2,5
"android.os.Parcel.writeCharArray(char[])",1,3,3
"android.os.Parcel.writeCharSequence(CharSequence)",1,1,1
"android.os.Parcel.writeCharSequenceArray(CharSequence[])",1,3,3
"android.os.Parcel.writeDouble(double)",1,1,1
"android.os.Parcel.writeDoubleArray(double[])",1,3,3
"android.os.Parcel.writeException(Exception)",3,1,8
"android.os.Parcel.writeFileDescriptor(FileDescriptor)",1,1,1
"android.os.Parcel.writeFloat(float)",1,1,1
"android.os.Parcel.writeFloatArray(float[])",1,3,3
"android.os.Parcel.writeInt(int)",1,1,1
"android.os.Parcel.writeIntArray(int[])",1,3,3
"android.os.Parcel.writeInterfaceToken(String)",1,1,1
"android.os.Parcel.writeList(List)",2,3,3
"android.os.Parcel.writeLong(long)",1,1,1
"android.os.Parcel.writeLongArray(long[])",1,3,3
"android.os.Parcel.writeMap(Map)",1,1,1
"android.os.Parcel.writeMapInternal(Map<String, Object>)",2,3,3
"android.os.Parcel.writeNative(byte[],int,int)",1,1,1
"android.os.Parcel.writeNoException()",1,2,2
"android.os.Parcel.writeParcelable(Parcelable,int)",2,2,2
"android.os.Parcel.writeParcelableArray(T[],int)",1,3,3
"android.os.Parcel.writeSerializable(Serializable)",2,2,3
"android.os.Parcel.writeSparseArray(SparseArray<Object>)",2,3,3
"android.os.Parcel.writeSparseBooleanArray(SparseBooleanArray)",2,3,4
"android.os.Parcel.writeString(String)",1,1,1
"android.os.Parcel.writeStringArray(String[])",1,3,3
"android.os.Parcel.writeStringList(List<String>)",2,3,3
"android.os.Parcel.writeStrongBinder(IBinder)",1,1,1
"android.os.Parcel.writeStrongInterface(IInterface)",1,2,2
"android.os.Parcel.writeTypedArray(T[],int)",1,4,4
"android.os.Parcel.writeTypedList(List<T>)",2,4,4
"android.os.Parcel.writeValue(Object)",26,26,27
"android.os.ParcelFileDescriptor.AutoCloseInputStream.AutoCloseInputStream(ParcelFileDescriptor)",1,1,1
"android.os.ParcelFileDescriptor.AutoCloseInputStream.close()",1,1,1
"android.os.ParcelFileDescriptor.AutoCloseOutputStream.AutoCloseOutputStream(ParcelFileDescriptor)",1,1,1
"android.os.ParcelFileDescriptor.AutoCloseOutputStream.close()",1,1,1
"android.os.ParcelFileDescriptor.ParcelFileDescriptor(FileDescriptor)",2,1,2
"android.os.ParcelFileDescriptor.ParcelFileDescriptor(ParcelFileDescriptor)",1,1,1
"android.os.ParcelFileDescriptor.close()",2,2,3
"android.os.ParcelFileDescriptor.createPipe()",2,1,2
"android.os.ParcelFileDescriptor.createPipeNative(FileDescriptor[])",1,1,1
"android.os.ParcelFileDescriptor.describeContents()",1,1,1
"android.os.ParcelFileDescriptor.finalize()",1,2,2
"android.os.ParcelFileDescriptor.fromData(byte[],String)",2,2,4
"android.os.ParcelFileDescriptor.fromSocket(Socket)",1,1,2
"android.os.ParcelFileDescriptor.getFileDescriptor()",1,1,1
"android.os.ParcelFileDescriptor.getFileDescriptorFromSocket(Socket)",1,1,1
"android.os.ParcelFileDescriptor.getStatSize()",1,1,1
"android.os.ParcelFileDescriptor.open(File,int)",2,3,5
"android.os.ParcelFileDescriptor.seekTo(long)",1,1,1
"android.os.ParcelFileDescriptor.toString()",1,1,1
"android.os.ParcelFileDescriptor.writeToParcel(Parcel,int)",1,2,4
"android.os.ParcelFormatException.ParcelFormatException()",1,1,1
"android.os.ParcelFormatException.ParcelFormatException(String)",1,1,1
"android.os.ParcelUuid.ParcelUuid(UUID)",1,1,1
"android.os.ParcelUuid.describeContents()",1,1,1
"android.os.ParcelUuid.equals(Object)",4,1,4
"android.os.ParcelUuid.fromString(String)",1,1,1
"android.os.ParcelUuid.getUuid()",1,1,1
"android.os.ParcelUuid.hashCode()",1,1,1
"android.os.ParcelUuid.toString()",1,1,1
"android.os.ParcelUuid.writeToParcel(Parcel,int)",1,1,1
"android.os.PatternMatcher.PatternMatcher(Parcel)",1,1,1
"android.os.PatternMatcher.PatternMatcher(String,int)",1,1,1
"android.os.PatternMatcher.describeContents()",1,1,1
"android.os.PatternMatcher.getPath()",1,1,1
"android.os.PatternMatcher.getType()",1,1,1
"android.os.PatternMatcher.match(String)",1,1,1
"android.os.PatternMatcher.matchPattern(String,String,int)",18,19,31
"android.os.PatternMatcher.toString()",2,2,4
"android.os.PatternMatcher.writeToParcel(Parcel,int)",1,1,1
"android.os.PerformanceCollector.PerformanceCollector()",1,1,1
"android.os.PerformanceCollector.PerformanceCollector(PerformanceResultsWriter)",1,1,1
"android.os.PerformanceCollector.addIteration(String)",1,1,1
"android.os.PerformanceCollector.addMeasurement(String,String)",1,2,2
"android.os.PerformanceCollector.addMeasurement(String,float)",1,2,2
"android.os.PerformanceCollector.addMeasurement(String,long)",1,2,2
"android.os.PerformanceCollector.beginSnapshot(String)",1,2,2
"android.os.PerformanceCollector.endPerformanceSnapshot()",1,3,3
"android.os.PerformanceCollector.endSnapshot()",1,2,2
"android.os.PerformanceCollector.getAllocCounts()",1,1,1
"android.os.PerformanceCollector.getBinderCounts()",1,1,1
"android.os.PerformanceCollector.setPerformanceResultsWriter(PerformanceResultsWriter)",1,1,1
"android.os.PerformanceCollector.startAllocCounting()",1,1,1
"android.os.PerformanceCollector.startPerformanceSnapshot()",1,2,2
"android.os.PerformanceCollector.startTiming(String)",1,2,2
"android.os.PerformanceCollector.stopAllocCounting()",1,1,1
"android.os.PerformanceCollector.stopTiming(String)",1,2,2
"android.os.Power.Power()",1,1,1
"android.os.Power.acquireWakeLock(int,String)",1,1,1
"android.os.Power.reboot(String)",1,1,1
"android.os.Power.rebootNative(String)",1,1,1
"android.os.Power.releaseWakeLock(String)",1,1,1
"android.os.Power.setLastUserActivityTimeout(long)",1,1,1
"android.os.Power.setScreenState(boolean)",1,1,1
"android.os.Power.shutdown()",1,1,1
"android.os.PowerManager.PowerManager()",1,1,1
"android.os.PowerManager.PowerManager(IPowerManager,Handler)",1,1,1
"android.os.PowerManager.WakeLock.WakeLock(int,String)",2,2,3
"android.os.PowerManager.WakeLock.acquire()",1,2,4
"android.os.PowerManager.WakeLock.acquire(long)",1,1,1
"android.os.PowerManager.WakeLock.finalize()",1,2,3
"android.os.PowerManager.WakeLock.isHeld()",1,1,1
"android.os.PowerManager.WakeLock.release()",1,1,1
"android.os.PowerManager.WakeLock.release(int)",2,2,5
"android.os.PowerManager.WakeLock.setReferenceCounted(boolean)",1,1,1
"android.os.PowerManager.WakeLock.setWorkSource(WorkSource)",1,6,9
"android.os.PowerManager.WakeLock.toString()",1,1,1
"android.os.PowerManager.getSupportedWakeLockFlags()",1,1,2
"android.os.PowerManager.goToSleep(long)",1,1,2
"android.os.PowerManager.isScreenOn()",1,1,2
"android.os.PowerManager.newWakeLock(int,String)",2,1,2
"android.os.PowerManager.reboot(String)",1,1,2
"android.os.PowerManager.setBacklightBrightness(int)",1,1,2
"android.os.PowerManager.userActivity(long,boolean)",1,1,2
"android.os.Process.getElapsedCpuTime()",1,1,1
"android.os.Process.getFreeMemory()",1,1,1
"android.os.Process.getGidForName(String)",1,1,1
"android.os.Process.getPids(String,int[])",1,1,1
"android.os.Process.getPss(int)",1,1,1
"android.os.Process.getThreadPriority(int)",1,1,1
"android.os.Process.getUidForName(String)",1,1,1
"android.os.Process.getUidForPid(int)",1,1,1
"android.os.Process.invokeStaticMain(String)",1,2,2
"android.os.Process.killProcess(int)",1,1,1
"android.os.Process.killProcessQuiet(int)",1,1,1
"android.os.Process.myPid()",1,1,1
"android.os.Process.myTid()",1,1,1
"android.os.Process.myUid()",1,1,1
"android.os.Process.openZygoteSocketIfNeeded()",3,6,10
"android.os.Process.parseProcLine(byte[],int,int,int[],String[],long[],float[])",1,1,1
"android.os.Process.readProcFile(String,int[],String[],long[],float[])",1,1,1
"android.os.Process.readProcLines(String,String[],long[])",1,1,1
"android.os.Process.sendSignal(int,int)",1,1,1
"android.os.Process.sendSignalQuiet(int,int)",1,1,1
"android.os.Process.setArgV0(String)",1,1,1
"android.os.Process.setCanSelfBackground(boolean)",1,1,1
"android.os.Process.setGid(int)",1,1,1
"android.os.Process.setOomAdj(int,int)",1,1,1
"android.os.Process.setProcessGroup(int,int)",1,1,1
"android.os.Process.setThreadGroup(int,int)",1,1,1
"android.os.Process.setThreadPriority(int)",1,1,1
"android.os.Process.setThreadPriority(int,int)",1,1,1
"android.os.Process.setUid(int)",1,1,1
"android.os.Process.start(String,String,int,int,int[],int,String[])",2,4,4
"android.os.Process.start(String,int,int,int[],int,String[])",1,1,1
"android.os.Process.startViaZygote(String,String,int,int,int[],int,String[])",2,11,13
"android.os.Process.supportsProcesses()",1,1,1
"android.os.Process.zygoteSendArgsAndGetPid(ArrayList<String>)",4,5,7
"android.os.RecoverySystem.RecoverySystem()",1,1,1
"android.os.RecoverySystem.bootCommand(Context,String)",1,1,1
"android.os.RecoverySystem.getTrustedCerts(File)",1,2,3
"android.os.RecoverySystem.handleAftermath()",3,5,7
"android.os.RecoverySystem.installPackage(Context,File)",1,1,1
"android.os.RecoverySystem.rebootToggleEFS(Context,boolean)",1,2,2
"android.os.RecoverySystem.rebootWipeUserData(Context)",1,1,1
"android.os.RecoverySystem.verifyPackage(File,ProgressListener,File)",16,10,32
"android.os.Registrant.Registrant(Handler,int,Object)",1,1,1
"android.os.Registrant.clear()",1,1,1
"android.os.Registrant.getHandler()",2,1,2
"android.os.Registrant.internalNotifyRegistrant(Object,Throwable)",1,2,2
"android.os.Registrant.messageForRegistrant()",2,2,2
"android.os.Registrant.notifyException(Throwable)",1,1,1
"android.os.Registrant.notifyRegistrant()",1,1,1
"android.os.Registrant.notifyRegistrant(AsyncResult)",1,1,1
"android.os.Registrant.notifyResult(Object)",1,1,1
"android.os.RegistrantList.add(Handler,int,Object)",1,1,1
"android.os.RegistrantList.add(Registrant)",1,1,1
"android.os.RegistrantList.addUnique(Handler,int,Object)",1,1,1
"android.os.RegistrantList.get(int)",1,1,1
"android.os.RegistrantList.internalNotifyRegistrants(Object,Throwable)",1,2,2
"android.os.RegistrantList.notifyException(Throwable)",1,1,1
"android.os.RegistrantList.notifyRegistrants()",1,1,1
"android.os.RegistrantList.notifyRegistrants(AsyncResult)",1,1,1
"android.os.RegistrantList.notifyResult(Object)",1,1,1
"android.os.RegistrantList.remove(Handler)",1,3,4
"android.os.RegistrantList.removeCleared()",1,3,3
"android.os.RegistrantList.size()",1,1,1
"android.os.RemoteCallback.DeliverResult.DeliverResult(Bundle)",1,1,1
"android.os.RemoteCallback.DeliverResult.run()",1,1,1
"android.os.RemoteCallback.LocalCallback.sendResult(Bundle)",1,1,1
"android.os.RemoteCallback.RemoteCallback(Handler)",1,1,1
"android.os.RemoteCallback.RemoteCallback(IRemoteCallback)",1,1,1
"android.os.RemoteCallback.RemoteCallbackProxy.RemoteCallbackProxy(IRemoteCallback)",1,1,1
"android.os.RemoteCallback.RemoteCallbackProxy.onResult(Bundle)",1,1,1
"android.os.RemoteCallback.describeContents()",1,1,1
"android.os.RemoteCallback.equals(Object)",2,1,3
"android.os.RemoteCallback.hashCode()",1,1,1
"android.os.RemoteCallback.sendResult(Bundle)",1,1,1
"android.os.RemoteCallback.writeToParcel(Parcel,int)",1,1,1
"android.os.RemoteCallbackList.Callback.Callback(E,Object)",1,1,1
"android.os.RemoteCallbackList.Callback.binderDied()",1,1,1
"android.os.RemoteCallbackList.beginBroadcast()",3,1,6
"android.os.RemoteCallbackList.finishBroadcast()",2,1,4
"android.os.RemoteCallbackList.getBroadcastCookie(int)",1,1,1
"android.os.RemoteCallbackList.getBroadcastItem(int)",1,1,1
"android.os.RemoteCallbackList.kill()",1,2,2
"android.os.RemoteCallbackList.onCallbackDied(E)",1,1,1
"android.os.RemoteCallbackList.onCallbackDied(E,Object)",1,1,1
"android.os.RemoteCallbackList.register(E)",1,1,1
"android.os.RemoteCallbackList.register(E,Object)",2,1,3
"android.os.RemoteCallbackList.unregister(E)",2,2,2
"android.os.RemoteException.RemoteException()",1,1,1
"android.os.RemoteMailException.RemoteMailException()",1,1,1
"android.os.RemoteMailException.RemoteMailException(String)",1,1,1
"android.os.ResultReceiver.MyResultReceiver.send(int,Bundle)",1,2,2
"android.os.ResultReceiver.MyRunnable.MyRunnable(int,Bundle)",1,1,1
"android.os.ResultReceiver.MyRunnable.run()",1,1,1
"android.os.ResultReceiver.ResultReceiver(Handler)",1,1,1
"android.os.ResultReceiver.ResultReceiver(Parcel)",1,1,1
"android.os.ResultReceiver.describeContents()",1,1,1
"android.os.ResultReceiver.onReceiveResult(int,Bundle)",1,1,1
"android.os.ResultReceiver.send(int,Bundle)",2,4,5
"android.os.ResultReceiver.writeToParcel(Parcel,int)",1,1,2
"android.os.ServiceManager.addService(String,IBinder)",1,2,2
"android.os.ServiceManager.checkService(String)",2,3,3
"android.os.ServiceManager.getIServiceManager()",2,1,2
"android.os.ServiceManager.getService(String)",2,3,3
"android.os.ServiceManager.initServiceCache(Map<String, IBinder>)",2,2,3
"android.os.ServiceManager.listServices()",1,2,2
"android.os.ServiceManagerNative.ServiceManagerNative()",1,1,1
"android.os.ServiceManagerNative.asBinder()",1,1,1
"android.os.ServiceManagerNative.asInterface(IBinder)",3,1,3
"android.os.ServiceManagerNative.onTransact(int,Parcel,Parcel,int)",6,6,7
"android.os.ServiceManagerProxy.ServiceManagerProxy(IBinder)",1,1,1
"android.os.ServiceManagerProxy.addService(String,IBinder)",1,1,1
"android.os.ServiceManagerProxy.asBinder()",1,1,1
"android.os.ServiceManagerProxy.checkService(String)",1,1,1
"android.os.ServiceManagerProxy.getService(String)",1,1,1
"android.os.ServiceManagerProxy.listServices()",1,1,1
"android.os.ServiceManagerProxy.setPermissionController(IPermissionController)",1,1,1
"android.os.StatFs.StatFs(String)",1,1,1
"android.os.StatFs.finalize()",1,1,1
"android.os.StatFs.getAvailableBlocks()",1,1,1
"android.os.StatFs.getBlockCount()",1,1,1
"android.os.StatFs.getBlockSize()",1,1,1
"android.os.StatFs.getFreeBlocks()",1,1,1
"android.os.StatFs.native_finalize()",1,1,1
"android.os.StatFs.native_restat(String)",1,1,1
"android.os.StatFs.native_setup(String)",1,1,1
"android.os.StatFs.restat(String)",1,1,1
"android.os.StrictMode.AndroidBlockGuardPolicy.AndroidBlockGuardPolicy(int)",1,1,1
"android.os.StrictMode.AndroidBlockGuardPolicy.getPolicyMask()",1,1,1
"android.os.StrictMode.AndroidBlockGuardPolicy.handleViolation(ViolationInfo)",9,13,23
"android.os.StrictMode.AndroidBlockGuardPolicy.handleViolationWithTimingAttempt(ViolationInfo)",4,6,11
"android.os.StrictMode.AndroidBlockGuardPolicy.onCustomSlowCall(String)",3,1,3
"android.os.StrictMode.AndroidBlockGuardPolicy.onNetwork()",4,1,4
"android.os.StrictMode.AndroidBlockGuardPolicy.onReadFromDisk()",3,1,3
"android.os.StrictMode.AndroidBlockGuardPolicy.onWriteToDisk()",3,1,3
"android.os.StrictMode.AndroidBlockGuardPolicy.setPolicyMask(int)",1,1,1
"android.os.StrictMode.AndroidBlockGuardPolicy.startHandlingViolationException(BlockGuardPolicyException)",1,1,1
"android.os.StrictMode.AndroidBlockGuardPolicy.toString()",1,1,1
"android.os.StrictMode.AndroidCloseGuardReporter.report(String,Throwable)",1,1,1
"android.os.StrictMode.Span.Span()",1,1,1
"android.os.StrictMode.Span.Span(ThreadSpanState)",1,1,1
"android.os.StrictMode.Span.finish()",2,2,7
"android.os.StrictMode.StrictMode()",1,1,1
"android.os.StrictMode.StrictModeCustomViolation.StrictModeCustomViolation(int,String)",1,1,1
"android.os.StrictMode.StrictModeDiskReadViolation.StrictModeDiskReadViolation(int)",1,1,1
"android.os.StrictMode.StrictModeDiskWriteViolation.StrictModeDiskWriteViolation(int)",1,1,1
"android.os.StrictMode.StrictModeNetworkViolation.StrictModeNetworkViolation(int)",1,1,1
"android.os.StrictMode.StrictModeViolation.StrictModeViolation(int,int,String)",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.Builder()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.Builder(ThreadPolicy)",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.build()",1,2,3
"android.os.StrictMode.ThreadPolicy.Builder.detectAll()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.detectCustomSlowCalls()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.detectDiskReads()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.detectDiskWrites()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.detectNetwork()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.disable(int)",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.enable(int)",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.penaltyDeath()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.penaltyDeathOnNetwork()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.penaltyDialog()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.penaltyDropBox()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.penaltyFlashScreen()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.penaltyLog()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.permitAll()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.permitCustomSlowCalls()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.permitDiskReads()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.permitDiskWrites()",1,1,1
"android.os.StrictMode.ThreadPolicy.Builder.permitNetwork()",1,1,1
"android.os.StrictMode.ThreadPolicy.ThreadPolicy(int)",1,1,1
"android.os.StrictMode.ThreadPolicy.toString()",1,1,1
"android.os.StrictMode.ViolationInfo.ViolationInfo()",1,1,1
"android.os.StrictMode.ViolationInfo.ViolationInfo(Parcel)",1,1,1
"android.os.StrictMode.ViolationInfo.ViolationInfo(Parcel,boolean)",1,1,2
"android.os.StrictMode.ViolationInfo.ViolationInfo(Throwable,int)",1,2,6
"android.os.StrictMode.ViolationInfo.dump(Printer,String)",1,7,7
"android.os.StrictMode.ViolationInfo.hashCode()",1,4,5
"android.os.StrictMode.ViolationInfo.writeToParcel(Parcel,int)",1,1,1
"android.os.StrictMode.VmPolicy.Builder.build()",1,2,3
"android.os.StrictMode.VmPolicy.Builder.detectAll()",1,1,1
"android.os.StrictMode.VmPolicy.Builder.detectLeakedClosableObjects()",1,1,1
"android.os.StrictMode.VmPolicy.Builder.detectLeakedSqlLiteObjects()",1,1,1
"android.os.StrictMode.VmPolicy.Builder.enable(int)",1,1,1
"android.os.StrictMode.VmPolicy.Builder.penaltyDeath()",1,1,1
"android.os.StrictMode.VmPolicy.Builder.penaltyDropBox()",1,1,1
"android.os.StrictMode.VmPolicy.Builder.penaltyLog()",1,1,1
"android.os.StrictMode.VmPolicy.VmPolicy(int)",1,1,1
"android.os.StrictMode.VmPolicy.toString()",1,1,1
"android.os.StrictMode.allowThreadDiskReads()",1,2,2
"android.os.StrictMode.allowThreadDiskWrites()",1,2,2
"android.os.StrictMode.amTheSystemServerProcess()",4,3,5
"android.os.StrictMode.clearGatheredViolations()",1,1,1
"android.os.StrictMode.conditionallyEnableDebugLogging()",2,4,7
"android.os.StrictMode.dropboxViolationAsync(int,ViolationInfo)",2,6,6
"android.os.StrictMode.enableDeathOnNetwork()",1,1,1
"android.os.StrictMode.enableDefaults()",1,1,1
"android.os.StrictMode.enterCriticalSpan(String)",3,3,7
"android.os.StrictMode.executeDeathPenalty(ViolationInfo)",1,1,1
"android.os.StrictMode.getThreadPolicy()",1,1,1
"android.os.StrictMode.getThreadPolicyMask()",1,1,1
"android.os.StrictMode.getVmPolicy()",1,1,1
"android.os.StrictMode.hasGatheredViolations()",1,1,1
"android.os.StrictMode.noteDiskRead()",2,1,2
"android.os.StrictMode.noteDiskWrite()",2,1,2
"android.os.StrictMode.noteSlowCall(String)",2,1,2
"android.os.StrictMode.onBinderStrictModePolicyChange(int)",1,1,1
"android.os.StrictMode.onSqliteObjectLeaked(String,Throwable)",1,1,1
"android.os.StrictMode.onVmPolicyViolation(String,Throwable)",2,6,7
"android.os.StrictMode.parsePolicyFromMessage(String)",3,2,5
"android.os.StrictMode.parseViolationFromMessage(String)",3,2,5
"android.os.StrictMode.readAndHandleBinderCallViolations(Parcel)",1,4,4
"android.os.StrictMode.setBlockGuardPolicy(int)",2,3,3
"android.os.StrictMode.setCloseGuardEnabled(boolean)",1,2,2
"android.os.StrictMode.setThreadPolicy(ThreadPolicy)",1,1,1
"android.os.StrictMode.setThreadPolicyMask(int)",1,1,1
"android.os.StrictMode.setVmPolicy(VmPolicy)",1,1,1
"android.os.StrictMode.tooManyViolationsThisLoop()",1,1,1
"android.os.StrictMode.vmClosableObjectLeaksEnabled()",1,1,1
"android.os.StrictMode.vmSqliteObjectLeaksEnabled()",1,1,1
"android.os.StrictMode.writeGatheredViolationsToParcel(Parcel)",1,4,4
"android.os.SystemClock.SystemClock()",1,1,1
"android.os.SystemClock.currentThreadTimeMillis()",1,1,1
"android.os.SystemClock.elapsedRealtime()",1,1,1
"android.os.SystemClock.setCurrentTimeMillis(long)",1,1,1
"android.os.SystemClock.sleep(long)",1,3,4
"android.os.SystemClock.uptimeMillis()",1,1,1
"android.os.SystemProperties.get(String)",2,1,2
"android.os.SystemProperties.get(String,String)",2,1,2
"android.os.SystemProperties.getBoolean(String,boolean)",2,1,2
"android.os.SystemProperties.getInt(String,int)",2,1,2
"android.os.SystemProperties.getLong(String,long)",2,1,2
"android.os.SystemProperties.native_get(String)",1,1,1
"android.os.SystemProperties.native_get(String,String)",1,1,1
"android.os.SystemProperties.native_get_boolean(String,boolean)",1,1,1
"android.os.SystemProperties.native_get_int(String,int)",1,1,1
"android.os.SystemProperties.native_get_long(String,long)",1,1,1
"android.os.SystemProperties.native_set(String,String)",1,1,1
"android.os.SystemProperties.set(String,String)",3,2,4
"android.os.SystemService.restart(String)",1,1,1
"android.os.SystemService.start(String)",1,1,1
"android.os.SystemService.stop(String)",1,1,1
"android.os.TokenWatcher.Death.Death(IBinder,String)",1,1,1
"android.os.TokenWatcher.Death.binderDied()",1,1,1
"android.os.TokenWatcher.Death.finalize()",1,2,2
"android.os.TokenWatcher.TokenWatcher(Handler,String)",1,1,2
"android.os.TokenWatcher.acquire(IBinder,String)",1,2,4
"android.os.TokenWatcher.cleanup(IBinder,boolean)",1,4,5
"android.os.TokenWatcher.dump()",1,2,2
"android.os.TokenWatcher.isAcquired()",1,1,1
"android.os.TokenWatcher.release(IBinder)",1,1,1
"android.os.TokenWatcher.sendNotificationLocked(boolean)",1,3,4
"android.os.UEventObserver.UEvent.UEvent(String)",3,3,5
"android.os.UEventObserver.UEvent.get(String)",1,1,1
"android.os.UEventObserver.UEvent.get(String,String)",1,1,2
"android.os.UEventObserver.UEvent.toString()",1,1,1
"android.os.UEventObserver.UEventThread.UEventThread()",1,1,1
"android.os.UEventObserver.UEventThread.addObserver(String,UEventObserver)",1,1,1
"android.os.UEventObserver.UEventThread.removeObserver(UEventObserver)",4,4,4
"android.os.UEventObserver.UEventThread.run()",1,5,5
"android.os.UEventObserver.ensureThreadStarted()",1,2,2
"android.os.UEventObserver.finalize()",1,1,1
"android.os.UEventObserver.native_setup()",1,1,1
"android.os.UEventObserver.next_event(byte[])",1,1,1
"android.os.UEventObserver.startObserving(String)",1,1,1
"android.os.UEventObserver.stopObserving()",1,1,1
"android.os.Vibrator.Vibrator()",1,1,1
"android.os.Vibrator.cancel()",2,2,3
"android.os.Vibrator.hasVibrator()",2,2,3
"android.os.Vibrator.vibrate(long)",2,3,3
"android.os.Vibrator.vibrate(long[],int)",3,4,4
"android.os.WorkSource.WorkSource()",1,1,1
"android.os.WorkSource.WorkSource(Parcel)",1,1,1
"android.os.WorkSource.WorkSource(WorkSource)",2,2,3
"android.os.WorkSource.WorkSource(int)",1,1,1
"android.os.WorkSource.add(WorkSource)",1,1,1
"android.os.WorkSource.add(int)",1,1,1
"android.os.WorkSource.addLocked(int)",2,2,3
"android.os.WorkSource.addReturningNewbs(WorkSource)",1,1,1
"android.os.WorkSource.addReturningNewbs(int)",1,1,1
"android.os.WorkSource.clear()",1,1,1
"android.os.WorkSource.describeContents()",1,1,1
"android.os.WorkSource.diff(WorkSource)",4,1,4
"android.os.WorkSource.get(int)",1,1,1
"android.os.WorkSource.remove(WorkSource)",1,4,7
"android.os.WorkSource.set(WorkSource)",2,3,5
"android.os.WorkSource.set(int)",1,1,2
"android.os.WorkSource.setReturningDiffs(WorkSource)",2,1,3
"android.os.WorkSource.size()",1,1,1
"android.os.WorkSource.updateLocked(WorkSource,boolean,boolean)",1,14,20
"android.os.WorkSource.writeToParcel(Parcel,int)",1,1,1
"android.os.ZygoteStartFailedEx.ZygoteStartFailedEx()",1,1,1
"android.os.ZygoteStartFailedEx.ZygoteStartFailedEx(String)",1,1,1
"android.os.ZygoteStartFailedEx.ZygoteStartFailedEx(Throwable)",1,1,1
"android.os.storage.IMountService.Stub.Proxy.Proxy(IBinder)",1,1,1
"android.os.storage.IMountService.Stub.Proxy.asBinder()",1,1,1
"android.os.storage.IMountService.Stub.Proxy.createSecureContainer(String,int,String,String,int)",1,1,1
"android.os.storage.IMountService.Stub.Proxy.destroySecureContainer(String,boolean)",1,1,2
"android.os.storage.IMountService.Stub.Proxy.finalizeSecureContainer(String)",1,1,1
"android.os.storage.IMountService.Stub.Proxy.finishMediaUpdate()",1,1,1
"android.os.storage.IMountService.Stub.Proxy.formatVolume(String)",1,1,1
"android.os.storage.IMountService.Stub.Proxy.getInterfaceDescriptor()",1,1,1
"android.os.storage.IMountService.Stub.Proxy.getMountedObbPath(String)",1,1,1
"android.os.storage.IMountService.Stub.Proxy.getSecureContainerList()",1,1,1
"android.os.storage.IMountService.Stub.Proxy.getSecureContainerPath(String)",1,1,1
"android.os.storage.IMountService.Stub.Proxy.getStorageUsers(String)",1,1,1
"android.os.storage.IMountService.Stub.Proxy.getVolumeState(String)",1,1,1
"android.os.storage.IMountService.Stub.Proxy.isExternalStorageEmulated()",1,1,1
"android.os.storage.IMountService.Stub.Proxy.isObbMounted(String)",1,1,1
"android.os.storage.IMountService.Stub.Proxy.isSecureContainerMounted(String)",1,1,1
"android.os.storage.IMountService.Stub.Proxy.isUsbMassStorageConnected()",1,1,1
"android.os.storage.IMountService.Stub.Proxy.isUsbMassStorageEnabled()",1,1,1
"android.os.storage.IMountService.Stub.Proxy.mountObb(String,String,IObbActionListener,int)",1,2,2
"android.os.storage.IMountService.Stub.Proxy.mountSecureContainer(String,String,int)",1,1,1
"android.os.storage.IMountService.Stub.Proxy.mountVolume(String)",1,1,1
"android.os.storage.IMountService.Stub.Proxy.registerListener(IMountServiceListener)",1,2,2
"android.os.storage.IMountService.Stub.Proxy.renameSecureContainer(String,String)",1,1,1
"android.os.storage.IMountService.Stub.Proxy.setUsbMassStorageEnabled(boolean)",1,1,2
"android.os.storage.IMountService.Stub.Proxy.shutdown(IMountShutdownObserver)",1,2,2
"android.os.storage.IMountService.Stub.Proxy.unmountObb(String,boolean,IObbActionListener,int)",1,2,3
"android.os.storage.IMountService.Stub.Proxy.unmountSecureContainer(String,boolean)",1,1,2
"android.os.storage.IMountService.Stub.Proxy.unmountVolume(String,boolean)",1,1,2
"android.os.storage.IMountService.Stub.Proxy.unregisterListener(IMountServiceListener)",1,2,2
"android.os.storage.IMountService.Stub.Stub()",1,1,1
"android.os.storage.IMountService.Stub.asBinder()",1,1,1
"android.os.storage.IMountService.Stub.asInterface(IBinder)",3,1,4
"android.os.storage.IMountService.Stub.onTransact(int,Parcel,Parcel,int)",28,28,33
"android.os.storage.IMountServiceListener.Stub.Proxy.Proxy(IBinder)",1,1,1
"android.os.storage.IMountServiceListener.Stub.Proxy.asBinder()",1,1,1
"android.os.storage.IMountServiceListener.Stub.Proxy.getInterfaceDescriptor()",1,1,1
"android.os.storage.IMountServiceListener.Stub.Proxy.onStorageStateChanged(String,String,String)",1,1,1
"android.os.storage.IMountServiceListener.Stub.Proxy.onUsbMassStorageConnectionChanged(boolean)",1,1,2
"android.os.storage.IMountServiceListener.Stub.Stub()",1,1,1
"android.os.storage.IMountServiceListener.Stub.asBinder()",1,1,1
"android.os.storage.IMountServiceListener.Stub.asInterface(IBinder)",3,1,4
"android.os.storage.IMountServiceListener.Stub.onTransact(int,Parcel,Parcel,int)",4,4,4
"android.os.storage.IMountShutdownObserver.Stub.Proxy.Proxy(IBinder)",1,1,1
"android.os.storage.IMountShutdownObserver.Stub.Proxy.asBinder()",1,1,1
"android.os.storage.IMountShutdownObserver.Stub.Proxy.getInterfaceDescriptor()",1,1,1
"android.os.storage.IMountShutdownObserver.Stub.Proxy.onShutDownComplete(int)",1,1,1
"android.os.storage.IMountShutdownObserver.Stub.Stub()",1,1,1
"android.os.storage.IMountShutdownObserver.Stub.asBinder()",1,1,1
"android.os.storage.IMountShutdownObserver.Stub.asInterface(IBinder)",3,1,4
"android.os.storage.IMountShutdownObserver.Stub.onTransact(int,Parcel,Parcel,int)",3,3,3
"android.os.storage.IObbActionListener.Stub.Proxy.Proxy(IBinder)",1,1,1
"android.os.storage.IObbActionListener.Stub.Proxy.asBinder()",1,1,1
"android.os.storage.IObbActionListener.Stub.Proxy.getInterfaceDescriptor()",1,1,1
"android.os.storage.IObbActionListener.Stub.Proxy.onObbResult(String,int,int)",1,1,1
"android.os.storage.IObbActionListener.Stub.Stub()",1,1,1
"android.os.storage.IObbActionListener.Stub.asBinder()",1,1,1
"android.os.storage.IObbActionListener.Stub.asInterface(IBinder)",3,1,4
"android.os.storage.IObbActionListener.Stub.onTransact(int,Parcel,Parcel,int)",3,3,3
"android.os.storage.MountServiceListener.onStorageStateChange(String,String,String)",1,1,1
"android.os.storage.MountServiceListener.onUsbMassStorageConnectionChanged(boolean)",1,1,1
"android.os.storage.OnObbStateChangeListener.onObbStateChange(String,int)",1,1,1
"android.os.storage.StorageEventListener.onStorageStateChanged(String,String,String)",1,1,1
"android.os.storage.StorageEventListener.onUsbMassStorageConnectionChanged(boolean)",1,1,1
"android.os.storage.StorageManager.ListenerDelegate.ListenerDelegate(StorageEventListener)",1,3,3
"android.os.storage.StorageManager.ListenerDelegate.getListener()",1,1,1
"android.os.storage.StorageManager.ListenerDelegate.sendShareAvailabilityChanged(boolean)",1,1,1
"android.os.storage.StorageManager.ListenerDelegate.sendStorageStateChanged(String,String,String)",1,1,1
"android.os.storage.StorageManager.MountServiceBinderListener.onStorageStateChanged(String,String,String)",1,2,2
"android.os.storage.StorageManager.MountServiceBinderListener.onUsbMassStorageConnectionChanged(boolean)",1,2,2
"android.os.storage.StorageManager.ObbActionListener.addListener(OnObbStateChangeListener)",1,1,1
"android.os.storage.StorageManager.ObbActionListener.onObbResult(String,int,int)",1,3,3
"android.os.storage.StorageManager.ObbListenerDelegate.ObbListenerDelegate(OnObbStateChangeListener)",2,2,3
"android.os.storage.StorageManager.ObbListenerDelegate.getListener()",2,1,2
"android.os.storage.StorageManager.ObbListenerDelegate.sendObbStateChanged(String,int)",1,1,1
"android.os.storage.StorageManager.ObbStateChangedStorageEvent.ObbStateChangedStorageEvent(String,int)",1,1,1
"android.os.storage.StorageManager.StorageEvent.StorageEvent(int)",1,1,1
"android.os.storage.StorageManager.StorageEvent.getMessage()",1,1,1
"android.os.storage.StorageManager.StorageManager(Looper)",2,2,2
"android.os.storage.StorageManager.StorageStateChangedStorageEvent.StorageStateChangedStorageEvent(String,String,String)",1,1,1
"android.os.storage.StorageManager.UmsConnectionChangedStorageEvent.UmsConnectionChangedStorageEvent(boolean)",1,1,1
"android.os.storage.StorageManager.disableUsbMassStorage()",1,2,2
"android.os.storage.StorageManager.enableUsbMassStorage()",1,2,2
"android.os.storage.StorageManager.getMountedObbPath(String)",2,2,3
"android.os.storage.StorageManager.getNextNonce()",1,1,1
"android.os.storage.StorageManager.isObbMounted(String)",2,2,3
"android.os.storage.StorageManager.isUsbMassStorageConnected()",1,2,2
"android.os.storage.StorageManager.isUsbMassStorageEnabled()",1,2,2
"android.os.storage.StorageManager.mountObb(String,String,OnObbStateChangeListener)",3,2,4
"android.os.storage.StorageManager.registerListener(StorageEventListener)",2,1,2
"android.os.storage.StorageManager.unmountObb(String,boolean,OnObbStateChangeListener)",3,2,4
"android.os.storage.StorageManager.unregisterListener(StorageEventListener)",4,3,4
"android.pim.ContactsAsyncHelper.ContactsAsyncHelper()",1,1,1
"android.pim.ContactsAsyncHelper.ImageTracker.ImageTracker()",1,1,1
"android.pim.ContactsAsyncHelper.ImageTracker.getPhotoState()",1,1,1
"android.pim.ContactsAsyncHelper.ImageTracker.getPhotoUri()",2,2,2
"android.pim.ContactsAsyncHelper.ImageTracker.isDifferentImageRequest(CallerInfo)",1,1,1
"android.pim.ContactsAsyncHelper.ImageTracker.isDifferentImageRequest(Connection)",2,4,4
"android.pim.ContactsAsyncHelper.ImageTracker.setPhotoRequest(CallerInfo)",1,1,1
"android.pim.ContactsAsyncHelper.ImageTracker.setPhotoState(int)",1,1,1
"android.pim.ContactsAsyncHelper.WorkerHandler.WorkerHandler(Looper)",1,1,1
"android.pim.ContactsAsyncHelper.WorkerHandler.handleMessage(Message)",2,6,7
"android.pim.ContactsAsyncHelper.handleMessage(Message)",2,6,9
"android.pim.ContactsAsyncHelper.updateImageViewWithContactPhotoAsync(CallerInfo,Context,ImageView,Uri,int)",1,1,1
"android.pim.ContactsAsyncHelper.updateImageViewWithContactPhotoAsync(CallerInfo,int,OnImageLoadCompleteListener,Object,Context,ImageView,Uri,int)",2,5,5
"android.pim.ContactsAsyncHelper.updateImageViewWithContactPhotoAsync(Context,ImageView,Uri,int)",1,1,1
"android.pim.EventRecurrence.EventRecurrence()",1,1,1
"android.pim.EventRecurrence.InvalidFormatException.InvalidFormatException(String)",1,1,1
"android.pim.EventRecurrence.appendByDay(StringBuilder,int)",1,2,2
"android.pim.EventRecurrence.appendNumbers(StringBuilder,String,int,int[])",1,3,3
"android.pim.EventRecurrence.calendarDay2Day(int)",9,2,9
"android.pim.EventRecurrence.day2CalendarDay(int)",9,2,9
"android.pim.EventRecurrence.day2String(int)",9,2,9
"android.pim.EventRecurrence.day2TimeDay(int)",9,2,9
"android.pim.EventRecurrence.parse(String)",1,1,1
"android.pim.EventRecurrence.repeatsMonthlyOnDayCount()",3,1,4
"android.pim.EventRecurrence.repeatsOnEveryWeekDay()",5,1,6
"android.pim.EventRecurrence.setStartDate(Time)",1,1,1
"android.pim.EventRecurrence.timeDay2Day(int)",9,2,9
"android.pim.EventRecurrence.toString()",2,8,14
"android.pim.ICalendar.Component.Component(String,Component)",1,1,1
"android.pim.ICalendar.Component.addChild(Component)",1,1,1
"android.pim.ICalendar.Component.addProperty(Property)",1,2,2
"android.pim.ICalendar.Component.getComponents()",1,1,1
"android.pim.ICalendar.Component.getFirstProperty(String)",2,2,3
"android.pim.ICalendar.Component.getName()",1,1,1
"android.pim.ICalendar.Component.getOrCreateChildren()",1,1,2
"android.pim.ICalendar.Component.getParent()",1,1,1
"android.pim.ICalendar.Component.getProperties(String)",1,1,1
"android.pim.ICalendar.Component.getPropertyNames()",1,1,1
"android.pim.ICalendar.Component.toString()",1,1,1
"android.pim.ICalendar.Component.toString(StringBuilder)",1,5,5
"android.pim.ICalendar.FormatException.FormatException()",1,1,1
"android.pim.ICalendar.FormatException.FormatException(String)",1,1,1
"android.pim.ICalendar.FormatException.FormatException(String,Throwable)",1,1,1
"android.pim.ICalendar.ICalendar()",1,1,1
"android.pim.ICalendar.Parameter.Parameter()",1,1,1
"android.pim.ICalendar.Parameter.Parameter(String,String)",1,1,1
"android.pim.ICalendar.Parameter.toString()",1,1,1
"android.pim.ICalendar.Parameter.toString(StringBuilder)",1,1,1
"android.pim.ICalendar.Property.Property(String)",1,1,1
"android.pim.ICalendar.Property.Property(String,String)",1,1,1
"android.pim.ICalendar.Property.addParameter(Parameter)",1,2,2
"android.pim.ICalendar.Property.getFirstParameter(String)",2,2,3
"android.pim.ICalendar.Property.getName()",1,1,1
"android.pim.ICalendar.Property.getParameterNames()",1,1,1
"android.pim.ICalendar.Property.getParameters(String)",1,1,1
"android.pim.ICalendar.Property.getValue()",1,1,1
"android.pim.ICalendar.Property.setValue(String)",1,1,1
"android.pim.ICalendar.Property.toString()",1,1,1
"android.pim.ICalendar.Property.toString(StringBuilder)",1,3,3
"android.pim.ICalendar.extractParameter(ParserState)",10,7,11
"android.pim.ICalendar.extractValue(ParserState)",2,2,3
"android.pim.ICalendar.normalizeText(String)",1,1,1
"android.pim.ICalendar.parseCalendar(String)",2,2,3
"android.pim.ICalendar.parseComponent(Component,String)",1,1,1
"android.pim.ICalendar.parseComponent(String)",1,1,1
"android.pim.ICalendar.parseComponentImpl(Component,String)",2,4,5
"android.pim.ICalendar.parseEvent(String)",2,2,3
"android.pim.ICalendar.parseLine(String,ParserState,Component)",8,9,13
"android.pim.RecurrenceSet.RecurrenceSet(ContentValues)",1,1,1
"android.pim.RecurrenceSet.RecurrenceSet(Cursor)",1,1,1
"android.pim.RecurrenceSet.RecurrenceSet(String,String,String,String)",1,1,1
"android.pim.RecurrenceSet.addPropertiesForRuleStr(Component,String,String)",2,2,3
"android.pim.RecurrenceSet.addPropertyForDateStr(Component,String,String)",2,3,4
"android.pim.RecurrenceSet.computeDuration(Time,Component)",4,2,6
"android.pim.RecurrenceSet.extractDates(Property)",3,2,3
"android.pim.RecurrenceSet.flattenProperties(Component,String)",3,5,6
"android.pim.RecurrenceSet.fold(String)",1,1,1
"android.pim.RecurrenceSet.getRuleStrings(String)",2,2,3
"android.pim.RecurrenceSet.hasRecurrence()",1,1,2
"android.pim.RecurrenceSet.init(String,String,String,String)",1,9,9
"android.pim.RecurrenceSet.parseRecurrenceDates(String)",1,3,3
"android.pim.RecurrenceSet.populateComponent(ContentValues,Component)",2,8,10
"android.pim.RecurrenceSet.populateComponent(Cursor,Component)",2,8,9
"android.pim.RecurrenceSet.populateContentValues(Component,ContentValues)",3,8,14
"android.pim.RecurrenceSet.unfold(String)",1,1,1
"android.preference.CheckBoxPreference.CheckBoxPreference(Context)",1,1,1
"android.preference.CheckBoxPreference.CheckBoxPreference(Context,AttributeSet)",1,1,1
"android.preference.CheckBoxPreference.CheckBoxPreference(Context,AttributeSet,int)",1,1,1
"android.preference.CheckBoxPreference.SavedState.SavedState(Parcel)",1,1,1
"android.preference.CheckBoxPreference.SavedState.SavedState(Parcelable)",1,1,1
"android.preference.CheckBoxPreference.SavedState.writeToParcel(Parcel,int)",1,1,2
"android.preference.CheckBoxPreference.getDisableDependentsState()",1,1,1
"android.preference.CheckBoxPreference.getSummaryOff()",1,1,1
"android.preference.CheckBoxPreference.getSummaryOn()",1,1,1
"android.preference.CheckBoxPreference.isChecked()",1,1,1
"android.preference.CheckBoxPreference.onBindView(View)",1,11,15
"android.preference.CheckBoxPreference.onClick()",2,1,2
"android.preference.CheckBoxPreference.onGetDefaultValue(TypedArray,int)",1,1,1
"android.preference.CheckBoxPreference.onRestoreInstanceState(Parcelable)",2,3,3
"android.preference.CheckBoxPreference.onSaveInstanceState()",2,1,2
"android.preference.CheckBoxPreference.onSetInitialValue(boolean,Object)",1,2,2
"android.preference.CheckBoxPreference.setChecked(boolean)",1,2,2
"android.preference.CheckBoxPreference.setDisableDependentsState(boolean)",1,1,1
"android.preference.CheckBoxPreference.setSummaryOff(CharSequence)",1,2,2
"android.preference.CheckBoxPreference.setSummaryOff(int)",1,1,1
"android.preference.CheckBoxPreference.setSummaryOn(CharSequence)",1,2,2
"android.preference.CheckBoxPreference.setSummaryOn(int)",1,1,1
"android.preference.CheckBoxPreference.shouldDisableDependents()",1,2,3
"android.preference.DialogPreference.DialogPreference(Context,AttributeSet)",1,1,1
"android.preference.DialogPreference.DialogPreference(Context,AttributeSet,int)",1,2,2
"android.preference.DialogPreference.SavedState.SavedState(Parcel)",1,1,1
"android.preference.DialogPreference.SavedState.SavedState(Parcelable)",1,1,1
"android.preference.DialogPreference.SavedState.writeToParcel(Parcel,int)",1,1,2
"android.preference.DialogPreference.getDialog()",1,1,1
"android.preference.DialogPreference.getDialogIcon()",1,1,1
"android.preference.DialogPreference.getDialogLayoutResource()",1,1,1
"android.preference.DialogPreference.getDialogMessage()",1,1,1
"android.preference.DialogPreference.getDialogTitle()",1,1,1
"android.preference.DialogPreference.getNegativeButtonText()",1,1,1
"android.preference.DialogPreference.getPositiveButtonText()",1,1,1
"android.preference.DialogPreference.needInputMethod()",1,1,1
"android.preference.DialogPreference.onActivityDestroy()",2,2,3
"android.preference.DialogPreference.onBindDialogView(View)",1,5,5
"android.preference.DialogPreference.onClick()",1,1,1
"android.preference.DialogPreference.onClick(DialogInterface,int)",1,1,1
"android.preference.DialogPreference.onCreateDialogView()",2,1,2
"android.preference.DialogPreference.onDialogClosed(boolean)",1,1,1
"android.preference.DialogPreference.onDismiss(DialogInterface)",1,1,1
"android.preference.DialogPreference.onPrepareDialogBuilder(Builder)",1,1,1
"android.preference.DialogPreference.onRestoreInstanceState(Parcelable)",2,4,4
"android.preference.DialogPreference.onSaveInstanceState()",2,2,3
"android.preference.DialogPreference.requestInputMethod(Dialog)",1,1,1
"android.preference.DialogPreference.setDialogIcon(Drawable)",1,1,1
"android.preference.DialogPreference.setDialogIcon(int)",1,1,1
"android.preference.DialogPreference.setDialogLayoutResource(int)",1,1,1
"android.preference.DialogPreference.setDialogMessage(CharSequence)",1,1,1
"android.preference.DialogPreference.setDialogMessage(int)",1,1,1
"android.preference.DialogPreference.setDialogTitle(CharSequence)",1,1,1
"android.preference.DialogPreference.setDialogTitle(int)",1,1,1
"android.preference.DialogPreference.setNegativeButtonText(CharSequence)",1,1,1
"android.preference.DialogPreference.setNegativeButtonText(int)",1,1,1
"android.preference.DialogPreference.setPositiveButtonText(CharSequence)",1,1,1
"android.preference.DialogPreference.setPositiveButtonText(int)",1,1,1
"android.preference.DialogPreference.showDialog(Bundle)",1,4,4
"android.preference.EditTextPreference.EditTextPreference(Context)",1,1,1
"android.preference.EditTextPreference.EditTextPreference(Context,AttributeSet)",1,1,1
"android.preference.EditTextPreference.EditTextPreference(Context,AttributeSet,int)",1,1,1
"android.preference.EditTextPreference.SavedState.SavedState(Parcel)",1,1,1
"android.preference.EditTextPreference.SavedState.SavedState(Parcelable)",1,1,1
"android.preference.EditTextPreference.SavedState.writeToParcel(Parcel,int)",1,1,1
"android.preference.EditTextPreference.getEditText()",1,1,1
"android.preference.EditTextPreference.getText()",1,1,1
"android.preference.EditTextPreference.needInputMethod()",1,1,1
"android.preference.EditTextPreference.onAddEditTextToDialogView(View,EditText)",1,2,2
"android.preference.EditTextPreference.onBindDialogView(View)",1,3,3
"android.preference.EditTextPreference.onDialogClosed(boolean)",1,3,3
"android.preference.EditTextPreference.onGetDefaultValue(TypedArray,int)",1,1,1
"android.preference.EditTextPreference.onRestoreInstanceState(Parcelable)",2,3,3
"android.preference.EditTextPreference.onSaveInstanceState()",2,1,2
"android.preference.EditTextPreference.onSetInitialValue(boolean,Object)",1,2,2
"android.preference.EditTextPreference.setText(String)",1,2,2
"android.preference.EditTextPreference.shouldDisableDependents()",1,2,2
"android.preference.GenericInflater.FactoryMerger.FactoryMerger(Factory<T>,Factory<T>)",1,1,1
"android.preference.GenericInflater.FactoryMerger.onCreateItem(String,Context,AttributeSet)",2,1,2
"android.preference.GenericInflater.GenericInflater(Context)",1,1,1
"android.preference.GenericInflater.GenericInflater(GenericInflater<T, P>,Context)",1,1,1
"android.preference.GenericInflater.createItem(String,String,AttributeSet)",1,4,7
"android.preference.GenericInflater.createItemFromTag(XmlPullParser,String,AttributeSet)",1,8,9
"android.preference.GenericInflater.getContext()",1,1,1
"android.preference.GenericInflater.getDefaultPackage()",1,1,1
"android.preference.GenericInflater.getFactory()",1,1,1
"android.preference.GenericInflater.inflate(XmlPullParser,P)",1,1,1
"android.preference.GenericInflater.inflate(XmlPullParser,P,boolean)",2,8,10
"android.preference.GenericInflater.inflate(int,P)",1,1,1
"android.preference.GenericInflater.inflate(int,P,boolean)",1,2,2
"android.preference.GenericInflater.onCreateCustomFromTag(XmlPullParser,T,AttributeSet)",1,1,1
"android.preference.GenericInflater.onCreateItem(String,AttributeSet)",1,1,1
"android.preference.GenericInflater.onMergeRoots(P,boolean,P)",1,1,1
"android.preference.GenericInflater.rInflate(XmlPullParser,T,AttributeSet)",4,8,10
"android.preference.GenericInflater.setDefaultPackage(String)",1,1,1
"android.preference.GenericInflater.setFactory(Factory<T>)",3,1,4
"android.preference.ListPreference.ListPreference(Context)",1,1,1
"android.preference.ListPreference.ListPreference(Context,AttributeSet)",1,1,1
"android.preference.ListPreference.SavedState.SavedState(Parcel)",1,1,1
"android.preference.ListPreference.SavedState.SavedState(Parcelable)",1,1,1
"android.preference.ListPreference.SavedState.writeToParcel(Parcel,int)",1,1,1
"android.preference.ListPreference.findIndexOfValue(String)",4,3,5
"android.preference.ListPreference.getEntries()",1,1,1
"android.preference.ListPreference.getEntry()",1,1,3
"android.preference.ListPreference.getEntryValues()",1,1,1
"android.preference.ListPreference.getSummary()",2,2,3
"android.preference.ListPreference.getValue()",1,1,1
"android.preference.ListPreference.getValueIndex()",1,1,1
"android.preference.ListPreference.onDialogClosed(boolean)",1,3,5
"android.preference.ListPreference.onGetDefaultValue(TypedArray,int)",1,1,1
"android.preference.ListPreference.onPrepareDialogBuilder(Builder)",2,1,3
"android.preference.ListPreference.onRestoreInstanceState(Parcelable)",2,3,3
"android.preference.ListPreference.onSaveInstanceState()",2,1,2
"android.preference.ListPreference.onSetInitialValue(boolean,Object)",1,2,2
"android.preference.ListPreference.setEntries(CharSequence[])",1,1,1
"android.preference.ListPreference.setEntries(int)",1,1,1
"android.preference.ListPreference.setEntryValues(CharSequence[])",1,1,1
"android.preference.ListPreference.setEntryValues(int)",1,1,1
"android.preference.ListPreference.setSummary(CharSequence)",1,4,5
"android.preference.ListPreference.setValue(String)",1,1,1
"android.preference.ListPreference.setValueIndex(int)",1,2,2
"android.preference.MultiSelectListPreference.MultiSelectListPreference(Context)",1,1,1
"android.preference.MultiSelectListPreference.MultiSelectListPreference(Context,AttributeSet)",1,1,1
"android.preference.MultiSelectListPreference.SavedState.SavedState(Parcel)",1,2,2
"android.preference.MultiSelectListPreference.SavedState.SavedState(Parcelable)",1,1,1
"android.preference.MultiSelectListPreference.SavedState.writeToParcel(Parcel,int)",1,1,1
"android.preference.MultiSelectListPreference.findIndexOfValue(String)",4,3,5
"android.preference.MultiSelectListPreference.getEntries()",1,1,1
"android.preference.MultiSelectListPreference.getEntryValues()",1,1,1
"android.preference.MultiSelectListPreference.getSelectedItems()",1,2,2
"android.preference.MultiSelectListPreference.getValues()",1,1,1
"android.preference.MultiSelectListPreference.onDialogClosed(boolean)",1,3,4
"android.preference.MultiSelectListPreference.onGetDefaultValue(TypedArray,int)",1,2,2
"android.preference.MultiSelectListPreference.onPrepareDialogBuilder(Builder)",2,2,4
"android.preference.MultiSelectListPreference.onSaveInstanceState()",2,1,2
"android.preference.MultiSelectListPreference.onSetInitialValue(boolean,Object)",1,2,2
"android.preference.MultiSelectListPreference.setEntries(CharSequence[])",1,1,1
"android.preference.MultiSelectListPreference.setEntries(int)",1,1,1
"android.preference.MultiSelectListPreference.setEntryValues(CharSequence[])",1,1,1
"android.preference.MultiSelectListPreference.setEntryValues(int)",1,1,1
"android.preference.MultiSelectListPreference.setValues(Set<String>)",1,1,1
"android.preference.Preference.BaseSavedState.BaseSavedState(Parcel)",1,1,1
"android.preference.Preference.BaseSavedState.BaseSavedState(Parcelable)",1,1,1
"android.preference.Preference.Preference(Context)",1,1,1
"android.preference.Preference.Preference(Context,AttributeSet)",1,1,1
"android.preference.Preference.Preference(Context,AttributeSet,int)",2,3,17
"android.preference.Preference.callChangeListener(Object)",1,2,2
"android.preference.Preference.compareTo(Preference)",4,4,6
"android.preference.Preference.dispatchRestoreInstanceState(Bundle)",4,3,4
"android.preference.Preference.dispatchSaveInstanceState(Bundle)",3,3,4
"android.preference.Preference.dispatchSetInitialValue()",1,4,4
"android.preference.Preference.findPreferenceInHierarchy(String)",2,2,3
"android.preference.Preference.getContext()",1,1,1
"android.preference.Preference.getDependency()",1,1,1
"android.preference.Preference.getEditor()",2,1,2
"android.preference.Preference.getExtras()",1,1,2
"android.preference.Preference.getFilterableStringBuilder()",1,4,4
"android.preference.Preference.getFragment()",1,1,1
"android.preference.Preference.getIcon()",1,1,1
"android.preference.Preference.getId()",1,1,1
"android.preference.Preference.getIntent()",1,1,1
"android.preference.Preference.getKey()",1,1,1
"android.preference.Preference.getLayoutResource()",1,1,1
"android.preference.Preference.getOnPreferenceChangeListener()",1,1,1
"android.preference.Preference.getOnPreferenceClickListener()",1,1,1
"android.preference.Preference.getOrder()",1,1,1
"android.preference.Preference.getPersistedBoolean(boolean)",2,1,2
"android.preference.Preference.getPersistedFloat(float)",2,1,2
"android.preference.Preference.getPersistedInt(int)",2,1,2
"android.preference.Preference.getPersistedLong(long)",2,1,2
"android.preference.Preference.getPersistedString(String)",2,1,2
"android.preference.Preference.getPersistedStringSet(Set<String>)",2,1,2
"android.preference.Preference.getPreferenceManager()",1,1,1
"android.preference.Preference.getSharedPreferences()",2,1,2
"android.preference.Preference.getShouldDisableView()",1,1,1
"android.preference.Preference.getSummary()",1,1,1
"android.preference.Preference.getTitle()",1,1,1
"android.preference.Preference.getView(View,ViewGroup)",1,2,2
"android.preference.Preference.getWidgetLayoutResource()",1,1,1
"android.preference.Preference.hasKey()",1,1,1
"android.preference.Preference.hasSpecifiedLayout()",1,1,1
"android.preference.Preference.isEnabled()",1,1,2
"android.preference.Preference.isPersistent()",1,1,1
"android.preference.Preference.isSelectable()",1,1,1
"android.preference.Preference.notifyChanged()",1,2,2
"android.preference.Preference.notifyDependencyChange(boolean)",2,2,3
"android.preference.Preference.notifyHierarchyChanged()",1,2,2
"android.preference.Preference.onAttachedToActivity()",1,1,1
"android.preference.Preference.onAttachedToHierarchy(PreferenceManager)",1,1,1
"android.preference.Preference.onBindView(View)",1,10,12
"android.preference.Preference.onClick()",1,1,1
"android.preference.Preference.onCreateView(ViewGroup)",1,2,2
"android.preference.Preference.onDependencyChanged(Preference,boolean)",1,2,2
"android.preference.Preference.onGetDefaultValue(TypedArray,int)",1,1,1
"android.preference.Preference.onPrepareForRemoval()",1,1,1
"android.preference.Preference.onRestoreInstanceState(Parcelable)",2,1,3
"android.preference.Preference.onSaveInstanceState()",1,1,1
"android.preference.Preference.onSetInitialValue(boolean,Object)",1,1,1
"android.preference.Preference.peekExtras()",1,1,1
"android.preference.Preference.performClick(PreferenceScreen)",5,6,9
"android.preference.Preference.persistBoolean(boolean)",3,2,3
"android.preference.Preference.persistFloat(float)",3,2,3
"android.preference.Preference.persistInt(int)",3,2,3
"android.preference.Preference.persistLong(long)",3,2,3
"android.preference.Preference.persistString(String)",3,2,3
"android.preference.Preference.persistStringSet(Set<String>)",3,2,3
"android.preference.Preference.registerDependency()",3,2,3
"android.preference.Preference.registerDependent(Preference)",1,1,2
"android.preference.Preference.requireKey()",2,1,2
"android.preference.Preference.restoreHierarchyState(Bundle)",1,1,1
"android.preference.Preference.saveHierarchyState(Bundle)",1,1,1
"android.preference.Preference.setDefaultValue(Object)",1,1,1
"android.preference.Preference.setDependency(String)",1,1,1
"android.preference.Preference.setEnabled(boolean)",1,2,2
"android.preference.Preference.setEnabledStateOnViews(View,boolean)",1,3,3
"android.preference.Preference.setFragment(String)",1,1,1
"android.preference.Preference.setIcon(Drawable)",1,2,5
"android.preference.Preference.setIcon(int)",1,1,1
"android.preference.Preference.setIntent(Intent)",1,1,1
"android.preference.Preference.setKey(String)",1,3,3
"android.preference.Preference.setLayoutResource(int)",1,1,2
"android.preference.Preference.setOnPreferenceChangeInternalListener(OnPreferenceChangeInternalListener)",1,1,1
"android.preference.Preference.setOnPreferenceChangeListener(OnPreferenceChangeListener)",1,1,1
"android.preference.Preference.setOnPreferenceClickListener(OnPreferenceClickListener)",1,1,1
"android.preference.Preference.setOrder(int)",1,2,2
"android.preference.Preference.setPersistent(boolean)",1,1,1
"android.preference.Preference.setSelectable(boolean)",1,2,2
"android.preference.Preference.setShouldDisableView(boolean)",1,1,1
"android.preference.Preference.setSummary(CharSequence)",1,4,5
"android.preference.Preference.setSummary(int)",1,1,1
"android.preference.Preference.setTitle(CharSequence)",1,4,5
"android.preference.Preference.setTitle(int)",1,1,1
"android.preference.Preference.setWidgetLayoutResource(int)",1,1,2
"android.preference.Preference.shouldCommit()",2,1,2
"android.preference.Preference.shouldDisableDependents()",1,1,1
"android.preference.Preference.shouldPersist()",1,3,3
"android.preference.Preference.toString()",1,1,1
"android.preference.Preference.tryCommit(Editor)",1,3,3
"android.preference.Preference.unregisterDependency()",1,3,3
"android.preference.Preference.unregisterDependent(Preference)",1,2,2
"android.preference.PreferenceActivity.Header.Header()",1,1,1
"android.preference.PreferenceActivity.Header.Header(Parcel)",1,1,1
"android.preference.PreferenceActivity.Header.describeContents()",1,1,1
"android.preference.PreferenceActivity.Header.getBreadCrumbShortTitle(Resources)",2,2,2
"android.preference.PreferenceActivity.Header.getBreadCrumbTitle(Resources)",2,2,2
"android.preference.PreferenceActivity.Header.getSummary(Resources)",2,2,2
"android.preference.PreferenceActivity.Header.getTitle(Resources)",2,2,2
"android.preference.PreferenceActivity.Header.readFromParcel(Parcel)",1,2,2
"android.preference.PreferenceActivity.Header.writeToParcel(Parcel,int)",1,2,2
"android.preference.PreferenceActivity.HeaderAdapter.HeaderAdapter(Context,List<Header>)",1,1,1
"android.preference.PreferenceActivity.HeaderAdapter.getView(int,View,ViewGroup)",1,3,3
"android.preference.PreferenceActivity.addPreferencesFromIntent(Intent)",1,1,1
"android.preference.PreferenceActivity.addPreferencesFromResource(int)",1,1,1
"android.preference.PreferenceActivity.bindPreferences()",1,3,3
"android.preference.PreferenceActivity.findBestMatchingHeader(Header,ArrayList<Header>)",9,15,20
"android.preference.PreferenceActivity.findPreference(CharSequence)",2,1,2
"android.preference.PreferenceActivity.finishPreferencePanel(Fragment,int,Intent)",1,4,4
"android.preference.PreferenceActivity.getNextButton()",1,1,1
"android.preference.PreferenceActivity.getPreferenceManager()",1,1,1
"android.preference.PreferenceActivity.getPreferenceScreen()",2,2,2
"android.preference.PreferenceActivity.hasHeaders()",1,2,2
"android.preference.PreferenceActivity.hasNextButton()",1,1,1
"android.preference.PreferenceActivity.invalidateHeaders()",1,2,2
"android.preference.PreferenceActivity.isMultiPane()",1,2,2
"android.preference.PreferenceActivity.loadHeadersFromResource(int,List<Header>)",7,13,34
"android.preference.PreferenceActivity.onActivityResult(int,int,Intent)",1,2,2
"android.preference.PreferenceActivity.onBuildHeaders(List<Header>)",1,1,1
"android.preference.PreferenceActivity.onContentChanged()",1,2,2
"android.preference.PreferenceActivity.onCreate(Bundle)",1,20,22
"android.preference.PreferenceActivity.onDestroy()",1,2,2
"android.preference.PreferenceActivity.onGetInitialHeader()",1,1,1
"android.preference.PreferenceActivity.onGetNewHeader()",1,1,1
"android.preference.PreferenceActivity.onHeaderClick(Header,int)",1,4,4
"android.preference.PreferenceActivity.onIsHidingHeaders()",1,1,1
"android.preference.PreferenceActivity.onIsMultiPane()",3,1,4
"android.preference.PreferenceActivity.onListItemClick(ListView,View,int,long)",1,2,2
"android.preference.PreferenceActivity.onNewIntent(Intent)",1,2,2
"android.preference.PreferenceActivity.onPreferenceStartFragment(PreferenceFragment,Preference)",1,1,1
"android.preference.PreferenceActivity.onPreferenceTreeClick(PreferenceScreen,Preference)",1,1,1
"android.preference.PreferenceActivity.onRestoreInstanceState(Bundle)",4,4,4
"android.preference.PreferenceActivity.onSaveInstanceState(Bundle)",1,6,6
"android.preference.PreferenceActivity.onStop()",1,2,2
"android.preference.PreferenceActivity.postBindPreferences()",2,1,2
"android.preference.PreferenceActivity.requirePreferenceManager()",3,1,3
"android.preference.PreferenceActivity.setListFooter(View)",1,1,1
"android.preference.PreferenceActivity.setParentTitle(CharSequence,CharSequence,OnClickListener)",1,2,2
"android.preference.PreferenceActivity.setPreferenceScreen(PreferenceScreen)",1,4,4
"android.preference.PreferenceActivity.setSelectedHeader(Header)",1,5,5
"android.preference.PreferenceActivity.showBreadCrumbs(CharSequence,CharSequence)",3,4,5
"android.preference.PreferenceActivity.startPreferenceFragment(Fragment,boolean)",1,2,2
"android.preference.PreferenceActivity.startPreferencePanel(String,Bundle,int,CharSequence,Fragment,int)",1,5,5
"android.preference.PreferenceActivity.startWithFragment(String,Bundle,Fragment,int)",1,2,2
"android.preference.PreferenceActivity.switchToHeader(Header)",1,2,2
"android.preference.PreferenceActivity.switchToHeader(String,Bundle)",1,1,1
"android.preference.PreferenceActivity.switchToHeaderInner(String,Bundle,int)",1,1,3
"android.preference.PreferenceCategory.PreferenceCategory(Context)",1,1,1
"android.preference.PreferenceCategory.PreferenceCategory(Context,AttributeSet)",1,1,1
"android.preference.PreferenceCategory.PreferenceCategory(Context,AttributeSet,int)",1,1,1
"android.preference.PreferenceCategory.isEnabled()",1,1,1
"android.preference.PreferenceCategory.onPrepareAddPreference(Preference)",2,1,2
"android.preference.PreferenceFragment.addPreferencesFromIntent(Intent)",1,1,1
"android.preference.PreferenceFragment.addPreferencesFromResource(int)",1,1,1
"android.preference.PreferenceFragment.bindPreferences()",1,2,2
"android.preference.PreferenceFragment.ensureList()",5,1,5
"android.preference.PreferenceFragment.findPreference(CharSequence)",2,1,2
"android.preference.PreferenceFragment.getListView()",1,1,1
"android.preference.PreferenceFragment.getPreferenceManager()",1,1,1
"android.preference.PreferenceFragment.getPreferenceScreen()",1,1,1
"android.preference.PreferenceFragment.onActivityCreated(Bundle)",1,5,5
"android.preference.PreferenceFragment.onActivityResult(int,int,Intent)",1,1,1
"android.preference.PreferenceFragment.onCreate(Bundle)",1,1,1
"android.preference.PreferenceFragment.onCreateView(LayoutInflater,ViewGroup,Bundle)",1,1,1
"android.preference.PreferenceFragment.onDestroy()",1,1,1
"android.preference.PreferenceFragment.onDestroyView()",1,1,1
"android.preference.PreferenceFragment.onPreferenceTreeClick(PreferenceScreen,Preference)",2,3,3
"android.preference.PreferenceFragment.onSaveInstanceState(Bundle)",1,2,2
"android.preference.PreferenceFragment.onStop()",1,1,1
"android.preference.PreferenceFragment.postBindPreferences()",2,1,2
"android.preference.PreferenceFragment.requirePreferenceManager()",2,1,2
"android.preference.PreferenceFragment.setPreferenceScreen(PreferenceScreen)",1,4,4
"android.preference.PreferenceFrameLayout.LayoutParams.LayoutParams(Context,AttributeSet)",1,1,1
"android.preference.PreferenceFrameLayout.LayoutParams.LayoutParams(int,int)",1,1,1
"android.preference.PreferenceFrameLayout.PreferenceFrameLayout(Context)",1,1,1
"android.preference.PreferenceFrameLayout.PreferenceFrameLayout(Context,AttributeSet)",1,1,1
"android.preference.PreferenceFrameLayout.PreferenceFrameLayout(Context,AttributeSet,int)",1,1,1
"android.preference.PreferenceFrameLayout.addView(View)",1,3,10
"android.preference.PreferenceFrameLayout.generateLayoutParams(AttributeSet)",1,1,1
"android.preference.PreferenceGroup.PreferenceGroup(Context,AttributeSet)",1,1,1
"android.preference.PreferenceGroup.PreferenceGroup(Context,AttributeSet,int)",1,1,1
"android.preference.PreferenceGroup.addItemFromInflater(Preference)",1,1,1
"android.preference.PreferenceGroup.addPreference(Preference)",3,5,8
"android.preference.PreferenceGroup.dispatchRestoreInstanceState(Bundle)",1,2,2
"android.preference.PreferenceGroup.dispatchSaveInstanceState(Bundle)",1,2,2
"android.preference.PreferenceGroup.findPreference(CharSequence)",6,4,7
"android.preference.PreferenceGroup.getPreference(int)",1,1,1
"android.preference.PreferenceGroup.getPreferenceCount()",1,1,1
"android.preference.PreferenceGroup.isOnSameScreenAsChildren()",1,1,1
"android.preference.PreferenceGroup.isOrderingAsAdded()",1,1,1
"android.preference.PreferenceGroup.onAttachedToActivity()",1,2,2
"android.preference.PreferenceGroup.onPrepareAddPreference(Preference)",1,2,2
"android.preference.PreferenceGroup.onPrepareForRemoval()",1,1,1
"android.preference.PreferenceGroup.removeAll()",1,2,2
"android.preference.PreferenceGroup.removePreference(Preference)",1,1,1
"android.preference.PreferenceGroup.removePreferenceInt(Preference)",1,1,1
"android.preference.PreferenceGroup.setEnabled(boolean)",1,2,2
"android.preference.PreferenceGroup.setOrderingAsAdded(boolean)",1,1,1
"android.preference.PreferenceGroup.sortPreferences()",1,1,1
"android.preference.PreferenceGroupAdapter.PreferenceGroupAdapter(PreferenceGroup)",1,1,1
"android.preference.PreferenceGroupAdapter.PreferenceLayout.compareTo(PreferenceLayout)",4,1,4
"android.preference.PreferenceGroupAdapter.addPreferenceClassName(Preference)",1,2,2
"android.preference.PreferenceGroupAdapter.areAllItemsEnabled()",1,1,1
"android.preference.PreferenceGroupAdapter.createPreferenceLayout(Preference,PreferenceLayout)",1,1,2
"android.preference.PreferenceGroupAdapter.flattenPreferenceGroup(List<Preference>,PreferenceGroup)",1,6,6
"android.preference.PreferenceGroupAdapter.getCount()",1,1,1
"android.preference.PreferenceGroupAdapter.getItem(int)",2,2,3
"android.preference.PreferenceGroupAdapter.getItemId(int)",2,2,3
"android.preference.PreferenceGroupAdapter.getItemViewType(int)",3,1,4
"android.preference.PreferenceGroupAdapter.getView(int,View,ViewGroup)",1,1,2
"android.preference.PreferenceGroupAdapter.getViewTypeCount()",1,1,2
"android.preference.PreferenceGroupAdapter.hasStableIds()",1,1,1
"android.preference.PreferenceGroupAdapter.isEnabled(int)",2,2,3
"android.preference.PreferenceGroupAdapter.onPreferenceChange(Preference)",1,1,1
"android.preference.PreferenceGroupAdapter.onPreferenceHierarchyChange(Preference)",1,1,1
"android.preference.PreferenceGroupAdapter.syncMyPreferences()",2,1,2
"android.preference.PreferenceInflater.PreferenceInflater(Context,PreferenceManager)",1,1,1
"android.preference.PreferenceInflater.PreferenceInflater(GenericInflater<Preference, PreferenceGroup>,PreferenceManager,Context)",1,1,1
"android.preference.PreferenceInflater.cloneInContext(Context)",1,1,1
"android.preference.PreferenceInflater.init(PreferenceManager)",1,1,1
"android.preference.PreferenceInflater.onCreateCustomFromTag(XmlPullParser,Preference,AttributeSet)",3,6,6
"android.preference.PreferenceInflater.onMergeRoots(PreferenceGroup,boolean,PreferenceGroup)",2,2,2
"android.preference.PreferenceManager.PreferenceManager(Activity,int)",1,1,1
"android.preference.PreferenceManager.PreferenceManager(Context)",1,1,1
"android.preference.PreferenceManager.addPreferencesScreen(DialogInterface)",1,1,2
"android.preference.PreferenceManager.createPreferenceScreen(Context)",1,1,1
"android.preference.PreferenceManager.dismissAllScreens()",2,2,3
"android.preference.PreferenceManager.dispatchActivityDestroy()",1,3,4
"android.preference.PreferenceManager.dispatchActivityResult(int,int,Intent)",4,2,4
"android.preference.PreferenceManager.dispatchActivityStop()",2,2,3
"android.preference.PreferenceManager.dispatchNewIntent(Intent)",1,1,1
"android.preference.PreferenceManager.findPreference(CharSequence)",2,1,2
"android.preference.PreferenceManager.getActivity()",1,1,1
"android.preference.PreferenceManager.getContext()",1,1,1
"android.preference.PreferenceManager.getDefaultSharedPreferences(Context)",1,1,1
"android.preference.PreferenceManager.getDefaultSharedPreferencesMode()",1,1,1
"android.preference.PreferenceManager.getDefaultSharedPreferencesName(Context)",1,1,1
"android.preference.PreferenceManager.getEditor()",2,3,3
"android.preference.PreferenceManager.getFragment()",1,1,1
"android.preference.PreferenceManager.getNextId()",1,1,1
"android.preference.PreferenceManager.getNextRequestCode()",1,1,1
"android.preference.PreferenceManager.getOnPreferenceTreeClickListener()",1,1,1
"android.preference.PreferenceManager.getPreferenceScreen()",1,1,1
"android.preference.PreferenceManager.getSharedPreferences()",1,2,2
"android.preference.PreferenceManager.getSharedPreferencesMode()",1,1,1
"android.preference.PreferenceManager.getSharedPreferencesName()",1,1,1
"android.preference.PreferenceManager.inflateFromIntent(Intent,PreferenceScreen)",4,5,6
"android.preference.PreferenceManager.inflateFromResource(Context,int,PreferenceScreen)",1,1,1
"android.preference.PreferenceManager.init(Context)",1,1,1
"android.preference.PreferenceManager.queryIntentActivities(Intent)",1,1,1
"android.preference.PreferenceManager.registerOnActivityDestroyListener(OnActivityDestroyListener)",1,2,3
"android.preference.PreferenceManager.registerOnActivityResultListener(OnActivityResultListener)",1,2,3
"android.preference.PreferenceManager.registerOnActivityStopListener(OnActivityStopListener)",1,2,3
"android.preference.PreferenceManager.removePreferencesScreen(DialogInterface)",2,1,2
"android.preference.PreferenceManager.setDefaultValues(Context,String,int,int,boolean)",1,4,4
"android.preference.PreferenceManager.setDefaultValues(Context,int,boolean)",1,1,1
"android.preference.PreferenceManager.setFragment(PreferenceFragment)",1,1,1
"android.preference.PreferenceManager.setNoCommit(boolean)",1,3,4
"android.preference.PreferenceManager.setOnPreferenceTreeClickListener(OnPreferenceTreeClickListener)",1,1,1
"android.preference.PreferenceManager.setPreferences(PreferenceScreen)",2,1,2
"android.preference.PreferenceManager.setSharedPreferencesMode(int)",1,1,1
"android.preference.PreferenceManager.setSharedPreferencesName(String)",1,1,1
"android.preference.PreferenceManager.shouldCommit()",1,1,1
"android.preference.PreferenceManager.unregisterOnActivityDestroyListener(OnActivityDestroyListener)",1,2,2
"android.preference.PreferenceManager.unregisterOnActivityResultListener(OnActivityResultListener)",1,2,2
"android.preference.PreferenceManager.unregisterOnActivityStopListener(OnActivityStopListener)",1,2,2
"android.preference.PreferenceScreen.PreferenceScreen(Context,AttributeSet)",1,1,1
"android.preference.PreferenceScreen.SavedState.SavedState(Parcel)",1,1,1
"android.preference.PreferenceScreen.SavedState.SavedState(Parcelable)",1,1,1
"android.preference.PreferenceScreen.SavedState.writeToParcel(Parcel,int)",1,1,2
"android.preference.PreferenceScreen.bind(ListView)",1,1,1
"android.preference.PreferenceScreen.getDialog()",1,1,1
"android.preference.PreferenceScreen.getRootAdapter()",1,2,2
"android.preference.PreferenceScreen.isOnSameScreenAsChildren()",1,1,1
"android.preference.PreferenceScreen.onClick()",2,3,4
"android.preference.PreferenceScreen.onCreateRootAdapter()",1,1,1
"android.preference.PreferenceScreen.onDismiss(DialogInterface)",1,1,1
"android.preference.PreferenceScreen.onItemClick(AdapterView,View,int,long)",2,1,2
"android.preference.PreferenceScreen.onRestoreInstanceState(Parcelable)",2,4,4
"android.preference.PreferenceScreen.onSaveInstanceState()",2,2,3
"android.preference.PreferenceScreen.showDialog(Bundle)",1,3,4
"android.preference.RingtonePreference.RingtonePreference(Context)",1,1,1
"android.preference.RingtonePreference.RingtonePreference(Context,AttributeSet)",1,1,1
"android.preference.RingtonePreference.RingtonePreference(Context,AttributeSet,int)",1,1,1
"android.preference.RingtonePreference.getRingtoneType()",1,1,1
"android.preference.RingtonePreference.getShowDefault()",1,1,1
"android.preference.RingtonePreference.getShowSilent()",1,1,1
"android.preference.RingtonePreference.onActivityResult(int,int,Intent)",2,5,5
"android.preference.RingtonePreference.onAttachedToHierarchy(PreferenceManager)",1,1,1
"android.preference.RingtonePreference.onClick()",1,2,2
"android.preference.RingtonePreference.onGetDefaultValue(TypedArray,int)",1,1,1
"android.preference.RingtonePreference.onPrepareRingtonePickerIntent(Intent)",1,2,2
"android.preference.RingtonePreference.onRestoreRingtone()",1,2,2
"android.preference.RingtonePreference.onSaveRingtone(Uri)",1,2,2
"android.preference.RingtonePreference.onSetInitialValue(boolean,Object)",2,2,3
"android.preference.RingtonePreference.setRingtoneType(int)",1,1,1
"android.preference.RingtonePreference.setShowDefault(boolean)",1,1,1
"android.preference.RingtonePreference.setShowSilent(boolean)",1,1,1
"android.preference.SeekBarPreference.SeekBarPreference(Context,AttributeSet)",1,1,1
"android.preference.SeekBarPreference.getSeekBar(View)",1,1,1
"android.preference.SeekBarPreference.onBindDialogView(View)",1,2,2
"android.preference.VolumePreference.SavedState.SavedState(Parcel)",1,1,1
"android.preference.VolumePreference.SavedState.SavedState(Parcelable)",1,1,1
"android.preference.VolumePreference.SavedState.getVolumeStore()",1,1,1
"android.preference.VolumePreference.SavedState.writeToParcel(Parcel,int)",1,1,1
"android.preference.VolumePreference.SeekBarVolumizer.SeekBarVolumizer(Context,SeekBar,int)",1,1,1
"android.preference.VolumePreference.SeekBarVolumizer.changeVolumeBy(int)",1,3,3
"android.preference.VolumePreference.SeekBarVolumizer.getSeekBar()",1,1,1
"android.preference.VolumePreference.SeekBarVolumizer.initSeekBar(SeekBar)",1,2,4
"android.preference.VolumePreference.SeekBarVolumizer.muteVolume()",1,2,2
"android.preference.VolumePreference.SeekBarVolumizer.onProgressChanged(SeekBar,int,boolean)",2,1,2
"android.preference.VolumePreference.SeekBarVolumizer.onRestoreInstanceState(VolumeStore)",1,2,2
"android.preference.VolumePreference.SeekBarVolumizer.onSaveInstanceState(VolumeStore)",1,1,2
"android.preference.VolumePreference.SeekBarVolumizer.onStartTrackingTouch(SeekBar)",1,1,1
"android.preference.VolumePreference.SeekBarVolumizer.onStopTrackingTouch(SeekBar)",1,3,3
"android.preference.VolumePreference.SeekBarVolumizer.postSetVolume(int)",1,1,1
"android.preference.VolumePreference.SeekBarVolumizer.revertVolume()",1,1,1
"android.preference.VolumePreference.SeekBarVolumizer.run()",1,1,1
"android.preference.VolumePreference.SeekBarVolumizer.sample()",1,1,1
"android.preference.VolumePreference.SeekBarVolumizer.stop()",1,1,1
"android.preference.VolumePreference.SeekBarVolumizer.stopSample()",1,2,2
"android.preference.VolumePreference.VolumePreference(Context,AttributeSet)",1,1,1
"android.preference.VolumePreference.cleanup()",1,5,5
"android.preference.VolumePreference.onActivityStop()",1,1,1
"android.preference.VolumePreference.onBindDialogView(View)",1,1,1
"android.preference.VolumePreference.onDialogClosed(boolean)",1,2,3
"android.preference.VolumePreference.onKey(View,int,KeyEvent)",3,5,9
"android.preference.VolumePreference.onRestoreInstanceState(Parcelable)",2,4,4
"android.preference.VolumePreference.onSampleStarting(SeekBarVolumizer)",1,2,3
"android.preference.VolumePreference.onSaveInstanceState()",2,2,3
"android.preference.VolumePreference.setStreamType(int)",1,1,1
"android.provider.Applications.Applications()",1,1,1
"android.provider.Applications.componentNameToUri(String,String)",1,1,1
"android.provider.Applications.search(ContentResolver,String)",1,1,1
"android.provider.Applications.uriToComponentName(Uri)",6,1,6
"android.provider.Browser.addOrUrlEquals(StringBuilder)",1,1,1
"android.provider.Browser.addSearchUrl(ContentResolver,String)",1,1,1
"android.provider.Browser.canClearHistory(ContentResolver)",1,3,3
"android.provider.Browser.clearHistory(ContentResolver)",1,1,1
"android.provider.Browser.clearSearches(ContentResolver)",1,2,2
"android.provider.Browser.deleteFromHistory(ContentResolver,String)",1,1,1
"android.provider.Browser.deleteHistoryTimeFrame(ContentResolver,long,long)",3,4,4
"android.provider.Browser.deleteHistoryWhere(ContentResolver,String)",1,5,5
"android.provider.Browser.getAllBookmarks(ContentResolver)",1,1,1
"android.provider.Browser.getAllVisitedUrls(ContentResolver)",1,1,1
"android.provider.Browser.getVisitedHistory(ContentResolver)",2,4,5
"android.provider.Browser.getVisitedLike(ContentResolver,String)",1,5,5
"android.provider.Browser.requestAllIcons(ContentResolver,String,IconListener)",1,1,1
"android.provider.Browser.saveBookmark(Context,String,String)",1,1,1
"android.provider.Browser.sendString(Context,String)",1,1,1
"android.provider.Browser.sendString(Context,String,String)",1,1,2
"android.provider.Browser.truncateHistory(ContentResolver)",4,6,7
"android.provider.Browser.updateVisitedHistory(ContentResolver,String,boolean)",1,5,6
"android.provider.BrowserContract.Bookmarks.Bookmarks()",1,1,1
"android.provider.BrowserContract.Bookmarks.buildFolderUri(long)",1,1,1
"android.provider.BrowserContract.ChromeSyncColumns.ChromeSyncColumns()",1,1,1
"android.provider.BrowserContract.Combined.Combined()",1,1,1
"android.provider.BrowserContract.History.History()",1,1,1
"android.provider.BrowserContract.Images.Images()",1,1,1
"android.provider.BrowserContract.Searches.Searches()",1,1,1
"android.provider.BrowserContract.Settings.Settings()",1,1,1
"android.provider.BrowserContract.Settings.isSyncEnabled(Context)",2,3,4
"android.provider.BrowserContract.Settings.setSyncEnabled(Context,boolean)",1,1,2
"android.provider.BrowserContract.SyncState.SyncState()",1,1,1
"android.provider.BrowserContract.SyncState.get(ContentProviderClient,Account)",1,1,1
"android.provider.BrowserContract.SyncState.getWithUri(ContentProviderClient,Account)",1,1,1
"android.provider.BrowserContract.SyncState.newSetOperation(Account,byte[])",1,1,1
"android.provider.BrowserContract.SyncState.set(ContentProviderClient,Account,byte[])",1,1,1
"android.provider.Calendar.CalendarAlerts.alarmExists(ContentResolver,long,long,long)",1,3,4
"android.provider.Calendar.CalendarAlerts.findNextAlarmTime(ContentResolver,long)",1,4,4
"android.provider.Calendar.CalendarAlerts.insert(ContentResolver,long,long,long,long,int)",1,1,1
"android.provider.Calendar.CalendarAlerts.query(ContentResolver,String[],String,String[],String)",1,1,1
"android.provider.Calendar.CalendarAlerts.rescheduleMissedAlarms(ContentResolver,Context,AlarmManager)",2,5,6
"android.provider.Calendar.CalendarAlerts.scheduleAlarm(Context,AlarmManager,long)",1,3,3
"android.provider.Calendar.Calendars.delete(ContentResolver,String,String[])",1,1,1
"android.provider.Calendar.Calendars.deleteCalendarsForAccount(ContentResolver,Account)",1,1,1
"android.provider.Calendar.Calendars.query(ContentResolver,String[],String,String)",1,1,2
"android.provider.Calendar.CalendarsEntity.EntityIteratorImpl.EntityIteratorImpl(Cursor,ContentProviderClient)",1,1,1
"android.provider.Calendar.CalendarsEntity.EntityIteratorImpl.EntityIteratorImpl(Cursor,ContentResolver)",1,1,1
"android.provider.Calendar.CalendarsEntity.EntityIteratorImpl.getEntityAndIncrementCursor(Cursor)",1,1,1
"android.provider.Calendar.CalendarsEntity.newEntityIterator(Cursor,ContentProviderClient)",1,1,1
"android.provider.Calendar.CalendarsEntity.newEntityIterator(Cursor,ContentResolver)",1,1,1
"android.provider.Calendar.EventDays.query(ContentResolver,int,int)",2,1,2
"android.provider.Calendar.Events.extractValue(Component,String)",2,2,2
"android.provider.Calendar.Events.query(ContentResolver,String[])",1,1,1
"android.provider.Calendar.Events.query(ContentResolver,String[],String,String)",1,1,2
"android.provider.Calendar.EventsEntity.EntityIteratorImpl.EntityIteratorImpl(Cursor,ContentProviderClient)",1,1,1
"android.provider.Calendar.EventsEntity.EntityIteratorImpl.EntityIteratorImpl(Cursor,ContentResolver)",1,1,1
"android.provider.Calendar.EventsEntity.EntityIteratorImpl.getEntityAndIncrementCursor(Cursor)",1,7,7
"android.provider.Calendar.EventsEntity.newEntityIterator(Cursor,ContentProviderClient)",1,1,1
"android.provider.Calendar.EventsEntity.newEntityIterator(Cursor,ContentResolver)",1,1,1
"android.provider.Calendar.Instances.query(ContentResolver,String[],long,long)",1,1,1
"android.provider.Calendar.Instances.query(ContentResolver,String[],long,long,String)",1,1,1
"android.provider.Calendar.Instances.query(ContentResolver,String[],long,long,String,String)",1,1,3
"android.provider.Calendar.Instances.query(ContentResolver,String[],long,long,String,String,String)",1,1,3
"android.provider.Calendar.SyncState.SyncState()",1,1,1
"android.provider.CallLog.Calls.addCall(CallerInfo,Context,String,int,int,long,int)",1,6,11
"android.provider.CallLog.Calls.getLastOutgoingCall(Context)",2,3,4
"android.provider.CallLog.Calls.removeExpiredEntries(Context)",1,1,1
"android.provider.Contacts.ContactMethods.ContactMethods()",1,1,1
"android.provider.Contacts.ContactMethods.addPostalLocation(Context,long,double,double)",1,1,1
"android.provider.Contacts.ContactMethods.decodeImProtocol(String)",4,3,4
"android.provider.Contacts.ContactMethods.encodeCustomImProtocol(String)",1,1,1
"android.provider.Contacts.ContactMethods.encodePredefinedImProtocol(int)",1,1,1
"android.provider.Contacts.ContactMethods.getDisplayLabel(Context,int,int,CharSequence)",2,6,10
"android.provider.Contacts.ContactMethods.lookupProviderNameFromId(int)",9,2,9
"android.provider.Contacts.Contacts()",1,1,1
"android.provider.Contacts.Extensions.Extensions()",1,1,1
"android.provider.Contacts.GroupMembership.GroupMembership()",1,1,1
"android.provider.Contacts.Groups.Groups()",1,1,1
"android.provider.Contacts.Intents.Insert.Insert()",1,1,1
"android.provider.Contacts.Intents.Intents()",1,1,1
"android.provider.Contacts.Intents.UI.UI()",1,1,1
"android.provider.Contacts.Organizations.Organizations()",1,1,1
"android.provider.Contacts.Organizations.getDisplayLabel(Context,int,CharSequence)",1,2,4
"android.provider.Contacts.People.ContactMethods.ContactMethods()",1,1,1
"android.provider.Contacts.People.Extensions.Extensions()",1,1,1
"android.provider.Contacts.People.People()",1,1,1
"android.provider.Contacts.People.Phones.Phones()",1,1,1
"android.provider.Contacts.People.addToGroup(ContentResolver,long,String)",2,3,4
"android.provider.Contacts.People.addToGroup(ContentResolver,long,long)",1,1,1
"android.provider.Contacts.People.addToMyContactsGroup(ContentResolver,long)",2,1,2
"android.provider.Contacts.People.createPersonInMyContactsGroup(ContentResolver,ContentValues)",3,3,3
"android.provider.Contacts.People.loadContactPhoto(Context,Uri,int,Options)",2,4,4
"android.provider.Contacts.People.loadPlaceholderPhoto(int,Context,Options)",2,1,2
"android.provider.Contacts.People.markAsContacted(ContentResolver,long)",1,1,1
"android.provider.Contacts.People.openContactPhotoInputStream(ContentResolver,Uri)",3,3,5
"android.provider.Contacts.People.queryGroups(ContentResolver,long)",1,1,1
"android.provider.Contacts.People.setPhotoData(ContentResolver,Uri,byte[])",1,1,1
"android.provider.Contacts.People.tryGetMyContactsGroupId(ContentResolver)",3,3,3
"android.provider.Contacts.Phones.Phones()",1,1,1
"android.provider.Contacts.Phones.getDisplayLabel(Context,int,CharSequence)",1,1,1
"android.provider.Contacts.Phones.getDisplayLabel(Context,int,CharSequence,CharSequence[])",1,3,5
"android.provider.Contacts.Photos.Photos()",1,1,1
"android.provider.Contacts.Presence.getPresenceIconResourceId(int)",6,2,6
"android.provider.Contacts.Presence.setPresenceIcon(ImageView,int)",1,1,1
"android.provider.Contacts.Settings.Settings()",1,1,1
"android.provider.Contacts.Settings.getSetting(ContentResolver,String,String)",2,1,5
"android.provider.Contacts.Settings.setSetting(ContentResolver,String,String,String)",1,1,1
"android.provider.ContactsContract.AggregationExceptions.AggregationExceptions()",1,1,1
"android.provider.ContactsContract.CommonDataKinds.CommonDataKinds()",1,1,1
"android.provider.ContactsContract.CommonDataKinds.Email.Email()",1,1,1
"android.provider.ContactsContract.CommonDataKinds.Email.getTypeLabel(Resources,int,CharSequence)",2,3,3
"android.provider.ContactsContract.CommonDataKinds.Email.getTypeLabelResource(int)",6,2,6
"android.provider.ContactsContract.CommonDataKinds.Event.Event()",1,1,1
"android.provider.ContactsContract.CommonDataKinds.Event.getTypeResource(Integer)",6,2,6
"android.provider.ContactsContract.CommonDataKinds.GroupMembership.GroupMembership()",1,1,1
"android.provider.ContactsContract.CommonDataKinds.Im.Im()",1,1,1
"android.provider.ContactsContract.CommonDataKinds.Im.getProtocolLabel(Resources,int,CharSequence)",2,3,3
"android.provider.ContactsContract.CommonDataKinds.Im.getProtocolLabelResource(int)",11,2,11
"android.provider.ContactsContract.CommonDataKinds.Im.getTypeLabel(Resources,int,CharSequence)",2,3,3
"android.provider.ContactsContract.CommonDataKinds.Im.getTypeLabelResource(int)",5,2,5
"android.provider.ContactsContract.CommonDataKinds.Nickname.Nickname()",1,1,1
"android.provider.ContactsContract.CommonDataKinds.Note.Note()",1,1,1
"android.provider.ContactsContract.CommonDataKinds.Organization.Organization()",1,1,1
"android.provider.ContactsContract.CommonDataKinds.Organization.getTypeLabel(Resources,int,CharSequence)",2,3,3
"android.provider.ContactsContract.CommonDataKinds.Organization.getTypeLabelResource(int)",4,2,4
"android.provider.ContactsContract.CommonDataKinds.Phone.Phone()",1,1,1
"android.provider.ContactsContract.CommonDataKinds.Phone.getDisplayLabel(Context,int,CharSequence)",1,1,1
"android.provider.ContactsContract.CommonDataKinds.Phone.getDisplayLabel(Context,int,CharSequence,CharSequence[])",1,1,1
"android.provider.ContactsContract.CommonDataKinds.Phone.getTypeLabel(Resources,int,CharSequence)",2,3,4
"android.provider.ContactsContract.CommonDataKinds.Phone.getTypeLabelResource(int)",22,2,22
"android.provider.ContactsContract.CommonDataKinds.Photo.Photo()",1,1,1
"android.provider.ContactsContract.CommonDataKinds.Relation.Relation()",1,1,1
"android.provider.ContactsContract.CommonDataKinds.Relation.getTypeLabel(Resources,int,CharSequence)",2,3,3
"android.provider.ContactsContract.CommonDataKinds.Relation.getTypeLabelResource(int)",16,2,16
"android.provider.ContactsContract.CommonDataKinds.SipAddress.SipAddress()",1,1,1
"android.provider.ContactsContract.CommonDataKinds.SipAddress.getTypeLabel(Resources,int,CharSequence)",2,3,3
"android.provider.ContactsContract.CommonDataKinds.SipAddress.getTypeLabelResource(int)",5,2,5
"android.provider.ContactsContract.CommonDataKinds.StructuredName.StructuredName()",1,1,1
"android.provider.ContactsContract.CommonDataKinds.StructuredPostal.StructuredPostal()",1,1,1
"android.provider.ContactsContract.CommonDataKinds.StructuredPostal.getTypeLabel(Resources,int,CharSequence)",2,3,3
"android.provider.ContactsContract.CommonDataKinds.StructuredPostal.getTypeLabelResource(int)",5,2,5
"android.provider.ContactsContract.CommonDataKinds.Website.Website()",1,1,1
"android.provider.ContactsContract.Contacts.AggregationSuggestions.AggregationSuggestions()",1,1,1
"android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder.addParameter(String,String)",1,2,2
"android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder.build()",1,3,3
"android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder.setContactId(long)",1,1,1
"android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder.setLimit(int)",1,1,1
"android.provider.ContactsContract.Contacts.AggregationSuggestions.builder()",1,1,1
"android.provider.ContactsContract.Contacts.Contacts()",1,1,1
"android.provider.ContactsContract.Contacts.Data.Data()",1,1,1
"android.provider.ContactsContract.Contacts.Entity.Entity()",1,1,1
"android.provider.ContactsContract.Contacts.Photo.Photo()",1,1,1
"android.provider.ContactsContract.Contacts.getLookupUri(ContentResolver,Uri)",3,2,3
"android.provider.ContactsContract.Contacts.getLookupUri(long,String)",1,1,1
"android.provider.ContactsContract.Contacts.lookupContact(ContentResolver,Uri)",4,2,4
"android.provider.ContactsContract.Contacts.markAsContacted(ContentResolver,long)",1,1,1
"android.provider.ContactsContract.Contacts.openContactPhotoInputStream(ContentResolver,Uri)",4,3,6
"android.provider.ContactsContract.Data.Data()",1,1,1
"android.provider.ContactsContract.Data.getContactLookupUri(ContentResolver,Uri)",2,4,4
"android.provider.ContactsContract.Directory.Directory()",1,1,1
"android.provider.ContactsContract.Directory.notifyDirectoryChange(ContentResolver)",1,1,1
"android.provider.ContactsContract.Groups.EntityIteratorImpl.EntityIteratorImpl(Cursor)",1,1,1
"android.provider.ContactsContract.Groups.EntityIteratorImpl.getEntityAndIncrementCursor(Cursor)",1,1,1
"android.provider.ContactsContract.Groups.Groups()",1,1,1
"android.provider.ContactsContract.Groups.newEntityIterator(Cursor)",1,1,1
"android.provider.ContactsContract.PhoneLookup.PhoneLookup()",1,1,1
"android.provider.ContactsContract.ProviderStatus.ProviderStatus()",1,1,1
"android.provider.ContactsContract.QuickContact.showQuickContact(Context,Rect,Uri,int,String[])",1,1,1
"android.provider.ContactsContract.QuickContact.showQuickContact(Context,View,Uri,int,String[])",1,1,1
"android.provider.ContactsContract.RawContacts.Data.Data()",1,1,1
"android.provider.ContactsContract.RawContacts.Entity.Entity()",1,1,1
"android.provider.ContactsContract.RawContacts.EntityIteratorImpl.EntityIteratorImpl(Cursor)",1,1,1
"android.provider.ContactsContract.RawContacts.EntityIteratorImpl.getEntityAndIncrementCursor(Cursor)",5,4,8
"android.provider.ContactsContract.RawContacts.RawContacts()",1,1,1
"android.provider.ContactsContract.RawContacts.getContactLookupUri(ContentResolver,Uri)",2,4,4
"android.provider.ContactsContract.RawContacts.newEntityIterator(Cursor)",1,1,1
"android.provider.ContactsContract.RawContactsEntity.RawContactsEntity()",1,1,1
"android.provider.ContactsContract.Settings.Settings()",1,1,1
"android.provider.ContactsContract.StatusUpdates.StatusUpdates()",1,1,1
"android.provider.ContactsContract.StatusUpdates.getPresenceIconResourceId(int)",6,2,6
"android.provider.ContactsContract.StatusUpdates.getPresencePrecedence(int)",1,1,1
"android.provider.ContactsContract.SyncState.SyncState()",1,1,1
"android.provider.ContactsContract.SyncState.get(ContentProviderClient,Account)",1,1,1
"android.provider.ContactsContract.SyncState.getWithUri(ContentProviderClient,Account)",1,1,1
"android.provider.ContactsContract.SyncState.newSetOperation(Account,byte[])",1,1,1
"android.provider.ContactsContract.SyncState.set(ContentProviderClient,Account,byte[])",1,1,1
"android.provider.Downloads.Downloads()",1,1,1
"android.provider.Downloads.Impl.Impl()",1,1,1
"android.provider.Downloads.Impl.isStatusClientError(int)",1,1,2
"android.provider.Downloads.Impl.isStatusCompleted(int)",1,1,4
"android.provider.Downloads.Impl.isStatusError(int)",1,1,2
"android.provider.Downloads.Impl.isStatusInformational(int)",1,1,2
"android.provider.Downloads.Impl.isStatusServerError(int)",1,1,2
"android.provider.Downloads.Impl.isStatusSuccess(int)",1,1,2
"android.provider.DrmStore.addDrmFile(ContentResolver,File,String)",1,6,6
"android.provider.DrmStore.addDrmFile(ContentResolver,FileInputStream,String)",1,10,10
"android.provider.DrmStore.enforceAccessDrmPermission(Context)",2,1,2
"android.provider.LiveFolders.LiveFolders()",1,1,1
"android.provider.MediaStore.Audio.Albums.getContentUri(String)",1,1,1
"android.provider.MediaStore.Audio.Artists.Albums.getContentUri(String,long)",1,1,1
"android.provider.MediaStore.Audio.Artists.getContentUri(String)",1,1,1
"android.provider.MediaStore.Audio.Genres.Members.getContentUri(String,long)",1,1,1
"android.provider.MediaStore.Audio.Genres.getContentUri(String)",1,1,1
"android.provider.MediaStore.Audio.Genres.getContentUriForAudioId(String,int)",1,1,1
"android.provider.MediaStore.Audio.Media.getContentUri(String)",1,1,1
"android.provider.MediaStore.Audio.Media.getContentUriForPath(String)",1,1,2
"android.provider.MediaStore.Audio.Playlists.Members.getContentUri(String,long)",1,1,1
"android.provider.MediaStore.Audio.Playlists.Members.moveItem(ContentResolver,long,int,int)",1,1,1
"android.provider.MediaStore.Audio.Playlists.getContentUri(String)",1,1,1
"android.provider.MediaStore.Audio.keyFor(String)",4,13,16
"android.provider.MediaStore.Files.getContentUri(String)",1,1,1
"android.provider.MediaStore.Files.getContentUri(String,long)",1,1,1
"android.provider.MediaStore.Files.getMtpObjectsUri(String)",1,1,1
"android.provider.MediaStore.Files.getMtpObjectsUri(String,long)",1,1,1
"android.provider.MediaStore.Files.getMtpReferencesUri(String,long)",1,1,1
"android.provider.MediaStore.Images.Media.StoreThumbnail(ContentResolver,Bitmap,long,float,float,int)",1,1,3
"android.provider.MediaStore.Images.Media.getBitmap(ContentResolver,Uri)",1,1,1
"android.provider.MediaStore.Images.Media.getContentUri(String)",1,1,1
"android.provider.MediaStore.Images.Media.insertImage(ContentResolver,Bitmap,String,String)",1,5,5
"android.provider.MediaStore.Images.Media.insertImage(ContentResolver,String,String,String)",1,1,2
"android.provider.MediaStore.Images.Media.query(ContentResolver,Uri,String[])",1,1,1
"android.provider.MediaStore.Images.Media.query(ContentResolver,Uri,String[],String,String)",1,1,2
"android.provider.MediaStore.Images.Media.query(ContentResolver,Uri,String[],String,String[],String)",1,1,2
"android.provider.MediaStore.Images.Thumbnails.cancelThumbnailRequest(ContentResolver,long)",1,1,1
"android.provider.MediaStore.Images.Thumbnails.cancelThumbnailRequest(ContentResolver,long,long)",1,1,1
"android.provider.MediaStore.Images.Thumbnails.getContentUri(String)",1,1,1
"android.provider.MediaStore.Images.Thumbnails.getThumbnail(ContentResolver,long,int,Options)",1,1,1
"android.provider.MediaStore.Images.Thumbnails.getThumbnail(ContentResolver,long,long,int,Options)",1,1,1
"android.provider.MediaStore.Images.Thumbnails.query(ContentResolver,Uri,String[])",1,1,1
"android.provider.MediaStore.Images.Thumbnails.queryMiniThumbnail(ContentResolver,long,int,String[])",1,1,1
"android.provider.MediaStore.Images.Thumbnails.queryMiniThumbnails(ContentResolver,Uri,int,String[])",1,1,1
"android.provider.MediaStore.InternalThumbnails.cancelThumbnailRequest(ContentResolver,long,Uri,long)",1,2,2
"android.provider.MediaStore.InternalThumbnails.getMiniThumbFromFile(Cursor,Uri,ContentResolver,Options)",1,4,4
"android.provider.MediaStore.InternalThumbnails.getThumbnail(ContentResolver,long,long,int,Options,Uri,boolean)",12,21,28
"android.provider.MediaStore.Video.Media.getContentUri(String)",1,1,1
"android.provider.MediaStore.Video.Thumbnails.cancelThumbnailRequest(ContentResolver,long)",1,1,1
"android.provider.MediaStore.Video.Thumbnails.cancelThumbnailRequest(ContentResolver,long,long)",1,1,1
"android.provider.MediaStore.Video.Thumbnails.getContentUri(String)",1,1,1
"android.provider.MediaStore.Video.Thumbnails.getThumbnail(ContentResolver,long,int,Options)",1,1,1
"android.provider.MediaStore.Video.Thumbnails.getThumbnail(ContentResolver,long,long,int,Options)",1,1,1
"android.provider.MediaStore.Video.query(ContentResolver,Uri,String[])",1,1,1
"android.provider.MediaStore.getMediaScannerUri()",1,1,1
"android.provider.Ptp.Device.getContentUri(int)",1,1,1
"android.provider.Ptp.Object.getContentUri(int,long)",1,1,1
"android.provider.Ptp.Object.getContentUriForImport(int,long,String)",2,2,3
"android.provider.Ptp.Object.getContentUriForObjectChildren(int,long)",1,1,1
"android.provider.Ptp.Object.getContentUriForStorageChildren(int,long)",1,1,1
"android.provider.Ptp.Storage.getContentUri(int)",1,1,1
"android.provider.Ptp.Storage.getContentUri(int,long)",1,1,1
"android.provider.SearchRecentSuggestions.SearchRecentSuggestions(Context,String,int)",2,2,3
"android.provider.SearchRecentSuggestions.clearHistory()",1,1,1
"android.provider.SearchRecentSuggestions.saveRecentQuery(String,String)",3,2,4
"android.provider.SearchRecentSuggestions.saveRecentQueryBlocking(String,String)",1,3,3
"android.provider.SearchRecentSuggestions.truncateHistory(ContentResolver,int)",2,3,4
"android.provider.SearchRecentSuggestions.waitForSave()",1,2,2
"android.provider.Settings.Bookmarks.add(ContentResolver,Intent,String,String,char,int)",1,5,5
"android.provider.Settings.Bookmarks.getIntentForShortcut(ContentResolver,char)",1,5,6
"android.provider.Settings.Bookmarks.getLabelForFolder(Resources,String)",1,1,1
"android.provider.Settings.Bookmarks.getTitle(Context,Cursor)",4,2,7
"android.provider.Settings.NameValueCache.NameValueCache(String,Uri,String)",1,1,1
"android.provider.Settings.NameValueCache.getString(ContentResolver,String)",5,12,14
"android.provider.Settings.NameValueTable.getUriFor(Uri,String)",1,1,1
"android.provider.Settings.NameValueTable.putString(ContentResolver,Uri,String,String)",1,2,2
"android.provider.Settings.Secure.getBluetoothA2dpSinkPriorityKey(String)",1,1,1
"android.provider.Settings.Secure.getBluetoothHeadsetPriorityKey(String)",1,1,1
"android.provider.Settings.Secure.getBluetoothInputDevicePriorityKey(String)",1,1,1
"android.provider.Settings.Secure.getFloat(ContentResolver,String)",2,1,3
"android.provider.Settings.Secure.getFloat(ContentResolver,String,float)",1,2,3
"android.provider.Settings.Secure.getInt(ContentResolver,String)",1,1,2
"android.provider.Settings.Secure.getInt(ContentResolver,String,int)",1,2,3
"android.provider.Settings.Secure.getLong(ContentResolver,String)",1,1,2
"android.provider.Settings.Secure.getLong(ContentResolver,String,long)",1,2,3
"android.provider.Settings.Secure.getString(ContentResolver,String)",1,1,2
"android.provider.Settings.Secure.getUriFor(String)",1,1,1
"android.provider.Settings.Secure.isLocationProviderEnabled(ContentResolver,String)",1,1,1
"android.provider.Settings.Secure.putFloat(ContentResolver,String,float)",1,1,1
"android.provider.Settings.Secure.putInt(ContentResolver,String,int)",1,1,1
"android.provider.Settings.Secure.putLong(ContentResolver,String,long)",1,1,1
"android.provider.Settings.Secure.putString(ContentResolver,String,String)",1,1,1
"android.provider.Settings.Secure.setLocationProviderEnabled(ContentResolver,String,boolean)",1,1,2
"android.provider.Settings.SettingNotFoundException.SettingNotFoundException(String)",1,1,1
"android.provider.Settings.System.getConfiguration(ContentResolver,Configuration)",1,1,2
"android.provider.Settings.System.getFloat(ContentResolver,String)",2,1,3
"android.provider.Settings.System.getFloat(ContentResolver,String,float)",1,2,3
"android.provider.Settings.System.getInt(ContentResolver,String)",1,1,2
"android.provider.Settings.System.getInt(ContentResolver,String,int)",1,2,3
"android.provider.Settings.System.getLong(ContentResolver,String)",1,1,2
"android.provider.Settings.System.getLong(ContentResolver,String,long)",1,2,3
"android.provider.Settings.System.getShowGTalkServiceStatus(ContentResolver)",1,1,1
"android.provider.Settings.System.getString(ContentResolver,String)",2,2,3
"android.provider.Settings.System.getUriFor(String)",2,2,2
"android.provider.Settings.System.hasInterestingConfigurationChanges(int)",1,1,1
"android.provider.Settings.System.putConfiguration(ContentResolver,Configuration)",1,1,1
"android.provider.Settings.System.putFloat(ContentResolver,String,float)",1,1,1
"android.provider.Settings.System.putInt(ContentResolver,String,int)",1,1,1
"android.provider.Settings.System.putLong(ContentResolver,String,long)",1,1,1
"android.provider.Settings.System.putString(ContentResolver,String,String)",2,2,2
"android.provider.Settings.System.setShowGTalkServiceStatus(ContentResolver,boolean)",1,1,2
"android.provider.Settings.getGTalkDeviceId(long)",1,1,1
"android.provider.SocialContract.Activities.Activities()",1,1,1
"android.provider.SyncStateContract.Helpers.get(ContentProviderClient,Uri,Account)",2,2,2
"android.provider.SyncStateContract.Helpers.getWithUri(ContentProviderClient,Uri,Account)",2,2,2
"android.provider.SyncStateContract.Helpers.insert(ContentProviderClient,Uri,Account,byte[])",1,1,1
"android.provider.SyncStateContract.Helpers.newSetOperation(Uri,Account,byte[])",1,1,1
"android.provider.SyncStateContract.Helpers.newUpdateOperation(Uri,byte[])",1,1,1
"android.provider.SyncStateContract.Helpers.set(ContentProviderClient,Uri,Account,byte[])",1,1,1
"android.provider.SyncStateContract.Helpers.update(ContentProviderClient,Uri,byte[])",1,1,1
"android.provider.Telephony.Intents.Intents()",1,1,1
"android.provider.Telephony.Mms.Intents.Intents()",1,1,1
"android.provider.Telephony.Mms.extractAddrSpec(String)",2,2,2
"android.provider.Telephony.Mms.getMessageBoxName(int)",7,2,7
"android.provider.Telephony.Mms.isEmailAddress(String)",2,1,2
"android.provider.Telephony.Mms.isPhoneNumber(String)",2,1,2
"android.provider.Telephony.Mms.query(ContentResolver,String[])",1,1,1
"android.provider.Telephony.Mms.query(ContentResolver,String[],String,String)",1,1,2
"android.provider.Telephony.Sms.Draft.addMessage(ContentResolver,String,String,String,Long)",1,1,1
"android.provider.Telephony.Sms.Draft.saveMessage(ContentResolver,Uri,String)",1,1,1
"android.provider.Telephony.Sms.Inbox.addMessage(ContentResolver,String,String,String,Long,boolean)",1,1,1
"android.provider.Telephony.Sms.Intents.getMessagesFromIntent(Intent)",1,2,3
"android.provider.Telephony.Sms.Outbox.addMessage(ContentResolver,String,String,String,Long,boolean,long)",1,1,1
"android.provider.Telephony.Sms.Sent.addMessage(ContentResolver,String,String,String,Long)",1,1,1
"android.provider.Telephony.Sms.addMessageToUri(ContentResolver,Uri,String,String,String,Long,boolean,boolean)",1,1,1
"android.provider.Telephony.Sms.addMessageToUri(ContentResolver,Uri,String,String,String,Long,boolean,boolean,long)",1,5,5
"android.provider.Telephony.Sms.isOutgoingFolder(int)",1,1,4
"android.provider.Telephony.Sms.moveMessageToFolder(Context,Uri,int,int)",3,4,8
"android.provider.Telephony.Sms.query(ContentResolver,String[])",1,1,1
"android.provider.Telephony.Sms.query(ContentResolver,String[],String,String)",1,1,2
"android.provider.Telephony.Telephony()",1,1,1
"android.provider.Telephony.Threads.Threads()",1,1,1
"android.provider.Telephony.Threads.getOrCreateThreadId(Context,Set<String>)",3,6,6
"android.provider.Telephony.Threads.getOrCreateThreadId(Context,String)",1,1,1
"android.provider.UserDictionary.Words.addWord(Context,String,int,int)",2,4,7
"android.security.Md5MessageDigest.Md5MessageDigest()",1,1,1
"android.security.Md5MessageDigest.digest()",1,1,1
"android.security.Md5MessageDigest.digest(byte[])",1,1,1
"android.security.Md5MessageDigest.init()",1,1,1
"android.security.Md5MessageDigest.reset()",1,1,1
"android.security.Md5MessageDigest.update(byte[])",1,1,1
"android.security.MessageDigest.getInstance(String)",4,2,4
"android.security.Sha1MessageDigest.Sha1MessageDigest()",1,1,1
"android.security.Sha1MessageDigest.digest()",1,1,1
"android.security.Sha1MessageDigest.digest(byte[])",1,1,1
"android.security.Sha1MessageDigest.init()",1,1,1
"android.security.Sha1MessageDigest.reset()",1,1,1
"android.security.Sha1MessageDigest.update(byte[])",1,1,1
"android.server.BluetoothA2dpService.BluetoothA2dpService(Context,BluetoothService)",3,2,4
"android.server.BluetoothA2dpService.addAudioSink(BluetoothDevice)",4,4,4
"android.server.BluetoothA2dpService.adjustOtherSinkPriorities(BluetoothDevice)",1,4,4
"android.server.BluetoothA2dpService.avrcpVolumeDownNative(String)",1,1,1
"android.server.BluetoothA2dpService.avrcpVolumeUpNative(String)",1,1,1
"android.server.BluetoothA2dpService.checkSinkSuspendState(int)",1,4,6
"android.server.BluetoothA2dpService.cleanupNative()",1,1,1
"android.server.BluetoothA2dpService.connect(BluetoothDevice)",2,4,5
"android.server.BluetoothA2dpService.connectSinkInternal(BluetoothDevice)",6,4,7
"android.server.BluetoothA2dpService.connectSinkNative(String)",1,1,1
"android.server.BluetoothA2dpService.convertBluezSinkStringtoState(String)",5,1,5
"android.server.BluetoothA2dpService.disconnect(BluetoothDevice)",2,2,3
"android.server.BluetoothA2dpService.disconnectSinkInternal(BluetoothDevice)",3,3,3
"android.server.BluetoothA2dpService.disconnectSinkNative(String)",1,1,1
"android.server.BluetoothA2dpService.dump(FileDescriptor,PrintWriter,String[])",2,2,3
"android.server.BluetoothA2dpService.finalize()",1,1,1
"android.server.BluetoothA2dpService.getConnectedDevices()",1,1,1
"android.server.BluetoothA2dpService.getConnectionState(BluetoothDevice)",2,1,2
"android.server.BluetoothA2dpService.getDevicesMatchingConnectionStates(int[])",4,4,4
"android.server.BluetoothA2dpService.getPriority(BluetoothDevice)",1,1,1
"android.server.BluetoothA2dpService.getSinkPropertiesNative(String)",1,1,1
"android.server.BluetoothA2dpService.handleSinkPlayingStateChange(BluetoothDevice,int,int)",1,2,2
"android.server.BluetoothA2dpService.handleSinkStateChange(BluetoothDevice,int,int)",1,5,8
"android.server.BluetoothA2dpService.initNative()",1,1,1
"android.server.BluetoothA2dpService.isA2dpPlaying(BluetoothDevice)",2,2,3
"android.server.BluetoothA2dpService.isConnectSinkFeasible(BluetoothDevice)",4,4,7
"android.server.BluetoothA2dpService.isDisconnectSinkFeasible(BluetoothDevice)",3,2,3
"android.server.BluetoothA2dpService.isPhoneDocked(BluetoothDevice)",4,4,5
"android.server.BluetoothA2dpService.isSinkDevice(BluetoothDevice)",2,2,3
"android.server.BluetoothA2dpService.log(String)",1,1,1
"android.server.BluetoothA2dpService.onBluetoothDisable()",2,4,5
"android.server.BluetoothA2dpService.onBluetoothEnable()",1,5,5
"android.server.BluetoothA2dpService.onConnectSinkResult(String,boolean)",4,3,4
"android.server.BluetoothA2dpService.onSinkPropertyChanged(String,String[])",3,6,9
"android.server.BluetoothA2dpService.resumeSink(BluetoothDevice)",3,2,6
"android.server.BluetoothA2dpService.resumeSinkNative(String)",1,1,1
"android.server.BluetoothA2dpService.setPriority(BluetoothDevice,int)",1,1,1
"android.server.BluetoothA2dpService.suspendSink(BluetoothDevice)",3,2,6
"android.server.BluetoothA2dpService.suspendSinkNative(String)",1,1,1
"android.server.BluetoothEventLoop.BluetoothEventLoop(Context,BluetoothAdapter,BluetoothService)",1,1,1
"android.server.BluetoothEventLoop.addDevice(String,String[])",1,3,3
"android.server.BluetoothEventLoop.checkPairingRequestAndGetAddress(String,int)",3,4,4
"android.server.BluetoothEventLoop.classInitNative()",1,1,1
"android.server.BluetoothEventLoop.cleanupNativeDataNative()",1,1,1
"android.server.BluetoothEventLoop.finalize()",1,1,1
"android.server.BluetoothEventLoop.getPasskeyAgentRequestData()",1,1,1
"android.server.BluetoothEventLoop.getProfileProxy()",1,1,1
"android.server.BluetoothEventLoop.initializeNativeDataNative()",1,1,1
"android.server.BluetoothEventLoop.isEventLoopRunning()",1,1,1
"android.server.BluetoothEventLoop.isEventLoopRunningNative()",1,1,1
"android.server.BluetoothEventLoop.isOtherInputDeviceConnected(String)",3,2,3
"android.server.BluetoothEventLoop.isOtherSinkInNonDisconnectedState(String)",4,2,4
"android.server.BluetoothEventLoop.log(String)",1,1,1
"android.server.BluetoothEventLoop.onAgentAuthorize(String,String)",3,15,16
"android.server.BluetoothEventLoop.onAgentCancel()",1,1,1
"android.server.BluetoothEventLoop.onAgentOutOfBandDataAvailable(String)",4,1,4
"android.server.BluetoothEventLoop.onCreateDeviceResult(String,int)",2,5,6
"android.server.BluetoothEventLoop.onCreatePairedDeviceResult(String,int)",1,1,1
"android.server.BluetoothEventLoop.onDeviceCreated(String)",1,3,3
"android.server.BluetoothEventLoop.onDeviceDisappeared(String)",1,1,1
"android.server.BluetoothEventLoop.onDeviceDisconnectRequested(String)",2,2,2
"android.server.BluetoothEventLoop.onDeviceFound(String,String[])",2,2,2
"android.server.BluetoothEventLoop.onDevicePropertyChanged(String,String[])",2,15,15
"android.server.BluetoothEventLoop.onDeviceRemoved(String)",1,2,2
"android.server.BluetoothEventLoop.onDiscoverServicesResult(String,boolean)",1,2,2
"android.server.BluetoothEventLoop.onDisplayPasskey(String,int,int)",2,1,2
"android.server.BluetoothEventLoop.onInputDeviceConnectionResult(String,boolean)",3,4,5
"android.server.BluetoothEventLoop.onInputDevicePropertyChanged(String,String[])",2,2,3
"android.server.BluetoothEventLoop.onNetworkDeviceConnected(String,String,int)",1,1,1
"android.server.BluetoothEventLoop.onNetworkDeviceDisconnected(String)",1,1,1
"android.server.BluetoothEventLoop.onPanDeviceConnectionResult(String,boolean)",3,4,6
"android.server.BluetoothEventLoop.onPanDevicePropertyChanged(String,String[])",2,7,7
"android.server.BluetoothEventLoop.onPropertyChanged(String[])",4,17,19
"android.server.BluetoothEventLoop.onRequestOobData(String,int)",2,1,2
"android.server.BluetoothEventLoop.onRequestPairingConsent(String,int)",3,2,3
"android.server.BluetoothEventLoop.onRequestPasskey(String,int)",2,1,2
"android.server.BluetoothEventLoop.onRequestPasskeyConfirmation(String,int,int)",2,1,2
"android.server.BluetoothEventLoop.onRequestPinCode(String,int)",6,4,6
"android.server.BluetoothEventLoop.onRestartRequired()",1,2,2
"android.server.BluetoothEventLoop.start()",1,3,3
"android.server.BluetoothEventLoop.startEventLoopNative()",1,1,1
"android.server.BluetoothEventLoop.stop()",1,3,3
"android.server.BluetoothEventLoop.stopEventLoopNative()",1,1,1
"android.server.BluetoothService.BluetoothService(Context)",1,2,3
"android.server.BluetoothService.BondState.addAutoPairingFailure(String)",1,1,2
"android.server.BluetoothService.BondState.attempt(String)",1,2,2
"android.server.BluetoothService.BondState.clearPinAttempts(String)",1,1,1
"android.server.BluetoothService.BondState.copyAutoPairingData()",2,6,8
"android.server.BluetoothService.BondState.getAttempt(String)",2,1,2
"android.server.BluetoothService.BondState.getBondState(String)",2,1,2
"android.server.BluetoothService.BondState.getPendingOutgoingBonding()",1,1,1
"android.server.BluetoothService.BondState.hasAutoPairingFailed(String)",2,1,2
"android.server.BluetoothService.BondState.isAutoPairingAttemptsInProgress(String)",1,1,1
"android.server.BluetoothService.BondState.isAutoPairingBlacklisted(String)",14,10,14
"android.server.BluetoothService.BondState.listInState(int)",1,3,3
"android.server.BluetoothService.BondState.loadBondState()",3,4,6
"android.server.BluetoothService.BondState.readAutoPairingData()",4,11,15
"android.server.BluetoothService.BondState.setBondState(String,int)",1,1,1
"android.server.BluetoothService.BondState.setBondState(String,int,int)",2,7,9
"android.server.BluetoothService.BondState.setPendingOutgoingBonding(String)",1,1,1
"android.server.BluetoothService.BondState.updateAutoPairingData(String)",1,5,6
"android.server.BluetoothService.EnableThread.EnableThread(boolean)",1,1,1
"android.server.BluetoothService.EnableThread.run()",7,12,19
"android.server.BluetoothService.Reaper.Reaper(int,int)",1,1,1
"android.server.BluetoothService.Reaper.binderDied()",1,2,2
"android.server.BluetoothService.RemoteService.RemoteService(String,ParcelUuid)",1,1,1
"android.server.BluetoothService.RemoteService.equals(Object)",2,3,3
"android.server.BluetoothService.RemoteService.hashCode()",1,3,3
"android.server.BluetoothService.addProfileState(String)",2,1,2
"android.server.BluetoothService.addRemoteDeviceProperties(String,String[])",3,7,8
"android.server.BluetoothService.addReservedServiceRecordsNative(int[])",1,1,1
"android.server.BluetoothService.addRfcommServiceRecord(String,ParcelUuid,int,IBinder)",5,3,10
"android.server.BluetoothService.addRfcommServiceRecordNative(String,long,long,short)",1,1,1
"android.server.BluetoothService.allowIncomingTethering()",2,2,3
"android.server.BluetoothService.attemptAutoPair(String)",2,3,3
"android.server.BluetoothService.bluezStringToScanMode(boolean,boolean)",3,1,5
"android.server.BluetoothService.cancelBondProcess(String)",4,1,4
"android.server.BluetoothService.cancelDeviceCreationNative(String)",1,1,1
"android.server.BluetoothService.cancelDiscovery()",2,1,2
"android.server.BluetoothService.cancelPairingUserInput(String)",4,2,4
"android.server.BluetoothService.cancelPairingUserInputNative(String,int)",1,1,1
"android.server.BluetoothService.checkAndRemoveRecord(int,int)",1,4,4
"android.server.BluetoothService.classInitNative()",1,1,1
"android.server.BluetoothService.cleanupNativeDataNative()",1,1,1
"android.server.BluetoothService.connectHeadset(String)",3,2,3
"android.server.BluetoothService.connectInputDevice(BluetoothDevice)",3,4,5
"android.server.BluetoothService.connectInputDeviceInternal(BluetoothDevice)",2,2,2
"android.server.BluetoothService.connectInputDeviceNative(String)",1,1,1
"android.server.BluetoothService.connectPanDevice(BluetoothDevice)",3,6,7
"android.server.BluetoothService.connectPanDeviceNative(String,String)",1,1,1
"android.server.BluetoothService.connectSink(String)",3,2,3
"android.server.BluetoothService.createBond(String)",3,1,3
"android.server.BluetoothService.createBondOutOfBand(String,byte[],byte[])",3,1,3
"android.server.BluetoothService.createDeviceNative(String)",1,1,1
"android.server.BluetoothService.createNewTetheringAddressLocked()",4,4,4
"android.server.BluetoothService.createPairedDeviceNative(String,int)",1,1,1
"android.server.BluetoothService.createPairedDeviceOutOfBandNative(String,int)",1,1,1
"android.server.BluetoothService.disable()",1,1,1
"android.server.BluetoothService.disable(boolean)",4,4,8
"android.server.BluetoothService.disableNative()",1,1,1
"android.server.BluetoothService.disconnectDevices()",1,3,3
"android.server.BluetoothService.disconnectHeadset(String)",3,2,3
"android.server.BluetoothService.disconnectInputDevice(BluetoothDevice)",3,3,4
"android.server.BluetoothService.disconnectInputDeviceInternal(BluetoothDevice)",2,2,2
"android.server.BluetoothService.disconnectInputDeviceNative(String)",1,1,1
"android.server.BluetoothService.disconnectPan()",4,5,5
"android.server.BluetoothService.disconnectPanDevice(BluetoothDevice)",1,3,3
"android.server.BluetoothService.disconnectPanDeviceNative(String)",1,1,1
"android.server.BluetoothService.disconnectSink(String)",3,2,3
"android.server.BluetoothService.discoverServicesNative(String,String)",1,1,1
"android.server.BluetoothService.dump(FileDescriptor,PrintWriter,String[])",3,17,23
"android.server.BluetoothService.enable()",1,1,1
"android.server.BluetoothService.enable(boolean)",4,4,7
"android.server.BluetoothService.enableNative()",1,1,1
"android.server.BluetoothService.enableTethering(String)",5,8,11
"android.server.BluetoothService.fetchRemoteUuids(String,ParcelUuid,IBluetoothCallback)",7,7,11
"android.server.BluetoothService.finalize()",1,1,1
"android.server.BluetoothService.finishDisable(boolean)",2,5,7
"android.server.BluetoothService.getAdapterConnectionState()",1,1,1
"android.server.BluetoothService.getAdapterPathNative()",1,1,1
"android.server.BluetoothService.getAdapterPropertiesNative()",1,1,1
"android.server.BluetoothService.getAddress()",1,1,1
"android.server.BluetoothService.getAddressFromObjectPath(String)",4,4,5
"android.server.BluetoothService.getAllProperties()",4,9,9
"android.server.BluetoothService.getBluetoothState()",1,1,1
"android.server.BluetoothService.getBondState(String)",2,1,2
"android.server.BluetoothService.getConnectedInputDevices()",1,1,1
"android.server.BluetoothService.getConnectedPanDevices()",1,3,3
"android.server.BluetoothService.getDeviceOutOfBandData(BluetoothDevice)",1,1,1
"android.server.BluetoothService.getDevicePropertiesNative(String)",1,1,1
"android.server.BluetoothService.getDeviceServiceChannelNative(String,String,int)",1,1,1
"android.server.BluetoothService.getDiscoverableTimeout()",2,2,2
"android.server.BluetoothService.getDockPin()",1,1,1
"android.server.BluetoothService.getInputDevicePriority(BluetoothDevice)",1,1,1
"android.server.BluetoothService.getInputDeviceState(BluetoothDevice)",2,1,2
"android.server.BluetoothService.getName()",1,1,1
"android.server.BluetoothService.getObjectPathFromAddress(String)",2,2,2
"android.server.BluetoothService.getPanDeviceState(BluetoothDevice)",2,1,2
"android.server.BluetoothService.getPendingOutgoingBonding()",1,1,1
"android.server.BluetoothService.getProperty(String)",2,1,2
"android.server.BluetoothService.getPropertyInternal(String)",2,2,2
"android.server.BluetoothService.getRemoteClass(String)",3,3,3
"android.server.BluetoothService.getRemoteDeviceProperties(String)",2,1,2
"android.server.BluetoothService.getRemoteDeviceProperty(String,String)",3,3,3
"android.server.BluetoothService.getRemoteName(String)",2,1,2
"android.server.BluetoothService.getRemoteServiceChannel(String,ParcelUuid)",6,4,7
"android.server.BluetoothService.getRemoteUuids(String)",2,1,2
"android.server.BluetoothService.getScanMode()",2,1,2
"android.server.BluetoothService.getTrustState(String)",3,3,4
"android.server.BluetoothService.getUuidFromCache(String)",2,2,3
"android.server.BluetoothService.getUuids()",2,2,3
"android.server.BluetoothService.handleInputDevicePropertyChange(String,boolean)",1,1,2
"android.server.BluetoothService.handleInputDeviceStateChange(BluetoothDevice,int)",2,6,7
"android.server.BluetoothService.handlePanDeviceStateChange(BluetoothDevice,String,int,int)",2,10,13
"android.server.BluetoothService.handlePanDeviceStateChange(BluetoothDevice,int,int)",1,1,1
"android.server.BluetoothService.initAfterA2dpRegistration()",1,1,1
"android.server.BluetoothService.initAfterRegistration()",1,1,1
"android.server.BluetoothService.initProfileState()",2,3,4
"android.server.BluetoothService.initializeNativeDataNative()",1,1,1
"android.server.BluetoothService.isAdapterPropertiesEmpty()",1,1,1
"android.server.BluetoothService.isAirplaneModeOn()",1,1,1
"android.server.BluetoothService.isBluetoothDock(String)",1,1,1
"android.server.BluetoothService.isBondingFeasible(String)",7,6,8
"android.server.BluetoothService.isDiscovering()",1,1,1
"android.server.BluetoothService.isEnabled()",1,1,1
"android.server.BluetoothService.isEnabledInternal()",1,1,1
"android.server.BluetoothService.isEnabledNative()",1,1,1
"android.server.BluetoothService.isRemoteDeviceInCache(String)",1,1,1
"android.server.BluetoothService.isTetheringOn()",1,1,1
"android.server.BluetoothService.listBonds()",1,1,1
"android.server.BluetoothService.listInState(int)",1,1,1
"android.server.BluetoothService.log(String)",1,1,1
"android.server.BluetoothService.lookupInputDevicesMatchingStates(int[])",4,4,4
"android.server.BluetoothService.makeServiceChannelCallbacks(String)",1,6,6
"android.server.BluetoothService.notifyIncomingA2dpConnection(String)",2,2,2
"android.server.BluetoothService.notifyIncomingConnection(String)",2,2,2
"android.server.BluetoothService.onCreatePairedDeviceResult(String,int)",1,8,8
"android.server.BluetoothService.pairingAttempt(String,int)",3,3,3
"android.server.BluetoothService.persistBluetoothOnSetting(boolean)",1,1,2
"android.server.BluetoothService.readAdapterOutOfBandDataNative()",1,1,1
"android.server.BluetoothService.readDockBluetoothAddress()",3,5,7
"android.server.BluetoothService.readOutOfBandData()",2,1,2
"android.server.BluetoothService.registerForAirplaneMode(IntentFilter)",1,4,4
"android.server.BluetoothService.removeBond(String)",4,2,4
"android.server.BluetoothService.removeBondInternal(String)",1,1,1
"android.server.BluetoothService.removeDeviceNative(String)",1,1,1
"android.server.BluetoothService.removeProfileState(String)",1,1,1
"android.server.BluetoothService.removeRemoteDeviceProperties(String)",1,1,1
"android.server.BluetoothService.removeReservedServiceRecordsNative(int[])",1,1,1
"android.server.BluetoothService.removeServiceRecord(int)",1,1,1
"android.server.BluetoothService.removeServiceRecordNative(int)",1,1,1
"android.server.BluetoothService.restart()",2,1,3
"android.server.BluetoothService.scanModeToBluezString(int)",4,2,4
"android.server.BluetoothService.sendConnectionStateChange(BluetoothDevice,int,int)",1,2,2
"android.server.BluetoothService.sendProfileStateMessage(int,int)",1,3,3
"android.server.BluetoothService.sendUuidIntent(String)",1,2,2
"android.server.BluetoothService.setA2dpService(BluetoothA2dpService)",1,1,1
"android.server.BluetoothService.setAdapterPropertyBooleanNative(String,int)",1,1,1
"android.server.BluetoothService.setAdapterPropertyIntegerNative(String,int)",1,1,1
"android.server.BluetoothService.setAdapterPropertyStringNative(String,String)",1,1,1
"android.server.BluetoothService.setBluetoothState(int)",2,2,3
"android.server.BluetoothService.setBluetoothTethering(boolean)",1,5,5
"android.server.BluetoothService.setBluetoothTetheringNative(boolean,String,String)",1,1,1
"android.server.BluetoothService.setBondState(String,int)",1,1,1
"android.server.BluetoothService.setBondState(String,int,int)",1,1,1
"android.server.BluetoothService.setDeviceOutOfBandData(String,byte[],byte[])",2,2,3
"android.server.BluetoothService.setDevicePropertyBooleanNative(String,String,int)",1,1,1
"android.server.BluetoothService.setDiscoverableTimeout(int)",1,1,1
"android.server.BluetoothService.setInitialInputDevicePriority(BluetoothDevice,int)",2,3,4
"android.server.BluetoothService.setInputDevicePriority(BluetoothDevice,int)",2,1,2
"android.server.BluetoothService.setIsDiscovering(boolean)",1,1,1
"android.server.BluetoothService.setLinkTimeout(String,int)",1,2,2
"android.server.BluetoothService.setLinkTimeoutNative(String,int)",1,1,1
"android.server.BluetoothService.setName(String)",2,1,2
"android.server.BluetoothService.setPairingConfirmation(String,boolean)",3,2,3
"android.server.BluetoothService.setPairingConfirmationNative(String,boolean,int)",1,1,1
"android.server.BluetoothService.setPasskey(String,int)",4,4,6
"android.server.BluetoothService.setPasskeyNative(String,int,int)",1,1,1
"android.server.BluetoothService.setPin(String,byte[])",4,6,8
"android.server.BluetoothService.setPinNative(String,String,int)",1,1,1
"android.server.BluetoothService.setProperty(String,String)",1,1,1
"android.server.BluetoothService.setPropertyBoolean(String,boolean)",2,1,3
"android.server.BluetoothService.setPropertyInteger(String,int)",2,1,2
"android.server.BluetoothService.setPropertyString(String,String)",2,1,2
"android.server.BluetoothService.setRemoteDeviceProperty(String,String,String)",1,2,2
"android.server.BluetoothService.setRemoteOutOfBandData(String)",3,2,4
"android.server.BluetoothService.setRemoteOutOfBandDataNative(String,byte[],byte[],int)",1,1,1
"android.server.BluetoothService.setScanMode(int,int)",2,3,6
"android.server.BluetoothService.setTrust(String,boolean)",3,2,4
"android.server.BluetoothService.setupNativeDataNative()",1,1,1
"android.server.BluetoothService.startDiscovery()",2,1,2
"android.server.BluetoothService.startDiscoveryNative()",1,1,1
"android.server.BluetoothService.stopDiscoveryNative()",1,1,1
"android.server.BluetoothService.tearDownNativeDataNative()",1,1,1
"android.server.BluetoothService.toBondStateString(int)",5,2,5
"android.server.BluetoothService.translateToAdapterConnectionState(int)",6,2,6
"android.server.BluetoothService.updateCountersAndCheckForConnectionStateChange(BluetoothDevice,int,int)",6,2,18
"android.server.BluetoothService.updateDeviceServiceChannelCache(String)",1,17,17
"android.server.BluetoothService.updateRemoteDevicePropertiesCache(String)",2,2,2
"android.server.BluetoothService.writeDockPin()",1,4,5
"android.server.search.SearchManagerService.BootCompletedReceiver.onReceive(Context,Intent)",1,1,1
"android.server.search.SearchManagerService.MyPackageMonitor.onSomePackagesChanged()",1,1,1
"android.server.search.SearchManagerService.SearchManagerService(Context)",1,1,1
"android.server.search.SearchManagerService.getGlobalSearchActivity()",1,1,1
"android.server.search.SearchManagerService.getSearchableInfo(ComponentName)",2,2,2
"android.server.search.SearchManagerService.getSearchables()",1,2,2
"android.server.search.SearchManagerService.getSearchablesInGlobalSearch()",1,1,1
"android.server.search.SearchManagerService.getWebSearchActivity()",1,1,1
"android.server.search.Searchables.Searchables(Context)",1,1,1
"android.server.search.Searchables.buildSearchableList()",1,9,10
"android.server.search.Searchables.findGlobalSearchActivity()",3,4,4
"android.server.search.Searchables.findWebSearchActivity(ComponentName)",3,3,4
"android.server.search.Searchables.getGlobalSearchActivity()",1,1,1
"android.server.search.Searchables.getSearchableInfo(ComponentName)",5,6,10
"android.server.search.Searchables.getSearchablesInGlobalSearchList()",1,1,1
"android.server.search.Searchables.getSearchablesList()",1,1,1
"android.server.search.Searchables.getWebSearchActivity()",1,1,1
"android.service.wallpaper.WallpaperService.Engine.attach(IWallpaperEngineWrapper)",2,3,4
"android.service.wallpaper.WallpaperService.Engine.detach()",2,8,10
"android.service.wallpaper.WallpaperService.Engine.dispatchPointer(MotionEvent)",1,1,2
"android.service.wallpaper.WallpaperService.Engine.doCommand(WallpaperCommand)",1,4,5
"android.service.wallpaper.WallpaperService.Engine.doDesiredSizeChanged(int,int)",1,3,3
"android.service.wallpaper.WallpaperService.Engine.doOffsetsChanged()",2,5,9
"android.service.wallpaper.WallpaperService.Engine.doVisibilityChanged(boolean)",1,2,2
"android.service.wallpaper.WallpaperService.Engine.getDesiredMinimumHeight()",1,1,1
"android.service.wallpaper.WallpaperService.Engine.getDesiredMinimumWidth()",1,1,1
"android.service.wallpaper.WallpaperService.Engine.getSurfaceHolder()",1,1,1
"android.service.wallpaper.WallpaperService.Engine.isPreview()",1,1,1
"android.service.wallpaper.WallpaperService.Engine.isVisible()",1,1,1
"android.service.wallpaper.WallpaperService.Engine.onCommand(String,int,int,int,Bundle,boolean)",1,1,1
"android.service.wallpaper.WallpaperService.Engine.onCreate(SurfaceHolder)",1,1,1
"android.service.wallpaper.WallpaperService.Engine.onDesiredSizeChanged(int,int)",1,1,1
"android.service.wallpaper.WallpaperService.Engine.onDestroy()",1,1,1
"android.service.wallpaper.WallpaperService.Engine.onOffsetsChanged(float,float,float,float,int,int)",1,1,1
"android.service.wallpaper.WallpaperService.Engine.onSurfaceChanged(SurfaceHolder,int,int,int)",1,1,1
"android.service.wallpaper.WallpaperService.Engine.onSurfaceCreated(SurfaceHolder)",1,1,1
"android.service.wallpaper.WallpaperService.Engine.onSurfaceDestroyed(SurfaceHolder)",1,1,1
"android.service.wallpaper.WallpaperService.Engine.onSurfaceRedrawNeeded(SurfaceHolder)",1,1,1
"android.service.wallpaper.WallpaperService.Engine.onTouchEvent(MotionEvent)",1,1,1
"android.service.wallpaper.WallpaperService.Engine.onVisibilityChanged(boolean)",1,1,1
"android.service.wallpaper.WallpaperService.Engine.reportSurfaceDestroyed()",1,5,5
"android.service.wallpaper.WallpaperService.Engine.reportVisibility()",1,5,6
"android.service.wallpaper.WallpaperService.Engine.setTouchEventsEnabled(boolean)",1,2,3
"android.service.wallpaper.WallpaperService.Engine.updateSurface(boolean,boolean,boolean)",3,23,41
"android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper.IWallpaperEngineWrapper(WallpaperService,IWallpaperConnection,IBinder,int,boolean,int,int)",1,3,4
"android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper.destroy()",1,1,1
"android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper.dispatchPointer(MotionEvent)",1,2,2
"android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper.dispatchWallpaperCommand(String,int,int,int,Bundle)",1,2,2
"android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper.executeMessage(Message)",5,9,17
"android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper.setDesiredSize(int,int)",1,1,1
"android.service.wallpaper.WallpaperService.IWallpaperEngineWrapper.setVisibility(boolean)",1,1,2
"android.service.wallpaper.WallpaperService.IWallpaperServiceWrapper.IWallpaperServiceWrapper(WallpaperService)",1,1,1
"android.service.wallpaper.WallpaperService.IWallpaperServiceWrapper.attach(IWallpaperConnection,IBinder,int,boolean,int,int)",1,1,1
"android.service.wallpaper.WallpaperService.onBind(Intent)",1,1,1
"android.service.wallpaper.WallpaperService.onCreate()",1,1,1
"android.service.wallpaper.WallpaperService.onDestroy()",1,2,2
"android.service.wallpaper.WallpaperService.setCallbackLooper(Looper)",1,1,1
"android.service.wallpaper.WallpaperSettingsActivity.onCreate(Bundle)",1,3,3
"android.speech.RecognitionService.Callback.Callback(IRecognitionListener)",1,1,1
"android.speech.RecognitionService.Callback.beginningOfSpeech()",1,2,2
"android.speech.RecognitionService.Callback.bufferReceived(byte[])",1,1,1
"android.speech.RecognitionService.Callback.endOfSpeech()",1,1,1
"android.speech.RecognitionService.Callback.error(int)",1,1,1
"android.speech.RecognitionService.Callback.partialResults(Bundle)",1,1,1
"android.speech.RecognitionService.Callback.readyForSpeech(Bundle)",1,1,1
"android.speech.RecognitionService.Callback.results(Bundle)",1,1,1
"android.speech.RecognitionService.Callback.rmsChanged(float)",1,1,1
"android.speech.RecognitionService.RecognitionServiceBinder.RecognitionServiceBinder(RecognitionService)",1,1,1
"android.speech.RecognitionService.RecognitionServiceBinder.cancel(IRecognitionListener)",1,4,4
"android.speech.RecognitionService.RecognitionServiceBinder.clearReference()",1,1,1
"android.speech.RecognitionService.RecognitionServiceBinder.startListening(Intent,IRecognitionListener)",1,4,4
"android.speech.RecognitionService.RecognitionServiceBinder.stopListening(IRecognitionListener)",1,4,4
"android.speech.RecognitionService.StartListeningArgs.StartListeningArgs(Intent,IRecognitionListener)",1,1,1
"android.speech.RecognitionService.checkPermissions(IRecognitionListener)",2,3,4
"android.speech.RecognitionService.dispatchCancel(IRecognitionListener)",1,5,5
"android.speech.RecognitionService.dispatchStartListening(Intent,IRecognitionListener)",1,4,4
"android.speech.RecognitionService.dispatchStopListening(IRecognitionListener)",1,4,4
"android.speech.RecognitionService.onBind(Intent)",1,2,2
"android.speech.RecognitionService.onDestroy()",1,2,2
"android.speech.RecognizerIntent.RecognizerIntent()",1,1,1
"android.speech.RecognizerIntent.getVoiceDetailsIntent(Context)",3,1,5
"android.speech.RecognizerResultsIntent.RecognizerResultsIntent()",1,1,1
"android.speech.SpeechRecognizer.Connection.onServiceConnected(ComponentName,IBinder)",1,3,3
"android.speech.SpeechRecognizer.Connection.onServiceDisconnected(ComponentName)",1,2,2
"android.speech.SpeechRecognizer.InternalListener.onBeginningOfSpeech()",1,1,1
"android.speech.SpeechRecognizer.InternalListener.onBufferReceived(byte[])",1,1,1
"android.speech.SpeechRecognizer.InternalListener.onEndOfSpeech()",1,1,1
"android.speech.SpeechRecognizer.InternalListener.onError(int)",1,1,1
"android.speech.SpeechRecognizer.InternalListener.onEvent(int,Bundle)",1,1,1
"android.speech.SpeechRecognizer.InternalListener.onPartialResults(Bundle)",1,1,1
"android.speech.SpeechRecognizer.InternalListener.onReadyForSpeech(Bundle)",1,1,1
"android.speech.SpeechRecognizer.InternalListener.onResults(Bundle)",1,1,1
"android.speech.SpeechRecognizer.InternalListener.onRmsChanged(float)",1,1,1
"android.speech.SpeechRecognizer.SpeechRecognizer(Context,ComponentName)",1,1,1
"android.speech.SpeechRecognizer.cancel()",1,1,1
"android.speech.SpeechRecognizer.checkIsCalledFromMainThread()",2,1,2
"android.speech.SpeechRecognizer.checkOpenConnection()",2,1,2
"android.speech.SpeechRecognizer.createSpeechRecognizer(Context)",1,1,1
"android.speech.SpeechRecognizer.createSpeechRecognizer(Context,ComponentName)",2,1,2
"android.speech.SpeechRecognizer.destroy()",1,2,2
"android.speech.SpeechRecognizer.handleCancelMessage()",2,3,4
"android.speech.SpeechRecognizer.handleChangeListener(RecognitionListener)",1,2,2
"android.speech.SpeechRecognizer.handleStartListening(Intent)",2,3,4
"android.speech.SpeechRecognizer.handleStopMessage()",2,3,4
"android.speech.SpeechRecognizer.isRecognitionAvailable(Context)",1,2,2
"android.speech.SpeechRecognizer.putMessage(Message)",1,2,2
"android.speech.SpeechRecognizer.setRecognitionListener(RecognitionListener)",1,1,1
"android.speech.SpeechRecognizer.startListening(Intent)",6,5,6
"android.speech.SpeechRecognizer.stopListening()",1,1,1
"android.speech.srec.MicrophoneInputStream.AudioRecordDelete(int)",1,1,1
"android.speech.srec.MicrophoneInputStream.AudioRecordNew(int,int)",1,1,1
"android.speech.srec.MicrophoneInputStream.AudioRecordRead(int,byte[],int,int)",1,1,1
"android.speech.srec.MicrophoneInputStream.AudioRecordStart(int)",1,1,1
"android.speech.srec.MicrophoneInputStream.AudioRecordStop(int)",1,1,1
"android.speech.srec.MicrophoneInputStream.MicrophoneInputStream(int,int)",3,2,3
"android.speech.srec.MicrophoneInputStream.close()",1,2,2
"android.speech.srec.MicrophoneInputStream.finalize()",2,2,2
"android.speech.srec.MicrophoneInputStream.read()",2,1,3
"android.speech.srec.MicrophoneInputStream.read(byte[])",2,1,2
"android.speech.srec.MicrophoneInputStream.read(byte[],int,int)",2,1,2
"android.speech.srec.Recognizer.Grammar.Grammar(String)",1,1,1
"android.speech.srec.Recognizer.Grammar.addWordToSlot(String,String,String,int,String)",1,1,1
"android.speech.srec.Recognizer.Grammar.compile()",1,1,1
"android.speech.srec.Recognizer.Grammar.destroy()",1,2,2
"android.speech.srec.Recognizer.Grammar.finalize()",2,2,2
"android.speech.srec.Recognizer.Grammar.resetAllSlots()",1,1,1
"android.speech.srec.Recognizer.Grammar.save(String)",1,1,1
"android.speech.srec.Recognizer.Grammar.setupRecognizer()",1,1,1
"android.speech.srec.Recognizer.PMemInit()",1,1,1
"android.speech.srec.Recognizer.PMemShutdown()",1,1,1
"android.speech.srec.Recognizer.Recognizer(String)",1,1,1
"android.speech.srec.Recognizer.SR_AcousticStateGet(int)",1,1,1
"android.speech.srec.Recognizer.SR_AcousticStateReset(int)",1,1,1
"android.speech.srec.Recognizer.SR_AcousticStateSet(int,String)",1,1,1
"android.speech.srec.Recognizer.SR_GrammarAddWordToSlot(int,String,String,String,int,String)",1,1,1
"android.speech.srec.Recognizer.SR_GrammarAllowAll(int)",1,1,1
"android.speech.srec.Recognizer.SR_GrammarAllowOnly(int,String)",1,1,1
"android.speech.srec.Recognizer.SR_GrammarCompile(int)",1,1,1
"android.speech.srec.Recognizer.SR_GrammarCreate()",1,1,1
"android.speech.srec.Recognizer.SR_GrammarDestroy(int)",1,1,1
"android.speech.srec.Recognizer.SR_GrammarLoad(String)",1,1,1
"android.speech.srec.Recognizer.SR_GrammarResetAllSlots(int)",1,1,1
"android.speech.srec.Recognizer.SR_GrammarSave(int,String)",1,1,1
"android.speech.srec.Recognizer.SR_GrammarSetupRecognizer(int,int)",1,1,1
"android.speech.srec.Recognizer.SR_GrammarSetupVocabulary(int,int)",1,1,1
"android.speech.srec.Recognizer.SR_GrammarUnsetupRecognizer(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerActivateRule(int,int,String,int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerAdvance(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerCheckGrammarConsistency(int,int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerCreate()",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerDeactivateAllRules(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerDeactivateRule(int,int,String)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerDestroy(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerGetBoolParameter(int,String)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerGetParameter(int,String)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerGetSize_tParameter(int,String)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerHasSetupRules(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerIsActiveRule(int,int,String)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerIsSetup(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerIsSignalClipping(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerIsSignalDCOffset(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerIsSignalNoisy(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerIsSignalTooFewSamples(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerIsSignalTooManySamples(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerIsSignalTooQuiet(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerPutAudio(int,byte[],int,int,boolean)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerResultGetKeyCount(int,int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerResultGetKeyList(int,int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerResultGetSize(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerResultGetValue(int,int,String)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerResultGetWaveform(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerSetBoolParameter(int,String,boolean)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerSetParameter(int,String,String)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerSetSize_tParameter(int,String,int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerSetup(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerSetupRule(int,int,String)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerStart(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerStop(int)",1,1,1
"android.speech.srec.Recognizer.SR_RecognizerUnsetup(int)",1,1,1
"android.speech.srec.Recognizer.SR_SessionCreate(String)",1,1,1
"android.speech.srec.Recognizer.SR_SessionDestroy()",1,1,1
"android.speech.srec.Recognizer.SR_VocabularyDestroy(int)",1,1,1
"android.speech.srec.Recognizer.SR_VocabularyGetPronunciation(int,String)",1,1,1
"android.speech.srec.Recognizer.SR_VocabularyLoad()",1,1,1
"android.speech.srec.Recognizer.advance()",1,1,1
"android.speech.srec.Recognizer.destroy()",1,4,4
"android.speech.srec.Recognizer.eventToString(int)",14,2,14
"android.speech.srec.Recognizer.finalize()",2,2,3
"android.speech.srec.Recognizer.getAcousticState()",1,1,1
"android.speech.srec.Recognizer.getConfigDir(Locale)",2,1,3
"android.speech.srec.Recognizer.getResult(int,String)",1,1,1
"android.speech.srec.Recognizer.getResultCount()",1,1,1
"android.speech.srec.Recognizer.getResultKeys(int)",1,1,1
"android.speech.srec.Recognizer.putAudio(InputStream)",3,2,4
"android.speech.srec.Recognizer.putAudio(byte[],int,int,boolean)",1,1,1
"android.speech.srec.Recognizer.resetAcousticState()",1,1,1
"android.speech.srec.Recognizer.setAcousticState(String)",1,1,1
"android.speech.srec.Recognizer.start()",1,1,1
"android.speech.srec.Recognizer.stop()",1,1,1
"android.speech.srec.UlawEncoderInputStream.UlawEncoderInputStream(InputStream,int)",1,1,1
"android.speech.srec.UlawEncoderInputStream.available()",1,1,1
"android.speech.srec.UlawEncoderInputStream.close()",1,2,2
"android.speech.srec.UlawEncoderInputStream.encode(byte[],int,byte[],int,int,int)",1,1,22
"android.speech.srec.UlawEncoderInputStream.maxAbsPcm(byte[],int,int)",1,1,4
"android.speech.srec.UlawEncoderInputStream.read()",2,1,2
"android.speech.srec.UlawEncoderInputStream.read(byte[])",1,1,1
"android.speech.srec.UlawEncoderInputStream.read(byte[],int,int)",4,2,5
"android.speech.srec.WaveHeader.WaveHeader()",1,1,1
"android.speech.srec.WaveHeader.WaveHeader(short,short,int,short,int)",1,1,1
"android.speech.srec.WaveHeader.getBitsPerSample()",1,1,1
"android.speech.srec.WaveHeader.getFormat()",1,1,1
"android.speech.srec.WaveHeader.getNumBytes()",1,1,1
"android.speech.srec.WaveHeader.getNumChannels()",1,1,1
"android.speech.srec.WaveHeader.getSampleRate()",1,1,1
"android.speech.srec.WaveHeader.read(InputStream)",4,1,4
"android.speech.srec.WaveHeader.readId(InputStream,String)",3,2,3
"android.speech.srec.WaveHeader.readInt(InputStream)",1,1,1
"android.speech.srec.WaveHeader.readShort(InputStream)",1,1,1
"android.speech.srec.WaveHeader.setBitsPerSample(short)",1,1,1
"android.speech.srec.WaveHeader.setFormat(short)",1,1,1
"android.speech.srec.WaveHeader.setNumBytes(int)",1,1,1
"android.speech.srec.WaveHeader.setNumChannels(short)",1,1,1
"android.speech.srec.WaveHeader.setSampleRate(int)",1,1,1
"android.speech.srec.WaveHeader.toString()",1,1,1
"android.speech.srec.WaveHeader.write(OutputStream)",1,1,1
"android.speech.srec.WaveHeader.writeId(OutputStream,String)",1,2,2
"android.speech.srec.WaveHeader.writeInt(OutputStream,int)",1,1,1
"android.speech.srec.WaveHeader.writeShort(OutputStream,short)",1,1,1
"android.speech.tts.TextToSpeech.TextToSpeech(Context,OnInitListener)",1,1,1
"android.speech.tts.TextToSpeech.addEarcon(String,String)",2,4,5
"android.speech.tts.TextToSpeech.addEarcon(String,String,int)",2,4,5
"android.speech.tts.TextToSpeech.addSpeech(String,String)",2,4,5
"android.speech.tts.TextToSpeech.addSpeech(String,String,int)",2,4,5
"android.speech.tts.TextToSpeech.areDefaultsEnforced()",2,4,5
"android.speech.tts.TextToSpeech.getDefaultEngine()",2,4,5
"android.speech.tts.TextToSpeech.getLanguage()",4,5,8
"android.speech.tts.TextToSpeech.initTts()",1,2,2
"android.speech.tts.TextToSpeech.isLanguageAvailable(Locale)",2,4,5
"android.speech.tts.TextToSpeech.isSpeaking()",2,4,5
"android.speech.tts.TextToSpeech.playEarcon(String,int,HashMap<String, String>)",2,6,9
"android.speech.tts.TextToSpeech.playSilence(long,int,HashMap<String, String>)",2,6,8
"android.speech.tts.TextToSpeech.resetCachedParams()",1,1,1
"android.speech.tts.TextToSpeech.setEngineByPackageName(String)",2,4,6
"android.speech.tts.TextToSpeech.setLanguage(Locale)",3,4,9
"android.speech.tts.TextToSpeech.setOnUtteranceCompletedListener(OnUtteranceCompletedListener)",2,5,6
"android.speech.tts.TextToSpeech.setPitch(float)",2,4,5
"android.speech.tts.TextToSpeech.setSpeechRate(float)",2,4,6
"android.speech.tts.TextToSpeech.shutdown()",1,1,2
"android.speech.tts.TextToSpeech.speak(String,int,HashMap<String, String>)",2,6,10
"android.speech.tts.TextToSpeech.stop()",2,4,5
"android.speech.tts.TextToSpeech.synthesizeToFile(String,HashMap<String, String>,String)",2,6,10
"android.test.AndroidTestCase.assertActivityRequiresPermission(String,String,String)",1,2,2
"android.test.AndroidTestCase.assertReadingContentUriRequiresPermission(Uri,String)",1,2,2
"android.test.AndroidTestCase.assertWritingContentUriRequiresPermission(Uri,String)",1,2,2
"android.test.AndroidTestCase.getContext()",1,1,1
"android.test.AndroidTestCase.getTestContext()",1,1,1
"android.test.AndroidTestCase.scrubClass(Class<?>)",1,6,6
"android.test.AndroidTestCase.setContext(Context)",1,1,1
"android.test.AndroidTestCase.setTestContext(Context)",1,1,1
"android.test.AndroidTestCase.setUp()",1,1,1
"android.test.AndroidTestCase.tearDown()",1,1,1
"android.test.AndroidTestCase.testAndroidTestCaseSetupProperly()",1,1,1
"android.test.InstrumentationTestCase.getInstrumentation()",1,1,1
"android.test.InstrumentationTestCase.injectInsrumentation(Instrumentation)",1,1,1
"android.test.InstrumentationTestCase.injectInstrumentation(Instrumentation)",1,1,1
"android.test.InstrumentationTestCase.launchActivity(String,Class<T>,Bundle)",1,2,2
"android.test.InstrumentationTestCase.launchActivityWithIntent(String,Class<T>,Intent)",1,1,1
"android.test.InstrumentationTestCase.runMethod(Method,int)",1,1,1
"android.test.InstrumentationTestCase.runMethod(Method,int,boolean)",2,5,8
"android.test.InstrumentationTestCase.runTest()",3,6,8
"android.test.InstrumentationTestCase.runTestOnUiThread(Runnable)",2,1,3
"android.test.InstrumentationTestCase.sendKeys(String)",3,8,9
"android.test.InstrumentationTestCase.sendKeys(int...)",1,2,3
"android.test.InstrumentationTestCase.sendRepeatedKeys(int...)",2,3,5
"android.test.InstrumentationTestCase.tearDown()",1,1,1
"android.test.InstrumentationTestSuite.InstrumentationTestSuite(Class,Instrumentation)",1,1,1
"android.test.InstrumentationTestSuite.InstrumentationTestSuite(Instrumentation)",1,1,1
"android.test.InstrumentationTestSuite.InstrumentationTestSuite(String,Instrumentation)",1,1,1
"android.test.InstrumentationTestSuite.addTestSuite(Class)",1,1,1
"android.test.InstrumentationTestSuite.runTest(Test,TestResult)",1,2,2
"android.text.AlteredCharSequence.AlteredCharSequence(CharSequence,char[],int,int)",1,1,1
"android.text.AlteredCharSequence.AlteredSpanned.AlteredSpanned(CharSequence,char[],int,int)",1,1,1
"android.text.AlteredCharSequence.AlteredSpanned.getSpanEnd(Object)",1,1,1
"android.text.AlteredCharSequence.AlteredSpanned.getSpanFlags(Object)",1,1,1
"android.text.AlteredCharSequence.AlteredSpanned.getSpanStart(Object)",1,1,1
"android.text.AlteredCharSequence.AlteredSpanned.getSpans(int,int,Class<T>)",1,1,1
"android.text.AlteredCharSequence.AlteredSpanned.nextSpanTransition(int,int,Class)",1,1,1
"android.text.AlteredCharSequence.charAt(int)",2,2,3
"android.text.AlteredCharSequence.getChars(int,int,char[],int)",1,2,2
"android.text.AlteredCharSequence.length()",1,1,1
"android.text.AlteredCharSequence.make(CharSequence,char[],int,int)",2,1,2
"android.text.AlteredCharSequence.subSequence(int,int)",1,1,1
"android.text.AlteredCharSequence.toString()",1,1,1
"android.text.AlteredCharSequence.update(char[],int,int)",1,1,1
"android.text.AndroidBidi.bidi(int,char[],byte[],int,boolean)",4,2,12
"android.text.AndroidBidi.directions(int,byte[],int,char[],int,int)",7,1,26
"android.text.AndroidBidi.runBidi(int,char[],byte[],int,boolean)",1,1,1
"android.text.AndroidCharacter.getDirectionalities(char[],byte[],int)",1,1,1
"android.text.AndroidCharacter.getEastAsianWidth(char)",1,1,1
"android.text.AndroidCharacter.getEastAsianWidths(char[],int,int,byte[])",1,1,1
"android.text.AndroidCharacter.getMirror(char)",1,1,1
"android.text.AndroidCharacter.mirror(char[],int,int)",1,1,1
"android.text.Annotation.Annotation(Parcel)",1,1,1
"android.text.Annotation.Annotation(String,String)",1,1,1
"android.text.Annotation.describeContents()",1,1,1
"android.text.Annotation.getKey()",1,1,1
"android.text.Annotation.getSpanTypeId()",1,1,1
"android.text.Annotation.getValue()",1,1,1
"android.text.Annotation.writeToParcel(Parcel,int)",1,1,1
"android.text.AutoText.AutoText(Resources)",1,1,1
"android.text.AutoText.add(String,char)",7,3,7
"android.text.AutoText.get(CharSequence,int,int,View)",1,1,1
"android.text.AutoText.getInstance(View)",1,1,2
"android.text.AutoText.getSize()",1,1,1
"android.text.AutoText.getSize(View)",1,1,1
"android.text.AutoText.init(Resources)",3,5,8
"android.text.AutoText.lookup(CharSequence,int,int)",6,5,7
"android.text.AutoText.newTrieNode()",1,2,2
"android.text.BoringLayout.BoringLayout(CharSequence,TextPaint,int,Alignment,float,float,Metrics,boolean)",1,1,1
"android.text.BoringLayout.BoringLayout(CharSequence,TextPaint,int,Alignment,float,float,Metrics,boolean,TruncateAt,int)",1,2,3
"android.text.BoringLayout.Metrics.toString()",1,1,1
"android.text.BoringLayout.draw(Canvas,Path,Paint,int)",1,2,3
"android.text.BoringLayout.ellipsized(int,int)",1,1,1
"android.text.BoringLayout.getBottomPadding()",1,1,1
"android.text.BoringLayout.getEllipsisCount(int)",1,1,1
"android.text.BoringLayout.getEllipsisStart(int)",1,1,1
"android.text.BoringLayout.getEllipsizedWidth()",1,1,1
"android.text.BoringLayout.getHeight()",1,1,1
"android.text.BoringLayout.getLineContainsTab(int)",1,1,1
"android.text.BoringLayout.getLineCount()",1,1,1
"android.text.BoringLayout.getLineDescent(int)",1,1,1
"android.text.BoringLayout.getLineDirections(int)",1,1,1
"android.text.BoringLayout.getLineMax(int)",1,1,1
"android.text.BoringLayout.getLineStart(int)",2,2,2
"android.text.BoringLayout.getLineTop(int)",2,1,2
"android.text.BoringLayout.getParagraphDirection(int)",1,1,1
"android.text.BoringLayout.getTopPadding()",1,1,1
"android.text.BoringLayout.init(CharSequence,TextPaint,int,Alignment,float,float,Metrics,boolean,boolean)",1,3,9
"android.text.BoringLayout.isBoring(CharSequence,TextPaint)",1,1,1
"android.text.BoringLayout.isBoring(CharSequence,TextPaint,Metrics)",5,4,12
"android.text.BoringLayout.make(CharSequence,TextPaint,int,Alignment,float,float,Metrics,boolean)",1,1,1
"android.text.BoringLayout.make(CharSequence,TextPaint,int,Alignment,float,float,Metrics,boolean,TruncateAt,int)",1,1,1
"android.text.BoringLayout.replaceOrMake(CharSequence,TextPaint,int,Alignment,float,float,Metrics,boolean)",1,1,1
"android.text.BoringLayout.replaceOrMake(CharSequence,TextPaint,int,Alignment,float,float,Metrics,boolean,TruncateAt,int)",1,2,3
"android.text.DynamicLayout.ChangeWatcher.ChangeWatcher(DynamicLayout)",1,1,1
"android.text.DynamicLayout.ChangeWatcher.afterTextChanged(Editable)",1,1,1
"android.text.DynamicLayout.ChangeWatcher.beforeTextChanged(CharSequence,int,int,int)",1,1,1
"android.text.DynamicLayout.ChangeWatcher.onSpanAdded(Spannable,Object,int,int)",1,2,2
"android.text.DynamicLayout.ChangeWatcher.onSpanChanged(Spannable,Object,int,int,int,int)",1,2,2
"android.text.DynamicLayout.ChangeWatcher.onSpanRemoved(Spannable,Object,int,int)",1,2,2
"android.text.DynamicLayout.ChangeWatcher.onTextChanged(CharSequence,int,int,int)",1,1,1
"android.text.DynamicLayout.ChangeWatcher.reflow(CharSequence,int,int,int)",1,3,3
"android.text.DynamicLayout.DynamicLayout(CharSequence,CharSequence,TextPaint,int,Alignment,float,float,boolean)",1,1,1
"android.text.DynamicLayout.DynamicLayout(CharSequence,CharSequence,TextPaint,int,Alignment,float,float,boolean,TruncateAt,int)",1,4,9
"android.text.DynamicLayout.DynamicLayout(CharSequence,TextPaint,int,Alignment,float,float,boolean)",1,1,1
"android.text.DynamicLayout.dump(boolean)",1,3,3
"android.text.DynamicLayout.getBottomPadding()",1,1,1
"android.text.DynamicLayout.getEllipsisCount(int)",2,1,2
"android.text.DynamicLayout.getEllipsisStart(int)",2,1,2
"android.text.DynamicLayout.getEllipsizedWidth()",1,1,1
"android.text.DynamicLayout.getLineContainsTab(int)",1,1,1
"android.text.DynamicLayout.getLineCount()",1,1,1
"android.text.DynamicLayout.getLineDescent(int)",1,1,1
"android.text.DynamicLayout.getLineDirections(int)",1,1,1
"android.text.DynamicLayout.getLineStart(int)",1,1,1
"android.text.DynamicLayout.getLineTop(int)",1,1,1
"android.text.DynamicLayout.getParagraphDirection(int)",1,1,1
"android.text.DynamicLayout.getTopPadding()",1,1,1
"android.text.DynamicLayout.reflow(CharSequence,int,int,int)",2,10,23
"android.text.Editable.Factory.getInstance()",1,1,1
"android.text.Editable.Factory.newEditable(CharSequence)",1,1,1
"android.text.Html.Html()",1,1,1
"android.text.Html.fromHtml(String)",1,1,1
"android.text.Html.fromHtml(String,ImageGetter,TagHandler)",1,1,3
"android.text.Html.toHtml(Spanned)",1,1,1
"android.text.Html.withinBlockquote(StringBuilder,Spanned,int,int)",1,3,5
"android.text.Html.withinDiv(StringBuilder,Spanned,int,int)",1,4,4
"android.text.Html.withinHtml(StringBuilder,Spanned)",1,6,8
"android.text.Html.withinParagraph(StringBuilder,Spanned,int,int,int,boolean)",1,32,34
"android.text.Html.withinStyle(StringBuilder,Spanned,int,int)",1,9,10
"android.text.HtmlToSpannedConverter.Font.Font(String,String)",1,1,1
"android.text.HtmlToSpannedConverter.Header.Header(int)",1,1,1
"android.text.HtmlToSpannedConverter.Href.Href(String)",1,1,1
"android.text.HtmlToSpannedConverter.HtmlToSpannedConverter(String,ImageGetter,TagHandler,Parser)",1,1,1
"android.text.HtmlToSpannedConverter.buildColorMap()",1,1,1
"android.text.HtmlToSpannedConverter.characters(char[],int,int)",1,6,8
"android.text.HtmlToSpannedConverter.convert()",1,5,8
"android.text.HtmlToSpannedConverter.end(SpannableStringBuilder,Class,Object)",1,2,2
"android.text.HtmlToSpannedConverter.endA(SpannableStringBuilder)",1,3,3
"android.text.HtmlToSpannedConverter.endDocument()",1,1,1
"android.text.HtmlToSpannedConverter.endElement(String,String,String)",1,1,1
"android.text.HtmlToSpannedConverter.endFont(SpannableStringBuilder)",1,7,7
"android.text.HtmlToSpannedConverter.endHeader(SpannableStringBuilder)",1,3,4
"android.text.HtmlToSpannedConverter.endPrefixMapping(String)",1,1,1
"android.text.HtmlToSpannedConverter.getHtmlColor(String)",2,2,3
"android.text.HtmlToSpannedConverter.getLast(Spanned,Class)",2,1,2
"android.text.HtmlToSpannedConverter.handleBr(SpannableStringBuilder)",1,1,1
"android.text.HtmlToSpannedConverter.handleEndTag(String)",1,24,24
"android.text.HtmlToSpannedConverter.handleP(SpannableStringBuilder)",3,5,6
"android.text.HtmlToSpannedConverter.handleStartTag(String,Attributes)",1,25,25
"android.text.HtmlToSpannedConverter.ignorableWhitespace(char[],int,int)",1,1,1
"android.text.HtmlToSpannedConverter.processingInstruction(String,String)",1,1,1
"android.text.HtmlToSpannedConverter.setDocumentLocator(Locator)",1,1,1
"android.text.HtmlToSpannedConverter.skippedEntity(String)",1,1,1
"android.text.HtmlToSpannedConverter.start(SpannableStringBuilder,Object)",1,1,1
"android.text.HtmlToSpannedConverter.startA(SpannableStringBuilder,Attributes)",1,1,1
"android.text.HtmlToSpannedConverter.startDocument()",1,1,1
"android.text.HtmlToSpannedConverter.startElement(String,String,String,Attributes)",1,1,1
"android.text.HtmlToSpannedConverter.startFont(SpannableStringBuilder,Attributes)",1,1,1
"android.text.HtmlToSpannedConverter.startImg(SpannableStringBuilder,Attributes,ImageGetter)",1,3,3
"android.text.HtmlToSpannedConverter.startPrefixMapping(String,String)",1,1,1
"android.text.InputFilter.AllCaps.filter(CharSequence,int,int,Spanned,int,int)",4,4,4
"android.text.InputFilter.LengthFilter.LengthFilter(int)",1,1,1
"android.text.InputFilter.LengthFilter.filter(CharSequence,int,int,Spanned,int,int)",3,3,3
"android.text.Layout.Directions.Directions(int[])",1,1,1
"android.text.Layout.Ellipsizer.Ellipsizer(CharSequence)",1,1,1
"android.text.Layout.Ellipsizer.charAt(int)",1,1,1
"android.text.Layout.Ellipsizer.getChars(int,int,char[],int)",1,2,2
"android.text.Layout.Ellipsizer.length()",1,1,1
"android.text.Layout.Ellipsizer.subSequence(int,int)",1,1,1
"android.text.Layout.Ellipsizer.toString()",1,1,1
"android.text.Layout.Layout(CharSequence,TextPaint,int,Alignment,float,float)",2,1,3
"android.text.Layout.SpannedEllipsizer.SpannedEllipsizer(CharSequence)",1,1,1
"android.text.Layout.SpannedEllipsizer.getSpanEnd(Object)",1,1,1
"android.text.Layout.SpannedEllipsizer.getSpanFlags(Object)",1,1,1
"android.text.Layout.SpannedEllipsizer.getSpanStart(Object)",1,1,1
"android.text.Layout.SpannedEllipsizer.getSpans(int,int,Class<T>)",1,1,1
"android.text.Layout.SpannedEllipsizer.nextSpanTransition(int,int,Class)",1,1,1
"android.text.Layout.SpannedEllipsizer.subSequence(int,int)",1,1,1
"android.text.Layout.TabStops.TabStops(int,Object[])",1,1,1
"android.text.Layout.TabStops.nextDefaultStop(float,int)",1,1,1
"android.text.Layout.TabStops.nextTab(float)",4,1,4
"android.text.Layout.TabStops.reset(int,Object[])",1,5,9
"android.text.Layout.addSelection(int,int,int,int,int,Path)",1,5,8
"android.text.Layout.draw(Canvas)",1,1,1
"android.text.Layout.draw(Canvas,Path,Paint,int)",7,22,33
"android.text.Layout.ellipsize(int,int,int,char[],int)",2,1,6
"android.text.Layout.getAlignment()",1,1,1
"android.text.Layout.getCursorPath(int,Path,CharSequence)",1,7,13
"android.text.Layout.getDesiredWidth(CharSequence,TextPaint)",1,1,1
"android.text.Layout.getDesiredWidth(CharSequence,int,int,TextPaint)",1,2,4
"android.text.Layout.getEllipsizedWidth()",1,1,1
"android.text.Layout.getHeight()",1,1,1
"android.text.Layout.getHorizontal(int,boolean)",1,1,1
"android.text.Layout.getHorizontal(int,boolean,int)",1,2,4
"android.text.Layout.getLineAscent(int)",1,1,1
"android.text.Layout.getLineBaseline(int)",1,1,1
"android.text.Layout.getLineBottom(int)",1,1,1
"android.text.Layout.getLineBounds(int,Rect)",1,2,2
"android.text.Layout.getLineEnd(int)",1,1,1
"android.text.Layout.getLineExtent(int,TabStops,boolean)",1,2,2
"android.text.Layout.getLineExtent(int,boolean)",1,3,5
"android.text.Layout.getLineForOffset(int)",2,2,4
"android.text.Layout.getLineForVertical(int)",2,2,4
"android.text.Layout.getLineLeft(int)",5,5,5
"android.text.Layout.getLineMax(int)",1,1,2
"android.text.Layout.getLineRight(int)",5,5,5
"android.text.Layout.getLineStartPos(int,int,int)",1,4,8
"android.text.Layout.getLineVisibleEnd(int)",1,1,1
"android.text.Layout.getLineVisibleEnd(int,int,int)",5,2,6
"android.text.Layout.getLineWidth(int)",1,1,2
"android.text.Layout.getOffsetAtStartOf(int)",2,4,10
"android.text.Layout.getOffsetForHorizontal(int,float)",1,5,14
"android.text.Layout.getOffsetToLeftOf(int)",1,1,1
"android.text.Layout.getOffsetToLeftRightOf(int,boolean)",6,4,8
"android.text.Layout.getOffsetToRightOf(int)",1,1,1
"android.text.Layout.getPaint()",1,1,1
"android.text.Layout.getParagraphAlignment(int)",1,3,3
"android.text.Layout.getParagraphLeadingMargin(int)",3,4,6
"android.text.Layout.getParagraphLeft(int)",2,1,3
"android.text.Layout.getParagraphRight(int)",2,1,3
"android.text.Layout.getParagraphSpans(Spanned,int,int,Class<T>)",2,2,3
"android.text.Layout.getPrimaryHorizontal(int)",1,1,1
"android.text.Layout.getSecondaryHorizontal(int)",1,1,1
"android.text.Layout.getSelectionPath(int,int,Path)",2,5,7
"android.text.Layout.getSpacingAdd()",1,1,1
"android.text.Layout.getSpacingMultiplier()",1,1,1
"android.text.Layout.getText()",1,1,1
"android.text.Layout.getWidth()",1,1,1
"android.text.Layout.increaseWidthTo(int)",2,1,2
"android.text.Layout.isLevelBoundary(int)",5,2,9
"android.text.Layout.isSpanned()",1,1,1
"android.text.Layout.measurePara(TextPaint,TextPaint,CharSequence,int,int)",3,5,6
"android.text.Layout.nextTab(CharSequence,int,int,float,Object[])",6,4,9
"android.text.Layout.primaryIsTrailingPrevious(int)",7,3,14
"android.text.Layout.replaceWith(CharSequence,TextPaint,int,Alignment,float,float)",2,1,2
"android.text.LoginFilter.LoginFilter()",1,1,1
"android.text.LoginFilter.LoginFilter(boolean)",1,1,1
"android.text.LoginFilter.PasswordFilterGMail.PasswordFilterGMail()",1,1,1
"android.text.LoginFilter.PasswordFilterGMail.PasswordFilterGMail(boolean)",1,1,1
"android.text.LoginFilter.PasswordFilterGMail.isAllowed(char)",3,1,5
"android.text.LoginFilter.UsernameFilterGMail.UsernameFilterGMail()",1,1,1
"android.text.LoginFilter.UsernameFilterGMail.UsernameFilterGMail(boolean)",1,1,1
"android.text.LoginFilter.UsernameFilterGMail.isAllowed(char)",5,1,8
"android.text.LoginFilter.UsernameFilterGeneric.UsernameFilterGeneric()",1,1,1
"android.text.LoginFilter.UsernameFilterGeneric.UsernameFilterGeneric(boolean)",1,1,1
"android.text.LoginFilter.UsernameFilterGeneric.isAllowed(char)",5,1,8
"android.text.LoginFilter.filter(CharSequence,int,int,Spanned,int,int)",1,8,9
"android.text.LoginFilter.onInvalidCharacter(char)",1,1,1
"android.text.LoginFilter.onStart()",1,1,1
"android.text.LoginFilter.onStop()",1,1,1
"android.text.MeasuredText.MeasuredText()",1,1,1
"android.text.MeasuredText.addStyleRun(TextPaint,MetricAffectingSpan[],int,FontMetricsInt)",1,4,7
"android.text.MeasuredText.addStyleRun(TextPaint,int,FontMetricsInt)",5,5,9
"android.text.MeasuredText.breakText(int,int,boolean,float)",6,1,6
"android.text.MeasuredText.measure(int,int)",1,1,2
"android.text.MeasuredText.obtain()",3,1,3
"android.text.MeasuredText.recycle(MeasuredText)",4,1,4
"android.text.MeasuredText.setPara(CharSequence,int,int,int)",1,7,11
"android.text.PackedIntVector.PackedIntVector(int)",1,1,1
"android.text.PackedIntVector.adjustValuesBelow(int,int,int)",2,3,5
"android.text.PackedIntVector.deleteAt(int,int)",2,2,3
"android.text.PackedIntVector.getValue(int,int)",2,3,6
"android.text.PackedIntVector.growBuffer()",1,2,5
"android.text.PackedIntVector.insertAt(int,int[])",3,7,9
"android.text.PackedIntVector.moveRowGapTo(int)",2,1,11
"android.text.PackedIntVector.moveValueGapTo(int,int)",2,1,5
"android.text.PackedIntVector.setValue(int,int,int)",2,3,6
"android.text.PackedIntVector.setValueInternal(int,int,int)",1,1,3
"android.text.PackedIntVector.size()",1,1,1
"android.text.PackedIntVector.width()",1,1,1
"android.text.PackedObjectVector.PackedObjectVector(int)",1,1,1
"android.text.PackedObjectVector.deleteAt(int,int)",1,1,2
"android.text.PackedObjectVector.dump()",1,4,5
"android.text.PackedObjectVector.getValue(int,int)",1,1,2
"android.text.PackedObjectVector.growBuffer()",1,1,1
"android.text.PackedObjectVector.insertAt(int,E[])",1,5,5
"android.text.PackedObjectVector.moveRowGapTo(int)",2,1,7
"android.text.PackedObjectVector.setValue(int,int,E)",1,1,2
"android.text.PackedObjectVector.size()",1,1,1
"android.text.PackedObjectVector.width()",1,1,1
"android.text.Selection.Selection()",1,1,1
"android.text.Selection.chooseHorizontal(Layout,int,int,int)",6,3,6
"android.text.Selection.extendDown(Spannable,Layout)",3,4,4
"android.text.Selection.extendLeft(Spannable,Layout)",2,2,2
"android.text.Selection.extendRight(Spannable,Layout)",2,2,2
"android.text.Selection.extendSelection(Spannable,int)",1,2,2
"android.text.Selection.extendToLeftEdge(Spannable,Layout)",1,1,1
"android.text.Selection.extendToRightEdge(Spannable,Layout)",1,1,1
"android.text.Selection.extendUp(Spannable,Layout)",3,4,4
"android.text.Selection.findEdge(Spannable,Layout,int)",3,2,3
"android.text.Selection.getSelectionEnd(CharSequence)",2,2,2
"android.text.Selection.getSelectionStart(CharSequence)",2,2,2
"android.text.Selection.moveDown(Spannable,Layout)",4,5,6
"android.text.Selection.moveLeft(Spannable,Layout)",3,3,3
"android.text.Selection.moveRight(Spannable,Layout)",3,3,3
"android.text.Selection.moveToLeftEdge(Spannable,Layout)",1,1,1
"android.text.Selection.moveToRightEdge(Spannable,Layout)",1,1,1
"android.text.Selection.moveUp(Spannable,Layout)",4,5,6
"android.text.Selection.removeSelection(Spannable)",1,1,1
"android.text.Selection.selectAll(Spannable)",1,1,1
"android.text.Selection.setSelection(Spannable,int)",1,1,1
"android.text.Selection.setSelection(Spannable,int,int)",1,2,3
"android.text.Spannable.Factory.getInstance()",1,1,1
"android.text.Spannable.Factory.newSpannable(CharSequence)",1,1,1
"android.text.SpannableString.SpannableString(CharSequence)",1,1,1
"android.text.SpannableString.SpannableString(CharSequence,int,int)",1,1,1
"android.text.SpannableString.removeSpan(Object)",1,1,1
"android.text.SpannableString.setSpan(Object,int,int,int)",1,1,1
"android.text.SpannableString.subSequence(int,int)",1,1,1
"android.text.SpannableString.valueOf(CharSequence)",2,1,2
"android.text.SpannableStringBuilder.SpannableStringBuilder()",1,1,1
"android.text.SpannableStringBuilder.SpannableStringBuilder(CharSequence)",1,1,1
"android.text.SpannableStringBuilder.SpannableStringBuilder(CharSequence,int,int)",4,3,8
"android.text.SpannableStringBuilder.append(CharSequence)",1,1,1
"android.text.SpannableStringBuilder.append(CharSequence,int,int)",1,1,1
"android.text.SpannableStringBuilder.append(char)",1,1,1
"android.text.SpannableStringBuilder.change(boolean,int,int,CharSequence,int,int)",10,21,41
"android.text.SpannableStringBuilder.change(int,int,CharSequence,int,int)",1,1,1
"android.text.SpannableStringBuilder.charAt(int)",4,1,4
"android.text.SpannableStringBuilder.checkRange(String,int,int)",4,4,6
"android.text.SpannableStringBuilder.clear()",1,1,1
"android.text.SpannableStringBuilder.clearSpans()",1,2,4
"android.text.SpannableStringBuilder.delete(int,int)",1,2,2
"android.text.SpannableStringBuilder.drawText(Canvas,int,int,float,float,Paint)",1,3,3
"android.text.SpannableStringBuilder.drawTextRun(Canvas,int,int,int,int,float,float,int,Paint)",1,3,3
"android.text.SpannableStringBuilder.getChars(int,int,char[],int)",1,3,3
"android.text.SpannableStringBuilder.getFilters()",1,1,1
"android.text.SpannableStringBuilder.getSpanEnd(Object)",3,1,4
"android.text.SpannableStringBuilder.getSpanFlags(Object)",3,1,3
"android.text.SpannableStringBuilder.getSpanStart(Object)",3,1,4
"android.text.SpannableStringBuilder.getSpans(int,int,Class<T>)",15,9,20
"android.text.SpannableStringBuilder.getTextRunAdvances(int,int,int,int,int,float[],int,Paint)",1,3,3
"android.text.SpannableStringBuilder.getTextRunCursor(int,int,int,int,int,Paint)",1,3,3
"android.text.SpannableStringBuilder.getTextWidths(int,int,float[],Paint)",1,3,3
"android.text.SpannableStringBuilder.insert(int,CharSequence)",1,1,1
"android.text.SpannableStringBuilder.insert(int,CharSequence,int,int)",1,1,1
"android.text.SpannableStringBuilder.length()",1,1,1
"android.text.SpannableStringBuilder.measureText(int,int,Paint)",1,3,3
"android.text.SpannableStringBuilder.moveGapTo(int)",2,2,16
"android.text.SpannableStringBuilder.nextSpanTransition(int,int,Class)",1,6,11
"android.text.SpannableStringBuilder.region(int,int)",1,1,1
"android.text.SpannableStringBuilder.removeSpan(Object)",3,3,5
"android.text.SpannableStringBuilder.replace(int,int,CharSequence)",1,1,1
"android.text.SpannableStringBuilder.replace(int,int,CharSequence,int,int)",2,8,16
"android.text.SpannableStringBuilder.resizeFor(int)",1,2,5
"android.text.SpannableStringBuilder.sendSpanAdded(Object,int,int)",1,2,2
"android.text.SpannableStringBuilder.sendSpanChanged(Object,int,int,int,int)",1,2,2
"android.text.SpannableStringBuilder.sendSpanRemoved(Object,int,int)",1,2,2
"android.text.SpannableStringBuilder.sendTextChange(TextWatcher[],int,int,int)",1,2,2
"android.text.SpannableStringBuilder.sendTextHasChanged(TextWatcher[])",1,2,2
"android.text.SpannableStringBuilder.sendTextWillChange(int,int,int)",1,2,2
"android.text.SpannableStringBuilder.setFilters(InputFilter[])",2,1,2
"android.text.SpannableStringBuilder.setSpan(Object,int,int,int)",1,1,1
"android.text.SpannableStringBuilder.setSpan(boolean,Object,int,int,int)",9,20,26
"android.text.SpannableStringBuilder.subSequence(int,int)",1,1,1
"android.text.SpannableStringBuilder.toString()",1,1,1
"android.text.SpannableStringBuilder.valueOf(CharSequence)",2,1,2
"android.text.SpannableStringInternal.SpannableStringInternal(CharSequence,int,int)",1,5,7
"android.text.SpannableStringInternal.charAt(int)",1,1,1
"android.text.SpannableStringInternal.checkRange(String,int,int)",4,4,6
"android.text.SpannableStringInternal.getChars(int,int,char[],int)",1,1,1
"android.text.SpannableStringInternal.getSpanEnd(Object)",3,1,3
"android.text.SpannableStringInternal.getSpanFlags(Object)",3,1,3
"android.text.SpannableStringInternal.getSpanStart(Object)",3,1,3
"android.text.SpannableStringInternal.getSpans(int,int,Class<T>)",15,9,18
"android.text.SpannableStringInternal.length()",1,1,1
"android.text.SpannableStringInternal.nextSpanTransition(int,int,Class)",1,6,9
"android.text.SpannableStringInternal.region(int,int)",1,1,1
"android.text.SpannableStringInternal.removeSpan(Object)",3,3,3
"android.text.SpannableStringInternal.sendSpanAdded(Object,int,int)",1,2,2
"android.text.SpannableStringInternal.sendSpanChanged(Object,int,int,int,int)",1,2,2
"android.text.SpannableStringInternal.sendSpanRemoved(Object,int,int)",1,2,2
"android.text.SpannableStringInternal.setSpan(Object,int,int,int)",8,10,12
"android.text.SpannableStringInternal.toString()",1,1,1
"android.text.SpannedString.SpannedString(CharSequence)",1,1,1
"android.text.SpannedString.SpannedString(CharSequence,int,int)",1,1,1
"android.text.SpannedString.subSequence(int,int)",1,1,1
"android.text.SpannedString.valueOf(CharSequence)",2,1,2
"android.text.StaticLayout.StaticLayout(CharSequence,TextPaint,int,Alignment,float,float,boolean)",1,1,1
"android.text.StaticLayout.StaticLayout(CharSequence,int,int,TextPaint,int,Alignment,float,float,boolean)",1,1,1
"android.text.StaticLayout.StaticLayout(CharSequence,int,int,TextPaint,int,Alignment,float,float,boolean,TruncateAt,int)",1,2,4
"android.text.StaticLayout.StaticLayout(boolean)",1,1,1
"android.text.StaticLayout.calculateEllipsis(int,int,float[],int,float,TruncateAt,int,float,TextPaint)",12,1,13
"android.text.StaticLayout.generate(CharSequence,int,int,TextPaint,int,Alignment,float,float,boolean,boolean,boolean,float,TruncateAt)",3,44,77
"android.text.StaticLayout.getBottomPadding()",1,1,1
"android.text.StaticLayout.getEllipsisCount(int)",2,1,2
"android.text.StaticLayout.getEllipsisStart(int)",2,1,2
"android.text.StaticLayout.getEllipsizedWidth()",1,1,1
"android.text.StaticLayout.getLineContainsTab(int)",1,1,1
"android.text.StaticLayout.getLineCount()",1,1,1
"android.text.StaticLayout.getLineDescent(int)",1,1,1
"android.text.StaticLayout.getLineDirections(int)",1,1,1
"android.text.StaticLayout.getLineForVertical(int)",2,1,4
"android.text.StaticLayout.getLineStart(int)",1,1,1
"android.text.StaticLayout.getLineTop(int)",1,1,1
"android.text.StaticLayout.getParagraphDirection(int)",1,1,1
"android.text.StaticLayout.getTopPadding()",1,1,1
"android.text.StaticLayout.isIdeographic(char,boolean)",16,3,26
"android.text.StaticLayout.out(CharSequence,int,int,int,int,int,int,int,float,float,LineHeightSpan[],int[],FontMetricsInt,boolean,boolean,int,byte[],int,boolean,boolean,boolean,boolean,char[],float[],int,TruncateAt,float,float,TextPaint)",1,7,18
"android.text.TextLine.ascent(int)",3,4,4
"android.text.TextLine.draw(Canvas,float,int,int,int)",10,12,23
"android.text.TextLine.drawRun(Canvas,int,int,int,boolean,float,int,int,int,boolean)",2,2,2
"android.text.TextLine.drawTextRun(Canvas,TextPaint,int,int,int,int,boolean,float,int)",1,2,3
"android.text.TextLine.expandMetricsFromPaint(FontMetricsInt,TextPaint)",1,1,1
"android.text.TextLine.getOffsetBeforeAfter(int,int,int,boolean,int,boolean)",9,9,17
"android.text.TextLine.getOffsetToLeftRightOf(int,boolean)",19,8,34
"android.text.TextLine.handleReplacement(ReplacementSpan,TextPaint,int,int,int,boolean,Canvas,float,int,int,int,FontMetricsInt,boolean)",1,3,7
"android.text.TextLine.handleRun(int,int,int,int,boolean,Canvas,float,int,int,int,FontMetricsInt,boolean)",5,10,15
"android.text.TextLine.handleText(TextPaint,int,int,int,int,boolean,Canvas,float,int,int,int,FontMetricsInt,boolean)",1,6,12
"android.text.TextLine.measure(int,boolean,FontMetricsInt)",17,14,30
"android.text.TextLine.measureRun(int,int,int,int,boolean,FontMetricsInt)",1,1,1
"android.text.TextLine.metrics(FontMetricsInt)",1,1,1
"android.text.TextLine.nextTab(float)",2,2,2
"android.text.TextLine.obtain()",3,1,3
"android.text.TextLine.recycle(TextLine)",4,1,4
"android.text.TextLine.set(TextPaint,CharSequence,int,int,int,Directions,boolean,TabStops)",1,6,11
"android.text.TextPaint.TextPaint()",1,1,1
"android.text.TextPaint.TextPaint(Paint)",1,1,1
"android.text.TextPaint.TextPaint(int)",1,1,1
"android.text.TextPaint.set(TextPaint)",1,1,1
"android.text.TextUtils.Reverser.Reverser(CharSequence,int,int)",1,1,1
"android.text.TextUtils.Reverser.charAt(int)",1,1,1
"android.text.TextUtils.Reverser.getChars(int,int,char[],int)",1,1,2
"android.text.TextUtils.Reverser.length()",1,1,1
"android.text.TextUtils.Reverser.subSequence(int,int)",1,1,1
"android.text.TextUtils.Reverser.toString()",1,1,1
"android.text.TextUtils.SimpleStringSplitter.SimpleStringSplitter(char)",1,1,1
"android.text.TextUtils.SimpleStringSplitter.hasNext()",1,1,1
"android.text.TextUtils.SimpleStringSplitter.iterator()",1,1,1
"android.text.TextUtils.SimpleStringSplitter.next()",1,1,2
"android.text.TextUtils.SimpleStringSplitter.remove()",1,1,1
"android.text.TextUtils.SimpleStringSplitter.setString(String)",1,1,1
"android.text.TextUtils.TextUtils()",1,1,1
"android.text.TextUtils.commaEllipsize(CharSequence,TextPaint,float,String,String)",2,4,9
"android.text.TextUtils.concat(CharSequence...)",6,5,9
"android.text.TextUtils.copySpansFrom(Spanned,int,int,Class,Spannable,int)",1,2,5
"android.text.TextUtils.delimitedStringContains(String,char,String)",6,4,8
"android.text.TextUtils.doesNotNeedBidi(CharSequence,int,int)",3,2,3
"android.text.TextUtils.doesNotNeedBidi(char[],int,int)",3,1,3
"android.text.TextUtils.dumpSpans(CharSequence,Printer,String)",1,3,3
"android.text.TextUtils.ellipsize(CharSequence,TextPaint,float,TruncateAt)",1,1,1
"android.text.TextUtils.ellipsize(CharSequence,TextPaint,float,TruncateAt,boolean,EllipsizeCallback)",6,10,15
"android.text.TextUtils.equals(CharSequence,CharSequence)",6,6,9
"android.text.TextUtils.expandTemplate(CharSequence,CharSequence...)",8,5,9
"android.text.TextUtils.getCapsMode(CharSequence,int,int)",16,14,28
"android.text.TextUtils.getChars(CharSequence,int,int,char[],int)",1,6,6
"android.text.TextUtils.getOffsetAfter(CharSequence,int)",3,4,11
"android.text.TextUtils.getOffsetBefore(CharSequence,int)",3,4,11
"android.text.TextUtils.getReverse(CharSequence,int,int)",1,1,1
"android.text.TextUtils.getTrimmedLength(CharSequence)",1,3,5
"android.text.TextUtils.htmlEncode(String)",2,3,8
"android.text.TextUtils.indexOf(CharSequence,CharSequence)",1,1,1
"android.text.TextUtils.indexOf(CharSequence,CharSequence,int)",1,1,1
"android.text.TextUtils.indexOf(CharSequence,CharSequence,int,int)",6,2,6
"android.text.TextUtils.indexOf(CharSequence,char)",1,1,1
"android.text.TextUtils.indexOf(CharSequence,char,int)",2,2,2
"android.text.TextUtils.indexOf(CharSequence,char,int,int)",7,6,11
"android.text.TextUtils.isDigitsOnly(CharSequence)",3,2,3
"android.text.TextUtils.isEmpty(CharSequence)",2,2,3
"android.text.TextUtils.isGraphic(CharSequence)",3,2,9
"android.text.TextUtils.isGraphic(char)",1,1,7
"android.text.TextUtils.isPrintableAscii(char)",1,1,4
"android.text.TextUtils.isPrintableAsciiOnly(CharSequence)",3,2,3
"android.text.TextUtils.join(CharSequence,Iterable)",1,3,3
"android.text.TextUtils.join(CharSequence,Object[])",1,3,3
"android.text.TextUtils.lastIndexOf(CharSequence,char)",1,1,1
"android.text.TextUtils.lastIndexOf(CharSequence,char,int)",2,2,2
"android.text.TextUtils.lastIndexOf(CharSequence,char,int,int)",8,7,13
"android.text.TextUtils.obtain(int)",1,2,3
"android.text.TextUtils.readSpan(Parcel,Spannable,Object)",1,1,1
"android.text.TextUtils.recycle(char[])",2,1,2
"android.text.TextUtils.regionMatches(CharSequence,int,CharSequence,int,int)",3,1,3
"android.text.TextUtils.replace(CharSequence,String[],CharSequence[])",1,5,5
"android.text.TextUtils.setPara(MeasuredText,TextPaint,CharSequence,int,int,int)",1,3,4
"android.text.TextUtils.split(String,Pattern)",2,2,2
"android.text.TextUtils.split(String,String)",2,2,2
"android.text.TextUtils.stringOrSpannedString(CharSequence)",4,1,4
"android.text.TextUtils.substring(CharSequence,int,int)",4,4,4
"android.text.TextUtils.writeToParcel(CharSequence,Parcel,int)",1,6,6
"android.text.TextUtils.writeWhere(Parcel,Spanned,Object)",1,1,1
"android.text.format.DateFormat.appendQuotedText(SpannableStringBuilder,int,int)",5,7,7
"android.text.format.DateFormat.format(CharSequence,Calendar)",5,7,21
"android.text.format.DateFormat.format(CharSequence,Date)",1,1,1
"android.text.format.DateFormat.format(CharSequence,long)",1,1,1
"android.text.format.DateFormat.formatZoneOffset(int,int)",1,2,2
"android.text.format.DateFormat.getDateFormat(Context)",1,1,1
"android.text.format.DateFormat.getDateFormatForSetting(Context,String)",1,1,1
"android.text.format.DateFormat.getDateFormatOrder(Context)",1,1,8
"android.text.format.DateFormat.getDateFormatString(Context)",1,1,1
"android.text.format.DateFormat.getDateFormatStringForSetting(Context,String)",3,8,11
"android.text.format.DateFormat.getLongDateFormat(Context)",1,1,1
"android.text.format.DateFormat.getMediumDateFormat(Context)",1,1,1
"android.text.format.DateFormat.getMonthString(Calendar,int)",3,3,3
"android.text.format.DateFormat.getTimeFormat(Context)",1,1,2
"android.text.format.DateFormat.getTimeZoneString(Calendar,int)",2,2,2
"android.text.format.DateFormat.getYearString(Calendar,int)",1,2,2
"android.text.format.DateFormat.is24HourFormat(Context)",3,5,7
"android.text.format.DateFormat.zeroPad(int,int)",1,2,3
"android.text.format.DateUtils.assign(Calendar,Calendar)",1,1,1
"android.text.format.DateUtils.formatDateRange(Context,Formatter,long,long,int)",1,1,1
"android.text.format.DateUtils.formatDateRange(Context,Formatter,long,long,int,String)",11,55,86
"android.text.format.DateUtils.formatDateRange(Context,long,long,int)",1,1,1
"android.text.format.DateUtils.formatDateTime(Context,long,int)",1,1,1
"android.text.format.DateUtils.formatElapsedTime(StringBuilder,String,long,long)",2,5,5
"android.text.format.DateUtils.formatElapsedTime(StringBuilder,String,long,long,long)",2,5,5
"android.text.format.DateUtils.formatElapsedTime(StringBuilder,long)",2,2,4
"android.text.format.DateUtils.formatElapsedTime(long)",1,1,1
"android.text.format.DateUtils.formatSameDayTime(long,long,int,int)",1,4,4
"android.text.format.DateUtils.getAMPMString(int)",1,1,1
"android.text.format.DateUtils.getDayOfWeekString(int,int)",2,2,7
"android.text.format.DateUtils.getMonthString(int,int)",2,2,7
"android.text.format.DateUtils.getNumberOfDaysPassed(long,long)",1,1,2
"android.text.format.DateUtils.getRelativeDateTimeString(Context,long,long,long,int)",1,2,4
"android.text.format.DateUtils.getRelativeDayString(Resources,long,long)",4,4,5
"android.text.format.DateUtils.getRelativeTimeSpanString(Context,long)",1,1,1
"android.text.format.DateUtils.getRelativeTimeSpanString(Context,long,boolean)",1,4,7
"android.text.format.DateUtils.getRelativeTimeSpanString(long)",1,1,1
"android.text.format.DateUtils.getRelativeTimeSpanString(long,long,long)",1,1,1
"android.text.format.DateUtils.getRelativeTimeSpanString(long,long,long,int)",5,5,21
"android.text.format.DateUtils.getStandaloneMonthString(int,int)",2,2,7
"android.text.format.DateUtils.initFormatStrings()",1,3,3
"android.text.format.DateUtils.isToday(long)",1,1,3
"android.text.format.DateUtils.isUTC(String)",3,3,5
"android.text.format.DateUtils.newCalendar(boolean)",2,2,2
"android.text.format.DateUtils.timeString(long)",1,1,1
"android.text.format.DateUtils.toDigitChar(long)",1,1,1
"android.text.format.DateUtils.writeDateTime(Calendar)",1,1,1
"android.text.format.DateUtils.writeDateTime(Calendar,StringBuilder)",1,1,1
"android.text.format.DateUtils.writeDateTime(Calendar,boolean)",1,2,2
"android.text.format.Formatter.formatFileSize(Context,long)",1,1,1
"android.text.format.Formatter.formatFileSize(Context,long,boolean)",2,6,12
"android.text.format.Formatter.formatIpAddress(int)",1,1,1
"android.text.format.Formatter.formatShortFileSize(Context,long)",1,1,1
"android.text.format.Time.Time()",1,1,1
"android.text.format.Time.Time(String)",2,1,2
"android.text.format.Time.Time(Time)",1,1,1
"android.text.format.Time.after(Time)",1,1,1
"android.text.format.Time.before(Time)",1,1,1
"android.text.format.Time.clear(String)",2,1,2
"android.text.format.Time.compare(Time,Time)",1,1,1
"android.text.format.Time.format(String)",1,4,4
"android.text.format.Time.format1(String)",1,1,1
"android.text.format.Time.format2445()",1,1,1
"android.text.format.Time.format3339(boolean)",3,3,4
"android.text.format.Time.getActualMaximum(int)",12,2,18
"android.text.format.Time.getCurrentTimezone()",1,1,1
"android.text.format.Time.getJulianDay(long,long)",1,1,1
"android.text.format.Time.getJulianMondayFromWeeksSinceEpoch(int)",1,1,1
"android.text.format.Time.getWeekNumber()",2,1,3
"android.text.format.Time.getWeeksSinceEpochFromJulianDay(int,int)",1,1,2
"android.text.format.Time.isEpoch(Time)",1,1,1
"android.text.format.Time.nativeParse(String)",1,1,1
"android.text.format.Time.nativeParse3339(String)",1,1,1
"android.text.format.Time.normalize(boolean)",1,1,1
"android.text.format.Time.parse(String)",2,1,2
"android.text.format.Time.parse3339(String)",2,1,2
"android.text.format.Time.set(Time)",1,1,1
"android.text.format.Time.set(int,int,int)",1,1,1
"android.text.format.Time.set(int,int,int,int,int,int)",1,1,1
"android.text.format.Time.set(long)",1,1,1
"android.text.format.Time.setJulianDay(int)",1,1,1
"android.text.format.Time.setToNow()",1,1,1
"android.text.format.Time.switchTimezone(String)",1,1,1
"android.text.format.Time.toMillis(boolean)",1,1,1
"android.text.format.Time.toString()",1,1,1
"android.text.method.ArrowKeyMovementMethod.bottom(TextView,Spannable)",1,2,2
"android.text.method.ArrowKeyMovementMethod.canSelectArbitrarily()",1,1,1
"android.text.method.ArrowKeyMovementMethod.down(TextView,Spannable)",2,2,2
"android.text.method.ArrowKeyMovementMethod.end(TextView,Spannable)",1,1,1
"android.text.method.ArrowKeyMovementMethod.getCurrentLineTop(Spannable,Layout)",1,1,1
"android.text.method.ArrowKeyMovementMethod.getInstance()",1,1,2
"android.text.method.ArrowKeyMovementMethod.getPageHeight(TextView)",1,2,2
"android.text.method.ArrowKeyMovementMethod.handleMovementKey(TextView,Spannable,int,int,KeyEvent)",4,6,6
"android.text.method.ArrowKeyMovementMethod.home(TextView,Spannable)",1,1,1
"android.text.method.ArrowKeyMovementMethod.initialize(TextView,Spannable)",1,1,1
"android.text.method.ArrowKeyMovementMethod.isSelecting(Spannable)",1,2,2
"android.text.method.ArrowKeyMovementMethod.left(TextView,Spannable)",2,2,2
"android.text.method.ArrowKeyMovementMethod.lineEnd(TextView,Spannable)",2,2,2
"android.text.method.ArrowKeyMovementMethod.lineStart(TextView,Spannable)",2,2,2
"android.text.method.ArrowKeyMovementMethod.onTakeFocus(TextView,Spannable,int)",1,3,3
"android.text.method.ArrowKeyMovementMethod.onTouchEvent(TextView,Spannable,MotionEvent)",7,14,15
"android.text.method.ArrowKeyMovementMethod.pageDown(TextView,Spannable)",4,3,5
"android.text.method.ArrowKeyMovementMethod.pageUp(TextView,Spannable)",4,3,5
"android.text.method.ArrowKeyMovementMethod.right(TextView,Spannable)",2,2,2
"android.text.method.ArrowKeyMovementMethod.top(TextView,Spannable)",1,2,2
"android.text.method.ArrowKeyMovementMethod.up(TextView,Spannable)",2,2,2
"android.text.method.BaseKeyListener.backspace(View,Editable,int,KeyEvent)",5,3,6
"android.text.method.BaseKeyListener.deleteLine(View,Editable)",4,4,4
"android.text.method.BaseKeyListener.deleteSelection(View,Editable)",2,2,3
"android.text.method.BaseKeyListener.forwardDelete(View,Editable,int,KeyEvent)",5,3,6
"android.text.method.BaseKeyListener.getModifier(Editable,KeyEvent)",4,1,4
"android.text.method.BaseKeyListener.makeTextContentType(Capitalize,boolean)",2,2,5
"android.text.method.BaseKeyListener.onKeyDown(View,Editable,int,KeyEvent)",2,3,5
"android.text.method.BaseKeyListener.onKeyOther(View,Editable,KeyEvent)",3,2,5
"android.text.method.BaseMovementMethod.bottom(TextView,Spannable)",1,1,1
"android.text.method.BaseMovementMethod.canSelectArbitrarily()",1,1,1
"android.text.method.BaseMovementMethod.down(TextView,Spannable)",1,1,1
"android.text.method.BaseMovementMethod.end(TextView,Spannable)",1,1,1
"android.text.method.BaseMovementMethod.getMovementMetaState(Spannable,KeyEvent)",1,1,1
"android.text.method.BaseMovementMethod.handleMovementKey(TextView,Spannable,int,int,KeyEvent)",16,16,23
"android.text.method.BaseMovementMethod.home(TextView,Spannable)",1,1,1
"android.text.method.BaseMovementMethod.initialize(TextView,Spannable)",1,1,1
"android.text.method.BaseMovementMethod.left(TextView,Spannable)",1,1,1
"android.text.method.BaseMovementMethod.lineEnd(TextView,Spannable)",1,1,1
"android.text.method.BaseMovementMethod.lineStart(TextView,Spannable)",1,1,1
"android.text.method.BaseMovementMethod.onKeyDown(TextView,Spannable,int,KeyEvent)",1,2,2
"android.text.method.BaseMovementMethod.onKeyOther(TextView,Spannable,KeyEvent)",4,5,6
"android.text.method.BaseMovementMethod.onKeyUp(TextView,Spannable,int,KeyEvent)",1,1,1
"android.text.method.BaseMovementMethod.onTakeFocus(TextView,Spannable,int)",1,1,1
"android.text.method.BaseMovementMethod.onTouchEvent(TextView,Spannable,MotionEvent)",1,1,1
"android.text.method.BaseMovementMethod.onTrackballEvent(TextView,Spannable,MotionEvent)",1,1,1
"android.text.method.BaseMovementMethod.pageDown(TextView,Spannable)",1,1,1
"android.text.method.BaseMovementMethod.pageUp(TextView,Spannable)",1,1,1
"android.text.method.BaseMovementMethod.right(TextView,Spannable)",1,1,1
"android.text.method.BaseMovementMethod.top(TextView,Spannable)",1,1,1
"android.text.method.BaseMovementMethod.up(TextView,Spannable)",1,1,1
"android.text.method.CharacterPickerDialog.CharacterPickerDialog(Context,View,Editable,String,boolean)",1,1,1
"android.text.method.CharacterPickerDialog.OptionsAdapter.OptionsAdapter(Context)",1,1,1
"android.text.method.CharacterPickerDialog.OptionsAdapter.getCount()",1,1,1
"android.text.method.CharacterPickerDialog.OptionsAdapter.getItem(int)",1,1,1
"android.text.method.CharacterPickerDialog.OptionsAdapter.getItemId(int)",1,1,1
"android.text.method.CharacterPickerDialog.OptionsAdapter.getView(int,View,ViewGroup)",1,1,1
"android.text.method.CharacterPickerDialog.onClick(View)",1,3,3
"android.text.method.CharacterPickerDialog.onCreate(Bundle)",1,1,1
"android.text.method.CharacterPickerDialog.onItemClick(AdapterView,View,int,long)",1,1,1
"android.text.method.CharacterPickerDialog.replaceCharacterAndClose(CharSequence)",1,2,3
"android.text.method.DateKeyListener.getAcceptedChars()",1,1,1
"android.text.method.DateKeyListener.getInputType()",1,1,1
"android.text.method.DateKeyListener.getInstance()",2,1,2
"android.text.method.DateTimeKeyListener.getAcceptedChars()",1,1,1
"android.text.method.DateTimeKeyListener.getInputType()",1,1,1
"android.text.method.DateTimeKeyListener.getInstance()",2,1,2
"android.text.method.DialerKeyListener.getAcceptedChars()",1,1,1
"android.text.method.DialerKeyListener.getInputType()",1,1,1
"android.text.method.DialerKeyListener.getInstance()",2,1,2
"android.text.method.DialerKeyListener.lookup(KeyEvent,Spannable)",8,5,8
"android.text.method.DigitsKeyListener.DigitsKeyListener()",1,1,1
"android.text.method.DigitsKeyListener.DigitsKeyListener(boolean,boolean)",1,1,3
"android.text.method.DigitsKeyListener.filter(CharSequence,int,int,Spanned,int,int)",9,6,22
"android.text.method.DigitsKeyListener.getAcceptedChars()",1,1,1
"android.text.method.DigitsKeyListener.getInputType()",1,1,3
"android.text.method.DigitsKeyListener.getInstance()",1,1,1
"android.text.method.DigitsKeyListener.getInstance(String)",1,1,1
"android.text.method.DigitsKeyListener.getInstance(boolean,boolean)",2,1,4
"android.text.method.HideReturnsTransformationMethod.getInstance()",2,1,2
"android.text.method.HideReturnsTransformationMethod.getOriginal()",1,1,1
"android.text.method.HideReturnsTransformationMethod.getReplacement()",1,1,1
"android.text.method.LinkMovementMethod.action(int,TextView,Spannable)",6,12,20
"android.text.method.LinkMovementMethod.down(TextView,Spannable)",2,1,2
"android.text.method.LinkMovementMethod.getInstance()",1,1,2
"android.text.method.LinkMovementMethod.handleMovementKey(TextView,Spannable,int,int,KeyEvent)",4,5,5
"android.text.method.LinkMovementMethod.initialize(TextView,Spannable)",1,1,1
"android.text.method.LinkMovementMethod.left(TextView,Spannable)",2,1,2
"android.text.method.LinkMovementMethod.onTakeFocus(TextView,Spannable,int)",1,2,2
"android.text.method.LinkMovementMethod.onTouchEvent(TextView,Spannable,MotionEvent)",3,5,6
"android.text.method.LinkMovementMethod.right(TextView,Spannable)",2,1,2
"android.text.method.LinkMovementMethod.up(TextView,Spannable)",2,1,2
"android.text.method.MetaKeyKeyListener.adjust(Spannable,Object)",1,3,3
"android.text.method.MetaKeyKeyListener.adjustMetaAfterKeypress(Spannable)",1,1,1
"android.text.method.MetaKeyKeyListener.adjustMetaAfterKeypress(long)",1,1,7
"android.text.method.MetaKeyKeyListener.clearMetaKeyState(Editable,int)",1,5,5
"android.text.method.MetaKeyKeyListener.clearMetaKeyState(View,Editable,int)",1,1,1
"android.text.method.MetaKeyKeyListener.clearMetaKeyState(long,int)",1,1,7
"android.text.method.MetaKeyKeyListener.getActive(CharSequence,Object,int,int)",4,1,4
"android.text.method.MetaKeyKeyListener.getMetaState(CharSequence)",1,1,1
"android.text.method.MetaKeyKeyListener.getMetaState(CharSequence,int)",6,6,6
"android.text.method.MetaKeyKeyListener.getMetaState(long)",1,1,7
"android.text.method.MetaKeyKeyListener.getMetaState(long,int)",11,2,11
"android.text.method.MetaKeyKeyListener.handleKeyDown(long,int,KeyEvent)",4,4,7
"android.text.method.MetaKeyKeyListener.handleKeyUp(long,int,KeyEvent)",4,4,7
"android.text.method.MetaKeyKeyListener.isMetaTracker(CharSequence,Object)",1,1,4
"android.text.method.MetaKeyKeyListener.isSelectingMetaTracker(CharSequence,Object)",1,1,1
"android.text.method.MetaKeyKeyListener.onKeyDown(View,Editable,int,KeyEvent)",4,4,7
"android.text.method.MetaKeyKeyListener.onKeyUp(View,Editable,int,KeyEvent)",4,4,7
"android.text.method.MetaKeyKeyListener.press(Editable,Object)",1,5,5
"android.text.method.MetaKeyKeyListener.press(long,int,long,long,long,long,long)",1,1,5
"android.text.method.MetaKeyKeyListener.release(Editable,Object,KeyEvent)",2,4,5
"android.text.method.MetaKeyKeyListener.release(long,int,long,long,long,long,KeyEvent)",2,2,5
"android.text.method.MetaKeyKeyListener.resetLock(Spannable,Object)",1,2,2
"android.text.method.MetaKeyKeyListener.resetLockedMeta(Spannable)",1,1,1
"android.text.method.MetaKeyKeyListener.resetLockedMeta(long)",1,1,4
"android.text.method.MetaKeyKeyListener.resetMetaState(Spannable)",1,1,1
"android.text.method.MetaKeyKeyListener.startSelecting(View,Spannable)",1,1,1
"android.text.method.MetaKeyKeyListener.stopSelecting(View,Spannable)",1,1,1
"android.text.method.MultiTapKeyListener.MultiTapKeyListener(Capitalize,boolean)",1,1,1
"android.text.method.MultiTapKeyListener.Timeout.Timeout(Editable)",1,1,1
"android.text.method.MultiTapKeyListener.Timeout.run()",1,3,4
"android.text.method.MultiTapKeyListener.getInputType()",1,1,1
"android.text.method.MultiTapKeyListener.getInstance(boolean,Capitalize)",1,1,3
"android.text.method.MultiTapKeyListener.onKeyDown(View,Editable,int,KeyEvent)",11,21,22
"android.text.method.MultiTapKeyListener.onSpanAdded(Spannable,Object,int,int)",1,1,1
"android.text.method.MultiTapKeyListener.onSpanChanged(Spannable,Object,int,int,int,int)",1,2,2
"android.text.method.MultiTapKeyListener.onSpanRemoved(Spannable,Object,int,int)",1,1,1
"android.text.method.MultiTapKeyListener.removeTimeouts(Spannable)",1,2,2
"android.text.method.NumberKeyListener.filter(CharSequence,int,int,Spanned,int,int)",5,4,7
"android.text.method.NumberKeyListener.lookup(KeyEvent,Spannable)",1,1,1
"android.text.method.NumberKeyListener.ok(char[],char)",3,1,3
"android.text.method.NumberKeyListener.onKeyDown(View,Editable,int,KeyEvent)",5,11,13
"android.text.method.PasswordTransformationMethod.PasswordCharSequence.PasswordCharSequence(CharSequence)",1,1,1
"android.text.method.PasswordTransformationMethod.PasswordCharSequence.charAt(int)",6,6,8
"android.text.method.PasswordTransformationMethod.PasswordCharSequence.getChars(int,int,char[],int)",5,4,11
"android.text.method.PasswordTransformationMethod.PasswordCharSequence.length()",1,1,1
"android.text.method.PasswordTransformationMethod.PasswordCharSequence.subSequence(int,int)",1,1,1
"android.text.method.PasswordTransformationMethod.PasswordCharSequence.toString()",1,1,1
"android.text.method.PasswordTransformationMethod.ViewReference.ViewReference(View)",1,1,1
"android.text.method.PasswordTransformationMethod.Visible.Visible(Spannable,PasswordTransformationMethod)",1,1,1
"android.text.method.PasswordTransformationMethod.Visible.run()",1,1,1
"android.text.method.PasswordTransformationMethod.afterTextChanged(Editable)",1,1,1
"android.text.method.PasswordTransformationMethod.beforeTextChanged(CharSequence,int,int,int)",1,1,1
"android.text.method.PasswordTransformationMethod.getInstance()",2,1,2
"android.text.method.PasswordTransformationMethod.getTransformation(CharSequence,View)",1,3,3
"android.text.method.PasswordTransformationMethod.onFocusChanged(View,CharSequence,boolean,int,Rect)",1,3,3
"android.text.method.PasswordTransformationMethod.onTextChanged(CharSequence,int,int,int)",4,6,9
"android.text.method.PasswordTransformationMethod.removeVisibleSpans(Spannable)",1,2,2
"android.text.method.QwertyKeyListener.QwertyKeyListener(Capitalize,boolean)",1,1,1
"android.text.method.QwertyKeyListener.QwertyKeyListener(Capitalize,boolean,boolean)",1,1,1
"android.text.method.QwertyKeyListener.Replaced.Replaced(char[])",1,1,1
"android.text.method.QwertyKeyListener.getInputType()",1,1,1
"android.text.method.QwertyKeyListener.getInstance(boolean,Capitalize)",1,1,3
"android.text.method.QwertyKeyListener.getInstanceForFullKeyboard()",1,1,2
"android.text.method.QwertyKeyListener.getReplacement(CharSequence,int,int,View)",4,8,11
"android.text.method.QwertyKeyListener.markAsReplaced(Spannable,int,int,String)",1,2,2
"android.text.method.QwertyKeyListener.onKeyDown(View,Editable,int,KeyEvent)",18,61,73
"android.text.method.QwertyKeyListener.showCharacterPicker(View,Editable,char,boolean,int)",2,2,3
"android.text.method.QwertyKeyListener.toTitleCase(String)",1,1,1
"android.text.method.ReplacementTransformationMethod.ReplacementCharSequence.ReplacementCharSequence(CharSequence,char[],char[])",1,1,1
"android.text.method.ReplacementTransformationMethod.ReplacementCharSequence.charAt(int)",1,1,3
"android.text.method.ReplacementTransformationMethod.ReplacementCharSequence.getChars(int,int,char[],int)",1,1,4
"android.text.method.ReplacementTransformationMethod.ReplacementCharSequence.length()",1,1,1
"android.text.method.ReplacementTransformationMethod.ReplacementCharSequence.subSequence(int,int)",1,1,1
"android.text.method.ReplacementTransformationMethod.ReplacementCharSequence.toString()",1,1,1
"android.text.method.ReplacementTransformationMethod.SpannedReplacementCharSequence.SpannedReplacementCharSequence(Spanned,char[],char[])",1,1,1
"android.text.method.ReplacementTransformationMethod.SpannedReplacementCharSequence.getSpanEnd(Object)",1,1,1
"android.text.method.ReplacementTransformationMethod.SpannedReplacementCharSequence.getSpanFlags(Object)",1,1,1
"android.text.method.ReplacementTransformationMethod.SpannedReplacementCharSequence.getSpanStart(Object)",1,1,1
"android.text.method.ReplacementTransformationMethod.SpannedReplacementCharSequence.getSpans(int,int,Class<T>)",1,1,1
"android.text.method.ReplacementTransformationMethod.SpannedReplacementCharSequence.nextSpanTransition(int,int,Class)",1,1,1
"android.text.method.ReplacementTransformationMethod.SpannedReplacementCharSequence.subSequence(int,int)",1,1,1
"android.text.method.ReplacementTransformationMethod.getTransformation(CharSequence,View)",8,5,8
"android.text.method.ReplacementTransformationMethod.onFocusChanged(View,CharSequence,boolean,int,Rect)",1,1,1
"android.text.method.ScrollingMovementMethod.bottom(TextView,Spannable)",2,2,2
"android.text.method.ScrollingMovementMethod.down(TextView,Spannable)",2,2,3
"android.text.method.ScrollingMovementMethod.end(TextView,Spannable)",1,1,1
"android.text.method.ScrollingMovementMethod.getBottomLine(TextView)",1,1,1
"android.text.method.ScrollingMovementMethod.getCharacterWidth(TextView)",1,1,1
"android.text.method.ScrollingMovementMethod.getInnerHeight(TextView)",1,1,1
"android.text.method.ScrollingMovementMethod.getInnerWidth(TextView)",1,1,1
"android.text.method.ScrollingMovementMethod.getInstance()",1,1,2
"android.text.method.ScrollingMovementMethod.getScrollBoundsLeft(TextView)",2,2,4
"android.text.method.ScrollingMovementMethod.getScrollBoundsRight(TextView)",2,2,4
"android.text.method.ScrollingMovementMethod.getTopLine(TextView)",1,1,1
"android.text.method.ScrollingMovementMethod.home(TextView,Spannable)",1,1,1
"android.text.method.ScrollingMovementMethod.left(TextView,Spannable)",2,2,2
"android.text.method.ScrollingMovementMethod.lineEnd(TextView,Spannable)",2,2,2
"android.text.method.ScrollingMovementMethod.lineStart(TextView,Spannable)",2,2,2
"android.text.method.ScrollingMovementMethod.onTakeFocus(TextView,Spannable,int)",1,3,5
"android.text.method.ScrollingMovementMethod.onTouchEvent(TextView,Spannable,MotionEvent)",1,1,1
"android.text.method.ScrollingMovementMethod.pageDown(TextView,Spannable)",2,2,2
"android.text.method.ScrollingMovementMethod.pageUp(TextView,Spannable)",2,2,2
"android.text.method.ScrollingMovementMethod.right(TextView,Spannable)",2,2,2
"android.text.method.ScrollingMovementMethod.top(TextView,Spannable)",2,2,2
"android.text.method.ScrollingMovementMethod.up(TextView,Spannable)",2,2,3
"android.text.method.SingleLineTransformationMethod.getInstance()",2,1,2
"android.text.method.SingleLineTransformationMethod.getOriginal()",1,1,1
"android.text.method.SingleLineTransformationMethod.getReplacement()",1,1,1
"android.text.method.TextKeyListener.NullKeyListener.clearMetaKeyState(View,Editable,int)",1,1,1
"android.text.method.TextKeyListener.NullKeyListener.getInputType()",1,1,1
"android.text.method.TextKeyListener.NullKeyListener.getInstance()",2,1,2
"android.text.method.TextKeyListener.NullKeyListener.onKeyDown(View,Editable,int,KeyEvent)",1,1,1
"android.text.method.TextKeyListener.NullKeyListener.onKeyOther(View,Editable,KeyEvent)",1,1,1
"android.text.method.TextKeyListener.NullKeyListener.onKeyUp(View,Editable,int,KeyEvent)",1,1,1
"android.text.method.TextKeyListener.SettingsObserver.SettingsObserver()",1,1,1
"android.text.method.TextKeyListener.SettingsObserver.onChange(boolean)",1,3,3
"android.text.method.TextKeyListener.TextKeyListener(Capitalize,boolean)",1,1,1
"android.text.method.TextKeyListener.clear(Editable)",1,2,2
"android.text.method.TextKeyListener.getInputType()",1,1,1
"android.text.method.TextKeyListener.getInstance()",1,1,1
"android.text.method.TextKeyListener.getInstance(boolean,Capitalize)",1,1,3
"android.text.method.TextKeyListener.getKeyListener(KeyEvent)",4,4,5
"android.text.method.TextKeyListener.getPrefs(Context)",1,3,3
"android.text.method.TextKeyListener.initPrefs(Context)",1,2,2
"android.text.method.TextKeyListener.onKeyDown(View,Editable,int,KeyEvent)",1,1,1
"android.text.method.TextKeyListener.onKeyOther(View,Editable,KeyEvent)",1,1,1
"android.text.method.TextKeyListener.onKeyUp(View,Editable,int,KeyEvent)",1,1,1
"android.text.method.TextKeyListener.onSpanAdded(Spannable,Object,int,int)",1,1,1
"android.text.method.TextKeyListener.onSpanChanged(Spannable,Object,int,int,int,int)",1,2,2
"android.text.method.TextKeyListener.onSpanRemoved(Spannable,Object,int,int)",1,1,1
"android.text.method.TextKeyListener.release()",1,3,3
"android.text.method.TextKeyListener.shouldCap(Capitalize,CharSequence,int)",3,1,4
"android.text.method.TextKeyListener.updatePrefs(ContentResolver)",1,1,5
"android.text.method.TimeKeyListener.getAcceptedChars()",1,1,1
"android.text.method.TimeKeyListener.getInputType()",1,1,1
"android.text.method.TimeKeyListener.getInstance()",2,1,2
"android.text.method.Touch.DragState.DragState(float,float,int,int)",1,1,1
"android.text.method.Touch.Touch()",1,1,1
"android.text.method.Touch.getInitialScrollX(TextView,Spannable)",1,1,2
"android.text.method.Touch.getInitialScrollY(TextView,Spannable)",1,1,2
"android.text.method.Touch.getMaxScrollX(TextView,Layout,int)",1,2,2
"android.text.method.Touch.onTouchEvent(TextView,Spannable,MotionEvent)",5,13,18
"android.text.method.Touch.scrollTo(TextView,Layout,int,int)",1,3,6
"android.text.style.AbsoluteSizeSpan.AbsoluteSizeSpan(Parcel)",1,1,1
"android.text.style.AbsoluteSizeSpan.AbsoluteSizeSpan(int)",1,1,1
"android.text.style.AbsoluteSizeSpan.AbsoluteSizeSpan(int,boolean)",1,1,1
"android.text.style.AbsoluteSizeSpan.describeContents()",1,1,1
"android.text.style.AbsoluteSizeSpan.getDip()",1,1,1
"android.text.style.AbsoluteSizeSpan.getSize()",1,1,1
"android.text.style.AbsoluteSizeSpan.getSpanTypeId()",1,1,1
"android.text.style.AbsoluteSizeSpan.updateDrawState(TextPaint)",1,2,2
"android.text.style.AbsoluteSizeSpan.updateMeasureState(TextPaint)",1,2,2
"android.text.style.AbsoluteSizeSpan.writeToParcel(Parcel,int)",1,1,2
"android.text.style.AlignmentSpan.Standard.Standard(Alignment)",1,1,1
"android.text.style.AlignmentSpan.Standard.Standard(Parcel)",1,1,1
"android.text.style.AlignmentSpan.Standard.describeContents()",1,1,1
"android.text.style.AlignmentSpan.Standard.getAlignment()",1,1,1
"android.text.style.AlignmentSpan.Standard.getSpanTypeId()",1,1,1
"android.text.style.AlignmentSpan.Standard.writeToParcel(Parcel,int)",1,1,1
"android.text.style.BackgroundColorSpan.BackgroundColorSpan(Parcel)",1,1,1
"android.text.style.BackgroundColorSpan.BackgroundColorSpan(int)",1,1,1
"android.text.style.BackgroundColorSpan.describeContents()",1,1,1
"android.text.style.BackgroundColorSpan.getBackgroundColor()",1,1,1
"android.text.style.BackgroundColorSpan.getSpanTypeId()",1,1,1
"android.text.style.BackgroundColorSpan.updateDrawState(TextPaint)",1,1,1
"android.text.style.BackgroundColorSpan.writeToParcel(Parcel,int)",1,1,1
"android.text.style.BulletSpan.BulletSpan()",1,1,1
"android.text.style.BulletSpan.BulletSpan(Parcel)",1,1,1
"android.text.style.BulletSpan.BulletSpan(int)",1,1,1
"android.text.style.BulletSpan.BulletSpan(int,int)",1,1,1
"android.text.style.BulletSpan.describeContents()",1,1,1
"android.text.style.BulletSpan.drawLeadingMargin(Canvas,Paint,int,int,int,int,int,CharSequence,int,int,boolean,Layout)",1,6,6
"android.text.style.BulletSpan.getLeadingMargin(boolean)",1,1,1
"android.text.style.BulletSpan.getSpanTypeId()",1,1,1
"android.text.style.BulletSpan.writeToParcel(Parcel,int)",1,1,2
"android.text.style.CharacterStyle.Passthrough.Passthrough(CharacterStyle)",1,1,1
"android.text.style.CharacterStyle.Passthrough.getUnderlying()",1,1,1
"android.text.style.CharacterStyle.Passthrough.updateDrawState(TextPaint)",1,1,1
"android.text.style.CharacterStyle.getUnderlying()",1,1,1
"android.text.style.CharacterStyle.wrap(CharacterStyle)",2,1,2
"android.text.style.ClickableSpan.updateDrawState(TextPaint)",1,1,1
"android.text.style.DrawableMarginSpan.DrawableMarginSpan(Drawable)",1,1,1
"android.text.style.DrawableMarginSpan.DrawableMarginSpan(Drawable,int)",1,1,1
"android.text.style.DrawableMarginSpan.chooseHeight(CharSequence,int,int,int,int,FontMetricsInt)",1,2,4
"android.text.style.DrawableMarginSpan.drawLeadingMargin(Canvas,Paint,int,int,int,int,int,CharSequence,int,int,boolean,Layout)",1,1,2
"android.text.style.DrawableMarginSpan.getLeadingMargin(boolean)",1,1,1
"android.text.style.DynamicDrawableSpan.DynamicDrawableSpan()",1,1,1
"android.text.style.DynamicDrawableSpan.DynamicDrawableSpan(int)",1,1,1
"android.text.style.DynamicDrawableSpan.draw(Canvas,CharSequence,int,int,float,int,int,int,Paint)",1,2,2
"android.text.style.DynamicDrawableSpan.getCachedDrawable()",1,3,3
"android.text.style.DynamicDrawableSpan.getSize(Paint,CharSequence,int,int,FontMetricsInt)",1,1,2
"android.text.style.DynamicDrawableSpan.getVerticalAlignment()",1,1,1
"android.text.style.ForegroundColorSpan.ForegroundColorSpan(Parcel)",1,1,1
"android.text.style.ForegroundColorSpan.ForegroundColorSpan(int)",1,1,1
"android.text.style.ForegroundColorSpan.describeContents()",1,1,1
"android.text.style.ForegroundColorSpan.getForegroundColor()",1,1,1
"android.text.style.ForegroundColorSpan.getSpanTypeId()",1,1,1
"android.text.style.ForegroundColorSpan.updateDrawState(TextPaint)",1,1,1
"android.text.style.ForegroundColorSpan.writeToParcel(Parcel,int)",1,1,1
"android.text.style.IconMarginSpan.IconMarginSpan(Bitmap)",1,1,1
"android.text.style.IconMarginSpan.IconMarginSpan(Bitmap,int)",1,1,1
"android.text.style.IconMarginSpan.chooseHeight(CharSequence,int,int,int,int,FontMetricsInt)",1,2,4
"android.text.style.IconMarginSpan.drawLeadingMargin(Canvas,Paint,int,int,int,int,int,CharSequence,int,int,boolean,Layout)",1,2,2
"android.text.style.IconMarginSpan.getLeadingMargin(boolean)",1,1,1
"android.text.style.ImageSpan.ImageSpan(Bitmap)",1,1,1
"android.text.style.ImageSpan.ImageSpan(Bitmap,int)",1,1,1
"android.text.style.ImageSpan.ImageSpan(Context,Bitmap)",1,1,1
"android.text.style.ImageSpan.ImageSpan(Context,Bitmap,int)",1,2,4
"android.text.style.ImageSpan.ImageSpan(Context,Uri)",1,1,1
"android.text.style.ImageSpan.ImageSpan(Context,Uri,int)",1,1,1
"android.text.style.ImageSpan.ImageSpan(Context,int)",1,1,1
"android.text.style.ImageSpan.ImageSpan(Context,int,int)",1,1,1
"android.text.style.ImageSpan.ImageSpan(Drawable)",1,1,1
"android.text.style.ImageSpan.ImageSpan(Drawable,String)",1,1,1
"android.text.style.ImageSpan.ImageSpan(Drawable,String,int)",1,1,1
"android.text.style.ImageSpan.ImageSpan(Drawable,int)",1,1,1
"android.text.style.ImageSpan.getDrawable()",1,5,5
"android.text.style.ImageSpan.getSource()",1,1,1
"android.text.style.LeadingMarginSpan.Standard.Standard(Parcel)",1,1,1
"android.text.style.LeadingMarginSpan.Standard.Standard(int)",1,1,1
"android.text.style.LeadingMarginSpan.Standard.Standard(int,int)",1,1,1
"android.text.style.LeadingMarginSpan.Standard.describeContents()",1,1,1
"android.text.style.LeadingMarginSpan.Standard.drawLeadingMargin(Canvas,Paint,int,int,int,int,int,CharSequence,int,int,boolean,Layout)",1,1,1
"android.text.style.LeadingMarginSpan.Standard.getLeadingMargin(boolean)",1,1,2
"android.text.style.LeadingMarginSpan.Standard.getSpanTypeId()",1,1,1
"android.text.style.LeadingMarginSpan.Standard.writeToParcel(Parcel,int)",1,1,1
"android.text.style.MaskFilterSpan.MaskFilterSpan(MaskFilter)",1,1,1
"android.text.style.MaskFilterSpan.getMaskFilter()",1,1,1
"android.text.style.MaskFilterSpan.updateDrawState(TextPaint)",1,1,1
"android.text.style.MetricAffectingSpan.Passthrough.Passthrough(MetricAffectingSpan)",1,1,1
"android.text.style.MetricAffectingSpan.Passthrough.getUnderlying()",1,1,1
"android.text.style.MetricAffectingSpan.Passthrough.updateDrawState(TextPaint)",1,1,1
"android.text.style.MetricAffectingSpan.Passthrough.updateMeasureState(TextPaint)",1,1,1
"android.text.style.MetricAffectingSpan.getUnderlying()",1,1,1
"android.text.style.QuoteSpan.QuoteSpan()",1,1,1
"android.text.style.QuoteSpan.QuoteSpan(Parcel)",1,1,1
"android.text.style.QuoteSpan.QuoteSpan(int)",1,1,1
"android.text.style.QuoteSpan.describeContents()",1,1,1
"android.text.style.QuoteSpan.drawLeadingMargin(Canvas,Paint,int,int,int,int,int,CharSequence,int,int,boolean,Layout)",1,1,1
"android.text.style.QuoteSpan.getColor()",1,1,1
"android.text.style.QuoteSpan.getLeadingMargin(boolean)",1,1,1
"android.text.style.QuoteSpan.getSpanTypeId()",1,1,1
"android.text.style.QuoteSpan.writeToParcel(Parcel,int)",1,1,1
"android.text.style.RasterizerSpan.RasterizerSpan(Rasterizer)",1,1,1
"android.text.style.RasterizerSpan.getRasterizer()",1,1,1
"android.text.style.RasterizerSpan.updateDrawState(TextPaint)",1,1,1
"android.text.style.RelativeSizeSpan.RelativeSizeSpan(Parcel)",1,1,1
"android.text.style.RelativeSizeSpan.RelativeSizeSpan(float)",1,1,1
"android.text.style.RelativeSizeSpan.describeContents()",1,1,1
"android.text.style.RelativeSizeSpan.getSizeChange()",1,1,1
"android.text.style.RelativeSizeSpan.getSpanTypeId()",1,1,1
"android.text.style.RelativeSizeSpan.updateDrawState(TextPaint)",1,1,1
"android.text.style.RelativeSizeSpan.updateMeasureState(TextPaint)",1,1,1
"android.text.style.RelativeSizeSpan.writeToParcel(Parcel,int)",1,1,1
"android.text.style.ReplacementSpan.updateDrawState(TextPaint)",1,1,1
"android.text.style.ReplacementSpan.updateMeasureState(TextPaint)",1,1,1
"android.text.style.ScaleXSpan.ScaleXSpan(Parcel)",1,1,1
"android.text.style.ScaleXSpan.ScaleXSpan(float)",1,1,1
"android.text.style.ScaleXSpan.describeContents()",1,1,1
"android.text.style.ScaleXSpan.getScaleX()",1,1,1
"android.text.style.ScaleXSpan.getSpanTypeId()",1,1,1
"android.text.style.ScaleXSpan.updateDrawState(TextPaint)",1,1,1
"android.text.style.ScaleXSpan.updateMeasureState(TextPaint)",1,1,1
"android.text.style.ScaleXSpan.writeToParcel(Parcel,int)",1,1,1
"android.text.style.StrikethroughSpan.StrikethroughSpan()",1,1,1
"android.text.style.StrikethroughSpan.StrikethroughSpan(Parcel)",1,1,1
"android.text.style.StrikethroughSpan.describeContents()",1,1,1
"android.text.style.StrikethroughSpan.getSpanTypeId()",1,1,1
"android.text.style.StrikethroughSpan.updateDrawState(TextPaint)",1,1,1
"android.text.style.StrikethroughSpan.writeToParcel(Parcel,int)",1,1,1
"android.text.style.StyleSpan.StyleSpan(Parcel)",1,1,1
"android.text.style.StyleSpan.StyleSpan(int)",1,1,1
"android.text.style.StyleSpan.apply(Paint,int)",1,5,5
"android.text.style.StyleSpan.describeContents()",1,1,1
"android.text.style.StyleSpan.getSpanTypeId()",1,1,1
"android.text.style.StyleSpan.getStyle()",1,1,1
"android.text.style.StyleSpan.updateDrawState(TextPaint)",1,1,1
"android.text.style.StyleSpan.updateMeasureState(TextPaint)",1,1,1
"android.text.style.StyleSpan.writeToParcel(Parcel,int)",1,1,1
"android.text.style.SubscriptSpan.SubscriptSpan()",1,1,1
"android.text.style.SubscriptSpan.SubscriptSpan(Parcel)",1,1,1
"android.text.style.SubscriptSpan.describeContents()",1,1,1
"android.text.style.SubscriptSpan.getSpanTypeId()",1,1,1
"android.text.style.SubscriptSpan.updateDrawState(TextPaint)",1,1,1
"android.text.style.SubscriptSpan.updateMeasureState(TextPaint)",1,1,1
"android.text.style.SubscriptSpan.writeToParcel(Parcel,int)",1,1,1
"android.text.style.SuperscriptSpan.SuperscriptSpan()",1,1,1
"android.text.style.SuperscriptSpan.SuperscriptSpan(Parcel)",1,1,1
"android.text.style.SuperscriptSpan.describeContents()",1,1,1
"android.text.style.SuperscriptSpan.getSpanTypeId()",1,1,1
"android.text.style.SuperscriptSpan.updateDrawState(TextPaint)",1,1,1
"android.text.style.SuperscriptSpan.updateMeasureState(TextPaint)",1,1,1
"android.text.style.SuperscriptSpan.writeToParcel(Parcel,int)",1,1,1
"android.text.style.TabStopSpan.Standard.Standard(int)",1,1,1
"android.text.style.TabStopSpan.Standard.getTabStop()",1,1,1
"android.text.style.TextAppearanceSpan.TextAppearanceSpan(Context,int)",1,1,1
"android.text.style.TextAppearanceSpan.TextAppearanceSpan(Context,int,int)",2,3,6
"android.text.style.TextAppearanceSpan.TextAppearanceSpan(Parcel)",1,3,3
"android.text.style.TextAppearanceSpan.TextAppearanceSpan(String,int,int,ColorStateList,ColorStateList)",1,1,1
"android.text.style.TextAppearanceSpan.describeContents()",1,1,1
"android.text.style.TextAppearanceSpan.getFamily()",1,1,1
"android.text.style.TextAppearanceSpan.getLinkTextColor()",1,1,1
"android.text.style.TextAppearanceSpan.getSpanTypeId()",1,1,1
"android.text.style.TextAppearanceSpan.getTextColor()",1,1,1
"android.text.style.TextAppearanceSpan.getTextSize()",1,1,1
"android.text.style.TextAppearanceSpan.getTextStyle()",1,1,1
"android.text.style.TextAppearanceSpan.updateDrawState(TextPaint)",1,3,3
"android.text.style.TextAppearanceSpan.updateMeasureState(TextPaint)",1,8,9
"android.text.style.TextAppearanceSpan.writeToParcel(Parcel,int)",1,3,3
"android.text.style.TypefaceSpan.TypefaceSpan(Parcel)",1,1,1
"android.text.style.TypefaceSpan.TypefaceSpan(String)",1,1,1
"android.text.style.TypefaceSpan.apply(Paint,String)",1,4,4
"android.text.style.TypefaceSpan.describeContents()",1,1,1
"android.text.style.TypefaceSpan.getFamily()",1,1,1
"android.text.style.TypefaceSpan.getSpanTypeId()",1,1,1
"android.text.style.TypefaceSpan.updateDrawState(TextPaint)",1,1,1
"android.text.style.TypefaceSpan.updateMeasureState(TextPaint)",1,1,1
"android.text.style.TypefaceSpan.writeToParcel(Parcel,int)",1,1,1
"android.text.style.URLSpan.URLSpan(Parcel)",1,1,1
"android.text.style.URLSpan.URLSpan(String)",1,1,1
"android.text.style.URLSpan.describeContents()",1,1,1
"android.text.style.URLSpan.getSpanTypeId()",1,1,1
"android.text.style.URLSpan.getURL()",1,1,1
"android.text.style.URLSpan.onClick(View)",1,1,1
"android.text.style.URLSpan.writeToParcel(Parcel,int)",1,1,1
"android.text.style.UnderlineSpan.UnderlineSpan()",1,1,1
"android.text.style.UnderlineSpan.UnderlineSpan(Parcel)",1,1,1
"android.text.style.UnderlineSpan.describeContents()",1,1,1
"android.text.style.UnderlineSpan.getSpanTypeId()",1,1,1
"android.text.style.UnderlineSpan.updateDrawState(TextPaint)",1,1,1
"android.text.style.UnderlineSpan.writeToParcel(Parcel,int)",1,1,1
"android.text.util.Linkify.addLinkMovementMethod(TextView)",1,3,4
"android.text.util.Linkify.addLinks(Spannable,Pattern,String)",1,1,1
"android.text.util.Linkify.addLinks(Spannable,Pattern,String,MatchFilter,TransformFilter)",1,5,5
"android.text.util.Linkify.addLinks(Spannable,int)",3,7,9
"android.text.util.Linkify.addLinks(TextView,Pattern,String)",1,1,1
"android.text.util.Linkify.addLinks(TextView,Pattern,String,MatchFilter,TransformFilter)",1,2,2
"android.text.util.Linkify.addLinks(TextView,int)",5,4,5
"android.text.util.Linkify.applyLink(String,int,int,Spannable)",1,1,1
"android.text.util.Linkify.gatherLinks(ArrayList<LinkSpec>,Spannable,Pattern,String[],MatchFilter,TransformFilter)",1,4,4
"android.text.util.Linkify.gatherMapLinks(ArrayList<LinkSpec>,Spannable)",3,2,4
"android.text.util.Linkify.makeUrl(String,String[],Matcher,TransformFilter)",3,5,6
"android.text.util.Linkify.pruneOverlaps(ArrayList<LinkSpec>)",8,4,12
"android.text.util.Rfc822Token.Rfc822Token(String,String,String)",1,1,1
"android.text.util.Rfc822Token.equals(Object)",2,3,4
"android.text.util.Rfc822Token.getAddress()",1,1,1
"android.text.util.Rfc822Token.getComment()",1,1,1
"android.text.util.Rfc822Token.getName()",1,1,1
"android.text.util.Rfc822Token.hashCode()",1,4,4
"android.text.util.Rfc822Token.quoteComment(String)",1,3,5
"android.text.util.Rfc822Token.quoteName(String)",1,3,4
"android.text.util.Rfc822Token.quoteNameIfNecessary(String)",3,3,9
"android.text.util.Rfc822Token.setAddress(String)",1,1,1
"android.text.util.Rfc822Token.setComment(String)",1,1,1
"android.text.util.Rfc822Token.setName(String)",1,1,1
"android.text.util.Rfc822Token.stringEquals(String,String)",2,2,2
"android.text.util.Rfc822Token.toString()",1,7,7
"android.text.util.Rfc822Tokenizer.crunch(StringBuilder)",1,11,11
"android.text.util.Rfc822Tokenizer.findTokenEnd(CharSequence,int)",10,9,17
"android.text.util.Rfc822Tokenizer.findTokenStart(CharSequence,int)",1,4,6
"android.text.util.Rfc822Tokenizer.terminateToken(CharSequence)",1,1,1
"android.text.util.Rfc822Tokenizer.tokenize(CharSequence)",1,1,1
"android.text.util.Rfc822Tokenizer.tokenize(CharSequence,Collection<Rfc822Token>)",10,24,27
"android.util.AndroidException.AndroidException()",1,1,1
"android.util.AndroidException.AndroidException(Exception)",1,1,1
"android.util.AndroidException.AndroidException(String)",1,1,1
"android.util.AndroidException.AndroidException(String,Throwable)",1,1,1
"android.util.AndroidRuntimeException.AndroidRuntimeException()",1,1,1
"android.util.AndroidRuntimeException.AndroidRuntimeException(Exception)",1,1,1
"android.util.AndroidRuntimeException.AndroidRuntimeException(String)",1,1,1
"android.util.AndroidRuntimeException.AndroidRuntimeException(String,Throwable)",1,1,1
"android.util.Base64.Base64()",1,1,1
"android.util.Base64.Decoder.Decoder(int,byte[])",1,1,2
"android.util.Base64.Decoder.maxOutputSize(int)",1,1,1
"android.util.Base64.Decoder.process(byte[],int,int,boolean)",21,3,33
"android.util.Base64.Encoder.Encoder(int,byte[])",1,1,3
"android.util.Base64.Encoder.maxOutputSize(int)",1,1,1
"android.util.Base64.Encoder.process(byte[],int,int,boolean)",2,2,30
"android.util.Base64.decode(String,int)",1,1,1
"android.util.Base64.decode(byte[],int)",1,1,1
"android.util.Base64.decode(byte[],int,int,int)",3,1,3
"android.util.Base64.encode(byte[],int)",1,1,1
"android.util.Base64.encode(byte[],int,int,int)",2,2,9
"android.util.Base64.encodeToString(byte[],int)",1,1,2
"android.util.Base64.encodeToString(byte[],int,int,int)",1,1,2
"android.util.Base64InputStream.Base64InputStream(InputStream,int)",1,1,1
"android.util.Base64InputStream.Base64InputStream(InputStream,int,boolean)",1,1,2
"android.util.Base64InputStream.available()",1,1,1
"android.util.Base64InputStream.close()",1,1,1
"android.util.Base64InputStream.mark(int)",1,1,1
"android.util.Base64InputStream.markSupported()",1,1,1
"android.util.Base64InputStream.read()",2,2,3
"android.util.Base64InputStream.read(byte[],int,int)",2,2,3
"android.util.Base64InputStream.refill()",3,2,4
"android.util.Base64InputStream.reset()",1,1,1
"android.util.Base64InputStream.skip(long)",2,2,3
"android.util.Base64OutputStream.Base64OutputStream(OutputStream,int)",1,1,1
"android.util.Base64OutputStream.Base64OutputStream(OutputStream,int,boolean)",1,1,2
"android.util.Base64OutputStream.close()",2,2,6
"android.util.Base64OutputStream.embiggen(byte[],int)",2,1,3
"android.util.Base64OutputStream.flushBuffer()",1,2,2
"android.util.Base64OutputStream.internalWrite(byte[],int,int,boolean)",2,1,2
"android.util.Base64OutputStream.write(byte[],int,int)",2,1,2
"android.util.Base64OutputStream.write(int)",1,2,3
"android.util.CalendarUtils.TimeZoneUtils.AsyncTZHandler.AsyncTZHandler(ContentResolver)",1,1,1
"android.util.CalendarUtils.TimeZoneUtils.AsyncTZHandler.onQueryComplete(int,Object,Cursor)",1,8,10
"android.util.CalendarUtils.TimeZoneUtils.TimeZoneUtils(String)",1,1,1
"android.util.CalendarUtils.TimeZoneUtils.forceDBRequery(Context,Runnable)",2,2,2
"android.util.CalendarUtils.TimeZoneUtils.formatDateRange(Context,long,long,int)",1,2,2
"android.util.CalendarUtils.TimeZoneUtils.getTimeZone(Context,Runnable)",1,5,5
"android.util.CalendarUtils.TimeZoneUtils.setTimeZone(Context,String)",2,8,12
"android.util.CalendarUtils.getSharedPreferences(Context,String)",1,1,1
"android.util.CalendarUtils.setSharedPreference(SharedPreferences,String,String)",1,1,1
"android.util.CalendarUtils.setSharedPreference(SharedPreferences,String,boolean)",1,1,1
"android.util.CharsetUtils.CharsetUtils()",1,1,1
"android.util.CharsetUtils.charsetForVendor(String)",1,1,1
"android.util.CharsetUtils.charsetForVendor(String,String)",1,1,1
"android.util.CharsetUtils.getDefaultVendor()",1,1,1
"android.util.CharsetUtils.isShiftJis(String)",3,3,6
"android.util.CharsetUtils.nameForDefaultVendor(String)",1,1,1
"android.util.CharsetUtils.nameForVendor(String,String)",4,4,5
"android.util.DayOfMonthCursor.DayOfMonthCursor(int,int,int,int)",1,1,1
"android.util.DayOfMonthCursor.down()",2,1,3
"android.util.DayOfMonthCursor.getSelectedColumn()",1,1,1
"android.util.DayOfMonthCursor.getSelectedDayOfMonth()",1,1,1
"android.util.DayOfMonthCursor.getSelectedMonthOffset()",3,1,3
"android.util.DayOfMonthCursor.getSelectedRow()",1,1,1
"android.util.DayOfMonthCursor.isSelected(int,int)",1,1,2
"android.util.DayOfMonthCursor.left()",2,1,3
"android.util.DayOfMonthCursor.right()",2,1,4
"android.util.DayOfMonthCursor.setSelectedDayOfMonth(int)",1,1,1
"android.util.DayOfMonthCursor.setSelectedRowColumn(int,int)",1,1,1
"android.util.DayOfMonthCursor.up()",2,1,3
"android.util.DebugUtils.buildShortClassTag(Object,StringBuilder)",1,5,5
"android.util.DebugUtils.isObjectSelected(Object)",1,12,12
"android.util.DisplayMetrics.DisplayMetrics()",1,1,1
"android.util.DisplayMetrics.getDeviceDensity()",1,1,1
"android.util.DisplayMetrics.setTo(DisplayMetrics)",1,1,1
"android.util.DisplayMetrics.setToDefaults()",1,1,1
"android.util.DisplayMetrics.toString()",1,1,1
"android.util.DisplayMetrics.updateMetrics(CompatibilityInfo,int,int)",3,8,16
"android.util.EventLog.Event.Event(byte[])",1,1,1
"android.util.EventLog.Event.decodeObject()",5,7,9
"android.util.EventLog.Event.getData()",1,3,3
"android.util.EventLog.Event.getProcessId()",1,1,1
"android.util.EventLog.Event.getTag()",1,1,1
"android.util.EventLog.Event.getThreadId()",1,1,1
"android.util.EventLog.Event.getTimeNanos()",1,1,1
"android.util.EventLog.getTagCode(String)",1,1,2
"android.util.EventLog.getTagName(int)",1,1,1
"android.util.EventLog.readEvents(int[],Collection<Event>)",1,1,1
"android.util.EventLog.readTagsFile()",5,6,10
"android.util.EventLog.writeEvent(int,Object...)",1,1,1
"android.util.EventLog.writeEvent(int,String)",1,1,1
"android.util.EventLog.writeEvent(int,int)",1,1,1
"android.util.EventLog.writeEvent(int,long)",1,1,1
"android.util.EventLogTags.Description.Description(int,String)",1,1,1
"android.util.EventLogTags.EventLogTags()",1,1,1
"android.util.EventLogTags.EventLogTags(BufferedReader)",1,1,1
"android.util.EventLogTags.get(String)",1,1,1
"android.util.EventLogTags.get(int)",1,1,1
"android.util.FinitePool.FinitePool(PoolableManager<T>)",1,1,1
"android.util.FinitePool.FinitePool(PoolableManager<T>,int)",2,1,2
"android.util.FinitePool.acquire()",1,3,3
"android.util.FinitePool.release(T)",1,2,3
"android.util.FloatMath.FloatMath()",1,1,1
"android.util.FloatMath.ceil(float)",1,1,1
"android.util.FloatMath.cos(float)",1,1,1
"android.util.FloatMath.floor(float)",1,1,1
"android.util.FloatMath.sin(float)",1,1,1
"android.util.FloatMath.sqrt(float)",1,1,1
"android.util.JsonReader.JsonReader(Reader)",2,1,2
"android.util.JsonReader.JsonSyntaxException.JsonSyntaxException(String)",1,1,1
"android.util.JsonReader.advance()",1,1,1
"android.util.JsonReader.beginArray()",1,1,1
"android.util.JsonReader.beginObject()",1,1,1
"android.util.JsonReader.checkLenient()",2,2,2
"android.util.JsonReader.close()",1,1,1
"android.util.JsonReader.decodeLiteral()",5,5,31
"android.util.JsonReader.decodeNumber(char[],int,int)",6,1,19
"android.util.JsonReader.endArray()",1,1,1
"android.util.JsonReader.endObject()",1,1,1
"android.util.JsonReader.expect(JsonToken)",2,2,2
"android.util.JsonReader.fillBuffer(int)",3,2,4
"android.util.JsonReader.getSnippet()",1,1,1
"android.util.JsonReader.hasNext()",1,1,2
"android.util.JsonReader.nextBoolean()",2,1,2
"android.util.JsonReader.nextDouble()",2,1,3
"android.util.JsonReader.nextInArray(boolean)",6,7,10
"android.util.JsonReader.nextInObject(boolean)",6,7,11
"android.util.JsonReader.nextInt()",3,2,5
"android.util.JsonReader.nextLiteral(boolean)",7,9,13
"android.util.JsonReader.nextLong()",3,2,5
"android.util.JsonReader.nextName()",2,2,2
"android.util.JsonReader.nextNonWhitespace()",7,7,13
"android.util.JsonReader.nextNull()",2,1,2
"android.util.JsonReader.nextString()",2,2,3
"android.util.JsonReader.nextString(char)",6,7,9
"android.util.JsonReader.nextValue()",2,3,6
"android.util.JsonReader.objectValue()",2,4,7
"android.util.JsonReader.peek()",11,7,13
"android.util.JsonReader.peekStack()",1,1,1
"android.util.JsonReader.pop()",1,1,1
"android.util.JsonReader.push(JsonScope)",1,1,1
"android.util.JsonReader.readEscapeCharacter()",9,6,12
"android.util.JsonReader.readLiteral()",2,3,3
"android.util.JsonReader.replaceTop(JsonScope)",1,1,1
"android.util.JsonReader.setLenient(boolean)",1,1,1
"android.util.JsonReader.skipTo(String)",4,4,5
"android.util.JsonReader.skipToEndOfLine()",3,2,5
"android.util.JsonReader.skipValue()",1,2,6
"android.util.JsonReader.syntaxError(String)",1,1,1
"android.util.JsonReader.toString()",1,1,1
"android.util.JsonWriter.JsonWriter(Writer)",2,1,2
"android.util.JsonWriter.beforeName()",3,2,3
"android.util.JsonWriter.beforeValue(boolean)",4,2,8
"android.util.JsonWriter.beginArray()",1,1,1
"android.util.JsonWriter.beginObject()",1,1,1
"android.util.JsonWriter.close()",2,1,2
"android.util.JsonWriter.close(JsonScope,JsonScope,String)",2,2,4
"android.util.JsonWriter.endArray()",1,1,1
"android.util.JsonWriter.endObject()",1,1,1
"android.util.JsonWriter.flush()",1,1,1
"android.util.JsonWriter.name(String)",2,1,2
"android.util.JsonWriter.newline()",2,2,3
"android.util.JsonWriter.nullValue()",1,1,1
"android.util.JsonWriter.open(JsonScope,String)",1,1,1
"android.util.JsonWriter.peek()",1,1,1
"android.util.JsonWriter.replaceTop(JsonScope)",1,1,1
"android.util.JsonWriter.setIndent(String)",1,1,2
"android.util.JsonWriter.string(String)",2,4,10
"android.util.JsonWriter.value(String)",2,2,2
"android.util.JsonWriter.value(boolean)",1,1,2
"android.util.JsonWriter.value(double)",2,2,3
"android.util.JsonWriter.value(long)",1,1,1
"android.util.Log.Log()",1,1,1
"android.util.Log.TerribleFailure.TerribleFailure(String,Throwable)",1,1,1
"android.util.Log.d(String,String)",1,1,1
"android.util.Log.d(String,String,Throwable)",1,1,1
"android.util.Log.e(String,String)",1,1,1
"android.util.Log.e(String,String,Throwable)",1,1,1
"android.util.Log.getStackTraceString(Throwable)",2,1,2
"android.util.Log.i(String,String)",1,1,1
"android.util.Log.i(String,String,Throwable)",1,1,1
"android.util.Log.isLoggable(String,int)",1,1,1
"android.util.Log.println(int,String,String)",1,1,1
"android.util.Log.println_native(int,int,String,String)",1,1,1
"android.util.Log.setWtfHandler(TerribleFailureHandler)",2,1,2
"android.util.Log.v(String,String)",1,1,1
"android.util.Log.v(String,String,Throwable)",1,1,1
"android.util.Log.w(String,String)",1,1,1
"android.util.Log.w(String,String,Throwable)",1,1,1
"android.util.Log.w(String,Throwable)",1,1,1
"android.util.Log.wtf(String,String)",1,1,1
"android.util.Log.wtf(String,String,Throwable)",1,1,1
"android.util.Log.wtf(String,Throwable)",1,1,1
"android.util.LogPrinter.LogPrinter(int,String)",1,1,1
"android.util.LogPrinter.LogPrinter(int,String,int)",1,1,1
"android.util.LogPrinter.println(String)",1,1,1
"android.util.LongSparseArray.LongSparseArray()",1,1,1
"android.util.LongSparseArray.LongSparseArray(int)",1,1,1
"android.util.LongSparseArray.append(long,E)",2,4,6
"android.util.LongSparseArray.binarySearch(long[],int,int,long)",3,1,5
"android.util.LongSparseArray.checkIntegrity()",3,4,4
"android.util.LongSparseArray.clear()",1,1,2
"android.util.LongSparseArray.delete(long)",1,1,3
"android.util.LongSparseArray.gc()",1,1,4
"android.util.LongSparseArray.get(long)",1,1,1
"android.util.LongSparseArray.get(long,E)",2,1,3
"android.util.LongSparseArray.getKeys()",1,1,1
"android.util.LongSparseArray.indexOfKey(long)",1,2,2
"android.util.LongSparseArray.indexOfValue(E)",3,2,4
"android.util.LongSparseArray.keyAt(int)",1,2,2
"android.util.LongSparseArray.put(long,E)",3,5,8
"android.util.LongSparseArray.remove(long)",1,1,1
"android.util.LongSparseArray.setValueAt(int,E)",1,2,2
"android.util.LongSparseArray.setValues(long[],E)",1,2,2
"android.util.LongSparseArray.size()",1,2,2
"android.util.LongSparseArray.valueAt(int)",1,2,2
"android.util.MathUtils.MathUtils()",1,1,1
"android.util.MathUtils.abs(float)",1,1,2
"android.util.MathUtils.acos(float)",1,1,1
"android.util.MathUtils.asin(float)",1,1,1
"android.util.MathUtils.atan(float)",1,1,1
"android.util.MathUtils.atan2(float,float)",1,1,1
"android.util.MathUtils.constrain(float,float,float)",1,1,3
"android.util.MathUtils.constrain(int,int,int)",1,1,3
"android.util.MathUtils.degrees(float)",1,1,1
"android.util.MathUtils.dist(float,float,float,float)",1,1,1
"android.util.MathUtils.dist(float,float,float,float,float,float)",1,1,1
"android.util.MathUtils.exp(float)",1,1,1
"android.util.MathUtils.lerp(float,float,float)",1,1,1
"android.util.MathUtils.log(float)",1,1,1
"android.util.MathUtils.mag(float,float)",1,1,1
"android.util.MathUtils.mag(float,float,float)",1,1,1
"android.util.MathUtils.map(float,float,float,float,float)",1,1,1
"android.util.MathUtils.max(float,float)",1,1,2
"android.util.MathUtils.max(float,float,float)",1,1,4
"android.util.MathUtils.max(int,int)",1,1,2
"android.util.MathUtils.max(int,int,int)",1,1,4
"android.util.MathUtils.min(float,float)",1,1,2
"android.util.MathUtils.min(float,float,float)",1,1,4
"android.util.MathUtils.min(int,int)",1,1,2
"android.util.MathUtils.min(int,int,int)",1,1,4
"android.util.MathUtils.norm(float,float,float)",1,1,1
"android.util.MathUtils.pow(float,float)",1,1,1
"android.util.MathUtils.radians(float)",1,1,1
"android.util.MathUtils.random(float)",1,1,1
"android.util.MathUtils.random(float,float)",2,1,2
"android.util.MathUtils.random(int)",1,1,1
"android.util.MathUtils.random(int,int)",2,1,2
"android.util.MathUtils.randomSeed(long)",1,1,1
"android.util.MathUtils.sq(float)",1,1,1
"android.util.MathUtils.tan(float)",1,1,1
"android.util.MonthDisplayHelper.MonthDisplayHelper(int,int)",1,1,1
"android.util.MonthDisplayHelper.MonthDisplayHelper(int,int,int)",2,1,3
"android.util.MonthDisplayHelper.getColumnOf(int)",1,1,1
"android.util.MonthDisplayHelper.getDayAt(int,int)",2,1,4
"android.util.MonthDisplayHelper.getDigitsForRow(int)",2,2,4
"android.util.MonthDisplayHelper.getFirstDayOfMonth()",1,1,1
"android.util.MonthDisplayHelper.getMonth()",1,1,1
"android.util.MonthDisplayHelper.getNumberOfDaysInMonth()",1,1,1
"android.util.MonthDisplayHelper.getOffset()",1,1,1
"android.util.MonthDisplayHelper.getRowOf(int)",1,1,1
"android.util.MonthDisplayHelper.getWeekStartDay()",1,1,1
"android.util.MonthDisplayHelper.getYear()",1,1,1
"android.util.MonthDisplayHelper.isWithinCurrentMonth(int,int)",4,1,8
"android.util.MonthDisplayHelper.nextMonth()",1,1,1
"android.util.MonthDisplayHelper.previousMonth()",1,1,1
"android.util.MonthDisplayHelper.recalculate()",1,1,2
"android.util.Pair.Pair(F,S)",1,1,1
"android.util.Pair.create(A,B)",1,1,1
"android.util.Pair.equals(Object)",3,2,5
"android.util.Pair.hashCode()",1,1,1
"android.util.Patterns.Patterns()",1,1,1
"android.util.Patterns.concatGroups(Matcher)",1,3,3
"android.util.Patterns.digitsAndPlusOnly(Matcher)",1,4,4
"android.util.Pools.Pools()",1,1,1
"android.util.Pools.finitePool(PoolableManager<T>,int)",1,1,1
"android.util.Pools.simplePool(PoolableManager<T>)",1,1,1
"android.util.Pools.synchronizedPool(Pool<T>)",1,1,1
"android.util.Pools.synchronizedPool(Pool<T>,Object)",1,1,1
"android.util.PrefixPrinter.PrefixPrinter(Printer,String)",1,1,1
"android.util.PrefixPrinter.create(Printer,String)",2,2,3
"android.util.PrefixPrinter.println(String)",1,1,1
"android.util.PrintStreamPrinter.PrintStreamPrinter(PrintStream)",1,1,1
"android.util.PrintStreamPrinter.println(String)",1,1,1
"android.util.PrintWriterPrinter.PrintWriterPrinter(PrintWriter)",1,1,1
"android.util.PrintWriterPrinter.println(String)",1,1,1
"android.util.Singleton.get()",1,2,2
"android.util.Slog.Slog()",1,1,1
"android.util.Slog.d(String,String)",1,1,1
"android.util.Slog.d(String,String,Throwable)",1,1,1
"android.util.Slog.e(String,String)",1,1,1
"android.util.Slog.e(String,String,Throwable)",1,1,1
"android.util.Slog.i(String,String)",1,1,1
"android.util.Slog.i(String,String,Throwable)",1,1,1
"android.util.Slog.println(int,String,String)",1,1,1
"android.util.Slog.v(String,String)",1,1,1
"android.util.Slog.v(String,String,Throwable)",1,1,1
"android.util.Slog.w(String,String)",1,1,1
"android.util.Slog.w(String,String,Throwable)",1,1,1
"android.util.Slog.w(String,Throwable)",1,1,1
"android.util.SparseArray.SparseArray()",1,1,1
"android.util.SparseArray.SparseArray(int)",1,1,1
"android.util.SparseArray.append(int,E)",2,4,6
"android.util.SparseArray.binarySearch(int[],int,int,int)",3,1,5
"android.util.SparseArray.checkIntegrity()",3,4,4
"android.util.SparseArray.clear()",1,1,2
"android.util.SparseArray.delete(int)",1,1,3
"android.util.SparseArray.gc()",1,1,4
"android.util.SparseArray.get(int)",1,1,1
"android.util.SparseArray.get(int,E)",2,1,3
"android.util.SparseArray.indexOfKey(int)",1,2,2
"android.util.SparseArray.indexOfValue(E)",3,2,4
"android.util.SparseArray.keyAt(int)",1,2,2
"android.util.SparseArray.put(int,E)",3,5,8
"android.util.SparseArray.remove(int)",1,1,1
"android.util.SparseArray.removeAt(int)",1,1,2
"android.util.SparseArray.setValueAt(int,E)",1,2,2
"android.util.SparseArray.size()",1,2,2
"android.util.SparseArray.valueAt(int)",1,2,2
"android.util.SparseBooleanArray.SparseBooleanArray()",1,1,1
"android.util.SparseBooleanArray.SparseBooleanArray(int)",1,1,1
"android.util.SparseBooleanArray.append(int,boolean)",2,3,4
"android.util.SparseBooleanArray.binarySearch(int[],int,int,int)",3,1,5
"android.util.SparseBooleanArray.checkIntegrity()",3,4,4
"android.util.SparseBooleanArray.clear()",1,1,1
"android.util.SparseBooleanArray.delete(int)",1,2,2
"android.util.SparseBooleanArray.get(int)",1,1,1
"android.util.SparseBooleanArray.get(int,boolean)",2,1,2
"android.util.SparseBooleanArray.indexOfKey(int)",1,1,1
"android.util.SparseBooleanArray.indexOfValue(boolean)",3,1,3
"android.util.SparseBooleanArray.keyAt(int)",1,1,1
"android.util.SparseBooleanArray.put(int,boolean)",1,4,4
"android.util.SparseBooleanArray.size()",1,1,1
"android.util.SparseBooleanArray.valueAt(int)",1,1,1
"android.util.SparseIntArray.SparseIntArray()",1,1,1
"android.util.SparseIntArray.SparseIntArray(int)",1,1,1
"android.util.SparseIntArray.append(int,int)",2,3,4
"android.util.SparseIntArray.binarySearch(int[],int,int,int)",3,1,5
"android.util.SparseIntArray.checkIntegrity()",3,4,4
"android.util.SparseIntArray.clear()",1,1,1
"android.util.SparseIntArray.delete(int)",1,2,2
"android.util.SparseIntArray.get(int)",1,1,1
"android.util.SparseIntArray.get(int,int)",2,1,2
"android.util.SparseIntArray.indexOfKey(int)",1,1,1
"android.util.SparseIntArray.indexOfValue(int)",3,1,3
"android.util.SparseIntArray.keyAt(int)",1,1,1
"android.util.SparseIntArray.put(int,int)",1,4,4
"android.util.SparseIntArray.removeAt(int)",1,1,1
"android.util.SparseIntArray.size()",1,1,1
"android.util.SparseIntArray.valueAt(int)",1,1,1
"android.util.StateSet.dump(int[])",2,3,7
"android.util.StateSet.isWildCard(int[])",1,1,2
"android.util.StateSet.stateSetMatches(int[],int)",6,1,6
"android.util.StateSet.stateSetMatches(int[],int[])",10,3,13
"android.util.StateSet.trimStateSet(int[],int)",2,1,2
"android.util.StringBuilderPrinter.StringBuilderPrinter(StringBuilder)",1,1,1
"android.util.StringBuilderPrinter.println(String)",1,3,3
"android.util.SynchronizedPool.SynchronizedPool(Pool<T>)",1,1,1
"android.util.SynchronizedPool.SynchronizedPool(Pool<T>,Object)",1,1,1
"android.util.SynchronizedPool.acquire()",1,1,1
"android.util.SynchronizedPool.release(T)",1,1,1
"android.util.TimeFormatException.TimeFormatException(String)",1,1,1
"android.util.TimeUtils.accumField(int,int,boolean,int)",4,1,9
"android.util.TimeUtils.formatDuration(long,PrintWriter)",1,1,1
"android.util.TimeUtils.formatDuration(long,PrintWriter,int)",1,1,1
"android.util.TimeUtils.formatDuration(long,StringBuilder)",1,1,1
"android.util.TimeUtils.formatDuration(long,long,PrintWriter)",2,2,2
"android.util.TimeUtils.formatDurationLocked(long,int)",2,2,16
"android.util.TimeUtils.getTimeZone(int,boolean,long,String)",8,9,15
"android.util.TimeUtils.getTimeZoneDatabaseVersion()",1,1,1
"android.util.TimeUtils.printField(char[],int,char,int,boolean,int)",1,1,10
"android.util.TimingLogger.TimingLogger(String,String)",1,1,1
"android.util.TimingLogger.addSplit(String)",2,1,2
"android.util.TimingLogger.dumpToLog()",2,2,3
"android.util.TimingLogger.reset()",2,2,3
"android.util.TimingLogger.reset(String,String)",1,1,1
"android.util.TypedValue.applyDimension(int,float,DisplayMetrics)",7,2,7
"android.util.TypedValue.coerceToString()",2,1,2
"android.util.TypedValue.coerceToString(int,int)",11,8,14
"android.util.TypedValue.complexToDimension(int,DisplayMetrics)",1,1,1
"android.util.TypedValue.complexToDimensionNoisy(int,DisplayMetrics)",1,1,1
"android.util.TypedValue.complexToDimensionPixelOffset(int,DisplayMetrics)",1,1,1
"android.util.TypedValue.complexToDimensionPixelSize(int,DisplayMetrics)",4,1,4
"android.util.TypedValue.complexToFloat(int)",1,1,1
"android.util.TypedValue.complexToFraction(int,float,float)",3,3,3
"android.util.TypedValue.getDimension(DisplayMetrics)",1,1,1
"android.util.TypedValue.getFloat()",1,1,1
"android.util.TypedValue.getFraction(float,float)",1,1,1
"android.util.TypedValue.setTo(TypedValue)",1,1,1
"android.util.TypedValue.toString()",1,4,5
"android.util.Xml.Encoding.Encoding(String)",1,1,1
"android.util.Xml.asAttributeSet(XmlPullParser)",1,1,2
"android.util.Xml.findEncodingByName(String)",4,2,4
"android.util.Xml.newPullParser()",1,1,1
"android.util.Xml.newSerializer()",1,1,2
"android.util.Xml.parse(InputStream,Encoding,ContentHandler)",1,1,1
"android.util.Xml.parse(Reader,ContentHandler)",1,1,1
"android.util.Xml.parse(String,ContentHandler)",1,1,2
"android.util.XmlPullAttributes.XmlPullAttributes(XmlPullParser)",1,1,1
"android.util.XmlPullAttributes.getAttributeBooleanValue(String,String,boolean)",1,1,1
"android.util.XmlPullAttributes.getAttributeBooleanValue(int,boolean)",1,1,1
"android.util.XmlPullAttributes.getAttributeCount()",1,1,1
"android.util.XmlPullAttributes.getAttributeFloatValue(String,String,float)",2,2,2
"android.util.XmlPullAttributes.getAttributeFloatValue(int,float)",2,2,2
"android.util.XmlPullAttributes.getAttributeIntValue(String,String,int)",1,1,1
"android.util.XmlPullAttributes.getAttributeIntValue(int,int)",1,1,1
"android.util.XmlPullAttributes.getAttributeListValue(String,String,String[],int)",1,1,1
"android.util.XmlPullAttributes.getAttributeListValue(int,String[],int)",1,1,1
"android.util.XmlPullAttributes.getAttributeName(int)",1,1,1
"android.util.XmlPullAttributes.getAttributeNameResource(int)",1,1,1
"android.util.XmlPullAttributes.getAttributeResourceValue(String,String,int)",1,1,1
"android.util.XmlPullAttributes.getAttributeResourceValue(int,int)",1,1,1
"android.util.XmlPullAttributes.getAttributeUnsignedIntValue(String,String,int)",1,1,1
"android.util.XmlPullAttributes.getAttributeUnsignedIntValue(int,int)",1,1,1
"android.util.XmlPullAttributes.getAttributeValue(String,String)",1,1,1
"android.util.XmlPullAttributes.getAttributeValue(int)",1,1,1
"android.util.XmlPullAttributes.getClassAttribute()",1,1,1
"android.util.XmlPullAttributes.getIdAttribute()",1,1,1
"android.util.XmlPullAttributes.getIdAttributeResourceValue(int)",1,1,1
"android.util.XmlPullAttributes.getPositionDescription()",1,1,1
"android.util.XmlPullAttributes.getStyleAttribute()",1,1,1
"android.view.AbsSavedState.AbsSavedState()",1,1,1
"android.view.AbsSavedState.AbsSavedState(Parcel)",1,1,2
"android.view.AbsSavedState.AbsSavedState(Parcelable)",2,1,3
"android.view.AbsSavedState.describeContents()",1,1,1
"android.view.AbsSavedState.getSuperState()",1,1,1
"android.view.AbsSavedState.writeToParcel(Parcel,int)",1,1,1
"android.view.ContextThemeWrapper.ContextThemeWrapper()",1,1,1
"android.view.ContextThemeWrapper.ContextThemeWrapper(Context,int)",1,1,1
"android.view.ContextThemeWrapper.attachBaseContext(Context)",1,1,1
"android.view.ContextThemeWrapper.getSystemService(String)",2,3,3
"android.view.ContextThemeWrapper.getTheme()",2,1,3
"android.view.ContextThemeWrapper.initializeTheme()",1,3,3
"android.view.ContextThemeWrapper.onApplyThemeResource(Theme,int,boolean)",1,1,1
"android.view.ContextThemeWrapper.setTheme(int)",1,1,1
"android.view.Display.CompatibleDisplay.CompatibleDisplay(int,DisplayMetrics)",1,1,1
"android.view.Display.CompatibleDisplay.getHeight()",1,1,1
"android.view.Display.CompatibleDisplay.getWidth()",1,1,1
"android.view.Display.Display(int)",1,2,2
"android.view.Display.createMetricsBasedDisplay(int,DisplayMetrics)",1,1,1
"android.view.Display.getDisplayCount()",1,1,1
"android.view.Display.getDisplayId()",1,1,1
"android.view.Display.getHeight()",1,1,1
"android.view.Display.getMetrics(DisplayMetrics)",1,1,1
"android.view.Display.getOrientation()",1,1,1
"android.view.Display.getPixelFormat()",1,1,1
"android.view.Display.getRefreshRate()",1,1,1
"android.view.Display.getRotation()",1,1,1
"android.view.Display.getWidth()",1,1,1
"android.view.Display.init(int)",1,1,1
"android.view.Display.nativeClassInit()",1,1,1
"android.view.Display.unmapDisplaySize(int)",1,1,1
"android.view.DragEvent.DragEvent()",1,1,1
"android.view.DragEvent.describeContents()",1,1,1
"android.view.DragEvent.getAction()",1,1,1
"android.view.DragEvent.getClipData()",1,1,1
"android.view.DragEvent.getClipDescription()",1,1,1
"android.view.DragEvent.getLocalState()",1,1,1
"android.view.DragEvent.getResult()",1,1,1
"android.view.DragEvent.getX()",1,1,1
"android.view.DragEvent.getY()",1,1,1
"android.view.DragEvent.init(int,float,float,ClipDescription,ClipData,boolean)",1,1,1
"android.view.DragEvent.obtain()",1,1,1
"android.view.DragEvent.obtain(DragEvent)",1,1,1
"android.view.DragEvent.obtain(int,float,float,Object,ClipDescription,ClipData,boolean)",2,2,2
"android.view.DragEvent.recycle()",4,4,5
"android.view.DragEvent.toString()",1,1,1
"android.view.DragEvent.writeToParcel(Parcel,int)",1,3,4
"android.view.FocusFinder.FocusFinder()",1,1,1
"android.view.FocusFinder.SequentialFocusComparator.compare(View,View)",10,1,10
"android.view.FocusFinder.SequentialFocusComparator.getRect(View,Rect)",1,1,1
"android.view.FocusFinder.SequentialFocusComparator.recycle()",1,1,1
"android.view.FocusFinder.SequentialFocusComparator.setRoot(ViewGroup)",1,1,1
"android.view.FocusFinder.beamBeats(int,Rect,Rect,Rect)",4,1,6
"android.view.FocusFinder.beamsOverlap(int,Rect,Rect)",3,2,5
"android.view.FocusFinder.findNearestTouchable(ViewGroup,int,int,int,int[])",5,9,16
"android.view.FocusFinder.findNextFocus(ViewGroup,View,Rect,int)",12,13,21
"android.view.FocusFinder.findNextFocus(ViewGroup,View,int)",4,6,8
"android.view.FocusFinder.findNextFocusFromRect(ViewGroup,Rect,int)",1,1,1
"android.view.FocusFinder.getInstance()",1,1,1
"android.view.FocusFinder.getWeightedDistanceFor(int,int)",1,1,1
"android.view.FocusFinder.isBetterCandidate(int,Rect,Rect,Rect)",5,1,5
"android.view.FocusFinder.isCandidate(Rect,Rect,int)",5,2,13
"android.view.FocusFinder.isToDirectionOf(int,Rect,Rect)",5,2,5
"android.view.FocusFinder.isTouchCandidate(int,int,Rect,int)",5,2,13
"android.view.FocusFinder.majorAxisDistance(int,Rect,Rect)",1,1,1
"android.view.FocusFinder.majorAxisDistanceRaw(int,Rect,Rect)",5,2,5
"android.view.FocusFinder.majorAxisDistanceToFarEdge(int,Rect,Rect)",1,1,1
"android.view.FocusFinder.majorAxisDistanceToFarEdgeRaw(int,Rect,Rect)",5,2,5
"android.view.FocusFinder.minorAxisDistance(int,Rect,Rect)",3,3,3
"android.view.FocusFinderHelper.FocusFinderHelper(FocusFinder)",1,1,1
"android.view.FocusFinderHelper.beamBeats(int,Rect,Rect,Rect)",1,1,1
"android.view.FocusFinderHelper.beamsOverlap(int,Rect,Rect)",1,1,1
"android.view.FocusFinderHelper.isBetterCandidate(int,Rect,Rect,Rect)",1,1,1
"android.view.FocusFinderHelper.isCandidate(Rect,Rect,int)",1,1,1
"android.view.FocusFinderHelper.majorAxisDistance(int,Rect,Rect)",1,1,1
"android.view.FocusFinderHelper.majorAxisDistanceToFarEdge(int,Rect,Rect)",1,1,1
"android.view.GLES20Canvas.CanvasFinalizer.CanvasFinalizer(int)",1,1,1
"android.view.GLES20Canvas.CanvasFinalizer.finalize()",1,1,1
"android.view.GLES20Canvas.GLES20Canvas(boolean)",1,1,1
"android.view.GLES20Canvas.GLES20Canvas(boolean,boolean)",2,2,3
"android.view.GLES20Canvas.acquireContext()",1,2,2
"android.view.GLES20Canvas.clipPath(Path)",1,1,1
"android.view.GLES20Canvas.clipPath(Path,Op)",1,1,1
"android.view.GLES20Canvas.clipRect(Rect)",1,1,1
"android.view.GLES20Canvas.clipRect(Rect,Op)",1,1,1
"android.view.GLES20Canvas.clipRect(RectF)",1,1,1
"android.view.GLES20Canvas.clipRect(RectF,Op)",1,1,1
"android.view.GLES20Canvas.clipRect(float,float,float,float)",1,1,1
"android.view.GLES20Canvas.clipRect(float,float,float,float,Op)",1,1,1
"android.view.GLES20Canvas.clipRect(int,int,int,int)",1,1,1
"android.view.GLES20Canvas.clipRegion(Region)",1,1,1
"android.view.GLES20Canvas.clipRegion(Region,Op)",1,1,1
"android.view.GLES20Canvas.concat(Matrix)",1,1,1
"android.view.GLES20Canvas.destroyDisplayList(int)",1,1,1
"android.view.GLES20Canvas.drawARGB(int,int,int,int)",1,1,1
"android.view.GLES20Canvas.drawArc(RectF,float,float,boolean,Paint)",1,1,1
"android.view.GLES20Canvas.drawBitmap(Bitmap,Matrix,Paint)",1,3,4
"android.view.GLES20Canvas.drawBitmap(Bitmap,Rect,Rect,Paint)",1,4,5
"android.view.GLES20Canvas.drawBitmap(Bitmap,Rect,RectF,Paint)",1,3,4
"android.view.GLES20Canvas.drawBitmap(Bitmap,float,float,Paint)",1,3,4
"android.view.GLES20Canvas.drawBitmap(int[],int,int,float,float,int,int,boolean,Paint)",1,3,5
"android.view.GLES20Canvas.drawBitmap(int[],int,int,int,int,int,int,boolean,Paint)",1,1,1
"android.view.GLES20Canvas.drawBitmapMesh(Bitmap,int,int,float[],int,int[],int,Paint)",1,1,1
"android.view.GLES20Canvas.drawCircle(float,float,float,Paint)",1,1,1
"android.view.GLES20Canvas.drawColor(int)",1,1,1
"android.view.GLES20Canvas.drawColor(int,Mode)",1,1,1
"android.view.GLES20Canvas.drawDisplayList(DisplayList)",1,1,1
"android.view.GLES20Canvas.drawLine(float,float,float,float,Paint)",1,1,1
"android.view.GLES20Canvas.drawLines(float[],Paint)",1,1,1
"android.view.GLES20Canvas.drawLines(float[],int,int,Paint)",2,2,4
"android.view.GLES20Canvas.drawOval(RectF,Paint)",1,1,1
"android.view.GLES20Canvas.drawPaint(Paint)",1,1,1
"android.view.GLES20Canvas.drawPatch(Bitmap,byte[],RectF,Paint)",1,3,4
"android.view.GLES20Canvas.drawPath(Path,Paint)",1,4,4
"android.view.GLES20Canvas.drawPicture(Picture)",1,1,1
"android.view.GLES20Canvas.drawPicture(Picture,Rect)",1,1,1
"android.view.GLES20Canvas.drawPicture(Picture,RectF)",1,1,1
"android.view.GLES20Canvas.drawPoint(float,float,Paint)",1,1,1
"android.view.GLES20Canvas.drawPoints(float[],Paint)",1,1,1
"android.view.GLES20Canvas.drawPoints(float[],int,int,Paint)",1,1,1
"android.view.GLES20Canvas.drawPosText(String,float[],Paint)",1,1,1
"android.view.GLES20Canvas.drawPosText(char[],int,int,float[],Paint)",1,1,1
"android.view.GLES20Canvas.drawRGB(int,int,int)",1,1,1
"android.view.GLES20Canvas.drawRect(Rect,Paint)",1,1,1
"android.view.GLES20Canvas.drawRect(RectF,Paint)",1,1,1
"android.view.GLES20Canvas.drawRect(float,float,float,float,Paint)",1,2,2
"android.view.GLES20Canvas.drawRoundRect(RectF,float,float,Paint)",1,1,1
"android.view.GLES20Canvas.drawText(CharSequence,int,int,float,float,Paint)",1,4,6
"android.view.GLES20Canvas.drawText(String,float,float,Paint)",1,2,2
"android.view.GLES20Canvas.drawText(String,int,int,float,float,Paint)",2,2,3
"android.view.GLES20Canvas.drawText(char[],int,int,float,float,Paint)",2,2,3
"android.view.GLES20Canvas.drawTextOnPath(String,Path,float,float,Paint)",1,1,1
"android.view.GLES20Canvas.drawTextOnPath(char[],int,int,Path,float,float,Paint)",1,1,1
"android.view.GLES20Canvas.drawTextRun(CharSequence,int,int,int,int,float,float,int,Paint)",2,4,8
"android.view.GLES20Canvas.drawTextRun(char[],int,int,int,int,float,float,int,Paint)",3,2,5
"android.view.GLES20Canvas.drawVertices(VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,Paint)",1,1,1
"android.view.GLES20Canvas.getClipBounds(Rect)",1,1,1
"android.view.GLES20Canvas.getDisplayList()",1,1,1
"android.view.GLES20Canvas.getDrawFilter()",1,1,1
"android.view.GLES20Canvas.getHeight()",1,1,1
"android.view.GLES20Canvas.getMatrix(Matrix)",1,1,1
"android.view.GLES20Canvas.getNativeMatrix()",1,1,1
"android.view.GLES20Canvas.getSaveCount()",1,1,1
"android.view.GLES20Canvas.getWidth()",1,1,1
"android.view.GLES20Canvas.isAvailable()",1,1,1
"android.view.GLES20Canvas.isOpaque()",1,1,1
"android.view.GLES20Canvas.nAcquireContext(int)",1,1,1
"android.view.GLES20Canvas.nClipRect(int,float,float,float,float,int)",1,1,1
"android.view.GLES20Canvas.nClipRect(int,int,int,int,int,int)",1,1,1
"android.view.GLES20Canvas.nConcatMatrix(int,int)",1,1,1
"android.view.GLES20Canvas.nCreateDisplayList(int)",1,1,1
"android.view.GLES20Canvas.nCreateDisplayListRenderer()",1,1,1
"android.view.GLES20Canvas.nCreateRenderer()",1,1,1
"android.view.GLES20Canvas.nDestroyDisplayList(int)",1,1,1
"android.view.GLES20Canvas.nDestroyRenderer(int)",1,1,1
"android.view.GLES20Canvas.nDrawBitmap(int,int,byte[],float,float,float,float,float,float,float,float,int)",1,1,1
"android.view.GLES20Canvas.nDrawBitmap(int,int,byte[],float,float,int)",1,1,1
"android.view.GLES20Canvas.nDrawBitmap(int,int,byte[],int,int)",1,1,1
"android.view.GLES20Canvas.nDrawColor(int,int,int)",1,1,1
"android.view.GLES20Canvas.nDrawDisplayList(int,int)",1,1,1
"android.view.GLES20Canvas.nDrawLines(int,float[],int,int,int)",1,1,1
"android.view.GLES20Canvas.nDrawPatch(int,int,byte[],byte[],float,float,float,float,int)",1,1,1
"android.view.GLES20Canvas.nDrawPath(int,int,int)",1,1,1
"android.view.GLES20Canvas.nDrawRect(int,float,float,float,float,int)",1,1,1
"android.view.GLES20Canvas.nDrawRects(int,int,int)",1,1,1
"android.view.GLES20Canvas.nDrawText(int,String,int,int,float,float,int,int)",1,1,1
"android.view.GLES20Canvas.nDrawText(int,char[],int,int,float,float,int,int)",1,1,1
"android.view.GLES20Canvas.nDrawTextRun(int,String,int,int,int,int,float,float,int,int)",1,1,1
"android.view.GLES20Canvas.nDrawTextRun(int,char[],int,int,int,int,float,float,int,int)",1,1,1
"android.view.GLES20Canvas.nFinish(int)",1,1,1
"android.view.GLES20Canvas.nGetClipBounds(int,Rect)",1,1,1
"android.view.GLES20Canvas.nGetMatrix(int)",1,1,1
"android.view.GLES20Canvas.nGetMatrix(int,int)",1,1,1
"android.view.GLES20Canvas.nGetSaveCount(int)",1,1,1
"android.view.GLES20Canvas.nIsAvailable()",1,1,1
"android.view.GLES20Canvas.nPrepare(int,boolean)",1,1,1
"android.view.GLES20Canvas.nQuickReject(int,float,float,float,float,int)",1,1,1
"android.view.GLES20Canvas.nReleaseContext(int)",1,1,1
"android.view.GLES20Canvas.nResetModifiers(int)",1,1,1
"android.view.GLES20Canvas.nRestore(int)",1,1,1
"android.view.GLES20Canvas.nRestoreToCount(int,int)",1,1,1
"android.view.GLES20Canvas.nRotate(int,float)",1,1,1
"android.view.GLES20Canvas.nSave(int,int)",1,1,1
"android.view.GLES20Canvas.nSaveLayer(int,float,float,float,float,int,int)",1,1,1
"android.view.GLES20Canvas.nSaveLayerAlpha(int,float,float,float,float,int,int)",1,1,1
"android.view.GLES20Canvas.nScale(int,float,float)",1,1,1
"android.view.GLES20Canvas.nSetMatrix(int,int)",1,1,1
"android.view.GLES20Canvas.nSetViewport(int,int,int)",1,1,1
"android.view.GLES20Canvas.nSetupColorFilter(int,int)",1,1,1
"android.view.GLES20Canvas.nSetupShader(int,int)",1,1,1
"android.view.GLES20Canvas.nSetupShadow(int,float,float,float,int)",1,1,1
"android.view.GLES20Canvas.nTranslate(int,float,float)",1,1,1
"android.view.GLES20Canvas.onPostDraw()",1,1,1
"android.view.GLES20Canvas.onPreDraw()",1,1,1
"android.view.GLES20Canvas.quickReject(Path,EdgeType)",1,1,1
"android.view.GLES20Canvas.quickReject(RectF,EdgeType)",1,1,1
"android.view.GLES20Canvas.quickReject(float,float,float,float,EdgeType)",1,1,1
"android.view.GLES20Canvas.releaseContext()",1,2,2
"android.view.GLES20Canvas.restore()",1,1,1
"android.view.GLES20Canvas.restoreToCount(int)",1,1,1
"android.view.GLES20Canvas.rotate(float)",1,1,1
"android.view.GLES20Canvas.save()",1,1,1
"android.view.GLES20Canvas.save(int)",1,1,1
"android.view.GLES20Canvas.saveLayer(RectF,Paint,int)",1,1,1
"android.view.GLES20Canvas.saveLayer(float,float,float,float,Paint,int)",1,1,2
"android.view.GLES20Canvas.saveLayerAlpha(RectF,int,int)",1,1,1
"android.view.GLES20Canvas.saveLayerAlpha(float,float,float,float,int,int)",1,1,1
"android.view.GLES20Canvas.scale(float,float)",1,1,1
"android.view.GLES20Canvas.setDrawFilter(DrawFilter)",1,1,1
"android.view.GLES20Canvas.setMatrix(Matrix)",1,1,1
"android.view.GLES20Canvas.setViewport(int,int)",1,1,1
"android.view.GLES20Canvas.setupColorFilter(Paint)",2,2,2
"android.view.GLES20Canvas.setupModifiers(Paint)",1,4,4
"android.view.GLES20Canvas.skew(float,float)",1,1,1
"android.view.GLES20Canvas.translate(float,float)",1,1,1
"android.view.GLES20DisplayList.DisplayListFinalizer.DisplayListFinalizer(int)",1,1,1
"android.view.GLES20DisplayList.DisplayListFinalizer.finalize()",1,1,1
"android.view.GLES20DisplayList.end()",1,2,2
"android.view.GLES20DisplayList.isReady()",1,1,2
"android.view.GLES20DisplayList.start()",2,1,2
"android.view.GLES20RecordingCanvas.GLES20RecordingCanvas(boolean)",1,1,1
"android.view.GLES20RecordingCanvas.drawArc(RectF,float,float,boolean,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawBitmap(Bitmap,Matrix,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawBitmap(Bitmap,Rect,Rect,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawBitmap(Bitmap,Rect,RectF,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawBitmap(Bitmap,float,float,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawBitmap(int[],int,int,float,float,int,int,boolean,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawBitmap(int[],int,int,int,int,int,int,boolean,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawBitmapMesh(Bitmap,int,int,float[],int,int[],int,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawCircle(float,float,float,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawLine(float,float,float,float,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawLines(float[],Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawLines(float[],int,int,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawOval(RectF,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawPaint(Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawPatch(Bitmap,byte[],RectF,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawPath(Path,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawPoint(float,float,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawPoints(float[],Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawPoints(float[],int,int,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawPosText(String,float[],Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawPosText(char[],int,int,float[],Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawRect(Rect,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawRect(RectF,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawRect(float,float,float,float,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawRoundRect(RectF,float,float,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawText(CharSequence,int,int,float,float,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawText(String,float,float,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawText(String,int,int,float,float,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawText(char[],int,int,float,float,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawTextOnPath(String,Path,float,float,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawTextOnPath(char[],int,int,Path,float,float,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawTextRun(CharSequence,int,int,int,int,float,float,int,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawTextRun(char[],int,int,int,int,float,float,int,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.drawVertices(VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,Paint)",1,1,1
"android.view.GLES20RecordingCanvas.recordShaderBitmap(Paint)",1,3,3
"android.view.GestureDetector.GestureDetector(Context,OnGestureListener)",1,1,1
"android.view.GestureDetector.GestureDetector(Context,OnGestureListener,Handler)",1,2,2
"android.view.GestureDetector.GestureDetector(Context,OnGestureListener,Handler,boolean)",1,2,3
"android.view.GestureDetector.GestureDetector(OnGestureListener)",1,1,1
"android.view.GestureDetector.GestureDetector(OnGestureListener,Handler)",1,1,1
"android.view.GestureDetector.GestureHandler.GestureHandler()",1,1,1
"android.view.GestureDetector.GestureHandler.GestureHandler(Handler)",1,1,1
"android.view.GestureDetector.GestureHandler.handleMessage(Message)",2,3,7
"android.view.GestureDetector.SimpleOnGestureListener.onDoubleTap(MotionEvent)",1,1,1
"android.view.GestureDetector.SimpleOnGestureListener.onDoubleTapEvent(MotionEvent)",1,1,1
"android.view.GestureDetector.SimpleOnGestureListener.onDown(MotionEvent)",1,1,1
"android.view.GestureDetector.SimpleOnGestureListener.onFling(MotionEvent,MotionEvent,float,float)",1,1,1
"android.view.GestureDetector.SimpleOnGestureListener.onLongPress(MotionEvent)",1,1,1
"android.view.GestureDetector.SimpleOnGestureListener.onScroll(MotionEvent,MotionEvent,float,float)",1,1,1
"android.view.GestureDetector.SimpleOnGestureListener.onShowPress(MotionEvent)",1,1,1
"android.view.GestureDetector.SimpleOnGestureListener.onSingleTapConfirmed(MotionEvent)",1,1,1
"android.view.GestureDetector.SimpleOnGestureListener.onSingleTapUp(MotionEvent)",1,1,1
"android.view.GestureDetector.cancel()",1,1,2
"android.view.GestureDetector.dispatchLongPress()",1,1,1
"android.view.GestureDetector.init(Context,boolean)",2,2,3
"android.view.GestureDetector.isConsideredDoubleTap(MotionEvent,MotionEvent,MotionEvent)",3,1,3
"android.view.GestureDetector.isLongpressEnabled()",1,1,1
"android.view.GestureDetector.onTouchEvent(MotionEvent)",2,27,35
"android.view.GestureDetector.setIsLongpressEnabled(boolean)",1,1,1
"android.view.GestureDetector.setOnDoubleTapListener(OnDoubleTapListener)",1,1,1
"android.view.Gravity.apply(int,int,int,Rect,Rect)",1,1,1
"android.view.Gravity.apply(int,int,int,Rect,int,int,Rect)",3,3,23
"android.view.Gravity.applyDisplay(int,Rect,Rect)",1,5,15
"android.view.Gravity.isHorizontal(int)",1,1,2
"android.view.Gravity.isVertical(int)",1,1,2
"android.view.HapticFeedbackConstants.HapticFeedbackConstants()",1,1,1
"android.view.HardwareCanvas.isHardwareAccelerated()",1,1,1
"android.view.HardwareCanvas.setBitmap(Bitmap)",1,1,1
"android.view.HardwareRenderer.Gl20Renderer.Gl20Renderer(boolean)",1,1,1
"android.view.HardwareRenderer.Gl20Renderer.canDraw()",1,2,2
"android.view.HardwareRenderer.Gl20Renderer.create(boolean)",2,1,2
"android.view.HardwareRenderer.Gl20Renderer.createCanvas()",1,1,1
"android.view.HardwareRenderer.Gl20Renderer.createDisplayList()",1,1,1
"android.view.HardwareRenderer.Gl20Renderer.destroy(boolean)",1,1,3
"android.view.HardwareRenderer.Gl20Renderer.onPostDraw()",1,1,1
"android.view.HardwareRenderer.Gl20Renderer.onPreDraw()",1,1,1
"android.view.HardwareRenderer.GlRenderer.ComponentSizeChooser.ComponentSizeChooser(int,int,int,int,int,int,int)",1,1,1
"android.view.HardwareRenderer.GlRenderer.ComponentSizeChooser.chooseConfig(EGL10,EGLDisplay,EGLConfig[])",4,3,8
"android.view.HardwareRenderer.GlRenderer.ComponentSizeChooser.findConfigAttrib(EGL10,EGLDisplay,EGLConfig,int,int)",2,1,2
"android.view.HardwareRenderer.GlRenderer.EglConfigChooser.EglConfigChooser(int,int[])",1,1,1
"android.view.HardwareRenderer.GlRenderer.EglConfigChooser.chooseConfig(EGL10,EGLDisplay)",5,3,5
"android.view.HardwareRenderer.GlRenderer.EglConfigChooser.filterConfigSpec(int[])",2,1,2
"android.view.HardwareRenderer.GlRenderer.GlRenderer(int,boolean)",1,1,1
"android.view.HardwareRenderer.GlRenderer.canDraw()",1,1,2
"android.view.HardwareRenderer.GlRenderer.checkCurrent()",3,4,4
"android.view.HardwareRenderer.GlRenderer.checkEglErrors()",1,3,3
"android.view.HardwareRenderer.GlRenderer.createContext(EGL10,EGLDisplay,EGLConfig)",1,1,2
"android.view.HardwareRenderer.GlRenderer.createEglSurface(SurfaceHolder)",8,5,11
"android.view.HardwareRenderer.GlRenderer.destroy(boolean)",2,2,5
"android.view.HardwareRenderer.GlRenderer.draw(View,AttachInfo,HardwareDrawCallbacks)",1,5,5
"android.view.HardwareRenderer.GlRenderer.fallback(boolean)",1,2,2
"android.view.HardwareRenderer.GlRenderer.getConfigChooser(int)",1,1,1
"android.view.HardwareRenderer.GlRenderer.getEGLErrorString(int)",17,2,17
"android.view.HardwareRenderer.GlRenderer.initialize(SurfaceHolder)",3,7,7
"android.view.HardwareRenderer.GlRenderer.initializeEgl()",4,3,4
"android.view.HardwareRenderer.GlRenderer.initializeIfNeeded(int,int,AttachInfo,SurfaceHolder)",1,2,2
"android.view.HardwareRenderer.GlRenderer.onPostDraw()",1,1,1
"android.view.HardwareRenderer.GlRenderer.onPreDraw()",1,1,1
"android.view.HardwareRenderer.GlRenderer.setup(int,int)",1,1,1
"android.view.HardwareRenderer.createGlRenderer(int,boolean)",2,2,2
"android.view.HardwareRenderer.disable()",1,1,1
"android.view.HardwareRenderer.initializeIfNeeded(int,int,AttachInfo,SurfaceHolder)",1,4,4
"android.view.HardwareRenderer.isAvailable()",1,1,1
"android.view.HardwareRenderer.isEnabled()",1,1,1
"android.view.HardwareRenderer.isRequested()",1,1,1
"android.view.HardwareRenderer.setEnabled(boolean)",1,1,1
"android.view.HardwareRenderer.setRequested(boolean)",1,1,1
"android.view.InflateException.InflateException()",1,1,1
"android.view.InflateException.InflateException(String)",1,1,1
"android.view.InflateException.InflateException(String,Throwable)",1,1,1
"android.view.InflateException.InflateException(Throwable)",1,1,1
"android.view.InputChannel.InputChannel()",1,1,1
"android.view.InputChannel.describeContents()",1,1,1
"android.view.InputChannel.dispose()",1,1,1
"android.view.InputChannel.finalize()",1,1,1
"android.view.InputChannel.getName()",1,1,2
"android.view.InputChannel.nativeDispose(boolean)",1,1,1
"android.view.InputChannel.nativeGetName()",1,1,1
"android.view.InputChannel.nativeOpenInputChannelPair(String)",1,1,1
"android.view.InputChannel.nativeReadFromParcel(Parcel)",1,1,1
"android.view.InputChannel.nativeTransferTo(InputChannel)",1,1,1
"android.view.InputChannel.nativeWriteToParcel(Parcel)",1,1,1
"android.view.InputChannel.openInputChannelPair(String)",2,2,3
"android.view.InputChannel.readFromParcel(Parcel)",2,1,2
"android.view.InputChannel.toString()",1,1,1
"android.view.InputChannel.transferToBinderOutParameter(InputChannel)",2,1,2
"android.view.InputChannel.writeToParcel(Parcel,int)",2,2,3
"android.view.InputDevice.InputDevice()",1,1,1
"android.view.InputDevice.MotionRange.MotionRange(float,float,float,float)",1,1,1
"android.view.InputDevice.MotionRange.getFlat()",1,1,1
"android.view.InputDevice.MotionRange.getFuzz()",1,1,1
"android.view.InputDevice.MotionRange.getMax()",1,1,1
"android.view.InputDevice.MotionRange.getMin()",1,1,1
"android.view.InputDevice.MotionRange.getRange()",1,1,1
"android.view.InputDevice.addMotionRange(int,float,float,float,float)",1,1,3
"android.view.InputDevice.appendRangeDescriptionIfApplicable(StringBuilder,int,String)",1,2,2
"android.view.InputDevice.appendSourceDescriptionIfApplicable(StringBuilder,int,String)",1,2,2
"android.view.InputDevice.describeContents()",1,1,1
"android.view.InputDevice.getDevice(int)",1,1,2
"android.view.InputDevice.getDeviceIds()",1,1,2
"android.view.InputDevice.getId()",1,1,1
"android.view.InputDevice.getKeyCharacterMap()",1,1,1
"android.view.InputDevice.getKeyboardType()",1,1,1
"android.view.InputDevice.getMotionRange(int)",2,1,3
"android.view.InputDevice.getName()",1,1,1
"android.view.InputDevice.getSources()",1,1,1
"android.view.InputDevice.readFromParcel(Parcel)",3,2,3
"android.view.InputDevice.toString()",2,2,4
"android.view.InputDevice.writeToParcel(Parcel,int)",1,3,3
"android.view.InputEvent.InputEvent()",1,1,1
"android.view.InputEvent.describeContents()",1,1,1
"android.view.InputEvent.getDevice()",1,1,1
"android.view.InputEvent.getDeviceId()",1,1,1
"android.view.InputEvent.getSource()",1,1,1
"android.view.InputEvent.readBaseFromParcel(Parcel)",1,1,1
"android.view.InputEvent.setSource(int)",1,1,1
"android.view.InputEvent.writeBaseToParcel(Parcel)",1,1,1
"android.view.InputQueue.FinishedCallback.FinishedCallback()",1,1,1
"android.view.InputQueue.FinishedCallback.finished(boolean)",2,3,4
"android.view.InputQueue.FinishedCallback.obtain(long)",1,1,2
"android.view.InputQueue.InputQueue(InputChannel)",1,1,1
"android.view.InputQueue.dispatchKeyEvent(InputHandler,KeyEvent,long)",1,1,1
"android.view.InputQueue.dispatchMotionEvent(InputHandler,MotionEvent,long)",1,1,1
"android.view.InputQueue.getInputChannel()",1,1,1
"android.view.InputQueue.nativeFinished(long,boolean)",1,1,1
"android.view.InputQueue.nativeRegisterInputChannel(InputChannel,InputHandler,MessageQueue)",1,1,1
"android.view.InputQueue.nativeUnregisterInputChannel(InputChannel)",1,1,1
"android.view.InputQueue.registerInputChannel(InputChannel,InputHandler,MessageQueue)",4,2,5
"android.view.InputQueue.unregisterInputChannel(InputChannel)",2,2,3
"android.view.KeyCharacterMap.KeyCharacterMap(int,int)",1,1,1
"android.view.KeyCharacterMap.KeyCharacterMapUnavailableException.KeyCharacterMapUnavailableException(String)",1,1,1
"android.view.KeyCharacterMap.deviceHasKey(int)",1,1,1
"android.view.KeyCharacterMap.deviceHasKeys(int[])",1,1,2
"android.view.KeyCharacterMap.finalize()",1,2,2
"android.view.KeyCharacterMap.get(int,int)",2,1,2
"android.view.KeyCharacterMap.getDeadChar(int,int)",1,1,1
"android.view.KeyCharacterMap.getDisplayLabel(int)",1,1,1
"android.view.KeyCharacterMap.getEvents(char[])",2,1,2
"android.view.KeyCharacterMap.getFallbackAction(int,int,FallbackAction)",2,1,2
"android.view.KeyCharacterMap.getKeyData(int,KeyData)",3,1,3
"android.view.KeyCharacterMap.getKeyboardType()",1,1,1
"android.view.KeyCharacterMap.getMatch(int,char[])",1,1,1
"android.view.KeyCharacterMap.getMatch(int,char[],int)",2,1,2
"android.view.KeyCharacterMap.getModifierBehavior()",3,2,3
"android.view.KeyCharacterMap.getNumber(int)",1,1,1
"android.view.KeyCharacterMap.isPrintingKey(int)",3,2,3
"android.view.KeyCharacterMap.load(int)",1,2,2
"android.view.KeyCharacterMap.nativeDispose(int)",1,1,1
"android.view.KeyCharacterMap.nativeGetCharacter(int,int,int)",1,1,1
"android.view.KeyCharacterMap.nativeGetDisplayLabel(int,int)",1,1,1
"android.view.KeyCharacterMap.nativeGetEvents(int,int,char[])",1,1,1
"android.view.KeyCharacterMap.nativeGetFallbackAction(int,int,int,FallbackAction)",1,1,1
"android.view.KeyCharacterMap.nativeGetKeyboardType(int)",1,1,1
"android.view.KeyCharacterMap.nativeGetMatch(int,int,char[],int)",1,1,1
"android.view.KeyCharacterMap.nativeGetNumber(int,int)",1,1,1
"android.view.KeyCharacterMap.nativeLoad(int)",1,1,1
"android.view.KeyEvent.DispatcherState.handleUpEvent(KeyEvent)",1,6,6
"android.view.KeyEvent.DispatcherState.isTracking(KeyEvent)",1,1,1
"android.view.KeyEvent.DispatcherState.performedLongPress(KeyEvent)",1,1,1
"android.view.KeyEvent.DispatcherState.reset()",1,2,2
"android.view.KeyEvent.DispatcherState.reset(Object)",1,3,3
"android.view.KeyEvent.DispatcherState.startTracking(KeyEvent,Object)",2,2,3
"android.view.KeyEvent.KeyEvent()",1,1,1
"android.view.KeyEvent.KeyEvent(KeyEvent)",1,1,1
"android.view.KeyEvent.KeyEvent(KeyEvent,int)",1,1,1
"android.view.KeyEvent.KeyEvent(KeyEvent,long,int)",1,1,1
"android.view.KeyEvent.KeyEvent(Parcel)",1,1,1
"android.view.KeyEvent.KeyEvent(int,int)",1,1,1
"android.view.KeyEvent.KeyEvent(long,String,int,int)",1,1,1
"android.view.KeyEvent.KeyEvent(long,long,int,int,int)",1,1,1
"android.view.KeyEvent.KeyEvent(long,long,int,int,int,int)",1,1,1
"android.view.KeyEvent.KeyEvent(long,long,int,int,int,int,int,int)",1,1,1
"android.view.KeyEvent.KeyEvent(long,long,int,int,int,int,int,int,int)",1,1,1
"android.view.KeyEvent.KeyEvent(long,long,int,int,int,int,int,int,int,int)",1,1,1
"android.view.KeyEvent.actionToString(int)",5,2,5
"android.view.KeyEvent.changeAction(KeyEvent,int)",1,1,1
"android.view.KeyEvent.changeFlags(KeyEvent,int)",1,1,1
"android.view.KeyEvent.changeTimeRepeat(KeyEvent,long,int)",1,1,1
"android.view.KeyEvent.changeTimeRepeat(KeyEvent,long,int,int)",1,1,1
"android.view.KeyEvent.createFromParcelBody(Parcel)",1,1,1
"android.view.KeyEvent.dispatch(Callback)",1,1,1
"android.view.KeyEvent.dispatch(Callback,DispatcherState,Object)",5,16,20
"android.view.KeyEvent.getAction()",1,1,1
"android.view.KeyEvent.getCharacters()",1,1,1
"android.view.KeyEvent.getDeadChar(int,int)",1,1,1
"android.view.KeyEvent.getDisplayLabel()",1,1,1
"android.view.KeyEvent.getDownTime()",1,1,1
"android.view.KeyEvent.getEventTime()",1,1,1
"android.view.KeyEvent.getFlags()",1,1,1
"android.view.KeyEvent.getKeyCharacterMap()",1,1,1
"android.view.KeyEvent.getKeyCode()",1,1,1
"android.view.KeyEvent.getKeyData(KeyData)",1,1,1
"android.view.KeyEvent.getKeyboardDevice()",1,1,1
"android.view.KeyEvent.getMatch(char[])",1,1,1
"android.view.KeyEvent.getMatch(char[],int)",1,1,1
"android.view.KeyEvent.getMaxKeyCode()",1,1,1
"android.view.KeyEvent.getMetaState()",1,1,1
"android.view.KeyEvent.getModifierMetaStateMask()",1,1,1
"android.view.KeyEvent.getNumber()",1,1,1
"android.view.KeyEvent.getRepeatCount()",1,1,1
"android.view.KeyEvent.getScanCode()",1,1,1
"android.view.KeyEvent.getUnicodeChar()",1,1,1
"android.view.KeyEvent.getUnicodeChar(int)",1,1,1
"android.view.KeyEvent.hasDefaultAction()",1,1,1
"android.view.KeyEvent.hasModifiers(int)",1,1,1
"android.view.KeyEvent.hasNoModifiers()",1,1,1
"android.view.KeyEvent.isAltPressed()",1,1,1
"android.view.KeyEvent.isCanceled()",1,1,1
"android.view.KeyEvent.isCapsLockOn()",1,1,1
"android.view.KeyEvent.isCtrlPressed()",1,1,1
"android.view.KeyEvent.isDown()",1,1,1
"android.view.KeyEvent.isFunctionPressed()",1,1,1
"android.view.KeyEvent.isLongPress()",1,1,1
"android.view.KeyEvent.isMetaPressed()",1,1,1
"android.view.KeyEvent.isModifierKey(int)",3,2,3
"android.view.KeyEvent.isNumLockOn()",1,1,1
"android.view.KeyEvent.isPrintingKey()",1,1,1
"android.view.KeyEvent.isScrollLockOn()",1,1,1
"android.view.KeyEvent.isShiftPressed()",1,1,1
"android.view.KeyEvent.isSymPressed()",1,1,1
"android.view.KeyEvent.isSystem()",1,1,1
"android.view.KeyEvent.isTracking()",1,1,1
"android.view.KeyEvent.keyCodeFromString(String)",4,2,5
"android.view.KeyEvent.keyCodeToString(int)",2,1,3
"android.view.KeyEvent.metaStateFilterDirectionalModifiers(int,int,int,int,int)",4,3,4
"android.view.KeyEvent.metaStateHasModifiers(int,int)",2,1,2
"android.view.KeyEvent.metaStateHasNoModifiers(int)",1,1,1
"android.view.KeyEvent.metaStateToString(int)",6,4,6
"android.view.KeyEvent.native_hasDefaultAction(int)",1,1,1
"android.view.KeyEvent.native_isSystemKey(int)",1,1,1
"android.view.KeyEvent.normalizeMetaState(int)",1,1,8
"android.view.KeyEvent.obtain()",2,1,2
"android.view.KeyEvent.obtain(long,long,int,int,int,int,int,int,int,int,String)",1,1,1
"android.view.KeyEvent.recycle()",2,2,3
"android.view.KeyEvent.startTracking()",1,1,1
"android.view.KeyEvent.toString()",1,1,1
"android.view.KeyEvent.writeToParcel(Parcel,int)",1,1,1
"android.view.LayoutInflater.FactoryMerger.FactoryMerger(Factory,Factory2,Factory,Factory2)",1,1,1
"android.view.LayoutInflater.FactoryMerger.onCreateView(String,Context,AttributeSet)",2,1,2
"android.view.LayoutInflater.FactoryMerger.onCreateView(View,String,Context,AttributeSet)",2,3,4
"android.view.LayoutInflater.LayoutInflater(Context)",1,1,1
"android.view.LayoutInflater.LayoutInflater(LayoutInflater,Context)",1,1,1
"android.view.LayoutInflater.createView(String,String,AttributeSet)",1,13,19
"android.view.LayoutInflater.createViewFromTag(View,String,AttributeSet)",1,10,11
"android.view.LayoutInflater.failNotAllowed(String,String,AttributeSet)",1,1,2
"android.view.LayoutInflater.from(Context)",2,1,2
"android.view.LayoutInflater.getContext()",1,1,1
"android.view.LayoutInflater.getFactory()",1,1,1
"android.view.LayoutInflater.getFactory2()",1,1,1
"android.view.LayoutInflater.getFilter()",1,1,1
"android.view.LayoutInflater.inflate(XmlPullParser,ViewGroup)",1,1,1
"android.view.LayoutInflater.inflate(XmlPullParser,ViewGroup,boolean)",4,13,19
"android.view.LayoutInflater.inflate(int,ViewGroup)",1,1,1
"android.view.LayoutInflater.inflate(int,ViewGroup,boolean)",1,2,2
"android.view.LayoutInflater.onCreateView(String,AttributeSet)",1,1,1
"android.view.LayoutInflater.onCreateView(View,String,AttributeSet)",1,1,1
"android.view.LayoutInflater.parseInclude(XmlPullParser,View,AttributeSet)",6,12,17
"android.view.LayoutInflater.parseRequestFocus(XmlPullParser,View)",1,3,4
"android.view.LayoutInflater.rInflate(XmlPullParser,View,AttributeSet,boolean)",7,8,10
"android.view.LayoutInflater.setFactory(Factory)",3,1,4
"android.view.LayoutInflater.setFactory2(Factory2)",3,1,4
"android.view.LayoutInflater.setFilter(Filter)",1,1,2
"android.view.MenuInflater.InflatedOnMenuItemClickListener.InflatedOnMenuItemClickListener(Context,String)",1,2,2
"android.view.MenuInflater.InflatedOnMenuItemClickListener.onMenuItemClick(MenuItem)",2,2,3
"android.view.MenuInflater.MenuInflater(Context)",1,1,1
"android.view.MenuInflater.MenuState.MenuState(Menu)",1,1,1
"android.view.MenuInflater.MenuState.addItem()",1,1,1
"android.view.MenuInflater.MenuState.addSubMenuItem()",1,1,1
"android.view.MenuInflater.MenuState.getShortcut(String)",2,2,2
"android.view.MenuInflater.MenuState.hasAddedItem()",1,1,1
"android.view.MenuInflater.MenuState.readGroup(AttributeSet)",1,1,1
"android.view.MenuInflater.MenuState.readItem(AttributeSet)",1,2,3
"android.view.MenuInflater.MenuState.resetGroup()",1,1,1
"android.view.MenuInflater.MenuState.setItem(MenuItem)",4,7,9
"android.view.MenuInflater.inflate(int,Menu)",1,2,4
"android.view.MenuInflater.parseMenu(XmlPullParser,AttributeSet,Menu)",6,14,18
"android.view.MotionEvent.MotionEvent(int,int)",1,1,1
"android.view.MotionEvent.actionToString(int)",8,3,8
"android.view.MotionEvent.addBatch(long,PointerCoords[],int)",1,1,1
"android.view.MotionEvent.addBatch(long,float,float,float,float,int)",1,1,1
"android.view.MotionEvent.createFromParcelBody(Parcel)",1,4,4
"android.view.MotionEvent.findPointerIndex(int)",3,1,3
"android.view.MotionEvent.getAction()",1,1,1
"android.view.MotionEvent.getActionIndex()",1,1,1
"android.view.MotionEvent.getActionMasked()",1,1,1
"android.view.MotionEvent.getDownTime()",1,1,1
"android.view.MotionEvent.getEdgeFlags()",1,1,1
"android.view.MotionEvent.getEventTime()",1,1,1
"android.view.MotionEvent.getEventTimeNano()",1,1,1
"android.view.MotionEvent.getFlags()",1,1,1
"android.view.MotionEvent.getHistoricalEventTime(int)",1,1,1
"android.view.MotionEvent.getHistoricalOrientation(int)",1,1,1
"android.view.MotionEvent.getHistoricalOrientation(int,int)",1,1,1
"android.view.MotionEvent.getHistoricalPointerCoords(int,int,PointerCoords)",1,1,1
"android.view.MotionEvent.getHistoricalPressure(int)",1,1,1
"android.view.MotionEvent.getHistoricalPressure(int,int)",1,1,1
"android.view.MotionEvent.getHistoricalSize(int)",1,1,1
"android.view.MotionEvent.getHistoricalSize(int,int)",1,1,1
"android.view.MotionEvent.getHistoricalToolMajor(int)",1,1,1
"android.view.MotionEvent.getHistoricalToolMajor(int,int)",1,1,1
"android.view.MotionEvent.getHistoricalToolMinor(int)",1,1,1
"android.view.MotionEvent.getHistoricalToolMinor(int,int)",1,1,1
"android.view.MotionEvent.getHistoricalTouchMajor(int)",1,1,1
"android.view.MotionEvent.getHistoricalTouchMajor(int,int)",1,1,1
"android.view.MotionEvent.getHistoricalTouchMinor(int)",1,1,1
"android.view.MotionEvent.getHistoricalTouchMinor(int,int)",1,1,1
"android.view.MotionEvent.getHistoricalX(int)",1,1,1
"android.view.MotionEvent.getHistoricalX(int,int)",1,1,1
"android.view.MotionEvent.getHistoricalY(int)",1,1,1
"android.view.MotionEvent.getHistoricalY(int,int)",1,1,1
"android.view.MotionEvent.getHistorySize()",1,1,1
"android.view.MotionEvent.getMetaState()",1,1,1
"android.view.MotionEvent.getOrientation()",1,1,1
"android.view.MotionEvent.getOrientation(int)",1,1,1
"android.view.MotionEvent.getPointerCoords(int,PointerCoords)",1,1,1
"android.view.MotionEvent.getPointerCoordsAtSampleIndex(int,PointerCoords)",1,1,1
"android.view.MotionEvent.getPointerCount()",1,1,1
"android.view.MotionEvent.getPointerId(int)",1,1,1
"android.view.MotionEvent.getPressure()",1,1,1
"android.view.MotionEvent.getPressure(int)",1,1,1
"android.view.MotionEvent.getRawX()",1,1,1
"android.view.MotionEvent.getRawY()",1,1,1
"android.view.MotionEvent.getSize()",1,1,1
"android.view.MotionEvent.getSize(int)",1,1,1
"android.view.MotionEvent.getToolMajor()",1,1,1
"android.view.MotionEvent.getToolMajor(int)",1,1,1
"android.view.MotionEvent.getToolMinor()",1,1,1
"android.view.MotionEvent.getToolMinor(int)",1,1,1
"android.view.MotionEvent.getTouchMajor()",1,1,1
"android.view.MotionEvent.getTouchMajor(int)",1,1,1
"android.view.MotionEvent.getTouchMinor()",1,1,1
"android.view.MotionEvent.getTouchMinor(int)",1,1,1
"android.view.MotionEvent.getX()",1,1,1
"android.view.MotionEvent.getX(int)",1,1,1
"android.view.MotionEvent.getXPrecision()",1,1,1
"android.view.MotionEvent.getY()",1,1,1
"android.view.MotionEvent.getY(int)",1,1,1
"android.view.MotionEvent.getYPrecision()",1,1,1
"android.view.MotionEvent.incrementNumSamplesAndReserveStorage(int)",1,3,3
"android.view.MotionEvent.nativeTransform(Matrix)",1,1,1
"android.view.MotionEvent.obtain(MotionEvent)",1,1,1
"android.view.MotionEvent.obtain(int,int)",2,1,7
"android.view.MotionEvent.obtain(long,long,int,float,float,float,float,int,float,float,int,int)",1,1,1
"android.view.MotionEvent.obtain(long,long,int,float,float,int)",1,1,1
"android.view.MotionEvent.obtain(long,long,int,int,float,float,float,float,int,float,float,int,int)",1,1,1
"android.view.MotionEvent.obtain(long,long,int,int,int[],PointerCoords[],int,float,float,int,int,int,int)",1,1,1
"android.view.MotionEvent.obtainNoHistory(MotionEvent)",1,1,1
"android.view.MotionEvent.offsetLocation(float,float)",1,1,1
"android.view.MotionEvent.recycle()",4,4,5
"android.view.MotionEvent.scale(float)",1,1,2
"android.view.MotionEvent.setAction(int)",1,1,1
"android.view.MotionEvent.setEdgeFlags(int)",1,1,1
"android.view.MotionEvent.setLocation(float,float)",1,1,1
"android.view.MotionEvent.setPointerCoordsAtSampleIndex(int,PointerCoords)",1,1,1
"android.view.MotionEvent.setPointerCoordsAtSampleIndex(int,PointerCoords[])",1,2,2
"android.view.MotionEvent.setPointerCoordsAtSampleIndex(int,float,float,float,float)",1,1,1
"android.view.MotionEvent.toString()",1,1,1
"android.view.MotionEvent.transform(Matrix)",2,1,2
"android.view.MotionEvent.writeToParcel(Parcel,int)",1,4,4
"android.view.OrientationEventListener.OrientationEventListener(Context)",1,1,1
"android.view.OrientationEventListener.OrientationEventListener(Context,int)",1,1,2
"android.view.OrientationEventListener.SensorEventListenerImpl.onAccuracyChanged(Sensor,int)",1,1,1
"android.view.OrientationEventListener.SensorEventListenerImpl.onSensorChanged(SensorEvent)",1,4,6
"android.view.OrientationEventListener.canDetectOrientation()",1,1,1
"android.view.OrientationEventListener.disable()",2,4,4
"android.view.OrientationEventListener.enable()",2,4,4
"android.view.OrientationEventListener.registerListener(OrientationListener)",1,1,1
"android.view.OrientationListener.OrientationEventListenerInternal.OrientationEventListenerInternal(Context)",1,1,1
"android.view.OrientationListener.OrientationEventListenerInternal.OrientationEventListenerInternal(Context,int)",1,1,1
"android.view.OrientationListener.OrientationEventListenerInternal.onOrientationChanged(int)",1,1,1
"android.view.OrientationListener.OrientationListener(Context)",1,1,1
"android.view.OrientationListener.OrientationListener(Context,int)",1,1,1
"android.view.OrientationListener.disable()",1,1,1
"android.view.OrientationListener.enable()",1,1,1
"android.view.OrientationListener.onAccuracyChanged(int,int)",1,1,1
"android.view.OrientationListener.onSensorChanged(int,float[])",1,1,1
"android.view.ScaleGestureDetector.ScaleGestureDetector(Context,OnScaleGestureListener)",1,1,1
"android.view.ScaleGestureDetector.SimpleOnScaleGestureListener.onScale(ScaleGestureDetector)",1,1,1
"android.view.ScaleGestureDetector.SimpleOnScaleGestureListener.onScaleBegin(ScaleGestureDetector)",1,1,1
"android.view.ScaleGestureDetector.SimpleOnScaleGestureListener.onScaleEnd(ScaleGestureDetector)",1,1,1
"android.view.ScaleGestureDetector.getCurrentSpan()",1,2,2
"android.view.ScaleGestureDetector.getCurrentSpanX()",1,1,1
"android.view.ScaleGestureDetector.getCurrentSpanY()",1,1,1
"android.view.ScaleGestureDetector.getEventTime()",1,1,1
"android.view.ScaleGestureDetector.getFocusX()",1,1,1
"android.view.ScaleGestureDetector.getFocusY()",1,1,1
"android.view.ScaleGestureDetector.getPreviousSpan()",1,2,2
"android.view.ScaleGestureDetector.getPreviousSpanX()",1,1,1
"android.view.ScaleGestureDetector.getPreviousSpanY()",1,1,1
"android.view.ScaleGestureDetector.getRawX(MotionEvent,int)",1,1,1
"android.view.ScaleGestureDetector.getRawY(MotionEvent,int)",1,1,1
"android.view.ScaleGestureDetector.getScaleFactor()",1,2,2
"android.view.ScaleGestureDetector.getTimeDelta()",1,1,1
"android.view.ScaleGestureDetector.isInProgress()",1,1,1
"android.view.ScaleGestureDetector.onTouchEvent(MotionEvent)",3,16,36
"android.view.ScaleGestureDetector.reset()",1,3,3
"android.view.ScaleGestureDetector.setContext(MotionEvent)",1,2,2
"android.view.SoundEffectConstants.SoundEffectConstants()",1,1,1
"android.view.SoundEffectConstants.getContantForFocusDirection(int)",5,2,5
"android.view.Surface.CompatibleCanvas.getHeight()",1,2,2
"android.view.Surface.CompatibleCanvas.getMatrix(Matrix)",1,1,2
"android.view.Surface.CompatibleCanvas.getWidth()",1,2,2
"android.view.Surface.CompatibleCanvas.setMatrix(Matrix)",1,4,4
"android.view.Surface.OutOfResourcesException.OutOfResourcesException()",1,1,1
"android.view.Surface.OutOfResourcesException.OutOfResourcesException(String)",1,1,1
"android.view.Surface.Surface()",1,1,2
"android.view.Surface.Surface(Parcel)",1,1,1
"android.view.Surface.Surface(SurfaceSession,int,String,int,int,int,int,int)",1,1,2
"android.view.Surface.Surface(SurfaceSession,int,int,int,int,int,int)",1,1,2
"android.view.Surface.closeTransaction()",1,1,1
"android.view.Surface.copyFrom(Surface)",1,1,1
"android.view.Surface.describeContents()",1,1,1
"android.view.Surface.destroy()",1,1,1
"android.view.Surface.finalize()",1,3,4
"android.view.Surface.freeze()",1,1,1
"android.view.Surface.freezeDisplay(int)",1,1,1
"android.view.Surface.getIdentity()",1,1,1
"android.view.Surface.hide()",1,1,1
"android.view.Surface.init(Parcel)",1,1,1
"android.view.Surface.init(SurfaceSession,int,String,int,int,int,int,int)",1,1,1
"android.view.Surface.isValid()",1,1,1
"android.view.Surface.lockCanvas(Rect)",1,1,1
"android.view.Surface.lockCanvasNative(Rect)",1,1,1
"android.view.Surface.nativeClassInit()",1,1,1
"android.view.Surface.openTransaction()",1,1,1
"android.view.Surface.readFromParcel(Parcel)",1,1,1
"android.view.Surface.release()",1,1,1
"android.view.Surface.screenshot(int,int)",1,1,1
"android.view.Surface.screenshot(int,int,int,int)",1,1,1
"android.view.Surface.setAlpha(float)",1,1,1
"android.view.Surface.setCompatibleDisplayMetrics(DisplayMetrics,Translator)",1,2,2
"android.view.Surface.setFlags(int,int)",1,1,1
"android.view.Surface.setFreezeTint(int)",1,1,1
"android.view.Surface.setLayer(int)",1,1,1
"android.view.Surface.setMatrix(float,float,float,float)",1,1,1
"android.view.Surface.setOrientation(int,int)",1,1,1
"android.view.Surface.setOrientation(int,int,int)",1,1,1
"android.view.Surface.setPosition(int,int)",1,1,1
"android.view.Surface.setSize(int,int)",1,1,1
"android.view.Surface.setTransparentRegionHint(Region)",1,1,1
"android.view.Surface.show()",1,1,1
"android.view.Surface.toString()",1,1,1
"android.view.Surface.unfreeze()",1,1,1
"android.view.Surface.unfreezeDisplay(int)",1,1,1
"android.view.Surface.unlockCanvas(Canvas)",1,1,1
"android.view.Surface.unlockCanvasAndPost(Canvas)",1,1,1
"android.view.Surface.writeToParcel(Parcel,int)",1,1,1
"android.view.SurfaceHolder.BadSurfaceTypeException.BadSurfaceTypeException()",1,1,1
"android.view.SurfaceHolder.BadSurfaceTypeException.BadSurfaceTypeException(String)",1,1,1
"android.view.SurfaceSession.SurfaceSession()",1,1,1
"android.view.SurfaceSession.destroy()",1,1,1
"android.view.SurfaceSession.finalize()",1,1,1
"android.view.SurfaceSession.init()",1,1,1
"android.view.SurfaceSession.kill()",1,1,1
"android.view.SurfaceView.MyWindow.MyWindow(SurfaceView)",1,1,1
"android.view.SurfaceView.MyWindow.dispatchAppVisibility(boolean)",1,1,1
"android.view.SurfaceView.MyWindow.dispatchGetNewSurface()",1,2,2
"android.view.SurfaceView.MyWindow.executeCommand(String,String,ParcelFileDescriptor)",1,1,1
"android.view.SurfaceView.MyWindow.resized(int,int,Rect,Rect,boolean,Configuration)",1,6,6
"android.view.SurfaceView.MyWindow.windowFocusChanged(boolean,boolean)",1,1,1
"android.view.SurfaceView.SurfaceView(Context)",1,1,1
"android.view.SurfaceView.SurfaceView(Context,AttributeSet)",1,1,1
"android.view.SurfaceView.SurfaceView(Context,AttributeSet,int)",1,1,1
"android.view.SurfaceView.dispatchDraw(Canvas)",1,3,3
"android.view.SurfaceView.draw(Canvas)",1,3,3
"android.view.SurfaceView.gatherTransparentRegion(Region)",2,5,7
"android.view.SurfaceView.getHolder()",1,1,1
"android.view.SurfaceView.handleGetNewSurface()",1,1,1
"android.view.SurfaceView.hideSurface()",1,2,4
"android.view.SurfaceView.init()",1,1,1
"android.view.SurfaceView.isFixedSize()",1,1,2
"android.view.SurfaceView.onAttachedToWindow()",1,1,1
"android.view.SurfaceView.onDetachedFromWindow()",1,2,3
"android.view.SurfaceView.onMeasure(int,int)",1,3,3
"android.view.SurfaceView.onWindowVisibilityChanged(int)",1,1,2
"android.view.SurfaceView.reportSurfaceDestroyed()",1,3,3
"android.view.SurfaceView.setFrame(int,int,int,int)",1,1,1
"android.view.SurfaceView.setVisibility(int)",1,1,2
"android.view.SurfaceView.setWindowType(int)",1,1,1
"android.view.SurfaceView.setZOrderMediaOverlay(boolean)",1,1,2
"android.view.SurfaceView.setZOrderOnTop(boolean)",1,1,2
"android.view.SurfaceView.showSurface()",1,2,2
"android.view.SurfaceView.updateWindow(boolean,boolean)",2,22,47
"android.view.TouchDelegate.TouchDelegate(Rect,View)",1,1,1
"android.view.TouchDelegate.onTouchEvent(MotionEvent)",2,5,9
"android.view.VelocityTracker.VelocityTracker()",1,1,1
"android.view.VelocityTracker.addMovement(MotionEvent)",6,6,16
"android.view.VelocityTracker.clear()",1,1,1
"android.view.VelocityTracker.computeCurrentVelocity(int)",1,1,1
"android.view.VelocityTracker.computeCurrentVelocity(int,float)",6,3,14
"android.view.VelocityTracker.getNextPoolable()",1,1,1
"android.view.VelocityTracker.getPointer(int)",3,1,3
"android.view.VelocityTracker.getXVelocity()",1,1,2
"android.view.VelocityTracker.getXVelocity(int)",1,1,2
"android.view.VelocityTracker.getYVelocity()",1,1,2
"android.view.VelocityTracker.getYVelocity(int)",1,1,2
"android.view.VelocityTracker.obtain()",1,1,1
"android.view.VelocityTracker.obtainPointer()",2,1,2
"android.view.VelocityTracker.recycle()",1,1,1
"android.view.VelocityTracker.releasePointer(Pointer)",1,1,2
"android.view.VelocityTracker.releasePointerList(Pointer)",6,1,6
"android.view.VelocityTracker.setNextPoolable(VelocityTracker)",1,1,1
"android.view.View.AttachInfo.AttachInfo(IWindowSession,IWindow,Handler,Callbacks)",1,1,1
"android.view.View.AttachInfo.InvalidateInfo.acquire()",1,1,1
"android.view.View.AttachInfo.InvalidateInfo.getNextPoolable()",1,1,1
"android.view.View.AttachInfo.InvalidateInfo.release()",1,1,1
"android.view.View.AttachInfo.InvalidateInfo.setNextPoolable(InvalidateInfo)",1,1,1
"android.view.View.BaseSavedState.BaseSavedState(Parcel)",1,1,1
"android.view.View.BaseSavedState.BaseSavedState(Parcelable)",1,1,1
"android.view.View.CheckForLongPress.rememberWindowAttachCount()",1,1,1
"android.view.View.CheckForLongPress.run()",1,4,5
"android.view.View.CheckForTap.run()",1,2,2
"android.view.View.DragThumbnailBuilder.DragThumbnailBuilder(View)",1,1,1
"android.view.View.DragThumbnailBuilder.getView()",1,1,1
"android.view.View.DragThumbnailBuilder.onDrawThumbnail(Canvas)",1,2,2
"android.view.View.DragThumbnailBuilder.onProvideThumbnailMetrics(Point,Point)",1,2,2
"android.view.View.MeasureSpec.getMode(int)",1,1,1
"android.view.View.MeasureSpec.getSize(int)",1,1,1
"android.view.View.MeasureSpec.makeMeasureSpec(int,int)",1,1,1
"android.view.View.MeasureSpec.toString(int)",1,4,4
"android.view.View.PerformClick.run()",1,1,1
"android.view.View.ScrollabilityCache.ScrollabilityCache(ViewConfiguration,View)",1,1,1
"android.view.View.ScrollabilityCache.run()",1,2,2
"android.view.View.ScrollabilityCache.setFadeColor(int)",1,2,3
"android.view.View.UnsetPressedState.run()",1,1,1
"android.view.View.View()",1,1,1
"android.view.View.View(Context)",1,2,2
"android.view.View.View(Context,AttributeSet)",1,1,1
"android.view.View.View(Context,AttributeSet,int)",5,16,87
"android.view.View.addFocusables(ArrayList<View>,int)",1,1,1
"android.view.View.addFocusables(ArrayList<View>,int,int)",3,4,6
"android.view.View.addOnLayoutChangeListener(OnLayoutChangeListener)",1,1,2
"android.view.View.addTouchables(ArrayList<View>)",1,2,4
"android.view.View.applyDrawableToTransparentRegion(Drawable,Region)",1,7,8
"android.view.View.assignParent(ViewParent)",3,1,3
"android.view.View.awakenScrollBars()",1,2,2
"android.view.View.awakenScrollBars(int)",1,1,1
"android.view.View.awakenScrollBars(int,boolean)",3,6,9
"android.view.View.bringToFront()",1,2,2
"android.view.View.buildDrawingCache()",1,1,1
"android.view.View.buildDrawingCache(boolean)",5,18,41
"android.view.View.cancelLongPress()",1,1,1
"android.view.View.captureViewInfo(String,View)",2,2,3
"android.view.View.checkInputConnectionProxy(View)",1,1,1
"android.view.View.clearAnimation()",1,2,2
"android.view.View.clearFocus()",1,4,4
"android.view.View.clearFocusForRemoval()",1,2,2
"android.view.View.combineMeasuredStates(int,int)",1,1,1
"android.view.View.computeHorizontalScrollExtent()",1,1,1
"android.view.View.computeHorizontalScrollOffset()",1,1,1
"android.view.View.computeHorizontalScrollRange()",1,1,1
"android.view.View.computeOpaqueFlags()",1,2,6
"android.view.View.computeScroll()",1,1,1
"android.view.View.computeVerticalScrollExtent()",1,1,1
"android.view.View.computeVerticalScrollOffset()",1,1,1
"android.view.View.computeVerticalScrollRange()",1,1,1
"android.view.View.createContextMenu(ContextMenu)",1,3,3
"android.view.View.createSnapshot(Config,int,boolean)",2,4,10
"android.view.View.debug()",1,1,1
"android.view.View.debug(int)",1,4,9
"android.view.View.debugIndent(int)",1,2,2
"android.view.View.destroyDrawingCache()",1,3,4
"android.view.View.dispatchAttachedToWindow(AttachInfo,int)",1,5,5
"android.view.View.dispatchCollectViewAttributes(int)",1,1,1
"android.view.View.dispatchConfigurationChanged(Configuration)",1,1,1
"android.view.View.dispatchConsistencyCheck(int)",1,1,1
"android.view.View.dispatchDetachedFromWindow()",1,4,4
"android.view.View.dispatchDisplayHint(int)",1,1,1
"android.view.View.dispatchDragEvent(DragEvent)",2,3,4
"android.view.View.dispatchDraw(Canvas)",1,1,1
"android.view.View.dispatchFinishTemporaryDetach()",1,1,1
"android.view.View.dispatchKeyEvent(KeyEvent)",2,4,6
"android.view.View.dispatchKeyEventPreIme(KeyEvent)",1,1,1
"android.view.View.dispatchKeyShortcutEvent(KeyEvent)",1,1,1
"android.view.View.dispatchPopulateAccessibilityEvent(AccessibilityEvent)",1,1,1
"android.view.View.dispatchRestoreInstanceState(SparseArray<Parcelable>)",4,3,4
"android.view.View.dispatchSaveInstanceState(SparseArray<Parcelable>)",3,3,5
"android.view.View.dispatchSetActivated(boolean)",1,1,1
"android.view.View.dispatchSetPressed(boolean)",1,1,1
"android.view.View.dispatchSetSelected(boolean)",1,1,1
"android.view.View.dispatchStartTemporaryDetach()",1,1,1
"android.view.View.dispatchTouchEvent(MotionEvent)",3,3,5
"android.view.View.dispatchTrackballEvent(MotionEvent)",1,1,1
"android.view.View.dispatchUnhandledMove(View,int)",1,1,1
"android.view.View.dispatchVisibilityChanged(View,int)",1,1,1
"android.view.View.dispatchWindowFocusChanged(boolean)",1,1,1
"android.view.View.dispatchWindowVisibilityChanged(int)",1,1,1
"android.view.View.draw(Canvas)",2,22,29
"android.view.View.drawableStateChanged()",1,3,3
"android.view.View.findFocus()",1,1,2
"android.view.View.findUserSetNextFocus(View,int)",12,2,12
"android.view.View.findViewById(int)",2,1,2
"android.view.View.findViewByPredicate(Predicate<View>)",1,1,1
"android.view.View.findViewByPredicateTraversal(Predicate<View>)",2,1,2
"android.view.View.findViewShouldExist(View,int)",1,2,2
"android.view.View.findViewTraversal(int)",2,1,2
"android.view.View.findViewWithTag(Object)",2,1,2
"android.view.View.findViewWithTagTraversal(Object)",2,2,3
"android.view.View.fitSystemWindows(Rect)",2,2,2
"android.view.View.focusSearch(int)",2,2,2
"android.view.View.forceLayout()",1,1,1
"android.view.View.gatherTransparentRegion(Region)",1,4,6
"android.view.View.getAlpha()",1,1,1
"android.view.View.getAnimation()",1,1,1
"android.view.View.getApplicationWindowToken()",2,1,3
"android.view.View.getBackground()",1,1,1
"android.view.View.getBaseline()",1,1,1
"android.view.View.getBottom()",1,1,1
"android.view.View.getBottomFadingEdgeStrength()",1,1,2
"android.view.View.getBottomPaddingOffset()",1,1,1
"android.view.View.getContentDescription()",1,1,1
"android.view.View.getContext()",1,1,1
"android.view.View.getContextMenuInfo()",1,1,1
"android.view.View.getDefaultSize(int,int)",2,2,3
"android.view.View.getDisplayList()",3,3,8
"android.view.View.getDrawableState()",2,2,3
"android.view.View.getDrawingCache()",1,1,1
"android.view.View.getDrawingCache(boolean)",2,2,4
"android.view.View.getDrawingCacheBackgroundColor()",1,1,1
"android.view.View.getDrawingCacheQuality()",1,1,1
"android.view.View.getDrawingRect(Rect)",1,1,1
"android.view.View.getDrawingTime()",1,1,2
"android.view.View.getFilterTouchesWhenObscured()",1,1,1
"android.view.View.getFocusables(int)",1,1,1
"android.view.View.getFocusedRect(Rect)",1,1,1
"android.view.View.getGlobalVisibleRect(Rect)",1,1,1
"android.view.View.getGlobalVisibleRect(Rect,Point)",2,4,5
"android.view.View.getHandler()",2,1,2
"android.view.View.getHeight()",1,1,1
"android.view.View.getHitRect(Rect)",1,2,3
"android.view.View.getHorizontalFadingEdgeLength()",3,1,3
"android.view.View.getHorizontalScrollbarHeight()",3,3,4
"android.view.View.getId()",1,1,1
"android.view.View.getInverseMatrix()",1,2,3
"android.view.View.getKeepScreenOn()",1,1,1
"android.view.View.getKeyDispatcherState()",1,1,2
"android.view.View.getLayoutParams()",1,1,1
"android.view.View.getLeft()",1,1,1
"android.view.View.getLeftFadingEdgeStrength()",1,1,2
"android.view.View.getLeftPaddingOffset()",1,1,1
"android.view.View.getLocalVisibleRect(Rect)",2,2,2
"android.view.View.getLocationInWindow(int[])",2,1,5
"android.view.View.getLocationOnScreen(int[])",1,1,2
"android.view.View.getMatrix()",1,1,1
"android.view.View.getMeasuredHeight()",1,1,1
"android.view.View.getMeasuredHeightAndState()",1,1,1
"android.view.View.getMeasuredState()",1,1,1
"android.view.View.getMeasuredWidth()",1,1,1
"android.view.View.getMeasuredWidthAndState()",1,1,1
"android.view.View.getNextFocusDownId()",1,1,1
"android.view.View.getNextFocusForwardId()",1,1,1
"android.view.View.getNextFocusLeftId()",1,1,1
"android.view.View.getNextFocusRightId()",1,1,1
"android.view.View.getNextFocusUpId()",1,1,1
"android.view.View.getOnFocusChangeListener()",1,1,1
"android.view.View.getOnLayoutChangeListeners()",1,1,1
"android.view.View.getOverScrollMode()",1,1,1
"android.view.View.getPaddingBottom()",1,1,1
"android.view.View.getPaddingLeft()",1,1,1
"android.view.View.getPaddingRight()",1,1,1
"android.view.View.getPaddingTop()",1,1,1
"android.view.View.getParent()",1,1,1
"android.view.View.getPivotX()",1,1,1
"android.view.View.getPivotY()",1,1,1
"android.view.View.getResources()",1,1,1
"android.view.View.getRight()",1,1,1
"android.view.View.getRightFadingEdgeStrength()",1,1,2
"android.view.View.getRightPaddingOffset()",1,1,1
"android.view.View.getRootView()",3,1,5
"android.view.View.getRotation()",1,1,1
"android.view.View.getRotationX()",1,1,1
"android.view.View.getRotationY()",1,1,1
"android.view.View.getScaleX()",1,1,1
"android.view.View.getScaleY()",1,1,1
"android.view.View.getScrollBarStyle()",1,1,1
"android.view.View.getScrollX()",1,1,1
"android.view.View.getScrollY()",1,1,1
"android.view.View.getSolidColor()",1,1,1
"android.view.View.getSuggestedMinimumHeight()",1,2,3
"android.view.View.getSuggestedMinimumWidth()",1,2,3
"android.view.View.getTag()",1,1,1
"android.view.View.getTag(int)",2,3,3
"android.view.View.getTop()",1,1,1
"android.view.View.getTopFadingEdgeStrength()",1,1,2
"android.view.View.getTopPaddingOffset()",1,1,1
"android.view.View.getTouchDelegate()",1,1,1
"android.view.View.getTouchables()",1,1,1
"android.view.View.getTranslationX()",1,1,1
"android.view.View.getTranslationY()",1,1,1
"android.view.View.getVerticalFadingEdgeLength()",3,1,3
"android.view.View.getVerticalScrollbarPosition()",1,1,1
"android.view.View.getVerticalScrollbarWidth()",3,3,4
"android.view.View.getViewRoot()",1,2,2
"android.view.View.getViewTreeObserver()",2,1,3
"android.view.View.getVisibility()",1,1,1
"android.view.View.getWidth()",1,1,1
"android.view.View.getWindowAttachCount()",1,1,1
"android.view.View.getWindowSession()",1,1,2
"android.view.View.getWindowToken()",1,1,2
"android.view.View.getWindowVisibility()",1,1,2
"android.view.View.getWindowVisibleDisplayFrame(Rect)",2,2,3
"android.view.View.getX()",1,1,1
"android.view.View.getY()",1,1,1
"android.view.View.handleFocusGainInternal(int,Rect)",1,4,4
"android.view.View.hasAncestorThatBlocksDescendantFocus()",3,3,3
"android.view.View.hasFocus()",1,1,1
"android.view.View.hasFocusable()",1,2,2
"android.view.View.hasIdentityMatrix()",1,1,1
"android.view.View.hasOpaqueScrollbars()",1,1,1
"android.view.View.hasWindowFocus()",1,1,2
"android.view.View.inflate(Context,int,ViewGroup)",1,1,1
"android.view.View.initScrollCache()",1,2,2
"android.view.View.initialAwakenScrollBars()",1,2,2
"android.view.View.initializeFadingEdge(TypedArray)",1,1,1
"android.view.View.initializeScrollbars(TypedArray)",1,5,7
"android.view.View.invalidate()",1,1,1
"android.view.View.invalidate(Rect)",3,5,9
"android.view.View.invalidate(boolean)",3,5,11
"android.view.View.invalidate(int,int,int,int)",3,5,11
"android.view.View.invalidateDrawable(Drawable)",1,2,2
"android.view.View.isActivated()",1,1,1
"android.view.View.isClickable()",1,1,1
"android.view.View.isDrawingCacheEnabled()",1,1,1
"android.view.View.isDuplicateParentStateEnabled()",1,1,1
"android.view.View.isEnabled()",1,1,1
"android.view.View.isFitsSystemWindowsFlagSet()",1,1,1
"android.view.View.isFocusable()",1,1,1
"android.view.View.isFocusableInTouchMode()",1,1,1
"android.view.View.isFocused()",1,1,1
"android.view.View.isHapticFeedbackEnabled()",1,1,1
"android.view.View.isHardwareAccelerated()",1,1,2
"android.view.View.isHorizontalFadingEdgeEnabled()",1,1,1
"android.view.View.isHorizontalScrollBarEnabled()",1,1,1
"android.view.View.isInEditMode()",1,1,1
"android.view.View.isInTouchMode()",2,2,2
"android.view.View.isLayoutRequested()",1,1,1
"android.view.View.isLongClickable()",1,1,1
"android.view.View.isOpaque()",1,1,2
"android.view.View.isPaddingOffsetRequired()",1,1,1
"android.view.View.isPressed()",1,1,1
"android.view.View.isRootNamespace()",1,1,1
"android.view.View.isSaveEnabled()",1,1,1
"android.view.View.isSaveFromParentEnabled()",1,1,1
"android.view.View.isScrollbarFadingEnabled()",1,1,2
"android.view.View.isSelected()",1,1,1
"android.view.View.isShown()",5,1,5
"android.view.View.isSoundEffectsEnabled()",1,1,1
"android.view.View.isVerticalFadingEdgeEnabled()",1,1,1
"android.view.View.isVerticalScrollBarEnabled()",1,1,1
"android.view.View.isVerticalScrollBarHidden()",1,1,1
"android.view.View.jumpDrawablesToCurrentState()",1,2,2
"android.view.View.layout(int,int,int,int)",1,5,6
"android.view.View.measure(int,int)",3,3,6
"android.view.View.mergeDrawableStates(int[],int[])",1,1,3
"android.view.View.needGlobalAttributesUpdate(boolean)",1,1,4
"android.view.View.nonzero(float)",1,1,2
"android.view.View.offsetLeftAndRight(int)",1,5,7
"android.view.View.offsetTopAndBottom(int)",1,5,7
"android.view.View.onAnimationEnd()",1,1,1
"android.view.View.onAnimationStart()",1,1,1
"android.view.View.onAttachedToWindow()",1,3,3
"android.view.View.onCheckIsTextEditor()",1,1,1
"android.view.View.onCloseSystemDialogs(String)",1,1,1
"android.view.View.onConfigurationChanged(Configuration)",1,1,1
"android.view.View.onConsistencyCheck(int)",1,6,7
"android.view.View.onCreateContextMenu(ContextMenu)",1,1,1
"android.view.View.onCreateDrawableState(int)",3,4,14
"android.view.View.onCreateInputConnection(EditorInfo)",1,1,1
"android.view.View.onDetachedFromWindow()",1,1,1
"android.view.View.onDisplayHint(int)",1,1,1
"android.view.View.onDragEvent(DragEvent)",1,1,1
"android.view.View.onDraw(Canvas)",1,1,1
"android.view.View.onDrawHorizontalScrollBar(Canvas,Drawable,int,int,int,int)",1,1,1
"android.view.View.onDrawScrollBars(Canvas)",4,12,18
"android.view.View.onDrawVerticalScrollBar(Canvas,Drawable,int,int,int,int)",1,1,1
"android.view.View.onFilterTouchEventForSecurity(MotionEvent)",2,2,3
"android.view.View.onFinishInflate()",1,1,1
"android.view.View.onFinishTemporaryDetach()",1,1,1
"android.view.View.onFocusChanged(boolean,int,Rect)",1,8,12
"android.view.View.onFocusLost()",1,1,1
"android.view.View.onKeyDown(int,KeyEvent)",4,5,7
"android.view.View.onKeyLongPress(int,KeyEvent)",1,1,1
"android.view.View.onKeyMultiple(int,int,KeyEvent)",1,1,1
"android.view.View.onKeyPreIme(int,KeyEvent)",1,1,1
"android.view.View.onKeyShortcut(int,KeyEvent)",1,1,1
"android.view.View.onKeyUp(int,KeyEvent)",3,5,6
"android.view.View.onLayout(boolean,int,int,int,int)",1,1,1
"android.view.View.onMeasure(int,int)",1,1,1
"android.view.View.onOverScrolled(int,int,boolean,boolean)",1,1,1
"android.view.View.onRestoreInstanceState(Parcelable)",2,2,3
"android.view.View.onSaveInstanceState()",1,1,1
"android.view.View.onScrollChanged(int,int,int,int)",1,1,2
"android.view.View.onSetAlpha(int)",1,1,1
"android.view.View.onSizeChanged(int,int,int,int)",1,1,1
"android.view.View.onStartTemporaryDetach()",1,1,1
"android.view.View.onTouchEvent(MotionEvent)",6,15,26
"android.view.View.onTrackballEvent(MotionEvent)",1,1,1
"android.view.View.onVisibilityChanged(View,int)",1,3,3
"android.view.View.onWindowFocusChanged(boolean)",1,5,7
"android.view.View.onWindowVisibilityChanged(int)",1,2,2
"android.view.View.overScrollBy(int,int,int,int,int,int,int,int,boolean)",1,1,12
"android.view.View.performClick()",2,2,2
"android.view.View.performCollectViewAttributes(int)",1,1,2
"android.view.View.performHapticFeedback(int)",1,1,1
"android.view.View.performHapticFeedback(int,int)",3,2,4
"android.view.View.performLongClick()",1,4,4
"android.view.View.playSoundEffect(int)",2,3,4
"android.view.View.pointInView(float,float)",1,1,4
"android.view.View.pointInView(float,float,float)",1,1,4
"android.view.View.post(Runnable)",2,2,2
"android.view.View.postCheckForLongClick(int)",1,1,2
"android.view.View.postDelayed(Runnable,long)",2,2,2
"android.view.View.postInvalidate()",1,1,1
"android.view.View.postInvalidate(int,int,int,int)",1,1,1
"android.view.View.postInvalidateDelayed(long)",1,2,2
"android.view.View.postInvalidateDelayed(long,int,int,int,int)",1,2,2
"android.view.View.printFlags(int)",2,2,7
"android.view.View.printPrivateFlags(int)",1,1,12
"android.view.View.recomputePadding()",1,1,1
"android.view.View.refreshDrawableState()",1,2,2
"android.view.View.removeCallbacks(Runnable)",2,2,2
"android.view.View.removeLongPressCallback()",1,2,2
"android.view.View.removeOnLayoutChangeListener(OnLayoutChangeListener)",2,1,2
"android.view.View.removeTapCallback()",1,2,2
"android.view.View.removeUnsetPressCallback()",1,2,3
"android.view.View.requestFocus()",1,1,1
"android.view.View.requestFocus(int)",1,1,1
"android.view.View.requestFocus(int,Rect)",4,2,6
"android.view.View.requestFocusFromTouch()",1,3,3
"android.view.View.requestLayout()",1,4,4
"android.view.View.requestRectangleOnScreen(Rect)",1,1,1
"android.view.View.requestRectangleOnScreen(Rect,boolean)",3,2,3
"android.view.View.resetPressedState()",2,3,4
"android.view.View.resolveSize(int,int)",1,1,1
"android.view.View.resolveSizeAndState(int,int,int)",2,2,5
"android.view.View.restoreHierarchyState(SparseArray<Parcelable>)",1,1,1
"android.view.View.saveHierarchyState(SparseArray<Parcelable>)",1,1,1
"android.view.View.scheduleDrawable(Drawable,Runnable,long)",1,4,4
"android.view.View.scrollBy(int,int)",1,1,1
"android.view.View.scrollTo(int,int)",1,3,4
"android.view.View.sendAccessibilityEvent(int)",1,2,2
"android.view.View.sendAccessibilityEventUnchecked(AccessibilityEvent)",1,3,3
"android.view.View.setActivated(boolean)",1,2,3
"android.view.View.setAlpha(float)",1,2,2
"android.view.View.setAnimation(Animation)",1,2,2
"android.view.View.setBackgroundColor(int)",1,2,2
"android.view.View.setBackgroundDrawable(Drawable)",1,9,12
"android.view.View.setBackgroundResource(int)",2,2,4
"android.view.View.setBottom(int)",1,5,8
"android.view.View.setClickable(boolean)",1,1,2
"android.view.View.setContentDescription(CharSequence)",1,1,1
"android.view.View.setDrawingCacheBackgroundColor(int)",1,1,2
"android.view.View.setDrawingCacheEnabled(boolean)",1,1,2
"android.view.View.setDrawingCacheQuality(int)",1,1,1
"android.view.View.setDuplicateParentStateEnabled(boolean)",1,1,2
"android.view.View.setEnabled(boolean)",2,1,3
"android.view.View.setFadingEdgeLength(int)",1,1,1
"android.view.View.setFilterTouchesWhenObscured(boolean)",1,1,2
"android.view.View.setFlags(int,int)",2,23,33
"android.view.View.setFocusable(boolean)",1,2,3
"android.view.View.setFocusableInTouchMode(boolean)",1,2,3
"android.view.View.setFrame(int,int,int,int)",1,5,10
"android.view.View.setHapticFeedbackEnabled(boolean)",1,1,2
"android.view.View.setHorizontalFadingEdgeEnabled(boolean)",1,3,3
"android.view.View.setHorizontalScrollBarEnabled(boolean)",1,2,2
"android.view.View.setId(int)",1,1,1
"android.view.View.setIsRootNamespace(boolean)",1,1,2
"android.view.View.setKeepScreenOn(boolean)",1,1,2
"android.view.View.setLayoutParams(LayoutParams)",2,1,2
"android.view.View.setLeft(int)",1,5,8
"android.view.View.setLongClickable(boolean)",1,1,2
"android.view.View.setMeasuredDimension(int,int)",1,1,1
"android.view.View.setMinimumHeight(int)",1,1,1
"android.view.View.setMinimumWidth(int)",1,1,1
"android.view.View.setNextFocusDownId(int)",1,1,1
"android.view.View.setNextFocusForwardId(int)",1,1,1
"android.view.View.setNextFocusLeftId(int)",1,1,1
"android.view.View.setNextFocusRightId(int)",1,1,1
"android.view.View.setNextFocusUpId(int)",1,1,1
"android.view.View.setOnClickListener(OnClickListener)",1,2,2
"android.view.View.setOnCreateContextMenuListener(OnCreateContextMenuListener)",1,2,2
"android.view.View.setOnDragListener(OnDragListener)",1,1,1
"android.view.View.setOnFocusChangeListener(OnFocusChangeListener)",1,1,1
"android.view.View.setOnKeyListener(OnKeyListener)",1,1,1
"android.view.View.setOnLongClickListener(OnLongClickListener)",1,2,2
"android.view.View.setOnTouchListener(OnTouchListener)",1,1,1
"android.view.View.setOverScrollMode(int)",2,1,4
"android.view.View.setPadding(int,int,int,int)",2,8,13
"android.view.View.setPivotX(float)",1,2,2
"android.view.View.setPivotY(float)",1,2,2
"android.view.View.setPressed(boolean)",1,1,2
"android.view.View.setRight(int)",1,5,8
"android.view.View.setRotation(float)",1,2,2
"android.view.View.setRotationX(float)",1,2,2
"android.view.View.setRotationY(float)",1,2,2
"android.view.View.setSaveEnabled(boolean)",1,1,2
"android.view.View.setSaveFromParentEnabled(boolean)",1,1,2
"android.view.View.setScaleX(float)",1,2,2
"android.view.View.setScaleY(float)",1,2,2
"android.view.View.setScrollBarStyle(int)",1,2,2
"android.view.View.setScrollContainer(boolean)",1,4,5
"android.view.View.setScrollbarFadingEnabled(boolean)",1,1,2
"android.view.View.setSelected(boolean)",1,3,4
"android.view.View.setSoundEffectsEnabled(boolean)",1,1,2
"android.view.View.setTag(Object)",1,1,1
"android.view.View.setTag(int,Object)",2,1,2
"android.view.View.setTagInternal(View,int,Object)",1,3,3
"android.view.View.setTagInternal(int,Object)",2,1,2
"android.view.View.setTop(int)",1,5,8
"android.view.View.setTouchDelegate(TouchDelegate)",1,1,1
"android.view.View.setTranslationX(float)",1,2,2
"android.view.View.setTranslationY(float)",1,2,2
"android.view.View.setVerticalFadingEdgeEnabled(boolean)",1,3,3
"android.view.View.setVerticalScrollBarEnabled(boolean)",1,2,2
"android.view.View.setVerticalScrollbarPosition(int)",1,2,2
"android.view.View.setVisibility(int)",1,2,2
"android.view.View.setWillNotCacheDrawing(boolean)",1,1,2
"android.view.View.setWillNotDraw(boolean)",1,1,2
"android.view.View.setX(float)",1,1,1
"android.view.View.setY(float)",1,1,1
"android.view.View.showContextMenu()",1,1,1
"android.view.View.startActionMode(Callback)",1,1,1
"android.view.View.startAnimation(Animation)",1,1,1
"android.view.View.startDrag(ClipData,DragThumbnailBuilder,boolean,Object)",2,7,11
"android.view.View.unFocus()",1,3,3
"android.view.View.unscheduleDrawable(Drawable)",1,2,2
"android.view.View.unscheduleDrawable(Drawable,Runnable)",1,4,4
"android.view.View.updateMatrix()",1,4,8
"android.view.View.verifyDrawable(Drawable)",1,1,1
"android.view.View.willNotCacheDrawing()",1,1,1
"android.view.View.willNotDraw()",1,1,1
"android.view.ViewConfiguration.ViewConfiguration()",1,1,1
"android.view.ViewConfiguration.ViewConfiguration(Context)",1,1,1
"android.view.ViewConfiguration.get(Context)",1,2,2
"android.view.ViewConfiguration.getDoubleTapSlop()",1,1,1
"android.view.ViewConfiguration.getDoubleTapTimeout()",1,1,1
"android.view.ViewConfiguration.getEdgeSlop()",1,1,1
"android.view.ViewConfiguration.getFadingEdgeLength()",1,1,1
"android.view.ViewConfiguration.getGlobalActionKeyTimeout()",1,1,1
"android.view.ViewConfiguration.getJumpTapTimeout()",1,1,1
"android.view.ViewConfiguration.getLongPressTimeout()",1,1,1
"android.view.ViewConfiguration.getMaximumDrawingCacheSize()",1,1,1
"android.view.ViewConfiguration.getMaximumFlingVelocity()",1,1,1
"android.view.ViewConfiguration.getMinimumFlingVelocity()",1,1,1
"android.view.ViewConfiguration.getPressedStateDuration()",1,1,1
"android.view.ViewConfiguration.getScaledDoubleTapSlop()",1,1,1
"android.view.ViewConfiguration.getScaledEdgeSlop()",1,1,1
"android.view.ViewConfiguration.getScaledFadingEdgeLength()",1,1,1
"android.view.ViewConfiguration.getScaledMaximumDrawingCacheSize()",1,1,1
"android.view.ViewConfiguration.getScaledMaximumFlingVelocity()",1,1,1
"android.view.ViewConfiguration.getScaledMinimumFlingVelocity()",1,1,1
"android.view.ViewConfiguration.getScaledOverflingDistance()",1,1,1
"android.view.ViewConfiguration.getScaledOverscrollDistance()",1,1,1
"android.view.ViewConfiguration.getScaledPagingTouchSlop()",1,1,1
"android.view.ViewConfiguration.getScaledScrollBarSize()",1,1,1
"android.view.ViewConfiguration.getScaledTouchSlop()",1,1,1
"android.view.ViewConfiguration.getScaledWindowTouchSlop()",1,1,1
"android.view.ViewConfiguration.getScrollBarFadeDuration()",1,1,1
"android.view.ViewConfiguration.getScrollBarSize()",1,1,1
"android.view.ViewConfiguration.getScrollDefaultDelay()",1,1,1
"android.view.ViewConfiguration.getScrollFriction()",1,1,1
"android.view.ViewConfiguration.getTapTimeout()",1,1,1
"android.view.ViewConfiguration.getTouchSlop()",1,1,1
"android.view.ViewConfiguration.getWindowTouchSlop()",1,1,1
"android.view.ViewConfiguration.getZoomControlsTimeout()",1,1,1
"android.view.ViewDebug.capture(View,OutputStream,String)",1,3,3
"android.view.ViewDebug.captureLayers(View,DataOutputStream)",1,1,2
"android.view.ViewDebug.captureViewLayer(View,DataOutputStream,boolean)",1,7,8
"android.view.ViewDebug.capturedViewExportFields(Object,Class<?>,String)",2,3,5
"android.view.ViewDebug.capturedViewExportMethods(Object,Class<?>,String)",2,4,7
"android.view.ViewDebug.capturedViewGetPropertyFields(Class<?>)",2,3,5
"android.view.ViewDebug.capturedViewGetPropertyMethods(Class<?>)",2,5,7
"android.view.ViewDebug.dispatchCommand(View,String,String,OutputStream)",1,7,7
"android.view.ViewDebug.dump(View,OutputStream)",1,4,4
"android.view.ViewDebug.dumpCapturedView(String,Object)",1,1,1
"android.view.ViewDebug.dumpView(Object,BufferedWriter,int)",1,3,3
"android.view.ViewDebug.dumpViewHierarchy(ViewGroup,BufferedWriter,int)",2,3,4
"android.view.ViewDebug.dumpViewHierarchyWithProperties(Context,ViewGroup,BufferedWriter,int)",2,3,4
"android.view.ViewDebug.dumpViewProperties(Context,Object,BufferedWriter)",1,1,1
"android.view.ViewDebug.dumpViewProperties(Context,Object,BufferedWriter,String)",1,2,2
"android.view.ViewDebug.dumpViewWithProperties(Context,View,BufferedWriter,int)",1,3,3
"android.view.ViewDebug.exportFields(Context,Object,BufferedWriter,Class<?>,String)",10,14,16
"android.view.ViewDebug.exportMethods(Context,Object,BufferedWriter,Class<?>,String)",10,13,16
"android.view.ViewDebug.exportUnrolledArray(Context,BufferedWriter,ExportedProperty,int[],String,String)",8,11,11
"android.view.ViewDebug.exportUnrolledFlags(BufferedWriter,FlagToString[],int,String)",1,3,6
"android.view.ViewDebug.findView(View,String)",3,3,3
"android.view.ViewDebug.findView(ViewGroup,String,int)",6,3,6
"android.view.ViewDebug.getExportedPropertyFields(Class<?>)",2,3,6
"android.view.ViewDebug.getExportedPropertyMethods(Class<?>)",2,5,8
"android.view.ViewDebug.getViewInstanceCount()",1,1,1
"android.view.ViewDebug.getViewRootInstanceCount()",1,1,1
"android.view.ViewDebug.invalidate(View,String)",1,2,2
"android.view.ViewDebug.isRequestedView(View,String,int)",1,2,2
"android.view.ViewDebug.performViewCapture(View,boolean)",2,5,5
"android.view.ViewDebug.profile(View,OutputStream,String)",1,4,4
"android.view.ViewDebug.profileViewAndChildren(View,BufferedWriter)",1,1,1
"android.view.ViewDebug.profileViewAndChildren(View,BufferedWriter,boolean)",1,10,12
"android.view.ViewDebug.profileViewOperation(View,ViewOperation<T>)",2,3,3
"android.view.ViewDebug.requestLayout(View,String)",1,2,2
"android.view.ViewDebug.resolveId(Context,int)",1,3,3
"android.view.ViewDebug.startHierarchyTracing(String,View)",3,2,4
"android.view.ViewDebug.startMotionEventTracing(String,View)",3,2,4
"android.view.ViewDebug.startRecyclerTracing(String,View)",3,1,3
"android.view.ViewDebug.stopHierarchyTracing()",3,5,8
"android.view.ViewDebug.stopMotionEventTracing()",3,5,8
"android.view.ViewDebug.stopRecyclerTracing()",3,6,9
"android.view.ViewDebug.trace(View,HierarchyTraceType)",2,2,3
"android.view.ViewDebug.trace(View,MotionEvent,MotionEventTraceType)",2,2,3
"android.view.ViewDebug.trace(View,RecyclerTraceType,int...)",2,2,4
"android.view.ViewDebug.writeEntry(BufferedWriter,String,String,String,Object)",1,1,1
"android.view.ViewDebug.writeValue(BufferedWriter,Object)",1,2,2
"android.view.ViewGroup.LayoutParams.LayoutParams()",1,1,1
"android.view.ViewGroup.LayoutParams.LayoutParams(Context,AttributeSet)",1,1,1
"android.view.ViewGroup.LayoutParams.LayoutParams(LayoutParams)",1,1,1
"android.view.ViewGroup.LayoutParams.LayoutParams(int,int)",1,1,1
"android.view.ViewGroup.LayoutParams.debug(String)",1,1,1
"android.view.ViewGroup.LayoutParams.setBaseAttributes(TypedArray,int,int)",1,1,1
"android.view.ViewGroup.LayoutParams.sizeToString(int)",3,1,3
"android.view.ViewGroup.MarginLayoutParams.MarginLayoutParams(Context,AttributeSet)",1,2,2
"android.view.ViewGroup.MarginLayoutParams.MarginLayoutParams(LayoutParams)",1,1,1
"android.view.ViewGroup.MarginLayoutParams.MarginLayoutParams(MarginLayoutParams)",1,1,1
"android.view.ViewGroup.MarginLayoutParams.MarginLayoutParams(int,int)",1,1,1
"android.view.ViewGroup.MarginLayoutParams.setMargins(int,int,int,int)",1,1,1
"android.view.ViewGroup.TouchTarget.TouchTarget()",1,1,1
"android.view.ViewGroup.TouchTarget.obtain(View,int)",1,1,2
"android.view.ViewGroup.TouchTarget.recycle()",1,1,2
"android.view.ViewGroup.ViewGroup(Context)",1,1,1
"android.view.ViewGroup.ViewGroup(Context,AttributeSet)",1,1,1
"android.view.ViewGroup.ViewGroup(Context,AttributeSet,int)",1,1,1
"android.view.ViewGroup.addDisappearingView(View)",1,1,2
"android.view.ViewGroup.addFocusables(ArrayList<View>,int)",1,1,1
"android.view.ViewGroup.addFocusables(ArrayList<View>,int,int)",1,6,6
"android.view.ViewGroup.addInArray(View,int)",3,5,5
"android.view.ViewGroup.addStatesFromChildren()",1,1,1
"android.view.ViewGroup.addTouchTarget(View,int)",1,1,1
"android.view.ViewGroup.addTouchables(ArrayList<View>)",1,3,3
"android.view.ViewGroup.addView(View)",1,1,1
"android.view.ViewGroup.addView(View,LayoutParams)",1,1,1
"android.view.ViewGroup.addView(View,int)",3,2,3
"android.view.ViewGroup.addView(View,int,LayoutParams)",1,2,2
"android.view.ViewGroup.addView(View,int,int)",1,1,1
"android.view.ViewGroup.addViewInLayout(View,int,LayoutParams)",1,1,1
"android.view.ViewGroup.addViewInLayout(View,int,LayoutParams,boolean)",1,1,1
"android.view.ViewGroup.addViewInner(View,int,LayoutParams,boolean)",2,9,12
"android.view.ViewGroup.attachLayoutAnimationParameters(View,LayoutParams,int,int)",1,1,2
"android.view.ViewGroup.attachViewToParent(View,int,LayoutParams)",1,2,3
"android.view.ViewGroup.bindLayoutAnimation(View)",1,1,1
"android.view.ViewGroup.bringChildToFront(View)",1,2,2
"android.view.ViewGroup.canAnimate()",1,1,1
"android.view.ViewGroup.cancelAndClearTouchTargets(MotionEvent)",1,5,5
"android.view.ViewGroup.checkLayoutParams(LayoutParams)",1,1,1
"android.view.ViewGroup.childDrawableStateChanged(View)",1,2,2
"android.view.ViewGroup.cleanupLayoutState(View)",1,1,1
"android.view.ViewGroup.clearChildFocus(View)",1,3,3
"android.view.ViewGroup.clearDisappearingChildren()",1,2,2
"android.view.ViewGroup.clearFocus()",1,2,2
"android.view.ViewGroup.clearTouchTargets()",1,3,3
"android.view.ViewGroup.createSnapshot(Config,int,boolean)",1,6,6
"android.view.ViewGroup.debug(int)",1,5,5
"android.view.ViewGroup.detachAllViewsFromParent()",2,1,3
"android.view.ViewGroup.detachViewFromParent(View)",1,1,1
"android.view.ViewGroup.detachViewFromParent(int)",1,1,1
"android.view.ViewGroup.detachViewsFromParent(int,int)",1,1,1
"android.view.ViewGroup.dispatchAttachedToWindow(AttachInfo,int)",1,2,2
"android.view.ViewGroup.dispatchCollectViewAttributes(int)",1,2,2
"android.view.ViewGroup.dispatchConfigurationChanged(Configuration)",1,2,2
"android.view.ViewGroup.dispatchConsistencyCheck(int)",1,2,3
"android.view.ViewGroup.dispatchDetachedFromWindow()",1,2,2
"android.view.ViewGroup.dispatchDisplayHint(int)",1,2,2
"android.view.ViewGroup.dispatchDragEvent(DragEvent)",2,16,23
"android.view.ViewGroup.dispatchDraw(Canvas)",1,24,26
"android.view.ViewGroup.dispatchFinishTemporaryDetach()",1,2,2
"android.view.ViewGroup.dispatchFreezeSelfOnly(SparseArray<Parcelable>)",1,1,1
"android.view.ViewGroup.dispatchKeyEvent(KeyEvent)",3,3,4
"android.view.ViewGroup.dispatchKeyEventPreIme(KeyEvent)",3,3,4
"android.view.ViewGroup.dispatchKeyShortcutEvent(KeyEvent)",3,3,4
"android.view.ViewGroup.dispatchPopulateAccessibilityEvent(AccessibilityEvent)",1,2,2
"android.view.ViewGroup.dispatchRestoreInstanceState(SparseArray<Parcelable>)",1,3,3
"android.view.ViewGroup.dispatchSaveInstanceState(SparseArray<Parcelable>)",1,3,3
"android.view.ViewGroup.dispatchSetActivated(boolean)",1,2,2
"android.view.ViewGroup.dispatchSetPressed(boolean)",1,2,2
"android.view.ViewGroup.dispatchSetSelected(boolean)",1,2,2
"android.view.ViewGroup.dispatchStartTemporaryDetach()",1,2,2
"android.view.ViewGroup.dispatchThawSelfOnly(SparseArray<Parcelable>)",1,1,1
"android.view.ViewGroup.dispatchTouchEvent(MotionEvent)",14,19,35
"android.view.ViewGroup.dispatchTrackballEvent(MotionEvent)",3,3,4
"android.view.ViewGroup.dispatchTransformedTouchEvent(MotionEvent,boolean,View,int)",4,20,30
"android.view.ViewGroup.dispatchUnhandledMove(View,int)",1,2,2
"android.view.ViewGroup.dispatchVisibilityChanged(View,int)",1,2,2
"android.view.ViewGroup.dispatchWindowFocusChanged(boolean)",1,2,2
"android.view.ViewGroup.dispatchWindowVisibilityChanged(int)",1,2,2
"android.view.ViewGroup.drawChild(Canvas,View,long)",3,41,58
"android.view.ViewGroup.drawableStateChanged()",3,4,5
"android.view.ViewGroup.endViewTransition(View)",1,7,8
"android.view.ViewGroup.findFocus()",3,3,4
"android.view.ViewGroup.findFrontmostDroppableChildAt(float,float,PointF)",4,2,4
"android.view.ViewGroup.findViewByPredicateTraversal(Predicate<View>)",5,3,5
"android.view.ViewGroup.findViewTraversal(int)",5,3,5
"android.view.ViewGroup.findViewWithTagTraversal(Object)",5,4,6
"android.view.ViewGroup.finishAnimatingView(View,Animation)",1,7,7
"android.view.ViewGroup.fitSystemWindows(Rect)",4,3,4
"android.view.ViewGroup.focusSearch(View,int)",3,3,3
"android.view.ViewGroup.focusableViewAvailable(View)",1,5,5
"android.view.ViewGroup.gatherTransparentRegion(Region)",2,4,8
"android.view.ViewGroup.generateDefaultLayoutParams()",1,1,1
"android.view.ViewGroup.generateLayoutParams(AttributeSet)",1,1,1
"android.view.ViewGroup.generateLayoutParams(LayoutParams)",1,1,1
"android.view.ViewGroup.getChildAt(int)",1,1,2
"android.view.ViewGroup.getChildCount()",1,1,1
"android.view.ViewGroup.getChildDrawingOrder(int,int)",1,1,1
"android.view.ViewGroup.getChildMeasureSpec(int,int,int)",2,2,13
"android.view.ViewGroup.getChildStaticTransformation(View,Transformation)",1,1,1
"android.view.ViewGroup.getChildVisibleRect(View,Rect,Point)",1,3,4
"android.view.ViewGroup.getDescendantFocusability()",1,1,1
"android.view.ViewGroup.getFocusedChild()",1,1,1
"android.view.ViewGroup.getLayoutAnimation()",1,1,1
"android.view.ViewGroup.getLayoutAnimationListener()",1,1,1
"android.view.ViewGroup.getLayoutTransition()",1,1,1
"android.view.ViewGroup.getPersistentDrawingCache()",1,1,1
"android.view.ViewGroup.getTouchTarget(View)",3,1,3
"android.view.ViewGroup.growTmpPointerArrays(int)",3,2,5
"android.view.ViewGroup.handleFocusGainInternal(int,Rect)",1,2,2
"android.view.ViewGroup.hasFocus()",1,1,2
"android.view.ViewGroup.hasFocusable()",6,3,6
"android.view.ViewGroup.indexOfChild(View)",3,1,3
"android.view.ViewGroup.initFromAttributes(Context,AttributeSet)",2,5,14
"android.view.ViewGroup.initViewGroup()",1,1,2
"android.view.ViewGroup.invalidateChild(View,Rect)",6,12,26
"android.view.ViewGroup.invalidateChildInParent(int[],Rect)",4,5,6
"android.view.ViewGroup.isAlwaysDrawnWithCacheEnabled()",1,1,1
"android.view.ViewGroup.isAnimationCacheEnabled()",1,1,1
"android.view.ViewGroup.isChildrenDrawingOrderEnabled()",1,1,1
"android.view.ViewGroup.isChildrenDrawnWithCacheEnabled()",1,1,1
"android.view.ViewGroup.isMotionEventSplittingEnabled()",1,1,1
"android.view.ViewGroup.isTransformedTouchPointInView(float,float,View,PointF)",1,4,5
"android.view.ViewGroup.jumpDrawablesToCurrentState()",1,2,2
"android.view.ViewGroup.measureChild(View,int,int)",1,1,1
"android.view.ViewGroup.measureChildWithMargins(View,int,int,int,int)",1,1,1
"android.view.ViewGroup.measureChildren(int,int)",1,3,3
"android.view.ViewGroup.notifyAnimationListener()",1,4,4
"android.view.ViewGroup.offsetChildrenTopAndBottom(int)",1,1,2
"android.view.ViewGroup.offsetDescendantRectToMyCoords(View,Rect)",1,1,1
"android.view.ViewGroup.offsetRectBetweenParentAndChild(View,Rect,boolean,boolean)",3,7,10
"android.view.ViewGroup.offsetRectIntoDescendantCoords(View,Rect)",1,1,1
"android.view.ViewGroup.onAnimationEnd()",1,3,3
"android.view.ViewGroup.onAnimationStart()",1,5,5
"android.view.ViewGroup.onChildVisibilityChanged(View,int)",1,6,7
"android.view.ViewGroup.onConsistencyCheck(int)",1,8,9
"android.view.ViewGroup.onCreateDrawableState(int)",2,5,6
"android.view.ViewGroup.onInterceptTouchEvent(MotionEvent)",1,1,1
"android.view.ViewGroup.onRequestFocusInDescendants(int,Rect)",4,3,5
"android.view.ViewGroup.recomputeViewAttributes(View)",1,2,2
"android.view.ViewGroup.removeAllViews()",1,1,1
"android.view.ViewGroup.removeAllViewsInLayout()",2,10,11
"android.view.ViewGroup.removeDetachedView(View,boolean)",1,9,9
"android.view.ViewGroup.removeFromArray(int)",3,4,6
"android.view.ViewGroup.removeFromArray(int,int)",2,2,6
"android.view.ViewGroup.removePointersFromTouchTargets(int)",4,4,5
"android.view.ViewGroup.removeView(View)",1,1,1
"android.view.ViewGroup.removeViewAt(int)",1,1,1
"android.view.ViewGroup.removeViewInLayout(View)",1,1,1
"android.view.ViewGroup.removeViewInternal(View)",1,2,2
"android.view.ViewGroup.removeViewInternal(int,View)",1,9,9
"android.view.ViewGroup.removeViews(int,int)",1,1,1
"android.view.ViewGroup.removeViewsInLayout(int,int)",1,1,1
"android.view.ViewGroup.removeViewsInternal(int,int)",1,10,10
"android.view.ViewGroup.requestChildFocus(View,View)",2,5,6
"android.view.ViewGroup.requestChildRectangleOnScreen(View,Rect,boolean)",1,1,1
"android.view.ViewGroup.requestDisallowInterceptTouchEvent(boolean)",2,2,4
"android.view.ViewGroup.requestFocus(int,Rect)",5,8,8
"android.view.ViewGroup.requestTransparentRegion(View)",1,3,3
"android.view.ViewGroup.resetCancelNextUpFlag(View)",2,1,2
"android.view.ViewGroup.resetTouchState()",1,1,1
"android.view.ViewGroup.scheduleLayoutAnimation()",1,1,1
"android.view.ViewGroup.setAddStatesFromChildren(boolean)",1,1,2
"android.view.ViewGroup.setAlwaysDrawnWithCacheEnabled(boolean)",1,1,1
"android.view.ViewGroup.setAnimationCacheEnabled(boolean)",1,1,1
"android.view.ViewGroup.setBooleanFlag(int,boolean)",1,1,2
"android.view.ViewGroup.setChildrenDrawingCacheEnabled(boolean)",1,3,4
"android.view.ViewGroup.setChildrenDrawingOrderEnabled(boolean)",1,1,1
"android.view.ViewGroup.setChildrenDrawnWithCacheEnabled(boolean)",1,1,1
"android.view.ViewGroup.setClipChildren(boolean)",1,1,1
"android.view.ViewGroup.setClipToPadding(boolean)",1,1,1
"android.view.ViewGroup.setDescendantFocusability(int)",2,2,3
"android.view.ViewGroup.setLayoutAnimation(LayoutAnimationController)",1,1,2
"android.view.ViewGroup.setLayoutAnimationListener(AnimationListener)",1,1,1
"android.view.ViewGroup.setLayoutTransition(LayoutTransition)",1,3,3
"android.view.ViewGroup.setMotionEventSplittingEnabled(boolean)",1,1,2
"android.view.ViewGroup.setOnHierarchyChangeListener(OnHierarchyChangeListener)",1,1,1
"android.view.ViewGroup.setPadding(int,int,int,int)",1,1,2
"android.view.ViewGroup.setPersistentDrawingCache(int)",1,1,1
"android.view.ViewGroup.setStaticTransformationsEnabled(boolean)",1,1,1
"android.view.ViewGroup.showContextMenuForChild(View)",1,2,2
"android.view.ViewGroup.startActionModeForChild(View,Callback)",1,2,2
"android.view.ViewGroup.startLayoutAnimation()",1,2,2
"android.view.ViewGroup.startViewTransition(View)",1,2,3
"android.view.ViewGroup.unFocus()",1,3,3
"android.view.ViewGroup.updateViewLayout(View,LayoutParams)",3,1,3
"android.view.ViewRoot.CalledFromWrongThreadException.CalledFromWrongThreadException(String)",1,1,1
"android.view.ViewRoot.InputMethodCallback.InputMethodCallback(ViewRoot)",1,1,1
"android.view.ViewRoot.InputMethodCallback.finishedEvent(int,boolean)",1,2,2
"android.view.ViewRoot.InputMethodCallback.sessionCreated(IInputMethodSession)",1,1,1
"android.view.ViewRoot.RunQueue.HandlerAction.equals(Object)",3,3,5
"android.view.ViewRoot.RunQueue.HandlerAction.hashCode()",1,2,2
"android.view.ViewRoot.RunQueue.executeActions(Handler)",1,2,2
"android.view.ViewRoot.RunQueue.post(Runnable)",1,1,1
"android.view.ViewRoot.RunQueue.postDelayed(Runnable,long)",1,1,1
"android.view.ViewRoot.RunQueue.removeCallbacks(Runnable)",1,1,2
"android.view.ViewRoot.TakenSurfaceHolder.isCreating()",1,1,1
"android.view.ViewRoot.TakenSurfaceHolder.onAllowLockCanvas()",1,1,1
"android.view.ViewRoot.TakenSurfaceHolder.onRelayoutContainer()",1,1,1
"android.view.ViewRoot.TakenSurfaceHolder.onUpdateSurface()",1,1,1
"android.view.ViewRoot.TakenSurfaceHolder.setFixedSize(int,int)",1,1,1
"android.view.ViewRoot.TakenSurfaceHolder.setFormat(int)",1,1,1
"android.view.ViewRoot.TakenSurfaceHolder.setKeepScreenOn(boolean)",1,1,1
"android.view.ViewRoot.TakenSurfaceHolder.setType(int)",1,1,1
"android.view.ViewRoot.TrackballAxis.collect(float,long,String)",1,11,15
"android.view.ViewRoot.TrackballAxis.generate(float)",6,3,12
"android.view.ViewRoot.TrackballAxis.reset(int)",1,1,1
"android.view.ViewRoot.ViewRoot(Context)",1,1,3
"android.view.ViewRoot.W.W(ViewRoot)",1,1,1
"android.view.ViewRoot.W.checkCallingPermission(String)",2,1,3
"android.view.ViewRoot.W.closeSystemDialogs(String)",1,2,2
"android.view.ViewRoot.W.dispatchAppVisibility(boolean)",1,2,2
"android.view.ViewRoot.W.dispatchDragEvent(DragEvent)",1,2,2
"android.view.ViewRoot.W.dispatchGetNewSurface()",1,2,2
"android.view.ViewRoot.W.dispatchWallpaperCommand(String,int,int,int,Bundle,boolean)",1,2,3
"android.view.ViewRoot.W.dispatchWallpaperOffsets(float,float,float,float,boolean)",1,2,3
"android.view.ViewRoot.W.executeCommand(String,String,ParcelFileDescriptor)",4,7,7
"android.view.ViewRoot.W.resized(int,int,Rect,Rect,boolean,Configuration)",1,2,2
"android.view.ViewRoot.W.windowFocusChanged(boolean,boolean)",1,2,2
"android.view.ViewRoot.addConfigCallback(ComponentCallbacks)",1,1,1
"android.view.ViewRoot.addFirstDrawHandler(Runnable)",1,2,2
"android.view.ViewRoot.bringChildToFront(View)",1,1,1
"android.view.ViewRoot.captureKeyLog(String,KeyEvent)",2,2,3
"android.view.ViewRoot.captureMotionLog(String,MotionEvent)",2,2,3
"android.view.ViewRoot.checkForLeavingTouchModeAndConsume(KeyEvent)",6,3,7
"android.view.ViewRoot.checkThread()",2,1,2
"android.view.ViewRoot.childDrawableStateChanged(View)",1,1,1
"android.view.ViewRoot.clearChildFocus(View)",1,6,6
"android.view.ViewRoot.createContextMenu(ContextMenu)",1,1,1
"android.view.ViewRoot.debug()",1,1,1
"android.view.ViewRoot.deliverKeyEvent(KeyEvent,boolean)",5,7,8
"android.view.ViewRoot.deliverKeyEventPostIme(KeyEvent,boolean)",14,20,31
"android.view.ViewRoot.deliverPointerEvent(MotionEvent,boolean)",6,12,22
"android.view.ViewRoot.deliverTrackballEvent(MotionEvent,boolean)",4,17,22
"android.view.ViewRoot.destroyHardwareRenderer()",1,2,2
"android.view.ViewRoot.die(boolean)",1,2,2
"android.view.ViewRoot.dispatchAppVisibility(boolean)",1,1,2
"android.view.ViewRoot.dispatchCloseSystemDialogs(String)",1,1,1
"android.view.ViewRoot.dispatchDetachedFromWindow()",1,5,6
"android.view.ViewRoot.dispatchDragEvent(DragEvent)",1,2,2
"android.view.ViewRoot.dispatchFinishedEvent(int,boolean)",1,1,2
"android.view.ViewRoot.dispatchGetNewSurface()",1,1,1
"android.view.ViewRoot.dispatchKey(KeyEvent)",1,1,1
"android.view.ViewRoot.dispatchKey(KeyEvent,boolean)",1,8,9
"android.view.ViewRoot.dispatchMotion(MotionEvent)",1,1,1
"android.view.ViewRoot.dispatchMotion(MotionEvent,boolean)",1,4,4
"android.view.ViewRoot.dispatchPointer(MotionEvent)",1,1,1
"android.view.ViewRoot.dispatchPointer(MotionEvent,boolean)",1,1,2
"android.view.ViewRoot.dispatchResized(int,int,Rect,Rect,boolean,Configuration)",1,3,4
"android.view.ViewRoot.dispatchTrackball(MotionEvent)",1,1,1
"android.view.ViewRoot.dispatchTrackball(MotionEvent,boolean)",1,1,2
"android.view.ViewRoot.disposeResizeBitmap()",1,2,2
"android.view.ViewRoot.doDie()",1,6,9
"android.view.ViewRoot.draw(boolean)",5,37,48
"android.view.ViewRoot.enableHardwareAcceleration(LayoutParams)",1,4,6
"android.view.ViewRoot.enqueuePendingEvent(Object,boolean)",1,1,3
"android.view.ViewRoot.ensureTouchMode(boolean)",2,2,4
"android.view.ViewRoot.ensureTouchModeLocally(boolean)",2,3,4
"android.view.ViewRoot.enterTouchMode()",5,6,6
"android.view.ViewRoot.findAncestorToTakeFocusInTouchMode(View)",4,4,5
"android.view.ViewRoot.finishInputEvent(boolean)",1,3,3
"android.view.ViewRoot.finishKeyEvent(KeyEvent,boolean,boolean)",1,2,2
"android.view.ViewRoot.finishPointerEvent(MotionEvent,boolean,boolean)",1,3,4
"android.view.ViewRoot.finishTrackballEvent(MotionEvent,boolean,boolean)",1,2,2
"android.view.ViewRoot.focusSearch(View,int)",2,1,2
"android.view.ViewRoot.focusableViewAvailable(View)",1,6,6
"android.view.ViewRoot.forceLayout(View)",1,3,3
"android.view.ViewRoot.getAudioManager()",2,2,3
"android.view.ViewRoot.getChildVisibleRect(View,Rect,Point)",2,1,2
"android.view.ViewRoot.getHostVisibility()",1,2,2
"android.view.ViewRoot.getLastTouchPoint(Point)",1,1,1
"android.view.ViewRoot.getLocation()",1,1,1
"android.view.ViewRoot.getParent()",1,1,1
"android.view.ViewRoot.getRootMeasureSpec(int,int)",2,2,4
"android.view.ViewRoot.getRunQueue()",2,1,2
"android.view.ViewRoot.getView()",1,1,1
"android.view.ViewRoot.getWindowSession(Looper)",1,2,3
"android.view.ViewRoot.handleAppVisibility(boolean)",1,2,2
"android.view.ViewRoot.handleDragEvent(DragEvent)",1,13,16
"android.view.ViewRoot.handleFinishedEvent(int,boolean)",1,4,4
"android.view.ViewRoot.handleGetNewSurface()",1,1,1
"android.view.ViewRoot.handleMessage(Message)",2,26,49
"android.view.ViewRoot.invalidate()",1,1,1
"android.view.ViewRoot.invalidateChild(View,Rect)",2,8,10
"android.view.ViewRoot.invalidateChildInParent(int[],Rect)",1,1,1
"android.view.ViewRoot.isInTouchMode()",2,2,3
"android.view.ViewRoot.isLayoutRequested()",1,1,1
"android.view.ViewRoot.isNavigationKey(KeyEvent)",2,2,2
"android.view.ViewRoot.isTypingKey(KeyEvent)",1,1,1
"android.view.ViewRoot.isViewDescendantOf(View,View)",2,2,3
"android.view.ViewRoot.leaveTouchMode()",6,5,6
"android.view.ViewRoot.nativeShowFPS(Canvas,int)",1,1,1
"android.view.ViewRoot.onHardwarePostDraw(Canvas)",1,2,2
"android.view.ViewRoot.onHardwarePreDraw(Canvas)",1,1,1
"android.view.ViewRoot.performHapticFeedback(int,boolean)",1,1,2
"android.view.ViewRoot.performTraversals()",5,128,174
"android.view.ViewRoot.playSoundEffect(int)",2,3,8
"android.view.ViewRoot.profile()",1,1,1
"android.view.ViewRoot.recomputeViewAttributes(View)",1,3,3
"android.view.ViewRoot.relayoutWindow(LayoutParams,int,boolean)",1,6,7
"android.view.ViewRoot.requestChildFocus(View,View)",1,3,3
"android.view.ViewRoot.requestChildRectangleOnScreen(View,Rect,boolean)",1,1,1
"android.view.ViewRoot.requestDisallowInterceptTouchEvent(boolean)",1,1,1
"android.view.ViewRoot.requestLayout()",1,1,1
"android.view.ViewRoot.requestTransparentRegion(View)",1,2,2
"android.view.ViewRoot.retrievePendingEvent(int)",1,2,3
"android.view.ViewRoot.scheduleTraversals()",1,2,2
"android.view.ViewRoot.scrollToRectOrFocus(Rect,boolean)",3,27,36
"android.view.ViewRoot.sendAccessibilityEvents()",2,2,4
"android.view.ViewRoot.setDragFocus(View)",1,1,2
"android.view.ViewRoot.setLayoutParams(LayoutParams,boolean)",1,2,3
"android.view.ViewRoot.setLocalDragState(Object)",1,1,1
"android.view.ViewRoot.setView(View,LayoutParams,View)",10,17,25
"android.view.ViewRoot.showContextMenuForChild(View)",1,1,1
"android.view.ViewRoot.startActionModeForChild(View,Callback)",1,1,1
"android.view.ViewRoot.startInputEvent(FinishedCallback)",1,2,2
"android.view.ViewRoot.unscheduleTraversals()",1,2,2
"android.view.ViewRoot.updateConfiguration(Configuration,boolean)",1,7,7
"android.view.ViewRoot.windowFocusChanged(boolean,boolean)",1,1,3
"android.view.ViewStub.ViewStub(Context)",1,1,1
"android.view.ViewStub.ViewStub(Context,AttributeSet)",1,1,1
"android.view.ViewStub.ViewStub(Context,AttributeSet,int)",1,1,1
"android.view.ViewStub.ViewStub(Context,int)",1,1,1
"android.view.ViewStub.dispatchDraw(Canvas)",1,1,1
"android.view.ViewStub.draw(Canvas)",1,1,1
"android.view.ViewStub.getInflatedId()",1,1,1
"android.view.ViewStub.getLayoutResource()",1,1,1
"android.view.ViewStub.inflate()",3,6,7
"android.view.ViewStub.initialize(Context)",1,1,1
"android.view.ViewStub.onMeasure(int,int)",1,1,1
"android.view.ViewStub.setInflatedId(int)",1,1,1
"android.view.ViewStub.setLayoutResource(int)",1,1,1
"android.view.ViewStub.setOnInflateListener(OnInflateListener)",1,1,1
"android.view.ViewStub.setVisibility(int)",3,4,5
"android.view.ViewTreeObserver.InternalInsetsInfo.equals(Object)",4,1,5
"android.view.ViewTreeObserver.InternalInsetsInfo.getTouchableInsets()",1,1,1
"android.view.ViewTreeObserver.InternalInsetsInfo.reset()",1,1,1
"android.view.ViewTreeObserver.InternalInsetsInfo.set(InternalInsetsInfo)",1,1,1
"android.view.ViewTreeObserver.InternalInsetsInfo.setTouchableInsets(int)",1,1,1
"android.view.ViewTreeObserver.ViewTreeObserver()",1,1,1
"android.view.ViewTreeObserver.addOnComputeInternalInsetsListener(OnComputeInternalInsetsListener)",1,1,2
"android.view.ViewTreeObserver.addOnGlobalFocusChangeListener(OnGlobalFocusChangeListener)",1,1,2
"android.view.ViewTreeObserver.addOnGlobalLayoutListener(OnGlobalLayoutListener)",1,1,2
"android.view.ViewTreeObserver.addOnPreDrawListener(OnPreDrawListener)",1,1,2
"android.view.ViewTreeObserver.addOnScrollChangedListener(OnScrollChangedListener)",1,1,2
"android.view.ViewTreeObserver.addOnTouchModeChangeListener(OnTouchModeChangeListener)",1,1,2
"android.view.ViewTreeObserver.checkIsAlive()",2,1,2
"android.view.ViewTreeObserver.dispatchOnComputeInternalInsets(InternalInsetsInfo)",1,4,4
"android.view.ViewTreeObserver.dispatchOnGlobalFocusChange(View,View)",1,4,4
"android.view.ViewTreeObserver.dispatchOnGlobalLayout()",1,4,4
"android.view.ViewTreeObserver.dispatchOnPreDraw()",1,4,4
"android.view.ViewTreeObserver.dispatchOnScrollChanged()",1,4,4
"android.view.ViewTreeObserver.dispatchOnTouchModeChanged(boolean)",1,4,4
"android.view.ViewTreeObserver.hasComputeInternalInsetsListeners()",1,2,2
"android.view.ViewTreeObserver.isAlive()",1,1,1
"android.view.ViewTreeObserver.kill()",1,1,1
"android.view.ViewTreeObserver.merge(ViewTreeObserver)",1,11,11
"android.view.ViewTreeObserver.removeGlobalOnLayoutListener(OnGlobalLayoutListener)",2,1,2
"android.view.ViewTreeObserver.removeOnComputeInternalInsetsListener(OnComputeInternalInsetsListener)",2,1,2
"android.view.ViewTreeObserver.removeOnGlobalFocusChangeListener(OnGlobalFocusChangeListener)",2,1,2
"android.view.ViewTreeObserver.removeOnPreDrawListener(OnPreDrawListener)",2,1,2
"android.view.ViewTreeObserver.removeOnScrollChangedListener(OnScrollChangedListener)",2,1,2
"android.view.ViewTreeObserver.removeOnTouchModeChangeListener(OnTouchModeChangeListener)",2,1,2
"android.view.VolumePanel.VolumePanel(Context,AudioService)",1,1,1
"android.view.VolumePanel.getOrCreateToneGenerator(int)",2,1,2
"android.view.VolumePanel.handleMessage(Message)",2,6,6
"android.view.VolumePanel.onFreeResources()",1,3,3
"android.view.VolumePanel.onPlaySound(int,int)",1,2,2
"android.view.VolumePanel.onShowVolumeChanged(int,int)",2,16,18
"android.view.VolumePanel.onStopSounds()",1,3,3
"android.view.VolumePanel.onVibrate()",2,1,2
"android.view.VolumePanel.onVolumeChanged(int,int)",1,5,6
"android.view.VolumePanel.postVolumeChanged(int,int)",2,1,2
"android.view.VolumePanel.setLargeIcon(int)",1,1,1
"android.view.VolumePanel.setRingerIcon()",1,2,4
"android.view.VolumePanel.setSmallIcon(int)",1,1,2
"android.view.Window.LocalWindowManager.LocalWindowManager(WindowManager,boolean)",1,1,1
"android.view.Window.LocalWindowManager.addView(View,LayoutParams)",1,15,20
"android.view.Window.LocalWindowManager.getDefaultDisplay()",1,1,1
"android.view.Window.LocalWindowManager.isHardwareAccelerated()",1,1,1
"android.view.Window.LocalWindowManager.removeView(View)",1,1,1
"android.view.Window.LocalWindowManager.removeViewImmediate(View)",1,1,1
"android.view.Window.LocalWindowManager.updateViewLayout(View,LayoutParams)",1,1,1
"android.view.Window.Window(Context)",1,1,1
"android.view.Window.addFlags(int)",1,1,1
"android.view.Window.clearFlags(int)",1,1,1
"android.view.Window.destroy()",1,1,1
"android.view.Window.findViewById(int)",1,1,1
"android.view.Window.getAttributes()",1,1,1
"android.view.Window.getCallback()",1,1,1
"android.view.Window.getContainer()",1,1,1
"android.view.Window.getContext()",1,1,1
"android.view.Window.getFeatures()",1,1,1
"android.view.Window.getForcedWindowFlags()",1,1,1
"android.view.Window.getLocalFeatures()",1,1,1
"android.view.Window.getWindowManager()",1,1,1
"android.view.Window.getWindowStyle()",1,2,2
"android.view.Window.hasChildren()",1,1,1
"android.view.Window.hasFeature(int)",1,1,1
"android.view.Window.hasSoftInputMode()",1,1,1
"android.view.Window.isActive()",1,1,1
"android.view.Window.isDestroyed()",1,1,1
"android.view.Window.makeActive()",1,1,3
"android.view.Window.removeFeature(int)",1,1,2
"android.view.Window.requestFeature(int)",1,1,2
"android.view.Window.setAttributes(LayoutParams)",1,2,2
"android.view.Window.setBackgroundDrawableResource(int)",1,1,1
"android.view.Window.setCallback(Callback)",1,1,1
"android.view.Window.setContainer(Window)",1,1,2
"android.view.Window.setDefaultWindowFormat(int)",1,3,3
"android.view.Window.setFlags(int,int)",1,2,2
"android.view.Window.setFormat(int)",1,2,3
"android.view.Window.setGravity(int)",1,2,2
"android.view.Window.setLayout(int,int)",1,2,2
"android.view.Window.setSoftInputMode(int)",1,2,3
"android.view.Window.setType(int)",1,2,2
"android.view.Window.setWindowAnimations(int)",1,2,2
"android.view.Window.setWindowManager(WindowManager,IBinder,String)",1,1,1
"android.view.Window.setWindowManager(WindowManager,IBinder,String,boolean)",1,2,2
"android.view.WindowLeaked.WindowLeaked(String)",1,1,1
"android.view.WindowManager.BadTokenException.BadTokenException()",1,1,1
"android.view.WindowManager.BadTokenException.BadTokenException(String)",1,1,1
"android.view.WindowManager.LayoutParams.LayoutParams()",1,1,1
"android.view.WindowManager.LayoutParams.LayoutParams(Parcel)",1,1,1
"android.view.WindowManager.LayoutParams.LayoutParams(int)",1,1,1
"android.view.WindowManager.LayoutParams.LayoutParams(int,int)",1,1,1
"android.view.WindowManager.LayoutParams.LayoutParams(int,int,int)",1,1,1
"android.view.WindowManager.LayoutParams.LayoutParams(int,int,int,int,int)",1,1,1
"android.view.WindowManager.LayoutParams.LayoutParams(int,int,int,int,int,int,int)",1,1,1
"android.view.WindowManager.LayoutParams.backup()",1,1,2
"android.view.WindowManager.LayoutParams.copyFrom(LayoutParams)",1,1,25
"android.view.WindowManager.LayoutParams.debug(String)",1,1,1
"android.view.WindowManager.LayoutParams.describeContents()",1,1,1
"android.view.WindowManager.LayoutParams.getTitle()",1,1,1
"android.view.WindowManager.LayoutParams.mayUseInputMethod(int)",2,2,2
"android.view.WindowManager.LayoutParams.restore()",1,1,2
"android.view.WindowManager.LayoutParams.scale(float)",1,1,3
"android.view.WindowManager.LayoutParams.setTitle(CharSequence)",1,1,2
"android.view.WindowManager.LayoutParams.toString()",1,11,15
"android.view.WindowManager.LayoutParams.writeToParcel(Parcel,int)",1,1,1
"android.view.WindowManagerImpl.addView(View)",1,1,1
"android.view.WindowManagerImpl.addView(View,LayoutParams)",1,1,1
"android.view.WindowManagerImpl.addView(View,LayoutParams,boolean)",4,6,11
"android.view.WindowManagerImpl.addViewNesting(View,LayoutParams)",1,1,1
"android.view.WindowManagerImpl.closeAll()",1,1,1
"android.view.WindowManagerImpl.closeAll(IBinder,String,String)",2,4,6
"android.view.WindowManagerImpl.findViewLocked(View,boolean)",4,1,5
"android.view.WindowManagerImpl.finishRemoveViewLocked(View,int)",1,1,1
"android.view.WindowManagerImpl.getDefault()",1,1,1
"android.view.WindowManagerImpl.getDefaultDisplay()",1,1,1
"android.view.WindowManagerImpl.getRootViewLayoutParameter(View)",4,2,6
"android.view.WindowManagerImpl.isHardwareAccelerated()",1,1,1
"android.view.WindowManagerImpl.removeItem(Object[],Object[],int)",1,4,4
"android.view.WindowManagerImpl.removeView(View)",2,1,2
"android.view.WindowManagerImpl.removeViewImmediate(View)",2,1,2
"android.view.WindowManagerImpl.removeViewLocked(int)",2,2,3
"android.view.WindowManagerImpl.updateViewLayout(View,LayoutParams)",2,1,2
"android.view.WindowOrientationListener.SensorEventListenerImpl.SensorEventListenerImpl(WindowOrientationListener)",1,1,1
"android.view.WindowOrientationListener.SensorEventListenerImpl.calculateNewRotation(float,float)",5,3,10
"android.view.WindowOrientationListener.SensorEventListenerImpl.checkFullyTilted(float)",1,1,6
"android.view.WindowOrientationListener.SensorEventListenerImpl.computeLowpassAlpha(int)",1,1,1
"android.view.WindowOrientationListener.SensorEventListenerImpl.computeNewOrientation(float,float)",1,1,2
"android.view.WindowOrientationListener.SensorEventListenerImpl.filterOrientation(float,float)",1,1,8
"android.view.WindowOrientationListener.SensorEventListenerImpl.getCurrentRotation(int)",1,1,2
"android.view.WindowOrientationListener.SensorEventListenerImpl.handleAccelerationDistrust(float)",1,1,4
"android.view.WindowOrientationListener.SensorEventListenerImpl.lowpassFilter(float,float,float)",1,1,1
"android.view.WindowOrientationListener.SensorEventListenerImpl.onAccuracyChanged(Sensor,int)",1,1,1
"android.view.WindowOrientationListener.SensorEventListenerImpl.onSensorChanged(SensorEvent)",2,1,3
"android.view.WindowOrientationListener.SensorEventListenerImpl.setAllow180Rotation(boolean)",1,1,1
"android.view.WindowOrientationListener.SensorEventListenerImpl.tiltAngle(float,float)",1,1,1
"android.view.WindowOrientationListener.SensorEventListenerImpl.vectorMagnitude(float,float,float)",1,1,1
"android.view.WindowOrientationListener.WindowOrientationListener(Context)",1,1,1
"android.view.WindowOrientationListener.WindowOrientationListener(Context,int)",1,1,2
"android.view.WindowOrientationListener.canDetectOrientation()",1,1,1
"android.view.WindowOrientationListener.disable()",2,4,4
"android.view.WindowOrientationListener.enable()",2,4,4
"android.view.WindowOrientationListener.getCurrentRotation(int)",2,2,2
"android.view.WindowOrientationListener.setAllow180Rotation(boolean)",1,2,2
"android.view.accessibility.AccessibilityEvent.AccessibilityEvent()",1,1,1
"android.view.accessibility.AccessibilityEvent.clear()",1,1,1
"android.view.accessibility.AccessibilityEvent.describeContents()",1,1,1
"android.view.accessibility.AccessibilityEvent.getAddedCount()",1,1,1
"android.view.accessibility.AccessibilityEvent.getBeforeText()",1,1,1
"android.view.accessibility.AccessibilityEvent.getBooleanProperty(int)",1,1,1
"android.view.accessibility.AccessibilityEvent.getClassName()",1,1,1
"android.view.accessibility.AccessibilityEvent.getContentDescription()",1,1,1
"android.view.accessibility.AccessibilityEvent.getCurrentItemIndex()",1,1,1
"android.view.accessibility.AccessibilityEvent.getEventTime()",1,1,1
"android.view.accessibility.AccessibilityEvent.getEventType()",1,1,1
"android.view.accessibility.AccessibilityEvent.getFromIndex()",1,1,1
"android.view.accessibility.AccessibilityEvent.getItemCount()",1,1,1
"android.view.accessibility.AccessibilityEvent.getPackageName()",1,1,1
"android.view.accessibility.AccessibilityEvent.getParcelableData()",1,1,1
"android.view.accessibility.AccessibilityEvent.getRemovedCount()",1,1,1
"android.view.accessibility.AccessibilityEvent.getText()",1,1,1
"android.view.accessibility.AccessibilityEvent.initFromParcel(Parcel)",1,1,1
"android.view.accessibility.AccessibilityEvent.isChecked()",1,1,1
"android.view.accessibility.AccessibilityEvent.isEnabled()",1,1,1
"android.view.accessibility.AccessibilityEvent.isFullScreen()",1,1,1
"android.view.accessibility.AccessibilityEvent.isPassword()",1,1,1
"android.view.accessibility.AccessibilityEvent.obtain()",2,1,2
"android.view.accessibility.AccessibilityEvent.obtain(int)",1,1,1
"android.view.accessibility.AccessibilityEvent.recycle()",2,1,3
"android.view.accessibility.AccessibilityEvent.setAddedCount(int)",1,1,1
"android.view.accessibility.AccessibilityEvent.setBeforeText(CharSequence)",1,1,1
"android.view.accessibility.AccessibilityEvent.setBooleanProperty(int,boolean)",1,1,2
"android.view.accessibility.AccessibilityEvent.setChecked(boolean)",1,1,1
"android.view.accessibility.AccessibilityEvent.setClassName(CharSequence)",1,1,1
"android.view.accessibility.AccessibilityEvent.setContentDescription(CharSequence)",1,1,1
"android.view.accessibility.AccessibilityEvent.setCurrentItemIndex(int)",1,1,1
"android.view.accessibility.AccessibilityEvent.setEnabled(boolean)",1,1,1
"android.view.accessibility.AccessibilityEvent.setEventTime(long)",1,1,1
"android.view.accessibility.AccessibilityEvent.setEventType(int)",1,1,1
"android.view.accessibility.AccessibilityEvent.setFromIndex(int)",1,1,1
"android.view.accessibility.AccessibilityEvent.setFullScreen(boolean)",1,1,1
"android.view.accessibility.AccessibilityEvent.setItemCount(int)",1,1,1
"android.view.accessibility.AccessibilityEvent.setPackageName(CharSequence)",1,1,1
"android.view.accessibility.AccessibilityEvent.setParcelableData(Parcelable)",1,1,1
"android.view.accessibility.AccessibilityEvent.setPassword(boolean)",1,1,1
"android.view.accessibility.AccessibilityEvent.setRemovedCount(int)",1,1,1
"android.view.accessibility.AccessibilityEvent.toString()",1,1,1
"android.view.accessibility.AccessibilityEvent.writeToParcel(Parcel,int)",1,1,1
"android.view.accessibility.AccessibilityManager.AccessibilityManager(Context,IAccessibilityManager)",1,2,2
"android.view.accessibility.AccessibilityManager.MyHandler.MyHandler(Looper)",1,1,1
"android.view.accessibility.AccessibilityManager.MyHandler.handleMessage(Message)",2,2,3
"android.view.accessibility.AccessibilityManager.getAccessibilityServiceList()",1,3,3
"android.view.accessibility.AccessibilityManager.getClient()",1,1,1
"android.view.accessibility.AccessibilityManager.getInstance(Context)",1,2,2
"android.view.accessibility.AccessibilityManager.interrupt()",2,3,4
"android.view.accessibility.AccessibilityManager.isEnabled()",1,1,1
"android.view.accessibility.AccessibilityManager.sendAccessibilityEvent(AccessibilityEvent)",2,4,5
"android.view.animation.AccelerateDecelerateInterpolator.AccelerateDecelerateInterpolator()",1,1,1
"android.view.animation.AccelerateDecelerateInterpolator.AccelerateDecelerateInterpolator(Context,AttributeSet)",1,1,1
"android.view.animation.AccelerateDecelerateInterpolator.getInterpolation(float)",1,1,1
"android.view.animation.AccelerateInterpolator.AccelerateInterpolator()",1,1,1
"android.view.animation.AccelerateInterpolator.AccelerateInterpolator(Context,AttributeSet)",1,1,1
"android.view.animation.AccelerateInterpolator.AccelerateInterpolator(float)",1,1,1
"android.view.animation.AccelerateInterpolator.getInterpolation(float)",2,2,2
"android.view.animation.AlphaAnimation.AlphaAnimation(Context,AttributeSet)",1,1,1
"android.view.animation.AlphaAnimation.AlphaAnimation(float,float)",1,1,1
"android.view.animation.AlphaAnimation.applyTransformation(float,Transformation)",1,1,1
"android.view.animation.AlphaAnimation.willChangeBounds()",1,1,1
"android.view.animation.AlphaAnimation.willChangeTransformationMatrix()",1,1,1
"android.view.animation.Animation.Animation()",1,1,1
"android.view.animation.Animation.Animation(Context,AttributeSet)",1,2,2
"android.view.animation.Animation.Description.parseValue(TypedValue)",5,4,7
"android.view.animation.Animation.applyTransformation(float,Transformation)",1,1,1
"android.view.animation.Animation.cancel()",1,3,4
"android.view.animation.Animation.clone()",1,1,1
"android.view.animation.Animation.computeDurationHint()",1,1,1
"android.view.animation.Animation.detach()",1,3,4
"android.view.animation.Animation.ensureInterpolator()",1,1,2
"android.view.animation.Animation.finalize()",1,2,2
"android.view.animation.Animation.getDetachWallpaper()",1,1,1
"android.view.animation.Animation.getDuration()",1,1,1
"android.view.animation.Animation.getFillAfter()",1,1,1
"android.view.animation.Animation.getFillBefore()",1,1,1
"android.view.animation.Animation.getInterpolator()",1,1,1
"android.view.animation.Animation.getInvalidateRegion(int,int,int,int,RectF,Transformation)",1,1,1
"android.view.animation.Animation.getRepeatCount()",1,1,1
"android.view.animation.Animation.getRepeatMode()",1,1,1
"android.view.animation.Animation.getScaleFactor()",1,1,1
"android.view.animation.Animation.getStartOffset()",1,1,1
"android.view.animation.Animation.getStartTime()",1,1,1
"android.view.animation.Animation.getTransformation(long,Transformation)",2,12,23
"android.view.animation.Animation.getTransformation(long,Transformation,float)",1,1,1
"android.view.animation.Animation.getZAdjustment()",1,1,1
"android.view.animation.Animation.hasEnded()",1,1,1
"android.view.animation.Animation.hasStarted()",1,1,1
"android.view.animation.Animation.initialize(int,int,int,int)",1,1,1
"android.view.animation.Animation.initializeInvalidateRegion(int,int,int,int)",1,2,2
"android.view.animation.Animation.isFillEnabled()",1,1,1
"android.view.animation.Animation.isInitialized()",1,1,1
"android.view.animation.Animation.reset()",1,1,1
"android.view.animation.Animation.resolveSize(int,float,int,int)",5,2,5
"android.view.animation.Animation.restrictDuration(long)",3,1,8
"android.view.animation.Animation.scaleCurrentDuration(float)",1,1,1
"android.view.animation.Animation.setAnimationListener(AnimationListener)",1,1,1
"android.view.animation.Animation.setDetachWallpaper(boolean)",1,1,1
"android.view.animation.Animation.setDuration(long)",2,1,2
"android.view.animation.Animation.setFillAfter(boolean)",1,1,1
"android.view.animation.Animation.setFillBefore(boolean)",1,1,1
"android.view.animation.Animation.setFillEnabled(boolean)",1,1,1
"android.view.animation.Animation.setInterpolator(Context,int)",1,1,1
"android.view.animation.Animation.setInterpolator(Interpolator)",1,1,1
"android.view.animation.Animation.setRepeatCount(int)",1,1,2
"android.view.animation.Animation.setRepeatMode(int)",1,1,1
"android.view.animation.Animation.setStartOffset(long)",1,1,1
"android.view.animation.Animation.setStartTime(long)",1,1,1
"android.view.animation.Animation.setZAdjustment(int)",1,1,1
"android.view.animation.Animation.start()",1,1,1
"android.view.animation.Animation.startNow()",1,1,1
"android.view.animation.Animation.willChangeBounds()",1,1,1
"android.view.animation.Animation.willChangeTransformationMatrix()",1,1,1
"android.view.animation.AnimationSet.AnimationSet(Context,AttributeSet)",1,1,1
"android.view.animation.AnimationSet.AnimationSet(boolean)",1,1,1
"android.view.animation.AnimationSet.addAnimation(Animation)",1,4,6
"android.view.animation.AnimationSet.clone()",1,2,2
"android.view.animation.AnimationSet.computeDurationHint()",1,2,3
"android.view.animation.AnimationSet.getAnimations()",1,1,1
"android.view.animation.AnimationSet.getDuration()",1,3,3
"android.view.animation.AnimationSet.getStartTime()",1,2,2
"android.view.animation.AnimationSet.getTransformation(long,Transformation)",1,9,10
"android.view.animation.AnimationSet.init()",1,1,1
"android.view.animation.AnimationSet.initialize(int,int,int,int)",1,9,13
"android.view.animation.AnimationSet.initializeInvalidateRegion(int,int,int,int)",1,4,4
"android.view.animation.AnimationSet.reset()",1,1,1
"android.view.animation.AnimationSet.restoreChildrenStartOffset()",2,2,3
"android.view.animation.AnimationSet.restrictDuration(long)",1,2,2
"android.view.animation.AnimationSet.scaleCurrentDuration(float)",1,2,2
"android.view.animation.AnimationSet.setDuration(long)",1,1,1
"android.view.animation.AnimationSet.setFillAfter(boolean)",1,1,1
"android.view.animation.AnimationSet.setFillBefore(boolean)",1,1,1
"android.view.animation.AnimationSet.setFlag(int,boolean)",1,1,2
"android.view.animation.AnimationSet.setRepeatMode(int)",1,1,1
"android.view.animation.AnimationSet.setStartOffset(long)",1,1,1
"android.view.animation.AnimationSet.setStartTime(long)",1,2,2
"android.view.animation.AnimationSet.willChangeBounds()",1,1,1
"android.view.animation.AnimationSet.willChangeTransformationMatrix()",1,1,1
"android.view.animation.AnimationUtils.createAnimationFromXml(Context,XmlPullParser)",1,1,1
"android.view.animation.AnimationUtils.createAnimationFromXml(Context,XmlPullParser,AnimationSet,AttributeSet)",8,10,11
"android.view.animation.AnimationUtils.createInterpolatorFromXml(Context,XmlPullParser)",12,13,14
"android.view.animation.AnimationUtils.createLayoutAnimationFromXml(Context,XmlPullParser)",1,1,1
"android.view.animation.AnimationUtils.createLayoutAnimationFromXml(Context,XmlPullParser,AttributeSet)",5,5,7
"android.view.animation.AnimationUtils.currentAnimationTimeMillis()",1,1,1
"android.view.animation.AnimationUtils.loadAnimation(Context,int)",1,4,4
"android.view.animation.AnimationUtils.loadInterpolator(Context,int)",1,4,4
"android.view.animation.AnimationUtils.loadLayoutAnimation(Context,int)",1,4,4
"android.view.animation.AnimationUtils.makeInAnimation(Context,boolean)",1,2,2
"android.view.animation.AnimationUtils.makeInChildBottomAnimation(Context)",1,1,1
"android.view.animation.AnimationUtils.makeOutAnimation(Context,boolean)",1,2,2
"android.view.animation.AnticipateInterpolator.AnticipateInterpolator()",1,1,1
"android.view.animation.AnticipateInterpolator.AnticipateInterpolator(Context,AttributeSet)",1,1,1
"android.view.animation.AnticipateInterpolator.AnticipateInterpolator(float)",1,1,1
"android.view.animation.AnticipateInterpolator.getInterpolation(float)",1,1,1
"android.view.animation.AnticipateOvershootInterpolator.AnticipateOvershootInterpolator()",1,1,1
"android.view.animation.AnticipateOvershootInterpolator.AnticipateOvershootInterpolator(Context,AttributeSet)",1,1,1
"android.view.animation.AnticipateOvershootInterpolator.AnticipateOvershootInterpolator(float)",1,1,1
"android.view.animation.AnticipateOvershootInterpolator.AnticipateOvershootInterpolator(float,float)",1,1,1
"android.view.animation.AnticipateOvershootInterpolator.a(float,float)",1,1,1
"android.view.animation.AnticipateOvershootInterpolator.getInterpolation(float)",2,2,2
"android.view.animation.AnticipateOvershootInterpolator.o(float,float)",1,1,1
"android.view.animation.BounceInterpolator.BounceInterpolator()",1,1,1
"android.view.animation.BounceInterpolator.BounceInterpolator(Context,AttributeSet)",1,1,1
"android.view.animation.BounceInterpolator.bounce(float)",1,1,1
"android.view.animation.BounceInterpolator.getInterpolation(float)",4,4,4
"android.view.animation.CycleInterpolator.CycleInterpolator(Context,AttributeSet)",1,1,1
"android.view.animation.CycleInterpolator.CycleInterpolator(float)",1,1,1
"android.view.animation.CycleInterpolator.getInterpolation(float)",1,1,1
"android.view.animation.DecelerateInterpolator.DecelerateInterpolator()",1,1,1
"android.view.animation.DecelerateInterpolator.DecelerateInterpolator(Context,AttributeSet)",1,1,1
"android.view.animation.DecelerateInterpolator.DecelerateInterpolator(float)",1,1,1
"android.view.animation.DecelerateInterpolator.getInterpolation(float)",1,2,2
"android.view.animation.GridLayoutAnimationController.GridLayoutAnimationController(Animation)",1,1,1
"android.view.animation.GridLayoutAnimationController.GridLayoutAnimationController(Animation,float,float)",1,1,1
"android.view.animation.GridLayoutAnimationController.GridLayoutAnimationController(Context,AttributeSet)",1,1,1
"android.view.animation.GridLayoutAnimationController.getColumnDelay()",1,1,1
"android.view.animation.GridLayoutAnimationController.getDelayForView(View)",3,2,6
"android.view.animation.GridLayoutAnimationController.getDirection()",1,1,1
"android.view.animation.GridLayoutAnimationController.getDirectionPriority()",1,1,1
"android.view.animation.GridLayoutAnimationController.getRowDelay()",1,1,1
"android.view.animation.GridLayoutAnimationController.getTransformedColumnIndex(AnimationParameters)",2,2,6
"android.view.animation.GridLayoutAnimationController.getTransformedRowIndex(AnimationParameters)",2,2,6
"android.view.animation.GridLayoutAnimationController.setColumnDelay(float)",1,1,1
"android.view.animation.GridLayoutAnimationController.setDirection(int)",1,1,1
"android.view.animation.GridLayoutAnimationController.setDirectionPriority(int)",1,1,1
"android.view.animation.GridLayoutAnimationController.setRowDelay(float)",1,1,1
"android.view.animation.GridLayoutAnimationController.willOverlap()",1,1,2
"android.view.animation.LayoutAnimationController.LayoutAnimationController(Animation)",1,1,1
"android.view.animation.LayoutAnimationController.LayoutAnimationController(Animation,float)",1,1,1
"android.view.animation.LayoutAnimationController.LayoutAnimationController(Context,AttributeSet)",1,3,3
"android.view.animation.LayoutAnimationController.getAnimation()",1,1,1
"android.view.animation.LayoutAnimationController.getAnimationForView(View)",1,1,2
"android.view.animation.LayoutAnimationController.getDelay()",1,1,1
"android.view.animation.LayoutAnimationController.getDelayForView(View)",2,1,3
"android.view.animation.LayoutAnimationController.getInterpolator()",1,1,1
"android.view.animation.LayoutAnimationController.getOrder()",1,1,1
"android.view.animation.LayoutAnimationController.getTransformedIndex(AnimationParameters)",3,2,5
"android.view.animation.LayoutAnimationController.isDone()",1,1,1
"android.view.animation.LayoutAnimationController.setAnimation(Animation)",1,1,1
"android.view.animation.LayoutAnimationController.setAnimation(Context,int)",1,1,1
"android.view.animation.LayoutAnimationController.setDelay(float)",1,1,1
"android.view.animation.LayoutAnimationController.setInterpolator(Context,int)",1,1,1
"android.view.animation.LayoutAnimationController.setInterpolator(Interpolator)",1,1,1
"android.view.animation.LayoutAnimationController.setOrder(int)",1,1,1
"android.view.animation.LayoutAnimationController.start()",1,1,1
"android.view.animation.LayoutAnimationController.willOverlap()",1,1,1
"android.view.animation.LinearInterpolator.LinearInterpolator()",1,1,1
"android.view.animation.LinearInterpolator.LinearInterpolator(Context,AttributeSet)",1,1,1
"android.view.animation.LinearInterpolator.getInterpolation(float)",1,1,1
"android.view.animation.OvershootInterpolator.OvershootInterpolator()",1,1,1
"android.view.animation.OvershootInterpolator.OvershootInterpolator(Context,AttributeSet)",1,1,1
"android.view.animation.OvershootInterpolator.OvershootInterpolator(float)",1,1,1
"android.view.animation.OvershootInterpolator.getInterpolation(float)",1,1,1
"android.view.animation.RotateAnimation.RotateAnimation(Context,AttributeSet)",1,1,1
"android.view.animation.RotateAnimation.RotateAnimation(float,float)",1,1,1
"android.view.animation.RotateAnimation.RotateAnimation(float,float,float,float)",1,1,1
"android.view.animation.RotateAnimation.RotateAnimation(float,float,int,float,int,float)",1,1,1
"android.view.animation.RotateAnimation.applyTransformation(float,Transformation)",1,2,3
"android.view.animation.RotateAnimation.initialize(int,int,int,int)",1,1,1
"android.view.animation.ScaleAnimation.ScaleAnimation(Context,AttributeSet)",1,9,9
"android.view.animation.ScaleAnimation.ScaleAnimation(float,float,float,float)",1,1,1
"android.view.animation.ScaleAnimation.ScaleAnimation(float,float,float,float,float,float)",1,1,1
"android.view.animation.ScaleAnimation.ScaleAnimation(float,float,float,float,int,float,int,float)",1,1,1
"android.view.animation.ScaleAnimation.applyTransformation(float,Transformation)",1,2,7
"android.view.animation.ScaleAnimation.initialize(int,int,int,int)",1,1,1
"android.view.animation.ScaleAnimation.resolveScale(float,int,int,int,int)",4,3,4
"android.view.animation.Transformation.Transformation()",1,1,1
"android.view.animation.Transformation.clear()",1,2,2
"android.view.animation.Transformation.compose(Transformation)",1,1,1
"android.view.animation.Transformation.getAlpha()",1,1,1
"android.view.animation.Transformation.getMatrix()",1,1,1
"android.view.animation.Transformation.getTransformationType()",1,1,1
"android.view.animation.Transformation.printShortString(PrintWriter)",1,1,1
"android.view.animation.Transformation.set(Transformation)",1,1,1
"android.view.animation.Transformation.setAlpha(float)",1,1,1
"android.view.animation.Transformation.setTransformationType(int)",1,1,1
"android.view.animation.Transformation.toShortString()",1,1,1
"android.view.animation.Transformation.toShortString(StringBuilder)",1,1,1
"android.view.animation.Transformation.toString()",1,1,1
"android.view.animation.TranslateAnimation.TranslateAnimation(Context,AttributeSet)",1,1,1
"android.view.animation.TranslateAnimation.TranslateAnimation(float,float,float,float)",1,1,1
"android.view.animation.TranslateAnimation.TranslateAnimation(int,float,int,float,int,float,int,float)",1,1,1
"android.view.animation.TranslateAnimation.applyTransformation(float,Transformation)",1,1,3
"android.view.animation.TranslateAnimation.initialize(int,int,int,int)",1,1,1
"android.view.inputmethod.BaseInputConnection.BaseInputConnection(InputMethodManager,boolean)",1,1,1
"android.view.inputmethod.BaseInputConnection.BaseInputConnection(View,boolean)",1,1,1
"android.view.inputmethod.BaseInputConnection.beginBatchEdit()",1,1,1
"android.view.inputmethod.BaseInputConnection.clearMetaKeyStates(int)",2,1,2
"android.view.inputmethod.BaseInputConnection.commitCompletion(CompletionInfo)",1,1,1
"android.view.inputmethod.BaseInputConnection.commitCorrection(CorrectionInfo)",1,1,1
"android.view.inputmethod.BaseInputConnection.commitText(CharSequence,int)",1,2,2
"android.view.inputmethod.BaseInputConnection.deleteSurroundingText(int,int)",2,5,13
"android.view.inputmethod.BaseInputConnection.endBatchEdit()",1,1,1
"android.view.inputmethod.BaseInputConnection.ensureDefaultComposingSpans()",1,6,7
"android.view.inputmethod.BaseInputConnection.finishComposingText()",1,3,3
"android.view.inputmethod.BaseInputConnection.getComposingSpanEnd(Spannable)",1,1,1
"android.view.inputmethod.BaseInputConnection.getComposingSpanStart(Spannable)",1,1,1
"android.view.inputmethod.BaseInputConnection.getCursorCapsMode(int)",3,1,4
"android.view.inputmethod.BaseInputConnection.getEditable()",1,2,2
"android.view.inputmethod.BaseInputConnection.getExtractedText(ExtractedTextRequest,int)",1,1,1
"android.view.inputmethod.BaseInputConnection.getSelectedText(int)",4,2,5
"android.view.inputmethod.BaseInputConnection.getTextAfterCursor(int,int)",3,3,6
"android.view.inputmethod.BaseInputConnection.getTextBeforeCursor(int,int)",4,2,6
"android.view.inputmethod.BaseInputConnection.performContextMenuAction(int)",1,1,1
"android.view.inputmethod.BaseInputConnection.performEditorAction(int)",1,1,1
"android.view.inputmethod.BaseInputConnection.performPrivateCommand(String,Bundle)",1,1,1
"android.view.inputmethod.BaseInputConnection.removeComposingSpans(Spannable)",1,4,4
"android.view.inputmethod.BaseInputConnection.replaceText(CharSequence,int,boolean)",2,11,19
"android.view.inputmethod.BaseInputConnection.reportFullscreenMode(boolean)",1,1,1
"android.view.inputmethod.BaseInputConnection.sendCurrentText()",6,7,9
"android.view.inputmethod.BaseInputConnection.sendKeyEvent(KeyEvent)",1,5,5
"android.view.inputmethod.BaseInputConnection.setComposingRegion(int,int)",1,4,9
"android.view.inputmethod.BaseInputConnection.setComposingSpans(Spannable)",1,1,1
"android.view.inputmethod.BaseInputConnection.setComposingSpans(Spannable,int,int)",4,5,5
"android.view.inputmethod.BaseInputConnection.setComposingText(CharSequence,int)",1,2,2
"android.view.inputmethod.BaseInputConnection.setSelection(int,int)",3,4,7
"android.view.inputmethod.CompletionInfo.CompletionInfo(Parcel)",1,1,1
"android.view.inputmethod.CompletionInfo.CompletionInfo(long,int,CharSequence)",1,1,1
"android.view.inputmethod.CompletionInfo.CompletionInfo(long,int,CharSequence,CharSequence)",1,1,1
"android.view.inputmethod.CompletionInfo.describeContents()",1,1,1
"android.view.inputmethod.CompletionInfo.getId()",1,1,1
"android.view.inputmethod.CompletionInfo.getLabel()",1,1,1
"android.view.inputmethod.CompletionInfo.getPosition()",1,1,1
"android.view.inputmethod.CompletionInfo.getText()",1,1,1
"android.view.inputmethod.CompletionInfo.toString()",1,1,1
"android.view.inputmethod.CompletionInfo.writeToParcel(Parcel,int)",1,1,1
"android.view.inputmethod.CorrectionInfo.CorrectionInfo(Parcel)",1,1,1
"android.view.inputmethod.CorrectionInfo.CorrectionInfo(int,CharSequence,CharSequence)",1,1,1
"android.view.inputmethod.CorrectionInfo.describeContents()",1,1,1
"android.view.inputmethod.CorrectionInfo.getNewText()",1,1,1
"android.view.inputmethod.CorrectionInfo.getOffset()",1,1,1
"android.view.inputmethod.CorrectionInfo.getOldText()",1,1,1
"android.view.inputmethod.CorrectionInfo.toString()",1,1,1
"android.view.inputmethod.CorrectionInfo.writeToParcel(Parcel,int)",1,1,1
"android.view.inputmethod.EditorInfo.describeContents()",1,1,1
"android.view.inputmethod.EditorInfo.dump(Printer,String)",1,1,1
"android.view.inputmethod.EditorInfo.makeCompatible(int)",2,2,5
"android.view.inputmethod.EditorInfo.writeToParcel(Parcel,int)",1,1,1
"android.view.inputmethod.ExtractedText.describeContents()",1,1,1
"android.view.inputmethod.ExtractedText.writeToParcel(Parcel,int)",1,1,1
"android.view.inputmethod.ExtractedTextRequest.describeContents()",1,1,1
"android.view.inputmethod.ExtractedTextRequest.writeToParcel(Parcel,int)",1,1,1
"android.view.inputmethod.InputBinding.InputBinding(InputConnection,IBinder,int,int)",1,1,1
"android.view.inputmethod.InputBinding.InputBinding(InputConnection,InputBinding)",1,1,1
"android.view.inputmethod.InputBinding.InputBinding(Parcel)",1,1,1
"android.view.inputmethod.InputBinding.describeContents()",1,1,1
"android.view.inputmethod.InputBinding.getConnection()",1,1,1
"android.view.inputmethod.InputBinding.getConnectionToken()",1,1,1
"android.view.inputmethod.InputBinding.getPid()",1,1,1
"android.view.inputmethod.InputBinding.getUid()",1,1,1
"android.view.inputmethod.InputBinding.toString()",1,1,1
"android.view.inputmethod.InputBinding.writeToParcel(Parcel,int)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.InputConnectionWrapper(InputConnection,boolean)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.beginBatchEdit()",1,1,1
"android.view.inputmethod.InputConnectionWrapper.clearMetaKeyStates(int)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.commitCompletion(CompletionInfo)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.commitCorrection(CorrectionInfo)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.commitText(CharSequence,int)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.deleteSurroundingText(int,int)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.endBatchEdit()",1,1,1
"android.view.inputmethod.InputConnectionWrapper.finishComposingText()",1,1,1
"android.view.inputmethod.InputConnectionWrapper.getCursorCapsMode(int)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.getExtractedText(ExtractedTextRequest,int)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.getSelectedText(int)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.getTextAfterCursor(int,int)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.getTextBeforeCursor(int,int)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.performContextMenuAction(int)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.performEditorAction(int)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.performPrivateCommand(String,Bundle)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.reportFullscreenMode(boolean)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.sendKeyEvent(KeyEvent)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.setComposingRegion(int,int)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.setComposingText(CharSequence,int)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.setSelection(int,int)",1,1,1
"android.view.inputmethod.InputConnectionWrapper.setTarget(InputConnection)",2,1,3
"android.view.inputmethod.InputMethodInfo.InputMethodInfo(Context,ResolveInfo)",6,7,12
"android.view.inputmethod.InputMethodInfo.InputMethodInfo(Parcel)",1,1,1
"android.view.inputmethod.InputMethodInfo.InputMethodInfo(String,String,CharSequence,String)",1,1,1
"android.view.inputmethod.InputMethodInfo.describeContents()",1,1,1
"android.view.inputmethod.InputMethodInfo.dump(Printer,String)",1,1,1
"android.view.inputmethod.InputMethodInfo.equals(Object)",4,1,4
"android.view.inputmethod.InputMethodInfo.getComponent()",1,1,1
"android.view.inputmethod.InputMethodInfo.getId()",1,1,1
"android.view.inputmethod.InputMethodInfo.getIsDefaultResourceId()",1,1,1
"android.view.inputmethod.InputMethodInfo.getPackageName()",1,1,1
"android.view.inputmethod.InputMethodInfo.getServiceInfo()",1,1,1
"android.view.inputmethod.InputMethodInfo.getServiceName()",1,1,1
"android.view.inputmethod.InputMethodInfo.getSettingsActivity()",1,1,1
"android.view.inputmethod.InputMethodInfo.getSubtypes()",1,1,1
"android.view.inputmethod.InputMethodInfo.loadIcon(PackageManager)",1,1,1
"android.view.inputmethod.InputMethodInfo.loadLabel(PackageManager)",1,1,1
"android.view.inputmethod.InputMethodInfo.toString()",1,1,1
"android.view.inputmethod.InputMethodInfo.writeToParcel(Parcel,int)",1,1,1
"android.view.inputmethod.InputMethodManager.ControlledInputConnectionWrapper.ControlledInputConnectionWrapper(Looper,InputConnection)",1,1,1
"android.view.inputmethod.InputMethodManager.ControlledInputConnectionWrapper.isActive()",1,1,1
"android.view.inputmethod.InputMethodManager.H.H(Looper)",1,1,1
"android.view.inputmethod.InputMethodManager.H.handleMessage(Message)",6,13,17
"android.view.inputmethod.InputMethodManager.InputMethodManager(IInputMethodManager,Looper)",1,1,2
"android.view.inputmethod.InputMethodManager.checkFocus()",4,4,8
"android.view.inputmethod.InputMethodManager.clearBindingLocked()",1,1,1
"android.view.inputmethod.InputMethodManager.clearConnectionLocked()",1,1,1
"android.view.inputmethod.InputMethodManager.closeCurrentInput()",1,1,2
"android.view.inputmethod.InputMethodManager.dispatchKeyEvent(Context,int,KeyEvent,IInputMethodCallback)",3,7,10
"android.view.inputmethod.InputMethodManager.dispatchTrackballEvent(Context,int,MotionEvent,IInputMethodCallback)",2,5,8
"android.view.inputmethod.InputMethodManager.displayCompletions(View,CompletionInfo[])",2,4,6
"android.view.inputmethod.InputMethodManager.doDump(FileDescriptor,PrintWriter,String[])",1,2,2
"android.view.inputmethod.InputMethodManager.finishInputLocked()",1,6,7
"android.view.inputmethod.InputMethodManager.focusIn(View)",1,1,1
"android.view.inputmethod.InputMethodManager.focusInLocked(View)",2,4,4
"android.view.inputmethod.InputMethodManager.focusOut(View)",1,5,5
"android.view.inputmethod.InputMethodManager.getClient()",1,1,1
"android.view.inputmethod.InputMethodManager.getCurrentInputMethodSubtype()",1,2,2
"android.view.inputmethod.InputMethodManager.getEnabledInputMethodList()",1,1,2
"android.view.inputmethod.InputMethodManager.getEnabledInputMethodSubtypeList(InputMethodInfo,boolean)",1,1,2
"android.view.inputmethod.InputMethodManager.getInputContext()",1,1,1
"android.view.inputmethod.InputMethodManager.getInputMethodList()",1,1,2
"android.view.inputmethod.InputMethodManager.getInstance(Context)",1,1,1
"android.view.inputmethod.InputMethodManager.getInstance(Looper)",2,1,2
"android.view.inputmethod.InputMethodManager.getShortcutInputMethodsAndSubtypes()",5,7,9
"android.view.inputmethod.InputMethodManager.hideSoftInputFromInputMethod(IBinder,int)",1,1,2
"android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(IBinder,int)",1,1,1
"android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(IBinder,int,ResultReceiver)",2,2,4
"android.view.inputmethod.InputMethodManager.hideStatusIcon(IBinder)",1,1,2
"android.view.inputmethod.InputMethodManager.isAcceptingText()",1,1,1
"android.view.inputmethod.InputMethodManager.isActive()",1,1,2
"android.view.inputmethod.InputMethodManager.isActive(View)",1,4,4
"android.view.inputmethod.InputMethodManager.isFullscreenMode()",1,1,1
"android.view.inputmethod.InputMethodManager.isWatchingCursor(View)",1,1,1
"android.view.inputmethod.InputMethodManager.onWindowFocus(View,View,int,boolean,int)",1,5,7
"android.view.inputmethod.InputMethodManager.peekInstance()",1,1,1
"android.view.inputmethod.InputMethodManager.reportFinishInputConnection(InputConnection)",1,2,2
"android.view.inputmethod.InputMethodManager.restartInput(View)",2,3,4
"android.view.inputmethod.InputMethodManager.scheduleCheckFocusLocked(View)",1,3,3
"android.view.inputmethod.InputMethodManager.sendAppPrivateCommand(View,String,Bundle)",2,7,8
"android.view.inputmethod.InputMethodManager.setCurrentInputMethodSubtype(InputMethodSubtype)",1,2,2
"android.view.inputmethod.InputMethodManager.setFullscreenMode(boolean)",1,1,1
"android.view.inputmethod.InputMethodManager.setIMEButtonVisible(IBinder,boolean)",1,1,2
"android.view.inputmethod.InputMethodManager.setInputMethod(IBinder,String)",1,1,2
"android.view.inputmethod.InputMethodManager.setInputMethodAndSubtype(IBinder,String,InputMethodSubtype)",1,1,2
"android.view.inputmethod.InputMethodManager.showInputMethodAndSubtypeEnabler(String)",1,2,2
"android.view.inputmethod.InputMethodManager.showInputMethodPicker()",1,2,2
"android.view.inputmethod.InputMethodManager.showSoftInput(View,int)",1,1,1
"android.view.inputmethod.InputMethodManager.showSoftInput(View,int,ResultReceiver)",2,3,5
"android.view.inputmethod.InputMethodManager.showSoftInputFromInputMethod(IBinder,int)",1,1,2
"android.view.inputmethod.InputMethodManager.showSoftInputUnchecked(int,ResultReceiver)",1,1,2
"android.view.inputmethod.InputMethodManager.showStatusIcon(IBinder,String,int)",1,1,2
"android.view.inputmethod.InputMethodManager.startGettingWindowFocus(View)",1,1,1
"android.view.inputmethod.InputMethodManager.startInputInner()",7,19,22
"android.view.inputmethod.InputMethodManager.switchToLastInputMethod(IBinder)",1,2,2
"android.view.inputmethod.InputMethodManager.toggleSoftInput(int,int)",1,2,3
"android.view.inputmethod.InputMethodManager.toggleSoftInputFromWindow(IBinder,int,int)",2,3,5
"android.view.inputmethod.InputMethodManager.updateCursor(View,int,int,int,int)",2,9,10
"android.view.inputmethod.InputMethodManager.updateExtractedText(View,int,ExtractedText)",2,4,6
"android.view.inputmethod.InputMethodManager.updateSelection(View,int,int,int,int)",2,9,13
"android.view.inputmethod.InputMethodManager.windowDismissed(IBinder)",1,3,3
"android.view.inputmethod.InputMethodSubtype.InputMethodSubtype(Parcel)",1,1,4
"android.view.inputmethod.InputMethodSubtype.InputMethodSubtype(int,int,String,String,String)",1,1,4
"android.view.inputmethod.InputMethodSubtype.describeContents()",1,1,1
"android.view.inputmethod.InputMethodSubtype.equals(Object)",2,7,7
"android.view.inputmethod.InputMethodSubtype.getExtraValue()",1,1,1
"android.view.inputmethod.InputMethodSubtype.getIconResId()",1,1,1
"android.view.inputmethod.InputMethodSubtype.getLocale()",1,1,1
"android.view.inputmethod.InputMethodSubtype.getMode()",1,1,1
"android.view.inputmethod.InputMethodSubtype.getNameResId()",1,1,1
"android.view.inputmethod.InputMethodSubtype.hashCode()",1,1,1
"android.view.inputmethod.InputMethodSubtype.hashCodeInternal(int,int,String,String,String)",1,1,1
"android.view.inputmethod.InputMethodSubtype.writeToParcel(Parcel,int)",1,1,1
"android.webkit.AccessibilityInjector.AccessibilityInjector(WebView)",1,1,1
"android.webkit.AccessibilityInjector.AccessibilityWebContentKeyBinding.AccessibilityWebContentKeyBinding(int,int[])",1,1,1
"android.webkit.AccessibilityInjector.AccessibilityWebContentKeyBinding.getAction(int)",1,1,1
"android.webkit.AccessibilityInjector.AccessibilityWebContentKeyBinding.getActionCode(int)",1,1,1
"android.webkit.AccessibilityInjector.AccessibilityWebContentKeyBinding.getActionCount()",1,1,1
"android.webkit.AccessibilityInjector.AccessibilityWebContentKeyBinding.getFirstArgument(int)",1,1,1
"android.webkit.AccessibilityInjector.AccessibilityWebContentKeyBinding.getKey()",1,1,1
"android.webkit.AccessibilityInjector.AccessibilityWebContentKeyBinding.getKeyCode()",1,1,1
"android.webkit.AccessibilityInjector.AccessibilityWebContentKeyBinding.getMetaState()",1,1,1
"android.webkit.AccessibilityInjector.AccessibilityWebContentKeyBinding.getSecondArgument(int)",1,1,1
"android.webkit.AccessibilityInjector.AccessibilityWebContentKeyBinding.getThirdArgument(int)",1,1,1
"android.webkit.AccessibilityInjector.AccessibilityWebContentKeyBinding.toString()",1,2,2
"android.webkit.AccessibilityInjector.ensureWebContentKeyBindings()",5,7,8
"android.webkit.AccessibilityInjector.getPartialyPopulatedAccessibilityEvent()",1,1,1
"android.webkit.AccessibilityInjector.onKeyEvent(KeyEvent)",7,3,13
"android.webkit.AccessibilityInjector.onSelectionStringChange(String)",2,3,4
"android.webkit.AccessibilityInjector.prefromAxisTransition(int,int,boolean,String)",1,2,2
"android.webkit.AccessibilityInjector.sendAccessibilityEvent(AccessibilityEvent)",1,2,2
"android.webkit.AccessibilityInjector.setCurrentAxis(int,boolean,String)",1,2,2
"android.webkit.AccessibilityInjector.traverseCurrentAxis(int,boolean,String)",1,1,1
"android.webkit.AccessibilityInjector.traverseGivenAxis(int,int,boolean,String)",2,3,4
"android.webkit.BrowserFrame.BrowserFrame(Context,WebViewCore,CallbackProxy,WebSettings,Map<String, Object>)",1,5,5
"android.webkit.BrowserFrame.ConfigCallback.ConfigCallback(WindowManager)",1,1,1
"android.webkit.BrowserFrame.ConfigCallback.addHandler(Handler)",1,1,1
"android.webkit.BrowserFrame.ConfigCallback.onConfigurationChanged(Configuration)",3,5,10
"android.webkit.BrowserFrame.ConfigCallback.onLowMemory()",1,1,1
"android.webkit.BrowserFrame.addJavascriptInterface(Object,String)",1,1,2
"android.webkit.BrowserFrame.cacheDisabled()",1,1,1
"android.webkit.BrowserFrame.certificate(SslCertificate)",1,2,2
"android.webkit.BrowserFrame.childFramesAsText()",1,1,1
"android.webkit.BrowserFrame.clearCache()",1,1,1
"android.webkit.BrowserFrame.closeWindow(WebViewCore)",1,1,1
"android.webkit.BrowserFrame.committed()",1,1,1
"android.webkit.BrowserFrame.createWindow(boolean,boolean)",1,1,1
"android.webkit.BrowserFrame.decidePolicyForFormResubmission(int)",1,1,1
"android.webkit.BrowserFrame.density()",1,1,1
"android.webkit.BrowserFrame.destroy()",1,1,1
"android.webkit.BrowserFrame.didFirstLayout()",1,2,2
"android.webkit.BrowserFrame.didReceiveAuthenticationChallenge(int,String,String,boolean)",1,1,1
"android.webkit.BrowserFrame.didReceiveIcon(Bitmap)",1,1,1
"android.webkit.BrowserFrame.didReceiveTouchIconUrl(String,boolean)",1,1,1
"android.webkit.BrowserFrame.documentAsText()",1,1,1
"android.webkit.BrowserFrame.documentAsText(Message)",1,3,3
"android.webkit.BrowserFrame.documentHasImages()",1,1,1
"android.webkit.BrowserFrame.downloadStart(String,String,String,String,long)",1,2,4
"android.webkit.BrowserFrame.externalRepresentation()",1,1,1
"android.webkit.BrowserFrame.externalRepresentation(Message)",1,1,1
"android.webkit.BrowserFrame.firstLayoutDone()",1,1,1
"android.webkit.BrowserFrame.getCallbackProxy()",1,1,1
"android.webkit.BrowserFrame.getFile(String,byte[],int,int)",1,4,6
"android.webkit.BrowserFrame.getFileSize(String)",1,1,2
"android.webkit.BrowserFrame.getFormTextData()",1,1,1
"android.webkit.BrowserFrame.getRawResFilename(int)",8,8,11
"android.webkit.BrowserFrame.getUserAgentString()",1,1,1
"android.webkit.BrowserFrame.getUsernamePassword()",1,1,1
"android.webkit.BrowserFrame.goBackOrForward(int)",1,1,1
"android.webkit.BrowserFrame.handleMessage(Message)",3,10,12
"android.webkit.BrowserFrame.handleUrl(String)",3,2,3
"android.webkit.BrowserFrame.hasPasswordField()",1,1,1
"android.webkit.BrowserFrame.inputStreamForAndroidResource(String)",7,11,13
"android.webkit.BrowserFrame.loadData(String,String,String,String,String)",1,4,8
"android.webkit.BrowserFrame.loadFinished(String,int,boolean)",1,3,4
"android.webkit.BrowserFrame.loadStarted(String,Bitmap,int,boolean)",1,7,8
"android.webkit.BrowserFrame.loadType()",1,1,1
"android.webkit.BrowserFrame.loadUrl(String,Map<String, String>)",1,2,2
"android.webkit.BrowserFrame.maybeSavePassword(byte[],String,String)",3,10,13
"android.webkit.BrowserFrame.nativeAddJavascriptInterface(int,Object,String)",1,1,1
"android.webkit.BrowserFrame.nativeAuthenticationCancel(int)",1,1,1
"android.webkit.BrowserFrame.nativeAuthenticationProceed(int,String,String)",1,1,1
"android.webkit.BrowserFrame.nativeCallPolicyFunction(int,int)",1,1,1
"android.webkit.BrowserFrame.nativeCreateFrame(WebViewCore,AssetManager,WebBackForwardList)",1,1,1
"android.webkit.BrowserFrame.nativeDestroyFrame()",1,1,1
"android.webkit.BrowserFrame.nativeGoBackOrForward(int)",1,1,1
"android.webkit.BrowserFrame.nativeLoadData(String,String,String,String,String)",1,1,1
"android.webkit.BrowserFrame.nativeLoadUrl(String,Map<String, String>)",1,1,1
"android.webkit.BrowserFrame.nativeOrientationChanged(int)",1,1,1
"android.webkit.BrowserFrame.nativePostUrl(String,byte[])",1,1,1
"android.webkit.BrowserFrame.nativeSaveWebArchive(String,boolean)",1,1,1
"android.webkit.BrowserFrame.nativeSslCertErrorCancel(int,int)",1,1,1
"android.webkit.BrowserFrame.nativeSslCertErrorProceed(int)",1,1,1
"android.webkit.BrowserFrame.nativeStopLoading()",1,1,1
"android.webkit.BrowserFrame.postUrl(String,byte[])",1,1,1
"android.webkit.BrowserFrame.reload(boolean)",1,1,1
"android.webkit.BrowserFrame.removeJavascriptInterface(String)",2,2,3
"android.webkit.BrowserFrame.reportError(int,String,String)",1,3,3
"android.webkit.BrowserFrame.reportSslCertError(int,int,byte[])",1,3,3
"android.webkit.BrowserFrame.requestFocus()",1,1,1
"android.webkit.BrowserFrame.resetLoadingStates()",1,1,1
"android.webkit.BrowserFrame.saveWebArchive(String,boolean)",1,1,1
"android.webkit.BrowserFrame.setCacheDisabled(boolean)",1,1,1
"android.webkit.BrowserFrame.setProgress(int)",1,3,4
"android.webkit.BrowserFrame.setTitle(String)",1,1,1
"android.webkit.BrowserFrame.setUsernamePassword(String,String)",1,1,1
"android.webkit.BrowserFrame.shouldInterceptRequest(String)",2,1,2
"android.webkit.BrowserFrame.startLoadingResource(int,String,String,HashMap,byte[],long,int,boolean,boolean,boolean,String,String)",2,8,11
"android.webkit.BrowserFrame.stopLoading()",1,2,2
"android.webkit.BrowserFrame.stringByEvaluatingJavaScriptFromString(String)",1,1,1
"android.webkit.BrowserFrame.transitionToCommitted(int,boolean)",1,2,2
"android.webkit.BrowserFrame.updateVisitedHistory(String,boolean)",1,1,1
"android.webkit.BrowserFrame.windowObjectCleared(int)",1,4,4
"android.webkit.ByteArrayBuilder.ByteArrayBuilder()",1,1,1
"android.webkit.ByteArrayBuilder.Chunk.Chunk(int)",1,1,1
"android.webkit.ByteArrayBuilder.Chunk.release()",1,1,1
"android.webkit.ByteArrayBuilder.append(byte[],int,int)",1,4,4
"android.webkit.ByteArrayBuilder.clear()",1,2,2
"android.webkit.ByteArrayBuilder.getByteSize()",1,2,2
"android.webkit.ByteArrayBuilder.getFirstChunk()",2,1,2
"android.webkit.ByteArrayBuilder.isEmpty()",1,1,1
"android.webkit.ByteArrayBuilder.obtainChunk(int)",3,2,4
"android.webkit.ByteArrayBuilder.processPoolLocked()",3,2,3
"android.webkit.CacheLoader.CacheLoader(LoadListener,CacheResult)",1,1,1
"android.webkit.CacheLoader.buildHeaders(Headers)",1,6,6
"android.webkit.CacheLoader.setupStreamAndSendStatus()",1,1,1
"android.webkit.CacheManager.CacheResult.getContentDisposition()",1,1,1
"android.webkit.CacheManager.CacheResult.getContentLength()",1,1,1
"android.webkit.CacheManager.CacheResult.getETag()",1,1,1
"android.webkit.CacheManager.CacheResult.getEncoding()",1,1,1
"android.webkit.CacheManager.CacheResult.getExpires()",1,1,1
"android.webkit.CacheManager.CacheResult.getExpiresString()",1,1,1
"android.webkit.CacheManager.CacheResult.getHttpStatusCode()",1,1,1
"android.webkit.CacheManager.CacheResult.getInputStream()",1,1,1
"android.webkit.CacheManager.CacheResult.getLastModified()",1,1,1
"android.webkit.CacheManager.CacheResult.getLocalPath()",1,1,1
"android.webkit.CacheManager.CacheResult.getLocation()",1,1,1
"android.webkit.CacheManager.CacheResult.getMimeType()",1,1,1
"android.webkit.CacheManager.CacheResult.getOutputStream()",1,1,1
"android.webkit.CacheManager.CacheResult.setContentLength(long)",1,1,1
"android.webkit.CacheManager.CacheResult.setEncoding(String)",1,1,1
"android.webkit.CacheManager.CacheResult.setInputStream(InputStream)",1,1,1
"android.webkit.CacheManager.appendAsHex(int,StringBuffer)",2,2,8
"android.webkit.CacheManager.cacheDisabled()",1,1,1
"android.webkit.CacheManager.cacheEmpty()",1,1,1
"android.webkit.CacheManager.checkCacheRedirect(int)",2,1,4
"android.webkit.CacheManager.cleanupCacheFile(CacheResult)",1,1,2
"android.webkit.CacheManager.clearCache()",1,1,1
"android.webkit.CacheManager.createCacheDirectory()",3,3,3
"android.webkit.CacheManager.createCacheFile(String,int,Headers,String,boolean)",1,1,1
"android.webkit.CacheManager.createCacheFile(String,int,Headers,String,long,boolean)",6,6,10
"android.webkit.CacheManager.disableTransaction()",2,2,2
"android.webkit.CacheManager.enableTransaction()",2,2,2
"android.webkit.CacheManager.endCacheTransaction()",1,1,1
"android.webkit.CacheManager.endTransaction()",1,2,2
"android.webkit.CacheManager.getCacheFile(String,Map<String, String>)",1,1,1
"android.webkit.CacheManager.getCacheFile(String,long,Map<String, String>)",7,11,14
"android.webkit.CacheManager.getCacheFileBaseDir()",1,1,1
"android.webkit.CacheManager.getDatabaseKey(String,long)",2,1,2
"android.webkit.CacheManager.init(Context)",1,3,3
"android.webkit.CacheManager.parseHeaders(int,Headers,String)",6,23,33
"android.webkit.CacheManager.removeAllCacheFiles()",2,4,6
"android.webkit.CacheManager.saveCacheFile(String,CacheResult)",1,1,1
"android.webkit.CacheManager.saveCacheFile(String,long,CacheResult)",3,4,9
"android.webkit.CacheManager.setCacheDisabled(boolean)",2,2,3
"android.webkit.CacheManager.setupFiles(String,CacheResult)",6,7,9
"android.webkit.CacheManager.startCacheTransaction()",1,1,1
"android.webkit.CacheManager.startTransaction()",1,1,1
"android.webkit.CacheManager.trimCacheIfNeeded()",5,6,9
"android.webkit.CallbackProxy.CallbackProxy(Context,WebView)",1,1,1
"android.webkit.CallbackProxy.ResultTransport.ResultTransport(E)",1,1,1
"android.webkit.CallbackProxy.ResultTransport.getResult()",1,1,1
"android.webkit.CallbackProxy.ResultTransport.setResult(E)",1,1,1
"android.webkit.CallbackProxy.UploadFile.getResult()",1,1,1
"android.webkit.CallbackProxy.UploadFile.onReceiveValue(Uri)",1,1,1
"android.webkit.CallbackProxy.UploadFileMessageData.UploadFileMessageData(UploadFile,String)",1,1,1
"android.webkit.CallbackProxy.UploadFileMessageData.getAcceptType()",1,1,1
"android.webkit.CallbackProxy.UploadFileMessageData.getUploadFile()",1,1,1
"android.webkit.CallbackProxy.addMessageToConsole(String,int,String,int)",2,1,2
"android.webkit.CallbackProxy.canShowAlertDialog()",1,1,1
"android.webkit.CallbackProxy.createWindow(boolean,boolean)",4,4,7
"android.webkit.CallbackProxy.doUpdateVisitedHistory(String,boolean)",2,1,3
"android.webkit.CallbackProxy.getBackForwardList()",1,1,1
"android.webkit.CallbackProxy.getJsDialogTitle(String)",1,2,3
"android.webkit.CallbackProxy.getProgress()",1,1,1
"android.webkit.CallbackProxy.getVisitedHistory(ValueCallback<String[]>)",2,1,2
"android.webkit.CallbackProxy.getWebBackForwardListClient()",1,1,1
"android.webkit.CallbackProxy.getWebChromeClient()",1,1,1
"android.webkit.CallbackProxy.getWebViewClient()",1,1,1
"android.webkit.CallbackProxy.handleMessage(Message)",3,47,92
"android.webkit.CallbackProxy.onCloseWindow(WebView)",2,1,2
"android.webkit.CallbackProxy.onDownloadStart(String,String,String,String,long)",2,1,2
"android.webkit.CallbackProxy.onExceededDatabaseQuota(String,String,long,long,long,QuotaUpdater)",2,2,2
"android.webkit.CallbackProxy.onFormResubmission(Message,Message)",2,2,2
"android.webkit.CallbackProxy.onGeolocationPermissionsHidePrompt()",2,1,2
"android.webkit.CallbackProxy.onGeolocationPermissionsShowPrompt(String,Callback)",2,1,2
"android.webkit.CallbackProxy.onIndexChanged(WebHistoryItem,int)",2,1,2
"android.webkit.CallbackProxy.onJsAlert(String,String)",2,2,3
"android.webkit.CallbackProxy.onJsBeforeUnload(String,String)",2,2,3
"android.webkit.CallbackProxy.onJsConfirm(String,String)",2,2,3
"android.webkit.CallbackProxy.onJsPrompt(String,String,String)",2,2,3
"android.webkit.CallbackProxy.onJsTimeout()",2,2,3
"android.webkit.CallbackProxy.onNewHistoryItem(WebHistoryItem)",2,1,2
"android.webkit.CallbackProxy.onPageFinished(String)",1,2,2
"android.webkit.CallbackProxy.onPageStarted(String,Bitmap)",2,2,3
"android.webkit.CallbackProxy.onProgressChanged(int)",3,2,4
"android.webkit.CallbackProxy.onReachedMaxAppCacheSize(long,long,QuotaUpdater)",2,2,2
"android.webkit.CallbackProxy.onReceivedCertificate(SslCertificate)",2,1,2
"android.webkit.CallbackProxy.onReceivedError(int,String,String)",2,1,2
"android.webkit.CallbackProxy.onReceivedHttpAuthCredentials(String,String,String,String)",1,1,1
"android.webkit.CallbackProxy.onReceivedHttpAuthRequest(HttpAuthHandler,String,String)",2,2,2
"android.webkit.CallbackProxy.onReceivedIcon(Bitmap)",2,2,3
"android.webkit.CallbackProxy.onReceivedSslError(SslErrorHandler,SslError)",2,2,2
"android.webkit.CallbackProxy.onReceivedTitle(String)",2,1,2
"android.webkit.CallbackProxy.onReceivedTouchIconUrl(String,boolean)",2,2,4
"android.webkit.CallbackProxy.onRequestFocus()",2,1,2
"android.webkit.CallbackProxy.onSavePassword(String,String,String,Message)",1,3,3
"android.webkit.CallbackProxy.onScaleChanged(float,float)",2,1,2
"android.webkit.CallbackProxy.onTooManyRedirects(Message,Message)",1,1,1
"android.webkit.CallbackProxy.onUnhandledKeyEvent(KeyEvent)",2,1,2
"android.webkit.CallbackProxy.openFileChooser(String)",2,2,3
"android.webkit.CallbackProxy.setDownloadListener(DownloadListener)",1,1,1
"android.webkit.CallbackProxy.setInstallableWebApp()",2,1,2
"android.webkit.CallbackProxy.setWebBackForwardListClient(WebBackForwardListClient)",1,1,1
"android.webkit.CallbackProxy.setWebChromeClient(WebChromeClient)",1,1,1
"android.webkit.CallbackProxy.setWebViewClient(WebViewClient)",1,1,1
"android.webkit.CallbackProxy.shouldInterceptRequest(String)",2,2,3
"android.webkit.CallbackProxy.shouldOverrideUrlLoading(String)",1,2,2
"android.webkit.CallbackProxy.switchOutDrawHistory()",1,1,1
"android.webkit.CallbackProxy.uiOverrideKeyEvent(KeyEvent)",2,2,2
"android.webkit.CallbackProxy.uiOverrideUrlLoading(String)",2,3,5
"android.webkit.CertTool.CertTool()",1,1,1
"android.webkit.CertTool.addCertificate(Context,String,byte[])",1,1,1
"android.webkit.CertTool.getKeyStrengthList()",1,1,1
"android.webkit.CertTool.getSignedPublicKey(Context,int,String)",1,2,3
"android.webkit.ConsoleMessage.ConsoleMessage(String,String,int,MessageLevel)",1,1,1
"android.webkit.ConsoleMessage.lineNumber()",1,1,1
"android.webkit.ConsoleMessage.message()",1,1,1
"android.webkit.ConsoleMessage.messageLevel()",1,1,1
"android.webkit.ConsoleMessage.sourceId()",1,1,1
"android.webkit.ContentLoader.ContentLoader(String,LoadListener)",1,2,2
"android.webkit.ContentLoader.buildHeaders(Headers)",1,2,2
"android.webkit.ContentLoader.errString(Exception)",1,1,2
"android.webkit.ContentLoader.setupStreamAndSendStatus()",2,4,4
"android.webkit.CookieManager.Cookie.Cookie()",1,1,1
"android.webkit.CookieManager.Cookie.Cookie(String,String)",1,1,1
"android.webkit.CookieManager.Cookie.domainMatch(String)",4,4,4
"android.webkit.CookieManager.Cookie.exactMatch(Cookie)",1,4,4
"android.webkit.CookieManager.Cookie.pathMatch(String)",4,5,5
"android.webkit.CookieManager.Cookie.toString()",1,1,1
"android.webkit.CookieManager.CookieComparator.compare(Cookie,Cookie)",6,1,6
"android.webkit.CookieManager.CookieManager()",1,1,1
"android.webkit.CookieManager.acceptCookie()",2,2,2
"android.webkit.CookieManager.clone()",1,1,1
"android.webkit.CookieManager.deleteACookie(Cookie)",1,4,4
"android.webkit.CookieManager.deleteLRUDomain()",1,12,13
"android.webkit.CookieManager.flushCookieStore()",1,2,2
"android.webkit.CookieManager.getBaseDomain(String)",2,3,3
"android.webkit.CookieManager.getCookie(String)",2,3,3
"android.webkit.CookieManager.getCookie(WebAddress)",4,14,19
"android.webkit.CookieManager.getHostAndPath(WebAddress)",3,5,8
"android.webkit.CookieManager.getInstance()",1,1,2
"android.webkit.CookieManager.getUpdatedCookiesSince(long)",1,4,4
"android.webkit.CookieManager.hasCookies()",2,2,2
"android.webkit.CookieManager.nativeAcceptCookie()",1,1,1
"android.webkit.CookieManager.nativeFlushCookieStore()",1,1,1
"android.webkit.CookieManager.nativeGetCookie(String)",1,1,1
"android.webkit.CookieManager.nativeHasCookies()",1,1,1
"android.webkit.CookieManager.nativeRemoveAllCookie()",1,1,1
"android.webkit.CookieManager.nativeRemoveExpiredCookie()",1,1,1
"android.webkit.CookieManager.nativeRemoveSessionCookie()",1,1,1
"android.webkit.CookieManager.nativeSetAcceptCookie(boolean)",1,1,1
"android.webkit.CookieManager.nativeSetCookie(String,String)",1,1,1
"android.webkit.CookieManager.parseCookie(String,String,String)",25,32,63
"android.webkit.CookieManager.removeAllCookie()",2,2,2
"android.webkit.CookieManager.removeExpiredCookie()",2,5,6
"android.webkit.CookieManager.removeSessionCookie()",2,5,5
"android.webkit.CookieManager.setAcceptCookie(boolean)",2,2,2
"android.webkit.CookieManager.setCookie(String,String)",2,3,3
"android.webkit.CookieManager.setCookie(WebAddress,String)",8,15,27
"android.webkit.CookieManager.signalCookieOperationsComplete()",1,1,1
"android.webkit.CookieManager.signalCookieOperationsStart()",1,1,1
"android.webkit.CookieManager.syncedACookie(Cookie)",1,1,1
"android.webkit.CookieManager.waitForCookieOperationsToComplete()",1,2,3
"android.webkit.CookieSyncManager.CookieSyncManager(Context)",1,1,1
"android.webkit.CookieSyncManager.checkInstanceIsCreated()",2,1,2
"android.webkit.CookieSyncManager.clearAllCookies()",2,1,2
"android.webkit.CookieSyncManager.clearExpiredCookies(long)",2,1,2
"android.webkit.CookieSyncManager.clearSessionCookies()",2,1,2
"android.webkit.CookieSyncManager.createInstance(Context)",1,1,2
"android.webkit.CookieSyncManager.getCookiesForDomain(String)",2,1,2
"android.webkit.CookieSyncManager.getInstance()",1,1,1
"android.webkit.CookieSyncManager.hasCookies()",2,1,2
"android.webkit.CookieSyncManager.syncFromRamToFlash()",2,3,4
"android.webkit.CookieSyncManager.syncFromRamToFlash(ArrayList<Cookie>)",1,5,5
"android.webkit.DataLoader.DataLoader(String,LoadListener)",1,3,4
"android.webkit.DataLoader.buildHeaders(Headers)",1,1,1
"android.webkit.DataLoader.setupStreamAndSendStatus()",2,2,2
"android.webkit.DateSorter.DateSorter(Context)",1,1,1
"android.webkit.DateSorter.beginningOfDay(Calendar)",1,1,1
"android.webkit.DateSorter.getBoundary(int)",2,1,4
"android.webkit.DateSorter.getIndex(long)",3,1,3
"android.webkit.DateSorter.getLabel(int)",2,1,3
"android.webkit.DeviceMotionAndOrientationManager.DeviceMotionAndOrientationManager(WebViewCore)",1,1,1
"android.webkit.DeviceMotionAndOrientationManager.nativeOnMotionChange(WebViewCore,boolean,double,boolean,double,boolean,double,double)",1,1,1
"android.webkit.DeviceMotionAndOrientationManager.nativeOnOrientationChange(WebViewCore,boolean,double,boolean,double,boolean,double)",1,1,1
"android.webkit.DeviceMotionAndOrientationManager.nativeSetMockOrientation(WebViewCore,boolean,double,boolean,double,boolean,double)",1,1,1
"android.webkit.DeviceMotionAndOrientationManager.nativeUseMock(WebViewCore)",1,1,1
"android.webkit.DeviceMotionAndOrientationManager.onMotionChange(Double,Double,Double,double)",1,4,4
"android.webkit.DeviceMotionAndOrientationManager.onOrientationChange(Double,Double,Double)",1,4,4
"android.webkit.DeviceMotionAndOrientationManager.setMockOrientation(boolean,double,boolean,double,boolean,double)",1,1,1
"android.webkit.DeviceMotionAndOrientationManager.useMock()",1,1,1
"android.webkit.DeviceMotionService.DeviceMotionService(DeviceMotionAndOrientationManager,Context)",1,1,1
"android.webkit.DeviceMotionService.createHandler()",2,1,2
"android.webkit.DeviceMotionService.getSensorManager()",1,2,2
"android.webkit.DeviceMotionService.onAccuracyChanged(Sensor,int)",1,1,1
"android.webkit.DeviceMotionService.onSensorChanged(SensorEvent)",1,2,2
"android.webkit.DeviceMotionService.registerForAccelerometerSensor()",2,1,2
"android.webkit.DeviceMotionService.registerForSensor()",1,2,2
"android.webkit.DeviceMotionService.resume()",1,2,2
"android.webkit.DeviceMotionService.sendErrorEvent()",2,2,3
"android.webkit.DeviceMotionService.start()",1,1,1
"android.webkit.DeviceMotionService.startSendingUpdates()",1,1,1
"android.webkit.DeviceMotionService.stop()",1,1,1
"android.webkit.DeviceMotionService.stopSendingUpdates()",1,1,1
"android.webkit.DeviceMotionService.suspend()",1,2,2
"android.webkit.DeviceMotionService.unregisterFromSensor()",1,1,1
"android.webkit.DeviceOrientationService.DeviceOrientationService(DeviceMotionAndOrientationManager,Context)",1,1,1
"android.webkit.DeviceOrientationService.getOrientationUsingGetRotationMatrix()",3,1,7
"android.webkit.DeviceOrientationService.getSensorManager()",1,2,2
"android.webkit.DeviceOrientationService.maybeSendChange(double,double,double)",1,7,7
"android.webkit.DeviceOrientationService.onAccuracyChanged(Sensor,int)",1,1,1
"android.webkit.DeviceOrientationService.onSensorChanged(SensorEvent)",3,2,7
"android.webkit.DeviceOrientationService.registerForAccelerometerSensor()",2,1,2
"android.webkit.DeviceOrientationService.registerForMagneticFieldSensor()",2,1,2
"android.webkit.DeviceOrientationService.registerForSensors()",1,3,4
"android.webkit.DeviceOrientationService.resume()",1,2,2
"android.webkit.DeviceOrientationService.sendErrorEvent()",2,2,3
"android.webkit.DeviceOrientationService.start()",1,1,1
"android.webkit.DeviceOrientationService.stop()",1,1,1
"android.webkit.DeviceOrientationService.suspend()",1,2,2
"android.webkit.DeviceOrientationService.unregisterFromSensors()",1,1,1
"android.webkit.FileLoader.FileLoader(String,LoadListener,int,boolean)",1,6,6
"android.webkit.FileLoader.buildHeaders(Headers)",1,1,1
"android.webkit.FileLoader.errString(Exception)",1,1,2
"android.webkit.FileLoader.setupStreamAndSendStatus()",7,14,18
"android.webkit.FindActionModeCallback.FindActionModeCallback(Context)",1,1,1
"android.webkit.FindActionModeCallback.afterTextChanged(Editable)",1,1,1
"android.webkit.FindActionModeCallback.beforeTextChanged(CharSequence,int,int,int)",1,1,1
"android.webkit.FindActionModeCallback.findAll()",2,3,4
"android.webkit.FindActionModeCallback.findNext(boolean)",2,1,2
"android.webkit.FindActionModeCallback.finish()",1,1,1
"android.webkit.FindActionModeCallback.onActionItemClicked(ActionMode,MenuItem)",4,3,6
"android.webkit.FindActionModeCallback.onCreateActionMode(ActionMode,Menu)",1,1,1
"android.webkit.FindActionModeCallback.onDestroyActionMode(ActionMode)",1,1,1
"android.webkit.FindActionModeCallback.onLongClick(View)",1,1,1
"android.webkit.FindActionModeCallback.onPrepareActionMode(ActionMode,Menu)",1,1,1
"android.webkit.FindActionModeCallback.onTextChanged(CharSequence,int,int,int)",1,1,1
"android.webkit.FindActionModeCallback.setText(String)",1,1,1
"android.webkit.FindActionModeCallback.setWebView(WebView)",2,1,2
"android.webkit.FindActionModeCallback.updateMatchesString()",1,1,1
"android.webkit.FrameLoader.FrameLoader(LoadListener,WebSettings,String,WebResourceResponse)",1,1,1
"android.webkit.FrameLoader.executeLoad()",7,8,9
"android.webkit.FrameLoader.getLoadListener()",1,1,1
"android.webkit.FrameLoader.handleCache()",5,7,8
"android.webkit.FrameLoader.handleHTTPLoad()",3,4,7
"android.webkit.FrameLoader.handleLocalFile(String,LoadListener,WebSettings)",7,12,12
"android.webkit.FrameLoader.populateHeaders()",1,7,8
"android.webkit.FrameLoader.populateStaticHeaders()",1,6,6
"android.webkit.FrameLoader.setCacheMode(int)",1,1,1
"android.webkit.FrameLoader.setContentTypeForPost(String)",1,1,1
"android.webkit.FrameLoader.setHeaders(HashMap)",1,1,1
"android.webkit.FrameLoader.setPostData(byte[])",1,1,1
"android.webkit.FrameLoader.setReferrer(String)",1,1,2
"android.webkit.FrameLoader.startCacheLoad(CacheResult)",1,3,3
"android.webkit.GeolocationPermissions.allow(String)",1,1,1
"android.webkit.GeolocationPermissions.clear(String)",1,1,1
"android.webkit.GeolocationPermissions.clearAll()",1,1,1
"android.webkit.GeolocationPermissions.createHandler()",2,5,9
"android.webkit.GeolocationPermissions.createUIHandler()",2,3,4
"android.webkit.GeolocationPermissions.getAllowed(String,ValueCallback<Boolean>)",3,3,4
"android.webkit.GeolocationPermissions.getInstance()",1,1,2
"android.webkit.GeolocationPermissions.getOrigins(ValueCallback<Set<String>>)",1,3,3
"android.webkit.GeolocationPermissions.nativeAllow(String)",1,1,1
"android.webkit.GeolocationPermissions.nativeClear(String)",1,1,1
"android.webkit.GeolocationPermissions.nativeClearAll()",1,1,1
"android.webkit.GeolocationPermissions.nativeGetAllowed(String)",1,1,1
"android.webkit.GeolocationPermissions.nativeGetOrigins()",1,1,1
"android.webkit.GeolocationPermissions.postMessage(Message)",1,2,3
"android.webkit.GeolocationPermissions.postUIMessage(Message)",1,2,2
"android.webkit.GeolocationService.GeolocationService(Context,long)",1,2,2
"android.webkit.GeolocationService.maybeReportError(String)",1,2,4
"android.webkit.GeolocationService.nativeNewErrorAvailable(long,String)",1,1,1
"android.webkit.GeolocationService.nativeNewLocationAvailable(long,Location)",1,1,1
"android.webkit.GeolocationService.onLocationChanged(Location)",1,2,2
"android.webkit.GeolocationService.onProviderDisabled(String)",1,2,3
"android.webkit.GeolocationService.onProviderEnabled(String)",1,2,3
"android.webkit.GeolocationService.onStatusChanged(String,int,Bundle)",1,2,3
"android.webkit.GeolocationService.registerForLocationUpdates()",1,3,5
"android.webkit.GeolocationService.setEnableGps(boolean)",1,3,3
"android.webkit.GeolocationService.start()",1,1,2
"android.webkit.GeolocationService.stop()",1,1,1
"android.webkit.GeolocationService.unregisterFromLocationUpdates()",1,1,1
"android.webkit.HTML5Audio.HTML5Audio(int)",1,1,1
"android.webkit.HTML5Audio.TimeupdateTask.run()",1,1,1
"android.webkit.HTML5Audio.getMaxTimeSeekable()",1,1,1
"android.webkit.HTML5Audio.handleMessage(Message)",2,4,5
"android.webkit.HTML5Audio.nativeOnBuffering(int,int)",1,1,1
"android.webkit.HTML5Audio.nativeOnEnded(int)",1,1,1
"android.webkit.HTML5Audio.nativeOnPrepared(int,int,int,int)",1,1,1
"android.webkit.HTML5Audio.nativeOnTimeupdate(int,int)",1,1,1
"android.webkit.HTML5Audio.onBufferingUpdate(MediaPlayer,int)",1,1,1
"android.webkit.HTML5Audio.onCompletion(MediaPlayer)",1,1,1
"android.webkit.HTML5Audio.onError(MediaPlayer,int,int)",1,1,1
"android.webkit.HTML5Audio.onPrepared(MediaPlayer)",1,3,3
"android.webkit.HTML5Audio.onSeekComplete(MediaPlayer)",1,1,1
"android.webkit.HTML5Audio.pause()",1,3,3
"android.webkit.HTML5Audio.play()",1,3,5
"android.webkit.HTML5Audio.resetMediaPlayer()",1,3,3
"android.webkit.HTML5Audio.seek(int)",1,2,2
"android.webkit.HTML5Audio.setDataSource(String)",1,3,3
"android.webkit.HTML5Audio.teardown()",1,1,1
"android.webkit.HTML5VideoViewProxy.HTML5VideoViewProxy(WebView,int)",1,1,1
"android.webkit.HTML5VideoViewProxy.PosterDownloader.PosterDownloader(String,HTML5VideoViewProxy)",1,1,1
"android.webkit.HTML5VideoViewProxy.PosterDownloader.cancelAndReleaseQueue()",1,2,2
"android.webkit.HTML5VideoViewProxy.PosterDownloader.certificate(SslCertificate)",1,1,1
"android.webkit.HTML5VideoViewProxy.PosterDownloader.cleanup()",1,2,3
"android.webkit.HTML5VideoViewProxy.PosterDownloader.data(byte[],int)",1,1,2
"android.webkit.HTML5VideoViewProxy.PosterDownloader.endData()",1,6,7
"android.webkit.HTML5VideoViewProxy.PosterDownloader.error(int,String)",1,1,1
"android.webkit.HTML5VideoViewProxy.PosterDownloader.handleSslErrorRequest(SslError)",1,1,1
"android.webkit.HTML5VideoViewProxy.PosterDownloader.headers(Headers)",1,1,1
"android.webkit.HTML5VideoViewProxy.PosterDownloader.releaseQueue()",2,2,3
"android.webkit.HTML5VideoViewProxy.PosterDownloader.retainQueue()",1,2,2
"android.webkit.HTML5VideoViewProxy.PosterDownloader.start()",1,1,1
"android.webkit.HTML5VideoViewProxy.PosterDownloader.status(int,int,int,String)",1,1,1
"android.webkit.HTML5VideoViewProxy.VideoPlayer.TimeupdateTask.TimeupdateTask(HTML5VideoViewProxy)",1,1,1
"android.webkit.HTML5VideoViewProxy.VideoPlayer.TimeupdateTask.run()",1,1,1
"android.webkit.HTML5VideoViewProxy.VideoPlayer.getCurrentPosition()",1,2,2
"android.webkit.HTML5VideoViewProxy.VideoPlayer.isPlaying(HTML5VideoViewProxy)",1,3,3
"android.webkit.HTML5VideoViewProxy.VideoPlayer.onPrepared()",2,1,3
"android.webkit.HTML5VideoViewProxy.VideoPlayer.pause(HTML5VideoViewProxy)",1,2,3
"android.webkit.HTML5VideoViewProxy.VideoPlayer.play(String,int,HTML5VideoViewProxy,WebChromeClient)",3,6,6
"android.webkit.HTML5VideoViewProxy.VideoPlayer.seek(int,HTML5VideoViewProxy)",1,2,4
"android.webkit.HTML5VideoViewProxy.createWebCoreHandler()",2,3,6
"android.webkit.HTML5VideoViewProxy.dispatchOnEnded()",1,1,1
"android.webkit.HTML5VideoViewProxy.dispatchOnPaused()",1,1,1
"android.webkit.HTML5VideoViewProxy.doSetPoster(Bitmap)",2,1,2
"android.webkit.HTML5VideoViewProxy.getContext()",1,1,1
"android.webkit.HTML5VideoViewProxy.getInstance(WebViewCore,int)",1,1,1
"android.webkit.HTML5VideoViewProxy.getWebView()",1,1,1
"android.webkit.HTML5VideoViewProxy.handleMessage(Message)",2,11,13
"android.webkit.HTML5VideoViewProxy.loadPoster(String)",2,3,3
"android.webkit.HTML5VideoViewProxy.nativeOnEnded(int)",1,1,1
"android.webkit.HTML5VideoViewProxy.nativeOnPaused(int)",1,1,1
"android.webkit.HTML5VideoViewProxy.nativeOnPosterFetched(Bitmap,int)",1,1,1
"android.webkit.HTML5VideoViewProxy.nativeOnPrepared(int,int,int,int)",1,1,1
"android.webkit.HTML5VideoViewProxy.nativeOnTimeupdate(int,int)",1,1,1
"android.webkit.HTML5VideoViewProxy.onCompletion(MediaPlayer)",1,1,1
"android.webkit.HTML5VideoViewProxy.onError(MediaPlayer,int,int)",1,1,1
"android.webkit.HTML5VideoViewProxy.onPrepared(MediaPlayer)",1,1,1
"android.webkit.HTML5VideoViewProxy.onTimeupdate()",1,1,1
"android.webkit.HTML5VideoViewProxy.pause()",1,1,1
"android.webkit.HTML5VideoViewProxy.play(String)",2,1,2
"android.webkit.HTML5VideoViewProxy.seek(int)",1,1,1
"android.webkit.HTML5VideoViewProxy.sendTimeupdate()",1,1,1
"android.webkit.HTML5VideoViewProxy.teardown()",1,2,2
"android.webkit.HttpAuthHandler.HttpAuthHandler()",1,1,1
"android.webkit.HttpAuthHandler.cancel()",1,1,1
"android.webkit.HttpAuthHandler.proceed(String,String)",1,1,1
"android.webkit.HttpAuthHandler.useHttpAuthUsernamePassword()",1,1,1
"android.webkit.HttpAuthHandlerImpl.HttpAuthHandlerImpl(Network)",1,1,1
"android.webkit.HttpAuthHandlerImpl.cancel()",2,2,2
"android.webkit.HttpAuthHandlerImpl.handleAuthRequest(LoadListener)",2,3,3
"android.webkit.HttpAuthHandlerImpl.handleMessage(Message)",2,2,3
"android.webkit.HttpAuthHandlerImpl.handleResponseForSynchronousRequest(String,String)",2,1,2
"android.webkit.HttpAuthHandlerImpl.onReceivedCredentials(LoadListener,String,String,String,String)",1,1,1
"android.webkit.HttpAuthHandlerImpl.proceed(String,String)",2,2,2
"android.webkit.HttpAuthHandlerImpl.processNextLoader()",1,3,3
"android.webkit.HttpAuthHandlerImpl.signalRequestComplete()",1,1,1
"android.webkit.HttpAuthHandlerImpl.useHttpAuthUsernamePassword()",2,2,2
"android.webkit.HttpAuthHandlerImpl.waitForRequestToComplete()",1,3,3
"android.webkit.JWebCoreJavaBridge.JWebCoreJavaBridge()",1,1,1
"android.webkit.JWebCoreJavaBridge.addPackageName(String)",1,1,1
"android.webkit.JWebCoreJavaBridge.addPackageNames(Set<String>)",1,1,1
"android.webkit.JWebCoreJavaBridge.cookies(String)",1,1,1
"android.webkit.JWebCoreJavaBridge.cookiesEnabled()",1,1,1
"android.webkit.JWebCoreJavaBridge.finalize()",1,1,1
"android.webkit.JWebCoreJavaBridge.fireSharedTimer()",1,1,1
"android.webkit.JWebCoreJavaBridge.getKeyStrengthList()",1,1,1
"android.webkit.JWebCoreJavaBridge.getPluginDirectories()",1,1,1
"android.webkit.JWebCoreJavaBridge.getPluginSharedDataDirectory()",1,1,1
"android.webkit.JWebCoreJavaBridge.getSignedPublicKey(int,String,String)",2,2,2
"android.webkit.JWebCoreJavaBridge.handleMessage(Message)",2,4,5
"android.webkit.JWebCoreJavaBridge.nativeConstructor()",1,1,1
"android.webkit.JWebCoreJavaBridge.nativeFinalize()",1,1,1
"android.webkit.JWebCoreJavaBridge.nativeServiceFuncPtrQueue()",1,1,1
"android.webkit.JWebCoreJavaBridge.nativeUpdatePluginDirectories(String[],boolean)",1,1,1
"android.webkit.JWebCoreJavaBridge.pause()",1,1,2
"android.webkit.JWebCoreJavaBridge.removeActiveWebView(WebView)",2,1,2
"android.webkit.JWebCoreJavaBridge.removePackageName(String)",1,1,1
"android.webkit.JWebCoreJavaBridge.resolveFilePathForContentUri(String)",3,2,3
"android.webkit.JWebCoreJavaBridge.resume()",1,3,3
"android.webkit.JWebCoreJavaBridge.setActiveWebView(WebView)",2,1,2
"android.webkit.JWebCoreJavaBridge.setCacheSize(int)",1,1,1
"android.webkit.JWebCoreJavaBridge.setCookies(String,String)",5,6,10
"android.webkit.JWebCoreJavaBridge.setNetworkOnLine(boolean)",1,1,1
"android.webkit.JWebCoreJavaBridge.setNetworkType(String,String)",1,1,1
"android.webkit.JWebCoreJavaBridge.setSharedTimer(long)",3,4,4
"android.webkit.JWebCoreJavaBridge.sharedTimerFired()",1,1,1
"android.webkit.JWebCoreJavaBridge.signalServiceFuncPtrQueue()",1,1,1
"android.webkit.JWebCoreJavaBridge.stopSharedTimer()",1,2,2
"android.webkit.JWebCoreJavaBridge.storeFilePathForContentUri(String,String)",1,1,2
"android.webkit.JWebCoreJavaBridge.updateProxy(String)",1,1,1
"android.webkit.JniUtil.JniUtil()",1,1,1
"android.webkit.JniUtil.checkIntialized()",2,1,2
"android.webkit.JniUtil.getCacheDirectory()",1,2,2
"android.webkit.JniUtil.getDatabaseDirectory()",1,2,2
"android.webkit.JniUtil.nativeUseChromiumHttpStack()",1,1,1
"android.webkit.JniUtil.setContext(Context)",2,1,2
"android.webkit.JniUtil.useChromiumHttpStack()",1,2,2
"android.webkit.JsPromptResult.JsPromptResult(CallbackProxy)",1,1,1
"android.webkit.JsPromptResult.confirm(String)",1,1,1
"android.webkit.JsPromptResult.getStringResult()",1,1,1
"android.webkit.JsPromptResult.handleDefault()",1,1,1
"android.webkit.JsResult.JsResult(CallbackProxy,boolean)",1,1,1
"android.webkit.JsResult.cancel()",1,1,1
"android.webkit.JsResult.confirm()",1,1,1
"android.webkit.JsResult.getResult()",1,1,1
"android.webkit.JsResult.handleDefault()",1,1,1
"android.webkit.JsResult.setReady()",1,2,2
"android.webkit.JsResult.wakeUp()",1,2,2
"android.webkit.L10nUtils.getLocalisedString(int)",1,1,1
"android.webkit.L10nUtils.loadStrings(Context)",2,2,3
"android.webkit.LoadListener.LoadListener(Context,BrowserFrame,String,int,boolean,boolean,boolean,boolean,long,String,String)",1,2,3
"android.webkit.LoadListener.attachRequestHandle(RequestHandle)",1,2,2
"android.webkit.LoadListener.authCredentialsInvalid()",1,3,3
"android.webkit.LoadListener.cancel()",1,4,4
"android.webkit.LoadListener.cancelled()",1,1,1
"android.webkit.LoadListener.certificate(SslCertificate)",1,2,2
"android.webkit.LoadListener.checkCache(Map<String, String>)",3,6,6
"android.webkit.LoadListener.clearNativeLoader()",1,1,1
"android.webkit.LoadListener.commitHeaders()",3,2,4
"android.webkit.LoadListener.commitHeadersCheckRedirect()",3,1,7
"android.webkit.LoadListener.commitLoad()",8,8,11
"android.webkit.LoadListener.contentLength()",1,1,1
"android.webkit.LoadListener.createNativeResponse()",1,2,4
"android.webkit.LoadListener.data(byte[],int)",1,3,3
"android.webkit.LoadListener.detachRequestHandle()",1,2,2
"android.webkit.LoadListener.doRedirect()",10,14,18
"android.webkit.LoadListener.downloadFile()",1,1,1
"android.webkit.LoadListener.endData()",1,2,2
"android.webkit.LoadListener.error(int,String)",1,2,2
"android.webkit.LoadListener.getContext()",1,1,1
"android.webkit.LoadListener.getErrorDescription()",1,1,1
"android.webkit.LoadListener.getErrorID()",1,1,1
"android.webkit.LoadListener.getFrame()",1,1,1
"android.webkit.LoadListener.getLoadListener(Context,BrowserFrame,String,int,boolean,boolean,boolean,boolean,long,String,String)",1,1,1
"android.webkit.LoadListener.getNativeLoaderCount()",1,1,1
"android.webkit.LoadListener.getWebAddress()",1,1,1
"android.webkit.LoadListener.guessMimeType()",1,3,4
"android.webkit.LoadListener.guessMimeTypeFromExtension(String)",1,2,2
"android.webkit.LoadListener.handleAuthResponse(String,String)",1,3,4
"android.webkit.LoadListener.handleCertificate(SslCertificate)",1,2,3
"android.webkit.LoadListener.handleEndData()",5,15,22
"android.webkit.LoadListener.handleError(int,String)",1,1,1
"android.webkit.LoadListener.handleHeaders(Headers)",5,23,31
"android.webkit.LoadListener.handleMessage(Message)",2,4,12
"android.webkit.LoadListener.handleSslError(SslError)",1,3,3
"android.webkit.LoadListener.handleSslErrorRequest(SslError)",3,3,5
"android.webkit.LoadListener.handleSslErrorResponse(boolean)",1,3,3
"android.webkit.LoadListener.handleStatus(int,int,int,String)",2,1,2
"android.webkit.LoadListener.headers(Headers)",2,3,4
"android.webkit.LoadListener.host()",2,2,2
"android.webkit.LoadListener.ignoreCallbacks()",1,1,5
"android.webkit.LoadListener.isSynchronous()",1,1,1
"android.webkit.LoadListener.loadSynchronousMessages()",2,2,4
"android.webkit.LoadListener.makeAuthResponse(String,String)",2,3,5
"android.webkit.LoadListener.mimeType()",1,1,1
"android.webkit.LoadListener.nativeAddData(byte[],int)",1,1,1
"android.webkit.LoadListener.nativeCreateResponse(String,int,String,String,long,String)",1,1,1
"android.webkit.LoadListener.nativeError(int,String,String)",1,1,1
"android.webkit.LoadListener.nativeFinished()",1,1,1
"android.webkit.LoadListener.nativeReceivedResponse(int)",1,1,1
"android.webkit.LoadListener.nativeRedirectedToUrl(String,String,int)",1,1,1
"android.webkit.LoadListener.nativeSetResponseHeader(int,String,String)",1,1,1
"android.webkit.LoadListener.notifyError()",1,2,3
"android.webkit.LoadListener.originalUrl()",2,1,2
"android.webkit.LoadListener.parseAuthHeader(String)",15,11,18
"android.webkit.LoadListener.parseContentTypeHeader(String)",1,9,9
"android.webkit.LoadListener.pauseLoad(boolean)",1,2,2
"android.webkit.LoadListener.postIdentifier()",1,1,1
"android.webkit.LoadListener.proxyAuthenticate()",2,2,2
"android.webkit.LoadListener.realm()",2,2,2
"android.webkit.LoadListener.resetCancel()",1,1,1
"android.webkit.LoadListener.sendMessageInternal(Message)",1,2,2
"android.webkit.LoadListener.setCacheLoader(CacheLoader)",1,1,1
"android.webkit.LoadListener.setNativeResponse()",1,1,1
"android.webkit.LoadListener.setRequestData(String,Map<String, String>,byte[])",1,1,1
"android.webkit.LoadListener.setUrl(String)",1,4,4
"android.webkit.LoadListener.sslError()",1,1,1
"android.webkit.LoadListener.status(int,int,int,String)",1,2,2
"android.webkit.LoadListener.tearDown()",1,4,4
"android.webkit.LoadListener.transferEncoding()",1,1,1
"android.webkit.LoadListener.url()",1,1,1
"android.webkit.LoadListener.willLoadFromCache(String,long)",1,2,2
"android.webkit.MimeTypeMap.MimeTypeMap()",1,1,1
"android.webkit.MimeTypeMap.getExtensionFromMimeType(String)",1,1,1
"android.webkit.MimeTypeMap.getFileExtensionFromUrl(String)",4,8,8
"android.webkit.MimeTypeMap.getMimeTypeFromExtension(String)",1,1,1
"android.webkit.MimeTypeMap.getSingleton()",1,1,1
"android.webkit.MimeTypeMap.hasExtension(String)",1,1,1
"android.webkit.MimeTypeMap.hasMimeType(String)",1,1,1
"android.webkit.MimeTypeMap.mimeTypeFromExtension(String)",1,1,1
"android.webkit.MimeTypeMap.remapGenericMimeType(String,String,String)",1,5,8
"android.webkit.MockGeolocation.getInstance()",1,1,2
"android.webkit.MockGeolocation.nativeSetError(int,String)",1,1,1
"android.webkit.MockGeolocation.nativeSetPosition(double,double,double)",1,1,1
"android.webkit.MockGeolocation.setError(int,String)",1,1,1
"android.webkit.MockGeolocation.setPosition(double,double,double)",1,1,1
"android.webkit.Network.Network(Context)",1,2,2
"android.webkit.Network.RoamingMonitor.onReceive(Context,Intent)",2,2,3
"android.webkit.Network.checkSslPrefTable(LoadListener,SslError)",2,2,3
"android.webkit.Network.clearUserSslPrefTable()",1,1,1
"android.webkit.Network.disablePlatformNotifications()",1,3,3
"android.webkit.Network.enablePlatformNotifications()",1,3,3
"android.webkit.Network.getInstance(Context)",1,3,3
"android.webkit.Network.getProxyHostname()",1,1,1
"android.webkit.Network.getProxyPassword()",1,1,1
"android.webkit.Network.getProxyUsername()",1,1,1
"android.webkit.Network.handleAuthRequest(LoadListener)",1,3,3
"android.webkit.Network.handleSslErrorRequest(LoadListener)",1,3,3
"android.webkit.Network.isValidProxySet()",1,1,1
"android.webkit.Network.monitorRoaming()",1,1,1
"android.webkit.Network.requestURL(String,Map<String, String>,byte[],LoadListener)",4,7,11
"android.webkit.Network.restoreState(Bundle)",1,2,2
"android.webkit.Network.saveState(Bundle)",1,2,2
"android.webkit.Network.setProxyPassword(String)",1,2,2
"android.webkit.Network.setProxyUsername(String)",1,2,2
"android.webkit.Network.startTiming()",1,1,1
"android.webkit.Network.stopMonitoringRoaming()",1,2,2
"android.webkit.Network.stopTiming()",1,1,1
"android.webkit.OverScrollGlow.OverScrollGlow(WebView)",1,1,1
"android.webkit.OverScrollGlow.absorbGlow(int,int,int,int,int,int)",1,12,16
"android.webkit.OverScrollGlow.drawEdgeGlows(Canvas)",1,5,5
"android.webkit.OverScrollGlow.isAnimating()",1,4,4
"android.webkit.OverScrollGlow.pullGlow(int,int,int,int,int,int)",1,14,14
"android.webkit.OverScrollGlow.releaseAll()",1,1,1
"android.webkit.OverScrollGlow.setOverScrollDeltas(int,int)",1,1,1
"android.webkit.PerfChecker.PerfChecker()",1,2,2
"android.webkit.PerfChecker.responseAlert(String)",1,3,3
"android.webkit.Plugin.DefaultClickHandler.handleClickEvent(Context)",1,2,2
"android.webkit.Plugin.DefaultClickHandler.onClick(DialogInterface,int)",1,1,1
"android.webkit.Plugin.Plugin(String,String,String,String)",1,1,1
"android.webkit.Plugin.dispatchClickEvent(Context)",1,2,2
"android.webkit.Plugin.getDescription()",1,1,1
"android.webkit.Plugin.getFileName()",1,1,1
"android.webkit.Plugin.getName()",1,1,1
"android.webkit.Plugin.getPath()",1,1,1
"android.webkit.Plugin.setClickHandler(PreferencesClickHandler)",1,1,1
"android.webkit.Plugin.setDescription(String)",1,1,1
"android.webkit.Plugin.setFileName(String)",1,1,1
"android.webkit.Plugin.setName(String)",1,1,1
"android.webkit.Plugin.setPath(String)",1,1,1
"android.webkit.Plugin.toString()",1,1,1
"android.webkit.PluginData.PluginData(InputStream,long,Map<String, String[]>,int)",1,1,1
"android.webkit.PluginData.getContentLength()",1,1,1
"android.webkit.PluginData.getHeaders()",1,1,1
"android.webkit.PluginData.getInputStream()",1,1,1
"android.webkit.PluginData.getStatusCode()",1,1,1
"android.webkit.PluginFullScreenHolder.PluginFullScreenHolder(WebView,int)",1,1,1
"android.webkit.PluginFullScreenHolder.onBackPressed()",1,1,1
"android.webkit.PluginFullScreenHolder.onKeyDown(int,KeyEvent)",2,2,2
"android.webkit.PluginFullScreenHolder.onKeyUp(int,KeyEvent)",2,2,2
"android.webkit.PluginFullScreenHolder.onStop()",1,3,3
"android.webkit.PluginFullScreenHolder.onTouchEvent(MotionEvent)",1,1,1
"android.webkit.PluginFullScreenHolder.onTrackballEvent(MotionEvent)",1,1,1
"android.webkit.PluginFullScreenHolder.setContentView(View)",1,3,3
"android.webkit.PluginList.PluginList()",1,1,1
"android.webkit.PluginList.addPlugin(Plugin)",1,2,2
"android.webkit.PluginList.clear()",1,1,1
"android.webkit.PluginList.getList()",1,1,1
"android.webkit.PluginList.pluginClicked(Context,int)",1,1,2
"android.webkit.PluginList.removePlugin(Plugin)",1,2,2
"android.webkit.PluginManager.PluginManager(Context)",1,1,1
"android.webkit.PluginManager.containsPluginPermissionAndSignatures(PackageInfo)",11,5,11
"android.webkit.PluginManager.containsPluginPermissionAndSignatures(String)",2,3,3
"android.webkit.PluginManager.getInstance(Context)",3,2,3
"android.webkit.PluginManager.getPluginClass(String,String)",1,1,1
"android.webkit.PluginManager.getPluginDirectories()",8,9,12
"android.webkit.PluginManager.getPluginSharedDataDirectory()",1,1,1
"android.webkit.PluginManager.getPluginsAPKName(String)",4,3,5
"android.webkit.PluginManager.refreshPlugins(boolean)",1,1,1
"android.webkit.SelectActionModeCallback.finish()",1,2,2
"android.webkit.SelectActionModeCallback.onActionItemClicked(ActionMode,MenuItem)",2,2,7
"android.webkit.SelectActionModeCallback.onCreateActionMode(ActionMode,Menu)",1,1,1
"android.webkit.SelectActionModeCallback.onDestroyActionMode(ActionMode)",1,1,1
"android.webkit.SelectActionModeCallback.onPrepareActionMode(ActionMode,Menu)",1,1,1
"android.webkit.SelectActionModeCallback.setWebView(WebView)",1,1,1
"android.webkit.SslCertLookupTable.Allow(SslError)",1,1,1
"android.webkit.SslCertLookupTable.Deny(SslError)",1,1,1
"android.webkit.SslCertLookupTable.IsAllowed(SslError)",1,1,1
"android.webkit.SslCertLookupTable.SslCertLookupTable()",1,1,1
"android.webkit.SslCertLookupTable.getInstance()",1,1,2
"android.webkit.SslErrorHandler.SslErrorHandler()",1,1,1
"android.webkit.SslErrorHandler.cancel()",1,1,1
"android.webkit.SslErrorHandler.proceed()",1,1,1
"android.webkit.SslErrorHandlerImpl.SslErrorHandlerImpl()",1,1,1
"android.webkit.SslErrorHandlerImpl.SslErrorHandlerImpl(SslErrorHandler,LoadListener)",1,1,1
"android.webkit.SslErrorHandlerImpl.cancel()",1,1,1
"android.webkit.SslErrorHandlerImpl.checkSslPrefTable(LoadListener,SslError)",3,4,5
"android.webkit.SslErrorHandlerImpl.clear()",1,1,1
"android.webkit.SslErrorHandlerImpl.fastProcessQueuedSslErrors()",1,1,2
"android.webkit.SslErrorHandlerImpl.handleMessage(Message)",2,2,2
"android.webkit.SslErrorHandlerImpl.handleSslErrorRequest(LoadListener)",1,4,4
"android.webkit.SslErrorHandlerImpl.handleSslErrorResponse(LoadListener,SslError,boolean)",1,8,9
"android.webkit.SslErrorHandlerImpl.proceed()",1,1,1
"android.webkit.SslErrorHandlerImpl.processNextLoader()",4,5,5
"android.webkit.SslErrorHandlerImpl.restoreState(Bundle)",1,3,3
"android.webkit.SslErrorHandlerImpl.saveState(Bundle)",1,2,2
"android.webkit.StreamLoader.StreamLoader(LoadListener)",1,1,1
"android.webkit.StreamLoader.closeStreamAndSendEndData()",1,2,3
"android.webkit.StreamLoader.handleMessage(Message)",4,5,10
"android.webkit.StreamLoader.load()",1,4,6
"android.webkit.StreamLoader.sendData()",3,4,4
"android.webkit.StreamLoader.sendHeaders()",1,2,2
"android.webkit.URLUtil.composeSearchUrl(String,String,String)",2,1,3
"android.webkit.URLUtil.decode(byte[])",5,4,5
"android.webkit.URLUtil.guessFileName(String,String,String)",1,18,23
"android.webkit.URLUtil.guessUrl(String)",6,6,11
"android.webkit.URLUtil.isAboutUrl(String)",1,2,2
"android.webkit.URLUtil.isAssetUrl(String)",1,2,2
"android.webkit.URLUtil.isContentUrl(String)",1,2,2
"android.webkit.URLUtil.isCookielessProxyUrl(String)",1,2,2
"android.webkit.URLUtil.isDataUrl(String)",1,2,2
"android.webkit.URLUtil.isFileUrl(String)",1,4,4
"android.webkit.URLUtil.isHttpUrl(String)",1,3,3
"android.webkit.URLUtil.isHttpsUrl(String)",1,3,3
"android.webkit.URLUtil.isJavaScriptUrl(String)",1,2,2
"android.webkit.URLUtil.isNetworkUrl(String)",2,3,4
"android.webkit.URLUtil.isResourceUrl(String)",1,2,2
"android.webkit.URLUtil.isValidUrl(String)",2,9,10
"android.webkit.URLUtil.parseContentDisposition(String)",2,2,3
"android.webkit.URLUtil.parseHex(byte)",4,1,7
"android.webkit.URLUtil.stripAnchor(String)",2,2,2
"android.webkit.URLUtil.verifyURLEncoding(String)",4,3,6
"android.webkit.UrlInterceptRegistry.getHandlers()",1,1,2
"android.webkit.UrlInterceptRegistry.getPluginData(String,Map<String, String>)",4,2,4
"android.webkit.UrlInterceptRegistry.getSurrogate(String,Map<String, String>)",4,2,4
"android.webkit.UrlInterceptRegistry.registerHandler(UrlInterceptHandler)",2,2,2
"android.webkit.UrlInterceptRegistry.setUrlInterceptDisabled(boolean)",1,1,1
"android.webkit.UrlInterceptRegistry.unregisterHandler(UrlInterceptHandler)",1,1,1
"android.webkit.UrlInterceptRegistry.urlInterceptDisabled()",1,1,1
"android.webkit.ViewManager.ChildView.ChildView()",1,1,1
"android.webkit.ViewManager.ChildView.attachView(int,int,int,int)",2,2,3
"android.webkit.ViewManager.ChildView.attachViewOnUIThread()",1,2,2
"android.webkit.ViewManager.ChildView.removeView()",2,1,2
"android.webkit.ViewManager.ChildView.removeViewOnUIThread()",1,1,1
"android.webkit.ViewManager.ChildView.setBounds(int,int,int,int)",1,1,1
"android.webkit.ViewManager.ViewManager(WebView)",1,1,1
"android.webkit.ViewManager.createView()",1,1,1
"android.webkit.ViewManager.endZoom()",1,2,2
"android.webkit.ViewManager.hideAll()",2,2,3
"android.webkit.ViewManager.hitTest(int,int)",5,2,8
"android.webkit.ViewManager.postReadyToDrawAll()",1,2,2
"android.webkit.ViewManager.postResetStateAll()",1,1,1
"android.webkit.ViewManager.requestLayout(ChildView)",3,11,17
"android.webkit.ViewManager.scaleAll()",1,2,2
"android.webkit.ViewManager.showAll()",2,2,3
"android.webkit.ViewManager.startZoom()",1,2,2
"android.webkit.WebBackForwardList.WebBackForwardList(CallbackProxy)",1,1,1
"android.webkit.WebBackForwardList.addHistoryItem(WebHistoryItem)",1,4,4
"android.webkit.WebBackForwardList.clone()",2,3,3
"android.webkit.WebBackForwardList.close(int)",1,1,1
"android.webkit.WebBackForwardList.getClearPending()",1,1,1
"android.webkit.WebBackForwardList.getCurrentIndex()",1,1,1
"android.webkit.WebBackForwardList.getCurrentItem()",1,1,1
"android.webkit.WebBackForwardList.getItemAtIndex(int)",2,2,3
"android.webkit.WebBackForwardList.getSize()",1,1,1
"android.webkit.WebBackForwardList.nativeClose(int)",1,1,1
"android.webkit.WebBackForwardList.removeHistoryItem(int)",2,1,3
"android.webkit.WebBackForwardList.restoreIndex(int,int)",1,1,1
"android.webkit.WebBackForwardList.setClearPending()",1,1,1
"android.webkit.WebBackForwardList.setCurrentIndex(int)",1,2,2
"android.webkit.WebBackForwardListClient.onIndexChanged(WebHistoryItem,int)",1,1,1
"android.webkit.WebBackForwardListClient.onNewHistoryItem(WebHistoryItem)",1,1,1
"android.webkit.WebChromeClient.getDefaultVideoPoster()",1,1,1
"android.webkit.WebChromeClient.getVideoLoadingProgressView()",1,1,1
"android.webkit.WebChromeClient.getVisitedHistory(ValueCallback<String[]>)",1,1,1
"android.webkit.WebChromeClient.onCloseWindow(WebView)",1,1,1
"android.webkit.WebChromeClient.onConsoleMessage(ConsoleMessage)",1,1,1
"android.webkit.WebChromeClient.onConsoleMessage(String,int,String)",1,1,1
"android.webkit.WebChromeClient.onCreateWindow(WebView,boolean,boolean,Message)",1,1,1
"android.webkit.WebChromeClient.onExceededDatabaseQuota(String,String,long,long,long,QuotaUpdater)",1,1,1
"android.webkit.WebChromeClient.onGeolocationPermissionsHidePrompt()",1,1,1
"android.webkit.WebChromeClient.onGeolocationPermissionsShowPrompt(String,Callback)",1,1,1
"android.webkit.WebChromeClient.onHideCustomView()",1,1,1
"android.webkit.WebChromeClient.onJsAlert(WebView,String,String,JsResult)",1,1,1
"android.webkit.WebChromeClient.onJsBeforeUnload(WebView,String,String,JsResult)",1,1,1
"android.webkit.WebChromeClient.onJsConfirm(WebView,String,String,JsResult)",1,1,1
"android.webkit.WebChromeClient.onJsPrompt(WebView,String,String,String,JsPromptResult)",1,1,1
"android.webkit.WebChromeClient.onJsTimeout()",1,1,1
"android.webkit.WebChromeClient.onProgressChanged(WebView,int)",1,1,1
"android.webkit.WebChromeClient.onReachedMaxAppCacheSize(long,long,QuotaUpdater)",1,1,1
"android.webkit.WebChromeClient.onReceivedIcon(WebView,Bitmap)",1,1,1
"android.webkit.WebChromeClient.onReceivedTitle(WebView,String)",1,1,1
"android.webkit.WebChromeClient.onReceivedTouchIconUrl(WebView,String,boolean)",1,1,1
"android.webkit.WebChromeClient.onRequestFocus(WebView)",1,1,1
"android.webkit.WebChromeClient.onShowCustomView(View,CustomViewCallback)",1,1,1
"android.webkit.WebChromeClient.openFileChooser(ValueCallback<Uri>,String)",1,1,1
"android.webkit.WebChromeClient.setInstallableWebApp()",1,1,1
"android.webkit.WebChromeClient.setupAutoFill(Message)",1,1,1
"android.webkit.WebHistoryItem.WebHistoryItem()",1,1,1
"android.webkit.WebHistoryItem.WebHistoryItem(WebHistoryItem)",1,1,1
"android.webkit.WebHistoryItem.WebHistoryItem(byte[])",1,1,1
"android.webkit.WebHistoryItem.clone()",1,1,1
"android.webkit.WebHistoryItem.getCustomData()",1,1,1
"android.webkit.WebHistoryItem.getFavicon()",1,1,1
"android.webkit.WebHistoryItem.getFlattenedData()",1,1,1
"android.webkit.WebHistoryItem.getId()",1,1,1
"android.webkit.WebHistoryItem.getOriginalUrl()",1,1,1
"android.webkit.WebHistoryItem.getTitle()",1,1,1
"android.webkit.WebHistoryItem.getTouchIconUrl()",3,1,4
"android.webkit.WebHistoryItem.getUrl()",1,1,1
"android.webkit.WebHistoryItem.inflate(int)",1,1,1
"android.webkit.WebHistoryItem.inflate(int,byte[])",1,1,1
"android.webkit.WebHistoryItem.setCustomData(Object)",1,1,1
"android.webkit.WebHistoryItem.setFavicon(Bitmap)",1,1,1
"android.webkit.WebHistoryItem.setTouchIconUrl(String,boolean)",1,1,3
"android.webkit.WebHistoryItem.update(String,String,String,Bitmap,byte[])",1,1,1
"android.webkit.WebIconDatabase.EventHandler.IconResult.IconResult(String,Bitmap,IconListener)",1,1,1
"android.webkit.WebIconDatabase.EventHandler.IconResult.dispatch()",1,1,1
"android.webkit.WebIconDatabase.EventHandler.bulkRequestIcons(Message)",1,5,5
"android.webkit.WebIconDatabase.EventHandler.createHandler()",2,4,10
"android.webkit.WebIconDatabase.EventHandler.handleMessage(Message)",2,2,2
"android.webkit.WebIconDatabase.EventHandler.hasHandler()",1,1,1
"android.webkit.WebIconDatabase.EventHandler.postMessage(Message)",1,2,2
"android.webkit.WebIconDatabase.EventHandler.requestIconAndSendResult(String,IconListener)",1,2,2
"android.webkit.WebIconDatabase.WebIconDatabase()",1,1,1
"android.webkit.WebIconDatabase.bulkRequestIconForPageUrl(ContentResolver,String,IconListener)",2,2,3
"android.webkit.WebIconDatabase.close()",1,1,1
"android.webkit.WebIconDatabase.createHandler()",1,1,1
"android.webkit.WebIconDatabase.getInstance()",1,1,2
"android.webkit.WebIconDatabase.nativeClose()",1,1,1
"android.webkit.WebIconDatabase.nativeIconForPageUrl(String)",1,1,1
"android.webkit.WebIconDatabase.nativeOpen(String)",1,1,1
"android.webkit.WebIconDatabase.nativeReleaseIconForPageUrl(String)",1,1,1
"android.webkit.WebIconDatabase.nativeRemoveAllIcons()",1,1,1
"android.webkit.WebIconDatabase.nativeRetainIconForPageUrl(String)",1,1,1
"android.webkit.WebIconDatabase.open(String)",1,2,2
"android.webkit.WebIconDatabase.releaseIconForPageUrl(String)",1,2,2
"android.webkit.WebIconDatabase.removeAllIcons()",1,1,1
"android.webkit.WebIconDatabase.requestIconForPageUrl(String,IconListener)",2,1,3
"android.webkit.WebIconDatabase.retainIconForPageUrl(String)",1,2,2
"android.webkit.WebResourceResponse.Loader.Loader(LoadListener)",1,1,1
"android.webkit.WebResourceResponse.Loader.buildHeaders(Headers)",1,1,1
"android.webkit.WebResourceResponse.Loader.setupStreamAndSendStatus()",1,1,2
"android.webkit.WebResourceResponse.WebResourceResponse(String,String,InputStream)",1,1,1
"android.webkit.WebResourceResponse.getData()",1,1,1
"android.webkit.WebResourceResponse.getEncoding()",1,1,1
"android.webkit.WebResourceResponse.getMimeType()",1,1,1
"android.webkit.WebResourceResponse.loader(LoadListener)",1,1,1
"android.webkit.WebResourceResponse.setData(InputStream)",1,1,1
"android.webkit.WebResourceResponse.setEncoding(String)",1,1,1
"android.webkit.WebResourceResponse.setMimeType(String)",1,1,1
"android.webkit.WebSettings.AutoFillProfile.AutoFillProfile(int,String,String,String,String,String,String,String,String,String,String)",1,1,1
"android.webkit.WebSettings.AutoFillProfile.getAddressLine1()",1,1,1
"android.webkit.WebSettings.AutoFillProfile.getAddressLine2()",1,1,1
"android.webkit.WebSettings.AutoFillProfile.getCity()",1,1,1
"android.webkit.WebSettings.AutoFillProfile.getCompanyName()",1,1,1
"android.webkit.WebSettings.AutoFillProfile.getCountry()",1,1,1
"android.webkit.WebSettings.AutoFillProfile.getEmailAddress()",1,1,1
"android.webkit.WebSettings.AutoFillProfile.getFullName()",1,1,1
"android.webkit.WebSettings.AutoFillProfile.getPhoneNumber()",1,1,1
"android.webkit.WebSettings.AutoFillProfile.getState()",1,1,1
"android.webkit.WebSettings.AutoFillProfile.getUniqueId()",1,1,1
"android.webkit.WebSettings.AutoFillProfile.getZipCode()",1,1,1
"android.webkit.WebSettings.EventHandler.createHandler()",2,4,5
"android.webkit.WebSettings.EventHandler.sendMessage(Message)",2,2,2
"android.webkit.WebSettings.EventHandler.setRenderPriority()",1,4,4
"android.webkit.WebSettings.TextSize.TextSize(int)",1,1,1
"android.webkit.WebSettings.WebSettings(Context,WebView)",1,2,3
"android.webkit.WebSettings.ZoomDensity.ZoomDensity(int)",1,1,1
"android.webkit.WebSettings.addLocaleToHttpAcceptLanguage(StringBuilder,Locale)",1,3,3
"android.webkit.WebSettings.convertObsoleteLanguageCodeToNew(String)",5,3,5
"android.webkit.WebSettings.enableSmoothTransition()",1,1,1
"android.webkit.WebSettings.getAcceptLanguage()",1,2,2
"android.webkit.WebSettings.getAllowFileAccess()",1,1,1
"android.webkit.WebSettings.getAutoFillEnabled()",1,1,1
"android.webkit.WebSettings.getAutoFillProfile()",1,1,1
"android.webkit.WebSettings.getBlockNetworkImage()",1,1,1
"android.webkit.WebSettings.getBlockNetworkLoads()",1,1,1
"android.webkit.WebSettings.getBuiltInZoomControls()",1,1,1
"android.webkit.WebSettings.getCacheMode()",1,1,1
"android.webkit.WebSettings.getCurrentAcceptLanguage()",1,3,3
"android.webkit.WebSettings.getCurrentUserAgent()",1,7,7
"android.webkit.WebSettings.getCursiveFontFamily()",1,1,1
"android.webkit.WebSettings.getDatabaseEnabled()",1,1,1
"android.webkit.WebSettings.getDatabasePath()",1,1,1
"android.webkit.WebSettings.getDefaultFixedFontSize()",1,1,1
"android.webkit.WebSettings.getDefaultFontSize()",1,1,1
"android.webkit.WebSettings.getDefaultTextEncodingName()",1,1,1
"android.webkit.WebSettings.getDefaultZoom()",1,1,1
"android.webkit.WebSettings.getDisplayZoomControls()",1,1,1
"android.webkit.WebSettings.getDomStorageEnabled()",1,1,1
"android.webkit.WebSettings.getDoubleTapToastCount()",1,1,1
"android.webkit.WebSettings.getFantasyFontFamily()",1,1,1
"android.webkit.WebSettings.getFixedFontFamily()",1,1,1
"android.webkit.WebSettings.getJavaScriptCanOpenWindowsAutomatically()",1,1,1
"android.webkit.WebSettings.getJavaScriptEnabled()",1,1,1
"android.webkit.WebSettings.getLayoutAlgorithm()",1,1,1
"android.webkit.WebSettings.getLightTouchEnabled()",1,1,1
"android.webkit.WebSettings.getLoadWithOverviewMode()",1,1,1
"android.webkit.WebSettings.getLoadsImagesAutomatically()",1,1,1
"android.webkit.WebSettings.getMinimumFontSize()",1,1,1
"android.webkit.WebSettings.getMinimumLogicalFontSize()",1,1,1
"android.webkit.WebSettings.getNavDump()",1,1,1
"android.webkit.WebSettings.getNeedInitialFocus()",1,1,1
"android.webkit.WebSettings.getPluginState()",1,1,1
"android.webkit.WebSettings.getPluginsEnabled()",1,1,1
"android.webkit.WebSettings.getPluginsPath()",1,1,1
"android.webkit.WebSettings.getSansSerifFontFamily()",1,1,1
"android.webkit.WebSettings.getSaveFormData()",1,1,1
"android.webkit.WebSettings.getSavePassword()",1,1,1
"android.webkit.WebSettings.getSerifFontFamily()",1,1,1
"android.webkit.WebSettings.getStandardFontFamily()",1,1,1
"android.webkit.WebSettings.getTextSize()",1,1,1
"android.webkit.WebSettings.getUseDoubleTree()",1,1,1
"android.webkit.WebSettings.getUseFixedViewport()",1,1,1
"android.webkit.WebSettings.getUseWebViewBackgroundForOverscrollBackground()",1,1,1
"android.webkit.WebSettings.getUseWideViewPort()",1,1,1
"android.webkit.WebSettings.getUserAgent()",4,2,4
"android.webkit.WebSettings.getUserAgentString()",2,5,6
"android.webkit.WebSettings.isNarrowColumnLayout()",1,1,1
"android.webkit.WebSettings.isPrivateBrowsingEnabled()",1,1,1
"android.webkit.WebSettings.nativeSync(int)",1,1,1
"android.webkit.WebSettings.onDestroyed()",1,1,1
"android.webkit.WebSettings.pin(int)",3,1,3
"android.webkit.WebSettings.postSync()",1,2,2
"android.webkit.WebSettings.setAllowFileAccess(boolean)",1,1,1
"android.webkit.WebSettings.setAppCacheEnabled(boolean)",1,2,2
"android.webkit.WebSettings.setAppCacheMaxSize(long)",1,2,2
"android.webkit.WebSettings.setAppCachePath(String)",1,3,3
"android.webkit.WebSettings.setAutoFillEnabled(boolean)",1,2,2
"android.webkit.WebSettings.setAutoFillProfile(AutoFillProfile)",1,2,2
"android.webkit.WebSettings.setBlockNetworkImage(boolean)",1,2,2
"android.webkit.WebSettings.setBlockNetworkLoads(boolean)",1,2,2
"android.webkit.WebSettings.setBuiltInZoomControls(boolean)",1,1,1
"android.webkit.WebSettings.setCacheMode(int)",1,1,2
"android.webkit.WebSettings.setCursiveFontFamily(String)",1,3,3
"android.webkit.WebSettings.setDatabaseEnabled(boolean)",1,2,2
"android.webkit.WebSettings.setDatabasePath(String)",1,2,3
"android.webkit.WebSettings.setDefaultFixedFontSize(int)",1,2,2
"android.webkit.WebSettings.setDefaultFontSize(int)",1,2,2
"android.webkit.WebSettings.setDefaultTextEncodingName(String)",1,3,3
"android.webkit.WebSettings.setDefaultZoom(ZoomDensity)",1,2,2
"android.webkit.WebSettings.setDisplayZoomControls(boolean)",1,1,1
"android.webkit.WebSettings.setDomStorageEnabled(boolean)",1,2,2
"android.webkit.WebSettings.setDoubleTapToastCount(int)",1,2,2
"android.webkit.WebSettings.setEnableSmoothTransition(boolean)",1,1,1
"android.webkit.WebSettings.setFantasyFontFamily(String)",1,3,3
"android.webkit.WebSettings.setFixedFontFamily(String)",1,3,3
"android.webkit.WebSettings.setGeolocationDatabasePath(String)",1,3,3
"android.webkit.WebSettings.setGeolocationEnabled(boolean)",1,2,2
"android.webkit.WebSettings.setJavaScriptCanOpenWindowsAutomatically(boolean)",1,2,2
"android.webkit.WebSettings.setJavaScriptEnabled(boolean)",1,2,2
"android.webkit.WebSettings.setLayoutAlgorithm(LayoutAlgorithm)",1,2,2
"android.webkit.WebSettings.setLightTouchEnabled(boolean)",1,1,1
"android.webkit.WebSettings.setLoadWithOverviewMode(boolean)",1,1,1
"android.webkit.WebSettings.setLoadsImagesAutomatically(boolean)",1,2,2
"android.webkit.WebSettings.setMaximumDecodedImageSize(long)",1,2,2
"android.webkit.WebSettings.setMinimumFontSize(int)",1,2,2
"android.webkit.WebSettings.setMinimumLogicalFontSize(int)",1,2,2
"android.webkit.WebSettings.setNavDump(boolean)",1,1,1
"android.webkit.WebSettings.setNeedInitialFocus(boolean)",1,1,2
"android.webkit.WebSettings.setPageCacheCapacity(int)",1,2,4
"android.webkit.WebSettings.setPluginState(PluginState)",1,2,2
"android.webkit.WebSettings.setPluginsEnabled(boolean)",1,1,1
"android.webkit.WebSettings.setPluginsPath(String)",1,1,1
"android.webkit.WebSettings.setPrivateBrowsingEnabled(boolean)",1,2,2
"android.webkit.WebSettings.setRenderPriority(RenderPriority)",1,2,2
"android.webkit.WebSettings.setSansSerifFontFamily(String)",1,3,3
"android.webkit.WebSettings.setSaveFormData(boolean)",1,1,1
"android.webkit.WebSettings.setSavePassword(boolean)",1,1,1
"android.webkit.WebSettings.setSerifFontFamily(String)",1,3,3
"android.webkit.WebSettings.setShrinksStandaloneImagesToFit(boolean)",1,2,2
"android.webkit.WebSettings.setStandardFontFamily(String)",1,3,3
"android.webkit.WebSettings.setSupportMultipleWindows(boolean)",1,2,2
"android.webkit.WebSettings.setSupportZoom(boolean)",1,1,1
"android.webkit.WebSettings.setSyntheticLinksEnabled(boolean)",1,2,2
"android.webkit.WebSettings.setTextSize(TextSize)",1,2,3
"android.webkit.WebSettings.setUseDoubleTree(boolean)",1,1,1
"android.webkit.WebSettings.setUseWebViewBackgroundForOverscrollBackground(boolean)",1,1,1
"android.webkit.WebSettings.setUseWideViewPort(boolean)",1,2,2
"android.webkit.WebSettings.setUserAgent(int)",6,3,6
"android.webkit.WebSettings.setUserAgentString(String)",1,5,5
"android.webkit.WebSettings.setWorkersEnabled(boolean)",1,2,2
"android.webkit.WebSettings.setXSSAuditorEnabled(boolean)",1,2,2
"android.webkit.WebSettings.supportMultipleWindows()",1,1,1
"android.webkit.WebSettings.supportTouchOnly()",1,1,1
"android.webkit.WebSettings.supportZoom()",1,1,1
"android.webkit.WebSettings.syncSettingsAndCreateHandler(BrowserFrame)",1,3,3
"android.webkit.WebSettings.verifyNetworkAccess()",3,2,3
"android.webkit.WebStorage.Origin.Origin(String)",1,1,1
"android.webkit.WebStorage.Origin.Origin(String,long)",1,1,1
"android.webkit.WebStorage.Origin.Origin(String,long,long)",1,1,1
"android.webkit.WebStorage.Origin.getOrigin()",1,1,1
"android.webkit.WebStorage.Origin.getQuota()",1,1,1
"android.webkit.WebStorage.Origin.getUsage()",1,1,1
"android.webkit.WebStorage.createHandler()",2,5,11
"android.webkit.WebStorage.createUIHandler()",2,3,5
"android.webkit.WebStorage.deleteAllData()",1,2,2
"android.webkit.WebStorage.deleteOrigin(String)",1,3,3
"android.webkit.WebStorage.getInstance()",1,1,2
"android.webkit.WebStorage.getOrigins(ValueCallback<Map>)",1,3,3
"android.webkit.WebStorage.getOriginsSync()",2,2,2
"android.webkit.WebStorage.getQuotaForOrigin(String,ValueCallback<Long>)",3,3,4
"android.webkit.WebStorage.getUsageForOrigin(String,ValueCallback<Long>)",3,3,4
"android.webkit.WebStorage.nativeDeleteAllData()",1,1,1
"android.webkit.WebStorage.nativeDeleteOrigin(String)",1,1,1
"android.webkit.WebStorage.nativeGetOrigins()",1,1,1
"android.webkit.WebStorage.nativeGetQuotaForOrigin(String)",1,1,1
"android.webkit.WebStorage.nativeGetUsageForOrigin(String)",1,1,1
"android.webkit.WebStorage.nativeSetAppCacheMaximumSize(long)",1,1,1
"android.webkit.WebStorage.nativeSetQuotaForOrigin(String,long)",1,1,1
"android.webkit.WebStorage.postMessage(Message)",1,2,2
"android.webkit.WebStorage.postUIMessage(Message)",1,2,2
"android.webkit.WebStorage.setAppCacheMaximumSize(long)",1,1,1
"android.webkit.WebStorage.setQuotaForOrigin(String,long)",1,3,3
"android.webkit.WebStorage.syncValues()",1,2,2
"android.webkit.WebStorage.update()",1,2,2
"android.webkit.WebSyncManager.SyncHandler.handleMessage(Message)",1,3,3
"android.webkit.WebSyncManager.WebSyncManager(Context,String)",2,2,2
"android.webkit.WebSyncManager.clone()",1,1,1
"android.webkit.WebSyncManager.onSyncInit()",1,1,1
"android.webkit.WebSyncManager.resetSync()",2,2,3
"android.webkit.WebSyncManager.run()",1,1,1
"android.webkit.WebSyncManager.startSync()",2,3,4
"android.webkit.WebSyncManager.stopSync()",2,3,4
"android.webkit.WebSyncManager.sync()",2,2,3
"android.webkit.WebTextView.AutoCompleteAdapter.AutoCompleteAdapter(Context,ArrayList<String>)",1,1,1
"android.webkit.WebTextView.AutoCompleteAdapter.getView(int,View,ViewGroup)",1,2,3
"android.webkit.WebTextView.AutoCompleteAdapter.setTextView(TextView)",1,1,1
"android.webkit.WebTextView.OutlineDrawable.OutlineDrawable()",1,1,1
"android.webkit.WebTextView.OutlineDrawable.draw(Canvas)",1,1,1
"android.webkit.WebTextView.OutlineDrawable.getOpacity()",1,1,1
"android.webkit.WebTextView.OutlineDrawable.setAlpha(int)",1,1,1
"android.webkit.WebTextView.OutlineDrawable.setBounds(int,int,int,int)",1,1,1
"android.webkit.WebTextView.OutlineDrawable.setColorFilter(ColorFilter)",1,1,1
"android.webkit.WebTextView.WebTextView(Context,WebView,int)",2,2,3
"android.webkit.WebTextView.WebTextViewLayout.WebTextViewLayout(CharSequence,CharSequence,TextPaint,int,Alignment,float,float,boolean,TruncateAt,int,float)",1,1,2
"android.webkit.WebTextView.WebTextViewLayout.getLineTop(int)",1,1,1
"android.webkit.WebTextView.bringIntoView()",1,1,1
"android.webkit.WebTextView.bringPointIntoView(int)",3,3,4
"android.webkit.WebTextView.createBackground()",2,1,2
"android.webkit.WebTextView.dispatchKeyEvent(KeyEvent)",18,25,37
"android.webkit.WebTextView.ensureLayout()",1,3,3
"android.webkit.WebTextView.isSameTextField(int)",1,1,1
"android.webkit.WebTextView.lineUpScroll()",1,3,5
"android.webkit.WebTextView.makeNewLayout(int,int,Metrics,Metrics,int,boolean)",1,5,5
"android.webkit.WebTextView.onCreateInputConnection(EditorInfo)",1,2,2
"android.webkit.WebTextView.onDraw(Canvas)",1,5,5
"android.webkit.WebTextView.onDrawSubstitute()",2,3,4
"android.webkit.WebTextView.onEditorAction(int)",2,4,6
"android.webkit.WebTextView.onFocusChanged(boolean,int,Rect)",1,1,1
"android.webkit.WebTextView.onScrollChanged(int,int,int,int)",1,1,1
"android.webkit.WebTextView.onSelectionChanged(int,int)",1,3,7
"android.webkit.WebTextView.onTextChanged(CharSequence,int,int,int)",6,15,21
"android.webkit.WebTextView.onTouchEvent(MotionEvent)",8,10,19
"android.webkit.WebTextView.onTrackballEvent(MotionEvent)",5,5,7
"android.webkit.WebTextView.performLongClick()",1,1,1
"android.webkit.WebTextView.remove()",1,2,2
"android.webkit.WebTextView.sendDomEvent(KeyEvent)",1,1,1
"android.webkit.WebTextView.setAdapterCustom(AutoCompleteAdapter)",1,5,6
"android.webkit.WebTextView.setAutoFillProfileIsSet(boolean)",1,1,1
"android.webkit.WebTextView.setAutoFillable(int)",1,2,2
"android.webkit.WebTextView.setDefaultSelection()",1,6,6
"android.webkit.WebTextView.setInPassword(boolean)",1,3,4
"android.webkit.WebTextView.setInputType(int)",1,1,1
"android.webkit.WebTextView.setMaxLength(int)",1,2,2
"android.webkit.WebTextView.setNodePointer(int)",1,1,1
"android.webkit.WebTextView.setRect(int,int,int,int)",1,2,3
"android.webkit.WebTextView.setSelectionFromWebKit(int,int)",3,1,5
"android.webkit.WebTextView.setTextAndKeepSelection(String)",1,1,3
"android.webkit.WebTextView.setType(int)",3,7,17
"android.webkit.WebTextView.updateCachedTextfield()",1,1,1
"android.webkit.WebTextView.updateTextSize()",1,1,1
"android.webkit.WebView.HitTestResult.HitTestResult()",1,1,1
"android.webkit.WebView.HitTestResult.getExtra()",1,1,1
"android.webkit.WebView.HitTestResult.getType()",1,1,1
"android.webkit.WebView.HitTestResult.setExtra(String)",1,1,1
"android.webkit.WebView.HitTestResult.setType(int)",1,1,1
"android.webkit.WebView.InnerGlobalLayoutListener.onGlobalLayout()",1,2,2
"android.webkit.WebView.InnerScrollChangedListener.onScrollChanged()",1,2,2
"android.webkit.WebView.InvokeListBox.Container.toString()",1,1,1
"android.webkit.WebView.InvokeListBox.InvokeListBox(String[],int[],int)",1,1,2
"android.webkit.WebView.InvokeListBox.InvokeListBox(String[],int[],int[])",1,1,2
"android.webkit.WebView.InvokeListBox.MyArrayListAdapter.MyArrayListAdapter(Context,Container[],boolean)",1,1,2
"android.webkit.WebView.InvokeListBox.MyArrayListAdapter.areAllItemsEnabled()",1,1,1
"android.webkit.WebView.InvokeListBox.MyArrayListAdapter.getItemId(int)",2,1,2
"android.webkit.WebView.InvokeListBox.MyArrayListAdapter.getView(int,View,ViewGroup)",2,5,6
"android.webkit.WebView.InvokeListBox.MyArrayListAdapter.hasStableIds()",1,1,1
"android.webkit.WebView.InvokeListBox.MyArrayListAdapter.isEnabled(int)",2,1,2
"android.webkit.WebView.InvokeListBox.MyArrayListAdapter.item(int)",2,2,3
"android.webkit.WebView.InvokeListBox.SingleDataSetObserver.SingleDataSetObserver(long,ListView,Adapter)",1,1,1
"android.webkit.WebView.InvokeListBox.SingleDataSetObserver.onChanged()",4,4,4
"android.webkit.WebView.InvokeListBox.SingleDataSetObserver.onInvalidate()",1,1,1
"android.webkit.WebView.InvokeListBox.run()",1,5,5
"android.webkit.WebView.PackageListener.onReceive(Context,Intent)",2,5,6
"android.webkit.WebView.PrivateHandler.handleMessage(Message)",4,70,132
"android.webkit.WebView.ProxyReceiver.onReceive(Context,Intent)",1,2,2
"android.webkit.WebView.RequestFormData.RequestFormData(String,String,Message,boolean)",1,1,1
"android.webkit.WebView.RequestFormData.run()",1,5,5
"android.webkit.WebView.SaveWebArchiveMessage.SaveWebArchiveMessage(String,boolean,ValueCallback<String>)",1,1,1
"android.webkit.WebView.WebView(Context)",1,1,1
"android.webkit.WebView.WebView(Context,AttributeSet)",1,1,1
"android.webkit.WebView.WebView(Context,AttributeSet,int)",1,1,1
"android.webkit.WebView.WebView(Context,AttributeSet,int,Map<String, Object>,boolean)",1,3,4
"android.webkit.WebView.WebView(Context,AttributeSet,int,boolean)",1,1,1
"android.webkit.WebView.WebViewTransport.getWebView()",1,1,1
"android.webkit.WebView.WebViewTransport.setWebView(WebView)",1,1,1
"android.webkit.WebView.abortAnimation()",1,1,1
"android.webkit.WebView.accessibilityScriptInjected()",1,1,1
"android.webkit.WebView.addJavascriptInterface(Object,String)",2,1,2
"android.webkit.WebView.autoFillForm(int)",1,1,1
"android.webkit.WebView.calcOurContentVisibleRect(Rect)",1,1,1
"android.webkit.WebView.calcOurContentVisibleRectF(RectF)",1,1,1
"android.webkit.WebView.calcOurVisibleRect(Rect)",1,1,1
"android.webkit.WebView.canGoBack()",2,2,2
"android.webkit.WebView.canGoBackOrForward(int)",2,3,3
"android.webkit.WebView.canGoForward()",2,2,2
"android.webkit.WebView.canZoomIn()",1,1,1
"android.webkit.WebView.canZoomOut()",1,1,1
"android.webkit.WebView.cancelTouch()",1,4,6
"android.webkit.WebView.cancelWebCoreTouchEvent(int,int,boolean)",1,3,3
"android.webkit.WebView.capturePicture()",2,1,2
"android.webkit.WebView.centerFitRect(int,int,int,int)",1,2,6
"android.webkit.WebView.centerKeyPressOnTextField()",1,1,1
"android.webkit.WebView.clearActionModes()",1,3,3
"android.webkit.WebView.clearCache(boolean)",1,1,2
"android.webkit.WebView.clearFormData()",1,2,2
"android.webkit.WebView.clearHelpers()",1,1,1
"android.webkit.WebView.clearHistory()",1,1,1
"android.webkit.WebView.clearMatches()",2,1,2
"android.webkit.WebView.clearSslPreferences()",1,1,1
"android.webkit.WebView.clearTextEntry()",1,2,2
"android.webkit.WebView.clearView()",1,1,1
"android.webkit.WebView.computeDuration(int,int)",1,1,1
"android.webkit.WebView.computeHorizontalScrollOffset()",1,1,1
"android.webkit.WebView.computeHorizontalScrollRange()",1,1,3
"android.webkit.WebView.computeMaxScrollX()",1,1,1
"android.webkit.WebView.computeMaxScrollY()",1,1,1
"android.webkit.WebView.computeRealHorizontalScrollRange()",3,4,4
"android.webkit.WebView.computeRealVerticalScrollRange()",3,4,4
"android.webkit.WebView.computeScroll()",1,6,7
"android.webkit.WebView.computeVerticalScrollExtent()",1,1,1
"android.webkit.WebView.computeVerticalScrollOffset()",1,1,1
"android.webkit.WebView.computeVerticalScrollRange()",1,1,3
"android.webkit.WebView.contentSizeChanged(boolean)",2,7,8
"android.webkit.WebView.contentToViewDimension(int)",1,1,1
"android.webkit.WebView.contentToViewRect(Rect)",1,1,1
"android.webkit.WebView.contentToViewX(int)",1,1,1
"android.webkit.WebView.contentToViewY(int)",1,1,1
"android.webkit.WebView.copyBackForwardList()",1,1,1
"android.webkit.WebView.copySelection()",1,3,3
"android.webkit.WebView.cursorData()",1,1,1
"android.webkit.WebView.debugDump()",1,1,1
"android.webkit.WebView.deleteSelection(int,int)",1,1,1
"android.webkit.WebView.destroy()",1,4,4
"android.webkit.WebView.didUpdateWebTextViewDimensions(int)",3,3,6
"android.webkit.WebView.disablePlatformNotifications()",1,1,1
"android.webkit.WebView.dismissFullScreenMode()",1,2,2
"android.webkit.WebView.dismissZoomControl()",1,1,1
"android.webkit.WebView.dispatchKeyEvent(KeyEvent)",2,5,7
"android.webkit.WebView.displaySoftKeyboard(boolean)",3,5,5
"android.webkit.WebView.doDrag(int,int)",1,6,8
"android.webkit.WebView.doFling()",3,12,37
"android.webkit.WebView.doMotionUp(int,int)",1,5,5
"android.webkit.WebView.doShortPress()",3,3,5
"android.webkit.WebView.doTrackball(long,int)",2,13,22
"android.webkit.WebView.documentAsText(Message)",1,1,1
"android.webkit.WebView.documentHasImages(Message)",2,1,2
"android.webkit.WebView.domChangedFocus()",1,2,2
"android.webkit.WebView.drawChild(Canvas,View,long)",1,2,2
"android.webkit.WebView.drawContent(Canvas)",1,2,4
"android.webkit.WebView.drawCoreAndCursorRing(Canvas,int,boolean)",3,22,29
"android.webkit.WebView.drawHistory()",1,1,1
"android.webkit.WebView.drawOverScrollBackground(Canvas)",1,2,2
"android.webkit.WebView.drawPage(Canvas)",1,1,1
"android.webkit.WebView.dumpDisplayTree()",1,1,1
"android.webkit.WebView.dumpDomTree(boolean)",1,1,2
"android.webkit.WebView.dumpRenderTree(boolean)",1,1,2
"android.webkit.WebView.dumpV8Counters()",1,1,1
"android.webkit.WebView.emulateShiftHeld()",1,1,1
"android.webkit.WebView.enablePlatformNotifications()",1,1,1
"android.webkit.WebView.ensureAccessibilityScriptInjectorInstance(boolean)",1,1,3
"android.webkit.WebView.exposeAccessibilityJavaScriptApi(Map<String, Object>)",2,2,2
"android.webkit.WebView.extendScroll(int)",2,1,2
"android.webkit.WebView.externalRepresentation(Message)",1,1,1
"android.webkit.WebView.finalize()",1,1,1
"android.webkit.WebView.findAddress(String)",1,1,1
"android.webkit.WebView.findAddress(String,boolean)",1,1,1
"android.webkit.WebView.findAll(String)",2,2,3
"android.webkit.WebView.findIndex()",2,1,2
"android.webkit.WebView.findNext(boolean)",2,1,2
"android.webkit.WebView.flingScroll(int,int)",1,1,1
"android.webkit.WebView.freeMemory()",1,1,1
"android.webkit.WebView.getAxsUrlParameterValue(String)",2,3,3
"android.webkit.WebView.getCertificate()",1,1,1
"android.webkit.WebView.getContentHeight()",1,1,1
"android.webkit.WebView.getContentWidth()",1,1,1
"android.webkit.WebView.getDefaultZoomScale()",1,1,1
"android.webkit.WebView.getFavicon()",1,2,2
"android.webkit.WebView.getHistoryPictureWidth()",1,2,2
"android.webkit.WebView.getHitTestResult()",1,1,1
"android.webkit.WebView.getHttpAuthUsernamePassword(String,String)",1,1,1
"android.webkit.WebView.getOriginalUrl()",1,2,2
"android.webkit.WebView.getPluginList()",1,1,1
"android.webkit.WebView.getProgress()",1,1,1
"android.webkit.WebView.getScale()",1,1,1
"android.webkit.WebView.getScaledMaxXScroll()",1,2,2
"android.webkit.WebView.getScaledMaxYScroll()",1,2,2
"android.webkit.WebView.getSelection()",2,1,2
"android.webkit.WebView.getSettings()",1,2,2
"android.webkit.WebView.getTitle()",1,2,2
"android.webkit.WebView.getTitleHeight()",1,2,2
"android.webkit.WebView.getTouchIconUrl()",1,2,2
"android.webkit.WebView.getUrl()",1,2,2
"android.webkit.WebView.getViewHeight()",1,1,1
"android.webkit.WebView.getViewHeightWithTitle()",1,3,3
"android.webkit.WebView.getViewManager()",1,1,1
"android.webkit.WebView.getViewWidth()",2,3,3
"android.webkit.WebView.getVisibleTitleHeight()",1,1,1
"android.webkit.WebView.getWebBackForwardListClient()",1,1,1
"android.webkit.WebView.getWebChromeClient()",1,1,1
"android.webkit.WebView.getWebViewClient()",1,1,1
"android.webkit.WebView.getWebViewCore()",1,1,1
"android.webkit.WebView.getZoomControls()",2,2,2
"android.webkit.WebView.goBack()",1,1,1
"android.webkit.WebView.goBackOrForward(int)",1,1,1
"android.webkit.WebView.goBackOrForward(int,boolean)",1,2,3
"android.webkit.WebView.goForward()",1,1,1
"android.webkit.WebView.handleProxyBroadcast(Intent)",2,3,4
"android.webkit.WebView.hideSoftKeyboard()",1,5,5
"android.webkit.WebView.hitFocusedPlugin(int,int)",1,3,3
"android.webkit.WebView.hitTestResult(HitTestResult)",2,11,14
"android.webkit.WebView.inEditingMode()",1,2,2
"android.webkit.WebView.inFullScreenMode()",1,1,1
"android.webkit.WebView.incrementTextGeneration()",1,1,1
"android.webkit.WebView.init()",1,1,1
"android.webkit.WebView.initiateTextFieldDrag(float,float,long)",2,2,3
"android.webkit.WebView.injectAccessibilityForUrl(String)",4,7,8
"android.webkit.WebView.invalidateContentRect(Rect)",1,1,1
"android.webkit.WebView.invokeZoomPicker()",2,2,2
"android.webkit.WebView.isEnterActionKey(int)",1,1,3
"android.webkit.WebView.isPaused()",1,1,1
"android.webkit.WebView.isPluginFitOnScreen(ChildView)",1,5,5
"android.webkit.WebView.isPrivateBrowsingEnabled()",1,1,1
"android.webkit.WebView.keyCodeToSoundsEffect(int)",5,2,5
"android.webkit.WebView.letPageHandleNavKey(int,long,boolean,int)",1,2,2
"android.webkit.WebView.loadData(String,String,String)",1,1,1
"android.webkit.WebView.loadDataWithBaseURL(String,String,String,String,String)",2,3,3
"android.webkit.WebView.loadUrl(String)",2,1,2
"android.webkit.WebView.loadUrl(String,Map<String, String>)",1,1,1
"android.webkit.WebView.moveSelection(float,float)",2,2,7
"android.webkit.WebView.nativeCacheHitFramePointer()",1,1,1
"android.webkit.WebView.nativeCacheHitNodeBounds()",1,1,1
"android.webkit.WebView.nativeCacheHitNodePointer()",1,1,1
"android.webkit.WebView.nativeClearCursor()",1,1,1
"android.webkit.WebView.nativeCopyBaseContentToPicture(Picture)",1,1,1
"android.webkit.WebView.nativeCreate(int)",1,1,1
"android.webkit.WebView.nativeCursorFramePointer()",1,1,1
"android.webkit.WebView.nativeCursorIntersects(Rect)",1,1,1
"android.webkit.WebView.nativeCursorIsAnchor()",1,1,1
"android.webkit.WebView.nativeCursorIsTextInput()",1,1,1
"android.webkit.WebView.nativeCursorMatchesFocus()",1,1,1
"android.webkit.WebView.nativeCursorNodeBounds()",1,1,1
"android.webkit.WebView.nativeCursorNodePointer()",1,1,1
"android.webkit.WebView.nativeCursorPosition()",1,1,1
"android.webkit.WebView.nativeCursorText()",1,1,1
"android.webkit.WebView.nativeCursorWantsKeyEvents()",1,1,1
"android.webkit.WebView.nativeDebugDump()",1,1,1
"android.webkit.WebView.nativeDestroy()",1,1,1
"android.webkit.WebView.nativeDraw(Canvas,int,int,boolean)",1,1,1
"android.webkit.WebView.nativeDrawGL(Rect,float,int)",1,1,1
"android.webkit.WebView.nativeDumpDisplayTree(String)",1,1,1
"android.webkit.WebView.nativeEvaluateLayersAnimations()",1,1,1
"android.webkit.WebView.nativeExtendSelection(int,int)",1,1,1
"android.webkit.WebView.nativeFindAll(String,String,boolean)",1,1,1
"android.webkit.WebView.nativeFindIndex()",1,1,1
"android.webkit.WebView.nativeFindNext(boolean)",1,1,1
"android.webkit.WebView.nativeFocusCandidateFramePointer()",1,1,1
"android.webkit.WebView.nativeFocusCandidateHasNextTextfield()",1,1,1
"android.webkit.WebView.nativeFocusCandidateIsPassword()",1,1,1
"android.webkit.WebView.nativeFocusCandidateIsRtlText()",1,1,1
"android.webkit.WebView.nativeFocusCandidateIsTextInput()",1,1,1
"android.webkit.WebView.nativeFocusCandidateLineHeight()",1,1,1
"android.webkit.WebView.nativeFocusCandidateMaxLength()",1,1,1
"android.webkit.WebView.nativeFocusCandidateName()",1,1,1
"android.webkit.WebView.nativeFocusCandidateNodeBounds()",1,1,1
"android.webkit.WebView.nativeFocusCandidatePaddingRect()",1,1,1
"android.webkit.WebView.nativeFocusCandidatePointer()",1,1,1
"android.webkit.WebView.nativeFocusCandidateText()",1,1,1
"android.webkit.WebView.nativeFocusCandidateTextSize()",1,1,1
"android.webkit.WebView.nativeFocusCandidateType()",1,1,1
"android.webkit.WebView.nativeFocusIsPlugin()",1,1,1
"android.webkit.WebView.nativeFocusNodeBounds()",1,1,1
"android.webkit.WebView.nativeFocusNodePointer()",1,1,1
"android.webkit.WebView.nativeGetBlockLeftEdge(int,int,float)",1,1,1
"android.webkit.WebView.nativeGetCursorRingBounds()",1,1,1
"android.webkit.WebView.nativeGetSelection()",1,1,1
"android.webkit.WebView.nativeHasContent()",1,1,1
"android.webkit.WebView.nativeHasCursorNode()",1,1,1
"android.webkit.WebView.nativeHasFocusNode()",1,1,1
"android.webkit.WebView.nativeHideCursor()",1,1,1
"android.webkit.WebView.nativeHitSelection(int,int)",1,1,1
"android.webkit.WebView.nativeImageURI(int,int)",1,1,1
"android.webkit.WebView.nativeInstrumentReport()",1,1,1
"android.webkit.WebView.nativeLayerBounds(int)",1,1,1
"android.webkit.WebView.nativeMotionUp(int,int,int)",1,1,1
"android.webkit.WebView.nativeMoveCursor(int,int,boolean)",1,1,1
"android.webkit.WebView.nativeMoveCursorToNextTextInput()",1,1,1
"android.webkit.WebView.nativeMoveGeneration()",1,1,1
"android.webkit.WebView.nativeMoveSelection(int,int)",1,1,1
"android.webkit.WebView.nativePageShouldHandleShiftAndArrows()",1,1,1
"android.webkit.WebView.nativePointInNavCache(int,int,int)",1,1,1
"android.webkit.WebView.nativeRecordButtons(boolean,boolean,boolean)",1,1,1
"android.webkit.WebView.nativeReplaceBaseContent(int)",1,1,1
"android.webkit.WebView.nativeResetSelection()",1,1,1
"android.webkit.WebView.nativeScrollLayer(int,int,int)",1,1,1
"android.webkit.WebView.nativeScrollableLayer(int,int,Rect)",1,1,1
"android.webkit.WebView.nativeSelectAll()",1,1,1
"android.webkit.WebView.nativeSelectBestAt(Rect)",1,1,1
"android.webkit.WebView.nativeSelectionX()",1,1,1
"android.webkit.WebView.nativeSelectionY()",1,1,1
"android.webkit.WebView.nativeSetBaseLayer(int,Rect)",1,1,1
"android.webkit.WebView.nativeSetExtendSelection()",1,1,1
"android.webkit.WebView.nativeSetFindIsEmpty()",1,1,1
"android.webkit.WebView.nativeSetFindIsUp(boolean)",1,1,1
"android.webkit.WebView.nativeSetHeightCanMeasure(boolean)",1,1,1
"android.webkit.WebView.nativeSetSelectionPointer(boolean,float,int,int)",1,1,1
"android.webkit.WebView.nativeShowCursorTimed()",1,1,1
"android.webkit.WebView.nativeStartSelection(int,int)",1,1,1
"android.webkit.WebView.nativeSubtractLayers(Rect)",1,1,1
"android.webkit.WebView.nativeTextGeneration()",1,1,1
"android.webkit.WebView.nativeUpdateCachedTextfield(String,int)",1,1,1
"android.webkit.WebView.nativeWordSelection(int,int)",1,1,1
"android.webkit.WebView.navHandledKey(int,int,boolean,long)",7,5,12
"android.webkit.WebView.notifyFindDialogDismissed()",2,1,2
"android.webkit.WebView.onAttachedToWindow()",1,5,5
"android.webkit.WebView.onChildViewAdded(View,View)",1,1,1
"android.webkit.WebView.onChildViewRemoved(View,View)",1,1,1
"android.webkit.WebView.onConfigurationChanged(Configuration)",1,2,3
"android.webkit.WebView.onCreateInputConnection(EditorInfo)",1,1,1
"android.webkit.WebView.onDetachedFromWindow()",1,5,5
"android.webkit.WebView.onDraw(Canvas)",3,15,18
"android.webkit.WebView.onDrawVerticalScrollBar(Canvas,Drawable,int,int,int,int)",1,1,2
"android.webkit.WebView.onFixedLengthZoomAnimationEnd()",1,2,2
"android.webkit.WebView.onFixedLengthZoomAnimationStart()",1,1,1
"android.webkit.WebView.onFocusChanged(boolean,int,Rect)",1,7,7
"android.webkit.WebView.onGlobalFocusChanged(View,View)",1,1,1
"android.webkit.WebView.onKeyDown(int,KeyEvent)",22,30,45
"android.webkit.WebView.onKeyMultiple(int,int,KeyEvent)",2,3,3
"android.webkit.WebView.onKeyUp(int,KeyEvent)",15,24,29
"android.webkit.WebView.onMeasure(int,int)",1,2,8
"android.webkit.WebView.onOverScrolled(int,int,boolean,boolean)",2,4,8
"android.webkit.WebView.onPageFinished(String)",1,5,5
"android.webkit.WebView.onPageStarted(String)",1,1,1
"android.webkit.WebView.onPause()",1,2,2
"android.webkit.WebView.onPinchToZoomAnimationEnd(ScaleGestureDetector)",1,1,1
"android.webkit.WebView.onPinchToZoomAnimationStart()",1,1,1
"android.webkit.WebView.onResume()",1,2,2
"android.webkit.WebView.onSavePassword(String,String,String,Message)",1,2,2
"android.webkit.WebView.onScrollChanged(int,int,int,int)",1,3,3
"android.webkit.WebView.onSizeChanged(int,int,int,int)",1,1,2
"android.webkit.WebView.onTouchEvent(MotionEvent)",14,82,129
"android.webkit.WebView.onTrackballEvent(MotionEvent)",10,25,27
"android.webkit.WebView.onVisibilityChanged(View,int)",1,2,3
"android.webkit.WebView.onWindowFocusChanged(boolean)",1,2,2
"android.webkit.WebView.onZoomAnimationEnd()",1,4,4
"android.webkit.WebView.onZoomAnimationStart()",1,3,3
"android.webkit.WebView.overlayHorizontalScrollbar()",1,1,1
"android.webkit.WebView.overlayVerticalScrollbar()",1,1,1
"android.webkit.WebView.overrideLoading(String)",1,1,1
"android.webkit.WebView.pageDown(boolean)",3,3,5
"android.webkit.WebView.pageUp(boolean)",3,3,5
"android.webkit.WebView.passMultiTouchToWebKit(MotionEvent)",1,2,2
"android.webkit.WebView.passToJavaScript(String,KeyEvent)",1,1,1
"android.webkit.WebView.pauseTimers()",1,1,1
"android.webkit.WebView.performLongClick()",6,5,9
"android.webkit.WebView.pinLoc(int,int,int)",1,1,4
"android.webkit.WebView.pinLocX(int)",2,1,2
"android.webkit.WebView.pinLocY(int)",2,1,2
"android.webkit.WebView.pinScrollBy(int,int,boolean,int)",1,1,1
"android.webkit.WebView.pinScrollTo(int,int,boolean,int)",2,3,4
"android.webkit.WebView.postUrl(String,byte[])",1,2,2
"android.webkit.WebView.rebuildWebTextView()",3,18,20
"android.webkit.WebView.recordNewContentSize(int,int,boolean)",2,4,6
"android.webkit.WebView.refreshPlugins(boolean)",1,1,1
"android.webkit.WebView.reload()",1,1,1
"android.webkit.WebView.removeJavascriptInterface(String)",1,1,1
"android.webkit.WebView.removeTouchHighlight(boolean)",1,2,2
"android.webkit.WebView.replaceTextfieldText(int,int,String,int,int)",1,1,1
"android.webkit.WebView.requestChildRectangleOnScreen(View,Rect,boolean)",4,4,11
"android.webkit.WebView.requestFocus(int,Rect)",5,6,11
"android.webkit.WebView.requestFocusNodeHref(Message)",2,1,2
"android.webkit.WebView.requestFormData(String,int,boolean)",1,2,2
"android.webkit.WebView.requestImageRef(Message)",2,1,2
"android.webkit.WebView.requestLabel(int,int)",1,1,1
"android.webkit.WebView.requestListBox(String[],int[],int)",1,1,1
"android.webkit.WebView.requestListBox(String[],int[],int[])",1,1,1
"android.webkit.WebView.resetTrackballTime()",1,1,1
"android.webkit.WebView.restoreHistoryPictureFields(Picture,Bundle)",1,1,1
"android.webkit.WebView.restorePicture(Bundle,File)",3,3,7
"android.webkit.WebView.restoreState(Bundle)",6,5,9
"android.webkit.WebView.resumeTimers()",1,1,1
"android.webkit.WebView.revealSelection()",1,2,2
"android.webkit.WebView.savePassword(String,String,String)",1,1,1
"android.webkit.WebView.savePicture(Bundle,File)",2,2,6
"android.webkit.WebView.saveState(Bundle)",6,4,9
"android.webkit.WebView.saveWebArchive(String)",1,1,1
"android.webkit.WebView.saveWebArchive(String,boolean,ValueCallback<String>)",1,1,1
"android.webkit.WebView.scaleTrackballX(float,int)",1,1,4
"android.webkit.WebView.scaleTrackballY(float,int)",1,1,4
"android.webkit.WebView.scrollFocusedTextInput(float,int)",2,2,3
"android.webkit.WebView.selectAll()",4,2,5
"android.webkit.WebView.selectText()",3,3,4
"android.webkit.WebView.selectionDone()",1,2,2
"android.webkit.WebView.sendMotionUp(int,int,int,int,int)",1,1,1
"android.webkit.WebView.sendMoveFocus(int,int)",1,1,1
"android.webkit.WebView.sendMoveMouse(int,int,int,int)",1,1,1
"android.webkit.WebView.sendMoveMouseIfLatest(boolean)",1,2,2
"android.webkit.WebView.sendOurVisibleRect()",2,5,7
"android.webkit.WebView.sendViewSizeZoom(boolean)",3,3,8
"android.webkit.WebView.setActive(boolean)",1,6,7
"android.webkit.WebView.setBackgroundColor(int)",1,1,1
"android.webkit.WebView.setBaseLayer(int,Rect)",2,2,3
"android.webkit.WebView.setCertificate(SslCertificate)",1,2,2
"android.webkit.WebView.setContentScrollBy(int,int,boolean)",3,5,6
"android.webkit.WebView.setContentScrollTo(int,int)",4,4,13
"android.webkit.WebView.setDeferMultiTouch(boolean)",1,1,1
"android.webkit.WebView.setDownloadListener(DownloadListener)",1,1,1
"android.webkit.WebView.setEmbeddedTitleBar(View)",2,3,4
"android.webkit.WebView.setFindIsUp(boolean)",2,1,2
"android.webkit.WebView.setFocusControllerActive(boolean)",2,2,5
"android.webkit.WebView.setFrame(int,int,int,int)",1,2,3
"android.webkit.WebView.setGLRectViewport()",1,1,1
"android.webkit.WebView.setHorizontalScrollbarOverlay(boolean)",1,1,1
"android.webkit.WebView.setHttpAuthUsernamePassword(String,String,String,String)",1,1,1
"android.webkit.WebView.setInitialScale(int)",1,1,1
"android.webkit.WebView.setJsFlags(String)",1,1,1
"android.webkit.WebView.setLayoutParams(LayoutParams)",1,1,2
"android.webkit.WebView.setMapTrackballToArrowKeys(boolean)",1,1,1
"android.webkit.WebView.setMockDeviceOrientation(boolean,double,boolean,double,boolean,double)",1,1,1
"android.webkit.WebView.setNetworkAvailable(boolean)",1,1,2
"android.webkit.WebView.setNetworkType(String,String)",1,1,1
"android.webkit.WebView.setOverScrollMode(int)",1,1,3
"android.webkit.WebView.setPictureListener(PictureListener)",1,1,1
"android.webkit.WebView.setScrollBarStyle(int)",1,1,3
"android.webkit.WebView.setSelection(int,int)",1,2,2
"android.webkit.WebView.setTouchInterval(int)",1,1,1
"android.webkit.WebView.setUpSelect()",5,4,7
"android.webkit.WebView.setVerticalScrollbarOverlay(boolean)",1,1,1
"android.webkit.WebView.setWebBackForwardListClient(WebBackForwardListClient)",1,1,1
"android.webkit.WebView.setWebChromeClient(WebChromeClient)",1,1,1
"android.webkit.WebView.setWebViewClient(WebViewClient)",1,1,1
"android.webkit.WebView.setupPackageListener(Context)",2,4,5
"android.webkit.WebView.setupProxyListener(Context)",2,2,3
"android.webkit.WebView.shouldForwardTouchEvent()",1,1,4
"android.webkit.WebView.showFindDialog(String)",1,2,3
"android.webkit.WebView.spawnContentScrollTo(int,int)",2,1,2
"android.webkit.WebView.startDrag()",1,3,4
"android.webkit.WebView.startPrivateBrowsing()",1,2,2
"android.webkit.WebView.startScrollingLayer(float,float)",1,1,2
"android.webkit.WebView.startTouch(float,float,long)",1,1,1
"android.webkit.WebView.stopLoading()",1,1,1
"android.webkit.WebView.stopScroll()",1,1,1
"android.webkit.WebView.stopTouch()",1,3,3
"android.webkit.WebView.switchOutDrawHistory()",2,5,7
"android.webkit.WebView.textFieldDrag(MotionEvent)",2,1,2
"android.webkit.WebView.touchUpOnTextField(MotionEvent)",2,1,2
"android.webkit.WebView.updateCachedTextfield(String)",1,1,1
"android.webkit.WebView.updateDefaultZoomDensity(int)",1,1,1
"android.webkit.WebView.updateMultiTouchSupport(Context)",1,1,1
"android.webkit.WebView.updateScrollCoordinates(int,int)",2,2,3
"android.webkit.WebView.updateSelection()",2,1,2
"android.webkit.WebView.updateTextSelectionFromMessage(int,int,TextSelectionData)",1,4,4
"android.webkit.WebView.updateWebTextViewPadding()",1,2,2
"android.webkit.WebView.useMockDeviceOrientation()",1,1,1
"android.webkit.WebView.viewInvalidate()",1,1,1
"android.webkit.WebView.viewInvalidate(int,int,int,int)",1,1,1
"android.webkit.WebView.viewInvalidateDelayed(long,int,int,int,int)",1,1,1
"android.webkit.WebView.viewToContentDimension(int)",1,1,1
"android.webkit.WebView.viewToContentX(int)",1,1,1
"android.webkit.WebView.viewToContentXf(int)",1,1,1
"android.webkit.WebView.viewToContentY(int)",1,1,1
"android.webkit.WebView.viewToContentYf(int)",1,1,1
"android.webkit.WebView.zoomIn()",1,1,1
"android.webkit.WebView.zoomOut()",1,1,1
"android.webkit.WebViewClient.doUpdateVisitedHistory(WebView,String,boolean)",1,1,1
"android.webkit.WebViewClient.onFormResubmission(WebView,Message,Message)",1,1,1
"android.webkit.WebViewClient.onLoadResource(WebView,String)",1,1,1
"android.webkit.WebViewClient.onPageFinished(WebView,String)",1,1,1
"android.webkit.WebViewClient.onPageStarted(WebView,String,Bitmap)",1,1,1
"android.webkit.WebViewClient.onReceivedError(WebView,int,String,String)",1,1,1
"android.webkit.WebViewClient.onReceivedHttpAuthRequest(WebView,HttpAuthHandler,String,String)",1,1,1
"android.webkit.WebViewClient.onReceivedSslError(WebView,SslErrorHandler,SslError)",1,1,1
"android.webkit.WebViewClient.onScaleChanged(WebView,float,float)",1,1,1
"android.webkit.WebViewClient.onTooManyRedirects(WebView,Message,Message)",1,1,1
"android.webkit.WebViewClient.onUnhandledKeyEvent(WebView,KeyEvent)",1,1,1
"android.webkit.WebViewClient.shouldInterceptRequest(WebView,String)",1,1,1
"android.webkit.WebViewClient.shouldOverrideKeyEvent(WebView,KeyEvent)",1,1,1
"android.webkit.WebViewClient.shouldOverrideUrlLoading(WebView,String)",1,1,1
"android.webkit.WebViewCore.AutoFillData.AutoFillData()",1,1,1
"android.webkit.WebViewCore.AutoFillData.AutoFillData(int,String)",1,1,1
"android.webkit.WebViewCore.AutoFillData.getPreviewString()",1,1,1
"android.webkit.WebViewCore.AutoFillData.getQueryId()",1,1,1
"android.webkit.WebViewCore.CursorData.CursorData()",1,1,1
"android.webkit.WebViewCore.CursorData.CursorData(int,int,int,int)",1,1,1
"android.webkit.WebViewCore.DrawData.DrawData()",1,1,1
"android.webkit.WebViewCore.EventHub.EventHub()",1,1,1
"android.webkit.WebViewCore.EventHub.blockMessages()",1,1,1
"android.webkit.WebViewCore.EventHub.hasMessages(int)",3,2,3
"android.webkit.WebViewCore.EventHub.removeMessages()",1,2,2
"android.webkit.WebViewCore.EventHub.removeMessages(int)",2,2,4
"android.webkit.WebViewCore.EventHub.sendMessage(Message)",2,2,3
"android.webkit.WebViewCore.EventHub.sendMessageAtFrontOfQueue(Message)",2,2,3
"android.webkit.WebViewCore.EventHub.sendMessageDelayed(Message,long)",2,1,2
"android.webkit.WebViewCore.EventHub.transferMessages()",5,31,101
"android.webkit.WebViewCore.TextSelectionData.TextSelectionData(int,int)",1,1,1
"android.webkit.WebViewCore.WebCoreThread.run()",5,2,10
"android.webkit.WebViewCore.WebViewCore(Context,WebView,CallbackProxy,Map<String, Object>)",1,3,3
"android.webkit.WebViewCore.addMessageToConsole(String,int,String,int)",1,1,1
"android.webkit.WebViewCore.addSurface(View,int,int,int,int)",1,1,1
"android.webkit.WebViewCore.centerFitRect(int,int,int,int)",2,1,2
"android.webkit.WebViewCore.clearCache(boolean)",1,2,2
"android.webkit.WebViewCore.clearTextEntry()",2,1,2
"android.webkit.WebViewCore.contentDraw()",4,2,5
"android.webkit.WebViewCore.contentScrollBy(int,int,boolean)",2,3,4
"android.webkit.WebViewCore.contentScrollTo(int,int)",2,3,4
"android.webkit.WebViewCore.contentSpawnScrollTo(int,int)",2,3,4
"android.webkit.WebViewCore.createSurface(View)",3,3,4
"android.webkit.WebViewCore.destroy()",1,3,3
"android.webkit.WebViewCore.destroySurface(ChildView)",1,1,1
"android.webkit.WebViewCore.didFirstLayout(boolean)",2,4,6
"android.webkit.WebViewCore.exceededDatabaseQuota(String,String,long,long)",1,1,1
"android.webkit.WebViewCore.formDidBlur(int)",2,1,2
"android.webkit.WebViewCore.geolocationPermissionsHidePrompt()",1,1,1
"android.webkit.WebViewCore.geolocationPermissionsShowPrompt(String)",1,1,1
"android.webkit.WebViewCore.getBrowserFrame()",1,1,1
"android.webkit.WebViewCore.getContext()",1,1,1
"android.webkit.WebViewCore.getDeviceMotionService()",1,1,2
"android.webkit.WebViewCore.getDeviceOrientationService()",1,1,2
"android.webkit.WebViewCore.getPluginClass(String,String)",3,4,5
"android.webkit.WebViewCore.getSettings()",1,1,1
"android.webkit.WebViewCore.getUsedQuota()",2,2,3
"android.webkit.WebViewCore.getWebView()",1,1,1
"android.webkit.WebViewCore.hideFullScreenPlugin()",2,1,2
"android.webkit.WebViewCore.initialize()",1,2,2
"android.webkit.WebViewCore.initializeSubwindow()",1,1,1
"android.webkit.WebViewCore.isSupportedMediaMimeType(String)",1,5,5
"android.webkit.WebViewCore.jsAlert(String,String)",1,1,1
"android.webkit.WebViewCore.jsConfirm(String,String)",1,1,1
"android.webkit.WebViewCore.jsInterrupt()",1,1,1
"android.webkit.WebViewCore.jsPrompt(String,String,String)",1,1,1
"android.webkit.WebViewCore.jsUnload(String,String)",1,1,1
"android.webkit.WebViewCore.key(KeyEvent,boolean)",3,11,12
"android.webkit.WebViewCore.layersDraw()",2,1,2
"android.webkit.WebViewCore.loadUrl(String,Map<String, String>)",1,2,2
"android.webkit.WebViewCore.nativeAutoFillForm(int)",1,1,1
"android.webkit.WebViewCore.nativeClearContent()",1,1,1
"android.webkit.WebViewCore.nativeClick(int,int)",1,1,1
"android.webkit.WebViewCore.nativeContentInvalidateAll()",1,1,1
"android.webkit.WebViewCore.nativeDeleteSelection(int,int,int)",1,1,1
"android.webkit.WebViewCore.nativeDumpDomTree(boolean)",1,1,1
"android.webkit.WebViewCore.nativeDumpNavTree()",1,1,1
"android.webkit.WebViewCore.nativeDumpRenderTree(boolean)",1,1,1
"android.webkit.WebViewCore.nativeDumpV8Counters()",1,1,1
"android.webkit.WebViewCore.nativeFindAddress(String,boolean)",1,1,1
"android.webkit.WebViewCore.nativeFocusBoundsChanged()",1,1,1
"android.webkit.WebViewCore.nativeFreeMemory()",1,1,1
"android.webkit.WebViewCore.nativeFullScreenPluginHidden(int)",1,1,1
"android.webkit.WebViewCore.nativeGeolocationPermissionsProvide(String,boolean,boolean)",1,1,1
"android.webkit.WebViewCore.nativeGetContentMinPrefWidth()",1,1,1
"android.webkit.WebViewCore.nativeGetTouchHighlightRects(int,int,int)",1,1,1
"android.webkit.WebViewCore.nativeHandleTouchEvent(int,int[],int[],int,int)",1,1,1
"android.webkit.WebViewCore.nativeKey(int,int,int,boolean,boolean,boolean,boolean)",1,1,1
"android.webkit.WebViewCore.nativeModifySelection(int,int)",1,1,1
"android.webkit.WebViewCore.nativeMoveFocus(int,int)",1,1,1
"android.webkit.WebViewCore.nativeMoveMouse(int,int,int)",1,1,1
"android.webkit.WebViewCore.nativeMoveMouseIfLatest(int,int,int,int)",1,1,1
"android.webkit.WebViewCore.nativePause()",1,1,1
"android.webkit.WebViewCore.nativeProvideVisitedHistory(String[])",1,1,1
"android.webkit.WebViewCore.nativeRecordContent(Region,Point)",1,1,1
"android.webkit.WebViewCore.nativeRegisterURLSchemeAsLocal(String)",1,1,1
"android.webkit.WebViewCore.nativeReplaceTextfieldText(int,int,String,int,int,int)",1,1,1
"android.webkit.WebViewCore.nativeRequestLabel(int,int)",1,1,1
"android.webkit.WebViewCore.nativeResume()",1,1,1
"android.webkit.WebViewCore.nativeRetrieveAnchorText(int,int)",1,1,1
"android.webkit.WebViewCore.nativeRetrieveHref(int,int)",1,1,1
"android.webkit.WebViewCore.nativeRetrieveImageSource(int,int)",1,1,1
"android.webkit.WebViewCore.nativeRevealSelection()",1,1,1
"android.webkit.WebViewCore.nativeSaveDocumentState(int)",1,1,1
"android.webkit.WebViewCore.nativeScrollFocusedTextInput(float,int)",1,1,1
"android.webkit.WebViewCore.nativeSendListBoxChoice(int)",1,1,1
"android.webkit.WebViewCore.nativeSendListBoxChoices(boolean[],int)",1,1,1
"android.webkit.WebViewCore.nativeSetBackgroundColor(int)",1,1,1
"android.webkit.WebViewCore.nativeSetFocusControllerActive(boolean)",1,1,1
"android.webkit.WebViewCore.nativeSetGlobalBounds(int,int,int,int)",1,1,1
"android.webkit.WebViewCore.nativeSetJsFlags(String)",1,1,1
"android.webkit.WebViewCore.nativeSetNewStorageLimit(long)",1,1,1
"android.webkit.WebViewCore.nativeSetScrollOffset(int,int,int,int)",1,1,1
"android.webkit.WebViewCore.nativeSetSelection(int,int)",1,1,1
"android.webkit.WebViewCore.nativeSetSize(int,int,int,float,int,int,int,int,boolean)",1,1,1
"android.webkit.WebViewCore.nativeSplitContent(int)",1,1,1
"android.webkit.WebViewCore.nativeTouchUp(int,int,int,int,int)",1,1,1
"android.webkit.WebViewCore.nativeUpdateFrameCache()",1,1,1
"android.webkit.WebViewCore.nativeUpdateFrameCacheIfLoading()",1,1,1
"android.webkit.WebViewCore.nativeUpdateLayers(Region)",1,1,1
"android.webkit.WebViewCore.nativeValidNodeAndBounds(int,int,Rect)",1,1,1
"android.webkit.WebViewCore.needTouchEvents(boolean)",1,2,3
"android.webkit.WebViewCore.openFileChooser(String)",2,4,4
"android.webkit.WebViewCore.passToJs(int,String,int,int,boolean,boolean,boolean,boolean)",1,1,1
"android.webkit.WebViewCore.pauseTimers()",2,1,2
"android.webkit.WebViewCore.pauseUpdatePicture(WebViewCore)",3,3,4
"android.webkit.WebViewCore.populateVisitedLinks()",1,1,1
"android.webkit.WebViewCore.reachedMaxAppCacheSize(long)",1,1,1
"android.webkit.WebViewCore.reducePriority()",1,1,1
"android.webkit.WebViewCore.removeMessages()",1,1,1
"android.webkit.WebViewCore.removeMessages(int)",1,1,1
"android.webkit.WebViewCore.requestKeyboard(boolean)",1,2,3
"android.webkit.WebViewCore.requestKeyboardWithSelection(int,int,int,int)",1,2,2
"android.webkit.WebViewCore.requestListBox(String[],int[],int)",1,2,2
"android.webkit.WebViewCore.requestListBox(String[],int[],int[])",1,2,2
"android.webkit.WebViewCore.restoreScale(int,int)",1,2,3
"android.webkit.WebViewCore.restoreState(int)",1,2,2
"android.webkit.WebViewCore.resumePriority()",1,1,1
"android.webkit.WebViewCore.resumeTimers()",2,1,2
"android.webkit.WebViewCore.resumeUpdatePicture(WebViewCore)",3,3,4
"android.webkit.WebViewCore.saveWebArchive(String,boolean)",1,2,2
"android.webkit.WebViewCore.sendFindAgain()",2,1,2
"android.webkit.WebViewCore.sendMessage(Message)",1,1,1
"android.webkit.WebViewCore.sendMessage(int)",1,1,1
"android.webkit.WebViewCore.sendMessage(int,Object)",1,1,1
"android.webkit.WebViewCore.sendMessage(int,int)",1,1,1
"android.webkit.WebViewCore.sendMessage(int,int,Object)",1,1,1
"android.webkit.WebViewCore.sendMessage(int,int,int)",1,1,1
"android.webkit.WebViewCore.sendMessage(int,int,int,Object)",1,1,1
"android.webkit.WebViewCore.sendMessageAtFrontOfQueue(int,Object)",1,1,1
"android.webkit.WebViewCore.sendMessageDelayed(int,Object,long)",1,1,1
"android.webkit.WebViewCore.sendNotifyProgressFinished()",1,1,1
"android.webkit.WebViewCore.sendStaticMessage(int,Object)",2,1,2
"android.webkit.WebViewCore.sendUpdateTextEntry()",1,2,2
"android.webkit.WebViewCore.sendViewInvalidate(int,int,int,int)",1,2,2
"android.webkit.WebViewCore.setInstallableWebApp()",1,1,1
"android.webkit.WebViewCore.setMockDeviceOrientation(boolean,double,boolean,double,boolean,double)",1,1,1
"android.webkit.WebViewCore.setScrollbarModes(int,int)",2,1,2
"android.webkit.WebViewCore.setViewportSettingsFromNative()",1,1,1
"android.webkit.WebViewCore.setWebTextViewAutoFillable(int,String)",1,2,2
"android.webkit.WebViewCore.setupViewport(boolean)",2,17,34
"android.webkit.WebViewCore.showFullScreenPlugin(ChildView,int)",2,1,2
"android.webkit.WebViewCore.showRect(int,int,int,int,int,int,float,float,float,float)",1,2,2
"android.webkit.WebViewCore.signalRepaintDone()",1,1,1
"android.webkit.WebViewCore.splitContent(int)",1,2,2
"android.webkit.WebViewCore.stopLoading()",1,3,3
"android.webkit.WebViewCore.updateSurface(ChildView,int,int,int,int)",1,1,1
"android.webkit.WebViewCore.updateTextSelection(int,int,int,int)",1,2,2
"android.webkit.WebViewCore.updateTextfield(int,boolean,String,int)",1,2,2
"android.webkit.WebViewCore.updateViewport()",1,2,2
"android.webkit.WebViewCore.useMockDeviceOrientation()",1,1,1
"android.webkit.WebViewCore.viewSizeChanged(int,int,int,float,int,int,boolean)",2,13,13
"android.webkit.WebViewCore.webkitDraw()",2,4,4
"android.webkit.WebViewCore.webkitDraw(DrawData)",1,5,9
"android.webkit.WebViewCore.webkitDrawLayers()",2,2,2
"android.webkit.WebViewDatabase.WebViewDatabase(Context)",1,1,1
"android.webkit.WebViewDatabase.addCache(String,CacheResult)",2,2,3
"android.webkit.WebViewDatabase.addCookie(Cookie)",2,5,6
"android.webkit.WebViewDatabase.bootstrapCacheDatabase()",1,2,2
"android.webkit.WebViewDatabase.checkInitialized()",1,3,3
"android.webkit.WebViewDatabase.clearCache()",2,1,2
"android.webkit.WebViewDatabase.clearCookies()",2,1,2
"android.webkit.WebViewDatabase.clearExpiredCookies(long)",2,1,2
"android.webkit.WebViewDatabase.clearFormData()",2,1,2
"android.webkit.WebViewDatabase.clearHttpAuthUsernamePassword()",2,1,2
"android.webkit.WebViewDatabase.clearSessionCookies()",2,1,2
"android.webkit.WebViewDatabase.clearUsernamePassword()",2,1,2
"android.webkit.WebViewDatabase.deleteCookies(String,String,String)",2,2,3
"android.webkit.WebViewDatabase.endCacheTransaction()",2,3,3
"android.webkit.WebViewDatabase.getAllCacheFileNames()",1,6,6
"android.webkit.WebViewDatabase.getCache(String)",3,5,6
"android.webkit.WebViewDatabase.getCacheTotalSize()",2,4,5
"android.webkit.WebViewDatabase.getCookiesForDomain(String)",2,7,8
"android.webkit.WebViewDatabase.getFormData(String,String)",2,10,11
"android.webkit.WebViewDatabase.getHttpAuthUsernamePassword(String,String)",2,6,7
"android.webkit.WebViewDatabase.getInstance(Context)",1,1,2
"android.webkit.WebViewDatabase.getUsernamePassword(String)",2,5,6
"android.webkit.WebViewDatabase.hasCache()",2,3,4
"android.webkit.WebViewDatabase.hasCookies()",1,1,1
"android.webkit.WebViewDatabase.hasEntries(int)",2,3,4
"android.webkit.WebViewDatabase.hasFormData()",1,1,1
"android.webkit.WebViewDatabase.hasHttpAuthUsernamePassword()",1,1,1
"android.webkit.WebViewDatabase.hasUsernamePassword()",1,1,1
"android.webkit.WebViewDatabase.init(Context)",4,9,10
"android.webkit.WebViewDatabase.removeCache(String)",2,2,3
"android.webkit.WebViewDatabase.setFormData(String,HashMap<String, String>)",2,8,9
"android.webkit.WebViewDatabase.setHttpAuthUsernamePassword(String,String,String,String)",2,3,4
"android.webkit.WebViewDatabase.setUsernamePassword(String,String,String)",2,2,3
"android.webkit.WebViewDatabase.startCacheTransaction()",2,3,3
"android.webkit.WebViewDatabase.trimCache(long)",4,11,12
"android.webkit.WebViewDatabase.upgradeCacheDatabase()",1,2,2
"android.webkit.WebViewDatabase.upgradeDatabase()",2,5,7
"android.webkit.WebViewWorker.WebViewWorker(Looper)",1,1,1
"android.webkit.WebViewWorker.getHandler()",1,2,2
"android.webkit.WebViewWorker.handleMessage(Message)",2,22,23
"android.webkit.ZoomControlEmbedded.ZoomControlEmbedded(ZoomManager,WebView)",1,1,1
"android.webkit.ZoomControlEmbedded.ZoomListener.onVisibilityChanged(boolean)",1,2,2
"android.webkit.ZoomControlEmbedded.ZoomListener.onZoom(boolean)",1,2,2
"android.webkit.ZoomControlEmbedded.getControls()",1,2,3
"android.webkit.ZoomControlEmbedded.hide()",1,2,2
"android.webkit.ZoomControlEmbedded.isVisible()",1,2,2
"android.webkit.ZoomControlEmbedded.show()",1,6,6
"android.webkit.ZoomControlEmbedded.update()",2,3,5
"android.webkit.ZoomControlExternal.ExtendedZoomControls.ExtendedZoomControls(Context)",1,1,1
"android.webkit.ZoomControlExternal.ExtendedZoomControls.fade(int,float,float)",1,1,1
"android.webkit.ZoomControlExternal.ExtendedZoomControls.hasFocus()",1,1,1
"android.webkit.ZoomControlExternal.ExtendedZoomControls.hide()",1,1,1
"android.webkit.ZoomControlExternal.ExtendedZoomControls.setOnZoomInClickListener(OnClickListener)",1,1,1
"android.webkit.ZoomControlExternal.ExtendedZoomControls.setOnZoomOutClickListener(OnClickListener)",1,1,1
"android.webkit.ZoomControlExternal.ExtendedZoomControls.show(boolean)",1,1,2
"android.webkit.ZoomControlExternal.ZoomControlExternal(WebView)",1,1,1
"android.webkit.ZoomControlExternal.createZoomControls()",1,1,1
"android.webkit.ZoomControlExternal.getControls()",1,3,3
"android.webkit.ZoomControlExternal.hide()",1,3,3
"android.webkit.ZoomControlExternal.isVisible()",1,2,2
"android.webkit.ZoomControlExternal.show()",1,2,2
"android.webkit.ZoomControlExternal.update()",1,1,1
"android.webkit.ZoomManager.PostScale.PostScale(boolean)",1,1,1
"android.webkit.ZoomManager.PostScale.run()",1,2,2
"android.webkit.ZoomManager.ScaleDetectorListener.onScale(ScaleGestureDetector)",2,4,4
"android.webkit.ZoomManager.ScaleDetectorListener.onScaleBegin(ScaleGestureDetector)",1,1,1
"android.webkit.ZoomManager.ScaleDetectorListener.onScaleEnd(ScaleGestureDetector)",1,4,4
"android.webkit.ZoomManager.ZoomManager(WebView,CallbackProxy)",1,1,1
"android.webkit.ZoomManager.animateZoom(Canvas)",2,4,4
"android.webkit.ZoomManager.canZoomIn()",1,1,1
"android.webkit.ZoomManager.canZoomOut()",1,1,1
"android.webkit.ZoomManager.clearDocumentAnchor()",1,1,1
"android.webkit.ZoomManager.computeScaleWithLimits(float)",1,1,3
"android.webkit.ZoomManager.dismissZoomPicker()",1,2,2
"android.webkit.ZoomManager.exceedsMinScaleIncrement(float,float)",1,1,1
"android.webkit.ZoomManager.getCurrentZoomControl()",3,5,7
"android.webkit.ZoomManager.getDefaultMaxZoomScale()",1,1,1
"android.webkit.ZoomManager.getDefaultMinZoomScale()",1,1,1
"android.webkit.ZoomManager.getDefaultScale()",1,1,1
"android.webkit.ZoomManager.getDocumentAnchorX()",1,1,1
"android.webkit.ZoomManager.getDocumentAnchorY()",1,1,1
"android.webkit.ZoomManager.getExternalZoomPicker()",2,2,3
"android.webkit.ZoomManager.getInvDefaultScale()",1,1,1
"android.webkit.ZoomManager.getInvScale()",1,1,1
"android.webkit.ZoomManager.getMaxZoomScale()",1,1,1
"android.webkit.ZoomManager.getMinZoomScale()",1,1,1
"android.webkit.ZoomManager.getMultiTouchGestureDetector()",1,1,1
"android.webkit.ZoomManager.getReadingLevelScale()",1,1,1
"android.webkit.ZoomManager.getScale()",1,1,1
"android.webkit.ZoomManager.getTextWrapScale()",1,1,1
"android.webkit.ZoomManager.getZoomOverviewScale()",1,1,1
"android.webkit.ZoomManager.handleDoubleTap(float,float)",3,8,9
"android.webkit.ZoomManager.init(float)",1,1,1
"android.webkit.ZoomManager.invokeZoomPicker()",1,2,2
"android.webkit.ZoomManager.isDoubleTapEnabled()",1,2,2
"android.webkit.ZoomManager.isFixedLengthAnimationInProgress()",1,1,1
"android.webkit.ZoomManager.isInZoomOverview()",1,1,1
"android.webkit.ZoomManager.isPreventingWebkitUpdates()",1,1,1
"android.webkit.ZoomManager.isZoomAnimating()",1,2,2
"android.webkit.ZoomManager.isZoomPickerVisible()",1,2,2
"android.webkit.ZoomManager.isZoomScaleFixed()",1,1,1
"android.webkit.ZoomManager.keepZoomPickerVisible()",1,2,3
"android.webkit.ZoomManager.onFirstLayout(DrawData)",1,11,11
"android.webkit.ZoomManager.onNewPicture(DrawData)",1,12,14
"android.webkit.ZoomManager.onSizeChanged(int,int,int,int)",1,5,7
"android.webkit.ZoomManager.refreshZoomScale(boolean)",1,1,1
"android.webkit.ZoomManager.restoreZoomState(Bundle)",1,1,1
"android.webkit.ZoomManager.saveZoomState(Bundle)",1,1,1
"android.webkit.ZoomManager.setDefaultZoomScale(float)",1,1,1
"android.webkit.ZoomManager.setInitialScaleInPercent(int)",1,1,1
"android.webkit.ZoomManager.setZoomCenter(float,float)",1,1,1
"android.webkit.ZoomManager.setZoomOverviewWidth(int)",1,1,2
"android.webkit.ZoomManager.setZoomScale(float,boolean)",1,1,1
"android.webkit.ZoomManager.setZoomScale(float,boolean,boolean)",1,7,11
"android.webkit.ZoomManager.startZoomAnimation(float,boolean)",2,3,3
"android.webkit.ZoomManager.supportsMultiTouchZoom()",1,1,1
"android.webkit.ZoomManager.supportsPanDuringZoom()",1,1,1
"android.webkit.ZoomManager.updateDefaultZoomDensity(float)",1,2,2
"android.webkit.ZoomManager.updateMultiTouchSupport(Context)",1,3,7
"android.webkit.ZoomManager.updateZoomPicker()",1,2,2
"android.webkit.ZoomManager.updateZoomRange(ViewState,int,int)",1,3,5
"android.webkit.ZoomManager.willScaleTriggerZoom(float)",1,1,1
"android.webkit.ZoomManager.zoom(float)",1,1,1
"android.webkit.ZoomManager.zoomIn()",1,1,1
"android.webkit.ZoomManager.zoomOut()",1,1,1
"android.webkit.ZoomManager.zoomToOverview()",1,2,2
"android.webkit.ZoomManager.zoomToReadingLevel()",1,3,4
"android.widget.AbsListView.AbsListView(Context)",1,1,1
"android.widget.AbsListView.AbsListView(Context,AttributeSet)",1,1,1
"android.widget.AbsListView.AbsListView(Context,AttributeSet,int)",1,3,3
"android.widget.AbsListView.CheckForKeyLongPress.run()",1,7,7
"android.widget.AbsListView.CheckForLongPress.run()",1,5,5
"android.widget.AbsListView.CheckForTap.run()",1,9,11
"android.widget.AbsListView.FlingRunnable.FlingRunnable()",1,1,1
"android.widget.AbsListView.FlingRunnable.edgeReached(int)",1,5,5
"android.widget.AbsListView.FlingRunnable.endFling()",1,3,3
"android.widget.AbsListView.FlingRunnable.flywheelTouch()",1,1,1
"android.widget.AbsListView.FlingRunnable.run()",6,17,21
"android.widget.AbsListView.FlingRunnable.start(int)",1,4,5
"android.widget.AbsListView.FlingRunnable.startOverfling(int)",1,1,3
"android.widget.AbsListView.FlingRunnable.startScroll(int,int)",1,1,2
"android.widget.AbsListView.FlingRunnable.startSpringback()",1,2,2
"android.widget.AbsListView.LayoutParams.LayoutParams(Context,AttributeSet)",1,1,1
"android.widget.AbsListView.LayoutParams.LayoutParams(LayoutParams)",1,1,1
"android.widget.AbsListView.LayoutParams.LayoutParams(int,int)",1,1,1
"android.widget.AbsListView.LayoutParams.LayoutParams(int,int,int)",1,1,1
"android.widget.AbsListView.MultiChoiceModeWrapper.onActionItemClicked(ActionMode,MenuItem)",1,1,1
"android.widget.AbsListView.MultiChoiceModeWrapper.onCreateActionMode(ActionMode,Menu)",2,2,2
"android.widget.AbsListView.MultiChoiceModeWrapper.onDestroyActionMode(ActionMode)",1,1,1
"android.widget.AbsListView.MultiChoiceModeWrapper.onItemCheckedStateChanged(ActionMode,int,long,boolean)",1,2,2
"android.widget.AbsListView.MultiChoiceModeWrapper.onPrepareActionMode(ActionMode,Menu)",1,1,1
"android.widget.AbsListView.MultiChoiceModeWrapper.setWrapped(MultiChoiceModeListener)",1,1,1
"android.widget.AbsListView.PerformClick.run()",2,6,7
"android.widget.AbsListView.PositionScroller.PositionScroller()",1,1,1
"android.widget.AbsListView.PositionScroller.run()",17,20,30
"android.widget.AbsListView.PositionScroller.start(int)",3,1,4
"android.widget.AbsListView.PositionScroller.start(int,int)",6,2,9
"android.widget.AbsListView.PositionScroller.startWithOffset(int,int)",1,1,1
"android.widget.AbsListView.PositionScroller.startWithOffset(int,int,int)",3,3,4
"android.widget.AbsListView.PositionScroller.stop()",1,1,1
"android.widget.AbsListView.RecycleBin.addScrapView(View,int)",3,5,6
"android.widget.AbsListView.RecycleBin.clear()",1,5,5
"android.widget.AbsListView.RecycleBin.fillActiveViews(int,int)",1,2,5
"android.widget.AbsListView.RecycleBin.getActiveView(int)",2,1,3
"android.widget.AbsListView.RecycleBin.getScrapView(int)",3,3,4
"android.widget.AbsListView.RecycleBin.markChildrenDirty()",1,5,5
"android.widget.AbsListView.RecycleBin.pruneScrapViews()",1,3,3
"android.widget.AbsListView.RecycleBin.reclaimScrapViews(List<View>)",1,3,3
"android.widget.AbsListView.RecycleBin.scrapActiveViews()",4,7,8
"android.widget.AbsListView.RecycleBin.setCacheColorHint(int)",1,7,7
"android.widget.AbsListView.RecycleBin.setViewTypeCount(int)",2,1,3
"android.widget.AbsListView.RecycleBin.shouldRecycleViewType(int)",1,1,1
"android.widget.AbsListView.SavedState.SavedState(Parcel)",1,2,2
"android.widget.AbsListView.SavedState.SavedState(Parcelable)",1,1,1
"android.widget.AbsListView.SavedState.toString()",1,1,1
"android.widget.AbsListView.SavedState.writeToParcel(Parcel,int)",1,2,3
"android.widget.AbsListView.WindowRunnnable.rememberWindowAttachCount()",1,1,1
"android.widget.AbsListView.WindowRunnnable.sameWindow()",1,2,2
"android.widget.AbsListView.acceptFilter()",1,3,3
"android.widget.AbsListView.addTouchables(ArrayList<View>)",2,3,4
"android.widget.AbsListView.afterTextChanged(Editable)",1,1,1
"android.widget.AbsListView.beforeTextChanged(CharSequence,int,int,int)",1,1,1
"android.widget.AbsListView.checkInputConnectionProxy(View)",1,1,1
"android.widget.AbsListView.checkLayoutParams(LayoutParams)",1,1,1
"android.widget.AbsListView.checkScrap(ArrayList<View>)",2,4,5
"android.widget.AbsListView.clearChoices()",1,3,3
"android.widget.AbsListView.clearScrollingCache()",1,5,5
"android.widget.AbsListView.clearTextFilter()",1,4,4
"android.widget.AbsListView.computeVerticalScrollExtent()",3,4,5
"android.widget.AbsListView.computeVerticalScrollOffset()",4,4,7
"android.widget.AbsListView.computeVerticalScrollRange()",1,3,3
"android.widget.AbsListView.contentFits()",2,2,3
"android.widget.AbsListView.createContextMenuInfo(View,int,long)",1,1,1
"android.widget.AbsListView.createScrollingCache()",1,2,3
"android.widget.AbsListView.createTextFilter(boolean)",1,3,3
"android.widget.AbsListView.dismissPopup()",1,2,2
"android.widget.AbsListView.dispatchDraw(Canvas)",1,5,5
"android.widget.AbsListView.dispatchSetPressed(boolean)",1,1,1
"android.widget.AbsListView.draw(Canvas)",1,8,8
"android.widget.AbsListView.drawSelector(Canvas)",1,2,2
"android.widget.AbsListView.drawableStateChanged()",1,1,1
"android.widget.AbsListView.ensureSelectionOnMovementKey()",2,2,2
"android.widget.AbsListView.findClosestMotionRow(int)",2,1,3
"android.widget.AbsListView.finishGlows()",1,2,2
"android.widget.AbsListView.generateLayoutParams(AttributeSet)",1,1,1
"android.widget.AbsListView.generateLayoutParams(LayoutParams)",1,1,1
"android.widget.AbsListView.getBottomFadingEdgeStrength()",3,2,4
"android.widget.AbsListView.getBottomPaddingOffset()",1,1,2
"android.widget.AbsListView.getCacheColorHint()",1,1,1
"android.widget.AbsListView.getCheckedItemCount()",1,1,1
"android.widget.AbsListView.getCheckedItemIds()",2,2,5
"android.widget.AbsListView.getCheckedItemPosition()",2,4,4
"android.widget.AbsListView.getCheckedItemPositions()",2,1,2
"android.widget.AbsListView.getChoiceMode()",1,1,1
"android.widget.AbsListView.getContextMenuInfo()",1,1,1
"android.widget.AbsListView.getDistance(Rect,Rect,int)",2,2,7
"android.widget.AbsListView.getFocusedRect(Rect)",1,3,3
"android.widget.AbsListView.getFooterViewsCount()",1,1,1
"android.widget.AbsListView.getHeaderViewsCount()",1,1,1
"android.widget.AbsListView.getLeftPaddingOffset()",1,1,2
"android.widget.AbsListView.getListPaddingBottom()",1,1,1
"android.widget.AbsListView.getListPaddingLeft()",1,1,1
"android.widget.AbsListView.getListPaddingRight()",1,1,1
"android.widget.AbsListView.getListPaddingTop()",1,1,1
"android.widget.AbsListView.getRightPaddingOffset()",1,1,2
"android.widget.AbsListView.getSelectedView()",2,2,3
"android.widget.AbsListView.getSelector()",1,1,1
"android.widget.AbsListView.getSolidColor()",1,1,1
"android.widget.AbsListView.getTextFilter()",2,2,3
"android.widget.AbsListView.getTopFadingEdgeStrength()",3,2,4
"android.widget.AbsListView.getTopPaddingOffset()",1,1,2
"android.widget.AbsListView.getTranscriptMode()",1,1,1
"android.widget.AbsListView.getVerticalScrollbarWidth()",2,2,2
"android.widget.AbsListView.handleDataChanged()",15,13,22
"android.widget.AbsListView.hasTextFilter()",1,1,1
"android.widget.AbsListView.hideSelector()",1,2,5
"android.widget.AbsListView.initAbsListView()",1,1,1
"android.widget.AbsListView.invalidateViews()",1,1,1
"android.widget.AbsListView.invokeOnItemScrollListener()",1,3,3
"android.widget.AbsListView.isFastScrollAlwaysVisible()",1,2,2
"android.widget.AbsListView.isFastScrollEnabled()",1,1,1
"android.widget.AbsListView.isInFilterMode()",1,1,1
"android.widget.AbsListView.isItemChecked(int)",2,2,3
"android.widget.AbsListView.isPaddingOffsetRequired()",1,1,1
"android.widget.AbsListView.isScrollingCacheEnabled()",1,1,1
"android.widget.AbsListView.isSmoothScrollbarEnabled()",1,1,1
"android.widget.AbsListView.isStackFromBottom()",1,1,1
"android.widget.AbsListView.isTextFilterEnabled()",1,1,1
"android.widget.AbsListView.isVerticalScrollBarHidden()",1,2,2
"android.widget.AbsListView.jumpDrawablesToCurrentState()",1,2,2
"android.widget.AbsListView.keyPressed()",5,10,15
"android.widget.AbsListView.layoutChildren()",1,1,1
"android.widget.AbsListView.obtainView(int,boolean[])",1,9,9
"android.widget.AbsListView.onAttachedToWindow()",1,4,7
"android.widget.AbsListView.onConsistencyCheck(int)",1,5,7
"android.widget.AbsListView.onCreateDrawableState(int)",4,3,5
"android.widget.AbsListView.onCreateInputConnection(EditorInfo)",3,5,5
"android.widget.AbsListView.onDetachedFromWindow()",1,11,12
"android.widget.AbsListView.onDisplayHint(int)",2,7,8
"android.widget.AbsListView.onFilterComplete(int)",1,2,3
"android.widget.AbsListView.onFocusChanged(boolean,int,Rect)",1,4,4
"android.widget.AbsListView.onGlobalLayout()",1,8,8
"android.widget.AbsListView.onInterceptTouchEvent(MotionEvent)",10,8,14
"android.widget.AbsListView.onKeyDown(int,KeyEvent)",1,1,1
"android.widget.AbsListView.onKeyUp(int,KeyEvent)",4,8,9
"android.widget.AbsListView.onLayout(boolean,int,int,int,int)",1,4,5
"android.widget.AbsListView.onMeasure(int,int)",1,4,5
"android.widget.AbsListView.onOverScrolled(int,int,boolean,boolean)",1,3,3
"android.widget.AbsListView.onRemoteAdapterConnected()",1,3,3
"android.widget.AbsListView.onRemoteAdapterDisconnected()",1,1,1
"android.widget.AbsListView.onRestoreInstanceState(Parcelable)",1,4,8
"android.widget.AbsListView.onSaveInstanceState()",1,7,10
"android.widget.AbsListView.onSecondaryPointerUp(MotionEvent)",1,3,4
"android.widget.AbsListView.onSizeChanged(int,int,int,int)",1,3,3
"android.widget.AbsListView.onTextChanged(CharSequence,int,int,int)",4,7,9
"android.widget.AbsListView.onTouchEvent(MotionEvent)",16,86,109
"android.widget.AbsListView.onTouchModeChanged(boolean)",1,7,8
"android.widget.AbsListView.onWindowFocusChanged(boolean)",1,7,11
"android.widget.AbsListView.performItemClick(View,int,long)",1,13,17
"android.widget.AbsListView.performLongPress(View,int,long)",2,6,6
"android.widget.AbsListView.pointToPosition(int,int)",4,3,5
"android.widget.AbsListView.pointToRowId(int,int)",2,2,2
"android.widget.AbsListView.positionPopup()",1,2,2
"android.widget.AbsListView.positionSelector(int,View)",1,4,5
"android.widget.AbsListView.positionSelector(int,int,int,int)",1,1,1
"android.widget.AbsListView.reclaimViews(List<View>)",1,5,5
"android.widget.AbsListView.reconcileSelectedPosition()",1,1,2
"android.widget.AbsListView.reportScrollStateChange(int)",1,3,3
"android.widget.AbsListView.requestLayout()",1,2,3
"android.widget.AbsListView.requestLayoutIfNecessary()",1,2,2
"android.widget.AbsListView.resetList()",1,1,1
"android.widget.AbsListView.resurrectSelection()",8,13,19
"android.widget.AbsListView.retrieveFromScrap(ArrayList<View>,int)",4,4,4
"android.widget.AbsListView.sendToTextFilter(int,int,KeyEvent)",4,13,18
"android.widget.AbsListView.setAdapter(ListAdapter)",1,6,7
"android.widget.AbsListView.setCacheColorHint(int)",1,3,3
"android.widget.AbsListView.setChoiceMode(int)",1,6,8
"android.widget.AbsListView.setDrawSelectorOnTop(boolean)",1,1,1
"android.widget.AbsListView.setFastScrollAlwaysVisible(boolean)",1,3,4
"android.widget.AbsListView.setFastScrollEnabled(boolean)",1,4,4
"android.widget.AbsListView.setFilterText(String)",1,5,5
"android.widget.AbsListView.setFrame(int,int,int,int)",1,6,6
"android.widget.AbsListView.setFriction(float)",1,1,2
"android.widget.AbsListView.setItemChecked(int,boolean)",2,15,23
"android.widget.AbsListView.setMultiChoiceModeListener(MultiChoiceModeListener)",1,1,2
"android.widget.AbsListView.setOnScrollListener(OnScrollListener)",1,1,1
"android.widget.AbsListView.setOverScrollMode(int)",1,3,3
"android.widget.AbsListView.setRecyclerListener(RecyclerListener)",1,1,1
"android.widget.AbsListView.setRemoteViewsAdapter(Intent)",3,2,3
"android.widget.AbsListView.setScrollIndicators(View,View)",1,1,1
"android.widget.AbsListView.setScrollingCacheEnabled(boolean)",1,2,3
"android.widget.AbsListView.setSelector(Drawable)",1,2,2
"android.widget.AbsListView.setSelector(int)",1,1,1
"android.widget.AbsListView.setSmoothScrollbarEnabled(boolean)",1,1,1
"android.widget.AbsListView.setStackFromBottom(boolean)",1,2,2
"android.widget.AbsListView.setTextFilterEnabled(boolean)",1,1,1
"android.widget.AbsListView.setTranscriptMode(int)",1,1,1
"android.widget.AbsListView.setVelocityScale(float)",1,1,1
"android.widget.AbsListView.setVerticalScrollbarPosition(int)",1,2,2
"android.widget.AbsListView.shouldShowSelector()",1,3,3
"android.widget.AbsListView.showContextMenuForChild(View)",2,4,4
"android.widget.AbsListView.showPopup()",1,2,2
"android.widget.AbsListView.smoothScrollBy(int,int)",1,2,3
"android.widget.AbsListView.smoothScrollByOffset(int)",1,6,10
"android.widget.AbsListView.smoothScrollToPosition(int)",1,1,2
"android.widget.AbsListView.smoothScrollToPosition(int,int)",1,1,2
"android.widget.AbsListView.smoothScrollToPositionFromTop(int,int)",1,1,2
"android.widget.AbsListView.smoothScrollToPositionFromTop(int,int,int)",1,1,2
"android.widget.AbsListView.startScrollIfNeeded(int)",2,4,6
"android.widget.AbsListView.touchModeDrawsInPressedState()",3,2,3
"android.widget.AbsListView.trackMotionScroll(int,int)",9,21,38
"android.widget.AbsListView.updateScrollIndicators()",1,6,9
"android.widget.AbsListView.updateSelectorState()",1,3,3
"android.widget.AbsListView.useDefaultSelector()",1,1,1
"android.widget.AbsListView.verifyDrawable(Drawable)",1,2,2
"android.widget.AbsSeekBar.AbsSeekBar(Context)",1,1,1
"android.widget.AbsSeekBar.AbsSeekBar(Context,AttributeSet)",1,1,1
"android.widget.AbsSeekBar.AbsSeekBar(Context,AttributeSet,int)",1,1,1
"android.widget.AbsSeekBar.attemptClaimDrag()",1,2,2
"android.widget.AbsSeekBar.drawableStateChanged()",1,4,5
"android.widget.AbsSeekBar.getKeyProgressIncrement()",1,1,1
"android.widget.AbsSeekBar.getThumbOffset()",1,1,1
"android.widget.AbsSeekBar.jumpDrawablesToCurrentState()",1,2,2
"android.widget.AbsSeekBar.onDraw(Canvas)",1,2,2
"android.widget.AbsSeekBar.onKeyChange()",1,1,1
"android.widget.AbsSeekBar.onKeyDown(int,KeyEvent)",3,3,6
"android.widget.AbsSeekBar.onMeasure(int,int)",1,3,3
"android.widget.AbsSeekBar.onProgressRefresh(float,boolean)",1,2,2
"android.widget.AbsSeekBar.onSizeChanged(int,int,int,int)",1,1,1
"android.widget.AbsSeekBar.onStartTrackingTouch()",1,1,1
"android.widget.AbsSeekBar.onStopTrackingTouch()",1,1,1
"android.widget.AbsSeekBar.onTouchEvent(MotionEvent)",3,3,7
"android.widget.AbsSeekBar.setKeyProgressIncrement(int)",1,1,2
"android.widget.AbsSeekBar.setMax(int)",1,3,3
"android.widget.AbsSeekBar.setThumb(Drawable)",1,8,9
"android.widget.AbsSeekBar.setThumbOffset(int)",1,1,1
"android.widget.AbsSeekBar.setThumbPos(int,Drawable,float,int)",1,2,2
"android.widget.AbsSeekBar.trackTouchEvent(MotionEvent)",1,1,3
"android.widget.AbsSeekBar.updateThumbPos(int,int)",1,8,8
"android.widget.AbsSeekBar.verifyDrawable(Drawable)",1,2,2
"android.widget.AbsSpinner.AbsSpinner(Context)",1,1,1
"android.widget.AbsSpinner.AbsSpinner(Context,AttributeSet)",1,1,1
"android.widget.AbsSpinner.AbsSpinner(Context,AttributeSet,int)",1,2,2
"android.widget.AbsSpinner.RecycleBin.clear()",1,3,3
"android.widget.AbsSpinner.RecycleBin.get(int)",1,2,2
"android.widget.AbsSpinner.RecycleBin.put(int,View)",1,1,1
"android.widget.AbsSpinner.SavedState.SavedState(Parcel)",1,1,1
"android.widget.AbsSpinner.SavedState.SavedState(Parcelable)",1,1,1
"android.widget.AbsSpinner.SavedState.toString()",1,1,1
"android.widget.AbsSpinner.SavedState.writeToParcel(Parcel,int)",1,1,1
"android.widget.AbsSpinner.generateDefaultLayoutParams()",1,1,1
"android.widget.AbsSpinner.getAdapter()",1,1,1
"android.widget.AbsSpinner.getChildHeight(View)",1,1,1
"android.widget.AbsSpinner.getChildWidth(View)",1,1,1
"android.widget.AbsSpinner.getCount()",1,1,1
"android.widget.AbsSpinner.getSelectedView()",2,2,3
"android.widget.AbsSpinner.initAbsSpinner()",1,1,1
"android.widget.AbsSpinner.onMeasure(int,int)",1,9,15
"android.widget.AbsSpinner.onRestoreInstanceState(Parcelable)",1,2,2
"android.widget.AbsSpinner.onSaveInstanceState()",1,2,2
"android.widget.AbsSpinner.pointToPosition(int,int)",4,3,5
"android.widget.AbsSpinner.recycleAllViews()",1,2,2
"android.widget.AbsSpinner.requestLayout()",1,2,2
"android.widget.AbsSpinner.resetList()",1,1,1
"android.widget.AbsSpinner.setAdapter(SpinnerAdapter)",1,4,5
"android.widget.AbsSpinner.setSelection(int)",1,1,1
"android.widget.AbsSpinner.setSelection(int,boolean)",1,3,3
"android.widget.AbsSpinner.setSelectionInt(int,boolean)",1,2,2
"android.widget.AbsoluteLayout.AbsoluteLayout(Context)",1,1,1
"android.widget.AbsoluteLayout.AbsoluteLayout(Context,AttributeSet)",1,1,1
"android.widget.AbsoluteLayout.AbsoluteLayout(Context,AttributeSet,int)",1,1,1
"android.widget.AbsoluteLayout.LayoutParams.LayoutParams(Context,AttributeSet)",1,1,1
"android.widget.AbsoluteLayout.LayoutParams.LayoutParams(LayoutParams)",1,1,1
"android.widget.AbsoluteLayout.LayoutParams.LayoutParams(int,int,int,int)",1,1,1
"android.widget.AbsoluteLayout.LayoutParams.debug(String)",1,1,1
"android.widget.AbsoluteLayout.checkLayoutParams(LayoutParams)",1,1,1
"android.widget.AbsoluteLayout.generateDefaultLayoutParams()",1,1,1
"android.widget.AbsoluteLayout.generateLayoutParams(AttributeSet)",1,1,1
"android.widget.AbsoluteLayout.generateLayoutParams(LayoutParams)",1,1,1
"android.widget.AbsoluteLayout.onLayout(boolean,int,int,int,int)",1,3,3
"android.widget.AbsoluteLayout.onMeasure(int,int)",1,3,3
"android.widget.AdapterView.AdapterContextMenuInfo.AdapterContextMenuInfo(View,int,long)",1,1,1
"android.widget.AdapterView.AdapterDataSetObserver.clearSavedState()",1,1,1
"android.widget.AdapterView.AdapterDataSetObserver.onChanged()",1,5,5
"android.widget.AdapterView.AdapterDataSetObserver.onInvalidated()",1,2,2
"android.widget.AdapterView.AdapterView(Context)",1,1,1
"android.widget.AdapterView.AdapterView(Context,AttributeSet)",1,1,1
"android.widget.AdapterView.AdapterView(Context,AttributeSet,int)",1,1,1
"android.widget.AdapterView.SelectionNotifier.run()",1,3,3
"android.widget.AdapterView.addView(View)",1,1,1
"android.widget.AdapterView.addView(View,LayoutParams)",1,1,1
"android.widget.AdapterView.addView(View,int)",1,1,1
"android.widget.AdapterView.addView(View,int,LayoutParams)",1,1,1
"android.widget.AdapterView.canAnimate()",1,2,2
"android.widget.AdapterView.checkFocus()",1,5,7
"android.widget.AdapterView.checkSelectionChanged()",1,2,3
"android.widget.AdapterView.dispatchPopulateAccessibilityEvent(AccessibilityEvent)",1,5,5
"android.widget.AdapterView.dispatchRestoreInstanceState(SparseArray<Parcelable>)",1,1,1
"android.widget.AdapterView.dispatchSaveInstanceState(SparseArray<Parcelable>)",1,1,1
"android.widget.AdapterView.findSyncPosition()",7,2,14
"android.widget.AdapterView.fireOnSelected()",2,2,3
"android.widget.AdapterView.getCount()",1,1,1
"android.widget.AdapterView.getEmptyView()",1,1,1
"android.widget.AdapterView.getFirstVisiblePosition()",1,1,1
"android.widget.AdapterView.getItemAtPosition(int)",1,2,3
"android.widget.AdapterView.getItemIdAtPosition(int)",1,2,3
"android.widget.AdapterView.getLastVisiblePosition()",1,1,1
"android.widget.AdapterView.getOnItemClickListener()",1,1,1
"android.widget.AdapterView.getOnItemLongClickListener()",1,1,1
"android.widget.AdapterView.getOnItemSelectedListener()",1,1,1
"android.widget.AdapterView.getPositionForView(View)",3,2,5
"android.widget.AdapterView.getSelectedItem()",2,4,4
"android.widget.AdapterView.getSelectedItemId()",1,1,1
"android.widget.AdapterView.getSelectedItemPosition()",1,1,1
"android.widget.AdapterView.handleDataChanged()",1,9,11
"android.widget.AdapterView.isInFilterMode()",1,1,1
"android.widget.AdapterView.lookForSelectablePosition(int,boolean)",1,1,1
"android.widget.AdapterView.onDetachedFromWindow()",1,1,1
"android.widget.AdapterView.onLayout(boolean,int,int,int,int)",1,1,1
"android.widget.AdapterView.performItemClick(View,int,long)",2,2,2
"android.widget.AdapterView.rememberSyncState()",1,7,7
"android.widget.AdapterView.removeAllViews()",1,1,1
"android.widget.AdapterView.removeView(View)",1,1,1
"android.widget.AdapterView.removeViewAt(int)",1,1,1
"android.widget.AdapterView.selectionChanged()",1,6,8
"android.widget.AdapterView.setEmptyView(View)",1,2,2
"android.widget.AdapterView.setFocusable(boolean)",1,4,5
"android.widget.AdapterView.setFocusableInTouchMode(boolean)",1,4,5
"android.widget.AdapterView.setNextSelectedPositionInt(int)",1,1,4
"android.widget.AdapterView.setOnClickListener(OnClickListener)",1,1,1
"android.widget.AdapterView.setOnItemClickListener(OnItemClickListener)",1,1,1
"android.widget.AdapterView.setOnItemLongClickListener(OnItemLongClickListener)",1,2,2
"android.widget.AdapterView.setOnItemSelectedListener(OnItemSelectedListener)",1,1,1
"android.widget.AdapterView.setSelectedPositionInt(int)",1,1,1
"android.widget.AdapterView.updateEmptyStatus(boolean)",1,5,6
"android.widget.AdapterViewAnimator.AdapterViewAnimator(Context)",1,1,1
"android.widget.AdapterViewAnimator.AdapterViewAnimator(Context,AttributeSet)",1,3,3
"android.widget.AdapterViewAnimator.CheckForTap.run()",1,2,2
"android.widget.AdapterViewAnimator.SavedState.SavedState(Parcel)",1,1,1
"android.widget.AdapterViewAnimator.SavedState.SavedState(Parcelable,int)",1,1,1
"android.widget.AdapterViewAnimator.SavedState.toString()",1,1,1
"android.widget.AdapterViewAnimator.SavedState.writeToParcel(Parcel,int)",1,1,1
"android.widget.AdapterViewAnimator.ViewAndIndex.ViewAndIndex(View,int)",1,1,1
"android.widget.AdapterViewAnimator.addChild(View)",1,2,3
"android.widget.AdapterViewAnimator.advance()",1,1,1
"android.widget.AdapterViewAnimator.animateViewForTransition(int,int,View)",1,3,3
"android.widget.AdapterViewAnimator.applyTransformForChildAtIndex(View,int)",1,1,1
"android.widget.AdapterViewAnimator.cancelHandleClick()",1,2,2
"android.widget.AdapterViewAnimator.configureViewAnimator(int,int)",1,1,2
"android.widget.AdapterViewAnimator.createOrReuseLayoutParams(View)",2,1,2
"android.widget.AdapterViewAnimator.getAdapter()",1,1,1
"android.widget.AdapterViewAnimator.getBaseline()",1,2,2
"android.widget.AdapterViewAnimator.getCurrentView()",1,1,1
"android.widget.AdapterViewAnimator.getDefaultInAnimation()",1,1,1
"android.widget.AdapterViewAnimator.getDefaultOutAnimation()",1,1,1
"android.widget.AdapterViewAnimator.getDisplayedChild()",1,1,1
"android.widget.AdapterViewAnimator.getFrameForChild()",1,1,1
"android.widget.AdapterViewAnimator.getInAnimation()",1,1,1
"android.widget.AdapterViewAnimator.getNumActiveViews()",2,2,2
"android.widget.AdapterViewAnimator.getOutAnimation()",1,1,1
"android.widget.AdapterViewAnimator.getSelectedView()",1,1,1
"android.widget.AdapterViewAnimator.getViewAtRelativeIndex(int)",3,5,5
"android.widget.AdapterViewAnimator.getWindowSize()",3,3,4
"android.widget.AdapterViewAnimator.hideTapFeedback(View)",1,1,1
"android.widget.AdapterViewAnimator.initViewAnimator()",1,1,1
"android.widget.AdapterViewAnimator.measureChildren()",1,2,2
"android.widget.AdapterViewAnimator.modulo(int,int)",2,1,2
"android.widget.AdapterViewAnimator.onLayout(boolean,int,int,int,int)",1,4,4
"android.widget.AdapterViewAnimator.onMeasure(int,int)",1,1,12
"android.widget.AdapterViewAnimator.onRemoteAdapterConnected()",1,3,3
"android.widget.AdapterViewAnimator.onRemoteAdapterDisconnected()",1,1,1
"android.widget.AdapterViewAnimator.onRestoreInstanceState(Parcelable)",1,1,1
"android.widget.AdapterViewAnimator.onSaveInstanceState()",1,1,1
"android.widget.AdapterViewAnimator.onTouchEvent(MotionEvent)",2,11,14
"android.widget.AdapterViewAnimator.refreshChildren()",2,4,5
"android.widget.AdapterViewAnimator.setAdapter(Adapter)",1,3,4
"android.widget.AdapterViewAnimator.setAnimateFirstView(boolean)",1,1,1
"android.widget.AdapterViewAnimator.setDisplayedChild(int)",1,7,7
"android.widget.AdapterViewAnimator.setInAnimation(Context,int)",1,1,1
"android.widget.AdapterViewAnimator.setInAnimation(ObjectAnimator)",1,1,1
"android.widget.AdapterViewAnimator.setOutAnimation(Context,int)",1,1,1
"android.widget.AdapterViewAnimator.setOutAnimation(ObjectAnimator)",1,1,1
"android.widget.AdapterViewAnimator.setRemoteViewsAdapter(Intent)",3,2,3
"android.widget.AdapterViewAnimator.setSelection(int)",1,1,1
"android.widget.AdapterViewAnimator.showNext()",1,1,1
"android.widget.AdapterViewAnimator.showOnly(int)",1,1,2
"android.widget.AdapterViewAnimator.showOnly(int,boolean)",1,1,1
"android.widget.AdapterViewAnimator.showOnly(int,boolean,boolean)",3,12,24
"android.widget.AdapterViewAnimator.showPrevious()",1,1,1
"android.widget.AdapterViewAnimator.showTapFeedback(View)",1,1,1
"android.widget.AdapterViewAnimator.willBeAdvancedByHost()",1,1,1
"android.widget.AdapterViewFlipper.AdapterViewFlipper(Context)",1,1,1
"android.widget.AdapterViewFlipper.AdapterViewFlipper(Context,AttributeSet)",1,1,1
"android.widget.AdapterViewFlipper.isAutoStart()",1,1,1
"android.widget.AdapterViewFlipper.isFlipping()",1,1,1
"android.widget.AdapterViewFlipper.onAttachedToWindow()",1,2,2
"android.widget.AdapterViewFlipper.onDetachedFromWindow()",1,1,1
"android.widget.AdapterViewFlipper.onWindowVisibilityChanged(int)",1,1,1
"android.widget.AdapterViewFlipper.setAdapter(Adapter)",1,1,1
"android.widget.AdapterViewFlipper.setAutoStart(boolean)",1,1,1
"android.widget.AdapterViewFlipper.setFlipInterval(int)",1,1,1
"android.widget.AdapterViewFlipper.showNext()",1,2,2
"android.widget.AdapterViewFlipper.showPrevious()",1,2,2
"android.widget.AdapterViewFlipper.startFlipping()",1,1,1
"android.widget.AdapterViewFlipper.stopFlipping()",1,1,1
"android.widget.AdapterViewFlipper.updateRunning()",1,1,1
"android.widget.AdapterViewFlipper.updateRunning(boolean)",1,4,8
"android.widget.AdapterViewFlipper.willBeAdvancedByHost()",1,1,1
"android.widget.Adapters.CursorBinder.CursorBinder(Context,CursorTransformation)",1,1,1
"android.widget.Adapters.CursorTransformation.CursorTransformation(Context)",1,1,1
"android.widget.Adapters.CursorTransformation.transformToResource(Cursor,int)",1,1,1
"android.widget.Adapters.DrawableBinder.DrawableBinder(Context,CursorTransformation)",1,1,1
"android.widget.Adapters.DrawableBinder.bind(View,Cursor,int)",3,2,3
"android.widget.Adapters.ExpressionTransformation.ColumnExpressionNode.ColumnExpressionNode(String)",1,1,1
"android.widget.Adapters.ExpressionTransformation.ColumnExpressionNode.asString(Cursor)",1,2,3
"android.widget.Adapters.ExpressionTransformation.ConstantExpressionNode.ConstantExpressionNode(String)",1,1,1
"android.widget.Adapters.ExpressionTransformation.ConstantExpressionNode.asString(Cursor)",1,1,1
"android.widget.Adapters.ExpressionTransformation.ExpressionTransformation(Context,String)",1,1,1
"android.widget.Adapters.ExpressionTransformation.parse(String)",4,6,9
"android.widget.Adapters.ExpressionTransformation.transform(Cursor,int)",1,2,2
"android.widget.Adapters.IdentityTransformation.IdentityTransformation(Context)",1,1,1
"android.widget.Adapters.IdentityTransformation.transform(Cursor,int)",1,1,1
"android.widget.Adapters.ImageBinder.ImageBinder(Context,CursorTransformation)",1,1,1
"android.widget.Adapters.ImageBinder.bind(View,Cursor,int)",2,2,2
"android.widget.Adapters.ImageUriBinder.ImageUriBinder(Context,CursorTransformation)",1,1,1
"android.widget.Adapters.ImageUriBinder.bind(View,Cursor,int)",2,2,2
"android.widget.Adapters.MapTransformation.MapTransformation(Context)",1,1,1
"android.widget.Adapters.MapTransformation.addResourceMapping(String,int)",1,1,1
"android.widget.Adapters.MapTransformation.addStringMapping(String,String)",1,1,1
"android.widget.Adapters.MapTransformation.transform(Cursor,int)",1,1,2
"android.widget.Adapters.MapTransformation.transformToResource(Cursor,int)",1,2,3
"android.widget.Adapters.StringBinder.StringBinder(Context,CursorTransformation)",1,1,1
"android.widget.Adapters.StringBinder.bind(View,Cursor,int)",2,2,2
"android.widget.Adapters.TagBinder.TagBinder(Context,CursorTransformation)",1,1,1
"android.widget.Adapters.TagBinder.bind(View,Cursor,int)",1,1,1
"android.widget.Adapters.XmlCursorAdapter.QueryTask.doInBackground(Void...)",2,2,2
"android.widget.Adapters.XmlCursorAdapter.QueryTask.onPostExecute(Cursor)",1,2,2
"android.widget.Adapters.XmlCursorAdapter.XmlCursorAdapter(Context,int,String,String[],int[],String,String[],String,HashMap<String, CursorBinder>)",1,2,3
"android.widget.Adapters.XmlCursorAdapter.bindView(View,Context,Cursor)",1,3,3
"android.widget.Adapters.XmlCursorAdapter.changeCursor(Cursor)",1,3,3
"android.widget.Adapters.XmlCursorAdapter.load()",1,2,2
"android.widget.Adapters.XmlCursorAdapter.setUri(String)",1,1,1
"android.widget.Adapters.XmlCursorAdapterParser.XmlCursorAdapterParser(Context,XmlPullParser,AttributeSet,int)",1,1,1
"android.widget.Adapters.XmlCursorAdapterParser.createBinder(String,CursorTransformation)",3,7,8
"android.widget.Adapters.XmlCursorAdapterParser.createExpressionTransformation(String)",1,1,1
"android.widget.Adapters.XmlCursorAdapterParser.findBinder(String)",10,11,13
"android.widget.Adapters.XmlCursorAdapterParser.findMap(MapTransformation,boolean)",5,5,5
"android.widget.Adapters.XmlCursorAdapterParser.findTransformation()",4,10,10
"android.widget.Adapters.XmlCursorAdapterParser.parse(Object[])",6,8,11
"android.widget.Adapters.XmlCursorAdapterParser.parseBindTag()",4,4,4
"android.widget.Adapters.XmlCursorAdapterParser.parseSelectTag()",2,2,2
"android.widget.Adapters.createAdapterFromXml(Context,XmlPullParser,AttributeSet,int,Object[],String)",5,7,8
"android.widget.Adapters.createCursorAdapter(Context,XmlPullParser,AttributeSet,int,Object[])",1,1,1
"android.widget.Adapters.loadAdapter(Context,int,Object...)",1,2,2
"android.widget.Adapters.loadAdapter(Context,int,String,Object...)",1,4,4
"android.widget.Adapters.loadCursorAdapter(Context,int,Cursor,Object...)",1,2,2
"android.widget.Adapters.loadCursorAdapter(Context,int,String,Object...)",1,2,2
"android.widget.AlphabetIndexer.AlphabetIndexer(Cursor,int,CharSequence)",1,3,3
"android.widget.AlphabetIndexer.compare(String,String)",1,2,2
"android.widget.AlphabetIndexer.getPositionForSection(int)",12,4,16
"android.widget.AlphabetIndexer.getSectionForPosition(int)",3,2,3
"android.widget.AlphabetIndexer.getSections()",1,1,1
"android.widget.AlphabetIndexer.onChanged()",1,1,1
"android.widget.AlphabetIndexer.onInvalidated()",1,1,1
"android.widget.AlphabetIndexer.setCursor(Cursor)",1,3,3
"android.widget.AnalogClock.AnalogClock(Context)",1,1,1
"android.widget.AnalogClock.AnalogClock(Context,AttributeSet)",1,1,1
"android.widget.AnalogClock.AnalogClock(Context,AttributeSet,int)",1,4,4
"android.widget.AnalogClock.onAttachedToWindow()",1,2,2
"android.widget.AnalogClock.onDetachedFromWindow()",1,2,2
"android.widget.AnalogClock.onDraw(Canvas)",1,6,8
"android.widget.AnalogClock.onMeasure(int,int)",1,1,5
"android.widget.AnalogClock.onSizeChanged(int,int,int,int)",1,1,1
"android.widget.AnalogClock.onTimeChanged()",1,1,1
"android.widget.AppSecurityPermissions.AppSecurityPermissions(Context,List<PermissionInfo>)",1,1,1
"android.widget.AppSecurityPermissions.AppSecurityPermissions(Context,Package)",2,6,7
"android.widget.AppSecurityPermissions.AppSecurityPermissions(Context,String)",1,4,5
"android.widget.AppSecurityPermissions.PermissionInfoComparator.PermissionInfoComparator(PackageManager)",1,1,1
"android.widget.AppSecurityPermissions.PermissionInfoComparator.compare(PermissionInfo,PermissionInfo)",1,1,1
"android.widget.AppSecurityPermissions.aggregateGroupDescs(Map<String, List<PermissionInfo>>,Map<String, String>)",5,5,8
"android.widget.AppSecurityPermissions.canonicalizeGroupDesc(String)",2,3,4
"android.widget.AppSecurityPermissions.displayNoPermissions()",1,1,1
"android.widget.AppSecurityPermissions.displayPermissions(boolean)",1,3,5
"android.widget.AppSecurityPermissions.extractPerms(String[],Set<PermissionInfo>)",2,4,6
"android.widget.AppSecurityPermissions.formatPermissions(String,CharSequence)",4,2,4
"android.widget.AppSecurityPermissions.getAllUsedPermissions(int,Set<PermissionInfo>)",2,2,4
"android.widget.AppSecurityPermissions.getGroupLabel(String)",3,2,4
"android.widget.AppSecurityPermissions.getPermissionCount()",1,1,1
"android.widget.AppSecurityPermissions.getPermissionItemView(CharSequence,CharSequence,boolean)",1,1,2
"android.widget.AppSecurityPermissions.getPermissionItemView(Context,CharSequence,CharSequence,boolean)",1,1,2
"android.widget.AppSecurityPermissions.getPermissionItemView(Context,LayoutInflater,CharSequence,CharSequence,boolean,Drawable)",1,2,2
"android.widget.AppSecurityPermissions.getPermissionsForPackage(String,Set<PermissionInfo>)",1,3,4
"android.widget.AppSecurityPermissions.getPermissionsView()",1,1,1
"android.widget.AppSecurityPermissions.isDisplayablePermission(PermissionInfo)",2,1,3
"android.widget.AppSecurityPermissions.onClick(View)",1,2,2
"android.widget.AppSecurityPermissions.setPermissions(List<PermissionInfo>)",4,12,16
"android.widget.AppSecurityPermissions.showPermissions()",2,3,6
"android.widget.ArrayAdapter.ArrayAdapter(Context,int)",1,1,1
"android.widget.ArrayAdapter.ArrayAdapter(Context,int,List<T>)",1,1,1
"android.widget.ArrayAdapter.ArrayAdapter(Context,int,T[])",1,1,1
"android.widget.ArrayAdapter.ArrayAdapter(Context,int,int)",1,1,1
"android.widget.ArrayAdapter.ArrayAdapter(Context,int,int,List<T>)",1,1,1
"android.widget.ArrayAdapter.ArrayAdapter(Context,int,int,T[])",1,1,1
"android.widget.ArrayAdapter.ArrayFilter.performFiltering(CharSequence)",6,7,8
"android.widget.ArrayAdapter.ArrayFilter.publishResults(CharSequence,FilterResults)",1,2,2
"android.widget.ArrayAdapter.add(T)",1,4,4
"android.widget.ArrayAdapter.addAll(Collection<? extends T>)",1,4,4
"android.widget.ArrayAdapter.addAll(T...)",1,6,6
"android.widget.ArrayAdapter.clear()",1,3,3
"android.widget.ArrayAdapter.createFromResource(Context,int,int)",1,1,1
"android.widget.ArrayAdapter.createViewFromResource(int,View,ViewGroup,int)",1,5,5
"android.widget.ArrayAdapter.getContext()",1,1,1
"android.widget.ArrayAdapter.getCount()",1,1,1
"android.widget.ArrayAdapter.getDropDownView(int,View,ViewGroup)",1,1,1
"android.widget.ArrayAdapter.getFilter()",1,1,2
"android.widget.ArrayAdapter.getItem(int)",1,1,1
"android.widget.ArrayAdapter.getItemId(int)",1,1,1
"android.widget.ArrayAdapter.getPosition(T)",1,1,1
"android.widget.ArrayAdapter.getView(int,View,ViewGroup)",1,1,1
"android.widget.ArrayAdapter.init(Context,int,int,List<T>)",1,1,1
"android.widget.ArrayAdapter.insert(T,int)",1,4,4
"android.widget.ArrayAdapter.notifyDataSetChanged()",1,1,1
"android.widget.ArrayAdapter.remove(T)",1,3,3
"android.widget.ArrayAdapter.setDropDownViewResource(int)",1,1,1
"android.widget.ArrayAdapter.setNotifyOnChange(boolean)",1,1,1
"android.widget.ArrayAdapter.sort(Comparator<? super T>)",1,2,2
"android.widget.AutoCompleteTextView.AutoCompleteTextView(Context)",1,1,1
"android.widget.AutoCompleteTextView.AutoCompleteTextView(Context,AttributeSet)",1,1,1
"android.widget.AutoCompleteTextView.AutoCompleteTextView(Context,AttributeSet,int)",1,2,2
"android.widget.AutoCompleteTextView.DropDownItemClickListener.onItemClick(AdapterView,View,int,long)",1,1,1
"android.widget.AutoCompleteTextView.MyWatcher.afterTextChanged(Editable)",1,1,1
"android.widget.AutoCompleteTextView.MyWatcher.beforeTextChanged(CharSequence,int,int,int)",1,1,1
"android.widget.AutoCompleteTextView.MyWatcher.onTextChanged(CharSequence,int,int,int)",1,1,1
"android.widget.AutoCompleteTextView.PassThroughClickListener.onClick(View)",1,2,2
"android.widget.AutoCompleteTextView.PopupDataSetObserver.onChanged()",1,3,3
"android.widget.AutoCompleteTextView.buildImeCompletions()",1,6,6
"android.widget.AutoCompleteTextView.clearListSelection()",1,1,1
"android.widget.AutoCompleteTextView.convertSelectionToString(Object)",1,1,1
"android.widget.AutoCompleteTextView.dismissDropDown()",1,2,2
"android.widget.AutoCompleteTextView.doAfterTextChanged()",3,7,9
"android.widget.AutoCompleteTextView.doBeforeTextChanged()",2,2,3
"android.widget.AutoCompleteTextView.enoughToFilter()",1,2,2
"android.widget.AutoCompleteTextView.ensureImeVisible(boolean)",1,1,2
"android.widget.AutoCompleteTextView.getAdapter()",1,1,1
"android.widget.AutoCompleteTextView.getDropDownAnchor()",1,1,1
"android.widget.AutoCompleteTextView.getDropDownAnimationStyle()",1,1,1
"android.widget.AutoCompleteTextView.getDropDownBackground()",1,1,1
"android.widget.AutoCompleteTextView.getDropDownHeight()",1,1,1
"android.widget.AutoCompleteTextView.getDropDownHorizontalOffset()",1,1,1
"android.widget.AutoCompleteTextView.getDropDownVerticalOffset()",1,1,1
"android.widget.AutoCompleteTextView.getDropDownWidth()",1,1,1
"android.widget.AutoCompleteTextView.getFilter()",1,1,1
"android.widget.AutoCompleteTextView.getItemClickListener()",1,1,1
"android.widget.AutoCompleteTextView.getItemSelectedListener()",1,1,1
"android.widget.AutoCompleteTextView.getListSelection()",1,1,1
"android.widget.AutoCompleteTextView.getOnItemClickListener()",1,1,1
"android.widget.AutoCompleteTextView.getOnItemSelectedListener()",1,1,1
"android.widget.AutoCompleteTextView.getThreshold()",1,1,1
"android.widget.AutoCompleteTextView.getValidator()",1,1,1
"android.widget.AutoCompleteTextView.isDropDownAlwaysVisible()",1,1,1
"android.widget.AutoCompleteTextView.isDropDownDismissedOnCompletion()",1,1,1
"android.widget.AutoCompleteTextView.isInputMethodNotNeeded()",1,1,1
"android.widget.AutoCompleteTextView.isPerformingCompletion()",1,1,1
"android.widget.AutoCompleteTextView.isPopupShowing()",1,1,1
"android.widget.AutoCompleteTextView.onAttachedToWindow()",1,1,1
"android.widget.AutoCompleteTextView.onClickImpl()",1,2,2
"android.widget.AutoCompleteTextView.onCommitCompletion(CompletionInfo)",1,2,2
"android.widget.AutoCompleteTextView.onDetachedFromWindow()",1,1,1
"android.widget.AutoCompleteTextView.onDisplayHint(int)",2,3,3
"android.widget.AutoCompleteTextView.onFilterComplete(int)",1,1,1
"android.widget.AutoCompleteTextView.onFocusChanged(boolean,int,Rect)",1,4,4
"android.widget.AutoCompleteTextView.onKeyDown(int,KeyEvent)",3,6,7
"android.widget.AutoCompleteTextView.onKeyPreIme(int,KeyEvent)",5,9,9
"android.widget.AutoCompleteTextView.onKeyUp(int,KeyEvent)",3,4,4
"android.widget.AutoCompleteTextView.onWindowFocusChanged(boolean)",1,3,3
"android.widget.AutoCompleteTextView.performCompletion()",1,1,1
"android.widget.AutoCompleteTextView.performCompletion(View,int,long)",3,8,9
"android.widget.AutoCompleteTextView.performFiltering(CharSequence,int)",1,1,1
"android.widget.AutoCompleteTextView.performValidation()",2,3,4
"android.widget.AutoCompleteTextView.replaceText(CharSequence)",1,1,1
"android.widget.AutoCompleteTextView.setAdapter(T)",1,4,4
"android.widget.AutoCompleteTextView.setCompletionHint(CharSequence)",1,3,3
"android.widget.AutoCompleteTextView.setDropDownAlwaysVisible(boolean)",1,1,1
"android.widget.AutoCompleteTextView.setDropDownAnchor(int)",1,1,1
"android.widget.AutoCompleteTextView.setDropDownAnimationStyle(int)",1,1,1
"android.widget.AutoCompleteTextView.setDropDownBackgroundDrawable(Drawable)",1,1,1
"android.widget.AutoCompleteTextView.setDropDownBackgroundResource(int)",1,1,1
"android.widget.AutoCompleteTextView.setDropDownDismissedOnCompletion(boolean)",1,1,1
"android.widget.AutoCompleteTextView.setDropDownHeight(int)",1,1,1
"android.widget.AutoCompleteTextView.setDropDownHorizontalOffset(int)",1,1,1
"android.widget.AutoCompleteTextView.setDropDownVerticalOffset(int)",1,1,1
"android.widget.AutoCompleteTextView.setDropDownWidth(int)",1,1,1
"android.widget.AutoCompleteTextView.setForceIgnoreOutsideTouch(boolean)",1,1,1
"android.widget.AutoCompleteTextView.setFrame(int,int,int,int)",1,2,2
"android.widget.AutoCompleteTextView.setListSelection(int)",1,1,1
"android.widget.AutoCompleteTextView.setOnClickListener(OnClickListener)",1,1,1
"android.widget.AutoCompleteTextView.setOnItemClickListener(OnItemClickListener)",1,1,1
"android.widget.AutoCompleteTextView.setOnItemSelectedListener(OnItemSelectedListener)",1,1,1
"android.widget.AutoCompleteTextView.setText(CharSequence,boolean)",1,2,2
"android.widget.AutoCompleteTextView.setThreshold(int)",1,1,2
"android.widget.AutoCompleteTextView.setValidator(Validator)",1,1,1
"android.widget.AutoCompleteTextView.showDropDown()",1,3,3
"android.widget.AutoCompleteTextView.showDropDownAfterLayout()",1,1,1
"android.widget.AutoCompleteTextView.updateDropDownForFilter(int)",2,6,8
"android.widget.BaseAdapter.areAllItemsEnabled()",1,1,1
"android.widget.BaseAdapter.getDropDownView(int,View,ViewGroup)",1,1,1
"android.widget.BaseAdapter.getItemViewType(int)",1,1,1
"android.widget.BaseAdapter.getViewTypeCount()",1,1,1
"android.widget.BaseAdapter.hasStableIds()",1,1,1
"android.widget.BaseAdapter.isEmpty()",1,1,1
"android.widget.BaseAdapter.isEnabled(int)",1,1,1
"android.widget.BaseAdapter.notifyDataSetChanged()",1,1,1
"android.widget.BaseAdapter.notifyDataSetInvalidated()",1,1,1
"android.widget.BaseAdapter.registerDataSetObserver(DataSetObserver)",1,1,1
"android.widget.BaseAdapter.unregisterDataSetObserver(DataSetObserver)",1,1,1
"android.widget.BaseExpandableListAdapter.areAllItemsEnabled()",1,1,1
"android.widget.BaseExpandableListAdapter.getChildType(int,int)",1,1,1
"android.widget.BaseExpandableListAdapter.getChildTypeCount()",1,1,1
"android.widget.BaseExpandableListAdapter.getCombinedChildId(long,long)",1,1,1
"android.widget.BaseExpandableListAdapter.getCombinedGroupId(long)",1,1,1
"android.widget.BaseExpandableListAdapter.getGroupType(int)",1,1,1
"android.widget.BaseExpandableListAdapter.getGroupTypeCount()",1,1,1
"android.widget.BaseExpandableListAdapter.isEmpty()",1,1,1
"android.widget.BaseExpandableListAdapter.notifyDataSetChanged()",1,1,1
"android.widget.BaseExpandableListAdapter.notifyDataSetInvalidated()",1,1,1
"android.widget.BaseExpandableListAdapter.onGroupCollapsed(int)",1,1,1
"android.widget.BaseExpandableListAdapter.onGroupExpanded(int)",1,1,1
"android.widget.BaseExpandableListAdapter.registerDataSetObserver(DataSetObserver)",1,1,1
"android.widget.BaseExpandableListAdapter.unregisterDataSetObserver(DataSetObserver)",1,1,1
"android.widget.Button.Button(Context)",1,1,1
"android.widget.Button.Button(Context,AttributeSet)",1,1,1
"android.widget.Button.Button(Context,AttributeSet,int)",1,1,1
"android.widget.CalendarView.CalendarView(Context)",1,1,1
"android.widget.CalendarView.CalendarView(Context,AttributeSet)",1,1,1
"android.widget.CalendarView.CalendarView(Context,AttributeSet,int)",1,5,5
"android.widget.CalendarView.ScrollStateRunnable.doScrollStateChange(AbsListView,int)",1,1,1
"android.widget.CalendarView.ScrollStateRunnable.run()",3,4,6
"android.widget.CalendarView.WeekView.WeekView(Context)",1,1,1
"android.widget.CalendarView.WeekView.drawBackground(Canvas)",2,1,3
"android.widget.CalendarView.WeekView.drawSelectedDateVerticalBars(Canvas)",2,1,2
"android.widget.CalendarView.WeekView.drawWeekNumbers(Canvas)",1,3,4
"android.widget.CalendarView.WeekView.drawWeekSeparators(Canvas)",2,1,4
"android.widget.CalendarView.WeekView.getDayFromLocation(float,Calendar)",2,2,4
"android.widget.CalendarView.WeekView.getFirstDay()",1,1,1
"android.widget.CalendarView.WeekView.getMonthOfFirstWeekDay()",1,1,1
"android.widget.CalendarView.WeekView.getMonthOfLastWeekDay()",1,1,1
"android.widget.CalendarView.WeekView.init(int,int,int)",1,6,7
"android.widget.CalendarView.WeekView.onDraw(Canvas)",1,1,1
"android.widget.CalendarView.WeekView.onMeasure(int,int)",1,1,1
"android.widget.CalendarView.WeekView.onSizeChanged(int,int,int,int)",1,1,1
"android.widget.CalendarView.WeekView.setPaintProperties()",1,1,1
"android.widget.CalendarView.WeekView.updateSelectionPositions()",1,1,4
"android.widget.CalendarView.WeeksAdapter.CalendarGestureListener.onSingleTapUp(MotionEvent)",1,1,1
"android.widget.CalendarView.WeeksAdapter.WeeksAdapter(Context)",1,1,1
"android.widget.CalendarView.WeeksAdapter.getCount()",1,1,1
"android.widget.CalendarView.WeeksAdapter.getItem(int)",1,1,1
"android.widget.CalendarView.WeeksAdapter.getItemId(int)",1,1,1
"android.widget.CalendarView.WeeksAdapter.getSelectedDay()",1,1,1
"android.widget.CalendarView.WeeksAdapter.getView(int,View,ViewGroup)",1,3,3
"android.widget.CalendarView.WeeksAdapter.init()",1,2,3
"android.widget.CalendarView.WeeksAdapter.onDateTapped(Calendar)",1,1,1
"android.widget.CalendarView.WeeksAdapter.onTouch(View,MotionEvent)",3,4,5
"android.widget.CalendarView.WeeksAdapter.setFocusMonth(int)",2,1,2
"android.widget.CalendarView.WeeksAdapter.setSelectedDay(Calendar)",2,2,3
"android.widget.CalendarView.getDate()",1,1,1
"android.widget.CalendarView.getFirstDayOfWeek()",1,1,1
"android.widget.CalendarView.getMaxDate()",1,1,1
"android.widget.CalendarView.getMinDate()",1,1,1
"android.widget.CalendarView.getShowWeekNumber()",1,1,1
"android.widget.CalendarView.getWeeksSinceMinDate(Calendar)",2,2,2
"android.widget.CalendarView.goTo(Calendar,boolean,boolean,boolean)",2,9,13
"android.widget.CalendarView.isEnabled()",1,1,1
"android.widget.CalendarView.isSameDate(Calendar,Calendar)",1,2,2
"android.widget.CalendarView.onScroll(AbsListView,int,int,int)",4,6,17
"android.widget.CalendarView.onScrollStateChanged(AbsListView,int)",1,1,1
"android.widget.CalendarView.parseDate(String,Calendar)",1,2,2
"android.widget.CalendarView.setDate(long)",1,1,1
"android.widget.CalendarView.setDate(long,boolean,boolean)",2,1,2
"android.widget.CalendarView.setEnabled(boolean)",1,1,1
"android.widget.CalendarView.setFirstDayOfWeek(int)",2,1,2
"android.widget.CalendarView.setMaxDate(long)",2,2,3
"android.widget.CalendarView.setMinDate(long)",2,2,3
"android.widget.CalendarView.setMonthDisplayed(Calendar)",1,1,1
"android.widget.CalendarView.setOnDateChangeListener(OnDateChangeListener)",1,1,1
"android.widget.CalendarView.setShowWeekNumber(boolean)",2,1,2
"android.widget.CalendarView.setUpAdapter()",1,3,3
"android.widget.CalendarView.setUpHeader(int)",1,6,7
"android.widget.CalendarView.setUpListView()",1,1,1
"android.widget.CheckBox.CheckBox(Context)",1,1,1
"android.widget.CheckBox.CheckBox(Context,AttributeSet)",1,1,1
"android.widget.CheckBox.CheckBox(Context,AttributeSet,int)",1,1,1
"android.widget.CheckedTextView.CheckedTextView(Context)",1,1,1
"android.widget.CheckedTextView.CheckedTextView(Context,AttributeSet)",1,1,1
"android.widget.CheckedTextView.CheckedTextView(Context,AttributeSet,int)",1,2,2
"android.widget.CheckedTextView.dispatchPopulateAccessibilityEvent(AccessibilityEvent)",1,2,2
"android.widget.CheckedTextView.drawableStateChanged()",1,2,2
"android.widget.CheckedTextView.isChecked()",1,1,1
"android.widget.CheckedTextView.onCreateDrawableState(int)",1,2,2
"android.widget.CheckedTextView.onDraw(Canvas)",2,3,4
"android.widget.CheckedTextView.setCheckMarkDrawable(Drawable)",1,3,3
"android.widget.CheckedTextView.setCheckMarkDrawable(int)",2,2,4
"android.widget.CheckedTextView.setChecked(boolean)",1,2,2
"android.widget.CheckedTextView.setPadding(int,int,int,int)",1,1,1
"android.widget.CheckedTextView.toggle()",1,1,1
"android.widget.Chronometer.Chronometer(Context)",1,1,1
"android.widget.Chronometer.Chronometer(Context,AttributeSet)",1,1,1
"android.widget.Chronometer.Chronometer(Context,AttributeSet,int)",1,1,1
"android.widget.Chronometer.dispatchChronometerTick()",1,2,2
"android.widget.Chronometer.getBase()",1,1,1
"android.widget.Chronometer.getFormat()",1,1,1
"android.widget.Chronometer.getOnChronometerTickListener()",1,1,1
"android.widget.Chronometer.init()",1,1,1
"android.widget.Chronometer.onDetachedFromWindow()",1,1,1
"android.widget.Chronometer.onWindowVisibilityChanged(int)",1,1,1
"android.widget.Chronometer.setBase(long)",1,1,1
"android.widget.Chronometer.setFormat(String)",1,2,3
"android.widget.Chronometer.setOnChronometerTickListener(OnChronometerTickListener)",1,1,1
"android.widget.Chronometer.setStarted(boolean)",1,1,1
"android.widget.Chronometer.start()",1,1,1
"android.widget.Chronometer.stop()",1,1,1
"android.widget.Chronometer.updateRunning()",1,3,4
"android.widget.Chronometer.updateText(long)",1,5,6
"android.widget.CompoundButton.CompoundButton(Context)",1,1,1
"android.widget.CompoundButton.CompoundButton(Context,AttributeSet)",1,1,1
"android.widget.CompoundButton.CompoundButton(Context,AttributeSet,int)",1,2,2
"android.widget.CompoundButton.SavedState.SavedState(Parcel)",1,1,1
"android.widget.CompoundButton.SavedState.SavedState(Parcelable)",1,1,1
"android.widget.CompoundButton.SavedState.toString()",1,1,1
"android.widget.CompoundButton.SavedState.writeToParcel(Parcel,int)",1,1,1
"android.widget.CompoundButton.dispatchPopulateAccessibilityEvent(AccessibilityEvent)",1,2,3
"android.widget.CompoundButton.drawableStateChanged()",1,2,2
"android.widget.CompoundButton.isChecked()",1,1,1
"android.widget.CompoundButton.jumpDrawablesToCurrentState()",1,2,2
"android.widget.CompoundButton.onCreateDrawableState(int)",1,2,2
"android.widget.CompoundButton.onDraw(Canvas)",2,3,4
"android.widget.CompoundButton.onRestoreInstanceState(Parcelable)",1,1,1
"android.widget.CompoundButton.onSaveInstanceState()",1,1,1
"android.widget.CompoundButton.performClick()",1,1,1
"android.widget.CompoundButton.setButtonDrawable(Drawable)",1,3,3
"android.widget.CompoundButton.setButtonDrawable(int)",2,2,4
"android.widget.CompoundButton.setChecked(boolean)",3,4,5
"android.widget.CompoundButton.setOnCheckedChangeListener(OnCheckedChangeListener)",1,1,1
"android.widget.CompoundButton.setOnCheckedChangeWidgetListener(OnCheckedChangeListener)",1,1,1
"android.widget.CompoundButton.toggle()",1,1,1
"android.widget.CompoundButton.verifyDrawable(Drawable)",1,2,2
"android.widget.CursorAdapter.ChangeObserver.ChangeObserver()",1,1,1
"android.widget.CursorAdapter.ChangeObserver.deliverSelfNotifications()",1,1,1
"android.widget.CursorAdapter.ChangeObserver.onChange(boolean)",1,1,1
"android.widget.CursorAdapter.CursorAdapter(Context,Cursor)",1,1,1
"android.widget.CursorAdapter.CursorAdapter(Context,Cursor,boolean)",1,1,2
"android.widget.CursorAdapter.CursorAdapter(Context,Cursor,int)",1,1,1
"android.widget.CursorAdapter.MyDataSetObserver.onChanged()",1,1,1
"android.widget.CursorAdapter.MyDataSetObserver.onInvalidated()",1,1,1
"android.widget.CursorAdapter.changeCursor(Cursor)",1,2,2
"android.widget.CursorAdapter.convertToString(Cursor)",1,2,2
"android.widget.CursorAdapter.getCount()",2,2,3
"android.widget.CursorAdapter.getCursor()",1,1,1
"android.widget.CursorAdapter.getDropDownView(int,View,ViewGroup)",2,3,3
"android.widget.CursorAdapter.getFilter()",1,1,2
"android.widget.CursorAdapter.getFilterQueryProvider()",1,1,1
"android.widget.CursorAdapter.getItem(int)",2,2,3
"android.widget.CursorAdapter.getItemId(int)",3,3,4
"android.widget.CursorAdapter.getView(int,View,ViewGroup)",3,2,4
"android.widget.CursorAdapter.hasStableIds()",1,1,1
"android.widget.CursorAdapter.init(Context,Cursor,boolean)",1,1,2
"android.widget.CursorAdapter.init(Context,Cursor,int)",1,5,7
"android.widget.CursorAdapter.newDropDownView(Context,Cursor,ViewGroup)",1,1,1
"android.widget.CursorAdapter.onContentChanged()",1,5,5
"android.widget.CursorAdapter.runQueryOnBackgroundThread(CharSequence)",2,2,2
"android.widget.CursorAdapter.setFilterQueryProvider(FilterQueryProvider)",1,1,1
"android.widget.CursorAdapter.swapCursor(Cursor)",2,7,8
"android.widget.CursorFilter.CursorFilter(CursorFilterClient)",1,1,1
"android.widget.CursorFilter.convertResultToString(Object)",1,1,1
"android.widget.CursorFilter.performFiltering(CharSequence)",1,2,2
"android.widget.CursorFilter.publishResults(CharSequence,FilterResults)",1,2,3
"android.widget.CursorTreeAdapter.CursorTreeAdapter(Cursor,Context)",1,1,1
"android.widget.CursorTreeAdapter.CursorTreeAdapter(Cursor,Context,boolean)",1,1,1
"android.widget.CursorTreeAdapter.MyCursorHelper.MyContentObserver.MyContentObserver()",1,1,1
"android.widget.CursorTreeAdapter.MyCursorHelper.MyContentObserver.deliverSelfNotifications()",1,1,1
"android.widget.CursorTreeAdapter.MyCursorHelper.MyContentObserver.onChange(boolean)",1,3,4
"android.widget.CursorTreeAdapter.MyCursorHelper.MyCursorHelper(Cursor)",1,3,3
"android.widget.CursorTreeAdapter.MyCursorHelper.MyDataSetObserver.onChanged()",1,1,1
"android.widget.CursorTreeAdapter.MyCursorHelper.MyDataSetObserver.onInvalidated()",1,1,1
"android.widget.CursorTreeAdapter.MyCursorHelper.changeCursor(Cursor,boolean)",2,2,3
"android.widget.CursorTreeAdapter.MyCursorHelper.deactivate()",2,1,2
"android.widget.CursorTreeAdapter.MyCursorHelper.getCount()",2,2,3
"android.widget.CursorTreeAdapter.MyCursorHelper.getCursor()",1,1,1
"android.widget.CursorTreeAdapter.MyCursorHelper.getId(int)",3,3,4
"android.widget.CursorTreeAdapter.MyCursorHelper.isValid()",1,1,2
"android.widget.CursorTreeAdapter.MyCursorHelper.moveTo(int)",2,3,4
"android.widget.CursorTreeAdapter.changeCursor(Cursor)",1,1,1
"android.widget.CursorTreeAdapter.convertToString(Cursor)",1,2,2
"android.widget.CursorTreeAdapter.deactivateChildrenCursorHelper(int)",1,1,1
"android.widget.CursorTreeAdapter.getChild(int,int)",1,1,1
"android.widget.CursorTreeAdapter.getChildId(int,int)",1,1,1
"android.widget.CursorTreeAdapter.getChildView(int,int,boolean,View,ViewGroup)",2,2,3
"android.widget.CursorTreeAdapter.getChildrenCount(int)",1,3,3
"android.widget.CursorTreeAdapter.getChildrenCursorHelper(int,boolean)",3,2,3
"android.widget.CursorTreeAdapter.getCursor()",1,1,1
"android.widget.CursorTreeAdapter.getFilter()",1,1,2
"android.widget.CursorTreeAdapter.getFilterQueryProvider()",1,1,1
"android.widget.CursorTreeAdapter.getGroup(int)",1,1,1
"android.widget.CursorTreeAdapter.getGroupCount()",1,1,1
"android.widget.CursorTreeAdapter.getGroupId(int)",1,1,1
"android.widget.CursorTreeAdapter.getGroupView(int,boolean,View,ViewGroup)",2,2,3
"android.widget.CursorTreeAdapter.hasStableIds()",1,1,1
"android.widget.CursorTreeAdapter.init(Cursor,Context,boolean)",1,1,1
"android.widget.CursorTreeAdapter.isChildSelectable(int,int)",1,1,1
"android.widget.CursorTreeAdapter.notifyDataSetChanged()",1,1,1
"android.widget.CursorTreeAdapter.notifyDataSetChanged(boolean)",1,2,2
"android.widget.CursorTreeAdapter.notifyDataSetInvalidated()",1,1,1
"android.widget.CursorTreeAdapter.onGroupCollapsed(int)",1,1,1
"android.widget.CursorTreeAdapter.releaseCursorHelpers()",1,2,2
"android.widget.CursorTreeAdapter.runQueryOnBackgroundThread(CharSequence)",2,2,2
"android.widget.CursorTreeAdapter.setChildrenCursor(int,Cursor)",1,1,1
"android.widget.CursorTreeAdapter.setFilterQueryProvider(FilterQueryProvider)",1,1,1
"android.widget.CursorTreeAdapter.setGroupCursor(Cursor)",1,1,1
"android.widget.DatePicker.DatePicker(Context)",1,1,1
"android.widget.DatePicker.DatePicker(Context,AttributeSet)",1,1,1
"android.widget.DatePicker.DatePicker(Context,AttributeSet,int)",1,6,7
"android.widget.DatePicker.SavedState.SavedState(Parcel)",1,1,1
"android.widget.DatePicker.SavedState.SavedState(Parcelable,int,int,int)",1,1,1
"android.widget.DatePicker.SavedState.writeToParcel(Parcel,int)",1,1,1
"android.widget.DatePicker.dispatchRestoreInstanceState(SparseArray<Parcelable>)",1,1,1
"android.widget.DatePicker.getCalendarViewShown()",1,1,1
"android.widget.DatePicker.getDayOfMonth()",1,1,1
"android.widget.DatePicker.getDelataDayOfMonth(int)",4,1,6
"android.widget.DatePicker.getDelataMonth(int)",4,1,6
"android.widget.DatePicker.getMaxDate()",1,1,1
"android.widget.DatePicker.getMinDate()",1,1,1
"android.widget.DatePicker.getMonth()",1,1,1
"android.widget.DatePicker.getShortMonths()",2,3,3
"android.widget.DatePicker.getSpinnersShown()",1,1,1
"android.widget.DatePicker.getYear()",1,1,1
"android.widget.DatePicker.init(int,int,int,OnDateChangedListener)",1,1,1
"android.widget.DatePicker.isEnabled()",1,1,1
"android.widget.DatePicker.notifyDateChanged()",1,2,2
"android.widget.DatePicker.onRestoreInstanceState(Parcelable)",1,1,1
"android.widget.DatePicker.onSaveInstanceState()",1,1,1
"android.widget.DatePicker.parseDate(String,Calendar)",1,2,2
"android.widget.DatePicker.reorderSpinners()",1,11,16
"android.widget.DatePicker.setCalendarViewShown(boolean)",1,1,2
"android.widget.DatePicker.setEnabled(boolean)",2,1,2
"android.widget.DatePicker.setMaxDate(long)",2,2,3
"android.widget.DatePicker.setMinDate(long)",2,2,3
"android.widget.DatePicker.setSpinnersShown(boolean)",1,1,2
"android.widget.DatePicker.updateCalendarView()",1,4,4
"android.widget.DatePicker.updateDate(int,int,int)",1,4,4
"android.widget.DatePicker.updateSpinners(int,int,int)",1,3,3
"android.widget.DateTimeView.DateTimeView(Context)",1,1,1
"android.widget.DateTimeView.DateTimeView(Context,AttributeSet)",1,1,1
"android.widget.DateTimeView.getDateFormat()",2,4,4
"android.widget.DateTimeView.getTimeFormat()",1,1,2
"android.widget.DateTimeView.onAttachedToWindow()",1,1,1
"android.widget.DateTimeView.onDetachedFromWindow()",1,1,1
"android.widget.DateTimeView.registerReceivers()",1,1,1
"android.widget.DateTimeView.setTime(long)",1,1,1
"android.widget.DateTimeView.unregisterReceivers()",1,1,1
"android.widget.DateTimeView.update()",5,4,16
"android.widget.DialerFilter.DialerFilter(Context)",1,1,1
"android.widget.DialerFilter.DialerFilter(Context,AttributeSet)",1,1,1
"android.widget.DialerFilter.append(String)",2,2,4
"android.widget.DialerFilter.clearText()",1,2,2
"android.widget.DialerFilter.getDigits()",2,2,2
"android.widget.DialerFilter.getFilterText()",2,2,2
"android.widget.DialerFilter.getLetters()",2,2,2
"android.widget.DialerFilter.getMode()",1,1,1
"android.widget.DialerFilter.isQwertyKeyboard()",1,1,1
"android.widget.DialerFilter.makeDigitsPrimary()",1,2,2
"android.widget.DialerFilter.makeLettersPrimary()",1,2,2
"android.widget.DialerFilter.onFinishInflate()",3,1,3
"android.widget.DialerFilter.onFocusChanged(boolean,int,Rect)",1,2,3
"android.widget.DialerFilter.onKeyDown(int,KeyEvent)",5,10,20
"android.widget.DialerFilter.onKeyUp(int,KeyEvent)",1,1,2
"android.widget.DialerFilter.onModeChange(int,int)",1,1,1
"android.widget.DialerFilter.removeFilterWatcher(TextWatcher)",1,2,2
"android.widget.DialerFilter.setDigitsWatcher(TextWatcher)",1,1,1
"android.widget.DialerFilter.setFilterWatcher(TextWatcher)",1,2,2
"android.widget.DialerFilter.setLettersWatcher(TextWatcher)",1,1,1
"android.widget.DialerFilter.setMode(int)",2,2,6
"android.widget.DialerFilter.swapPrimaryAndHint(boolean)",1,1,2
"android.widget.DigitalClock.DigitalClock(Context)",1,1,1
"android.widget.DigitalClock.DigitalClock(Context,AttributeSet)",1,1,1
"android.widget.DigitalClock.FormatChangeObserver.FormatChangeObserver()",1,1,1
"android.widget.DigitalClock.FormatChangeObserver.onChange(boolean)",1,1,1
"android.widget.DigitalClock.get24HourMode()",1,1,1
"android.widget.DigitalClock.initClock(Context)",1,2,2
"android.widget.DigitalClock.onAttachedToWindow()",2,1,2
"android.widget.DigitalClock.onDetachedFromWindow()",1,1,1
"android.widget.DigitalClock.setFormat()",1,1,2
"android.widget.DoubleDigitManager.DoubleDigitManager(long,CallBack)",1,1,1
"android.widget.DoubleDigitManager.reportDigit(int)",1,4,5
"android.widget.EdgeGlow.EdgeGlow(Context,Drawable,Drawable)",1,1,1
"android.widget.EdgeGlow.draw(Canvas)",1,3,3
"android.widget.EdgeGlow.finish()",1,1,1
"android.widget.EdgeGlow.isFinished()",1,1,1
"android.widget.EdgeGlow.onAbsorb(int)",1,1,1
"android.widget.EdgeGlow.onPull(float)",2,1,7
"android.widget.EdgeGlow.onRelease()",2,1,3
"android.widget.EdgeGlow.setSize(int,int)",1,1,1
"android.widget.EdgeGlow.update()",2,3,7
"android.widget.EditText.EditText(Context)",1,1,1
"android.widget.EditText.EditText(Context,AttributeSet)",1,1,1
"android.widget.EditText.EditText(Context,AttributeSet,int)",1,1,1
"android.widget.EditText.extendSelection(int)",1,1,1
"android.widget.EditText.getDefaultEditable()",1,1,1
"android.widget.EditText.getDefaultMovementMethod()",1,1,1
"android.widget.EditText.getText()",1,1,1
"android.widget.EditText.selectAll()",1,1,1
"android.widget.EditText.setEllipsize(TruncateAt)",2,1,2
"android.widget.EditText.setSelection(int)",1,1,1
"android.widget.EditText.setSelection(int,int)",1,1,1
"android.widget.EditText.setText(CharSequence,BufferType)",1,1,1
"android.widget.ExpandableListConnector.ExpandableListConnector(ExpandableListAdapter)",1,1,1
"android.widget.ExpandableListConnector.GroupMetadata.GroupMetadata()",1,1,1
"android.widget.ExpandableListConnector.GroupMetadata.compareTo(GroupMetadata)",2,1,2
"android.widget.ExpandableListConnector.GroupMetadata.describeContents()",1,1,1
"android.widget.ExpandableListConnector.GroupMetadata.obtain(int,int,int,long)",1,1,1
"android.widget.ExpandableListConnector.GroupMetadata.writeToParcel(Parcel,int)",1,1,1
"android.widget.ExpandableListConnector.MyDataSetObserver.onChanged()",1,1,1
"android.widget.ExpandableListConnector.MyDataSetObserver.onInvalidated()",1,1,1
"android.widget.ExpandableListConnector.PositionMetadata.PositionMetadata()",1,1,1
"android.widget.ExpandableListConnector.PositionMetadata.getRecycledOrCreate()",2,2,2
"android.widget.ExpandableListConnector.PositionMetadata.isExpanded()",1,1,1
"android.widget.ExpandableListConnector.PositionMetadata.obtain(int,int,int,int,GroupMetadata,int)",1,1,1
"android.widget.ExpandableListConnector.PositionMetadata.recycle()",1,2,2
"android.widget.ExpandableListConnector.PositionMetadata.resetState()",1,1,1
"android.widget.ExpandableListConnector.areAllItemsEnabled()",1,1,1
"android.widget.ExpandableListConnector.collapseGroup(PositionMetadata)",2,1,2
"android.widget.ExpandableListConnector.collapseGroup(int)",2,1,2
"android.widget.ExpandableListConnector.expandGroup(PositionMetadata)",4,2,6
"android.widget.ExpandableListConnector.expandGroup(int)",1,1,1
"android.widget.ExpandableListConnector.findGroupPosition(long,int)",7,2,14
"android.widget.ExpandableListConnector.getAdapter()",1,1,1
"android.widget.ExpandableListConnector.getCount()",1,1,1
"android.widget.ExpandableListConnector.getExpandedGroupMetadataList()",1,1,1
"android.widget.ExpandableListConnector.getFilter()",2,2,2
"android.widget.ExpandableListConnector.getFlattenedPos(ExpandableListPosition)",11,10,11
"android.widget.ExpandableListConnector.getItem(int)",3,3,3
"android.widget.ExpandableListConnector.getItemId(int)",3,3,3
"android.widget.ExpandableListConnector.getItemViewType(int)",1,3,4
"android.widget.ExpandableListConnector.getUnflattenedPos(int)",9,9,9
"android.widget.ExpandableListConnector.getView(int,View,ViewGroup)",3,3,3
"android.widget.ExpandableListConnector.getViewTypeCount()",2,2,2
"android.widget.ExpandableListConnector.hasStableIds()",1,1,1
"android.widget.ExpandableListConnector.isEmpty()",1,2,2
"android.widget.ExpandableListConnector.isEnabled(int)",1,2,2
"android.widget.ExpandableListConnector.isGroupExpanded(int)",3,2,3
"android.widget.ExpandableListConnector.refreshExpGroupMetadataList(boolean,boolean)",1,8,10
"android.widget.ExpandableListConnector.setExpandableListAdapter(ExpandableListAdapter)",1,2,2
"android.widget.ExpandableListConnector.setExpandedGroupMetadataList(ArrayList<GroupMetadata>)",4,2,5
"android.widget.ExpandableListConnector.setMaxExpGroupCount(int)",1,1,1
"android.widget.ExpandableListPosition.ExpandableListPosition()",1,1,1
"android.widget.ExpandableListPosition.getPackedPosition()",2,2,2
"android.widget.ExpandableListPosition.getRecycledOrCreate()",2,2,2
"android.widget.ExpandableListPosition.obtain(int,int,int,int)",1,1,1
"android.widget.ExpandableListPosition.obtainChildPosition(int,int)",1,1,1
"android.widget.ExpandableListPosition.obtainGroupPosition(int)",1,1,1
"android.widget.ExpandableListPosition.obtainPosition(long)",2,2,3
"android.widget.ExpandableListPosition.recycle()",1,2,2
"android.widget.ExpandableListPosition.resetState()",1,1,1
"android.widget.ExpandableListView.ExpandableListContextMenuInfo.ExpandableListContextMenuInfo(View,long,long)",1,1,1
"android.widget.ExpandableListView.ExpandableListView(Context)",1,1,1
"android.widget.ExpandableListView.ExpandableListView(Context,AttributeSet)",1,1,1
"android.widget.ExpandableListView.ExpandableListView(Context,AttributeSet,int)",1,1,1
"android.widget.ExpandableListView.SavedState.SavedState(Parcel)",1,1,1
"android.widget.ExpandableListView.SavedState.SavedState(Parcelable,ArrayList<GroupMetadata>)",1,1,1
"android.widget.ExpandableListView.SavedState.writeToParcel(Parcel,int)",1,1,1
"android.widget.ExpandableListView.collapseGroup(int)",1,2,2
"android.widget.ExpandableListView.createContextMenuInfo(View,int,long)",2,1,2
"android.widget.ExpandableListView.dispatchDraw(Canvas)",6,6,17
"android.widget.ExpandableListView.drawDivider(Canvas,Rect,int)",3,5,5
"android.widget.ExpandableListView.expandGroup(int)",1,2,2
"android.widget.ExpandableListView.getAbsoluteFlatPosition(int)",1,1,1
"android.widget.ExpandableListView.getAdapter()",1,1,1
"android.widget.ExpandableListView.getChildOrGroupId(ExpandableListPosition)",2,2,2
"android.widget.ExpandableListView.getExpandableListAdapter()",1,1,1
"android.widget.ExpandableListView.getExpandableListPosition(int)",2,1,2
"android.widget.ExpandableListView.getFlatListPosition(long)",1,1,1
"android.widget.ExpandableListView.getFlatPositionForConnector(int)",1,1,1
"android.widget.ExpandableListView.getIndicator(PositionMetadata)",1,6,10
"android.widget.ExpandableListView.getPackedPositionChild(long)",3,1,3
"android.widget.ExpandableListView.getPackedPositionForChild(int,int)",1,1,1
"android.widget.ExpandableListView.getPackedPositionForGroup(int)",1,1,1
"android.widget.ExpandableListView.getPackedPositionGroup(long)",2,1,2
"android.widget.ExpandableListView.getPackedPositionType(long)",2,1,3
"android.widget.ExpandableListView.getSelectedId()",3,2,3
"android.widget.ExpandableListView.getSelectedPosition()",1,1,1
"android.widget.ExpandableListView.handleItemClick(View,int,long)",5,8,8
"android.widget.ExpandableListView.isGroupExpanded(int)",1,1,1
"android.widget.ExpandableListView.isHeaderOrFooterPosition(int)",1,2,2
"android.widget.ExpandableListView.onRestoreInstanceState(Parcelable)",2,3,4
"android.widget.ExpandableListView.onSaveInstanceState()",1,2,2
"android.widget.ExpandableListView.performItemClick(View,int,long)",2,2,2
"android.widget.ExpandableListView.setAdapter(ExpandableListAdapter)",1,1,2
"android.widget.ExpandableListView.setAdapter(ListAdapter)",1,1,1
"android.widget.ExpandableListView.setChildDivider(Drawable)",1,1,1
"android.widget.ExpandableListView.setChildIndicator(Drawable)",1,1,1
"android.widget.ExpandableListView.setChildIndicatorBounds(int,int)",1,1,1
"android.widget.ExpandableListView.setGroupIndicator(Drawable)",1,1,1
"android.widget.ExpandableListView.setIndicatorBounds(int,int)",1,1,1
"android.widget.ExpandableListView.setOnChildClickListener(OnChildClickListener)",1,1,1
"android.widget.ExpandableListView.setOnGroupClickListener(OnGroupClickListener)",1,1,1
"android.widget.ExpandableListView.setOnGroupCollapseListener(OnGroupCollapseListener)",1,1,1
"android.widget.ExpandableListView.setOnGroupExpandListener(OnGroupExpandListener)",1,1,1
"android.widget.ExpandableListView.setOnItemClickListener(OnItemClickListener)",1,1,1
"android.widget.ExpandableListView.setSelectedChild(int,int,boolean)",4,2,4
"android.widget.ExpandableListView.setSelectedGroup(int)",1,1,1
"android.widget.FastScroller.FastScroller(Context,AbsListView)",1,1,1
"android.widget.FastScroller.ScrollFade.getAlpha()",2,1,3
"android.widget.FastScroller.ScrollFade.run()",2,3,3
"android.widget.FastScroller.ScrollFade.startFade()",1,1,1
"android.widget.FastScroller.cancelFling()",1,1,1
"android.widget.FastScroller.draw(Canvas)",4,11,15
"android.widget.FastScroller.getSectionIndexer()",1,1,1
"android.widget.FastScroller.getSections()",1,2,3
"android.widget.FastScroller.getSectionsFromIndexer()",1,5,5
"android.widget.FastScroller.getState()",1,1,1
"android.widget.FastScroller.getWidth()",1,1,1
"android.widget.FastScroller.init(Context)",1,3,3
"android.widget.FastScroller.isAlwaysShowEnabled()",1,1,1
"android.widget.FastScroller.isPointInside(float,float)",2,2,6
"android.widget.FastScroller.isVisible()",1,1,1
"android.widget.FastScroller.onInterceptTouchEvent(MotionEvent)",3,4,4
"android.widget.FastScroller.onItemCountChanged(int,int)",1,1,2
"android.widget.FastScroller.onScroll(AbsListView,int,int,int)",3,7,12
"android.widget.FastScroller.onSizeChanged(int,int,int,int)",2,5,6
"android.widget.FastScroller.onTouchEvent(MotionEvent)",9,12,17
"android.widget.FastScroller.refreshDrawableState()",1,5,6
"android.widget.FastScroller.resetThumbPos()",2,2,3
"android.widget.FastScroller.scrollTo(float)",6,13,21
"android.widget.FastScroller.setAlwaysShow(boolean)",1,3,3
"android.widget.FastScroller.setScrollbarPosition(int)",2,2,3
"android.widget.FastScroller.setState(int)",2,4,6
"android.widget.FastScroller.stop()",1,1,1
"android.widget.FastScroller.useThumbDrawable(Context,Drawable)",1,2,2
"android.widget.Filter.Filter()",1,1,1
"android.widget.Filter.FilterResults.FilterResults()",1,1,1
"android.widget.Filter.RequestHandler.RequestHandler(Looper)",1,1,1
"android.widget.Filter.RequestHandler.handleMessage(Message)",2,5,6
"android.widget.Filter.ResultsHandler.handleMessage(Message)",1,2,3
"android.widget.Filter.convertResultToString(Object)",1,2,2
"android.widget.Filter.filter(CharSequence)",1,1,1
"android.widget.Filter.filter(CharSequence,FilterListener)",1,4,4
"android.widget.Filter.setDelayer(Delayer)",1,1,1
"android.widget.FrameLayout.FrameLayout(Context)",1,1,1
"android.widget.FrameLayout.FrameLayout(Context,AttributeSet)",1,1,1
"android.widget.FrameLayout.FrameLayout(Context,AttributeSet,int)",1,3,3
"android.widget.FrameLayout.LayoutParams.LayoutParams(Context,AttributeSet)",1,1,1
"android.widget.FrameLayout.LayoutParams.LayoutParams(LayoutParams)",1,1,1
"android.widget.FrameLayout.LayoutParams.LayoutParams(MarginLayoutParams)",1,1,1
"android.widget.FrameLayout.LayoutParams.LayoutParams(int,int)",1,1,1
"android.widget.FrameLayout.LayoutParams.LayoutParams(int,int,int)",1,1,1
"android.widget.FrameLayout.checkLayoutParams(LayoutParams)",1,1,1
"android.widget.FrameLayout.draw(Canvas)",1,4,4
"android.widget.FrameLayout.drawableStateChanged()",1,3,3
"android.widget.FrameLayout.gatherTransparentRegion(Region)",1,2,3
"android.widget.FrameLayout.generateDefaultLayoutParams()",1,1,1
"android.widget.FrameLayout.generateLayoutParams(AttributeSet)",1,1,1
"android.widget.FrameLayout.generateLayoutParams(LayoutParams)",1,1,1
"android.widget.FrameLayout.getConsiderGoneChildrenWhenMeasuring()",1,1,1
"android.widget.FrameLayout.getForeground()",1,1,1
"android.widget.FrameLayout.jumpDrawablesToCurrentState()",1,2,2
"android.widget.FrameLayout.onLayout(boolean,int,int,int,int)",3,5,12
"android.widget.FrameLayout.onMeasure(int,int)",1,5,5
"android.widget.FrameLayout.onSizeChanged(int,int,int,int)",1,1,1
"android.widget.FrameLayout.setForeground(Drawable)",1,6,7
"android.widget.FrameLayout.setForegroundGravity(int)",1,3,7
"android.widget.FrameLayout.setMeasureAllChildren(boolean)",1,1,1
"android.widget.FrameLayout.verifyDrawable(Drawable)",1,2,2
"android.widget.Gallery.FlingRunnable.FlingRunnable()",1,1,1
"android.widget.Gallery.FlingRunnable.endFling(boolean)",1,2,2
"android.widget.Gallery.FlingRunnable.run()",2,4,5
"android.widget.Gallery.FlingRunnable.startCommon()",1,1,1
"android.widget.Gallery.FlingRunnable.startUsingDistance(int)",2,1,2
"android.widget.Gallery.FlingRunnable.startUsingVelocity(int)",2,1,3
"android.widget.Gallery.FlingRunnable.stop(boolean)",1,1,1
"android.widget.Gallery.Gallery(Context)",1,1,1
"android.widget.Gallery.Gallery(Context,AttributeSet)",1,1,1
"android.widget.Gallery.Gallery(Context,AttributeSet,int)",1,3,3
"android.widget.Gallery.LayoutParams.LayoutParams(Context,AttributeSet)",1,1,1
"android.widget.Gallery.LayoutParams.LayoutParams(LayoutParams)",1,1,1
"android.widget.Gallery.LayoutParams.LayoutParams(int,int)",1,1,1
"android.widget.Gallery.calculateTop(View,boolean)",2,4,6
"android.widget.Gallery.checkLayoutParams(LayoutParams)",1,1,1
"android.widget.Gallery.computeHorizontalScrollExtent()",1,1,1
"android.widget.Gallery.computeHorizontalScrollOffset()",1,1,1
"android.widget.Gallery.computeHorizontalScrollRange()",1,1,1
"android.widget.Gallery.detachOffScreenChildren(boolean)",6,6,7
"android.widget.Gallery.dispatchKeyEvent(KeyEvent)",1,1,1
"android.widget.Gallery.dispatchLongPress(View,int,long)",1,4,4
"android.widget.Gallery.dispatchPress(View)",1,2,2
"android.widget.Gallery.dispatchSetPressed(boolean)",1,2,2
"android.widget.Gallery.dispatchSetSelected(boolean)",1,1,1
"android.widget.Gallery.dispatchUnpress()",1,2,2
"android.widget.Gallery.fillToGalleryLeft()",1,3,4
"android.widget.Gallery.fillToGalleryRight()",1,3,4
"android.widget.Gallery.generateDefaultLayoutParams()",1,1,1
"android.widget.Gallery.generateLayoutParams(AttributeSet)",1,1,1
"android.widget.Gallery.generateLayoutParams(LayoutParams)",1,1,1
"android.widget.Gallery.getCenterOfGallery()",1,1,1
"android.widget.Gallery.getCenterOfView(View)",1,1,1
"android.widget.Gallery.getChildDrawingOrder(int,int)",4,1,4
"android.widget.Gallery.getChildHeight(View)",1,1,1
"android.widget.Gallery.getChildStaticTransformation(View,Transformation)",1,1,2
"android.widget.Gallery.getContextMenuInfo()",1,1,1
"android.widget.Gallery.getLimitedMotionScrollAmount(boolean,int)",5,2,7
"android.widget.Gallery.layout(int,boolean)",2,4,4
"android.widget.Gallery.makeAndAddView(int,int,int,boolean)",3,3,3
"android.widget.Gallery.moveNext()",2,2,3
"android.widget.Gallery.movePrevious()",2,2,3
"android.widget.Gallery.offsetChildrenLeftAndRight(int)",1,2,2
"android.widget.Gallery.onCancel()",1,1,1
"android.widget.Gallery.onDown(MotionEvent)",1,2,2
"android.widget.Gallery.onFinishedMovement()",1,2,2
"android.widget.Gallery.onFling(MotionEvent,MotionEvent,float,float)",1,2,3
"android.widget.Gallery.onFocusChanged(boolean,int,Rect)",1,2,3
"android.widget.Gallery.onKeyDown(int,KeyEvent)",2,4,6
"android.widget.Gallery.onKeyUp(int,KeyEvent)",2,4,4
"android.widget.Gallery.onLayout(boolean,int,int,int,int)",1,1,1
"android.widget.Gallery.onLongPress(MotionEvent)",2,1,2
"android.widget.Gallery.onScroll(MotionEvent,MotionEvent,float,float)",1,4,6
"android.widget.Gallery.onShowPress(MotionEvent)",1,1,1
"android.widget.Gallery.onSingleTapUp(MotionEvent)",2,3,4
"android.widget.Gallery.onTouchEvent(MotionEvent)",1,3,3
"android.widget.Gallery.onUp()",1,2,2
"android.widget.Gallery.scrollIntoSlots()",2,3,4
"android.widget.Gallery.scrollToChild(int)",2,2,2
"android.widget.Gallery.selectionChanged()",1,2,2
"android.widget.Gallery.setAnimationDuration(int)",1,1,1
"android.widget.Gallery.setCallbackDuringFling(boolean)",1,1,1
"android.widget.Gallery.setCallbackOnUnselectedItemClick(boolean)",1,1,1
"android.widget.Gallery.setGravity(int)",1,2,2
"android.widget.Gallery.setSelectedPositionInt(int)",1,1,1
"android.widget.Gallery.setSelectionToCenterChild()",5,5,9
"android.widget.Gallery.setSpacing(int)",1,1,1
"android.widget.Gallery.setUnselectedAlpha(float)",1,1,1
"android.widget.Gallery.setUpChild(View,int,int,boolean)",1,2,4
"android.widget.Gallery.showContextMenu()",2,3,3
"android.widget.Gallery.showContextMenuForChild(View)",2,1,2
"android.widget.Gallery.trackMotionScroll(int)",2,3,4
"android.widget.Gallery.updateSelectedItemMetadata()",2,3,5
"android.widget.GridView.GridView(Context)",1,1,1
"android.widget.GridView.GridView(Context,AttributeSet)",1,1,1
"android.widget.GridView.GridView(Context,AttributeSet,int)",1,4,4
"android.widget.GridView.adjustForBottomFadingEdge(View,int,int)",1,2,2
"android.widget.GridView.adjustForTopFadingEdge(View,int,int)",1,2,2
"android.widget.GridView.adjustViewsUpOrDown()",1,4,8
"android.widget.GridView.arrowScroll(int)",2,9,12
"android.widget.GridView.attachLayoutAnimationParameters(View,LayoutParams,int,int)",1,1,3
"android.widget.GridView.commonKey(int,int,KeyEvent)",10,49,59
"android.widget.GridView.computeVerticalScrollExtent()",2,3,4
"android.widget.GridView.computeVerticalScrollOffset()",3,4,4
"android.widget.GridView.computeVerticalScrollRange()",1,2,2
"android.widget.GridView.correctTooHigh(int,int,int)",1,5,9
"android.widget.GridView.correctTooLow(int,int,int)",1,5,9
"android.widget.GridView.determineColumns(int)",3,3,12
"android.widget.GridView.fillDown(int,int)",1,2,5
"android.widget.GridView.fillFromBottom(int,int)",1,1,1
"android.widget.GridView.fillFromSelection(int,int,int)",1,3,4
"android.widget.GridView.fillFromTop(int)",1,1,2
"android.widget.GridView.fillGap(boolean)",1,6,8
"android.widget.GridView.fillSelection(int,int)",1,3,4
"android.widget.GridView.fillSpecific(int,int)",4,5,9
"android.widget.GridView.fillUp(int,int)",1,3,6
"android.widget.GridView.findMotionRow(int)",7,5,7
"android.widget.GridView.fullScroll(int)",1,4,4
"android.widget.GridView.getAdapter()",1,1,1
"android.widget.GridView.getBottomSelectionPixel(int,int,int,int)",1,1,2
"android.widget.GridView.getNumColumns()",1,1,1
"android.widget.GridView.getStretchMode()",1,1,1
"android.widget.GridView.getTopSelectionPixel(int,int,int)",1,1,2
"android.widget.GridView.isCandidateSelection(int,int)",8,3,11
"android.widget.GridView.layoutChildren()",5,23,41
"android.widget.GridView.lookForSelectablePosition(int,boolean)",3,2,5
"android.widget.GridView.makeAndAddView(int,int,boolean,int,boolean,int)",3,3,3
"android.widget.GridView.makeRow(int,int,boolean)",1,3,11
"android.widget.GridView.moveSelection(int,int,int)",1,8,11
"android.widget.GridView.onFocusChanged(boolean,int,Rect)",4,4,7
"android.widget.GridView.onKeyDown(int,KeyEvent)",1,1,1
"android.widget.GridView.onKeyMultiple(int,int,KeyEvent)",1,1,1
"android.widget.GridView.onKeyUp(int,KeyEvent)",1,1,1
"android.widget.GridView.onMeasure(int,int)",4,7,16
"android.widget.GridView.pageScroll(int)",2,4,4
"android.widget.GridView.pinToBottom(int)",1,3,3
"android.widget.GridView.pinToTop(int)",1,3,3
"android.widget.GridView.sequenceScroll(int)",2,7,8
"android.widget.GridView.setAdapter(ListAdapter)",1,4,5
"android.widget.GridView.setColumnWidth(int)",1,2,2
"android.widget.GridView.setGravity(int)",1,2,2
"android.widget.GridView.setHorizontalSpacing(int)",1,2,2
"android.widget.GridView.setNumColumns(int)",1,2,2
"android.widget.GridView.setRemoteViewsAdapter(Intent)",1,1,1
"android.widget.GridView.setSelection(int)",1,2,2
"android.widget.GridView.setSelectionInt(int)",1,2,4
"android.widget.GridView.setStretchMode(int)",1,2,2
"android.widget.GridView.setVerticalSpacing(int)",1,2,2
"android.widget.GridView.setupChild(View,int,int,boolean,int,boolean,boolean,int)",2,17,26
"android.widget.GridView.smoothScrollByOffset(int)",1,1,1
"android.widget.GridView.smoothScrollToPosition(int)",1,1,1
"android.widget.HeaderViewListAdapter.HeaderViewListAdapter(ArrayList<FixedViewInfo>,ArrayList<FixedViewInfo>,ListAdapter)",1,2,4
"android.widget.HeaderViewListAdapter.areAllItemsEnabled()",2,3,3
"android.widget.HeaderViewListAdapter.areAllListInfosSelectable(ArrayList<FixedViewInfo>)",4,1,4
"android.widget.HeaderViewListAdapter.getCount()",2,2,2
"android.widget.HeaderViewListAdapter.getFilter()",2,2,2
"android.widget.HeaderViewListAdapter.getFootersCount()",1,1,1
"android.widget.HeaderViewListAdapter.getHeadersCount()",1,1,1
"android.widget.HeaderViewListAdapter.getItem(int)",4,4,4
"android.widget.HeaderViewListAdapter.getItemId(int)",3,3,4
"android.widget.HeaderViewListAdapter.getItemViewType(int)",3,3,4
"android.widget.HeaderViewListAdapter.getView(int,View,ViewGroup)",4,4,4
"android.widget.HeaderViewListAdapter.getViewTypeCount()",2,2,2
"android.widget.HeaderViewListAdapter.getWrappedAdapter()",1,1,1
"android.widget.HeaderViewListAdapter.hasStableIds()",2,2,2
"android.widget.HeaderViewListAdapter.isEmpty()",1,2,2
"android.widget.HeaderViewListAdapter.isEnabled(int)",4,4,4
"android.widget.HeaderViewListAdapter.registerDataSetObserver(DataSetObserver)",1,2,2
"android.widget.HeaderViewListAdapter.removeFooter(View)",3,4,4
"android.widget.HeaderViewListAdapter.removeHeader(View)",3,4,4
"android.widget.HeaderViewListAdapter.unregisterDataSetObserver(DataSetObserver)",1,2,2
"android.widget.HorizontalScrollView.HorizontalScrollView(Context)",1,1,1
"android.widget.HorizontalScrollView.HorizontalScrollView(Context,AttributeSet)",1,1,1
"android.widget.HorizontalScrollView.HorizontalScrollView(Context,AttributeSet,int)",1,1,1
"android.widget.HorizontalScrollView.addView(View)",2,1,2
"android.widget.HorizontalScrollView.addView(View,LayoutParams)",2,1,2
"android.widget.HorizontalScrollView.addView(View,int)",2,1,2
"android.widget.HorizontalScrollView.addView(View,int,LayoutParams)",2,1,2
"android.widget.HorizontalScrollView.arrowScroll(int)",3,10,14
"android.widget.HorizontalScrollView.canScroll()",2,2,2
"android.widget.HorizontalScrollView.clamp(int,int,int)",3,1,4
"android.widget.HorizontalScrollView.computeHorizontalScrollOffset()",1,1,1
"android.widget.HorizontalScrollView.computeHorizontalScrollRange()",2,1,4
"android.widget.HorizontalScrollView.computeScroll()",1,6,11
"android.widget.HorizontalScrollView.computeScrollDeltaToGetChildRectOnScreen(Rect)",2,3,10
"android.widget.HorizontalScrollView.dispatchKeyEvent(KeyEvent)",1,2,2
"android.widget.HorizontalScrollView.doScrollX(int)",1,3,3
"android.widget.HorizontalScrollView.draw(Canvas)",1,6,6
"android.widget.HorizontalScrollView.executeKeyEvent(KeyEvent)",4,9,13
"android.widget.HorizontalScrollView.findFocusableViewInBounds(boolean,int,int)",1,7,14
"android.widget.HorizontalScrollView.findFocusableViewInMyBounds(boolean,int,View)",2,3,4
"android.widget.HorizontalScrollView.fling(int)",1,3,6
"android.widget.HorizontalScrollView.fullScroll(int)",1,3,3
"android.widget.HorizontalScrollView.getLeftFadingEdgeStrength()",3,1,3
"android.widget.HorizontalScrollView.getMaxScrollAmount()",1,1,1
"android.widget.HorizontalScrollView.getRightFadingEdgeStrength()",3,1,3
"android.widget.HorizontalScrollView.getScrollRange()",1,2,2
"android.widget.HorizontalScrollView.inChild(int,int)",2,5,5
"android.widget.HorizontalScrollView.initScrollView()",1,1,1
"android.widget.HorizontalScrollView.isFillViewport()",1,1,1
"android.widget.HorizontalScrollView.isOffScreen(View)",1,1,1
"android.widget.HorizontalScrollView.isSmoothScrollingEnabled()",1,1,1
"android.widget.HorizontalScrollView.isViewDescendantOf(View,View)",2,2,3
"android.widget.HorizontalScrollView.isWithinDeltaOfScreen(View,int)",1,2,2
"android.widget.HorizontalScrollView.measureChild(View,int,int)",1,1,1
"android.widget.HorizontalScrollView.measureChildWithMargins(View,int,int,int,int)",1,1,1
"android.widget.HorizontalScrollView.onInterceptTouchEvent(MotionEvent)",3,7,12
"android.widget.HorizontalScrollView.onLayout(boolean,int,int,int,int)",1,3,3
"android.widget.HorizontalScrollView.onMeasure(int,int)",3,3,5
"android.widget.HorizontalScrollView.onOverScrolled(int,int,boolean,boolean)",1,3,3
"android.widget.HorizontalScrollView.onRequestFocusInDescendants(int,Rect)",3,2,6
"android.widget.HorizontalScrollView.onSecondaryPointerUp(MotionEvent)",1,3,4
"android.widget.HorizontalScrollView.onSizeChanged(int,int,int,int)",2,2,4
"android.widget.HorizontalScrollView.onTouchEvent(MotionEvent)",3,27,33
"android.widget.HorizontalScrollView.pageScroll(int)",1,4,5
"android.widget.HorizontalScrollView.requestChildFocus(View,View)",1,3,3
"android.widget.HorizontalScrollView.requestChildRectangleOnScreen(View,Rect,boolean)",1,1,1
"android.widget.HorizontalScrollView.requestLayout()",1,1,1
"android.widget.HorizontalScrollView.scrollAndFocus(int,int,int)",1,3,7
"android.widget.HorizontalScrollView.scrollTo(int,int)",1,3,4
"android.widget.HorizontalScrollView.scrollToChild(View)",1,2,2
"android.widget.HorizontalScrollView.scrollToChildRect(Rect,boolean)",1,3,3
"android.widget.HorizontalScrollView.setFillViewport(boolean)",1,2,2
"android.widget.HorizontalScrollView.setOverScrollMode(int)",1,3,3
"android.widget.HorizontalScrollView.setSmoothScrollingEnabled(boolean)",1,1,1
"android.widget.HorizontalScrollView.smoothScrollBy(int,int)",2,3,4
"android.widget.HorizontalScrollView.smoothScrollTo(int,int)",1,1,1
"android.widget.ImageButton.ImageButton(Context)",1,1,1
"android.widget.ImageButton.ImageButton(Context,AttributeSet)",1,1,1
"android.widget.ImageButton.ImageButton(Context,AttributeSet,int)",1,1,1
"android.widget.ImageButton.onSetAlpha(int)",1,1,1
"android.widget.ImageSwitcher.ImageSwitcher(Context)",1,1,1
"android.widget.ImageSwitcher.ImageSwitcher(Context,AttributeSet)",1,1,1
"android.widget.ImageSwitcher.setImageDrawable(Drawable)",1,1,1
"android.widget.ImageSwitcher.setImageResource(int)",1,1,1
"android.widget.ImageSwitcher.setImageURI(Uri)",1,1,1
"android.widget.ImageView.ImageView(Context)",1,1,1
"android.widget.ImageView.ImageView(Context,AttributeSet)",1,1,1
"android.widget.ImageView.ImageView(Context,AttributeSet,int)",1,4,4
"android.widget.ImageView.ScaleType.ScaleType(int)",1,1,1
"android.widget.ImageView.applyColorMod()",1,2,3
"android.widget.ImageView.clearColorFilter()",1,1,1
"android.widget.ImageView.configureBounds()",2,8,18
"android.widget.ImageView.drawableStateChanged()",1,3,3
"android.widget.ImageView.getBaseline()",2,2,2
"android.widget.ImageView.getBaselineAlignBottom()",1,1,1
"android.widget.ImageView.getDrawable()",1,1,1
"android.widget.ImageView.getImageMatrix()",1,1,1
"android.widget.ImageView.getScaleType()",1,1,1
"android.widget.ImageView.initImageView()",1,1,1
"android.widget.ImageView.invalidateDrawable(Drawable)",1,2,2
"android.widget.ImageView.jumpDrawablesToCurrentState()",1,2,2
"android.widget.ImageView.onCreateDrawableState(int)",3,3,3
"android.widget.ImageView.onDraw(Canvas)",3,4,9
"android.widget.ImageView.onMeasure(int,int)",1,5,14
"android.widget.ImageView.onSetAlpha(int)",2,3,3
"android.widget.ImageView.resizeFromDrawable()",1,3,6
"android.widget.ImageView.resolveAdjustedSize(int,int,int)",2,2,4
"android.widget.ImageView.resolveUri()",5,10,12
"android.widget.ImageView.scaleTypeToScaleToFit(ScaleType)",1,1,1
"android.widget.ImageView.setAdjustViewBounds(boolean)",1,2,2
"android.widget.ImageView.setAlpha(int)",1,2,2
"android.widget.ImageView.setBaseline(int)",1,2,2
"android.widget.ImageView.setBaselineAlignBottom(boolean)",1,2,2
"android.widget.ImageView.setColorFilter(ColorFilter)",1,2,2
"android.widget.ImageView.setColorFilter(int)",1,1,1
"android.widget.ImageView.setColorFilter(int,Mode)",1,1,1
"android.widget.ImageView.setFrame(int,int,int,int)",1,1,1
"android.widget.ImageView.setImageBitmap(Bitmap)",1,1,1
"android.widget.ImageView.setImageDrawable(Drawable)",1,2,2
"android.widget.ImageView.setImageLevel(int)",1,2,2
"android.widget.ImageView.setImageMatrix(Matrix)",1,6,7
"android.widget.ImageView.setImageResource(int)",1,2,3
"android.widget.ImageView.setImageState(int[],boolean)",1,2,2
"android.widget.ImageView.setImageURI(Uri)",1,6,6
"android.widget.ImageView.setMaxHeight(int)",1,1,1
"android.widget.ImageView.setMaxWidth(int)",1,1,1
"android.widget.ImageView.setScaleType(ScaleType)",2,2,3
"android.widget.ImageView.setSelected(boolean)",1,1,1
"android.widget.ImageView.updateDrawable(Drawable)",1,4,4
"android.widget.ImageView.verifyDrawable(Drawable)",1,2,2
"android.widget.LinearLayout.LayoutParams.LayoutParams(Context,AttributeSet)",1,1,1
"android.widget.LinearLayout.LayoutParams.LayoutParams(LayoutParams)",1,1,1
"android.widget.LinearLayout.LayoutParams.LayoutParams(MarginLayoutParams)",1,1,1
"android.widget.LinearLayout.LayoutParams.LayoutParams(int,int)",1,1,1
"android.widget.LinearLayout.LayoutParams.LayoutParams(int,int,float)",1,1,1
"android.widget.LinearLayout.LayoutParams.debug(String)",1,1,1
"android.widget.LinearLayout.LinearLayout(Context)",1,1,1
"android.widget.LinearLayout.LinearLayout(Context,AttributeSet)",1,1,1
"android.widget.LinearLayout.LinearLayout(Context,AttributeSet,int)",1,4,4
"android.widget.LinearLayout.checkLayoutParams(LayoutParams)",1,1,1
"android.widget.LinearLayout.drawDividersHorizontal(Canvas)",1,8,8
"android.widget.LinearLayout.drawDividersVertical(Canvas)",1,8,8
"android.widget.LinearLayout.drawHorizontalDivider(Canvas,int)",1,1,1
"android.widget.LinearLayout.drawVerticalDivider(Canvas,int)",1,1,1
"android.widget.LinearLayout.forceUniformHeight(int,int)",1,4,4
"android.widget.LinearLayout.forceUniformWidth(int,int)",1,4,4
"android.widget.LinearLayout.generateDefaultLayoutParams()",3,1,3
"android.widget.LinearLayout.generateLayoutParams(AttributeSet)",1,1,1
"android.widget.LinearLayout.generateLayoutParams(LayoutParams)",1,1,1
"android.widget.LinearLayout.getBaseline()",6,3,9
"android.widget.LinearLayout.getBaselineAlignedChildIndex()",1,1,1
"android.widget.LinearLayout.getChildrenSkipCount(View,int)",1,1,1
"android.widget.LinearLayout.getLocationOffset(View)",1,1,1
"android.widget.LinearLayout.getNextLocationOffset(View)",1,1,1
"android.widget.LinearLayout.getOrientation()",1,1,1
"android.widget.LinearLayout.getShowDividers()",1,1,1
"android.widget.LinearLayout.getVirtualChildAt(int)",1,1,1
"android.widget.LinearLayout.getVirtualChildCount()",1,1,1
"android.widget.LinearLayout.getWeightSum()",1,1,1
"android.widget.LinearLayout.isBaselineAligned()",1,1,1
"android.widget.LinearLayout.isMeasureWithLargestChildEnabled()",1,1,1
"android.widget.LinearLayout.layoutHorizontal()",3,8,18
"android.widget.LinearLayout.layoutVertical()",3,6,14
"android.widget.LinearLayout.measureChildBeforeLayout(View,int,int,int,int,int)",1,1,1
"android.widget.LinearLayout.measureHorizontal(int,int)",11,28,66
"android.widget.LinearLayout.measureNullChild(int)",1,1,1
"android.widget.LinearLayout.measureVertical(int,int)",12,16,48
"android.widget.LinearLayout.onDraw(Canvas)",2,2,3
"android.widget.LinearLayout.onLayout(boolean,int,int,int,int)",1,2,2
"android.widget.LinearLayout.onMeasure(int,int)",1,2,2
"android.widget.LinearLayout.setBaselineAligned(boolean)",1,1,1
"android.widget.LinearLayout.setBaselineAlignedChildIndex(int)",2,3,3
"android.widget.LinearLayout.setChildFrame(View,int,int,int,int)",1,1,1
"android.widget.LinearLayout.setDividerDrawable(Drawable)",2,2,3
"android.widget.LinearLayout.setGravity(int)",1,2,4
"android.widget.LinearLayout.setHorizontalGravity(int)",1,2,2
"android.widget.LinearLayout.setMeasureWithLargestChildEnabled(boolean)",1,1,1
"android.widget.LinearLayout.setOrientation(int)",1,2,2
"android.widget.LinearLayout.setShowDividers(int)",1,2,2
"android.widget.LinearLayout.setVerticalGravity(int)",1,2,2
"android.widget.LinearLayout.setWeightSum(float)",1,1,1
"android.widget.ListPopupWindow.DropDownListView.DropDownListView(Context,boolean)",1,1,1
"android.widget.ListPopupWindow.DropDownListView.hasFocus()",1,2,2
"android.widget.ListPopupWindow.DropDownListView.hasWindowFocus()",1,2,2
"android.widget.ListPopupWindow.DropDownListView.isFocused()",1,2,2
"android.widget.ListPopupWindow.DropDownListView.isInTouchMode()",1,2,3
"android.widget.ListPopupWindow.DropDownListView.obtainView(int,boolean[])",1,2,2
"android.widget.ListPopupWindow.ListPopupWindow(Context)",1,1,1
"android.widget.ListPopupWindow.ListPopupWindow(Context,AttributeSet)",1,1,1
"android.widget.ListPopupWindow.ListPopupWindow(Context,AttributeSet,int)",1,1,1
"android.widget.ListPopupWindow.ListPopupWindow(Context,AttributeSet,int,int)",1,1,1
"android.widget.ListPopupWindow.ListSelectorHider.run()",1,1,1
"android.widget.ListPopupWindow.PopupDataSetObserver.onChanged()",1,2,2
"android.widget.ListPopupWindow.PopupDataSetObserver.onInvalidated()",1,1,1
"android.widget.ListPopupWindow.PopupScrollListener.onScroll(AbsListView,int,int,int)",1,1,1
"android.widget.ListPopupWindow.PopupScrollListener.onScrollStateChanged(AbsListView,int)",1,4,4
"android.widget.ListPopupWindow.PopupTouchInterceptor.onTouch(View,MotionEvent)",1,9,9
"android.widget.ListPopupWindow.ResizePopupRunnable.run()",1,1,1
"android.widget.ListPopupWindow.buildDropDown()",3,10,17
"android.widget.ListPopupWindow.clearListSelection()",1,2,2
"android.widget.ListPopupWindow.dismiss()",1,1,1
"android.widget.ListPopupWindow.getAnchorView()",1,1,1
"android.widget.ListPopupWindow.getAnimationStyle()",1,1,1
"android.widget.ListPopupWindow.getBackground()",1,1,1
"android.widget.ListPopupWindow.getHeight()",1,1,1
"android.widget.ListPopupWindow.getHorizontalOffset()",1,1,1
"android.widget.ListPopupWindow.getInputMethodMode()",1,1,1
"android.widget.ListPopupWindow.getListView()",1,1,1
"android.widget.ListPopupWindow.getPromptPosition()",1,1,1
"android.widget.ListPopupWindow.getSelectedItem()",2,1,2
"android.widget.ListPopupWindow.getSelectedItemId()",2,1,2
"android.widget.ListPopupWindow.getSelectedItemPosition()",2,1,2
"android.widget.ListPopupWindow.getSelectedView()",2,1,2
"android.widget.ListPopupWindow.getSoftInputMode()",1,1,1
"android.widget.ListPopupWindow.getVerticalOffset()",1,1,1
"android.widget.ListPopupWindow.getWidth()",1,1,1
"android.widget.ListPopupWindow.isDropDownAlwaysVisible()",1,1,1
"android.widget.ListPopupWindow.isInputMethodNotNeeded()",1,1,1
"android.widget.ListPopupWindow.isModal()",1,1,1
"android.widget.ListPopupWindow.isShowing()",1,1,1
"android.widget.ListPopupWindow.onKeyDown(int,KeyEvent)",9,12,24
"android.widget.ListPopupWindow.onKeyPreIme(int,KeyEvent)",5,8,8
"android.widget.ListPopupWindow.onKeyUp(int,KeyEvent)",3,5,5
"android.widget.ListPopupWindow.performItemClick(int)",2,3,3
"android.widget.ListPopupWindow.postShow()",1,1,1
"android.widget.ListPopupWindow.removePromptView()",1,3,3
"android.widget.ListPopupWindow.setAdapter(ListAdapter)",1,5,5
"android.widget.ListPopupWindow.setAnchorView(View)",1,1,1
"android.widget.ListPopupWindow.setAnimationStyle(int)",1,1,1
"android.widget.ListPopupWindow.setBackgroundDrawable(Drawable)",1,1,1
"android.widget.ListPopupWindow.setContentWidth(int)",1,2,2
"android.widget.ListPopupWindow.setDropDownAlwaysVisible(boolean)",1,1,1
"android.widget.ListPopupWindow.setForceIgnoreOutsideTouch(boolean)",1,1,1
"android.widget.ListPopupWindow.setHeight(int)",1,1,1
"android.widget.ListPopupWindow.setHorizontalOffset(int)",1,1,1
"android.widget.ListPopupWindow.setInputMethodMode(int)",1,1,1
"android.widget.ListPopupWindow.setListSelector(Drawable)",1,1,1
"android.widget.ListPopupWindow.setModal(boolean)",1,1,1
"android.widget.ListPopupWindow.setOnDismissListener(OnDismissListener)",1,1,1
"android.widget.ListPopupWindow.setOnItemClickListener(OnItemClickListener)",1,1,1
"android.widget.ListPopupWindow.setOnItemSelectedListener(OnItemSelectedListener)",1,1,1
"android.widget.ListPopupWindow.setPromptPosition(int)",1,1,1
"android.widget.ListPopupWindow.setPromptView(View)",1,3,3
"android.widget.ListPopupWindow.setSelection(int)",1,4,4
"android.widget.ListPopupWindow.setSoftInputMode(int)",1,1,1
"android.widget.ListPopupWindow.setVerticalOffset(int)",1,1,1
"android.widget.ListPopupWindow.setWidth(int)",1,1,1
"android.widget.ListPopupWindow.show()",1,13,19
"android.widget.ListView.ArrowScrollFocusResult.getAmountToScroll()",1,1,1
"android.widget.ListView.ArrowScrollFocusResult.getSelectedPosition()",1,1,1
"android.widget.ListView.ArrowScrollFocusResult.populate(int,int)",1,1,1
"android.widget.ListView.FocusSelector.run()",1,1,1
"android.widget.ListView.FocusSelector.setup(int,int)",1,1,1
"android.widget.ListView.ListView(Context)",1,1,1
"android.widget.ListView.ListView(Context,AttributeSet)",1,1,1
"android.widget.ListView.ListView(Context,AttributeSet,int)",1,6,6
"android.widget.ListView.addFooterView(View)",1,1,1
"android.widget.ListView.addFooterView(View,Object,boolean)",1,2,2
"android.widget.ListView.addHeaderView(View)",1,1,1
"android.widget.ListView.addHeaderView(View,Object,boolean)",2,1,2
"android.widget.ListView.addViewAbove(View,int)",1,1,1
"android.widget.ListView.addViewBelow(View,int)",1,1,1
"android.widget.ListView.adjustViewsUpOrDown()",1,4,8
"android.widget.ListView.amountToScroll(int,int)",6,8,14
"android.widget.ListView.amountToScrollToNewFocus(int,View,int)",1,6,6
"android.widget.ListView.arrowScroll(int)",1,2,2
"android.widget.ListView.arrowScrollFocused(int)",6,14,20
"android.widget.ListView.arrowScrollImpl(int)",3,18,21
"android.widget.ListView.canAnimate()",1,2,2
"android.widget.ListView.clearRecycledState(ArrayList<FixedViewInfo>)",1,3,4
"android.widget.ListView.commonKey(int,int,KeyEvent)",8,47,58
"android.widget.ListView.correctTooHigh(int)",1,5,8
"android.widget.ListView.correctTooLow(int)",1,7,9
"android.widget.ListView.dispatchDraw(Canvas)",1,29,49
"android.widget.ListView.dispatchKeyEvent(KeyEvent)",1,4,4
"android.widget.ListView.dispatchPopulateAccessibilityEvent(AccessibilityEvent)",1,5,7
"android.widget.ListView.distanceToView(View)",1,1,3
"android.widget.ListView.drawDivider(Canvas,Rect,int)",1,1,1
"android.widget.ListView.drawOverscrollFooter(Canvas,Drawable,Rect)",1,1,2
"android.widget.ListView.drawOverscrollHeader(Canvas,Drawable,Rect)",1,1,2
"android.widget.ListView.fillAboveAndBelow(View,int)",1,2,2
"android.widget.ListView.fillDown(int,int)",1,2,5
"android.widget.ListView.fillFromMiddle(int,int)",1,3,3
"android.widget.ListView.fillFromSelection(int,int,int)",1,4,4
"android.widget.ListView.fillFromTop(int)",1,1,2
"android.widget.ListView.fillGap(boolean)",1,6,6
"android.widget.ListView.fillSpecific(int,int)",3,4,6
"android.widget.ListView.fillUp(int,int)",1,2,5
"android.widget.ListView.findMotionRow(int)",7,5,7
"android.widget.ListView.findViewByPredicateInHeadersOrFooters(ArrayList<FixedViewInfo>,Predicate<View>)",5,4,5
"android.widget.ListView.findViewByPredicateTraversal(Predicate<View>)",4,2,4
"android.widget.ListView.findViewInHeadersOrFooters(ArrayList<FixedViewInfo>,int)",5,4,5
"android.widget.ListView.findViewTraversal(int)",4,2,4
"android.widget.ListView.findViewWithTagInHeadersOrFooters(ArrayList<FixedViewInfo>,Object)",5,4,5
"android.widget.ListView.findViewWithTagTraversal(Object)",4,2,4
"android.widget.ListView.fullScroll(int)",1,9,9
"android.widget.ListView.getAdapter()",1,1,1
"android.widget.ListView.getArrowScrollPreviewLength()",1,1,1
"android.widget.ListView.getBottomSelectionPixel(int,int,int)",1,1,2
"android.widget.ListView.getCheckItemIds()",4,7,9
"android.widget.ListView.getDivider()",1,1,1
"android.widget.ListView.getDividerHeight()",1,1,1
"android.widget.ListView.getFooterViewsCount()",1,1,1
"android.widget.ListView.getHeaderViewsCount()",1,1,1
"android.widget.ListView.getItemsCanFocus()",1,1,1
"android.widget.ListView.getMaxScrollAmount()",1,1,1
"android.widget.ListView.getOverscrollFooter()",1,1,1
"android.widget.ListView.getOverscrollHeader()",1,1,1
"android.widget.ListView.getTopSelectionPixel(int,int,int)",1,1,2
"android.widget.ListView.handleHorizontalFocusWithinListItem(int)",7,7,12
"android.widget.ListView.handleNewSelectionChange(View,int,int,boolean)",2,4,7
"android.widget.ListView.isDirectChildHeaderOrFooter(View)",5,3,5
"android.widget.ListView.isOpaque()",1,5,5
"android.widget.ListView.isViewAncestorOf(View,View)",2,2,3
"android.widget.ListView.layoutChildren()",7,38,53
"android.widget.ListView.lookForSelectablePosition(int,boolean)",5,6,13
"android.widget.ListView.lookForSelectablePositionOnScreen(int)",8,7,14
"android.widget.ListView.makeAndAddView(int,int,boolean,int,boolean)",3,4,4
"android.widget.ListView.measureAndAdjustDown(View,int,int)",1,3,3
"android.widget.ListView.measureHeightOfChildren(int,int,int,int,int)",4,5,16
"android.widget.ListView.measureItem(View)",1,2,3
"android.widget.ListView.measureScrapChild(View,int,int)",1,3,3
"android.widget.ListView.moveSelection(View,View,int,int,int)",1,9,9
"android.widget.ListView.onFinishInflate()",1,3,3
"android.widget.ListView.onFocusChanged(boolean,int,Rect)",4,5,8
"android.widget.ListView.onKeyDown(int,KeyEvent)",1,1,1
"android.widget.ListView.onKeyMultiple(int,int,KeyEvent)",1,1,1
"android.widget.ListView.onKeyUp(int,KeyEvent)",1,1,1
"android.widget.ListView.onMeasure(int,int)",1,8,10
"android.widget.ListView.onSizeChanged(int,int,int,int)",1,3,4
"android.widget.ListView.onTouchEvent(MotionEvent)",2,3,4
"android.widget.ListView.pageScroll(int)",3,8,10
"android.widget.ListView.positionOfNewFocus(View)",3,2,3
"android.widget.ListView.recycleOnMeasure()",1,1,1
"android.widget.ListView.relayoutMeasuredItem(View)",1,1,1
"android.widget.ListView.removeFixedViewInfo(View,ArrayList<FixedViewInfo>)",3,3,3
"android.widget.ListView.removeFooterView(View)",2,3,3
"android.widget.ListView.removeHeaderView(View)",2,3,3
"android.widget.ListView.requestChildRectangleOnScreen(View,Rect,boolean)",1,4,14
"android.widget.ListView.resetList()",1,1,1
"android.widget.ListView.scrollListItemsBy(int)",4,12,12
"android.widget.ListView.setAdapter(ListAdapter)",1,6,8
"android.widget.ListView.setCacheColorHint(int)",1,2,3
"android.widget.ListView.setDivider(Drawable)",1,3,3
"android.widget.ListView.setDividerHeight(int)",1,1,1
"android.widget.ListView.setFooterDividersEnabled(boolean)",1,1,1
"android.widget.ListView.setHeaderDividersEnabled(boolean)",1,1,1
"android.widget.ListView.setItemsCanFocus(boolean)",1,2,2
"android.widget.ListView.setOverscrollFooter(Drawable)",1,1,1
"android.widget.ListView.setOverscrollHeader(Drawable)",1,2,2
"android.widget.ListView.setRemoteViewsAdapter(Intent)",1,1,1
"android.widget.ListView.setSelection(int)",1,1,1
"android.widget.ListView.setSelectionAfterHeaderView()",2,2,3
"android.widget.ListView.setSelectionFromTop(int,int)",2,5,6
"android.widget.ListView.setSelectionInt(int)",1,2,5
"android.widget.ListView.setupChild(View,int,int,boolean,int,boolean,boolean)",1,17,28
"android.widget.ListView.showingBottomFadingEdge()",1,1,2
"android.widget.ListView.showingTopFadingEdge()",1,2,2
"android.widget.ListView.smoothScrollByOffset(int)",1,1,1
"android.widget.ListView.smoothScrollToPosition(int)",1,1,1
"android.widget.MediaController.MediaController(Context)",1,1,1
"android.widget.MediaController.MediaController(Context,AttributeSet)",1,1,1
"android.widget.MediaController.MediaController(Context,boolean)",1,1,1
"android.widget.MediaController.disableUnsupportedButtons()",1,7,8
"android.widget.MediaController.dispatchKeyEvent(KeyEvent)",6,14,20
"android.widget.MediaController.doPauseResume()",1,2,2
"android.widget.MediaController.hide()",2,3,4
"android.widget.MediaController.initControllerView(View)",1,10,16
"android.widget.MediaController.initFloatingWindow()",1,1,1
"android.widget.MediaController.installPrevNextListeners()",1,3,3
"android.widget.MediaController.isShowing()",1,1,1
"android.widget.MediaController.makeControllerView()",1,1,1
"android.widget.MediaController.onFinishInflate()",1,2,2
"android.widget.MediaController.onTouchEvent(MotionEvent)",1,1,1
"android.widget.MediaController.onTrackballEvent(MotionEvent)",1,1,1
"android.widget.MediaController.setAnchorView(View)",1,1,1
"android.widget.MediaController.setEnabled(boolean)",1,7,9
"android.widget.MediaController.setMediaPlayer(MediaPlayerControl)",1,1,1
"android.widget.MediaController.setPrevNextListeners(OnClickListener,OnClickListener)",1,4,6
"android.widget.MediaController.setProgress()",2,5,7
"android.widget.MediaController.show()",1,1,1
"android.widget.MediaController.show(int)",1,4,5
"android.widget.MediaController.stringForTime(int)",2,2,2
"android.widget.MediaController.updatePausePlay()",2,2,4
"android.widget.MultiAutoCompleteTextView.CommaTokenizer.findTokenEnd(CharSequence,int)",3,2,3
"android.widget.MultiAutoCompleteTextView.CommaTokenizer.findTokenStart(CharSequence,int)",1,3,5
"android.widget.MultiAutoCompleteTextView.CommaTokenizer.terminateToken(CharSequence)",3,5,6
"android.widget.MultiAutoCompleteTextView.MultiAutoCompleteTextView(Context)",1,1,1
"android.widget.MultiAutoCompleteTextView.MultiAutoCompleteTextView(Context,AttributeSet)",1,1,1
"android.widget.MultiAutoCompleteTextView.MultiAutoCompleteTextView(Context,AttributeSet,int)",1,1,1
"android.widget.MultiAutoCompleteTextView.enoughToFilter()",3,1,4
"android.widget.MultiAutoCompleteTextView.finishInit()",1,1,1
"android.widget.MultiAutoCompleteTextView.performFiltering(CharSequence,int)",1,3,3
"android.widget.MultiAutoCompleteTextView.performFiltering(CharSequence,int,int,int)",1,1,1
"android.widget.MultiAutoCompleteTextView.performValidation()",2,4,6
"android.widget.MultiAutoCompleteTextView.replaceText(CharSequence)",1,1,1
"android.widget.MultiAutoCompleteTextView.setTokenizer(Tokenizer)",1,1,1
"android.widget.NumberPicker.AdjustScrollerCommand.run()",2,2,4
"android.widget.NumberPicker.InputTextFilter.filter(CharSequence,int,int,Spanned,int,int)",7,5,8
"android.widget.NumberPicker.InputTextFilter.getAcceptedChars()",1,1,1
"android.widget.NumberPicker.InputTextFilter.getInputType()",1,1,1
"android.widget.NumberPicker.NumberPicker(Context)",1,1,1
"android.widget.NumberPicker.NumberPicker(Context,AttributeSet)",1,1,1
"android.widget.NumberPicker.NumberPicker(Context,AttributeSet,int)",1,5,6
"android.widget.NumberPicker.SetSelectionCommand.run()",1,1,1
"android.widget.NumberPicker.UpdateValueFromLongPressCommand.run()",1,1,1
"android.widget.NumberPicker.UpdateValueFromLongPressCommand.setUpdateStep(int)",1,1,1
"android.widget.NumberPicker.changeCurrent(int)",2,2,3
"android.widget.NumberPicker.computeScroll()",4,4,6
"android.widget.NumberPicker.decrementSelectorIndices(int[])",1,1,4
"android.widget.NumberPicker.dispatchDraw(Canvas)",1,1,1
"android.widget.NumberPicker.dispatchKeyEvent(KeyEvent)",1,2,3
"android.widget.NumberPicker.dispatchTouchEvent(MotionEvent)",1,3,4
"android.widget.NumberPicker.dispatchTrackballEvent(MotionEvent)",1,2,3
"android.widget.NumberPicker.draw(Canvas)",4,4,5
"android.widget.NumberPicker.ensureCachedScrollSelectorValue(int)",2,3,5
"android.widget.NumberPicker.fling(int)",1,4,4
"android.widget.NumberPicker.formatNumber(int)",1,2,2
"android.widget.NumberPicker.getBottomFadingEdgeStrength()",1,1,1
"android.widget.NumberPicker.getDisplayedValues()",1,1,1
"android.widget.NumberPicker.getMaxValue()",1,1,1
"android.widget.NumberPicker.getMinValue()",1,1,1
"android.widget.NumberPicker.getSelectedPos(String)",4,3,6
"android.widget.NumberPicker.getSelectorIndices()",1,4,4
"android.widget.NumberPicker.getSolidColor()",1,1,1
"android.widget.NumberPicker.getTopFadingEdgeStrength()",1,1,1
"android.widget.NumberPicker.getValue()",1,1,1
"android.widget.NumberPicker.getWrapSelectorWheel()",1,1,1
"android.widget.NumberPicker.getWrappedSelectorIndex(int)",3,1,3
"android.widget.NumberPicker.hideInputControls()",1,1,1
"android.widget.NumberPicker.incrementScrollSelectorIndices(int[])",1,1,4
"android.widget.NumberPicker.isEventInInputText(MotionEvent)",1,1,1
"android.widget.NumberPicker.notifyChange(int,int)",1,2,2
"android.widget.NumberPicker.onDetachedFromWindow()",1,1,1
"android.widget.NumberPicker.onDraw(Canvas)",2,2,3
"android.widget.NumberPicker.onInterceptTouchEvent(MotionEvent)",6,7,9
"android.widget.NumberPicker.onScrollerFinished(Scroller)",1,2,2
"android.widget.NumberPicker.onTouchEvent(MotionEvent)",4,10,13
"android.widget.NumberPicker.onWindowFocusChanged(boolean)",1,2,2
"android.widget.NumberPicker.postAdjustScrollerCommand(int)",1,2,2
"android.widget.NumberPicker.postSetSelectionCommand(int,int)",1,2,2
"android.widget.NumberPicker.postUpdateValueFromLongPress(int)",1,1,2
"android.widget.NumberPicker.removeAllCallbacks()",1,4,4
"android.widget.NumberPicker.resetSelectorWheelIndices()",1,1,2
"android.widget.NumberPicker.scrollBy(int,int)",3,3,12
"android.widget.NumberPicker.setDisplayedValues(String[])",2,2,3
"android.widget.NumberPicker.setDrawSelectorWheel(boolean)",1,1,1
"android.widget.NumberPicker.setEnabled(boolean)",1,1,1
"android.widget.NumberPicker.setFormatter(Formatter)",2,1,2
"android.widget.NumberPicker.setMaxValue(int)",3,1,4
"android.widget.NumberPicker.setMinValue(int)",3,1,4
"android.widget.NumberPicker.setOnLongPressUpdateInterval(long)",1,1,1
"android.widget.NumberPicker.setOnScrollListener(OnScrollListener)",1,1,1
"android.widget.NumberPicker.setOnValueChangedListener(OnValueChangedListener)",1,1,1
"android.widget.NumberPicker.setSelectorPaintAlpha(int)",1,2,2
"android.widget.NumberPicker.setValue(int)",2,1,6
"android.widget.NumberPicker.setWrapSelectorWheel(boolean)",2,1,4
"android.widget.NumberPicker.showInputControls()",1,1,1
"android.widget.NumberPicker.tryNotifyScrollListener(int)",1,2,3
"android.widget.NumberPicker.updateIncrementAndDecrementButtonsVisibilityState()",1,3,5
"android.widget.NumberPicker.updateInputTextView()",1,2,2
"android.widget.NumberPicker.validateInputTextView(View)",1,2,2
"android.widget.OverScroller.OverScroller(Context)",1,1,1
"android.widget.OverScroller.OverScroller(Context,Interpolator)",1,1,1
"android.widget.OverScroller.OverScroller(Context,Interpolator,boolean)",1,1,1
"android.widget.OverScroller.OverScroller(Context,Interpolator,float,float)",1,1,1
"android.widget.OverScroller.OverScroller(Context,Interpolator,float,float,boolean)",1,1,1
"android.widget.OverScroller.SplineOverScroller.SplineOverScroller()",1,1,1
"android.widget.OverScroller.SplineOverScroller.adjustDuration(int,int,int)",1,1,2
"android.widget.OverScroller.SplineOverScroller.continueWhenFinished()",3,3,5
"android.widget.OverScroller.SplineOverScroller.extendDuration(int)",1,1,1
"android.widget.OverScroller.SplineOverScroller.finish()",1,1,1
"android.widget.OverScroller.SplineOverScroller.fitOnBounceCurve(int,int,int)",1,1,1
"android.widget.OverScroller.SplineOverScroller.fling(int,int,int,int,int)",2,5,6
"android.widget.OverScroller.SplineOverScroller.getDeceleration(int)",1,1,2
"android.widget.OverScroller.SplineOverScroller.getSplineDeceleration(int)",1,1,1
"android.widget.OverScroller.SplineOverScroller.getSplineFlingDistance(int)",1,1,1
"android.widget.OverScroller.SplineOverScroller.getSplineFlingDuration(int)",1,1,1
"android.widget.OverScroller.SplineOverScroller.initFromContext(Context)",1,1,1
"android.widget.OverScroller.SplineOverScroller.notifyEdgeReached(int,int,int)",1,2,2
"android.widget.OverScroller.SplineOverScroller.onEdgeReached()",1,1,3
"android.widget.OverScroller.SplineOverScroller.setFinalPosition(int)",1,1,1
"android.widget.OverScroller.SplineOverScroller.setFriction(float)",1,1,1
"android.widget.OverScroller.SplineOverScroller.springback(int,int,int)",1,3,3
"android.widget.OverScroller.SplineOverScroller.startAfterEdge(int,int,int,int)",2,4,8
"android.widget.OverScroller.SplineOverScroller.startBounceAfterEdge(int,int,int)",1,1,2
"android.widget.OverScroller.SplineOverScroller.startScroll(int,int,int)",1,1,1
"android.widget.OverScroller.SplineOverScroller.startSpringback(int,int,int)",1,1,1
"android.widget.OverScroller.SplineOverScroller.update()",3,2,6
"android.widget.OverScroller.SplineOverScroller.updateScroll(float)",1,1,1
"android.widget.OverScroller.abortAnimation()",1,1,1
"android.widget.OverScroller.computeScrollOffset()",3,10,12
"android.widget.OverScroller.extendDuration(int)",1,1,1
"android.widget.OverScroller.fling(int,int,int,int,int,int,int,int)",1,1,1
"android.widget.OverScroller.fling(int,int,int,int,int,int,int,int,int,int)",1,4,5
"android.widget.OverScroller.forceFinished(boolean)",1,1,1
"android.widget.OverScroller.getCurrVelocity()",1,1,1
"android.widget.OverScroller.getCurrX()",1,1,1
"android.widget.OverScroller.getCurrY()",1,1,1
"android.widget.OverScroller.getDuration()",1,1,1
"android.widget.OverScroller.getFinalX()",1,1,1
"android.widget.OverScroller.getFinalY()",1,1,1
"android.widget.OverScroller.getStartX()",1,1,1
"android.widget.OverScroller.getStartY()",1,1,1
"android.widget.OverScroller.isFinished()",1,1,2
"android.widget.OverScroller.isOverScrolled()",1,1,4
"android.widget.OverScroller.isScrollingInDirection(float,float)",1,3,3
"android.widget.OverScroller.notifyHorizontalEdgeReached(int,int,int)",1,1,1
"android.widget.OverScroller.notifyVerticalEdgeReached(int,int,int)",1,1,1
"android.widget.OverScroller.setFinalX(int)",1,1,1
"android.widget.OverScroller.setFinalY(int)",1,1,1
"android.widget.OverScroller.setFriction(float)",1,1,1
"android.widget.OverScroller.springBack(int,int,int,int,int,int)",1,1,2
"android.widget.OverScroller.startScroll(int,int,int,int)",1,1,1
"android.widget.OverScroller.startScroll(int,int,int,int,int)",1,1,1
"android.widget.OverScroller.timePassed()",1,1,1
"android.widget.PopupMenu.PopupMenu(Context,View)",1,1,1
"android.widget.PopupMenu.dismiss()",1,1,1
"android.widget.PopupMenu.getMenu()",1,1,1
"android.widget.PopupMenu.getMenuInflater()",1,1,1
"android.widget.PopupMenu.onCloseMenu(MenuBuilder,boolean)",1,1,1
"android.widget.PopupMenu.onCloseSubMenu(SubMenuBuilder)",1,1,1
"android.widget.PopupMenu.onMenuItemSelected(MenuBuilder,MenuItem)",2,2,2
"android.widget.PopupMenu.onMenuModeChange(MenuBuilder)",1,1,1
"android.widget.PopupMenu.onSubMenuSelected(SubMenuBuilder)",2,1,2
"android.widget.PopupMenu.setOnMenuItemClickListener(OnMenuItemClickListener)",1,1,1
"android.widget.PopupMenu.show()",1,1,1
"android.widget.PopupWindow.PopupViewContainer.PopupViewContainer(Context)",1,1,1
"android.widget.PopupWindow.PopupViewContainer.dispatchKeyEvent(KeyEvent)",4,7,7
"android.widget.PopupWindow.PopupViewContainer.dispatchTouchEvent(MotionEvent)",2,2,3
"android.widget.PopupWindow.PopupViewContainer.onCreateDrawableState(int)",2,2,2
"android.widget.PopupWindow.PopupViewContainer.onTouchEvent(MotionEvent)",3,7,7
"android.widget.PopupWindow.PopupViewContainer.sendAccessibilityEvent(int)",1,2,2
"android.widget.PopupWindow.PopupWindow()",1,1,1
"android.widget.PopupWindow.PopupWindow(Context)",1,1,1
"android.widget.PopupWindow.PopupWindow(Context,AttributeSet)",1,1,1
"android.widget.PopupWindow.PopupWindow(Context,AttributeSet,int)",1,1,1
"android.widget.PopupWindow.PopupWindow(Context,AttributeSet,int,int)",4,3,7
"android.widget.PopupWindow.PopupWindow(View)",1,1,1
"android.widget.PopupWindow.PopupWindow(View,int,int)",1,1,1
"android.widget.PopupWindow.PopupWindow(View,int,int,boolean)",1,2,2
"android.widget.PopupWindow.PopupWindow(int,int)",1,1,1
"android.widget.PopupWindow.computeAnimationResource()",3,1,4
"android.widget.PopupWindow.computeFlags(int)",1,1,10
"android.widget.PopupWindow.createPopupLayout(IBinder)",1,2,2
"android.widget.PopupWindow.dismiss()",1,5,6
"android.widget.PopupWindow.findDropDownPosition(View,LayoutParams,int,int)",1,6,7
"android.widget.PopupWindow.getAnimationStyle()",1,1,1
"android.widget.PopupWindow.getBackground()",1,1,1
"android.widget.PopupWindow.getContentView()",1,1,1
"android.widget.PopupWindow.getHeight()",1,1,1
"android.widget.PopupWindow.getInputMethodMode()",1,1,1
"android.widget.PopupWindow.getMaxAvailableHeight(View)",1,1,1
"android.widget.PopupWindow.getMaxAvailableHeight(View,int)",1,1,1
"android.widget.PopupWindow.getMaxAvailableHeight(View,int,boolean)",1,3,3
"android.widget.PopupWindow.getSoftInputMode()",1,1,1
"android.widget.PopupWindow.getWidth()",1,1,1
"android.widget.PopupWindow.getWindowLayoutType()",1,1,1
"android.widget.PopupWindow.invokePopup(LayoutParams)",1,1,1
"android.widget.PopupWindow.isAboveAnchor()",1,1,1
"android.widget.PopupWindow.isClippingEnabled()",1,1,1
"android.widget.PopupWindow.isFocusable()",1,1,1
"android.widget.PopupWindow.isLayoutInScreenEnabled()",1,1,1
"android.widget.PopupWindow.isOutsideTouchable()",1,1,1
"android.widget.PopupWindow.isShowing()",1,1,1
"android.widget.PopupWindow.isSplitTouchEnabled()",2,2,3
"android.widget.PopupWindow.isTouchable()",1,1,1
"android.widget.PopupWindow.preparePopup(LayoutParams)",2,2,7
"android.widget.PopupWindow.registerForScrollChanged(View,int,int)",1,2,2
"android.widget.PopupWindow.setAnimationStyle(int)",1,1,1
"android.widget.PopupWindow.setBackgroundDrawable(Drawable)",1,1,1
"android.widget.PopupWindow.setClipToScreenEnabled(boolean)",1,1,1
"android.widget.PopupWindow.setClippingEnabled(boolean)",1,1,1
"android.widget.PopupWindow.setContentView(View)",2,3,4
"android.widget.PopupWindow.setFocusable(boolean)",1,1,1
"android.widget.PopupWindow.setHeight(int)",1,1,1
"android.widget.PopupWindow.setIgnoreCheekPress()",1,1,1
"android.widget.PopupWindow.setInputMethodMode(int)",1,1,1
"android.widget.PopupWindow.setLayoutInScreenEnabled(boolean)",1,1,1
"android.widget.PopupWindow.setOnDismissListener(OnDismissListener)",1,1,1
"android.widget.PopupWindow.setOutsideTouchable(boolean)",1,1,1
"android.widget.PopupWindow.setSoftInputMode(int)",1,1,1
"android.widget.PopupWindow.setSplitTouchEnabled(boolean)",1,1,2
"android.widget.PopupWindow.setTouchInterceptor(OnTouchListener)",1,1,1
"android.widget.PopupWindow.setTouchable(boolean)",1,1,1
"android.widget.PopupWindow.setWidth(int)",1,1,1
"android.widget.PopupWindow.setWindowLayoutMode(int,int)",1,1,1
"android.widget.PopupWindow.setWindowLayoutType(int)",1,1,1
"android.widget.PopupWindow.showAsDropDown(View)",1,1,1
"android.widget.PopupWindow.showAsDropDown(View,int,int)",2,2,5
"android.widget.PopupWindow.showAtLocation(View,int,int,int)",2,2,6
"android.widget.PopupWindow.unregisterForScrollChanged()",1,3,3
"android.widget.PopupWindow.update()",2,3,6
"android.widget.PopupWindow.update(View,boolean,int,int,boolean,int,int)",2,6,13
"android.widget.PopupWindow.update(View,int,int)",1,1,1
"android.widget.PopupWindow.update(View,int,int,int,int)",1,1,1
"android.widget.PopupWindow.update(int,int)",1,1,1
"android.widget.PopupWindow.update(int,int,int,int)",1,1,1
"android.widget.PopupWindow.update(int,int,int,int,boolean)",2,5,16
"android.widget.PopupWindow.updateAboveAnchor(boolean)",1,5,5
"android.widget.ProgressBar.ProgressBar(Context)",1,1,1
"android.widget.ProgressBar.ProgressBar(Context,AttributeSet)",1,1,1
"android.widget.ProgressBar.ProgressBar(Context,AttributeSet,int)",1,1,1
"android.widget.ProgressBar.ProgressBar(Context,AttributeSet,int,int)",1,5,5
"android.widget.ProgressBar.RefreshProgressRunnable.RefreshProgressRunnable(int,int,boolean)",1,1,1
"android.widget.ProgressBar.RefreshProgressRunnable.run()",1,1,1
"android.widget.ProgressBar.RefreshProgressRunnable.setup(int,int,boolean)",1,1,1
"android.widget.ProgressBar.SavedState.SavedState(Parcel)",1,1,1
"android.widget.ProgressBar.SavedState.SavedState(Parcelable)",1,1,1
"android.widget.ProgressBar.SavedState.writeToParcel(Parcel,int)",1,1,1
"android.widget.ProgressBar.doRefreshProgress(int,int,boolean,boolean)",1,4,7
"android.widget.ProgressBar.drawableStateChanged()",1,1,1
"android.widget.ProgressBar.getCurrentDrawable()",1,1,1
"android.widget.ProgressBar.getDrawableShape()",1,1,1
"android.widget.ProgressBar.getIndeterminateDrawable()",1,1,1
"android.widget.ProgressBar.getInterpolator()",1,1,1
"android.widget.ProgressBar.getMax()",1,1,1
"android.widget.ProgressBar.getProgress()",1,1,2
"android.widget.ProgressBar.getProgressDrawable()",1,1,1
"android.widget.ProgressBar.getSecondaryProgress()",1,1,2
"android.widget.ProgressBar.incrementProgressBy(int)",1,1,1
"android.widget.ProgressBar.incrementSecondaryProgressBy(int)",1,1,1
"android.widget.ProgressBar.initProgressBar()",1,1,1
"android.widget.ProgressBar.invalidateDrawable(Drawable)",1,3,3
"android.widget.ProgressBar.isIndeterminate()",1,1,1
"android.widget.ProgressBar.jumpDrawablesToCurrentState()",1,3,3
"android.widget.ProgressBar.onAttachedToWindow()",1,2,2
"android.widget.ProgressBar.onDetachedFromWindow()",1,2,2
"android.widget.ProgressBar.onDraw(Canvas)",1,5,6
"android.widget.ProgressBar.onMeasure(int,int)",1,2,2
"android.widget.ProgressBar.onProgressRefresh(float,boolean)",1,1,1
"android.widget.ProgressBar.onRestoreInstanceState(Parcelable)",1,1,1
"android.widget.ProgressBar.onSaveInstanceState()",1,1,1
"android.widget.ProgressBar.onSizeChanged(int,int,int,int)",1,1,1
"android.widget.ProgressBar.onVisibilityChanged(View,int)",1,3,4
"android.widget.ProgressBar.postInvalidate()",1,2,2
"android.widget.ProgressBar.refreshProgress(int,int,boolean)",1,3,3
"android.widget.ProgressBar.setIndeterminate(boolean)",1,3,5
"android.widget.ProgressBar.setIndeterminateDrawable(Drawable)",1,3,3
"android.widget.ProgressBar.setInterpolator(Context,int)",1,1,1
"android.widget.ProgressBar.setInterpolator(Interpolator)",1,1,1
"android.widget.ProgressBar.setMax(int)",1,3,4
"android.widget.ProgressBar.setProgress(int)",1,1,1
"android.widget.ProgressBar.setProgress(int,boolean)",2,2,5
"android.widget.ProgressBar.setProgressDrawable(Drawable)",1,6,7
"android.widget.ProgressBar.setSecondaryProgress(int)",2,2,5
"android.widget.ProgressBar.setVisibility(int)",1,4,5
"android.widget.ProgressBar.startAnimation()",2,2,4
"android.widget.ProgressBar.stopAnimation()",1,2,2
"android.widget.ProgressBar.tileify(Drawable,boolean)",4,7,10
"android.widget.ProgressBar.tileifyIndeterminate(Drawable)",1,3,3
"android.widget.ProgressBar.updateDrawableBounds(int,int)",1,3,3
"android.widget.ProgressBar.updateDrawableState()",1,5,5
"android.widget.ProgressBar.verifyDrawable(Drawable)",1,3,3
"android.widget.QuickContactBadge.QueryHandler.QueryHandler(ContentResolver)",1,1,1
"android.widget.QuickContactBadge.QueryHandler.onQueryComplete(int,Object,Cursor)",2,13,16
"android.widget.QuickContactBadge.QuickContactBadge(Context)",1,1,1
"android.widget.QuickContactBadge.QuickContactBadge(Context,AttributeSet)",1,1,1
"android.widget.QuickContactBadge.QuickContactBadge(Context,AttributeSet,int)",1,1,1
"android.widget.QuickContactBadge.assignContactFromEmail(String,boolean)",1,2,2
"android.widget.QuickContactBadge.assignContactFromPhone(String,boolean)",1,2,2
"android.widget.QuickContactBadge.assignContactUri(Uri)",1,1,1
"android.widget.QuickContactBadge.init()",1,1,1
"android.widget.QuickContactBadge.onClick(View)",4,4,4
"android.widget.QuickContactBadge.onContactUriChanged()",1,3,5
"android.widget.QuickContactBadge.setExcludeMimes(String[])",1,1,1
"android.widget.QuickContactBadge.setImageToDefault()",1,2,2
"android.widget.QuickContactBadge.setMode(int)",1,1,1
"android.widget.QuickContactBadge.trigger(Uri)",1,1,1
"android.widget.RadioButton.RadioButton(Context)",1,1,1
"android.widget.RadioButton.RadioButton(Context,AttributeSet)",1,1,1
"android.widget.RadioButton.RadioButton(Context,AttributeSet,int)",1,1,1
"android.widget.RadioButton.toggle()",1,2,2
"android.widget.RadioGroup.CheckedStateTracker.onCheckedChanged(CompoundButton,boolean)",2,2,3
"android.widget.RadioGroup.LayoutParams.LayoutParams(Context,AttributeSet)",1,1,1
"android.widget.RadioGroup.LayoutParams.LayoutParams(LayoutParams)",1,1,1
"android.widget.RadioGroup.LayoutParams.LayoutParams(MarginLayoutParams)",1,1,1
"android.widget.RadioGroup.LayoutParams.LayoutParams(int,int)",1,1,1
"android.widget.RadioGroup.LayoutParams.LayoutParams(int,int,float)",1,1,1
"android.widget.RadioGroup.LayoutParams.setBaseAttributes(TypedArray,int,int)",1,3,3
"android.widget.RadioGroup.PassThroughHierarchyChangeListener.onChildViewAdded(View,View)",1,4,5
"android.widget.RadioGroup.PassThroughHierarchyChangeListener.onChildViewRemoved(View,View)",1,3,4
"android.widget.RadioGroup.RadioGroup(Context)",1,1,1
"android.widget.RadioGroup.RadioGroup(Context,AttributeSet)",1,1,2
"android.widget.RadioGroup.addView(View,int,LayoutParams)",1,4,4
"android.widget.RadioGroup.check(int)",2,3,5
"android.widget.RadioGroup.checkLayoutParams(LayoutParams)",1,1,1
"android.widget.RadioGroup.clearCheck()",1,1,1
"android.widget.RadioGroup.generateDefaultLayoutParams()",1,1,1
"android.widget.RadioGroup.generateLayoutParams(AttributeSet)",1,1,1
"android.widget.RadioGroup.getCheckedRadioButtonId()",1,1,1
"android.widget.RadioGroup.init()",1,1,1
"android.widget.RadioGroup.onFinishInflate()",1,2,2
"android.widget.RadioGroup.setCheckedId(int)",1,2,2
"android.widget.RadioGroup.setCheckedStateForView(int,boolean)",1,2,3
"android.widget.RadioGroup.setOnCheckedChangeListener(OnCheckedChangeListener)",1,1,1
"android.widget.RadioGroup.setOnHierarchyChangeListener(OnHierarchyChangeListener)",1,1,1
"android.widget.RatingBar.RatingBar(Context)",1,1,1
"android.widget.RatingBar.RatingBar(Context,AttributeSet)",1,1,1
"android.widget.RatingBar.RatingBar(Context,AttributeSet,int)",1,4,5
"android.widget.RatingBar.dispatchRatingChange(boolean)",1,2,2
"android.widget.RatingBar.getDrawableShape()",1,1,1
"android.widget.RatingBar.getNumStars()",1,1,1
"android.widget.RatingBar.getOnRatingBarChangeListener()",1,1,1
"android.widget.RatingBar.getProgressPerStar()",2,2,2
"android.widget.RatingBar.getRating()",1,1,1
"android.widget.RatingBar.getStepSize()",1,1,1
"android.widget.RatingBar.isIndicator()",1,1,1
"android.widget.RatingBar.onKeyChange()",1,1,1
"android.widget.RatingBar.onMeasure(int,int)",1,2,2
"android.widget.RatingBar.onProgressRefresh(float,boolean)",1,2,2
"android.widget.RatingBar.onStartTrackingTouch()",1,1,1
"android.widget.RatingBar.onStopTrackingTouch()",1,2,2
"android.widget.RatingBar.setIsIndicator(boolean)",1,1,1
"android.widget.RatingBar.setMax(int)",2,1,2
"android.widget.RatingBar.setNumStars(int)",2,1,2
"android.widget.RatingBar.setOnRatingBarChangeListener(OnRatingBarChangeListener)",1,1,1
"android.widget.RatingBar.setRating(float)",1,1,1
"android.widget.RatingBar.setStepSize(float)",2,1,2
"android.widget.RatingBar.updateSecondaryProgress(int)",1,2,2
"android.widget.RelativeLayout.DependencyGraph.Node.acquire(View)",1,1,1
"android.widget.RelativeLayout.DependencyGraph.Node.getNextPoolable()",1,1,1
"android.widget.RelativeLayout.DependencyGraph.Node.release()",1,1,1
"android.widget.RelativeLayout.DependencyGraph.Node.setNextPoolable(Node)",1,1,1
"android.widget.RelativeLayout.DependencyGraph.add(View)",1,2,2
"android.widget.RelativeLayout.DependencyGraph.appendViewId(Resources,Node,StringBuilder)",1,2,2
"android.widget.RelativeLayout.DependencyGraph.clear()",1,2,2
"android.widget.RelativeLayout.DependencyGraph.findRoots(int[])",5,7,9
"android.widget.RelativeLayout.DependencyGraph.getSortedViews(View[],int...)",2,4,5
"android.widget.RelativeLayout.DependencyGraph.log(Resources,int...)",1,2,2
"android.widget.RelativeLayout.DependencyGraph.printNode(Resources,Node)",1,3,3
"android.widget.RelativeLayout.DependencyGraph.printViewId(Resources,View)",1,2,2
"android.widget.RelativeLayout.DependencyGraph.printdependents(Resources,Node,StringBuilder)",1,3,3
"android.widget.RelativeLayout.LayoutParams.LayoutParams(Context,AttributeSet)",2,3,26
"android.widget.RelativeLayout.LayoutParams.LayoutParams(LayoutParams)",1,1,1
"android.widget.RelativeLayout.LayoutParams.LayoutParams(MarginLayoutParams)",1,1,1
"android.widget.RelativeLayout.LayoutParams.LayoutParams(int,int)",1,1,1
"android.widget.RelativeLayout.LayoutParams.addRule(int)",1,1,1
"android.widget.RelativeLayout.LayoutParams.addRule(int,int)",1,1,1
"android.widget.RelativeLayout.LayoutParams.debug(String)",1,1,1
"android.widget.RelativeLayout.LayoutParams.getRules()",1,1,1
"android.widget.RelativeLayout.RelativeLayout(Context)",1,1,1
"android.widget.RelativeLayout.RelativeLayout(Context,AttributeSet)",1,1,1
"android.widget.RelativeLayout.RelativeLayout(Context,AttributeSet,int)",1,1,1
"android.widget.RelativeLayout.TopToBottomLeftToRightComparator.compare(View,View)",5,1,5
"android.widget.RelativeLayout.alignBaseline(View,LayoutParams)",1,4,8
"android.widget.RelativeLayout.applyHorizontalSizeRules(LayoutParams,int)",1,1,18
"android.widget.RelativeLayout.applyVerticalSizeRules(LayoutParams,int)",1,1,19
"android.widget.RelativeLayout.centerHorizontal(View,LayoutParams,int)",1,1,1
"android.widget.RelativeLayout.centerVertical(View,LayoutParams,int)",1,1,1
"android.widget.RelativeLayout.checkLayoutParams(LayoutParams)",1,1,1
"android.widget.RelativeLayout.dispatchPopulateAccessibilityEvent(AccessibilityEvent)",3,4,5
"android.widget.RelativeLayout.generateDefaultLayoutParams()",1,1,1
"android.widget.RelativeLayout.generateLayoutParams(AttributeSet)",1,1,1
"android.widget.RelativeLayout.generateLayoutParams(LayoutParams)",1,1,1
"android.widget.RelativeLayout.getBaseline()",1,2,2
"android.widget.RelativeLayout.getChildMeasureSpec(int,int,int,int,int,int,int,int)",1,4,10
"android.widget.RelativeLayout.getRelatedView(int[],int)",5,3,5
"android.widget.RelativeLayout.getRelatedViewBaseline(int[],int)",2,2,2
"android.widget.RelativeLayout.getRelatedViewParams(int[],int)",3,3,3
"android.widget.RelativeLayout.initFromAttributes(Context,AttributeSet)",1,1,1
"android.widget.RelativeLayout.measureChild(View,LayoutParams,int,int)",1,1,1
"android.widget.RelativeLayout.measureChildHorizontal(View,LayoutParams,int,int)",1,2,2
"android.widget.RelativeLayout.onLayout(boolean,int,int,int,int)",1,3,3
"android.widget.RelativeLayout.onMeasure(int,int)",1,35,55
"android.widget.RelativeLayout.positionChildHorizontal(View,LayoutParams,int,boolean)",5,6,10
"android.widget.RelativeLayout.positionChildVertical(View,LayoutParams,int,boolean)",5,6,10
"android.widget.RelativeLayout.requestLayout()",1,1,1
"android.widget.RelativeLayout.setGravity(int)",1,2,4
"android.widget.RelativeLayout.setHorizontalGravity(int)",1,2,2
"android.widget.RelativeLayout.setIgnoreGravity(int)",1,1,1
"android.widget.RelativeLayout.setVerticalGravity(int)",1,2,2
"android.widget.RelativeLayout.sortChildren()",1,6,8
"android.widget.RemoteViews.Action.describeContents()",1,1,1
"android.widget.RemoteViews.Action.startIntentSafely(Context,PendingIntent,Intent)",1,3,3
"android.widget.RemoteViews.Action.updateMemoryUsageEstimate(MemoryUsageCounter)",1,1,1
"android.widget.RemoteViews.ActionException.ActionException(Exception)",1,1,1
"android.widget.RemoteViews.ActionException.ActionException(String)",1,1,1
"android.widget.RemoteViews.MemoryUsageCounter.bitmapIncrement(int)",1,1,1
"android.widget.RemoteViews.MemoryUsageCounter.clear()",1,1,1
"android.widget.RemoteViews.MemoryUsageCounter.getBitmapHeapMemoryUsage()",1,1,1
"android.widget.RemoteViews.ReflectionAction.ReflectionAction(Parcel)",2,3,17
"android.widget.RemoteViews.ReflectionAction.ReflectionAction(int,String,int,Object)",1,1,1
"android.widget.RemoteViews.ReflectionAction.apply(View)",4,5,8
"android.widget.RemoteViews.ReflectionAction.getParameterType()",16,2,16
"android.widget.RemoteViews.ReflectionAction.updateMemoryUsageEstimate(MemoryUsageCounter)",3,4,7
"android.widget.RemoteViews.ReflectionAction.writeToParcel(Parcel,int)",2,3,18
"android.widget.RemoteViews.ReflectionActionWithoutParams.ReflectionActionWithoutParams(Parcel)",1,1,1
"android.widget.RemoteViews.ReflectionActionWithoutParams.ReflectionActionWithoutParams(int,String)",1,1,1
"android.widget.RemoteViews.ReflectionActionWithoutParams.apply(View)",3,4,6
"android.widget.RemoteViews.ReflectionActionWithoutParams.writeToParcel(Parcel,int)",1,1,1
"android.widget.RemoteViews.RemoteViews(Parcel)",4,4,13
"android.widget.RemoteViews.RemoteViews(String,int)",1,1,1
"android.widget.RemoteViews.SetDrawableParameters.SetDrawableParameters(Parcel)",1,2,2
"android.widget.RemoteViews.SetDrawableParameters.SetDrawableParameters(int,boolean,int,int,Mode,int)",1,1,1
"android.widget.RemoteViews.SetDrawableParameters.apply(View)",2,7,9
"android.widget.RemoteViews.SetDrawableParameters.writeToParcel(Parcel,int)",1,2,3
"android.widget.RemoteViews.SetEmptyView.SetEmptyView(Parcel)",1,1,1
"android.widget.RemoteViews.SetEmptyView.SetEmptyView(int,int)",1,1,1
"android.widget.RemoteViews.SetEmptyView.apply(View)",3,1,3
"android.widget.RemoteViews.SetEmptyView.writeToParcel(Parcel,int)",1,1,1
"android.widget.RemoteViews.SetOnClickFillInIntent.SetOnClickFillInIntent(Parcel)",1,1,1
"android.widget.RemoteViews.SetOnClickFillInIntent.SetOnClickFillInIntent(int,Intent)",1,1,1
"android.widget.RemoteViews.SetOnClickFillInIntent.apply(View)",5,7,10
"android.widget.RemoteViews.SetOnClickFillInIntent.writeToParcel(Parcel,int)",1,1,1
"android.widget.RemoteViews.SetOnClickPendingIntent.SetOnClickPendingIntent(Parcel)",1,1,1
"android.widget.RemoteViews.SetOnClickPendingIntent.SetOnClickPendingIntent(int,PendingIntent)",1,1,1
"android.widget.RemoteViews.SetOnClickPendingIntent.apply(View)",2,3,5
"android.widget.RemoteViews.SetOnClickPendingIntent.writeToParcel(Parcel,int)",1,1,1
"android.widget.RemoteViews.SetPendingIntentTemplate.SetPendingIntentTemplate(Parcel)",1,1,1
"android.widget.RemoteViews.SetPendingIntentTemplate.SetPendingIntentTemplate(int,PendingIntent)",1,1,1
"android.widget.RemoteViews.SetPendingIntentTemplate.apply(View)",8,5,9
"android.widget.RemoteViews.SetPendingIntentTemplate.writeToParcel(Parcel,int)",1,1,1
"android.widget.RemoteViews.ViewGroupAction.ViewGroupAction(Parcel)",1,1,1
"android.widget.RemoteViews.ViewGroupAction.ViewGroupAction(int,RemoteViews)",1,1,1
"android.widget.RemoteViews.ViewGroupAction.apply(View)",2,2,3
"android.widget.RemoteViews.ViewGroupAction.updateMemoryUsageEstimate(MemoryUsageCounter)",1,2,2
"android.widget.RemoteViews.ViewGroupAction.writeToParcel(Parcel,int)",1,1,1
"android.widget.RemoteViews.addAction(Action)",1,1,2
"android.widget.RemoteViews.addView(int,RemoteViews)",1,1,1
"android.widget.RemoteViews.apply(Context,ViewGroup)",1,1,1
"android.widget.RemoteViews.clone()",1,2,2
"android.widget.RemoteViews.describeContents()",1,1,1
"android.widget.RemoteViews.estimateBitmapMemoryUsage()",1,1,1
"android.widget.RemoteViews.getLayoutId()",1,1,1
"android.widget.RemoteViews.getPackage()",1,1,1
"android.widget.RemoteViews.onLoadClass(Class)",1,1,1
"android.widget.RemoteViews.performApply(View)",1,3,3
"android.widget.RemoteViews.prepareContext(Context)",1,3,3
"android.widget.RemoteViews.reapply(Context,View)",1,1,1
"android.widget.RemoteViews.recalculateMemoryUsage()",1,3,3
"android.widget.RemoteViews.removeAllViews(int)",1,1,1
"android.widget.RemoteViews.setBitmap(int,String,Bitmap)",1,1,1
"android.widget.RemoteViews.setBoolean(int,String,boolean)",1,1,1
"android.widget.RemoteViews.setBundle(int,String,Bundle)",1,1,1
"android.widget.RemoteViews.setByte(int,String,byte)",1,1,1
"android.widget.RemoteViews.setChar(int,String,char)",1,1,1
"android.widget.RemoteViews.setCharSequence(int,String,CharSequence)",1,1,1
"android.widget.RemoteViews.setChronometer(int,long,String,boolean)",1,1,1
"android.widget.RemoteViews.setDouble(int,String,double)",1,1,1
"android.widget.RemoteViews.setDrawableParameters(int,boolean,int,int,Mode,int)",1,1,1
"android.widget.RemoteViews.setEmptyView(int,int)",1,1,1
"android.widget.RemoteViews.setFloat(int,String,float)",1,1,1
"android.widget.RemoteViews.setImageViewBitmap(int,Bitmap)",1,1,1
"android.widget.RemoteViews.setImageViewResource(int,int)",1,1,1
"android.widget.RemoteViews.setImageViewUri(int,Uri)",1,1,1
"android.widget.RemoteViews.setInt(int,String,int)",1,1,1
"android.widget.RemoteViews.setIntent(int,String,Intent)",1,1,1
"android.widget.RemoteViews.setIsWidgetCollectionChild(boolean)",1,1,1
"android.widget.RemoteViews.setLong(int,String,long)",1,1,1
"android.widget.RemoteViews.setOnClickFillInIntent(int,Intent)",1,1,1
"android.widget.RemoteViews.setOnClickPendingIntent(int,PendingIntent)",1,1,1
"android.widget.RemoteViews.setPendingIntentTemplate(int,PendingIntent)",1,1,1
"android.widget.RemoteViews.setProgressBar(int,int,int,boolean)",1,2,2
"android.widget.RemoteViews.setRelativeScrollPosition(int,int)",1,1,1
"android.widget.RemoteViews.setRemoteAdapter(int,Intent)",1,1,1
"android.widget.RemoteViews.setScrollPosition(int,int)",1,1,1
"android.widget.RemoteViews.setShort(int,String,short)",1,1,1
"android.widget.RemoteViews.setString(int,String,String)",1,1,1
"android.widget.RemoteViews.setTextColor(int,int)",1,1,1
"android.widget.RemoteViews.setTextViewText(int,CharSequence)",1,1,1
"android.widget.RemoteViews.setUri(int,String,Uri)",1,1,1
"android.widget.RemoteViews.setViewVisibility(int,int)",1,1,1
"android.widget.RemoteViews.showNext(int)",1,1,1
"android.widget.RemoteViews.showPrevious(int)",1,1,1
"android.widget.RemoteViews.writeToParcel(Parcel,int)",1,3,4
"android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache.FixedSizeRemoteViewsCache(int)",1,1,1
"android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache.containsMetaDataAt(int)",1,1,1
"android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache.containsRemoteViewAt(int)",1,1,1
"android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache.getFarthestPositionFrom(int)",1,2,3
"android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache.getMetaData()",1,1,1
"android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache.getMetaDataAt(int)",2,2,2
"android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache.getNextIndexToLoad()",3,3,3
"android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache.getRemoteViewsAt(int)",2,2,2
"android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache.getRemoteViewsBitmapMemoryUsage()",1,3,3
"android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache.insert(int,RemoteViews,long)",1,4,4
"android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache.queuePositionsToBePreloadedFromRequestedPosition(int)",3,3,5
"android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache.queueRequestedPositionToLoad(int)",1,1,1
"android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache.reset()",1,1,1
"android.widget.RemoteViewsAdapter.RemoteViewsAdapter(Context,Intent,RemoteAdapterConnectionCallback)",2,1,2
"android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection.RemoteViewsAdapterServiceConnection(RemoteViewsAdapter)",1,1,1
"android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection.getRemoteViewsFactory()",1,1,1
"android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection.isConnected()",1,1,1
"android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection.onServiceConnected(ComponentName,IBinder)",3,4,5
"android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection.onServiceDisconnected(ComponentName)",2,2,3
"android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout.RemoteViewsFrameLayout(Context)",1,1,1
"android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout.onRemoteViewsLoaded(RemoteViews)",1,2,2
"android.widget.RemoteViewsAdapter.RemoteViewsFrameLayoutRefSet.RemoteViewsFrameLayoutRefSet()",1,1,1
"android.widget.RemoteViewsAdapter.RemoteViewsFrameLayoutRefSet.add(int,RemoteViewsFrameLayout)",1,2,2
"android.widget.RemoteViewsAdapter.RemoteViewsFrameLayoutRefSet.clear()",1,1,1
"android.widget.RemoteViewsAdapter.RemoteViewsFrameLayoutRefSet.notifyOnRemoteViewsLoaded(int,RemoteViews,int)",2,3,4
"android.widget.RemoteViewsAdapter.RemoteViewsIndexMetaData.RemoteViewsIndexMetaData(RemoteViews,long)",1,1,1
"android.widget.RemoteViewsAdapter.RemoteViewsIndexMetaData.set(RemoteViews,long)",1,2,2
"android.widget.RemoteViewsAdapter.RemoteViewsMetaData.RemoteViewsMetaData()",1,1,1
"android.widget.RemoteViewsAdapter.RemoteViewsMetaData.createLoadingView(int,View,ViewGroup)",1,3,3
"android.widget.RemoteViewsAdapter.RemoteViewsMetaData.getMappedViewType(int)",2,2,2
"android.widget.RemoteViewsAdapter.RemoteViewsMetaData.reset()",1,1,1
"android.widget.RemoteViewsAdapter.RemoteViewsMetaData.setLoadingViewTemplates(RemoteViews,RemoteViews)",1,1,2
"android.widget.RemoteViewsAdapter.getConvertViewTypeId(View)",1,2,3
"android.widget.RemoteViewsAdapter.getCount()",1,1,1
"android.widget.RemoteViewsAdapter.getItem(int)",1,1,1
"android.widget.RemoteViewsAdapter.getItemId(int)",2,2,2
"android.widget.RemoteViewsAdapter.getItemViewType(int)",2,2,2
"android.widget.RemoteViewsAdapter.getRemoteViewsServiceIntent()",1,1,1
"android.widget.RemoteViewsAdapter.getView(int,View,ViewGroup)",5,7,7
"android.widget.RemoteViewsAdapter.getViewTypeCount()",1,1,1
"android.widget.RemoteViewsAdapter.hasStableIds()",1,1,1
"android.widget.RemoteViewsAdapter.isEmpty()",1,1,1
"android.widget.RemoteViewsAdapter.loadNextIndexInBackground()",1,2,2
"android.widget.RemoteViewsAdapter.notifyDataSetChanged()",2,3,3
"android.widget.RemoteViewsAdapter.requestBindService()",1,2,2
"android.widget.RemoteViewsAdapter.superNotifyDataSetChanged()",1,1,1
"android.widget.RemoteViewsAdapter.updateMetaData()",1,4,5
"android.widget.RemoteViewsAdapter.updateRemoteViews(int)",3,4,4
"android.widget.RemoteViewsService.RemoteViewsFactoryAdapter.RemoteViewsFactoryAdapter(RemoteViewsFactory)",1,1,1
"android.widget.RemoteViewsService.RemoteViewsFactoryAdapter.getCount()",1,1,1
"android.widget.RemoteViewsService.RemoteViewsFactoryAdapter.getItemId(int)",1,1,1
"android.widget.RemoteViewsService.RemoteViewsFactoryAdapter.getLoadingView()",1,1,1
"android.widget.RemoteViewsService.RemoteViewsFactoryAdapter.getViewAt(int)",1,1,1
"android.widget.RemoteViewsService.RemoteViewsFactoryAdapter.getViewTypeCount()",1,1,1
"android.widget.RemoteViewsService.RemoteViewsFactoryAdapter.hasStableIds()",1,1,1
"android.widget.RemoteViewsService.RemoteViewsFactoryAdapter.onDataSetChanged()",1,1,1
"android.widget.RemoteViewsService.RemoteViewsService()",1,1,1
"android.widget.RemoteViewsService.onBind(Intent)",1,2,2
"android.widget.RemoteViewsService.onUnbind(Intent)",1,3,3
"android.widget.ResourceCursorAdapter.ResourceCursorAdapter(Context,int,Cursor)",1,1,1
"android.widget.ResourceCursorAdapter.ResourceCursorAdapter(Context,int,Cursor,boolean)",1,1,1
"android.widget.ResourceCursorAdapter.ResourceCursorAdapter(Context,int,Cursor,int)",1,1,1
"android.widget.ResourceCursorAdapter.newDropDownView(Context,Cursor,ViewGroup)",1,1,1
"android.widget.ResourceCursorAdapter.newView(Context,Cursor,ViewGroup)",1,1,1
"android.widget.ResourceCursorAdapter.setDropDownViewResource(int)",1,1,1
"android.widget.ResourceCursorAdapter.setViewResource(int)",1,1,1
"android.widget.ResourceCursorTreeAdapter.ResourceCursorTreeAdapter(Context,Cursor,int,int)",1,1,1
"android.widget.ResourceCursorTreeAdapter.ResourceCursorTreeAdapter(Context,Cursor,int,int,int)",1,1,1
"android.widget.ResourceCursorTreeAdapter.ResourceCursorTreeAdapter(Context,Cursor,int,int,int,int)",1,1,1
"android.widget.ResourceCursorTreeAdapter.newChildView(Context,Cursor,boolean,ViewGroup)",1,1,2
"android.widget.ResourceCursorTreeAdapter.newGroupView(Context,Cursor,boolean,ViewGroup)",1,1,2
"android.widget.ScrollBarDrawable.ScrollBarDrawable()",1,1,1
"android.widget.ScrollBarDrawable.draw(Canvas)",2,5,11
"android.widget.ScrollBarDrawable.drawThumb(Canvas,Rect,int,int,boolean)",1,6,7
"android.widget.ScrollBarDrawable.drawTrack(Canvas,Rect,boolean)",1,3,4
"android.widget.ScrollBarDrawable.getAlwaysDrawHorizontalTrack()",1,1,1
"android.widget.ScrollBarDrawable.getAlwaysDrawVerticalTrack()",1,1,1
"android.widget.ScrollBarDrawable.getOpacity()",1,1,1
"android.widget.ScrollBarDrawable.getSize(boolean)",2,2,4
"android.widget.ScrollBarDrawable.onBoundsChange(Rect)",1,1,1
"android.widget.ScrollBarDrawable.setAlpha(int)",1,3,3
"android.widget.ScrollBarDrawable.setAlwaysDrawHorizontalTrack(boolean)",1,1,1
"android.widget.ScrollBarDrawable.setAlwaysDrawVerticalTrack(boolean)",1,1,1
"android.widget.ScrollBarDrawable.setColorFilter(ColorFilter)",1,3,3
"android.widget.ScrollBarDrawable.setHorizontalThumbDrawable(Drawable)",1,1,2
"android.widget.ScrollBarDrawable.setHorizontalTrackDrawable(Drawable)",1,1,1
"android.widget.ScrollBarDrawable.setParameters(int,int,int,boolean)",1,1,5
"android.widget.ScrollBarDrawable.setVerticalThumbDrawable(Drawable)",1,1,2
"android.widget.ScrollBarDrawable.setVerticalTrackDrawable(Drawable)",1,1,1
"android.widget.ScrollBarDrawable.toString()",1,1,2
"android.widget.ScrollView.ScrollView(Context)",1,1,1
"android.widget.ScrollView.ScrollView(Context,AttributeSet)",1,1,1
"android.widget.ScrollView.ScrollView(Context,AttributeSet,int)",1,1,1
"android.widget.ScrollView.addView(View)",2,1,2
"android.widget.ScrollView.addView(View,LayoutParams)",2,1,2
"android.widget.ScrollView.addView(View,int)",2,1,2
"android.widget.ScrollView.addView(View,int,LayoutParams)",2,1,2
"android.widget.ScrollView.arrowScroll(int)",3,10,14
"android.widget.ScrollView.canScroll()",2,2,2
"android.widget.ScrollView.clamp(int,int,int)",3,1,4
"android.widget.ScrollView.computeScroll()",1,7,12
"android.widget.ScrollView.computeScrollDeltaToGetChildRectOnScreen(Rect)",2,3,10
"android.widget.ScrollView.computeVerticalScrollOffset()",1,1,1
"android.widget.ScrollView.computeVerticalScrollRange()",2,1,4
"android.widget.ScrollView.dispatchKeyEvent(KeyEvent)",1,2,2
"android.widget.ScrollView.doScrollY(int)",1,3,3
"android.widget.ScrollView.draw(Canvas)",1,6,6
"android.widget.ScrollView.endDrag()",1,4,4
"android.widget.ScrollView.executeKeyEvent(KeyEvent)",4,10,14
"android.widget.ScrollView.findFocusableViewInBounds(boolean,int,int)",1,7,14
"android.widget.ScrollView.findFocusableViewInMyBounds(boolean,int,View)",2,3,4
"android.widget.ScrollView.fling(int)",1,4,7
"android.widget.ScrollView.fullScroll(int)",1,3,3
"android.widget.ScrollView.getBottomFadingEdgeStrength()",3,1,3
"android.widget.ScrollView.getMaxScrollAmount()",1,1,1
"android.widget.ScrollView.getScrollRange()",1,2,2
"android.widget.ScrollView.getTopFadingEdgeStrength()",3,1,3
"android.widget.ScrollView.inChild(int,int)",2,5,5
"android.widget.ScrollView.initScrollView()",1,1,1
"android.widget.ScrollView.isFillViewport()",1,1,1
"android.widget.ScrollView.isOffScreen(View)",1,1,1
"android.widget.ScrollView.isSmoothScrollingEnabled()",1,1,1
"android.widget.ScrollView.isViewDescendantOf(View,View)",2,2,3
"android.widget.ScrollView.isWithinDeltaOfScreen(View,int,int)",1,2,2
"android.widget.ScrollView.measureChild(View,int,int)",1,1,1
"android.widget.ScrollView.measureChildWithMargins(View,int,int,int,int)",1,1,1
"android.widget.ScrollView.onDetachedFromWindow()",1,3,3
"android.widget.ScrollView.onInterceptTouchEvent(MotionEvent)",3,8,14
"android.widget.ScrollView.onLayout(boolean,int,int,int,int)",1,3,3
"android.widget.ScrollView.onMeasure(int,int)",3,3,5
"android.widget.ScrollView.onOverScrolled(int,int,boolean,boolean)",1,3,3
"android.widget.ScrollView.onRequestFocusInDescendants(int,Rect)",3,2,6
"android.widget.ScrollView.onSecondaryPointerUp(MotionEvent)",1,3,4
"android.widget.ScrollView.onSizeChanged(int,int,int,int)",2,2,4
"android.widget.ScrollView.onTouchEvent(MotionEvent)",3,24,30
"android.widget.ScrollView.pageScroll(int)",1,4,5
"android.widget.ScrollView.requestChildFocus(View,View)",1,3,3
"android.widget.ScrollView.requestChildRectangleOnScreen(View,Rect,boolean)",1,1,1
"android.widget.ScrollView.requestLayout()",1,1,1
"android.widget.ScrollView.scrollAndFocus(int,int,int)",1,3,7
"android.widget.ScrollView.scrollTo(int,int)",1,3,4
"android.widget.ScrollView.scrollToChild(View)",1,2,2
"android.widget.ScrollView.scrollToChildRect(Rect,boolean)",1,3,3
"android.widget.ScrollView.setFillViewport(boolean)",1,2,2
"android.widget.ScrollView.setOverScrollMode(int)",1,3,3
"android.widget.ScrollView.setSmoothScrollingEnabled(boolean)",1,1,1
"android.widget.ScrollView.smoothScrollBy(int,int)",2,4,5
"android.widget.ScrollView.smoothScrollTo(int,int)",1,1,1
"android.widget.Scroller.Scroller(Context)",1,1,1
"android.widget.Scroller.Scroller(Context,Interpolator)",1,1,1
"android.widget.Scroller.Scroller(Context,Interpolator,boolean)",1,1,1
"android.widget.Scroller.abortAnimation()",1,1,1
"android.widget.Scroller.computeDeceleration(float)",1,1,1
"android.widget.Scroller.computeScrollOffset()",3,4,8
"android.widget.Scroller.extendDuration(int)",1,1,1
"android.widget.Scroller.fling(int,int,int,int,int,int,int,int)",1,3,7
"android.widget.Scroller.forceFinished(boolean)",1,1,1
"android.widget.Scroller.getCurrVelocity()",1,1,1
"android.widget.Scroller.getCurrX()",1,1,1
"android.widget.Scroller.getCurrY()",1,1,1
"android.widget.Scroller.getDuration()",1,1,1
"android.widget.Scroller.getFinalX()",1,1,1
"android.widget.Scroller.getFinalY()",1,1,1
"android.widget.Scroller.getStartX()",1,1,1
"android.widget.Scroller.getStartY()",1,1,1
"android.widget.Scroller.isFinished()",1,1,1
"android.widget.Scroller.isScrollingInDirection(float,float)",1,3,3
"android.widget.Scroller.setFinalX(int)",1,1,1
"android.widget.Scroller.setFinalY(int)",1,1,1
"android.widget.Scroller.setFriction(float)",1,1,1
"android.widget.Scroller.startScroll(int,int,int,int)",1,1,1
"android.widget.Scroller.startScroll(int,int,int,int,int)",1,1,1
"android.widget.Scroller.timePassed()",1,1,1
"android.widget.Scroller.viscousFluid(float)",1,2,2
"android.widget.SearchView.SearchAutoComplete.SearchAutoComplete(Context)",1,1,1
"android.widget.SearchView.SearchAutoComplete.SearchAutoComplete(Context,AttributeSet)",1,1,1
"android.widget.SearchView.SearchAutoComplete.SearchAutoComplete(Context,AttributeSet,int)",1,1,1
"android.widget.SearchView.SearchAutoComplete.enoughToFilter()",1,2,2
"android.widget.SearchView.SearchAutoComplete.isEmpty()",1,1,1
"android.widget.SearchView.SearchAutoComplete.onFocusChanged(boolean,int,Rect)",1,1,1
"android.widget.SearchView.SearchAutoComplete.onWindowFocusChanged(boolean)",1,5,5
"android.widget.SearchView.SearchAutoComplete.performCompletion()",1,1,1
"android.widget.SearchView.SearchAutoComplete.replaceText(CharSequence)",1,1,1
"android.widget.SearchView.SearchAutoComplete.setSearchView(SearchView)",1,1,1
"android.widget.SearchView.SearchAutoComplete.setThreshold(int)",1,1,1
"android.widget.SearchView.SearchView(Context)",1,1,1
"android.widget.SearchView.SearchView(Context,AttributeSet)",1,3,3
"android.widget.SearchView.clearFocus()",1,1,1
"android.widget.SearchView.createIntent(String,Uri,String,String,int,String)",1,5,5
"android.widget.SearchView.createIntentFromSuggestion(Cursor,int,String)",1,7,9
"android.widget.SearchView.createVoiceAppSearchIntent(Intent,SearchableInfo)",1,6,6
"android.widget.SearchView.createVoiceWebSearchIntent(Intent,SearchableInfo)",1,2,2
"android.widget.SearchView.dismissSuggestions()",1,1,1
"android.widget.SearchView.getActionKeyMessage(Cursor,ActionKeyInfo)",1,3,3
"android.widget.SearchView.getQuery()",1,1,1
"android.widget.SearchView.getSuggestionsAdapter()",1,1,1
"android.widget.SearchView.isIconfiedByDefault()",1,1,1
"android.widget.SearchView.isIconified()",1,1,1
"android.widget.SearchView.isLandscapeMode(Context)",1,1,1
"android.widget.SearchView.isQueryRefinementEnabled()",1,1,1
"android.widget.SearchView.isSubmitButtonEnabled()",1,1,1
"android.widget.SearchView.launchIntent(Intent)",2,2,3
"android.widget.SearchView.launchQuerySearch(int,String,String)",1,1,1
"android.widget.SearchView.launchSuggestion(int,int,String)",2,3,3
"android.widget.SearchView.onCloseClicked()",1,5,5
"android.widget.SearchView.onItemClicked(int,int,String)",2,3,3
"android.widget.SearchView.onItemSelected(int)",2,3,3
"android.widget.SearchView.onKeyDown(int,KeyEvent)",3,3,4
"android.widget.SearchView.onMeasure(int,int)",1,2,5
"android.widget.SearchView.onQueryRefine(CharSequence)",1,1,1
"android.widget.SearchView.onSearchClicked()",1,2,2
"android.widget.SearchView.onSubmitQuery()",1,5,5
"android.widget.SearchView.onSuggestionsKey(View,int,KeyEvent)",11,14,20
"android.widget.SearchView.onTextChanged(CharSequence)",1,3,4
"android.widget.SearchView.onTextFocusChanged()",1,1,1
"android.widget.SearchView.onVoiceClicked()",2,4,5
"android.widget.SearchView.requestFocus(int,Rect)",2,3,4
"android.widget.SearchView.rewriteQueryFromSuggestion(int)",2,3,4
"android.widget.SearchView.setIconified(boolean)",1,2,2
"android.widget.SearchView.setIconifiedByDefault(boolean)",2,1,2
"android.widget.SearchView.setImeVisibility(boolean)",1,3,3
"android.widget.SearchView.setMaxWidth(int)",1,1,1
"android.widget.SearchView.setOnCloseListener(OnCloseListener)",1,1,1
"android.widget.SearchView.setOnQueryChangeListener(OnQueryChangeListener)",1,1,1
"android.widget.SearchView.setOnQueryTextFocusChangeListener(OnFocusChangeListener)",1,1,1
"android.widget.SearchView.setOnSearchClickListener(OnClickListener)",1,1,1
"android.widget.SearchView.setOnSuggestionSelectionListener(OnSuggestionSelectionListener)",1,1,1
"android.widget.SearchView.setQuery(CharSequence)",1,2,2
"android.widget.SearchView.setQuery(CharSequence,boolean)",1,4,4
"android.widget.SearchView.setQueryHint(CharSequence)",1,1,1
"android.widget.SearchView.setQueryRefinementEnabled(boolean)",1,2,3
"android.widget.SearchView.setSearchableInfo(SearchableInfo)",1,2,2
"android.widget.SearchView.setSubmitButtonEnabled(boolean)",1,1,1
"android.widget.SearchView.setSuggestionsAdapter(CursorAdapter)",1,1,1
"android.widget.SearchView.updateCloseButton()",1,3,5
"android.widget.SearchView.updateQueryHint()",1,5,5
"android.widget.SearchView.updateSearchAutoComplete()",1,2,3
"android.widget.SearchView.updateViewsVisibility(boolean)",1,1,5
"android.widget.SearchView.updateVoiceButton(boolean)",1,7,9
"android.widget.SeekBar.SeekBar(Context)",1,1,1
"android.widget.SeekBar.SeekBar(Context,AttributeSet)",1,1,1
"android.widget.SeekBar.SeekBar(Context,AttributeSet,int)",1,1,1
"android.widget.SeekBar.onProgressRefresh(float,boolean)",1,2,2
"android.widget.SeekBar.onStartTrackingTouch()",1,2,2
"android.widget.SeekBar.onStopTrackingTouch()",1,2,2
"android.widget.SeekBar.setOnSeekBarChangeListener(OnSeekBarChangeListener)",1,1,1
"android.widget.SimpleAdapter.SimpleAdapter(Context,List<? extends Map<String, ?>>,int,String[],int[])",1,1,1
"android.widget.SimpleAdapter.SimpleFilter.performFiltering(CharSequence)",7,8,9
"android.widget.SimpleAdapter.SimpleFilter.publishResults(CharSequence,FilterResults)",1,2,2
"android.widget.SimpleAdapter.bindView(int,View)",10,13,15
"android.widget.SimpleAdapter.createViewFromResource(int,View,ViewGroup,int)",1,2,2
"android.widget.SimpleAdapter.getCount()",1,1,1
"android.widget.SimpleAdapter.getDropDownView(int,View,ViewGroup)",1,1,1
"android.widget.SimpleAdapter.getFilter()",1,1,2
"android.widget.SimpleAdapter.getItem(int)",1,1,1
"android.widget.SimpleAdapter.getItemId(int)",1,1,1
"android.widget.SimpleAdapter.getView(int,View,ViewGroup)",1,1,1
"android.widget.SimpleAdapter.getViewBinder()",1,1,1
"android.widget.SimpleAdapter.setDropDownViewResource(int)",1,1,1
"android.widget.SimpleAdapter.setViewBinder(ViewBinder)",1,1,1
"android.widget.SimpleAdapter.setViewImage(ImageView,String)",1,2,2
"android.widget.SimpleAdapter.setViewImage(ImageView,int)",1,1,1
"android.widget.SimpleAdapter.setViewText(TextView,String)",1,1,1
"android.widget.SimpleCursorAdapter.SimpleCursorAdapter(Context,int,Cursor,String[],int[])",1,1,1
"android.widget.SimpleCursorAdapter.SimpleCursorAdapter(Context,int,Cursor,String[],int[],int)",1,1,1
"android.widget.SimpleCursorAdapter.bindView(View,Context,Cursor)",6,7,8
"android.widget.SimpleCursorAdapter.changeCursorAndColumns(Cursor,String[],int[])",1,1,1
"android.widget.SimpleCursorAdapter.convertToString(Cursor)",3,3,3
"android.widget.SimpleCursorAdapter.findColumns(String[])",1,3,5
"android.widget.SimpleCursorAdapter.getCursorToStringConverter()",1,1,1
"android.widget.SimpleCursorAdapter.getStringConversionColumn()",1,1,1
"android.widget.SimpleCursorAdapter.getViewBinder()",1,1,1
"android.widget.SimpleCursorAdapter.setCursorToStringConverter(CursorToStringConverter)",1,1,1
"android.widget.SimpleCursorAdapter.setStringConversionColumn(int)",1,1,1
"android.widget.SimpleCursorAdapter.setViewBinder(ViewBinder)",1,1,1
"android.widget.SimpleCursorAdapter.setViewImage(ImageView,String)",1,2,2
"android.widget.SimpleCursorAdapter.setViewText(TextView,String)",1,1,1
"android.widget.SimpleCursorAdapter.swapCursor(Cursor)",1,1,1
"android.widget.SimpleCursorTreeAdapter.SimpleCursorTreeAdapter(Context,Cursor,int,String[],int[],int,String[],int[])",1,1,1
"android.widget.SimpleCursorTreeAdapter.SimpleCursorTreeAdapter(Context,Cursor,int,int,String[],int[],int,String[],int[])",1,1,1
"android.widget.SimpleCursorTreeAdapter.SimpleCursorTreeAdapter(Context,Cursor,int,int,String[],int[],int,int,String[],int[])",1,1,1
"android.widget.SimpleCursorTreeAdapter.bindChildView(View,Context,Cursor,boolean)",1,2,2
"android.widget.SimpleCursorTreeAdapter.bindGroupView(View,Context,Cursor,boolean)",1,2,2
"android.widget.SimpleCursorTreeAdapter.bindView(View,Context,Cursor,int[],int[])",6,7,8
"android.widget.SimpleCursorTreeAdapter.getViewBinder()",1,1,1
"android.widget.SimpleCursorTreeAdapter.init(String[],int[],String[],int[])",1,1,1
"android.widget.SimpleCursorTreeAdapter.initFromColumns(Cursor,String[],int[])",1,2,2
"android.widget.SimpleCursorTreeAdapter.setViewBinder(ViewBinder)",1,1,1
"android.widget.SimpleCursorTreeAdapter.setViewImage(ImageView,String)",1,2,2
"android.widget.SimpleCursorTreeAdapter.setViewText(TextView,String)",1,1,1
"android.widget.SimpleExpandableListAdapter.SimpleExpandableListAdapter(Context,List<? extends Map<String, ?>>,int,String[],int[],List<? extends List<? extends Map<String, ?>>>,int,String[],int[])",1,1,1
"android.widget.SimpleExpandableListAdapter.SimpleExpandableListAdapter(Context,List<? extends Map<String, ?>>,int,int,String[],int[],List<? extends List<? extends Map<String, ?>>>,int,String[],int[])",1,1,1
"android.widget.SimpleExpandableListAdapter.SimpleExpandableListAdapter(Context,List<? extends Map<String, ?>>,int,int,String[],int[],List<? extends List<? extends Map<String, ?>>>,int,int,String[],int[])",1,1,1
"android.widget.SimpleExpandableListAdapter.bindView(View,Map<String, ?>,String[],int[])",1,3,3
"android.widget.SimpleExpandableListAdapter.getChild(int,int)",1,1,1
"android.widget.SimpleExpandableListAdapter.getChildId(int,int)",1,1,1
"android.widget.SimpleExpandableListAdapter.getChildView(int,int,boolean,View,ViewGroup)",1,2,2
"android.widget.SimpleExpandableListAdapter.getChildrenCount(int)",1,1,1
"android.widget.SimpleExpandableListAdapter.getGroup(int)",1,1,1
"android.widget.SimpleExpandableListAdapter.getGroupCount()",1,1,1
"android.widget.SimpleExpandableListAdapter.getGroupId(int)",1,1,1
"android.widget.SimpleExpandableListAdapter.getGroupView(int,boolean,View,ViewGroup)",1,2,2
"android.widget.SimpleExpandableListAdapter.hasStableIds()",1,1,1
"android.widget.SimpleExpandableListAdapter.isChildSelectable(int,int)",1,1,1
"android.widget.SimpleExpandableListAdapter.newChildView(boolean,ViewGroup)",1,1,2
"android.widget.SimpleExpandableListAdapter.newGroupView(boolean,ViewGroup)",1,1,2
"android.widget.SlidingDrawer.DrawerToggler.onClick(View)",2,2,3
"android.widget.SlidingDrawer.SlidingDrawer(Context,AttributeSet)",1,1,1
"android.widget.SlidingDrawer.SlidingDrawer(Context,AttributeSet,int)",4,1,4
"android.widget.SlidingDrawer.SlidingHandler.handleMessage(Message)",2,2,2
"android.widget.SlidingDrawer.animateClose()",1,4,4
"android.widget.SlidingDrawer.animateClose(int)",1,1,1
"android.widget.SlidingDrawer.animateOpen()",1,4,4
"android.widget.SlidingDrawer.animateOpen(int)",1,1,1
"android.widget.SlidingDrawer.animateToggle()",1,2,2
"android.widget.SlidingDrawer.close()",1,1,1
"android.widget.SlidingDrawer.closeDrawer()",2,2,3
"android.widget.SlidingDrawer.dispatchDraw(Canvas)",1,7,8
"android.widget.SlidingDrawer.doAnimation()",1,5,5
"android.widget.SlidingDrawer.getContent()",1,1,1
"android.widget.SlidingDrawer.getHandle()",1,1,1
"android.widget.SlidingDrawer.incrementAnimation()",1,1,1
"android.widget.SlidingDrawer.isMoving()",1,1,2
"android.widget.SlidingDrawer.isOpened()",1,1,1
"android.widget.SlidingDrawer.lock()",1,1,1
"android.widget.SlidingDrawer.moveHandle(int)",1,6,10
"android.widget.SlidingDrawer.onFinishInflate()",3,1,3
"android.widget.SlidingDrawer.onInterceptTouchEvent(MotionEvent)",3,5,7
"android.widget.SlidingDrawer.onLayout(boolean,int,int,int,int)",2,2,5
"android.widget.SlidingDrawer.onMeasure(int,int)",2,2,4
"android.widget.SlidingDrawer.onTouchEvent(MotionEvent)",3,10,30
"android.widget.SlidingDrawer.open()",1,1,1
"android.widget.SlidingDrawer.openDrawer()",2,2,3
"android.widget.SlidingDrawer.performFling(int,float,boolean)",1,6,16
"android.widget.SlidingDrawer.prepareContent()",2,4,5
"android.widget.SlidingDrawer.prepareTracking(int)",1,4,4
"android.widget.SlidingDrawer.setOnDrawerCloseListener(OnDrawerCloseListener)",1,1,1
"android.widget.SlidingDrawer.setOnDrawerOpenListener(OnDrawerOpenListener)",1,1,1
"android.widget.SlidingDrawer.setOnDrawerScrollListener(OnDrawerScrollListener)",1,1,1
"android.widget.SlidingDrawer.stopTracking()",1,3,3
"android.widget.SlidingDrawer.toggle()",1,2,2
"android.widget.SlidingDrawer.unlock()",1,1,1
"android.widget.Spinner.DialogPopup.dismiss()",1,1,1
"android.widget.Spinner.DialogPopup.getHintText()",1,1,1
"android.widget.Spinner.DialogPopup.isShowing()",1,2,2
"android.widget.Spinner.DialogPopup.onClick(DialogInterface,int)",1,1,1
"android.widget.Spinner.DialogPopup.setAdapter(ListAdapter)",1,1,1
"android.widget.Spinner.DialogPopup.setPromptText(CharSequence)",1,1,1
"android.widget.Spinner.DialogPopup.show()",1,2,2
"android.widget.Spinner.DropDownAdapter.DropDownAdapter(SpinnerAdapter)",1,1,2
"android.widget.Spinner.DropDownAdapter.areAllItemsEnabled()",2,2,2
"android.widget.Spinner.DropDownAdapter.getCount()",1,2,2
"android.widget.Spinner.DropDownAdapter.getDropDownView(int,View,ViewGroup)",1,2,2
"android.widget.Spinner.DropDownAdapter.getItem(int)",1,2,2
"android.widget.Spinner.DropDownAdapter.getItemId(int)",1,2,2
"android.widget.Spinner.DropDownAdapter.getItemViewType(int)",1,1,1
"android.widget.Spinner.DropDownAdapter.getView(int,View,ViewGroup)",1,1,1
"android.widget.Spinner.DropDownAdapter.getViewTypeCount()",1,1,1
"android.widget.Spinner.DropDownAdapter.hasStableIds()",1,2,2
"android.widget.Spinner.DropDownAdapter.isEmpty()",1,1,1
"android.widget.Spinner.DropDownAdapter.isEnabled(int)",2,2,2
"android.widget.Spinner.DropDownAdapter.registerDataSetObserver(DataSetObserver)",1,2,2
"android.widget.Spinner.DropDownAdapter.unregisterDataSetObserver(DataSetObserver)",1,2,2
"android.widget.Spinner.DropdownPopup.DropdownPopup(Context,AttributeSet,int,int)",1,1,1
"android.widget.Spinner.DropdownPopup.generateDefaultLayoutParams()",1,1,1
"android.widget.Spinner.DropdownPopup.getHintText()",1,1,1
"android.widget.Spinner.DropdownPopup.measureContentWidth(SpinnerAdapter)",1,3,4
"android.widget.Spinner.DropdownPopup.setPromptText(CharSequence)",1,2,2
"android.widget.Spinner.DropdownPopup.show()",1,2,2
"android.widget.Spinner.Spinner(Context)",1,1,1
"android.widget.Spinner.Spinner(Context,AttributeSet)",1,1,1
"android.widget.Spinner.Spinner(Context,AttributeSet,int)",1,1,1
"android.widget.Spinner.Spinner(Context,AttributeSet,int,int)",2,4,5
"android.widget.Spinner.Spinner(Context,int)",1,1,1
"android.widget.Spinner.getBaseline()",2,5,5
"android.widget.Spinner.getPrompt()",1,1,1
"android.widget.Spinner.layout(int,boolean)",2,4,4
"android.widget.Spinner.makeAndAddView(int)",3,3,3
"android.widget.Spinner.onClick(DialogInterface,int)",1,1,1
"android.widget.Spinner.onDetachedFromWindow()",1,3,3
"android.widget.Spinner.onLayout(boolean,int,int,int,int)",1,1,1
"android.widget.Spinner.performClick()",1,3,3
"android.widget.Spinner.setAdapter(SpinnerAdapter)",1,2,2
"android.widget.Spinner.setOnItemClickListener(OnItemClickListener)",1,1,1
"android.widget.Spinner.setPrompt(CharSequence)",1,1,1
"android.widget.Spinner.setPromptId(int)",1,1,1
"android.widget.Spinner.setUpChild(View)",1,2,2
"android.widget.StackView.HolographicHelper.HolographicHelper(Context)",1,1,1
"android.widget.StackView.HolographicHelper.createOutline(View)",1,1,1
"android.widget.StackView.HolographicHelper.createOutline(View,int)",2,4,5
"android.widget.StackView.HolographicHelper.drawOutline(Canvas,Bitmap)",1,1,1
"android.widget.StackView.LayoutParams.LayoutParams(Context,AttributeSet)",1,1,1
"android.widget.StackView.LayoutParams.LayoutParams(View)",1,1,1
"android.widget.StackView.LayoutParams.getInvalidateRect()",1,1,1
"android.widget.StackView.LayoutParams.invalidateGlobalRegion(View,Rect)",2,6,7
"android.widget.StackView.LayoutParams.resetInvalidateRect()",1,1,1
"android.widget.StackView.LayoutParams.setHorizontalOffset(int)",1,1,1
"android.widget.StackView.LayoutParams.setOffsets(int,int)",1,2,2
"android.widget.StackView.LayoutParams.setVerticalOffset(int)",1,1,1
"android.widget.StackView.StackSlider.StackSlider()",1,1,1
"android.widget.StackView.StackSlider.StackSlider(StackSlider)",1,1,1
"android.widget.StackView.StackSlider.cubic(float)",1,1,1
"android.widget.StackView.StackSlider.getDuration(boolean,float)",4,5,7
"android.widget.StackView.StackSlider.getDurationForNeutralPosition()",1,1,1
"android.widget.StackView.StackSlider.getDurationForNeutralPosition(float)",1,1,1
"android.widget.StackView.StackSlider.getDurationForOffscreenPosition()",1,1,1
"android.widget.StackView.StackSlider.getDurationForOffscreenPosition(float)",1,1,1
"android.widget.StackView.StackSlider.getXProgress()",1,1,1
"android.widget.StackView.StackSlider.getYProgress()",1,1,1
"android.widget.StackView.StackSlider.highlightAlphaInterpolator(float)",2,2,2
"android.widget.StackView.StackSlider.rotationInterpolator(float)",2,1,2
"android.widget.StackView.StackSlider.setMode(int)",1,1,1
"android.widget.StackView.StackSlider.setView(View)",1,1,1
"android.widget.StackView.StackSlider.setXProgress(float)",2,1,2
"android.widget.StackView.StackSlider.setYProgress(float)",3,8,12
"android.widget.StackView.StackSlider.viewAlphaInterpolator(float)",2,1,2
"android.widget.StackView.StackView(Context)",1,1,1
"android.widget.StackView.StackView(Context,AttributeSet)",1,1,1
"android.widget.StackView.advance()",1,2,3
"android.widget.StackView.animateViewForTransition(int,int,View)",1,9,13
"android.widget.StackView.applyTransformForChildAtIndex(View,int)",1,1,1
"android.widget.StackView.beginGestureIfNeeded(float)",4,5,12
"android.widget.StackView.createOrReuseLayoutParams(View)",2,2,2
"android.widget.StackView.dispatchDraw(Canvas)",1,2,2
"android.widget.StackView.getFrameForChild()",1,1,1
"android.widget.StackView.handlePointerUp(MotionEvent)",1,11,19
"android.widget.StackView.hideTapFeedback(View)",1,1,1
"android.widget.StackView.initStackView()",1,1,2
"android.widget.StackView.measureChildren()",1,3,10
"android.widget.StackView.onInterceptTouchEvent(MotionEvent)",4,7,7
"android.widget.StackView.onLayout()",1,4,4
"android.widget.StackView.onLayout(boolean,int,int,int,int)",1,3,4
"android.widget.StackView.onMeasure(int,int)",1,7,12
"android.widget.StackView.onRemoteAdapterConnected()",1,1,2
"android.widget.StackView.onSecondaryPointerUp(MotionEvent)",6,6,8
"android.widget.StackView.onTouchEvent(MotionEvent)",6,9,11
"android.widget.StackView.setupStackSlider(View,int)",1,2,2
"android.widget.StackView.showNext()",2,3,4
"android.widget.StackView.showOnly(int,boolean,boolean)",1,4,4
"android.widget.StackView.showPrevious()",2,3,4
"android.widget.StackView.showTapFeedback(View)",1,1,1
"android.widget.StackView.transformViewAtIndex(int,View,boolean)",1,4,6
"android.widget.StackView.updateChildTransforms()",1,3,3
"android.widget.StackView.updateClickFeedback()",1,3,3
"android.widget.SuggestionsAdapter.ChildViewCache.ChildViewCache(View)",1,1,1
"android.widget.SuggestionsAdapter.SuggestionsAdapter(Context,SearchView,SearchableInfo,WeakHashMap<String, ConstantState>)",2,1,3
"android.widget.SuggestionsAdapter.bindView(View,Context,Cursor)",1,11,13
"android.widget.SuggestionsAdapter.changeCursor(Cursor)",2,6,6
"android.widget.SuggestionsAdapter.checkIconCache(String)",2,2,3
"android.widget.SuggestionsAdapter.close()",1,2,2
"android.widget.SuggestionsAdapter.convertToString(Cursor)",7,3,7
"android.widget.SuggestionsAdapter.formatUrl(CharSequence)",1,2,2
"android.widget.SuggestionsAdapter.getActivityIcon(ComponentName)",3,3,4
"android.widget.SuggestionsAdapter.getActivityIconWithCache(ComponentName)",2,4,4
"android.widget.SuggestionsAdapter.getColumnString(Cursor,String)",1,1,1
"android.widget.SuggestionsAdapter.getDefaultIcon1(Cursor)",2,1,2
"android.widget.SuggestionsAdapter.getDrawable(Uri)",3,4,6
"android.widget.SuggestionsAdapter.getDrawableFromResourceValue(String)",4,5,8
"android.widget.SuggestionsAdapter.getIcon1(Cursor)",3,1,3
"android.widget.SuggestionsAdapter.getIcon2(Cursor)",2,1,2
"android.widget.SuggestionsAdapter.getQueryRefinement()",1,1,1
"android.widget.SuggestionsAdapter.getStringOrNull(Cursor,int)",2,2,3
"android.widget.SuggestionsAdapter.getView(int,View,ViewGroup)",1,3,3
"android.widget.SuggestionsAdapter.hasStableIds()",1,1,1
"android.widget.SuggestionsAdapter.newView(Context,Cursor,ViewGroup)",1,1,1
"android.widget.SuggestionsAdapter.notifyDataSetChanged()",1,2,2
"android.widget.SuggestionsAdapter.notifyDataSetInvalidated()",1,2,2
"android.widget.SuggestionsAdapter.onClick(View)",1,2,2
"android.widget.SuggestionsAdapter.runQueryOnBackgroundThread(CharSequence)",2,5,5
"android.widget.SuggestionsAdapter.setQueryRefinement(int)",1,1,1
"android.widget.SuggestionsAdapter.setViewDrawable(ImageView,Drawable)",1,2,2
"android.widget.SuggestionsAdapter.setViewText(TextView,CharSequence)",1,2,2
"android.widget.SuggestionsAdapter.storeInIconCache(String,Drawable)",1,2,2
"android.widget.SuggestionsAdapter.updateSpinnerState(Cursor)",2,5,6
"android.widget.Switch.Switch(Context)",1,1,1
"android.widget.Switch.Switch(Context,AttributeSet)",1,1,1
"android.widget.Switch.Switch(Context,AttributeSet,int)",1,2,2
"android.widget.Switch.animateThumbToCheckedState(boolean)",1,2,2
"android.widget.Switch.cancelSuperTouch(MotionEvent)",1,1,1
"android.widget.Switch.drawableStateChanged()",1,1,1
"android.widget.Switch.getCompoundPaddingRight()",1,1,2
"android.widget.Switch.getTargetCheckedState()",1,1,1
"android.widget.Switch.getTextOff()",1,1,1
"android.widget.Switch.getTextOn()",1,1,1
"android.widget.Switch.getThumbScrollRange()",2,1,2
"android.widget.Switch.hitThumb(float,float)",1,1,4
"android.widget.Switch.jumpDrawablesToCurrentState()",1,1,1
"android.widget.Switch.makeLayout(CharSequence)",1,1,1
"android.widget.Switch.onCreateDrawableState(int)",1,2,2
"android.widget.Switch.onDraw(Canvas)",1,1,2
"android.widget.Switch.onLayout(boolean,int,int,int,int)",2,2,4
"android.widget.Switch.onMeasure(int,int)",3,6,10
"android.widget.Switch.onTouchEvent(MotionEvent)",7,10,12
"android.widget.Switch.setChecked(boolean)",1,2,2
"android.widget.Switch.setSwitchTextAppearance(int)",1,3,4
"android.widget.Switch.setSwitchTypeface(Typeface)",1,2,2
"android.widget.Switch.setSwitchTypeface(Typeface,int)",1,4,5
"android.widget.Switch.setSwitchTypefaceByIndex(int,int)",2,2,4
"android.widget.Switch.setTextOff(CharSequence)",1,1,1
"android.widget.Switch.setTextOn(CharSequence)",1,1,1
"android.widget.Switch.stopDrag(MotionEvent)",1,3,3
"android.widget.Switch.verifyDrawable(Drawable)",1,3,3
"android.widget.TabHost.FactoryContentStrategy.FactoryContentStrategy(CharSequence,TabContentFactory)",1,1,1
"android.widget.TabHost.FactoryContentStrategy.getContentView()",1,2,2
"android.widget.TabHost.FactoryContentStrategy.tabClosed()",1,1,1
"android.widget.TabHost.IntentContentStrategy.IntentContentStrategy(String,Intent)",1,1,1
"android.widget.TabHost.IntentContentStrategy.getContentView()",2,5,7
"android.widget.TabHost.IntentContentStrategy.tabClosed()",1,2,2
"android.widget.TabHost.LabelAndIconIndicatorStrategy.LabelAndIconIndicatorStrategy(CharSequence,Drawable)",1,1,1
"android.widget.TabHost.LabelAndIconIndicatorStrategy.createIndicatorView()",1,3,3
"android.widget.TabHost.LabelIndicatorStrategy.LabelIndicatorStrategy(CharSequence)",1,1,1
"android.widget.TabHost.LabelIndicatorStrategy.createIndicatorView()",1,2,2
"android.widget.TabHost.TabHost(Context)",1,1,1
"android.widget.TabHost.TabHost(Context,AttributeSet)",1,1,2
"android.widget.TabHost.TabSpec.TabSpec(String)",1,1,1
"android.widget.TabHost.TabSpec.getTag()",1,1,1
"android.widget.TabHost.TabSpec.setContent(Intent)",1,1,1
"android.widget.TabHost.TabSpec.setContent(TabContentFactory)",1,1,1
"android.widget.TabHost.TabSpec.setContent(int)",1,1,1
"android.widget.TabHost.TabSpec.setIndicator(CharSequence)",1,1,1
"android.widget.TabHost.TabSpec.setIndicator(CharSequence,Drawable)",1,1,1
"android.widget.TabHost.TabSpec.setIndicator(View)",1,1,1
"android.widget.TabHost.ViewIdContentStrategy.ViewIdContentStrategy(int)",2,2,2
"android.widget.TabHost.ViewIdContentStrategy.getContentView()",1,1,1
"android.widget.TabHost.ViewIdContentStrategy.tabClosed()",1,1,1
"android.widget.TabHost.ViewIndicatorStrategy.ViewIndicatorStrategy(View)",1,1,1
"android.widget.TabHost.ViewIndicatorStrategy.createIndicatorView()",1,1,1
"android.widget.TabHost.addTab(TabSpec)",3,3,5
"android.widget.TabHost.clearAllTabs()",1,1,1
"android.widget.TabHost.dispatchKeyEvent(KeyEvent)",2,8,8
"android.widget.TabHost.dispatchWindowFocusChanged(boolean)",1,2,2
"android.widget.TabHost.getCurrentTab()",1,1,1
"android.widget.TabHost.getCurrentTabTag()",2,3,3
"android.widget.TabHost.getCurrentTabView()",2,3,3
"android.widget.TabHost.getCurrentView()",1,1,1
"android.widget.TabHost.getTabContentView()",1,1,1
"android.widget.TabHost.getTabWidget()",1,1,1
"android.widget.TabHost.initTabHost()",1,1,1
"android.widget.TabHost.invokeOnTabChangeListener()",1,2,2
"android.widget.TabHost.newTabSpec(String)",1,1,1
"android.widget.TabHost.onAttachedToWindow()",1,2,2
"android.widget.TabHost.onDetachedFromWindow()",1,2,2
"android.widget.TabHost.onTouchModeChanged(boolean)",1,5,5
"android.widget.TabHost.sendAccessibilityEvent(int)",1,1,1
"android.widget.TabHost.setCurrentTab(int)",3,5,7
"android.widget.TabHost.setCurrentTabByTag(String)",3,3,3
"android.widget.TabHost.setOnTabChangedListener(OnTabChangeListener)",1,1,1
"android.widget.TabHost.setup()",4,3,5
"android.widget.TabHost.setup(LocalActivityManager)",1,1,1
"android.widget.TabWidget.TabClickListener.TabClickListener(int)",1,1,1
"android.widget.TabWidget.TabClickListener.onClick(View)",1,1,1
"android.widget.TabWidget.TabWidget(Context)",1,1,1
"android.widget.TabWidget.TabWidget(Context,AttributeSet)",1,1,1
"android.widget.TabWidget.TabWidget(Context,AttributeSet,int)",1,1,1
"android.widget.TabWidget.addView(View)",1,4,4
"android.widget.TabWidget.childDrawableStateChanged(View)",1,3,3
"android.widget.TabWidget.dispatchDraw(Canvas)",3,2,4
"android.widget.TabWidget.dispatchPopulateAccessibilityEvent(AccessibilityEvent)",1,2,2
"android.widget.TabWidget.focusCurrentTab(int)",1,2,2
"android.widget.TabWidget.getChildDrawingOrder(int,int)",4,1,4
"android.widget.TabWidget.getChildTabViewAt(int)",1,1,2
"android.widget.TabWidget.getTabCount()",1,1,2
"android.widget.TabWidget.initTabWidget()",1,4,4
"android.widget.TabWidget.isStripEnabled()",1,1,1
"android.widget.TabWidget.onFocusChange(View,boolean)",5,8,8
"android.widget.TabWidget.onSizeChanged(int,int,int,int)",1,1,1
"android.widget.TabWidget.sendAccessibilityEventUnchecked(AccessibilityEvent)",2,2,3
"android.widget.TabWidget.setCurrentTab(int)",2,5,6
"android.widget.TabWidget.setDividerDrawable(Drawable)",1,1,1
"android.widget.TabWidget.setDividerDrawable(int)",1,1,1
"android.widget.TabWidget.setEnabled(boolean)",1,2,2
"android.widget.TabWidget.setLeftStripDrawable(Drawable)",1,1,1
"android.widget.TabWidget.setLeftStripDrawable(int)",1,1,1
"android.widget.TabWidget.setRightStripDrawable(Drawable)",1,1,1
"android.widget.TabWidget.setRightStripDrawable(int)",1,1,1
"android.widget.TabWidget.setStripEnabled(boolean)",1,1,1
"android.widget.TabWidget.setTabSelectionListener(OnTabSelectionChanged)",1,1,1
"android.widget.TableLayout.LayoutParams.LayoutParams()",1,1,1
"android.widget.TableLayout.LayoutParams.LayoutParams(Context,AttributeSet)",1,1,1
"android.widget.TableLayout.LayoutParams.LayoutParams(LayoutParams)",1,1,1
"android.widget.TableLayout.LayoutParams.LayoutParams(MarginLayoutParams)",1,1,1
"android.widget.TableLayout.LayoutParams.LayoutParams(int,int)",1,1,1
"android.widget.TableLayout.LayoutParams.LayoutParams(int,int,float)",1,1,1
"android.widget.TableLayout.LayoutParams.setBaseAttributes(TypedArray,int,int)",1,2,2
"android.widget.TableLayout.PassThroughHierarchyChangeListener.onChildViewAdded(View,View)",1,2,2
"android.widget.TableLayout.PassThroughHierarchyChangeListener.onChildViewRemoved(View,View)",1,2,2
"android.widget.TableLayout.TableLayout(Context)",1,1,1
"android.widget.TableLayout.TableLayout(Context,AttributeSet)",1,6,6
"android.widget.TableLayout.addView(View)",1,1,1
"android.widget.TableLayout.addView(View,LayoutParams)",1,1,1
"android.widget.TableLayout.addView(View,int)",1,1,1
"android.widget.TableLayout.addView(View,int,LayoutParams)",1,1,1
"android.widget.TableLayout.checkLayoutParams(LayoutParams)",1,1,1
"android.widget.TableLayout.findLargestCells(int)",3,6,9
"android.widget.TableLayout.generateDefaultLayoutParams()",1,1,1
"android.widget.TableLayout.generateLayoutParams(AttributeSet)",1,1,1
"android.widget.TableLayout.generateLayoutParams(LayoutParams)",1,1,1
"android.widget.TableLayout.initTableLayout()",1,1,4
"android.widget.TableLayout.isColumnCollapsed(int)",1,1,1
"android.widget.TableLayout.isColumnShrinkable(int)",1,2,2
"android.widget.TableLayout.isColumnStretchable(int)",1,2,2
"android.widget.TableLayout.isShrinkAllColumns()",1,1,1
"android.widget.TableLayout.isStretchAllColumns()",1,1,1
"android.widget.TableLayout.measureChildBeforeLayout(View,int,int,int,int,int)",1,2,2
"android.widget.TableLayout.measureVertical(int,int)",1,1,1
"android.widget.TableLayout.mutateColumnsWidth(SparseBooleanArray,boolean,int,int)",2,9,15
"android.widget.TableLayout.onLayout(boolean,int,int,int,int)",1,1,1
"android.widget.TableLayout.onMeasure(int,int)",1,1,1
"android.widget.TableLayout.parseColumns(String)",1,3,4
"android.widget.TableLayout.requestLayout()",1,3,3
"android.widget.TableLayout.requestRowsLayout()",1,3,3
"android.widget.TableLayout.setColumnCollapsed(int,boolean)",1,3,3
"android.widget.TableLayout.setColumnShrinkable(int,boolean)",1,1,1
"android.widget.TableLayout.setColumnStretchable(int,boolean)",1,1,1
"android.widget.TableLayout.setOnHierarchyChangeListener(OnHierarchyChangeListener)",1,1,1
"android.widget.TableLayout.setShrinkAllColumns(boolean)",1,1,1
"android.widget.TableLayout.setStretchAllColumns(boolean)",1,1,1
"android.widget.TableLayout.shrinkAndStretchColumns(int)",2,7,9
"android.widget.TableLayout.trackCollapsedColumns(View)",1,4,4
"android.widget.TableRow.ChildrenTracker.onChildViewAdded(View,View)",1,2,2
"android.widget.TableRow.ChildrenTracker.onChildViewRemoved(View,View)",1,2,2
"android.widget.TableRow.ChildrenTracker.setOnHierarchyChangeListener(OnHierarchyChangeListener)",1,1,1
"android.widget.TableRow.LayoutParams.LayoutParams()",1,1,1
"android.widget.TableRow.LayoutParams.LayoutParams(Context,AttributeSet)",1,1,2
"android.widget.TableRow.LayoutParams.LayoutParams(LayoutParams)",1,1,1
"android.widget.TableRow.LayoutParams.LayoutParams(MarginLayoutParams)",1,1,1
"android.widget.TableRow.LayoutParams.LayoutParams(int)",1,1,1
"android.widget.TableRow.LayoutParams.LayoutParams(int,int)",1,1,1
"android.widget.TableRow.LayoutParams.LayoutParams(int,int,float)",1,1,1
"android.widget.TableRow.LayoutParams.setBaseAttributes(TypedArray,int,int)",1,3,3
"android.widget.TableRow.TableRow(Context)",1,1,1
"android.widget.TableRow.TableRow(Context,AttributeSet)",1,1,1
"android.widget.TableRow.checkLayoutParams(LayoutParams)",1,1,1
"android.widget.TableRow.generateDefaultLayoutParams()",1,1,1
"android.widget.TableRow.generateLayoutParams(AttributeSet)",1,1,1
"android.widget.TableRow.generateLayoutParams(LayoutParams)",1,1,1
"android.widget.TableRow.getChildrenSkipCount(View,int)",1,1,1
"android.widget.TableRow.getColumnsWidths(int)",2,6,10
"android.widget.TableRow.getLocationOffset(View)",1,1,1
"android.widget.TableRow.getNextLocationOffset(View)",1,1,1
"android.widget.TableRow.getVirtualChildAt(int)",2,3,3
"android.widget.TableRow.getVirtualChildCount()",1,2,2
"android.widget.TableRow.initTableRow()",1,2,2
"android.widget.TableRow.mapIndexAndColumns()",1,4,5
"android.widget.TableRow.measureChildBeforeLayout(View,int,int,int,int,int)",2,4,8
"android.widget.TableRow.measureNullChild(int)",1,1,1
"android.widget.TableRow.onLayout(boolean,int,int,int,int)",1,1,1
"android.widget.TableRow.onMeasure(int,int)",1,1,1
"android.widget.TableRow.setColumnCollapsed(int,boolean)",1,2,3
"android.widget.TableRow.setColumnsWidthConstraints(int[])",2,2,3
"android.widget.TableRow.setOnHierarchyChangeListener(OnHierarchyChangeListener)",1,1,1
"android.widget.TextSwitcher.TextSwitcher(Context)",1,1,1
"android.widget.TextSwitcher.TextSwitcher(Context,AttributeSet)",1,1,1
"android.widget.TextSwitcher.addView(View,int,LayoutParams)",2,1,2
"android.widget.TextSwitcher.setCurrentText(CharSequence)",1,1,1
"android.widget.TextSwitcher.setText(CharSequence)",1,1,1
"android.widget.TextView.Blink.Blink(TextView)",1,1,1
"android.widget.TextView.Blink.cancel()",1,2,2
"android.widget.TextView.Blink.run()",2,5,8
"android.widget.TextView.Blink.uncancel()",1,1,1
"android.widget.TextView.ChangeWatcher.afterTextChanged(Editable)",1,3,3
"android.widget.TextView.ChangeWatcher.beforeTextChanged(CharSequence,int,int,int)",1,5,5
"android.widget.TextView.ChangeWatcher.onSpanAdded(Spannable,Object,int,int)",1,2,2
"android.widget.TextView.ChangeWatcher.onSpanChanged(Spannable,Object,int,int,int,int)",1,2,2
"android.widget.TextView.ChangeWatcher.onSpanRemoved(Spannable,Object,int,int)",1,2,2
"android.widget.TextView.ChangeWatcher.onTextChanged(CharSequence,int,int,int)",1,6,6
"android.widget.TextView.CharWrapper.CharWrapper(char[],int,int)",1,1,1
"android.widget.TextView.CharWrapper.charAt(int)",1,1,1
"android.widget.TextView.CharWrapper.drawText(Canvas,int,int,float,float,Paint)",1,1,1
"android.widget.TextView.CharWrapper.drawTextRun(Canvas,int,int,int,int,float,float,int,Paint)",1,1,1
"android.widget.TextView.CharWrapper.getChars(int,int,char[],int)",2,1,5
"android.widget.TextView.CharWrapper.getTextRunAdvances(int,int,int,int,int,float[],int,Paint)",1,1,1
"android.widget.TextView.CharWrapper.getTextRunCursor(int,int,int,int,int,Paint)",1,1,1
"android.widget.TextView.CharWrapper.getTextWidths(int,int,float[],Paint)",1,1,1
"android.widget.TextView.CharWrapper.length()",1,1,1
"android.widget.TextView.CharWrapper.measureText(int,int,Paint)",1,1,1
"android.widget.TextView.CharWrapper.set(char[],int,int)",1,1,1
"android.widget.TextView.CharWrapper.subSequence(int,int)",2,1,5
"android.widget.TextView.CharWrapper.toString()",1,1,1
"android.widget.TextView.CommitSelectionReceiver.CommitSelectionReceiver(int,int)",1,1,1
"android.widget.TextView.CommitSelectionReceiver.onReceiveResult(int,Bundle)",1,4,5
"android.widget.TextView.CorrectionHighlighter.CorrectionHighlighter()",1,1,1
"android.widget.TextView.CorrectionHighlighter.draw(Canvas,int)",1,5,5
"android.widget.TextView.CorrectionHighlighter.highlight(CorrectionInfo)",1,2,3
"android.widget.TextView.CorrectionHighlighter.invalidate(boolean)",2,2,3
"android.widget.TextView.CorrectionHighlighter.stopAnimation()",1,1,1
"android.widget.TextView.CorrectionHighlighter.updatePaint()",2,1,2
"android.widget.TextView.CorrectionHighlighter.updatePath()",2,1,2
"android.widget.TextView.DragLocalState.DragLocalState(TextView,int,int)",1,1,1
"android.widget.TextView.ErrorPopup.ErrorPopup(TextView,int,int)",1,1,1
"android.widget.TextView.ErrorPopup.fixDirection(boolean)",1,2,2
"android.widget.TextView.ErrorPopup.update(int,int,int,int,boolean)",1,2,2
"android.widget.TextView.HandleView.HandleView(CursorController,int)",1,1,1
"android.widget.TextView.HandleView.hide()",1,2,2
"android.widget.TextView.HandleView.isDragging()",1,1,1
"android.widget.TextView.HandleView.isPositionVisible()",4,2,9
"android.widget.TextView.HandleView.isShowing()",1,1,1
"android.widget.TextView.HandleView.moveTo(int,int)",1,8,11
"android.widget.TextView.HandleView.onDetached()",1,1,1
"android.widget.TextView.HandleView.onDraw(Canvas)",1,2,2
"android.widget.TextView.HandleView.onMeasure(int,int)",1,1,1
"android.widget.TextView.HandleView.onTouchEvent(MotionEvent)",2,13,14
"android.widget.TextView.HandleView.positionAtCursor(int,boolean)",1,1,2
"android.widget.TextView.HandleView.removeLongPressCallback()",1,2,2
"android.widget.TextView.HandleView.setOrientation(int)",2,7,7
"android.widget.TextView.HandleView.show()",2,3,3
"android.widget.TextView.HandleView.showPastePopupWindow()",1,2,3
"android.widget.TextView.InsertionPointCursorController.getHandle()",1,1,2
"android.widget.TextView.InsertionPointCursorController.hide()",1,2,2
"android.widget.TextView.InsertionPointCursorController.hideDelayed()",1,2,2
"android.widget.TextView.InsertionPointCursorController.isShowing()",1,2,2
"android.widget.TextView.InsertionPointCursorController.onDetached()",1,2,2
"android.widget.TextView.InsertionPointCursorController.onTouchEvent(MotionEvent)",1,1,1
"android.widget.TextView.InsertionPointCursorController.onTouchModeChanged(boolean)",1,2,2
"android.widget.TextView.InsertionPointCursorController.removeHiderCallback()",1,2,2
"android.widget.TextView.InsertionPointCursorController.removePastePopupCallback()",1,2,2
"android.widget.TextView.InsertionPointCursorController.show()",1,1,1
"android.widget.TextView.InsertionPointCursorController.show(int)",1,3,4
"android.widget.TextView.InsertionPointCursorController.updatePosition()",2,2,2
"android.widget.TextView.InsertionPointCursorController.updatePosition(HandleView,int,int)",1,2,2
"android.widget.TextView.Marquee.Marquee(TextView)",1,1,1
"android.widget.TextView.Marquee.getGhostOffset()",1,1,1
"android.widget.TextView.Marquee.handleMessage(Message)",2,3,6
"android.widget.TextView.Marquee.isRunning()",1,1,1
"android.widget.TextView.Marquee.isStopped()",1,1,1
"android.widget.TextView.Marquee.resetScroll()",1,2,2
"android.widget.TextView.Marquee.shouldDrawGhost()",1,1,2
"android.widget.TextView.Marquee.shouldDrawLeftFade()",1,1,1
"android.widget.TextView.Marquee.start(int)",2,3,4
"android.widget.TextView.Marquee.stop()",1,1,1
"android.widget.TextView.Marquee.tick()",2,5,6
"android.widget.TextView.MenuHandler.onMenuItemClick(MenuItem)",1,1,1
"android.widget.TextView.PastePopupMenu.PastePopupMenu()",1,1,1
"android.widget.TextView.PastePopupMenu.hide()",1,1,1
"android.widget.TextView.PastePopupMenu.isShowing()",1,1,1
"android.widget.TextView.PastePopupMenu.onClick(View)",1,2,2
"android.widget.TextView.PastePopupMenu.positionAtCursor()",1,1,1
"android.widget.TextView.PastePopupMenu.show()",1,1,1
"android.widget.TextView.PastePopupMenu.updateContent()",3,3,7
"android.widget.TextView.SavedState.SavedState(Parcel)",1,2,2
"android.widget.TextView.SavedState.SavedState(Parcelable)",1,1,1
"android.widget.TextView.SavedState.toString()",1,1,2
"android.widget.TextView.SavedState.writeToParcel(Parcel,int)",1,2,3
"android.widget.TextView.SelectionActionModeCallback.onActionItemClicked(ActionMode,MenuItem)",2,2,3
"android.widget.TextView.SelectionActionModeCallback.onCreateActionMode(ActionMode,Menu)",2,7,7
"android.widget.TextView.SelectionActionModeCallback.onDestroyActionMode(ActionMode)",1,2,2
"android.widget.TextView.SelectionActionModeCallback.onPrepareActionMode(ActionMode,Menu)",2,2,2
"android.widget.TextView.SelectionModifierCursorController.SelectionModifierCursorController()",1,1,1
"android.widget.TextView.SelectionModifierCursorController.cancelFadeOutAnimation()",1,1,1
"android.widget.TextView.SelectionModifierCursorController.getMaxTouchOffset()",1,1,1
"android.widget.TextView.SelectionModifierCursorController.getMinTouchOffset()",1,1,1
"android.widget.TextView.SelectionModifierCursorController.hide()",1,3,3
"android.widget.TextView.SelectionModifierCursorController.isSelectionStartDragged()",1,2,2
"android.widget.TextView.SelectionModifierCursorController.isShowing()",1,1,1
"android.widget.TextView.SelectionModifierCursorController.onDetached()",1,1,1
"android.widget.TextView.SelectionModifierCursorController.onTouchEvent(MotionEvent)",2,8,10
"android.widget.TextView.SelectionModifierCursorController.onTouchModeChanged(boolean)",1,2,2
"android.widget.TextView.SelectionModifierCursorController.resetTouchOffsets()",1,1,1
"android.widget.TextView.SelectionModifierCursorController.show()",2,1,4
"android.widget.TextView.SelectionModifierCursorController.updateMinAndMaxOffsets(MotionEvent)",1,2,4
"android.widget.TextView.SelectionModifierCursorController.updatePosition()",3,2,4
"android.widget.TextView.SelectionModifierCursorController.updatePosition(HandleView,int,int)",4,1,9
"android.widget.TextView.TextView(Context)",1,1,1
"android.widget.TextView.TextView(Context,AttributeSet)",1,1,1
"android.widget.TextView.TextView(Context,AttributeSet,int)",8,32,141
"android.widget.TextView.addTextChangedListener(TextWatcher)",1,1,2
"android.widget.TextView.append(CharSequence)",1,1,1
"android.widget.TextView.append(CharSequence,int,int)",1,2,2
"android.widget.TextView.applySingleLine(boolean,boolean,boolean)",1,5,5
"android.widget.TextView.assumeLayout()",1,1,3
"android.widget.TextView.beginBatchEdit()",1,4,4
"android.widget.TextView.bringPointIntoView(int)",2,7,33
"android.widget.TextView.bringTextIntoView()",2,7,12
"android.widget.TextView.canCopy()",3,2,4
"android.widget.TextView.canCut()",3,4,6
"android.widget.TextView.canMarquee()",1,2,2
"android.widget.TextView.canPaste()",1,5,5
"android.widget.TextView.canSelectText()",1,2,2
"android.widget.TextView.cancelLongPress()",1,1,1
"android.widget.TextView.checkForRelayout()",5,10,14
"android.widget.TextView.checkForResize()",1,7,9
"android.widget.TextView.chooseSize(PopupWindow,CharSequence,TextView)",1,2,3
"android.widget.TextView.clearComposingText()",1,2,2
"android.widget.TextView.compressText(float)",4,7,9
"android.widget.TextView.computeHorizontalScrollRange()",2,3,4
"android.widget.TextView.computeScroll()",1,3,3
"android.widget.TextView.computeVerticalScrollExtent()",1,1,1
"android.widget.TextView.computeVerticalScrollRange()",2,2,2
"android.widget.TextView.convertFromViewportToContentCoordinates(Rect)",1,1,1
"android.widget.TextView.convertToLocalHorizontalCoordinate(int)",1,1,1
"android.widget.TextView.debug(int)",1,3,3
"android.widget.TextView.desired(Layout)",3,3,4
"android.widget.TextView.didTouchFocusSelect()",1,1,1
"android.widget.TextView.dispatchFinishTemporaryDetach()",1,1,1
"android.widget.TextView.dispatchPopulateAccessibilityEvent(AccessibilityEvent)",2,5,6
"android.widget.TextView.doKeyDown(int,KeyEvent,KeyEvent)",22,19,35
"android.widget.TextView.drawableStateChanged()",1,16,16
"android.widget.TextView.endBatchEdit()",1,3,3
"android.widget.TextView.ensureEndedBatchEdit()",1,2,3
"android.widget.TextView.extractRangeEndFromLong(long)",1,1,1
"android.widget.TextView.extractRangeStartFromLong(long)",1,1,1
"android.widget.TextView.extractText(ExtractedTextRequest,ExtractedText)",1,1,1
"android.widget.TextView.extractTextInternal(ExtractedTextRequest,int,int,int,ExtractedText)",2,7,15
"android.widget.TextView.finishBatchEdit(InputMethodState)",1,3,4
"android.widget.TextView.fixFocusableAndClickableSettings()",1,2,3
"android.widget.TextView.getAutoLinkMask()",1,1,1
"android.widget.TextView.getBaseline()",2,3,3
"android.widget.TextView.getBottomPaddingOffset()",1,1,1
"android.widget.TextView.getBottomVerticalOffset(boolean)",1,5,8
"android.widget.TextView.getCompoundDrawablePadding()",1,1,2
"android.widget.TextView.getCompoundDrawables()",2,1,2
"android.widget.TextView.getCompoundPaddingBottom()",2,1,3
"android.widget.TextView.getCompoundPaddingLeft()",2,1,3
"android.widget.TextView.getCompoundPaddingRight()",2,1,3
"android.widget.TextView.getCompoundPaddingTop()",2,1,3
"android.widget.TextView.getCurrentHintTextColor()",1,1,2
"android.widget.TextView.getCurrentTextColor()",1,1,1
"android.widget.TextView.getCustomSelectionActionModeCallback()",1,1,1
"android.widget.TextView.getDefaultEditable()",1,1,1
"android.widget.TextView.getDefaultMovementMethod()",1,1,1
"android.widget.TextView.getDesiredHeight()",1,1,1
"android.widget.TextView.getDesiredHeight(Layout,boolean)",2,8,9
"android.widget.TextView.getEditableText()",1,1,2
"android.widget.TextView.getEllipsize()",1,1,1
"android.widget.TextView.getError()",1,1,1
"android.widget.TextView.getErrorX()",1,1,2
"android.widget.TextView.getErrorY()",1,1,3
"android.widget.TextView.getExtendedPaddingBottom()",6,3,6
"android.widget.TextView.getExtendedPaddingTop()",6,3,6
"android.widget.TextView.getFilters()",1,1,1
"android.widget.TextView.getFocusedRect(Rect)",3,4,4
"android.widget.TextView.getFreezesText()",1,1,1
"android.widget.TextView.getGravity()",1,1,1
"android.widget.TextView.getHint()",1,1,1
"android.widget.TextView.getHintTextColors()",1,1,1
"android.widget.TextView.getHysteresisOffset(int,int,int)",2,1,6
"android.widget.TextView.getImeActionId()",1,1,2
"android.widget.TextView.getImeActionLabel()",1,1,2
"android.widget.TextView.getImeOptions()",1,1,2
"android.widget.TextView.getInputExtras(boolean)",5,1,5
"android.widget.TextView.getInputType()",1,1,1
"android.widget.TextView.getInsertionController()",2,3,4
"android.widget.TextView.getInterestingRect(Rect,int)",1,3,3
"android.widget.TextView.getKeyListener()",1,1,1
"android.widget.TextView.getLastTapPosition()",3,4,4
"android.widget.TextView.getLastTouchOffsets()",1,2,2
"android.widget.TextView.getLayout()",1,1,1
"android.widget.TextView.getLeftFadingEdgeStrength()",9,8,10
"android.widget.TextView.getLeftPaddingOffset()",1,1,1
"android.widget.TextView.getLineAtCoordinate(int)",1,1,1
"android.widget.TextView.getLineBounds(int,Rect)",2,5,5
"android.widget.TextView.getLineCount()",1,2,2
"android.widget.TextView.getLineHeight()",1,1,1
"android.widget.TextView.getLinkTextColors()",1,1,1
"android.widget.TextView.getLinksClickable()",1,1,1
"android.widget.TextView.getMovementMethod()",1,1,1
"android.widget.TextView.getOffset(int,int)",2,1,2
"android.widget.TextView.getOffsetAtCoordinate(int,int)",1,1,1
"android.widget.TextView.getPaint()",1,1,1
"android.widget.TextView.getPaintFlags()",1,1,1
"android.widget.TextView.getPrivateImeOptions()",1,1,2
"android.widget.TextView.getRightFadingEdgeStrength()",7,7,9
"android.widget.TextView.getRightPaddingOffset()",1,1,1
"android.widget.TextView.getSelectionController()",2,3,4
"android.widget.TextView.getSelectionEnd()",1,1,1
"android.widget.TextView.getSelectionStart()",1,1,1
"android.widget.TextView.getText()",1,1,1
"android.widget.TextView.getTextColor(Context,TypedArray,int)",2,2,2
"android.widget.TextView.getTextColors()",1,1,1
"android.widget.TextView.getTextColors(Context,TypedArray)",1,3,3
"android.widget.TextView.getTextScaleX()",1,1,1
"android.widget.TextView.getTextSize()",1,1,1
"android.widget.TextView.getTextThumbnailBuilder(CharSequence)",2,2,3
"android.widget.TextView.getTopPaddingOffset()",1,1,1
"android.widget.TextView.getTotalPaddingBottom()",1,1,1
"android.widget.TextView.getTotalPaddingLeft()",1,1,1
"android.widget.TextView.getTotalPaddingRight()",1,1,1
"android.widget.TextView.getTotalPaddingTop()",1,1,1
"android.widget.TextView.getTransformationMethod()",1,1,1
"android.widget.TextView.getTypeface()",1,1,1
"android.widget.TextView.getUrls()",2,2,2
"android.widget.TextView.getVerticalOffset(boolean)",1,5,8
"android.widget.TextView.getWordLimitsAt(int)",16,7,23
"android.widget.TextView.handleTextChanged(CharSequence,int,int,int)",1,5,6
"android.widget.TextView.hasInsertionController()",1,1,1
"android.widget.TextView.hasPasswordTransformationMethod()",1,1,1
"android.widget.TextView.hasSelection()",1,1,2
"android.widget.TextView.hasSelectionController()",1,1,1
"android.widget.TextView.hideControllers()",1,1,1
"android.widget.TextView.hideError()",1,3,3
"android.widget.TextView.hideInsertionPointCursorController()",1,2,2
"android.widget.TextView.hideSelectionModifierCursorController()",1,2,2
"android.widget.TextView.invalidateCursor()",1,1,1
"android.widget.TextView.invalidateCursor(int,int,int)",1,5,7
"android.widget.TextView.invalidateCursorPath()",1,2,3
"android.widget.TextView.invalidateDrawable(Drawable)",1,7,7
"android.widget.TextView.isInBatchEditMode()",2,1,2
"android.widget.TextView.isInputMethodTarget()",1,2,2
"android.widget.TextView.isMultilineInputType(int)",1,1,1
"android.widget.TextView.isPaddingOffsetRequired()",1,1,2
"android.widget.TextView.isPasswordInputType(int)",1,1,3
"android.widget.TextView.isPositionOnText(int,int)",4,1,4
"android.widget.TextView.isTextEditable()",1,3,3
"android.widget.TextView.isTextSelectable()",1,1,1
"android.widget.TextView.isVisiblePasswordInputType(int)",1,1,1
"android.widget.TextView.isWordCharacter(int)",1,1,8
"android.widget.TextView.jumpDrawablesToCurrentState()",1,6,6
"android.widget.TextView.length()",1,1,1
"android.widget.TextView.makeBlink()",2,4,5
"android.widget.TextView.makeNewLayout(int,int,Metrics,Metrics,int,boolean)",2,24,40
"android.widget.TextView.moveCursorToVisibleOffset()",4,4,11
"android.widget.TextView.nullLayouts()",1,1,5
"android.widget.TextView.onAttachedToWindow()",1,5,5
"android.widget.TextView.onBeginBatchEdit()",1,1,1
"android.widget.TextView.onCheckIsTextEditor()",1,1,1
"android.widget.TextView.onCommitCompletion(CompletionInfo)",1,1,1
"android.widget.TextView.onCommitCorrection(CorrectionInfo)",1,2,2
"android.widget.TextView.onCreateContextMenu(ContextMenu)",1,5,6
"android.widget.TextView.onCreateDrawableState(int)",4,5,5
"android.widget.TextView.onCreateInputConnection(EditorInfo)",3,5,12
"android.widget.TextView.onDetachedFromWindow()",1,9,9
"android.widget.TextView.onDragEvent(DragEvent)",3,3,6
"android.widget.TextView.onDraw(Canvas)",2,41,49
"android.widget.TextView.onDrop(DragEvent)",3,8,14
"android.widget.TextView.onEditorAction(int)",11,10,13
"android.widget.TextView.onEndBatchEdit()",1,1,1
"android.widget.TextView.onFinishTemporaryDetach()",1,1,2
"android.widget.TextView.onFocusChanged(boolean,int,Rect)",2,18,23
"android.widget.TextView.onKeyDown(int,KeyEvent)",2,2,2
"android.widget.TextView.onKeyMultiple(int,int,KeyEvent)",3,7,9
"android.widget.TextView.onKeyShortcut(int,KeyEvent)",7,7,10
"android.widget.TextView.onKeyUp(int,KeyEvent)",14,19,27
"android.widget.TextView.onMeasure(int,int)",1,31,42
"android.widget.TextView.onPreDraw()",2,10,12
"android.widget.TextView.onPrivateIMECommand(String,Bundle)",1,1,1
"android.widget.TextView.onRestoreInstanceState(Parcelable)",2,7,11
"android.widget.TextView.onSaveInstanceState()",2,7,10
"android.widget.TextView.onSelectionChanged(int,int)",1,1,1
"android.widget.TextView.onSetAlpha(int)",2,8,8
"android.widget.TextView.onStartTemporaryDetach()",1,1,2
"android.widget.TextView.onTextChanged(CharSequence,int,int,int)",1,1,1
"android.widget.TextView.onTextContextMenuItem(int)",2,9,14
"android.widget.TextView.onTouchEvent(MotionEvent)",4,31,37
"android.widget.TextView.onTrackballEvent(MotionEvent)",3,2,5
"android.widget.TextView.onVisibilityChanged(View,int)",1,2,2
"android.widget.TextView.onWindowFocusChanged(boolean)",1,5,6
"android.widget.TextView.packRangeInLong(int,int)",1,1,1
"android.widget.TextView.paste(int,int)",1,5,5
"android.widget.TextView.performLongClick()",5,6,7
"android.widget.TextView.prepareCursorControllers()",1,8,10
"android.widget.TextView.prepareSpacesAroundPaste(int,int,CharSequence)",1,16,16
"android.widget.TextView.registerForPreDraw()",2,2,4
"android.widget.TextView.removeParcelableSpans(Spannable,int,int)",1,2,2
"android.widget.TextView.removeTextChangedListener(TextWatcher)",1,3,3
"android.widget.TextView.reportExtractedText()",6,8,11
"android.widget.TextView.restartMarqueeIfNeeded()",1,2,3
"android.widget.TextView.selectAll()",1,1,1
"android.widget.TextView.selectCurrentWord()",3,5,6
"android.widget.TextView.sendAccessibilityEventTypeViewTextChanged(CharSequence,int,int,int)",1,1,1
"android.widget.TextView.sendAfterTextChanged(Editable)",1,3,3
"android.widget.TextView.sendBeforeTextChanged(CharSequence,int,int,int)",1,3,3
"android.widget.TextView.sendOnTextChanged(CharSequence,int,int,int)",1,3,3
"android.widget.TextView.setAutoLinkMask(int)",1,1,1
"android.widget.TextView.setCompoundDrawablePadding(int)",1,1,4
"android.widget.TextView.setCompoundDrawables(Drawable,Drawable,Drawable,Drawable)",1,16,24
"android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds(Drawable,Drawable,Drawable,Drawable)",1,5,5
"android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)",1,5,5
"android.widget.TextView.setCursorVisible(boolean)",1,1,1
"android.widget.TextView.setCustomSelectionActionModeCallback(Callback)",1,1,1
"android.widget.TextView.setEditableFactory(Factory)",1,1,1
"android.widget.TextView.setEllipsize(TruncateAt)",1,2,2
"android.widget.TextView.setEms(int)",1,1,1
"android.widget.TextView.setEnabled(boolean)",2,4,5
"android.widget.TextView.setError(CharSequence)",1,2,2
"android.widget.TextView.setError(CharSequence,Drawable)",1,6,6
"android.widget.TextView.setExtractedText(ExtractedText)",1,5,11
"android.widget.TextView.setExtracting(ExtractedTextRequest)",1,1,2
"android.widget.TextView.setFilters(Editable,InputFilter[])",1,2,2
"android.widget.TextView.setFilters(InputFilter[])",2,2,3
"android.widget.TextView.setFrame(int,int,int,int)",1,2,2
"android.widget.TextView.setFreezesText(boolean)",1,1,1
"android.widget.TextView.setGravity(int)",1,4,8
"android.widget.TextView.setHeight(int)",1,1,1
"android.widget.TextView.setHighlightColor(int)",1,2,2
"android.widget.TextView.setHint(CharSequence)",1,3,3
"android.widget.TextView.setHint(int)",1,1,1
"android.widget.TextView.setHintTextColor(ColorStateList)",1,1,1
"android.widget.TextView.setHintTextColor(int)",1,1,1
"android.widget.TextView.setHorizontallyScrolling(boolean)",1,2,2
"android.widget.TextView.setImeActionLabel(CharSequence,int)",1,1,2
"android.widget.TextView.setImeOptions(int)",1,1,2
"android.widget.TextView.setIncludeFontPadding(boolean)",1,2,2
"android.widget.TextView.setInputExtras(int)",1,1,2
"android.widget.TextView.setInputType(int)",1,6,10
"android.widget.TextView.setInputType(int,boolean)",2,7,12
"android.widget.TextView.setInputTypeSingleLine(boolean)",1,1,3
"android.widget.TextView.setKeyListener(KeyListener)",1,3,4
"android.widget.TextView.setKeyListenerOnly(KeyListener)",1,2,3
"android.widget.TextView.setLineSpacing(float,float)",1,2,2
"android.widget.TextView.setLines(int)",1,1,1
"android.widget.TextView.setLinkTextColor(ColorStateList)",1,1,1
"android.widget.TextView.setLinkTextColor(int)",1,1,1
"android.widget.TextView.setLinksClickable(boolean)",1,1,1
"android.widget.TextView.setMarqueeRepeatLimit(int)",1,1,1
"android.widget.TextView.setMaxEms(int)",1,1,1
"android.widget.TextView.setMaxHeight(int)",1,1,1
"android.widget.TextView.setMaxLines(int)",1,1,1
"android.widget.TextView.setMaxWidth(int)",1,1,1
"android.widget.TextView.setMinEms(int)",1,1,1
"android.widget.TextView.setMinHeight(int)",1,1,1
"android.widget.TextView.setMinLines(int)",1,1,1
"android.widget.TextView.setMinWidth(int)",1,1,1
"android.widget.TextView.setMovementMethod(MovementMethod)",1,2,3
"android.widget.TextView.setOnEditorActionListener(OnEditorActionListener)",1,1,2
"android.widget.TextView.setPadding(int,int,int,int)",1,2,5
"android.widget.TextView.setPaintFlags(int)",1,3,3
"android.widget.TextView.setPrimaryClip(ClipData)",1,1,1
"android.widget.TextView.setPrivateImeOptions(String)",1,1,2
"android.widget.TextView.setRawInputType(int)",1,1,1
"android.widget.TextView.setRawTextSize(float)",1,3,3
"android.widget.TextView.setScroller(Scroller)",1,1,1
"android.widget.TextView.setSelectAllOnFocus(boolean)",1,2,3
"android.widget.TextView.setSelected(boolean)",1,3,4
"android.widget.TextView.setShadowLayer(float,float,float,int)",1,1,1
"android.widget.TextView.setSingleLine()",1,1,1
"android.widget.TextView.setSingleLine(boolean)",1,1,1
"android.widget.TextView.setSpannableFactory(Factory)",1,1,1
"android.widget.TextView.setText(CharSequence)",1,1,1
"android.widget.TextView.setText(CharSequence,BufferType)",1,1,2
"android.widget.TextView.setText(CharSequence,BufferType,boolean,int)",1,24,35
"android.widget.TextView.setText(char[],int,int)",2,3,6
"android.widget.TextView.setText(int)",1,1,1
"android.widget.TextView.setText(int,BufferType)",1,1,1
"android.widget.TextView.setTextAppearance(Context,int)",1,6,6
"android.widget.TextView.setTextColor(ColorStateList)",2,1,2
"android.widget.TextView.setTextColor(int)",1,1,1
"android.widget.TextView.setTextIsSelectable(boolean)",2,2,4
"android.widget.TextView.setTextKeepState(CharSequence)",1,1,1
"android.widget.TextView.setTextKeepState(CharSequence,BufferType)",1,3,4
"android.widget.TextView.setTextScaleX(float)",1,3,3
"android.widget.TextView.setTextSize(float)",1,1,1
"android.widget.TextView.setTextSize(int,float)",1,2,2
"android.widget.TextView.setTransformationMethod(TransformationMethod)",2,3,4
"android.widget.TextView.setTypeface(Typeface)",1,3,3
"android.widget.TextView.setTypeface(Typeface,int)",1,4,5
"android.widget.TextView.setTypefaceByIndex(int,int)",2,2,4
"android.widget.TextView.setWidth(int)",1,1,1
"android.widget.TextView.shouldAdvanceFocusOnEnter()",5,1,6
"android.widget.TextView.shouldAdvanceFocusOnTab()",4,1,6
"android.widget.TextView.showError()",2,2,3
"android.widget.TextView.spanChange(Spanned,Object,int,int,int,int)",1,20,35
"android.widget.TextView.startMarquee()",3,7,10
"android.widget.TextView.startSelectionActionMode()",3,4,5
"android.widget.TextView.startStopMarquee(boolean)",1,3,3
"android.widget.TextView.stopMarquee()",1,3,3
"android.widget.TextView.stopSelectionActionMode()",1,2,2
"android.widget.TextView.terminateSelectionActionMode()",1,2,2
"android.widget.TextView.textCanBeSelected()",1,3,3
"android.widget.TextView.touchPositionIsInSelection()",2,2,4
"android.widget.TextView.updateAfterEdit()",1,4,5
"android.widget.TextView.updateCursorControllerPositions()",1,5,5
"android.widget.TextView.updateSelectedRegion()",1,1,1
"android.widget.TextView.updateTextColors()",1,5,8
"android.widget.TextView.verifyDrawable(Drawable)",2,1,6
"android.widget.TextView.viewportToContentHorizontalOffset()",1,1,1
"android.widget.TextView.viewportToContentVerticalOffset()",1,2,2
"android.widget.TimePicker.SavedState.SavedState(Parcel)",1,1,1
"android.widget.TimePicker.SavedState.SavedState(Parcelable,int,int)",1,1,1
"android.widget.TimePicker.SavedState.getHour()",1,1,1
"android.widget.TimePicker.SavedState.getMinute()",1,1,1
"android.widget.TimePicker.SavedState.writeToParcel(Parcel,int)",1,1,1
"android.widget.TimePicker.TimePicker(Context)",1,1,1
"android.widget.TimePicker.TimePicker(Context,AttributeSet)",1,1,1
"android.widget.TimePicker.TimePicker(Context,AttributeSet,int)",1,2,8
"android.widget.TimePicker.configurePickerRanges()",1,2,2
"android.widget.TimePicker.getBaseline()",1,1,1
"android.widget.TimePicker.getCurrentHour()",1,1,1
"android.widget.TimePicker.getCurrentMinute()",1,1,1
"android.widget.TimePicker.is24HourView()",1,1,1
"android.widget.TimePicker.isEnabled()",1,1,1
"android.widget.TimePicker.onRestoreInstanceState(Parcelable)",1,1,1
"android.widget.TimePicker.onSaveInstanceState()",1,1,1
"android.widget.TimePicker.onTimeChanged()",1,2,2
"android.widget.TimePicker.setCurrentHour(Integer)",1,1,1
"android.widget.TimePicker.setCurrentMinute(Integer)",1,1,1
"android.widget.TimePicker.setEnabled(boolean)",2,1,2
"android.widget.TimePicker.setIs24HourView(Boolean)",1,2,2
"android.widget.TimePicker.setOnTimeChangedListener(OnTimeChangedListener)",1,1,1
"android.widget.TimePicker.updateHourDisplay()",1,1,5
"android.widget.TimePicker.updateMinuteDisplay()",1,1,1
"android.widget.Toast.TN.TN()",1,1,1
"android.widget.Toast.TN.handleHide()",1,5,5
"android.widget.Toast.TN.handleShow()",1,6,8
"android.widget.Toast.TN.hide()",1,2,2
"android.widget.Toast.TN.show()",1,2,2
"android.widget.Toast.Toast(Context)",1,1,1
"android.widget.Toast.cancel()",1,1,1
"android.widget.Toast.getDuration()",1,1,1
"android.widget.Toast.getGravity()",1,1,1
"android.widget.Toast.getHorizontalMargin()",1,1,1
"android.widget.Toast.getService()",2,1,2
"android.widget.Toast.getVerticalMargin()",1,1,1
"android.widget.Toast.getView()",1,1,1
"android.widget.Toast.getXOffset()",1,1,1
"android.widget.Toast.getYOffset()",1,1,1
"android.widget.Toast.makeText(Context,CharSequence,int)",1,1,1
"android.widget.Toast.makeText(Context,int,int)",1,1,1
"android.widget.Toast.setDuration(int)",1,1,1
"android.widget.Toast.setGravity(int,int,int)",1,1,1
"android.widget.Toast.setMargin(float,float)",1,1,1
"android.widget.Toast.setText(CharSequence)",3,1,3
"android.widget.Toast.setText(int)",1,1,1
"android.widget.Toast.setView(View)",1,1,1
"android.widget.Toast.show()",2,1,3
"android.widget.Toast.trySendAccessibilityEvent()",2,1,2
"android.widget.ToggleButton.ToggleButton(Context)",1,1,1
"android.widget.ToggleButton.ToggleButton(Context,AttributeSet)",1,1,1
"android.widget.ToggleButton.ToggleButton(Context,AttributeSet,int)",1,1,1
"android.widget.ToggleButton.drawableStateChanged()",1,2,3
"android.widget.ToggleButton.getTextOff()",1,1,1
"android.widget.ToggleButton.getTextOn()",1,1,1
"android.widget.ToggleButton.onFinishInflate()",1,1,1
"android.widget.ToggleButton.setBackgroundDrawable(Drawable)",1,1,1
"android.widget.ToggleButton.setChecked(boolean)",1,1,1
"android.widget.ToggleButton.setTextOff(CharSequence)",1,1,1
"android.widget.ToggleButton.setTextOn(CharSequence)",1,1,1
"android.widget.ToggleButton.syncTextState()",1,3,5
"android.widget.ToggleButton.updateReferenceToIndicatorDrawable(Drawable)",1,2,2
"android.widget.TwoLineListItem.TwoLineListItem(Context)",1,1,1
"android.widget.TwoLineListItem.TwoLineListItem(Context,AttributeSet)",1,1,1
"android.widget.TwoLineListItem.TwoLineListItem(Context,AttributeSet,int)",1,1,1
"android.widget.TwoLineListItem.getText1()",1,1,1
"android.widget.TwoLineListItem.getText2()",1,1,1
"android.widget.TwoLineListItem.onFinishInflate()",1,1,1
"android.widget.VideoView.VideoView(Context)",1,1,1
"android.widget.VideoView.VideoView(Context,AttributeSet)",1,1,1
"android.widget.VideoView.VideoView(Context,AttributeSet,int)",1,1,1
"android.widget.VideoView.attachMediaController()",1,3,4
"android.widget.VideoView.canPause()",1,1,1
"android.widget.VideoView.canSeekBackward()",1,1,1
"android.widget.VideoView.canSeekForward()",1,1,1
"android.widget.VideoView.getBufferPercentage()",2,1,2
"android.widget.VideoView.getCurrentPosition()",2,2,2
"android.widget.VideoView.getDuration()",3,2,3
"android.widget.VideoView.initVideoView()",1,1,1
"android.widget.VideoView.isInPlaybackState()",1,1,4
"android.widget.VideoView.isPlaying()",1,2,2
"android.widget.VideoView.onKeyDown(int,KeyEvent)",5,10,18
"android.widget.VideoView.onMeasure(int,int)",1,1,5
"android.widget.VideoView.onTouchEvent(MotionEvent)",1,3,3
"android.widget.VideoView.onTrackballEvent(MotionEvent)",1,3,3
"android.widget.VideoView.openVideo()",2,3,5
"android.widget.VideoView.pause()",1,3,3
"android.widget.VideoView.release(boolean)",1,2,3
"android.widget.VideoView.resolveAdjustedSize(int,int)",2,2,4
"android.widget.VideoView.resume()",1,1,1
"android.widget.VideoView.seekTo(int)",1,2,2
"android.widget.VideoView.setMediaController(MediaController)",1,2,2
"android.widget.VideoView.setOnCompletionListener(OnCompletionListener)",1,1,1
"android.widget.VideoView.setOnErrorListener(OnErrorListener)",1,1,1
"android.widget.VideoView.setOnPreparedListener(OnPreparedListener)",1,1,1
"android.widget.VideoView.setVideoPath(String)",1,1,1
"android.widget.VideoView.setVideoURI(Uri)",1,1,1
"android.widget.VideoView.setVideoURI(Uri,Map<String, String>)",1,1,1
"android.widget.VideoView.start()",1,2,2
"android.widget.VideoView.stopPlayback()",1,2,2
"android.widget.VideoView.suspend()",1,1,1
"android.widget.VideoView.toggleMediaControlsVisiblity()",1,2,2
"android.widget.ViewAnimator.ViewAnimator(Context)",1,1,1
"android.widget.ViewAnimator.ViewAnimator(Context,AttributeSet)",1,3,3
"android.widget.ViewAnimator.addView(View,int,LayoutParams)",1,2,2
"android.widget.ViewAnimator.getBaseline()",1,2,2
"android.widget.ViewAnimator.getCurrentView()",1,1,1
"android.widget.ViewAnimator.getDisplayedChild()",1,1,1
"android.widget.ViewAnimator.getInAnimation()",1,1,1
"android.widget.ViewAnimator.getOutAnimation()",1,1,1
"android.widget.ViewAnimator.initViewAnimator(Context,AttributeSet)",2,1,2
"android.widget.ViewAnimator.removeAllViews()",1,1,1
"android.widget.ViewAnimator.removeView(View)",1,2,2
"android.widget.ViewAnimator.removeViewAt(int)",1,4,4
"android.widget.ViewAnimator.removeViewInLayout(View)",1,1,1
"android.widget.ViewAnimator.removeViews(int,int)",1,3,4
"android.widget.ViewAnimator.removeViewsInLayout(int,int)",1,1,1
"android.widget.ViewAnimator.setAnimateFirstView(boolean)",1,1,1
"android.widget.ViewAnimator.setDisplayedChild(int)",1,4,4
"android.widget.ViewAnimator.setInAnimation(Animation)",1,1,1
"android.widget.ViewAnimator.setInAnimation(Context,int)",1,1,1
"android.widget.ViewAnimator.setOutAnimation(Animation)",1,1,1
"android.widget.ViewAnimator.setOutAnimation(Context,int)",1,1,1
"android.widget.ViewAnimator.showNext()",1,1,1
"android.widget.ViewAnimator.showOnly(int)",1,1,2
"android.widget.ViewAnimator.showOnly(int,boolean)",1,8,9
"android.widget.ViewAnimator.showPrevious()",1,1,1
"android.widget.ViewFlipper.ViewFlipper(Context)",1,1,1
"android.widget.ViewFlipper.ViewFlipper(Context,AttributeSet)",1,1,1
"android.widget.ViewFlipper.isAutoStart()",1,1,1
"android.widget.ViewFlipper.isFlipping()",1,1,1
"android.widget.ViewFlipper.onAttachedToWindow()",1,2,2
"android.widget.ViewFlipper.onDetachedFromWindow()",1,1,1
"android.widget.ViewFlipper.onWindowVisibilityChanged(int)",1,1,1
"android.widget.ViewFlipper.setAutoStart(boolean)",1,1,1
"android.widget.ViewFlipper.setFlipInterval(int)",1,1,1
"android.widget.ViewFlipper.startFlipping()",1,1,1
"android.widget.ViewFlipper.stopFlipping()",1,1,1
"android.widget.ViewFlipper.updateRunning()",1,1,1
"android.widget.ViewFlipper.updateRunning(boolean)",1,4,6
"android.widget.ViewSwitcher.ViewSwitcher(Context)",1,1,1
"android.widget.ViewSwitcher.ViewSwitcher(Context,AttributeSet)",1,1,1
"android.widget.ViewSwitcher.addView(View,int,LayoutParams)",2,1,2
"android.widget.ViewSwitcher.getNextView()",1,1,2
"android.widget.ViewSwitcher.obtainView()",1,1,2
"android.widget.ViewSwitcher.reset()",1,3,3
"android.widget.ViewSwitcher.setFactory(ViewFactory)",1,1,1
"android.widget.ZoomButton.ZoomButton(Context)",1,1,1
"android.widget.ZoomButton.ZoomButton(Context,AttributeSet)",1,1,1
"android.widget.ZoomButton.ZoomButton(Context,AttributeSet,int)",1,1,1
"android.widget.ZoomButton.dispatchUnhandledMove(View,int)",1,1,1
"android.widget.ZoomButton.onKeyUp(int,KeyEvent)",1,1,1
"android.widget.ZoomButton.onLongClick(View)",1,1,1
"android.widget.ZoomButton.onTouchEvent(MotionEvent)",1,2,3
"android.widget.ZoomButton.setEnabled(boolean)",1,2,2
"android.widget.ZoomButton.setZoomSpeed(long)",1,1,1
"android.widget.ZoomButtonsController.Container.Container(Context)",1,1,1
"android.widget.ZoomButtonsController.Container.dispatchKeyEvent(KeyEvent)",1,2,2
"android.widget.ZoomButtonsController.ZoomButtonsController(View)",1,1,1
"android.widget.ZoomButtonsController.createContainer()",1,3,3
"android.widget.ZoomButtonsController.dismissControlsDelayed(int)",1,2,2
"android.widget.ZoomButtonsController.findViewForTouch(int,int)",4,4,10
"android.widget.ZoomButtonsController.getContainer()",1,1,1
"android.widget.ZoomButtonsController.getOwnerViewRoot()",3,1,3
"android.widget.ZoomButtonsController.getZoomControls()",1,1,1
"android.widget.ZoomButtonsController.isAutoDismissed()",1,1,1
"android.widget.ZoomButtonsController.isInterestingKey(int)",3,2,3
"android.widget.ZoomButtonsController.isVisible()",1,1,1
"android.widget.ZoomButtonsController.onContainerKey(KeyEvent)",5,11,11
"android.widget.ZoomButtonsController.onPostConfigurationChanged()",1,1,1
"android.widget.ZoomButtonsController.onTouch(View,MotionEvent)",5,7,12
"android.widget.ZoomButtonsController.refreshPositioningVariables()",2,2,3
"android.widget.ZoomButtonsController.setAutoDismissed(boolean)",2,1,2
"android.widget.ZoomButtonsController.setFocusable(boolean)",1,2,4
"android.widget.ZoomButtonsController.setOnZoomListener(OnZoomListener)",1,1,1
"android.widget.ZoomButtonsController.setTouchTargetView(View)",1,2,2
"android.widget.ZoomButtonsController.setVisible(boolean)",4,10,11
"android.widget.ZoomButtonsController.setZoomInEnabled(boolean)",1,1,1
"android.widget.ZoomButtonsController.setZoomOutEnabled(boolean)",1,1,1
"android.widget.ZoomButtonsController.setZoomSpeed(long)",1,1,1
"android.widget.ZoomControls.ZoomControls(Context)",1,1,1
"android.widget.ZoomControls.ZoomControls(Context,AttributeSet)",1,1,1
"android.widget.ZoomControls.fade(int,float,float)",1,1,1
"android.widget.ZoomControls.hasFocus()",1,2,2
"android.widget.ZoomControls.hide()",1,1,1
"android.widget.ZoomControls.onTouchEvent(MotionEvent)",1,1,1
"android.widget.ZoomControls.setIsZoomInEnabled(boolean)",1,1,1
"android.widget.ZoomControls.setIsZoomOutEnabled(boolean)",1,1,1
"android.widget.ZoomControls.setOnZoomInClickListener(OnClickListener)",1,1,1
"android.widget.ZoomControls.setOnZoomOutClickListener(OnClickListener)",1,1,1
"android.widget.ZoomControls.setZoomSpeed(long)",1,1,1
"android.widget.ZoomControls.show()",1,1,1
"com.android.internal.app.ActionBarImpl.ActionBarImpl(Activity)",1,2,2
"com.android.internal.app.ActionBarImpl.ActionBarImpl(Dialog)",1,1,1
"com.android.internal.app.ActionBarImpl.ActionModeImpl.ActionModeImpl(Callback)",1,1,1
"com.android.internal.app.ActionBarImpl.ActionModeImpl.finish()",2,3,4
"com.android.internal.app.ActionBarImpl.ActionModeImpl.getCustomView()",1,2,2
"com.android.internal.app.ActionBarImpl.ActionModeImpl.getMenu()",1,1,1
"com.android.internal.app.ActionBarImpl.ActionModeImpl.getMenuInflater()",1,1,1
"com.android.internal.app.ActionBarImpl.ActionModeImpl.getSubtitle()",1,1,1
"com.android.internal.app.ActionBarImpl.ActionModeImpl.getTitle()",1,1,1
"com.android.internal.app.ActionBarImpl.ActionModeImpl.invalidate()",1,1,2
"com.android.internal.app.ActionBarImpl.ActionModeImpl.onCloseMenu(MenuBuilder,boolean)",1,1,1
"com.android.internal.app.ActionBarImpl.ActionModeImpl.onCloseSubMenu(SubMenuBuilder)",1,1,1
"com.android.internal.app.ActionBarImpl.ActionModeImpl.onMenuItemSelected(MenuBuilder,MenuItem)",2,2,2
"com.android.internal.app.ActionBarImpl.ActionModeImpl.onMenuModeChange(MenuBuilder)",2,1,2
"com.android.internal.app.ActionBarImpl.ActionModeImpl.onSubMenuSelected(SubMenuBuilder)",3,1,3
"com.android.internal.app.ActionBarImpl.ActionModeImpl.setCustomView(View)",1,1,1
"com.android.internal.app.ActionBarImpl.ActionModeImpl.setSubtitle(CharSequence)",1,1,1
"com.android.internal.app.ActionBarImpl.ActionModeImpl.setSubtitle(int)",1,1,1
"com.android.internal.app.ActionBarImpl.ActionModeImpl.setTitle(CharSequence)",1,1,1
"com.android.internal.app.ActionBarImpl.ActionModeImpl.setTitle(int)",1,1,1
"com.android.internal.app.ActionBarImpl.SwitchSelectedTabViewFragment.SwitchSelectedTabViewFragment(int)",1,1,1
"com.android.internal.app.ActionBarImpl.SwitchSelectedTabViewFragment.onDetach()",1,3,3
"com.android.internal.app.ActionBarImpl.TabImpl.getCallback()",1,1,1
"com.android.internal.app.ActionBarImpl.TabImpl.getCustomView()",1,1,1
"com.android.internal.app.ActionBarImpl.TabImpl.getIcon()",1,1,1
"com.android.internal.app.ActionBarImpl.TabImpl.getPosition()",1,1,1
"com.android.internal.app.ActionBarImpl.TabImpl.getTag()",1,1,1
"com.android.internal.app.ActionBarImpl.TabImpl.getText()",1,1,1
"com.android.internal.app.ActionBarImpl.TabImpl.select()",1,1,1
"com.android.internal.app.ActionBarImpl.TabImpl.setCustomView(View)",1,1,1
"com.android.internal.app.ActionBarImpl.TabImpl.setCustomView(int)",1,1,1
"com.android.internal.app.ActionBarImpl.TabImpl.setIcon(Drawable)",1,1,1
"com.android.internal.app.ActionBarImpl.TabImpl.setIcon(int)",1,1,1
"com.android.internal.app.ActionBarImpl.TabImpl.setPosition(int)",1,1,1
"com.android.internal.app.ActionBarImpl.TabImpl.setTabListener(TabListener)",1,1,1
"com.android.internal.app.ActionBarImpl.TabImpl.setTag(Object)",1,1,1
"com.android.internal.app.ActionBarImpl.TabImpl.setText(CharSequence)",1,1,1
"com.android.internal.app.ActionBarImpl.TabImpl.setText(int)",1,1,1
"com.android.internal.app.ActionBarImpl.addOnMenuVisibilityListener(OnMenuVisibilityListener)",1,1,1
"com.android.internal.app.ActionBarImpl.addTab(Tab)",1,1,1
"com.android.internal.app.ActionBarImpl.addTab(Tab,boolean)",1,2,2
"com.android.internal.app.ActionBarImpl.addTab(Tab,int)",1,1,1
"com.android.internal.app.ActionBarImpl.addTab(Tab,int,boolean)",1,2,2
"com.android.internal.app.ActionBarImpl.animateTo(int)",3,3,4
"com.android.internal.app.ActionBarImpl.cleanupTabs()",1,2,2
"com.android.internal.app.ActionBarImpl.configureTab(Tab,int)",2,2,3
"com.android.internal.app.ActionBarImpl.dispatchMenuVisibilityChanged(boolean)",2,2,3
"com.android.internal.app.ActionBarImpl.getCustomNavigationView()",1,1,1
"com.android.internal.app.ActionBarImpl.getCustomView()",1,1,1
"com.android.internal.app.ActionBarImpl.getDisplayOptions()",1,1,1
"com.android.internal.app.ActionBarImpl.getHeight()",1,1,1
"com.android.internal.app.ActionBarImpl.getNavigationItemCount()",3,5,5
"com.android.internal.app.ActionBarImpl.getNavigationMode()",1,1,1
"com.android.internal.app.ActionBarImpl.getSelectedNavigationIndex()",4,5,5
"com.android.internal.app.ActionBarImpl.getSelectedNavigationItem()",1,1,1
"com.android.internal.app.ActionBarImpl.getSelectedTab()",1,1,1
"com.android.internal.app.ActionBarImpl.getSubtitle()",1,1,1
"com.android.internal.app.ActionBarImpl.getTabAt(int)",1,1,1
"com.android.internal.app.ActionBarImpl.getTabCount()",1,1,1
"com.android.internal.app.ActionBarImpl.getTitle()",1,1,1
"com.android.internal.app.ActionBarImpl.hide()",2,3,4
"com.android.internal.app.ActionBarImpl.hideAllExcept(int)",1,2,3
"com.android.internal.app.ActionBarImpl.init(View)",2,2,5
"com.android.internal.app.ActionBarImpl.isShowing()",1,1,1
"com.android.internal.app.ActionBarImpl.newTab()",1,1,1
"com.android.internal.app.ActionBarImpl.removeAllTabs()",1,1,1
"com.android.internal.app.ActionBarImpl.removeOnMenuVisibilityListener(OnMenuVisibilityListener)",1,1,1
"com.android.internal.app.ActionBarImpl.removeTab(Tab)",1,1,1
"com.android.internal.app.ActionBarImpl.removeTabAt(int)",1,5,5
"com.android.internal.app.ActionBarImpl.selectTab(Tab)",2,9,9
"com.android.internal.app.ActionBarImpl.setBackgroundDrawable(Drawable)",1,1,1
"com.android.internal.app.ActionBarImpl.setCustomNavigationMode(View)",1,1,1
"com.android.internal.app.ActionBarImpl.setCustomView(View)",1,1,1
"com.android.internal.app.ActionBarImpl.setCustomView(View,LayoutParams)",1,1,1
"com.android.internal.app.ActionBarImpl.setDisplayOptions(int)",1,1,1
"com.android.internal.app.ActionBarImpl.setDisplayOptions(int,int)",1,1,1
"com.android.internal.app.ActionBarImpl.setDropdownNavigationMode(SpinnerAdapter,OnNavigationListener)",1,1,1
"com.android.internal.app.ActionBarImpl.setDropdownNavigationMode(SpinnerAdapter,OnNavigationListener,int)",1,2,2
"com.android.internal.app.ActionBarImpl.setListNavigationCallbacks(SpinnerAdapter,OnNavigationListener)",1,1,1
"com.android.internal.app.ActionBarImpl.setNavigationMode(int)",3,4,4
"com.android.internal.app.ActionBarImpl.setSelectedNavigationItem(int)",2,2,4
"com.android.internal.app.ActionBarImpl.setStandardNavigationMode()",1,1,1
"com.android.internal.app.ActionBarImpl.setSubtitle(CharSequence)",1,1,1
"com.android.internal.app.ActionBarImpl.setSubtitle(int)",1,1,1
"com.android.internal.app.ActionBarImpl.setTabNavigationMode()",2,1,2
"com.android.internal.app.ActionBarImpl.setTitle(CharSequence)",1,1,1
"com.android.internal.app.ActionBarImpl.setTitle(int)",1,1,1
"com.android.internal.app.ActionBarImpl.show()",2,3,4
"com.android.internal.app.ActionBarImpl.startActionMode(Callback)",2,4,4
"com.android.internal.app.AlertActivity.cancel()",1,1,1
"com.android.internal.app.AlertActivity.dismiss()",1,2,2
"com.android.internal.app.AlertActivity.onCreate(Bundle)",1,1,1
"com.android.internal.app.AlertActivity.onKeyDown(int,KeyEvent)",2,1,2
"com.android.internal.app.AlertActivity.onKeyUp(int,KeyEvent)",2,1,2
"com.android.internal.app.AlertActivity.setupAlert()",1,1,1
"com.android.internal.app.AlertController.AlertController(Context,DialogInterface,Window)",1,1,1
"com.android.internal.app.AlertController.AlertParams.AlertParams(Context)",1,1,1
"com.android.internal.app.AlertController.AlertParams.apply(AlertController)",1,13,15
"com.android.internal.app.AlertController.AlertParams.createListView(AlertController)",1,13,16
"com.android.internal.app.AlertController.ButtonHandler.ButtonHandler(DialogInterface)",1,1,1
"com.android.internal.app.AlertController.ButtonHandler.handleMessage(Message)",2,2,3
"com.android.internal.app.AlertController.RecycleListView.RecycleListView(Context)",1,1,1
"com.android.internal.app.AlertController.RecycleListView.RecycleListView(Context,AttributeSet)",1,1,1
"com.android.internal.app.AlertController.RecycleListView.RecycleListView(Context,AttributeSet,int)",1,1,1
"com.android.internal.app.AlertController.RecycleListView.recycleOnMeasure()",1,1,1
"com.android.internal.app.AlertController.canTextInput(View)",5,2,5
"com.android.internal.app.AlertController.centerButton(Button)",1,1,1
"com.android.internal.app.AlertController.getButton(int)",5,2,5
"com.android.internal.app.AlertController.getListView()",1,1,1
"com.android.internal.app.AlertController.installContent()",1,3,3
"com.android.internal.app.AlertController.onKeyDown(int,KeyEvent)",1,2,2
"com.android.internal.app.AlertController.onKeyUp(int,KeyEvent)",1,2,2
"com.android.internal.app.AlertController.setBackground(LinearLayout,LinearLayout,View,boolean,TypedArray,boolean,View)",3,8,19
"com.android.internal.app.AlertController.setButton(int,CharSequence,OnClickListener,Message)",2,3,7
"com.android.internal.app.AlertController.setCustomTitle(View)",1,1,1
"com.android.internal.app.AlertController.setIcon(Drawable)",1,2,3
"com.android.internal.app.AlertController.setIcon(int)",1,4,4
"com.android.internal.app.AlertController.setInverseBackgroundForced(boolean)",1,1,1
"com.android.internal.app.AlertController.setMessage(CharSequence)",1,2,2
"com.android.internal.app.AlertController.setTitle(CharSequence)",1,2,2
"com.android.internal.app.AlertController.setView(View)",1,1,1
"com.android.internal.app.AlertController.setView(View,int,int,int,int)",1,1,1
"com.android.internal.app.AlertController.setupButtons()",1,8,8
"com.android.internal.app.AlertController.setupContent(LinearLayout)",2,3,4
"com.android.internal.app.AlertController.setupTitle(LinearLayout)",1,6,6
"com.android.internal.app.AlertController.setupView()",1,6,8
"com.android.internal.app.AlertController.shouldCenterSingleButton(Context)",1,1,1
"com.android.internal.app.ChooserActivity.onCreate(Bundle)",5,6,6
"com.android.internal.app.DisableCarModeActivity.onCreate(Bundle)",1,2,2
"com.android.internal.app.ExternalMediaFormatActivity.onClick(DialogInterface,int)",1,2,2
"com.android.internal.app.ExternalMediaFormatActivity.onCreate(Bundle)",1,1,1
"com.android.internal.app.ExternalMediaFormatActivity.onPause()",1,1,1
"com.android.internal.app.ExternalMediaFormatActivity.onResume()",1,1,1
"com.android.internal.app.HeavyWeightSwitcherActivity.onCreate(Bundle)",1,1,1
"com.android.internal.app.HeavyWeightSwitcherActivity.setDrawable(int,Drawable)",1,2,2
"com.android.internal.app.HeavyWeightSwitcherActivity.setIconAndText(int,int,int,String,int,int)",1,2,3
"com.android.internal.app.HeavyWeightSwitcherActivity.setText(int,CharSequence)",1,1,1
"com.android.internal.app.LocalePicker.LocaleInfo.LocaleInfo(String,Locale)",1,1,1
"com.android.internal.app.LocalePicker.LocaleInfo.compareTo(LocaleInfo)",1,1,1
"com.android.internal.app.LocalePicker.LocaleInfo.getLabel()",1,1,1
"com.android.internal.app.LocalePicker.LocaleInfo.getLocale()",1,1,1
"com.android.internal.app.LocalePicker.LocaleInfo.toString()",1,1,1
"com.android.internal.app.LocalePicker.constructAdapter(Context)",1,1,1
"com.android.internal.app.LocalePicker.constructAdapter(Context,int,int)",1,10,11
"com.android.internal.app.LocalePicker.getDisplayName(Locale,String[],String[])",3,2,3
"com.android.internal.app.LocalePicker.onActivityCreated(Bundle)",1,1,1
"com.android.internal.app.LocalePicker.onListItemClick(ListView,View,int,long)",1,2,2
"com.android.internal.app.LocalePicker.onResume()",1,1,1
"com.android.internal.app.LocalePicker.setLocaleSelectionListener(LocaleSelectionListener)",1,1,1
"com.android.internal.app.LocalePicker.toTitleCase(String)",2,1,2
"com.android.internal.app.LocalePicker.updateLocale(Locale)",1,1,2
"com.android.internal.app.NetInitiatedActivity.handleNIVerify(Intent)",1,2,2
"com.android.internal.app.NetInitiatedActivity.onClick(DialogInterface,int)",1,3,3
"com.android.internal.app.NetInitiatedActivity.onCreate(Bundle)",1,2,2
"com.android.internal.app.NetInitiatedActivity.onPause()",1,2,2
"com.android.internal.app.NetInitiatedActivity.onResume()",1,2,2
"com.android.internal.app.NetInitiatedActivity.sendUserResponse(int)",1,2,2
"com.android.internal.app.NetInitiatedActivity.showNIError()",1,1,1
"com.android.internal.app.PlatLogoActivity.dispatchTouchEvent(MotionEvent)",1,2,2
"com.android.internal.app.PlatLogoActivity.onCreate(Bundle)",1,1,1
"com.android.internal.app.ResolverActivity.DisplayResolveInfo.DisplayResolveInfo(ResolveInfo,CharSequence,CharSequence,Intent)",1,1,1
"com.android.internal.app.ResolverActivity.ResolveListAdapter.ResolveListAdapter(Context,Intent,Intent[])",8,13,19
"com.android.internal.app.ResolverActivity.ResolveListAdapter.bindView(View,DisplayResolveInfo)",1,3,3
"com.android.internal.app.ResolverActivity.ResolveListAdapter.getCount()",1,2,2
"com.android.internal.app.ResolverActivity.ResolveListAdapter.getItem(int)",1,1,1
"com.android.internal.app.ResolverActivity.ResolveListAdapter.getItemId(int)",1,1,1
"com.android.internal.app.ResolverActivity.ResolveListAdapter.getView(int,View,ViewGroup)",1,2,2
"com.android.internal.app.ResolverActivity.ResolveListAdapter.intentForPosition(int)",2,1,3
"com.android.internal.app.ResolverActivity.ResolveListAdapter.processGroup(List<ResolveInfo>,int,int,ResolveInfo,CharSequence)",5,8,9
"com.android.internal.app.ResolverActivity.ResolveListAdapter.resolveInfoForPosition(int)",2,1,2
"com.android.internal.app.ResolverActivity.onCheckedChanged(CompoundButton,boolean)",2,2,3
"com.android.internal.app.ResolverActivity.onClick(DialogInterface,int)",10,25,26
"com.android.internal.app.ResolverActivity.onCreate(Bundle)",1,1,1
"com.android.internal.app.ResolverActivity.onCreate(Bundle,Intent,CharSequence,Intent[],boolean)",3,4,4
"com.android.internal.app.RingtonePickerActivity.addDefaultRingtoneItem(ListView)",1,1,1
"com.android.internal.app.RingtonePickerActivity.addSilentItem(ListView)",1,1,1
"com.android.internal.app.RingtonePickerActivity.addStaticItem(ListView,int)",1,1,1
"com.android.internal.app.RingtonePickerActivity.getListPosition(int)",2,1,2
"com.android.internal.app.RingtonePickerActivity.getRingtoneManagerPosition(int)",1,1,1
"com.android.internal.app.RingtonePickerActivity.onClick(DialogInterface,int)",1,4,4
"com.android.internal.app.RingtonePickerActivity.onCreate(Bundle)",1,3,4
"com.android.internal.app.RingtonePickerActivity.onItemSelected(AdapterView,View,int,long)",1,1,1
"com.android.internal.app.RingtonePickerActivity.onNothingSelected(AdapterView)",1,1,1
"com.android.internal.app.RingtonePickerActivity.onPause()",1,1,1
"com.android.internal.app.RingtonePickerActivity.onPrepareListView(ListView)",1,4,6
"com.android.internal.app.RingtonePickerActivity.onStop()",1,1,1
"com.android.internal.app.RingtonePickerActivity.playRingtone(int,int)",1,1,1
"com.android.internal.app.RingtonePickerActivity.run()",2,7,7
"com.android.internal.app.RingtonePickerActivity.stopAnyPlayingRingtone()",1,4,4
"com.android.internal.app.ShutdownThread.CloseDialogReceiver.CloseDialogReceiver(Context)",1,1,1
"com.android.internal.app.ShutdownThread.CloseDialogReceiver.onDismiss(DialogInterface)",1,1,1
"com.android.internal.app.ShutdownThread.CloseDialogReceiver.onReceive(Context,Intent)",1,1,1
"com.android.internal.app.ShutdownThread.ShutdownThread()",1,1,1
"com.android.internal.app.ShutdownThread.actionDone()",1,1,1
"com.android.internal.app.ShutdownThread.beginShutdownSequence(Context)",2,6,6
"com.android.internal.app.ShutdownThread.reboot(Context,String,boolean)",1,1,1
"com.android.internal.app.ShutdownThread.rebootOrShutdown(boolean,String)",1,5,6
"com.android.internal.app.ShutdownThread.run()",7,20,26
"com.android.internal.app.ShutdownThread.shutdown(Context,boolean)",2,4,5
"com.android.internal.backup.LocalTransport.LocalTransport(Context)",1,1,1
"com.android.internal.backup.LocalTransport.clearBackupData(PackageInfo)",1,3,3
"com.android.internal.backup.LocalTransport.configurationIntent()",1,1,1
"com.android.internal.backup.LocalTransport.currentDestinationString()",1,1,1
"com.android.internal.backup.LocalTransport.deleteContents(File)",1,4,4
"com.android.internal.backup.LocalTransport.finishBackup()",1,2,2
"com.android.internal.backup.LocalTransport.finishRestore()",1,2,2
"com.android.internal.backup.LocalTransport.getAvailableRestoreSets()",1,1,1
"com.android.internal.backup.LocalTransport.getCurrentRestoreSet()",1,1,1
"com.android.internal.backup.LocalTransport.getRestoreData(ParcelFileDescriptor)",4,6,8
"com.android.internal.backup.LocalTransport.initializeDevice()",1,2,2
"com.android.internal.backup.LocalTransport.nextRestorePackage()",4,5,6
"com.android.internal.backup.LocalTransport.performBackup(PackageInfo,ParcelFileDescriptor)",3,9,10
"com.android.internal.backup.LocalTransport.requestBackupTime()",1,1,1
"com.android.internal.backup.LocalTransport.startRestore(long,PackageInfo[])",1,2,2
"com.android.internal.backup.LocalTransport.transportDirName()",1,1,1
"com.android.internal.content.NativeLibraryHelper.copyNativeBinariesLI(File,File)",1,4,4
"com.android.internal.content.NativeLibraryHelper.copyNativeBinaryLI(ZipFile,ZipEntry,File,File)",2,5,5
"com.android.internal.content.NativeLibraryHelper.listPackageGdbServerLI(ZipFile,String,List<Pair<ZipEntry, String>>)",4,3,5
"com.android.internal.content.NativeLibraryHelper.listPackageNativeBinariesLI(ZipFile,List<Pair<ZipEntry, String>>)",3,5,6
"com.android.internal.content.NativeLibraryHelper.listPackageSharedLibsForAbiLI(ZipFile,String,List<Pair<ZipEntry, String>>)",9,8,15
"com.android.internal.content.NativeLibraryHelper.removeNativeBinariesFromDirLI(File)",1,7,7
"com.android.internal.content.NativeLibraryHelper.removeNativeBinariesLI(String)",1,1,1
"com.android.internal.content.PackageHelper.createSdDir(long,String,String,int)",2,5,6
"com.android.internal.content.PackageHelper.destroySdDir(String)",2,4,4
"com.android.internal.content.PackageHelper.finalizeSdDir(String)",2,3,3
"com.android.internal.content.PackageHelper.getMountService()",2,2,2
"com.android.internal.content.PackageHelper.getSdDir(String)",1,2,2
"com.android.internal.content.PackageHelper.getSecureContainerList()",1,2,2
"com.android.internal.content.PackageHelper.isContainerMounted(String)",1,2,2
"com.android.internal.content.PackageHelper.mountSdDir(String,String,int)",2,3,3
"com.android.internal.content.PackageHelper.renameSdDir(String,String)",2,3,3
"com.android.internal.content.PackageHelper.unMountSdDir(String)",2,3,3
"com.android.internal.content.PackageMonitor.anyPackagesAppearing()",1,1,1
"com.android.internal.content.PackageMonitor.anyPackagesDisappearing()",1,1,1
"com.android.internal.content.PackageMonitor.didSomePackagesChange()",1,1,1
"com.android.internal.content.PackageMonitor.getPackageName(Intent)",1,2,2
"com.android.internal.content.PackageMonitor.isPackageAppearing(String)",4,3,4
"com.android.internal.content.PackageMonitor.isPackageDisappearing(String)",4,3,4
"com.android.internal.content.PackageMonitor.isPackageModified(String)",4,3,4
"com.android.internal.content.PackageMonitor.isPackageUpdating(String)",1,1,1
"com.android.internal.content.PackageMonitor.onBeginPackageChanges()",1,1,1
"com.android.internal.content.PackageMonitor.onFinishPackageChanges()",1,1,1
"com.android.internal.content.PackageMonitor.onHandleForceStop(Intent,String[],int,boolean)",1,1,1
"com.android.internal.content.PackageMonitor.onPackageAdded(String,int)",1,1,1
"com.android.internal.content.PackageMonitor.onPackageAppeared(String,int)",1,1,1
"com.android.internal.content.PackageMonitor.onPackageChanged(String,int,String[])",1,1,1
"com.android.internal.content.PackageMonitor.onPackageDisappeared(String,int)",1,1,1
"com.android.internal.content.PackageMonitor.onPackageModified(String)",1,1,1
"com.android.internal.content.PackageMonitor.onPackageRemoved(String,int)",1,1,1
"com.android.internal.content.PackageMonitor.onPackageUpdateFinished(String,int)",1,1,1
"com.android.internal.content.PackageMonitor.onPackageUpdateStarted(String,int)",1,1,1
"com.android.internal.content.PackageMonitor.onPackagesAvailable(String[])",1,1,1
"com.android.internal.content.PackageMonitor.onPackagesUnavailable(String[])",1,1,1
"com.android.internal.content.PackageMonitor.onReceive(Context,Intent)",1,21,21
"com.android.internal.content.PackageMonitor.onSomePackagesChanged()",1,1,1
"com.android.internal.content.PackageMonitor.onUidRemoved(int)",1,1,1
"com.android.internal.content.PackageMonitor.register(Context,boolean)",2,2,3
"com.android.internal.content.PackageMonitor.unregister()",2,1,2
"com.android.internal.content.SelectionBuilder.append(String,Object...)",3,4,7
"com.android.internal.content.SelectionBuilder.delete(SQLiteDatabase,String)",1,1,1
"com.android.internal.content.SelectionBuilder.getSelection()",1,1,1
"com.android.internal.content.SelectionBuilder.getSelectionArgs()",1,1,1
"com.android.internal.content.SelectionBuilder.query(SQLiteDatabase,String,String[],String)",1,1,1
"com.android.internal.content.SelectionBuilder.query(SQLiteDatabase,String,String[],String,String,String,String)",1,1,1
"com.android.internal.content.SelectionBuilder.reset()",1,1,1
"com.android.internal.content.SelectionBuilder.update(SQLiteDatabase,String,ContentValues)",1,1,1
"com.android.internal.database.SortCursor.SortCursor(Cursor[],String)",5,5,9
"com.android.internal.database.SortCursor.close()",3,2,3
"com.android.internal.database.SortCursor.deactivate()",3,2,3
"com.android.internal.database.SortCursor.getBlob(int)",1,1,1
"com.android.internal.database.SortCursor.getColumnNames()",4,4,4
"com.android.internal.database.SortCursor.getCount()",1,3,3
"com.android.internal.database.SortCursor.getDouble(int)",1,1,1
"com.android.internal.database.SortCursor.getFloat(int)",1,1,1
"com.android.internal.database.SortCursor.getInt(int)",1,1,1
"com.android.internal.database.SortCursor.getLong(int)",1,1,1
"com.android.internal.database.SortCursor.getShort(int)",1,1,1
"com.android.internal.database.SortCursor.getString(int)",1,1,1
"com.android.internal.database.SortCursor.getType(int)",1,1,1
"com.android.internal.database.SortCursor.isNull(int)",1,1,1
"com.android.internal.database.SortCursor.onMove(int,int)",14,14,22
"com.android.internal.database.SortCursor.registerDataSetObserver(DataSetObserver)",1,3,3
"com.android.internal.database.SortCursor.requery()",4,2,4
"com.android.internal.database.SortCursor.unregisterDataSetObserver(DataSetObserver)",1,3,3
"com.android.internal.http.HttpDateTime.TimeOfDay.TimeOfDay(int,int,int)",1,1,1
"com.android.internal.http.HttpDateTime.getDate(String)",2,2,2
"com.android.internal.http.HttpDateTime.getMonth(String)",14,2,14
"com.android.internal.http.HttpDateTime.getTime(String)",1,2,2
"com.android.internal.http.HttpDateTime.getYear(String)",5,4,5
"com.android.internal.http.HttpDateTime.parse(String)",3,3,4
"com.android.internal.http.multipart.ByteArrayPartSource.ByteArrayPartSource(String,byte[])",1,1,1
"com.android.internal.http.multipart.ByteArrayPartSource.createInputStream()",1,1,1
"com.android.internal.http.multipart.ByteArrayPartSource.getFileName()",1,1,1
"com.android.internal.http.multipart.ByteArrayPartSource.getLength()",1,1,1
"com.android.internal.http.multipart.FilePart.FilePart(String,File)",1,1,1
"com.android.internal.http.multipart.FilePart.FilePart(String,File,String,String)",1,1,1
"com.android.internal.http.multipart.FilePart.FilePart(String,PartSource)",1,1,1
"com.android.internal.http.multipart.FilePart.FilePart(String,PartSource,String,String)",2,1,4
"com.android.internal.http.multipart.FilePart.FilePart(String,String,File)",1,1,1
"com.android.internal.http.multipart.FilePart.FilePart(String,String,File,String,String)",1,1,1
"com.android.internal.http.multipart.FilePart.getSource()",1,1,1
"com.android.internal.http.multipart.FilePart.lengthOfData()",1,1,1
"com.android.internal.http.multipart.FilePart.sendData(OutputStream)",2,3,3
"com.android.internal.http.multipart.FilePart.sendDispositionHeader(OutputStream)",1,2,2
"com.android.internal.http.multipart.FilePartSource.FilePartSource(File)",4,2,4
"com.android.internal.http.multipart.FilePartSource.FilePartSource(String,File)",1,1,2
"com.android.internal.http.multipart.FilePartSource.createInputStream()",2,1,2
"com.android.internal.http.multipart.FilePartSource.getFileName()",1,1,2
"com.android.internal.http.multipart.FilePartSource.getLength()",2,2,2
"com.android.internal.http.multipart.MultipartEntity.MultipartEntity(Part[])",2,1,2
"com.android.internal.http.multipart.MultipartEntity.MultipartEntity(Part[],HttpParams)",3,1,3
"com.android.internal.http.multipart.MultipartEntity.generateMultipartBoundary()",1,2,2
"com.android.internal.http.multipart.MultipartEntity.getContent()",2,2,3
"com.android.internal.http.multipart.MultipartEntity.getContentLength()",1,2,2
"com.android.internal.http.multipart.MultipartEntity.getContentType()",1,1,1
"com.android.internal.http.multipart.MultipartEntity.getMultipartBoundary()",1,4,4
"com.android.internal.http.multipart.MultipartEntity.isRepeatable()",3,2,3
"com.android.internal.http.multipart.MultipartEntity.isStreaming()",1,1,1
"com.android.internal.http.multipart.MultipartEntity.writeTo(OutputStream)",1,1,1
"com.android.internal.http.multipart.Part.getBoundary()",1,1,1
"com.android.internal.http.multipart.Part.getLengthOfParts(Part[])",1,1,1
"com.android.internal.http.multipart.Part.getLengthOfParts(Part[],byte[])",4,2,4
"com.android.internal.http.multipart.Part.getPartBoundary()",2,1,2
"com.android.internal.http.multipart.Part.isRepeatable()",1,1,1
"com.android.internal.http.multipart.Part.length()",2,1,2
"com.android.internal.http.multipart.Part.send(OutputStream)",1,1,1
"com.android.internal.http.multipart.Part.sendContentTypeHeader(OutputStream)",1,3,3
"com.android.internal.http.multipart.Part.sendDispositionHeader(OutputStream)",1,1,1
"com.android.internal.http.multipart.Part.sendEnd(OutputStream)",1,1,1
"com.android.internal.http.multipart.Part.sendEndOfHeader(OutputStream)",1,1,1
"com.android.internal.http.multipart.Part.sendParts(OutputStream,Part[])",1,1,1
"com.android.internal.http.multipart.Part.sendParts(OutputStream,Part[],byte[])",3,2,5
"com.android.internal.http.multipart.Part.sendStart(OutputStream)",1,1,1
"com.android.internal.http.multipart.Part.sendTransferEncodingHeader(OutputStream)",1,2,2
"com.android.internal.http.multipart.Part.setPartBoundary(byte[])",1,1,1
"com.android.internal.http.multipart.Part.toString()",1,1,1
"com.android.internal.http.multipart.PartBase.PartBase(String,String,String,String)",2,1,2
"com.android.internal.http.multipart.PartBase.getCharSet()",1,1,1
"com.android.internal.http.multipart.PartBase.getContentType()",1,1,1
"com.android.internal.http.multipart.PartBase.getName()",1,1,1
"com.android.internal.http.multipart.PartBase.getTransferEncoding()",1,1,1
"com.android.internal.http.multipart.PartBase.setCharSet(String)",1,1,1
"com.android.internal.http.multipart.PartBase.setContentType(String)",1,1,1
"com.android.internal.http.multipart.PartBase.setName(String)",2,1,2
"com.android.internal.http.multipart.PartBase.setTransferEncoding(String)",1,1,1
"com.android.internal.http.multipart.StringPart.StringPart(String,String)",1,1,1
"com.android.internal.http.multipart.StringPart.StringPart(String,String,String)",3,1,4
"com.android.internal.http.multipart.StringPart.getContent()",1,2,2
"com.android.internal.http.multipart.StringPart.lengthOfData()",1,1,1
"com.android.internal.http.multipart.StringPart.sendData(OutputStream)",1,1,1
"com.android.internal.http.multipart.StringPart.setCharSet(String)",1,1,1
"com.android.internal.logging.AndroidConfig.AndroidConfig()",1,2,2
"com.android.internal.logging.AndroidHandler.AndroidHandler()",1,1,1
"com.android.internal.logging.AndroidHandler.close()",1,1,1
"com.android.internal.logging.AndroidHandler.flush()",1,1,1
"com.android.internal.logging.AndroidHandler.getAndroidLevel(Level)",4,1,4
"com.android.internal.logging.AndroidHandler.publish(LogRecord)",2,2,3
"com.android.internal.logging.AndroidHandler.publish(Logger,String,Level,String)",2,2,3
"com.android.internal.net.DNParser.DNParser(X500Principal)",1,1,1
"com.android.internal.net.DNParser.escapedAV()",6,3,13
"com.android.internal.net.DNParser.find(String)",10,4,15
"com.android.internal.net.DNParser.getByte(int)",8,1,14
"com.android.internal.net.DNParser.getEscaped()",4,2,4
"com.android.internal.net.DNParser.getUTF8()",6,4,10
"com.android.internal.net.DNParser.hexAV()",6,2,15
"com.android.internal.net.DNParser.nextAT()",5,1,24
"com.android.internal.net.DNParser.quotedAV()",4,4,7
"com.android.internal.net.DomainNameValidator.domainTokenMatch(String,String)",4,5,6
"com.android.internal.net.DomainNameValidator.isIpAddress(String)",1,6,7
"com.android.internal.net.DomainNameValidator.match(X509Certificate,String)",3,4,5
"com.android.internal.net.DomainNameValidator.matchDns(String,String)",6,11,13
"com.android.internal.net.DomainNameValidator.matchDns(X509Certificate,String)",10,12,14
"com.android.internal.net.DomainNameValidator.matchIpAddress(X509Certificate,String)",8,10,12
"com.android.internal.nfc.LlcpConnectionlessSocket.LlcpConnectionlessSocket(ILlcpConnectionlessSocket,int)",1,1,1
"com.android.internal.nfc.LlcpConnectionlessSocket.close()",1,2,2
"com.android.internal.nfc.LlcpConnectionlessSocket.getSap()",1,2,2
"com.android.internal.nfc.LlcpConnectionlessSocket.receiveFrom()",2,2,3
"com.android.internal.nfc.LlcpConnectionlessSocket.sendTo(LlcpPacket)",2,2,3
"com.android.internal.nfc.LlcpException.LlcpException(String)",1,1,1
"com.android.internal.nfc.LlcpServiceSocket.LlcpServiceSocket(ILlcpServiceSocket,ILlcpSocket,int)",1,1,1
"com.android.internal.nfc.LlcpServiceSocket.accept()",3,4,4
"com.android.internal.nfc.LlcpServiceSocket.close()",1,2,2
"com.android.internal.nfc.LlcpServiceSocket.convertErrorToLlcpException(int)",1,1,1
"com.android.internal.nfc.LlcpServiceSocket.convertErrorToLlcpException(int,String)",4,2,5
"com.android.internal.nfc.LlcpSocket.LlcpSocket(ILlcpSocket,int)",1,1,1
"com.android.internal.nfc.LlcpSocket.close()",2,2,3
"com.android.internal.nfc.LlcpSocket.connect(String)",3,4,4
"com.android.internal.nfc.LlcpSocket.connect(int)",3,4,4
"com.android.internal.nfc.LlcpSocket.convertErrorToLlcpException(int)",1,1,1
"com.android.internal.nfc.LlcpSocket.convertErrorToLlcpException(int,String)",5,2,6
"com.android.internal.nfc.LlcpSocket.getLocalSap()",1,2,2
"com.android.internal.nfc.LlcpSocket.getLocalSocketMiu()",1,2,2
"com.android.internal.nfc.LlcpSocket.getLocalSocketRw()",1,2,2
"com.android.internal.nfc.LlcpSocket.getRemoteSocketMiu()",2,3,3
"com.android.internal.nfc.LlcpSocket.getRemoteSocketRw()",2,3,3
"com.android.internal.nfc.LlcpSocket.receive(byte[])",2,2,3
"com.android.internal.nfc.LlcpSocket.send(byte[])",2,2,3
"com.android.internal.nfc.NfcException.NfcException(String)",1,1,1
"com.android.internal.nfc.P2pDevice.P2pDevice()",1,1,1
"com.android.internal.nfc.P2pDevice.getGeneralBytes()",1,1,1
"com.android.internal.nfc.P2pDevice.getMode()",1,1,1
"com.android.internal.nfc.P2pInitiator.P2pInitiator(IP2pInitiator,int)",1,1,1
"com.android.internal.nfc.P2pInitiator.getGeneralBytes()",1,2,2
"com.android.internal.nfc.P2pInitiator.getMode()",1,1,1
"com.android.internal.nfc.P2pInitiator.receive()",2,2,3
"com.android.internal.nfc.P2pInitiator.send(byte[])",2,2,3
"com.android.internal.nfc.P2pTarget.P2pTarget(IP2pTarget,int)",1,1,1
"com.android.internal.nfc.P2pTarget.checkState()",2,1,2
"com.android.internal.nfc.P2pTarget.connect()",4,2,5
"com.android.internal.nfc.P2pTarget.disconnect()",1,2,2
"com.android.internal.nfc.P2pTarget.getGeneralBytes()",2,3,3
"com.android.internal.nfc.P2pTarget.getMode()",1,1,1
"com.android.internal.nfc.P2pTarget.transceive(byte[])",2,2,3
"com.android.internal.os.AndroidPrintStream.AndroidPrintStream(int,String)",2,1,2
"com.android.internal.os.AndroidPrintStream.log(String)",1,1,1
"com.android.internal.os.AtomicFile.AtomicFile(File)",1,1,1
"com.android.internal.os.AtomicFile.failWrite(FileOutputStream)",1,3,3
"com.android.internal.os.AtomicFile.finishWrite(FileOutputStream)",1,3,3
"com.android.internal.os.AtomicFile.getBaseFile()",1,1,1
"com.android.internal.os.AtomicFile.openAppend()",1,1,2
"com.android.internal.os.AtomicFile.openRead()",1,2,2
"com.android.internal.os.AtomicFile.readFully()",3,3,4
"com.android.internal.os.AtomicFile.startWrite()",2,5,7
"com.android.internal.os.AtomicFile.truncate()",1,1,3
"com.android.internal.os.BatteryStatsImpl.BatteryStatsImpl()",1,1,1
"com.android.internal.os.BatteryStatsImpl.BatteryStatsImpl(Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.BatteryStatsImpl(String)",1,1,4
"com.android.internal.os.BatteryStatsImpl.Counter.Counter(ArrayList<Unpluggable>)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Counter.Counter(ArrayList<Unpluggable>,Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Counter.detach()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Counter.getCountLocked(int)",1,2,4
"com.android.internal.os.BatteryStatsImpl.Counter.logState(Printer,String)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Counter.plug(long,long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Counter.readSummaryFromParcelLocked(Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Counter.reset(boolean)",1,2,2
"com.android.internal.os.BatteryStatsImpl.Counter.stepAtomic()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Counter.unplug(long,long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Counter.writeCounterToParcel(Parcel,Counter)",2,2,2
"com.android.internal.os.BatteryStatsImpl.Counter.writeSummaryFromParcelLocked(Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Counter.writeToParcel(Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.KernelWakelockStats.KernelWakelockStats(int,long,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.MyHandler.handleMessage(Message)",2,4,5
"com.android.internal.os.BatteryStatsImpl.SamplingCounter.SamplingCounter(ArrayList<Unpluggable>)",1,1,1
"com.android.internal.os.BatteryStatsImpl.SamplingCounter.SamplingCounter(ArrayList<Unpluggable>,Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.SamplingCounter.addCountAtomic(long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.SamplingTimer(ArrayList<Unpluggable>,boolean,Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.SamplingTimer(ArrayList<Unpluggable>,boolean,boolean)",1,1,1
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.computeCurrentCountLocked()",1,1,3
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.computeRunTimeLocked(long)",1,1,3
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.getUpdateVersion()",1,1,1
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.logState(Printer,String)",1,1,1
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.plug(long,long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.readSummaryFromParcelLocked(Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.reset(BatteryStatsImpl,boolean)",1,1,1
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.setStale()",1,1,1
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.setUpdateVersion(int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.unplug(long,long)",1,1,2
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.updateCurrentReportedCount(int)",1,1,3
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.updateCurrentReportedTotalTime(long)",1,1,3
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.writeSummaryFromParcelLocked(Parcel,long)",1,1,2
"com.android.internal.os.BatteryStatsImpl.SamplingTimer.writeToParcel(Parcel,long)",1,1,2
"com.android.internal.os.BatteryStatsImpl.StopwatchTimer.StopwatchTimer(Uid,int,ArrayList<StopwatchTimer>,ArrayList<Unpluggable>)",1,1,1
"com.android.internal.os.BatteryStatsImpl.StopwatchTimer.StopwatchTimer(Uid,int,ArrayList<StopwatchTimer>,ArrayList<Unpluggable>,Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.StopwatchTimer.computeCurrentCountLocked()",1,1,1
"com.android.internal.os.BatteryStatsImpl.StopwatchTimer.computeRunTimeLocked(long)",1,3,5
"com.android.internal.os.BatteryStatsImpl.StopwatchTimer.detach()",1,2,2
"com.android.internal.os.BatteryStatsImpl.StopwatchTimer.isRunningLocked()",1,1,1
"com.android.internal.os.BatteryStatsImpl.StopwatchTimer.logState(Printer,String)",1,1,1
"com.android.internal.os.BatteryStatsImpl.StopwatchTimer.plug(long,long)",1,4,6
"com.android.internal.os.BatteryStatsImpl.StopwatchTimer.readSummaryFromParcelLocked(Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.StopwatchTimer.refreshTimersLocked(BatteryStatsImpl,ArrayList<StopwatchTimer>)",1,2,3
"com.android.internal.os.BatteryStatsImpl.StopwatchTimer.reset(BatteryStatsImpl,boolean)",1,2,3
"com.android.internal.os.BatteryStatsImpl.StopwatchTimer.setTimeout(long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.StopwatchTimer.startRunningLocked(BatteryStatsImpl)",1,4,5
"com.android.internal.os.BatteryStatsImpl.StopwatchTimer.stopRunningLocked(BatteryStatsImpl)",2,4,7
"com.android.internal.os.BatteryStatsImpl.StopwatchTimer.writeToParcel(Parcel,long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Timer.Timer(int,ArrayList<Unpluggable>)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Timer.Timer(int,ArrayList<Unpluggable>,Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Timer.detach()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Timer.getCountLocked(int)",1,2,4
"com.android.internal.os.BatteryStatsImpl.Timer.getTotalTimeLocked(long,int)",1,2,4
"com.android.internal.os.BatteryStatsImpl.Timer.logState(Printer,String)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Timer.plug(long,long)",1,3,5
"com.android.internal.os.BatteryStatsImpl.Timer.readSummaryFromParcelLocked(Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Timer.reset(BatteryStatsImpl,boolean)",1,2,2
"com.android.internal.os.BatteryStatsImpl.Timer.unplug(long,long)",1,3,5
"com.android.internal.os.BatteryStatsImpl.Timer.writeSummaryFromParcelLocked(Parcel,long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Timer.writeTimerToParcel(Parcel,Timer,long)",2,2,2
"com.android.internal.os.BatteryStatsImpl.Timer.writeToParcel(Parcel,long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Pkg()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.Serv()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.detach()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.getBatteryStats()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.getLaunchTimeToNowLocked(long)",2,1,2
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.getLaunches(int)",1,1,4
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.getStartTime(long,int)",1,2,4
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.getStartTimeToNowLocked(long)",2,1,2
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.getStarts(int)",1,1,4
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.plug(long,long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.readFromParcelLocked(Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.startLaunchedLocked()",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.startRunningLocked()",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.stopLaunchedLocked()",1,2,3
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.stopRunningLocked()",1,2,3
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.unplug(long,long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv.writeToParcelLocked(Parcel)",1,1,3
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.detach()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.getBatteryStats()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.getServiceStats()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.getWakeups(int)",1,1,4
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.incWakeupsLocked()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.newServiceStatsLocked()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.plug(long,long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.readFromParcelLocked(Parcel)",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.unplug(long,long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Pkg.writeToParcelLocked(Parcel)",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.Proc()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.addCpuTimeLocked(int,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.addExcessiveCpu(long,long)",1,1,2
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.addExcessiveWake(long,long)",1,1,2
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.addForegroundTimeLocked(long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.addSpeedStepTimes(long[])",1,3,5
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.countExcessivePowers()",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.detach()",1,3,3
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.getBatteryStats()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.getExcessivePower(int)",2,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.getForegroundTime(int)",1,1,4
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.getStarts(int)",1,1,4
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.getSystemTime(int)",1,1,4
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.getTimeAtCpuSpeedStep(int,int)",2,3,3
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.getUserTime(int)",1,1,4
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.incStartsLocked()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.plug(long,long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.readExcessivePowerFromParcelLocked(Parcel)",3,3,4
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.readFromParcelLocked(Parcel)",1,2,4
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.unplug(long,long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.writeExcessivePowerToParcelLocked(Parcel)",2,3,3
"com.android.internal.os.BatteryStatsImpl.Uid.Proc.writeToParcelLocked(Parcel)",1,3,3
"com.android.internal.os.BatteryStatsImpl.Uid.Sensor.Sensor(int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Sensor.getHandle()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Sensor.getSensorTime()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Sensor.readFromParcelLocked(ArrayList<Unpluggable>,Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Sensor.readTimerFromParcel(ArrayList<Unpluggable>,Parcel)",2,2,3
"com.android.internal.os.BatteryStatsImpl.Uid.Sensor.reset()",2,1,2
"com.android.internal.os.BatteryStatsImpl.Uid.Sensor.writeToParcelLocked(Parcel,long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Uid(int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Wakelock.getWakeTime(int)",5,2,5
"com.android.internal.os.BatteryStatsImpl.Uid.Wakelock.readFromParcelLocked(ArrayList<Unpluggable>,Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.Wakelock.readTimerFromParcel(int,ArrayList<StopwatchTimer>,ArrayList<Unpluggable>,Parcel)",2,1,2
"com.android.internal.os.BatteryStatsImpl.Uid.Wakelock.reset()",1,8,8
"com.android.internal.os.BatteryStatsImpl.Uid.Wakelock.writeToParcelLocked(Parcel,long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.computeCurrentTcpBytesReceived()",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.computeCurrentTcpBytesSent()",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.getAudioTurnedOnTime(long,int)",2,1,2
"com.android.internal.os.BatteryStatsImpl.Uid.getBatteryStats()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.getFullWifiLockTime(long,int)",2,1,2
"com.android.internal.os.BatteryStatsImpl.Uid.getPackageStats()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.getPackageStatsLocked(String)",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.getPidStats()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.getPidStatsLocked(int)",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.getProcessStats()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.getProcessStatsLocked(String)",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.getScanWifiLockTime(long,int)",2,1,2
"com.android.internal.os.BatteryStatsImpl.Uid.getSensorStats()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.getSensorTimerLocked(int,boolean)",4,3,5
"com.android.internal.os.BatteryStatsImpl.Uid.getServiceStatsLocked(String,String)",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.getTcpBytesReceived(int)",2,2,4
"com.android.internal.os.BatteryStatsImpl.Uid.getTcpBytesSent(int)",2,2,4
"com.android.internal.os.BatteryStatsImpl.Uid.getUid()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.getUserActivityCount(int,int)",2,1,2
"com.android.internal.os.BatteryStatsImpl.Uid.getVideoTurnedOnTime(long,int)",2,1,2
"com.android.internal.os.BatteryStatsImpl.Uid.getWakeTimerLocked(String,int)",2,5,11
"com.android.internal.os.BatteryStatsImpl.Uid.getWakelockStats()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.getWifiMulticastTime(long,int)",2,1,2
"com.android.internal.os.BatteryStatsImpl.Uid.getWifiRunningTime(long,int)",2,1,2
"com.android.internal.os.BatteryStatsImpl.Uid.hasUserActivity()",1,1,1
"com.android.internal.os.BatteryStatsImpl.Uid.initUserActivityLocked()",1,1,2
"com.android.internal.os.BatteryStatsImpl.Uid.noteAudioTurnedOffLocked()",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.noteAudioTurnedOnLocked()",1,2,3
"com.android.internal.os.BatteryStatsImpl.Uid.noteFullWifiLockAcquiredLocked()",1,2,3
"com.android.internal.os.BatteryStatsImpl.Uid.noteFullWifiLockReleasedLocked()",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.noteScanWifiLockAcquiredLocked()",1,2,3
"com.android.internal.os.BatteryStatsImpl.Uid.noteScanWifiLockReleasedLocked()",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.noteStartGps()",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.noteStartSensor(int)",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.noteStartWakeLocked(int,String,int)",1,4,5
"com.android.internal.os.BatteryStatsImpl.Uid.noteStopGps()",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.noteStopSensor(int)",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.noteStopWakeLocked(int,String,int)",1,4,6
"com.android.internal.os.BatteryStatsImpl.Uid.noteUserActivityLocked(int)",1,2,4
"com.android.internal.os.BatteryStatsImpl.Uid.noteVideoTurnedOffLocked()",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.noteVideoTurnedOnLocked()",1,2,3
"com.android.internal.os.BatteryStatsImpl.Uid.noteWifiMulticastDisabledLocked()",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.noteWifiMulticastEnabledLocked()",1,2,3
"com.android.internal.os.BatteryStatsImpl.Uid.noteWifiRunningLocked()",1,2,3
"com.android.internal.os.BatteryStatsImpl.Uid.noteWifiStoppedLocked()",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.readFromParcelLocked(ArrayList<Unpluggable>,Parcel)",1,6,14
"com.android.internal.os.BatteryStatsImpl.Uid.reportExcessiveCpuLocked(String,long,long)",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.reportExcessiveWakeLocked(String,long,long)",1,2,2
"com.android.internal.os.BatteryStatsImpl.Uid.reset()",1,33,34
"com.android.internal.os.BatteryStatsImpl.Uid.writeToParcelLocked(Parcel,long)",1,13,13
"com.android.internal.os.BatteryStatsImpl.addHistoryRecordLocked(HistoryItem)",1,1,2
"com.android.internal.os.BatteryStatsImpl.addHistoryRecordLocked(long)",5,6,17
"com.android.internal.os.BatteryStatsImpl.addHistoryRecordLocked(long,byte)",1,1,2
"com.android.internal.os.BatteryStatsImpl.clearHistoryLocked()",1,1,2
"com.android.internal.os.BatteryStatsImpl.commitPendingDataToDisk()",2,2,3
"com.android.internal.os.BatteryStatsImpl.computeBatteryRealtime(long,int)",5,4,5
"com.android.internal.os.BatteryStatsImpl.computeBatteryUptime(long,int)",5,4,5
"com.android.internal.os.BatteryStatsImpl.computeRealtime(long,int)",5,2,5
"com.android.internal.os.BatteryStatsImpl.computeUptime(long,int)",5,2,5
"com.android.internal.os.BatteryStatsImpl.describeContents()",1,1,1
"com.android.internal.os.BatteryStatsImpl.distributeWorkLocked(int)",1,8,9
"com.android.internal.os.BatteryStatsImpl.doDataPlug(long[],long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.doDataUnplug(long[],long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.doPlugLocked(long,long)",1,5,5
"com.android.internal.os.BatteryStatsImpl.doUnplugLocked(long,long)",1,3,3
"com.android.internal.os.BatteryStatsImpl.dumpLocked(PrintWriter)",1,5,5
"com.android.internal.os.BatteryStatsImpl.finishAddingCpuLocked(int,int,int,long[])",2,14,20
"com.android.internal.os.BatteryStatsImpl.fixPhoneServiceState(int,int)",1,1,4
"com.android.internal.os.BatteryStatsImpl.getAwakeTimeBattery()",1,1,1
"com.android.internal.os.BatteryStatsImpl.getAwakeTimePlugged()",1,1,1
"com.android.internal.os.BatteryStatsImpl.getBatteryRealtime(long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getBatteryRealtimeLocked(long)",1,1,2
"com.android.internal.os.BatteryStatsImpl.getBatteryUptime(long)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getBatteryUptimeLocked()",1,1,1
"com.android.internal.os.BatteryStatsImpl.getBatteryUptimeLocked(long)",1,1,2
"com.android.internal.os.BatteryStatsImpl.getBluetoothOnTime(long,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getBluetoothPingCount()",3,3,3
"com.android.internal.os.BatteryStatsImpl.getCpuSpeedSteps()",1,1,1
"com.android.internal.os.BatteryStatsImpl.getCurrentBluetoothPingCount()",3,3,3
"com.android.internal.os.BatteryStatsImpl.getCurrentRadioDataUptime()",2,1,4
"com.android.internal.os.BatteryStatsImpl.getDischargeCurrentLevel()",1,1,1
"com.android.internal.os.BatteryStatsImpl.getDischargeCurrentLevelLocked()",1,1,1
"com.android.internal.os.BatteryStatsImpl.getDischargeStartLevel()",1,1,1
"com.android.internal.os.BatteryStatsImpl.getDischargeStartLevelLocked()",1,1,1
"com.android.internal.os.BatteryStatsImpl.getGlobalWifiRunningTime(long,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getHighDischargeAmountSinceCharge()",1,1,3
"com.android.internal.os.BatteryStatsImpl.getHistory()",1,1,1
"com.android.internal.os.BatteryStatsImpl.getHistoryBaseTime()",1,1,1
"com.android.internal.os.BatteryStatsImpl.getInputEventCount(int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getIsOnBattery()",1,1,1
"com.android.internal.os.BatteryStatsImpl.getKernelWakelockStats()",1,1,1
"com.android.internal.os.BatteryStatsImpl.getKernelWakelockTimerLocked(String)",1,2,2
"com.android.internal.os.BatteryStatsImpl.getLowDischargeAmountSinceCharge()",1,1,3
"com.android.internal.os.BatteryStatsImpl.getMobileTcpBytesReceived(int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getMobileTcpBytesSent(int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getNextHistoryLocked(HistoryItem)",2,1,2
"com.android.internal.os.BatteryStatsImpl.getPackageStatsLocked(int,String)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getPhoneDataConnectionCount(int,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getPhoneDataConnectionTime(int,long,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getPhoneOnTime(long,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getPhoneSignalScanningTime(long,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getPhoneSignalStrengthCount(int,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getPhoneSignalStrengthTime(int,long,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getProcessStatsLocked(String,int)",1,2,2
"com.android.internal.os.BatteryStatsImpl.getProcessStatsLocked(int,String)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getProcessWakeTime(int,int,long)",3,2,4
"com.android.internal.os.BatteryStatsImpl.getRadioDataUptime()",2,2,2
"com.android.internal.os.BatteryStatsImpl.getRadioDataUptimeMs()",1,1,1
"com.android.internal.os.BatteryStatsImpl.getScreenBrightnessTime(int,long,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getScreenOnTime(long,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getServiceStatsLocked(int,String,String)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getStartCount()",1,1,1
"com.android.internal.os.BatteryStatsImpl.getTcpBytes(long,long[],int)",5,1,5
"com.android.internal.os.BatteryStatsImpl.getTotalTcpBytesReceived(int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getTotalTcpBytesSent(int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.getUidStats()",1,1,1
"com.android.internal.os.BatteryStatsImpl.getUidStatsLocked(int)",1,2,2
"com.android.internal.os.BatteryStatsImpl.getWifiOnTime(long,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.initTimes()",1,1,1
"com.android.internal.os.BatteryStatsImpl.isOnBattery()",1,1,1
"com.android.internal.os.BatteryStatsImpl.isScreenOn()",1,1,1
"com.android.internal.os.BatteryStatsImpl.noteAudioOffLocked(int)",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteAudioOnLocked(int)",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteBluetoothOffLocked()",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteBluetoothOnLocked()",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteFullWifiLockAcquiredFromSourceLocked(WorkSource)",1,2,2
"com.android.internal.os.BatteryStatsImpl.noteFullWifiLockAcquiredLocked(int)",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteFullWifiLockReleasedFromSourceLocked(WorkSource)",1,2,2
"com.android.internal.os.BatteryStatsImpl.noteFullWifiLockReleasedLocked(int)",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteInputEventAtomic()",1,1,1
"com.android.internal.os.BatteryStatsImpl.notePhoneDataConnectionStateLocked(int,boolean)",2,6,21
"com.android.internal.os.BatteryStatsImpl.notePhoneOffLocked()",1,3,3
"com.android.internal.os.BatteryStatsImpl.notePhoneOnLocked()",1,3,3
"com.android.internal.os.BatteryStatsImpl.notePhoneSignalStrengthLocked(SignalStrength)",1,2,11
"com.android.internal.os.BatteryStatsImpl.notePhoneStateLocked(int,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.noteProcessDiedLocked(int,int)",1,2,2
"com.android.internal.os.BatteryStatsImpl.noteScanWifiLockAcquiredFromSourceLocked(WorkSource)",1,2,2
"com.android.internal.os.BatteryStatsImpl.noteScanWifiLockAcquiredLocked(int)",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteScanWifiLockReleasedFromSourceLocked(WorkSource)",1,2,2
"com.android.internal.os.BatteryStatsImpl.noteScanWifiLockReleasedLocked(int)",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteScreenBrightnessLocked(int)",1,5,7
"com.android.internal.os.BatteryStatsImpl.noteScreenOffLocked()",1,4,4
"com.android.internal.os.BatteryStatsImpl.noteScreenOnLocked()",1,4,4
"com.android.internal.os.BatteryStatsImpl.noteStartGpsLocked(int)",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteStartSensorLocked(int,int)",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteStartWakeFromSourceLocked(WorkSource,int,String,int)",1,2,2
"com.android.internal.os.BatteryStatsImpl.noteStartWakeLocked(int,int,String,int)",1,6,6
"com.android.internal.os.BatteryStatsImpl.noteStopGpsLocked(int)",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteStopSensorLocked(int,int)",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteStopWakeFromSourceLocked(WorkSource,int,String,int)",1,2,2
"com.android.internal.os.BatteryStatsImpl.noteStopWakeLocked(int,int,String,int)",1,6,6
"com.android.internal.os.BatteryStatsImpl.noteUserActivityLocked(int,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.noteVideoOffLocked(int)",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteVideoOnLocked(int)",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteWifiMulticastDisabledFromSourceLocked(WorkSource)",1,2,2
"com.android.internal.os.BatteryStatsImpl.noteWifiMulticastDisabledLocked(int)",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteWifiMulticastEnabledFromSourceLocked(WorkSource)",1,2,2
"com.android.internal.os.BatteryStatsImpl.noteWifiMulticastEnabledLocked(int)",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteWifiOffLocked()",1,4,4
"com.android.internal.os.BatteryStatsImpl.noteWifiOnLocked()",1,3,3
"com.android.internal.os.BatteryStatsImpl.noteWifiRunningChangedLocked(WorkSource,WorkSource)",1,4,4
"com.android.internal.os.BatteryStatsImpl.noteWifiRunningLocked(WorkSource)",1,4,4
"com.android.internal.os.BatteryStatsImpl.noteWifiStoppedLocked(WorkSource)",1,4,4
"com.android.internal.os.BatteryStatsImpl.parseProcWakelocks(byte[],int)",3,8,18
"com.android.internal.os.BatteryStatsImpl.readFromParcel(Parcel)",1,1,1
"com.android.internal.os.BatteryStatsImpl.readFromParcelLocked(Parcel)",2,4,8
"com.android.internal.os.BatteryStatsImpl.readFully(FileInputStream)",3,3,4
"com.android.internal.os.BatteryStatsImpl.readHistory(Parcel)",1,2,4
"com.android.internal.os.BatteryStatsImpl.readKernelWakelockStats()",4,1,6
"com.android.internal.os.BatteryStatsImpl.readLocked()",3,3,4
"com.android.internal.os.BatteryStatsImpl.readSummaryFromParcel(Parcel)",14,36,37
"com.android.internal.os.BatteryStatsImpl.removeUidStatsLocked(int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.reportExcessiveCpuLocked(int,String,long,long)",1,2,2
"com.android.internal.os.BatteryStatsImpl.reportExcessiveWakeLocked(int,String,long,long)",1,2,2
"com.android.internal.os.BatteryStatsImpl.resetAllStatsLocked()",1,8,8
"com.android.internal.os.BatteryStatsImpl.setBatteryState(int,int,int,int,int,int)",1,3,17
"com.android.internal.os.BatteryStatsImpl.setBtHeadset(BluetoothHeadset)",1,5,5
"com.android.internal.os.BatteryStatsImpl.setCallback(BatteryCallback)",1,1,1
"com.android.internal.os.BatteryStatsImpl.setNumSpeedSteps(int)",1,1,2
"com.android.internal.os.BatteryStatsImpl.setOnBattery(boolean,int,int)",1,7,13
"com.android.internal.os.BatteryStatsImpl.setRadioScanningTimeout(long)",1,2,2
"com.android.internal.os.BatteryStatsImpl.shutdownLocked()",1,1,1
"com.android.internal.os.BatteryStatsImpl.startAddingCpuLocked()",6,3,7
"com.android.internal.os.BatteryStatsImpl.startIteratingHistoryLocked()",1,1,1
"com.android.internal.os.BatteryStatsImpl.stopAllSignalStrengthTimersLocked(int)",3,3,4
"com.android.internal.os.BatteryStatsImpl.updateAllPhoneStateLocked(int,int,int)",1,17,20
"com.android.internal.os.BatteryStatsImpl.updateKernelWakelocksLocked()",2,7,7
"com.android.internal.os.BatteryStatsImpl.writeAsyncLocked()",1,1,1
"com.android.internal.os.BatteryStatsImpl.writeHistory(Parcel)",1,3,3
"com.android.internal.os.BatteryStatsImpl.writeLocked(boolean)",3,4,5
"com.android.internal.os.BatteryStatsImpl.writeSummaryToParcel(Parcel)",1,31,31
"com.android.internal.os.BatteryStatsImpl.writeSyncLocked()",1,1,1
"com.android.internal.os.BatteryStatsImpl.writeToParcel(Parcel,int)",1,1,1
"com.android.internal.os.BatteryStatsImpl.writeToParcelLocked(Parcel,boolean,int)",1,9,10
"com.android.internal.os.BatteryStatsImpl.writeToParcelWithoutUids(Parcel,int)",1,1,1
"com.android.internal.os.BinderInternal.GcWatcher.finalize()",1,1,1
"com.android.internal.os.BinderInternal.disableBackgroundScheduling(boolean)",1,1,1
"com.android.internal.os.BinderInternal.forceBinderGc()",1,1,1
"com.android.internal.os.BinderInternal.forceGc(String)",1,1,1
"com.android.internal.os.BinderInternal.getContextObject()",1,1,1
"com.android.internal.os.BinderInternal.getLastGcTime()",1,1,1
"com.android.internal.os.BinderInternal.handleGc()",1,1,1
"com.android.internal.os.BinderInternal.joinThreadPool()",1,1,1
"com.android.internal.os.HandlerCaller.HandlerCaller(Context,Callback)",1,1,1
"com.android.internal.os.HandlerCaller.HandlerCaller(Context,Looper,Callback)",1,1,1
"com.android.internal.os.HandlerCaller.MyHandler.MyHandler(Looper)",1,1,1
"com.android.internal.os.HandlerCaller.MyHandler.handleMessage(Message)",1,1,1
"com.android.internal.os.HandlerCaller.executeOrSendMessage(Message)",2,2,2
"com.android.internal.os.HandlerCaller.hasMessages(int)",1,1,1
"com.android.internal.os.HandlerCaller.obtainArgs()",2,1,2
"com.android.internal.os.HandlerCaller.obtainMessage(int)",1,1,1
"com.android.internal.os.HandlerCaller.obtainMessageBO(int,boolean,Object)",1,1,2
"com.android.internal.os.HandlerCaller.obtainMessageBOO(int,boolean,Object,Object)",1,1,2
"com.android.internal.os.HandlerCaller.obtainMessageI(int,int)",1,1,1
"com.android.internal.os.HandlerCaller.obtainMessageII(int,int,int)",1,1,1
"com.android.internal.os.HandlerCaller.obtainMessageIIII(int,int,int,int,int)",1,1,1
"com.android.internal.os.HandlerCaller.obtainMessageIIIIII(int,int,int,int,int,int,int)",1,1,1
"com.android.internal.os.HandlerCaller.obtainMessageIIIIO(int,int,int,int,int,Object)",1,1,1
"com.android.internal.os.HandlerCaller.obtainMessageIIO(int,int,int,Object)",1,1,1
"com.android.internal.os.HandlerCaller.obtainMessageIIOO(int,int,int,Object,Object)",1,1,1
"com.android.internal.os.HandlerCaller.obtainMessageIO(int,int,Object)",1,1,1
"com.android.internal.os.HandlerCaller.obtainMessageIOO(int,int,Object,Object)",1,1,1
"com.android.internal.os.HandlerCaller.obtainMessageO(int,Object)",1,1,1
"com.android.internal.os.HandlerCaller.obtainMessageOO(int,Object,Object)",1,1,1
"com.android.internal.os.HandlerCaller.obtainMessageOOO(int,Object,Object,Object)",1,1,1
"com.android.internal.os.HandlerCaller.obtainMessageOOOO(int,Object,Object,Object,Object)",1,1,1
"com.android.internal.os.HandlerCaller.recycleArgs(SomeArgs)",1,1,2
"com.android.internal.os.HandlerCaller.removeMessages(int)",1,1,1
"com.android.internal.os.HandlerCaller.removeMessages(int,Object)",1,1,1
"com.android.internal.os.HandlerCaller.sendMessage(Message)",1,1,1
"com.android.internal.os.LoggingPrintStream.LoggingPrintStream()",1,1,1
"com.android.internal.os.LoggingPrintStream.append(CharSequence)",1,1,1
"com.android.internal.os.LoggingPrintStream.append(CharSequence,int,int)",1,1,1
"com.android.internal.os.LoggingPrintStream.append(char)",1,1,1
"com.android.internal.os.LoggingPrintStream.checkError()",1,1,1
"com.android.internal.os.LoggingPrintStream.close()",1,1,1
"com.android.internal.os.LoggingPrintStream.flush()",1,1,1
"com.android.internal.os.LoggingPrintStream.flush(boolean)",1,5,5
"com.android.internal.os.LoggingPrintStream.format(Locale,String,Object...)",2,1,2
"com.android.internal.os.LoggingPrintStream.format(String,Object...)",1,1,1
"com.android.internal.os.LoggingPrintStream.print(Object)",1,1,1
"com.android.internal.os.LoggingPrintStream.print(String)",1,1,1
"com.android.internal.os.LoggingPrintStream.print(boolean)",1,1,1
"com.android.internal.os.LoggingPrintStream.print(char)",1,2,2
"com.android.internal.os.LoggingPrintStream.print(char[])",1,1,1
"com.android.internal.os.LoggingPrintStream.print(double)",1,1,1
"com.android.internal.os.LoggingPrintStream.print(float)",1,1,1
"com.android.internal.os.LoggingPrintStream.print(int)",1,1,1
"com.android.internal.os.LoggingPrintStream.print(long)",1,1,1
"com.android.internal.os.LoggingPrintStream.printf(Locale,String,Object...)",1,1,1
"com.android.internal.os.LoggingPrintStream.printf(String,Object...)",1,1,1
"com.android.internal.os.LoggingPrintStream.println()",1,1,1
"com.android.internal.os.LoggingPrintStream.println(Object)",1,1,1
"com.android.internal.os.LoggingPrintStream.println(String)",1,5,5
"com.android.internal.os.LoggingPrintStream.println(boolean)",1,1,1
"com.android.internal.os.LoggingPrintStream.println(char)",1,1,1
"com.android.internal.os.LoggingPrintStream.println(char[])",1,1,1
"com.android.internal.os.LoggingPrintStream.println(double)",1,1,1
"com.android.internal.os.LoggingPrintStream.println(float)",1,1,1
"com.android.internal.os.LoggingPrintStream.println(int)",1,1,1
"com.android.internal.os.LoggingPrintStream.println(long)",1,1,1
"com.android.internal.os.LoggingPrintStream.setError()",1,1,1
"com.android.internal.os.LoggingPrintStream.write(byte[])",1,1,1
"com.android.internal.os.LoggingPrintStream.write(byte[],int,int)",1,4,4
"com.android.internal.os.LoggingPrintStream.write(int)",1,1,1
"com.android.internal.os.PkgUsageStats.PkgUsageStats(Parcel)",1,1,1
"com.android.internal.os.PkgUsageStats.PkgUsageStats(PkgUsageStats)",1,1,1
"com.android.internal.os.PkgUsageStats.PkgUsageStats(String,int,long)",1,1,1
"com.android.internal.os.PkgUsageStats.describeContents()",1,1,1
"com.android.internal.os.PkgUsageStats.toString()",1,1,1
"com.android.internal.os.PkgUsageStats.writeToParcel(Parcel,int)",1,1,1
"com.android.internal.os.PowerProfile.PowerProfile(Context)",1,2,2
"com.android.internal.os.PowerProfile.getAveragePower(String)",3,3,3
"com.android.internal.os.PowerProfile.getAveragePower(String,int)",5,2,6
"com.android.internal.os.PowerProfile.getBatteryCapacity()",1,1,1
"com.android.internal.os.PowerProfile.getNumSpeedSteps()",2,1,3
"com.android.internal.os.PowerProfile.readPowerValuesFromXml(Context)",3,12,16
"com.android.internal.os.RuntimeInit.UncaughtHandler.uncaughtException(Thread,Throwable)",2,3,5
"com.android.internal.os.RuntimeInit.commonInit()",1,5,5
"com.android.internal.os.RuntimeInit.finishInit()",1,1,1
"com.android.internal.os.RuntimeInit.getApplicationObject()",1,1,1
"com.android.internal.os.RuntimeInit.getDefaultUserAgent()",1,4,5
"com.android.internal.os.RuntimeInit.getQwertyKeyboard()",1,1,1
"com.android.internal.os.RuntimeInit.invokeStaticMain(String,String[])",2,2,6
"com.android.internal.os.RuntimeInit.isComputerOn()",1,1,1
"com.android.internal.os.RuntimeInit.main(String[])",1,2,2
"com.android.internal.os.RuntimeInit.setApplicationObject(IBinder)",1,1,1
"com.android.internal.os.RuntimeInit.turnComputerOn()",1,1,1
"com.android.internal.os.RuntimeInit.wtf(String,Throwable)",1,3,3
"com.android.internal.os.RuntimeInit.zygoteInit(String[])",5,6,6
"com.android.internal.os.RuntimeInit.zygoteInitNative()",1,1,1
"com.android.internal.os.SamplingProfilerIntegration.generateSnapshotHeader(String,PackageInfo,PrintStream)",1,2,2
"com.android.internal.os.SamplingProfilerIntegration.isEnabled()",1,1,1
"com.android.internal.os.SamplingProfilerIntegration.start()",2,1,2
"com.android.internal.os.SamplingProfilerIntegration.writeSnapshot(String,PackageInfo)",2,2,3
"com.android.internal.os.SamplingProfilerIntegration.writeSnapshotFile(String,PackageInfo)",3,3,4
"com.android.internal.os.SamplingProfilerIntegration.writeZygoteSnapshot()",2,1,2
"com.android.internal.os.ZygoteConnection.Arguments.Arguments(String[])",1,1,1
"com.android.internal.os.ZygoteConnection.Arguments.parseArgs(String[])",22,18,28
"com.android.internal.os.ZygoteConnection.ZygoteConnection(LocalSocket)",1,2,2
"com.android.internal.os.ZygoteConnection.applyCapabilitiesSecurityPolicy(Arguments,Credentials)",5,1,7
"com.android.internal.os.ZygoteConnection.applyDebuggerSecurityPolicy(Arguments)",1,1,2
"com.android.internal.os.ZygoteConnection.applyRlimitSecurityPolicy(Arguments,Credentials)",3,1,4
"com.android.internal.os.ZygoteConnection.applyUidSecurityPolicy(Arguments,Credentials)",5,6,12
"com.android.internal.os.ZygoteConnection.closeSocket()",1,2,2
"com.android.internal.os.ZygoteConnection.getFileDesciptor()",1,1,1
"com.android.internal.os.ZygoteConnection.handleChildProc(Arguments,FileDescriptor[],PrintStream)",2,10,10
"com.android.internal.os.ZygoteConnection.handleParentProc(int,FileDescriptor[],Arguments)",2,9,9
"com.android.internal.os.ZygoteConnection.logAndPrintError(PrintStream,String,Throwable)",1,2,3
"com.android.internal.os.ZygoteConnection.readArgumentList()",5,3,6
"com.android.internal.os.ZygoteConnection.run()",3,3,4
"com.android.internal.os.ZygoteConnection.runOnce()",3,7,9
"com.android.internal.os.ZygoteInit.MethodAndArgsCaller.MethodAndArgsCaller(Method,String[])",1,1,1
"com.android.internal.os.ZygoteInit.MethodAndArgsCaller.run()",3,2,5
"com.android.internal.os.ZygoteInit.ZygoteInit()",1,1,1
"com.android.internal.os.ZygoteInit.acceptCommandPeer()",1,1,2
"com.android.internal.os.ZygoteInit.cacheRegisterMaps()",2,5,7
"com.android.internal.os.ZygoteInit.capgetPermitted(int)",1,1,1
"com.android.internal.os.ZygoteInit.closeDescriptor(FileDescriptor)",1,1,1
"com.android.internal.os.ZygoteInit.closeServerSocket()",1,3,3
"com.android.internal.os.ZygoteInit.createFileDescriptor(int)",1,1,1
"com.android.internal.os.ZygoteInit.gc()",1,1,1
"com.android.internal.os.ZygoteInit.getpgid(int)",1,1,1
"com.android.internal.os.ZygoteInit.handleSystemServerProcess(Arguments)",1,1,1
"com.android.internal.os.ZygoteInit.invokeStaticMain(ClassLoader,String,String[])",2,2,6
"com.android.internal.os.ZygoteInit.main(String[])",4,5,7
"com.android.internal.os.ZygoteInit.preloadClasses()",6,10,13
"com.android.internal.os.ZygoteInit.preloadColorStateLists(VMRuntime,TypedArray)",1,6,6
"com.android.internal.os.ZygoteInit.preloadDrawables(VMRuntime,TypedArray)",1,7,7
"com.android.internal.os.ZygoteInit.preloadResources()",1,3,3
"com.android.internal.os.ZygoteInit.registerZygoteSocket()",2,2,4
"com.android.internal.os.ZygoteInit.reopenStdio(FileDescriptor,FileDescriptor,FileDescriptor)",1,1,1
"com.android.internal.os.ZygoteInit.runForkMode()",4,5,5
"com.android.internal.os.ZygoteInit.runSelectLoopMode()",3,6,7
"com.android.internal.os.ZygoteInit.selectReadable(FileDescriptor[])",1,1,1
"com.android.internal.os.ZygoteInit.setCapabilities(long,long)",1,1,1
"com.android.internal.os.ZygoteInit.setCloseOnExec(FileDescriptor,boolean)",1,1,1
"com.android.internal.os.ZygoteInit.setEffectiveGroup(int)",1,2,2
"com.android.internal.os.ZygoteInit.setEffectiveUser(int)",1,2,2
"com.android.internal.os.ZygoteInit.setpgid(int,int)",1,1,1
"com.android.internal.os.ZygoteInit.setregid(int,int)",1,1,1
"com.android.internal.os.ZygoteInit.setreuid(int,int)",1,1,1
"com.android.internal.os.ZygoteInit.startSystemServer()",1,2,4
"com.android.internal.os.ZygoteSecurityException.ZygoteSecurityException(String)",1,1,1
"com.android.internal.os.storage.ExternalStorageFormatter.fail(int)",1,2,2
"com.android.internal.os.storage.ExternalStorageFormatter.getMountService()",1,3,3
"com.android.internal.os.storage.ExternalStorageFormatter.onBind(Intent)",1,1,1
"com.android.internal.os.storage.ExternalStorageFormatter.onCancel(DialogInterface)",1,2,2
"com.android.internal.os.storage.ExternalStorageFormatter.onCreate()",1,2,2
"com.android.internal.os.storage.ExternalStorageFormatter.onDestroy()",1,3,3
"com.android.internal.os.storage.ExternalStorageFormatter.onStartCommand(Intent,int,int)",1,3,5
"com.android.internal.os.storage.ExternalStorageFormatter.updateProgressDialog(int)",1,2,2
"com.android.internal.os.storage.ExternalStorageFormatter.updateProgressState()",3,17,18
"com.android.internal.policy.PolicyManager.PolicyManager()",1,1,1
"com.android.internal.policy.PolicyManager.makeNewFallbackEventHandler(Context)",1,1,1
"com.android.internal.policy.PolicyManager.makeNewLayoutInflater(Context)",1,1,1
"com.android.internal.policy.PolicyManager.makeNewWindow(Context)",1,1,1
"com.android.internal.policy.PolicyManager.makeNewWindowManager()",1,1,1
"com.android.internal.preference.YesNoPreference.SavedState.SavedState(Parcel)",1,1,1
"com.android.internal.preference.YesNoPreference.SavedState.SavedState(Parcelable)",1,1,1
"com.android.internal.preference.YesNoPreference.SavedState.writeToParcel(Parcel,int)",1,1,2
"com.android.internal.preference.YesNoPreference.YesNoPreference(Context)",1,1,1
"com.android.internal.preference.YesNoPreference.YesNoPreference(Context,AttributeSet)",1,1,1
"com.android.internal.preference.YesNoPreference.YesNoPreference(Context,AttributeSet,int)",1,1,1
"com.android.internal.preference.YesNoPreference.getValue()",1,1,1
"com.android.internal.preference.YesNoPreference.onDialogClosed(boolean)",1,2,2
"com.android.internal.preference.YesNoPreference.onGetDefaultValue(TypedArray,int)",1,1,1
"com.android.internal.preference.YesNoPreference.onRestoreInstanceState(Parcelable)",2,2,2
"com.android.internal.preference.YesNoPreference.onSaveInstanceState()",2,1,2
"com.android.internal.preference.YesNoPreference.onSetInitialValue(boolean,Object)",1,2,2
"com.android.internal.preference.YesNoPreference.setValue(boolean)",1,1,1
"com.android.internal.preference.YesNoPreference.shouldDisableDependents()",1,2,2
"com.android.internal.service.wallpaper.ImageWallpaper.DrawableEngine.WallpaperObserver.onReceive(Context,Intent)",1,1,1
"com.android.internal.service.wallpaper.ImageWallpaper.DrawableEngine.drawFrame()",1,6,9
"com.android.internal.service.wallpaper.ImageWallpaper.DrawableEngine.onCreate(SurfaceHolder)",1,1,1
"com.android.internal.service.wallpaper.ImageWallpaper.DrawableEngine.onDestroy()",1,1,1
"com.android.internal.service.wallpaper.ImageWallpaper.DrawableEngine.onOffsetsChanged(float,float,float,float,int,int)",1,1,1
"com.android.internal.service.wallpaper.ImageWallpaper.DrawableEngine.onSurfaceChanged(SurfaceHolder,int,int,int)",1,1,1
"com.android.internal.service.wallpaper.ImageWallpaper.DrawableEngine.onSurfaceCreated(SurfaceHolder)",1,1,1
"com.android.internal.service.wallpaper.ImageWallpaper.DrawableEngine.onSurfaceDestroyed(SurfaceHolder)",1,1,1
"com.android.internal.service.wallpaper.ImageWallpaper.DrawableEngine.onTouchEvent(MotionEvent)",1,1,1
"com.android.internal.service.wallpaper.ImageWallpaper.DrawableEngine.onVisibilityChanged(boolean)",1,1,1
"com.android.internal.service.wallpaper.ImageWallpaper.DrawableEngine.updateWallpaper()",1,3,5
"com.android.internal.service.wallpaper.ImageWallpaper.onCreate()",1,2,2
"com.android.internal.service.wallpaper.ImageWallpaper.onCreateEngine()",1,1,1
"com.android.internal.service.wallpaper.ImageWallpaper.onDestroy()",1,2,2
"com.android.internal.statusbar.StatusBarIcon.StatusBarIcon()",1,1,1
"com.android.internal.statusbar.StatusBarIcon.StatusBarIcon(Parcel)",1,1,1
"com.android.internal.statusbar.StatusBarIcon.StatusBarIcon(String,int,int)",1,1,1
"com.android.internal.statusbar.StatusBarIcon.StatusBarIcon(String,int,int,int)",1,1,1
"com.android.internal.statusbar.StatusBarIcon.clone()",1,1,1
"com.android.internal.statusbar.StatusBarIcon.describeContents()",1,1,1
"com.android.internal.statusbar.StatusBarIcon.readFromParcel(Parcel)",1,1,1
"com.android.internal.statusbar.StatusBarIcon.toString()",1,1,1
"com.android.internal.statusbar.StatusBarIcon.writeToParcel(Parcel,int)",1,1,2
"com.android.internal.statusbar.StatusBarIconList.StatusBarIconList()",1,1,1
"com.android.internal.statusbar.StatusBarIconList.StatusBarIconList(Parcel)",1,1,1
"com.android.internal.statusbar.StatusBarIconList.copyFrom(StatusBarIconList)",1,4,4
"com.android.internal.statusbar.StatusBarIconList.defineSlots(String[])",1,1,2
"com.android.internal.statusbar.StatusBarIconList.describeContents()",1,1,1
"com.android.internal.statusbar.StatusBarIconList.dump(PrintWriter)",1,2,2
"com.android.internal.statusbar.StatusBarIconList.getIcon(int)",1,1,1
"com.android.internal.statusbar.StatusBarIconList.getSlot(int)",1,1,1
"com.android.internal.statusbar.StatusBarIconList.getSlotIndex(String)",3,2,3
"com.android.internal.statusbar.StatusBarIconList.getViewIndex(int)",1,1,3
"com.android.internal.statusbar.StatusBarIconList.readFromParcel(Parcel)",1,3,4
"com.android.internal.statusbar.StatusBarIconList.removeIcon(int)",1,1,1
"com.android.internal.statusbar.StatusBarIconList.setIcon(int,StatusBarIcon)",1,1,1
"com.android.internal.statusbar.StatusBarIconList.size()",1,1,1
"com.android.internal.statusbar.StatusBarIconList.writeToParcel(Parcel,int)",1,4,4
"com.android.internal.statusbar.StatusBarNotification.StatusBarNotification()",1,1,1
"com.android.internal.statusbar.StatusBarNotification.StatusBarNotification(Parcel)",1,1,1
"com.android.internal.statusbar.StatusBarNotification.StatusBarNotification(String,int,String,int,int,Notification)",3,1,3
"com.android.internal.statusbar.StatusBarNotification.clone()",1,1,1
"com.android.internal.statusbar.StatusBarNotification.describeContents()",1,1,1
"com.android.internal.statusbar.StatusBarNotification.isClearable()",1,1,2
"com.android.internal.statusbar.StatusBarNotification.isOngoing()",1,1,1
"com.android.internal.statusbar.StatusBarNotification.readFromParcel(Parcel)",1,2,2
"com.android.internal.statusbar.StatusBarNotification.toString()",1,1,1
"com.android.internal.statusbar.StatusBarNotification.writeToParcel(Parcel,int)",1,2,2
"com.android.internal.util.ArrayUtils.ArrayUtils()",1,1,1
"com.android.internal.util.ArrayUtils.contains(T[],T)",5,4,6
"com.android.internal.util.ArrayUtils.emptyArray(Class<T>)",2,3,4
"com.android.internal.util.ArrayUtils.equals(byte[],byte[],int)",5,1,8
"com.android.internal.util.ArrayUtils.idealBooleanArraySize(int)",1,1,1
"com.android.internal.util.ArrayUtils.idealByteArraySize(int)",3,1,3
"com.android.internal.util.ArrayUtils.idealCharArraySize(int)",1,1,1
"com.android.internal.util.ArrayUtils.idealFloatArraySize(int)",1,1,1
"com.android.internal.util.ArrayUtils.idealIntArraySize(int)",1,1,1
"com.android.internal.util.ArrayUtils.idealLongArraySize(int)",1,1,1
"com.android.internal.util.ArrayUtils.idealObjectArraySize(int)",1,1,1
"com.android.internal.util.ArrayUtils.idealShortArraySize(int)",1,1,1
"com.android.internal.util.AsyncChannel.AsyncChannel()",1,1,1
"com.android.internal.util.AsyncChannel.AsyncChannelConnection.AsyncChannelConnection()",1,1,1
"com.android.internal.util.AsyncChannel.AsyncChannelConnection.onServiceConnected(ComponentName,IBinder)",1,1,1
"com.android.internal.util.AsyncChannel.AsyncChannelConnection.onServiceDisconnected(ComponentName)",1,1,1
"com.android.internal.util.AsyncChannel.SyncMessenger.SyncHandler.SyncHandler(Looper)",1,1,1
"com.android.internal.util.AsyncChannel.SyncMessenger.SyncHandler.handleMessage(Message)",1,1,1
"com.android.internal.util.AsyncChannel.SyncMessenger.SyncMessenger()",1,1,1
"com.android.internal.util.AsyncChannel.SyncMessenger.obtain()",1,2,2
"com.android.internal.util.AsyncChannel.SyncMessenger.recycle()",1,1,1
"com.android.internal.util.AsyncChannel.SyncMessenger.sendMessageSynchronously(Messenger,Message)",1,1,3
"com.android.internal.util.AsyncChannel.connect(AsyncService,Messenger)",1,1,1
"com.android.internal.util.AsyncChannel.connect(Context,Handler,Class<?>)",1,1,1
"com.android.internal.util.AsyncChannel.connect(Context,Handler,Handler)",1,1,1
"com.android.internal.util.AsyncChannel.connect(Context,Handler,Messenger)",1,4,4
"com.android.internal.util.AsyncChannel.connect(Context,Handler,String,String)",1,3,3
"com.android.internal.util.AsyncChannel.connectSrcHandlerToPackage(Context,Handler,String,String)",1,4,4
"com.android.internal.util.AsyncChannel.disconnect()",1,3,3
"com.android.internal.util.AsyncChannel.disconnected()",1,1,1
"com.android.internal.util.AsyncChannel.log(String)",1,1,1
"com.android.internal.util.AsyncChannel.replyHalfConnected(int)",1,1,1
"com.android.internal.util.AsyncChannel.replyToMessage(Message,Message)",1,2,2
"com.android.internal.util.AsyncChannel.replyToMessage(Message,int)",1,1,1
"com.android.internal.util.AsyncChannel.replyToMessage(Message,int,Object)",1,1,1
"com.android.internal.util.AsyncChannel.replyToMessage(Message,int,int)",1,1,1
"com.android.internal.util.AsyncChannel.replyToMessage(Message,int,int,int)",1,1,1
"com.android.internal.util.AsyncChannel.replyToMessage(Message,int,int,int,Object)",1,1,1
"com.android.internal.util.AsyncChannel.sendMessage(Message)",1,2,2
"com.android.internal.util.AsyncChannel.sendMessage(int)",1,1,1
"com.android.internal.util.AsyncChannel.sendMessage(int,Object)",1,1,1
"com.android.internal.util.AsyncChannel.sendMessage(int,int)",1,1,1
"com.android.internal.util.AsyncChannel.sendMessage(int,int,int)",1,1,1
"com.android.internal.util.AsyncChannel.sendMessage(int,int,int,Object)",1,1,1
"com.android.internal.util.AsyncChannel.sendMessageSynchronously(Message)",1,1,1
"com.android.internal.util.AsyncChannel.sendMessageSynchronously(int)",1,1,1
"com.android.internal.util.AsyncChannel.sendMessageSynchronously(int,Object)",1,1,1
"com.android.internal.util.AsyncChannel.sendMessageSynchronously(int,int)",1,1,1
"com.android.internal.util.AsyncChannel.sendMessageSynchronously(int,int,int)",1,1,1
"com.android.internal.util.AsyncChannel.sendMessageSynchronously(int,int,int,Object)",1,1,1
"com.android.internal.util.AsyncService.getHandler()",1,1,1
"com.android.internal.util.AsyncService.onBind(Intent)",1,1,1
"com.android.internal.util.AsyncService.onCreate()",1,1,1
"com.android.internal.util.AsyncService.onDestroy()",1,2,2
"com.android.internal.util.AsyncService.onStartCommand(Intent,int,int)",1,2,2
"com.android.internal.util.BitwiseInputStream.AccessException.AccessException(String)",1,1,1
"com.android.internal.util.BitwiseInputStream.BitwiseInputStream(byte[])",1,1,1
"com.android.internal.util.BitwiseInputStream.available()",1,1,1
"com.android.internal.util.BitwiseInputStream.read(int)",2,1,5
"com.android.internal.util.BitwiseInputStream.readByteArray(int)",1,2,3
"com.android.internal.util.BitwiseInputStream.skip(int)",2,1,2
"com.android.internal.util.BitwiseOutputStream.AccessException.AccessException(String)",1,1,1
"com.android.internal.util.BitwiseOutputStream.BitwiseOutputStream(int)",1,1,1
"com.android.internal.util.BitwiseOutputStream.possExpand(int)",2,1,2
"com.android.internal.util.BitwiseOutputStream.skip(int)",1,1,1
"com.android.internal.util.BitwiseOutputStream.toByteArray()",1,1,2
"com.android.internal.util.BitwiseOutputStream.write(int,int)",2,1,4
"com.android.internal.util.BitwiseOutputStream.writeByteArray(int,byte[])",1,3,3
"com.android.internal.util.CharSequences.compareToIgnoreCase(CharSequence,CharSequence)",3,2,4
"com.android.internal.util.CharSequences.equals(CharSequence,CharSequence)",4,2,4
"com.android.internal.util.CharSequences.forAsciiBytes(byte[])",1,1,1
"com.android.internal.util.CharSequences.forAsciiBytes(byte[],int,int)",1,1,1
"com.android.internal.util.CharSequences.validate(int,int,int)",5,1,5
"com.android.internal.util.FastMath.round(float)",1,1,1
"com.android.internal.util.FastXmlSerializer.append(String)",1,1,1
"com.android.internal.util.FastXmlSerializer.append(String,int,int)",2,4,5
"com.android.internal.util.FastXmlSerializer.append(char)",1,2,2
"com.android.internal.util.FastXmlSerializer.append(char[],int,int)",2,4,5
"com.android.internal.util.FastXmlSerializer.attribute(String,String,String)",1,2,2
"com.android.internal.util.FastXmlSerializer.cdsect(String)",1,1,1
"com.android.internal.util.FastXmlSerializer.comment(String)",1,1,1
"com.android.internal.util.FastXmlSerializer.docdecl(String)",1,1,1
"com.android.internal.util.FastXmlSerializer.endDocument()",1,1,1
"com.android.internal.util.FastXmlSerializer.endTag(String,String)",1,3,3
"com.android.internal.util.FastXmlSerializer.entityRef(String)",1,1,1
"com.android.internal.util.FastXmlSerializer.escapeAndAppendString(String)",4,4,6
"com.android.internal.util.FastXmlSerializer.escapeAndAppendString(char[],int,int)",4,4,6
"com.android.internal.util.FastXmlSerializer.flush()",6,6,6
"com.android.internal.util.FastXmlSerializer.flushBytes()",1,2,2
"com.android.internal.util.FastXmlSerializer.getDepth()",1,1,1
"com.android.internal.util.FastXmlSerializer.getFeature(String)",1,1,1
"com.android.internal.util.FastXmlSerializer.getName()",1,1,1
"com.android.internal.util.FastXmlSerializer.getNamespace()",1,1,1
"com.android.internal.util.FastXmlSerializer.getPrefix(String,boolean)",1,1,1
"com.android.internal.util.FastXmlSerializer.getProperty(String)",1,1,1
"com.android.internal.util.FastXmlSerializer.ignorableWhitespace(String)",1,1,1
"com.android.internal.util.FastXmlSerializer.processingInstruction(String)",1,1,1
"com.android.internal.util.FastXmlSerializer.setFeature(String,boolean)",2,1,2
"com.android.internal.util.FastXmlSerializer.setOutput(OutputStream,String)",3,4,6
"com.android.internal.util.FastXmlSerializer.setOutput(Writer)",1,1,1
"com.android.internal.util.FastXmlSerializer.setPrefix(String,String)",1,1,1
"com.android.internal.util.FastXmlSerializer.setProperty(String,Object)",1,1,1
"com.android.internal.util.FastXmlSerializer.startDocument(String,Boolean)",1,1,2
"com.android.internal.util.FastXmlSerializer.startTag(String,String)",1,3,3
"com.android.internal.util.FastXmlSerializer.text(String)",1,2,2
"com.android.internal.util.FastXmlSerializer.text(char[],int,int)",1,2,2
"com.android.internal.util.HanziToPinyin.HanziToPinyin(boolean)",1,1,1
"com.android.internal.util.HanziToPinyin.Token.Token()",1,1,1
"com.android.internal.util.HanziToPinyin.Token.Token(int,String,String)",1,1,1
"com.android.internal.util.HanziToPinyin.addToken(StringBuilder,ArrayList<Token>,int)",1,1,1
"com.android.internal.util.HanziToPinyin.get(String)",2,16,17
"com.android.internal.util.HanziToPinyin.getInstance()",4,2,4
"com.android.internal.util.HanziToPinyin.getToken(char)",9,8,14
"com.android.internal.util.HexDump.dumpHexString(byte[])",1,1,1
"com.android.internal.util.HexDump.dumpHexString(byte[],int,int)",1,9,11
"com.android.internal.util.HexDump.hexStringToByteArray(String)",1,2,2
"com.android.internal.util.HexDump.toByte(char)",4,1,7
"com.android.internal.util.HexDump.toByteArray(byte)",1,1,1
"com.android.internal.util.HexDump.toByteArray(int)",1,1,1
"com.android.internal.util.HexDump.toHexString(byte)",1,1,1
"com.android.internal.util.HexDump.toHexString(byte[])",1,1,1
"com.android.internal.util.HexDump.toHexString(byte[],int,int)",1,1,2
"com.android.internal.util.HexDump.toHexString(int)",1,1,1
"com.android.internal.util.HierarchicalState.HierarchicalState()",1,1,1
"com.android.internal.util.HierarchicalState.enter()",1,1,1
"com.android.internal.util.HierarchicalState.exit()",1,1,1
"com.android.internal.util.HierarchicalState.getName()",1,1,1
"com.android.internal.util.HierarchicalState.processMessage(Message)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.HierarchicalStateMachine(String)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.HierarchicalStateMachine(String,Looper)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.HaltingState.processMessage(Message)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.HsmHandler(Looper,HierarchicalStateMachine)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.QuittingState.processMessage(Message)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.StateInfo.toString()",1,2,2
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.addState(HierarchicalState,HierarchicalState)",2,7,9
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.completeConstruction()",1,4,7
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.deferMessage(Message)",1,2,2
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.getCurrentMessage()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.getCurrentState()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.getProcessedMessage(int)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.getProcessedMessagesCount()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.getProcessedMessagesSize()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.handleMessage(Message)",2,4,4
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.invokeEnterMethods(int)",1,3,3
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.invokeExitMethods(StateInfo)",1,3,4
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.isDbg()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.isQuit(Message)",1,1,2
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.moveDeferredMessageAtFrontOfQueue()",1,3,3
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.moveTempStateStackToStateStack()",1,4,4
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.performTransitions()",1,7,7
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.processMsg(Message)",3,7,7
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.quit()",1,2,2
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.setDbg(boolean)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.setInitialState(HierarchicalState)",1,2,2
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.setProcessedMessagesSize(int)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.setupInitialStateStack()",1,2,3
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.setupTempStateStackWithStatesToEnter(HierarchicalState)",1,2,4
"com.android.internal.util.HierarchicalStateMachine.HsmHandler.transitionTo(HierarchicalState)",1,2,2
"com.android.internal.util.HierarchicalStateMachine.addState(HierarchicalState)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.addState(HierarchicalState,HierarchicalState)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.deferMessage(Message)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.getCurrentMessage()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.getCurrentState()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.getHandler()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.getName()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.getProcessedMessage(int)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.getProcessedMessagesCount()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.getProcessedMessagesSize()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.haltedProcessMessage(Message)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.halting()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.initStateMachine(String,Looper)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.isDbg()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.isQuit(Message)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.obtainMessage()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.obtainMessage(int)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.obtainMessage(int,Object)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.obtainMessage(int,int,int)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.obtainMessage(int,int,int,Object)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.quit()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.quitting()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.removeMessages(int)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.sendMessage(Message)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.sendMessage(int)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.sendMessage(int,Object)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.sendMessageAtFrontOfQueue(Message)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.sendMessageAtFrontOfQueue(int)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.sendMessageAtFrontOfQueue(int,Object)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.sendMessageDelayed(Message,long)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.sendMessageDelayed(int,Object,long)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.sendMessageDelayed(int,long)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.setDbg(boolean)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.setInitialState(HierarchicalState)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.setProcessedMessagesSize(int)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.start()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.transitionTo(HierarchicalState)",1,1,1
"com.android.internal.util.HierarchicalStateMachine.transitionToHaltingState()",1,1,1
"com.android.internal.util.HierarchicalStateMachine.unhandledMessage(Message)",1,2,2
"com.android.internal.util.JournaledFile.JournaledFile(File,File)",1,1,1
"com.android.internal.util.JournaledFile.chooseForRead()",3,4,4
"com.android.internal.util.JournaledFile.chooseForWrite()",2,3,5
"com.android.internal.util.JournaledFile.commit()",2,1,2
"com.android.internal.util.JournaledFile.rollback()",2,1,2
"com.android.internal.util.Objects.nonNull(T)",2,1,2
"com.android.internal.util.Objects.nonNull(T,String)",2,1,2
"com.android.internal.util.Predicates.AndPredicate.AndPredicate(Iterable<? extends Predicate<? super T>>)",1,1,1
"com.android.internal.util.Predicates.AndPredicate.apply(T)",3,2,3
"com.android.internal.util.Predicates.NotPredicate.NotPredicate(Predicate<? super T>)",1,1,1
"com.android.internal.util.Predicates.NotPredicate.apply(T)",1,1,1
"com.android.internal.util.Predicates.OrPredicate.OrPredicate(Iterable<? extends Predicate<? super T>>)",1,1,1
"com.android.internal.util.Predicates.OrPredicate.apply(T)",3,2,3
"com.android.internal.util.Predicates.Predicates()",1,1,1
"com.android.internal.util.Predicates.and(Iterable<? extends Predicate<? super T>>)",1,1,1
"com.android.internal.util.Predicates.and(Predicate<? super T>...)",1,1,1
"com.android.internal.util.Predicates.not(Predicate<? super T>)",1,1,1
"com.android.internal.util.Predicates.or(Iterable<? extends Predicate<? super T>>)",1,1,1
"com.android.internal.util.Predicates.or(Predicate<? super T>...)",1,1,1
"com.android.internal.util.ProcessedMessages.Info.Info(Message,HierarchicalState,HierarchicalState)",1,1,1
"com.android.internal.util.ProcessedMessages.Info.cn(Object)",2,2,2
"com.android.internal.util.ProcessedMessages.Info.getOriginalState()",1,1,1
"com.android.internal.util.ProcessedMessages.Info.getState()",1,1,1
"com.android.internal.util.ProcessedMessages.Info.getWhat()",1,1,1
"com.android.internal.util.ProcessedMessages.Info.toString()",1,1,1
"com.android.internal.util.ProcessedMessages.Info.update(Message,HierarchicalState,HierarchicalState)",1,1,1
"com.android.internal.util.ProcessedMessages.ProcessedMessages()",1,1,1
"com.android.internal.util.ProcessedMessages.ProcessedMessages(int)",1,1,1
"com.android.internal.util.ProcessedMessages.add(Message,HierarchicalState,HierarchicalState)",1,2,3
"com.android.internal.util.ProcessedMessages.count()",1,1,1
"com.android.internal.util.ProcessedMessages.get(int)",2,2,3
"com.android.internal.util.ProcessedMessages.setSize(int)",1,1,1
"com.android.internal.util.ProcessedMessages.size()",1,1,1
"com.android.internal.util.TypedProperties.ParseException.ParseException(StreamTokenizer,String)",1,1,1
"com.android.internal.util.TypedProperties.TypeException.TypeException(String,Object,String)",1,1,1
"com.android.internal.util.TypedProperties.TypedProperties()",1,1,1
"com.android.internal.util.TypedProperties.get(Object)",2,1,2
"com.android.internal.util.TypedProperties.getBoolean(String)",1,1,1
"com.android.internal.util.TypedProperties.getBoolean(String,boolean)",3,2,3
"com.android.internal.util.TypedProperties.getByte(String)",1,1,1
"com.android.internal.util.TypedProperties.getByte(String,byte)",3,2,3
"com.android.internal.util.TypedProperties.getDouble(String)",1,1,1
"com.android.internal.util.TypedProperties.getDouble(String,double)",3,2,3
"com.android.internal.util.TypedProperties.getFloat(String)",1,1,1
"com.android.internal.util.TypedProperties.getFloat(String,float)",3,2,3
"com.android.internal.util.TypedProperties.getInt(String)",1,1,1
"com.android.internal.util.TypedProperties.getInt(String,int)",3,2,3
"com.android.internal.util.TypedProperties.getLong(String)",1,1,1
"com.android.internal.util.TypedProperties.getLong(String,long)",3,2,3
"com.android.internal.util.TypedProperties.getShort(String)",1,1,1
"com.android.internal.util.TypedProperties.getShort(String,short)",3,2,3
"com.android.internal.util.TypedProperties.getString(String)",1,1,1
"com.android.internal.util.TypedProperties.getString(String,String)",4,1,4
"com.android.internal.util.TypedProperties.getStringInfo(String)",4,1,4
"com.android.internal.util.TypedProperties.initTokenizer(Reader)",1,1,1
"com.android.internal.util.TypedProperties.interpretType(String)",10,9,10
"com.android.internal.util.TypedProperties.load(Reader)",1,1,1
"com.android.internal.util.TypedProperties.parse(Reader,Map<String, Object>)",15,5,15
"com.android.internal.util.TypedProperties.parseValue(StreamTokenizer,int)",24,12,34
"com.android.internal.util.WithFramework.main(String[])",3,2,3
"com.android.internal.util.WithFramework.printUsage()",1,1,1
"com.android.internal.util.WithFramework.registerNatives()",1,1,1
"com.android.internal.util.XmlUtils.beginDocument(XmlPullParser,String)",3,3,5
"com.android.internal.util.XmlUtils.convertValueToBoolean(CharSequence,boolean)",2,3,5
"com.android.internal.util.XmlUtils.convertValueToInt(CharSequence,int)",4,2,8
"com.android.internal.util.XmlUtils.convertValueToList(CharSequence,String[],int)",4,3,4
"com.android.internal.util.XmlUtils.convertValueToUnsignedInt(String,int)",2,1,2
"com.android.internal.util.XmlUtils.nextElement(XmlPullParser)",1,2,3
"com.android.internal.util.XmlUtils.parseUnsignedIntAttribute(CharSequence)",3,2,6
"com.android.internal.util.XmlUtils.readListXml(InputStream)",1,1,1
"com.android.internal.util.XmlUtils.readMapXml(InputStream)",1,1,1
"com.android.internal.util.XmlUtils.readSetXml(InputStream)",1,1,1
"com.android.internal.util.XmlUtils.readThisIntArrayXml(XmlPullParser,String,String[])",7,7,11
"com.android.internal.util.XmlUtils.readThisListXml(XmlPullParser,String,String[])",5,4,5
"com.android.internal.util.XmlUtils.readThisMapXml(XmlPullParser,String,String[])",6,5,6
"com.android.internal.util.XmlUtils.readThisSetXml(XmlPullParser,String,String[])",5,4,5
"com.android.internal.util.XmlUtils.readThisValueXml(XmlPullParser,String[])",22,20,22
"com.android.internal.util.XmlUtils.readValueXml(XmlPullParser,String[])",5,5,5
"com.android.internal.util.XmlUtils.skipCurrentTag(XmlPullParser)",1,3,4
"com.android.internal.util.XmlUtils.writeByteArrayXml(byte[],String,XmlSerializer)",2,4,6
"com.android.internal.util.XmlUtils.writeIntArrayXml(int[],String,XmlSerializer)",2,4,4
"com.android.internal.util.XmlUtils.writeListXml(List,OutputStream)",1,1,1
"com.android.internal.util.XmlUtils.writeListXml(List,String,XmlSerializer)",2,4,4
"com.android.internal.util.XmlUtils.writeMapXml(Map,OutputStream)",1,1,1
"com.android.internal.util.XmlUtils.writeMapXml(Map,String,XmlSerializer)",2,4,4
"com.android.internal.util.XmlUtils.writeSetXml(Set,String,XmlSerializer)",2,4,4
"com.android.internal.util.XmlUtils.writeValueXml(Object,String,XmlSerializer)",14,18,18
"com.android.internal.view.BaseIWindow.closeSystemDialogs(String)",1,1,1
"com.android.internal.view.BaseIWindow.dispatchAppVisibility(boolean)",1,1,1
"com.android.internal.view.BaseIWindow.dispatchDragEvent(DragEvent)",1,1,1
"com.android.internal.view.BaseIWindow.dispatchGetNewSurface()",1,1,1
"com.android.internal.view.BaseIWindow.dispatchWallpaperCommand(String,int,int,int,Bundle,boolean)",1,2,3
"com.android.internal.view.BaseIWindow.dispatchWallpaperOffsets(float,float,float,float,boolean)",1,2,3
"com.android.internal.view.BaseIWindow.executeCommand(String,String,ParcelFileDescriptor)",1,1,1
"com.android.internal.view.BaseIWindow.resized(int,int,Rect,Rect,boolean,Configuration)",1,2,3
"com.android.internal.view.BaseIWindow.setSession(IWindowSession)",1,1,1
"com.android.internal.view.BaseIWindow.windowFocusChanged(boolean,boolean)",1,1,1
"com.android.internal.view.BaseInputHandler.handleKey(KeyEvent,FinishedCallback)",1,1,1
"com.android.internal.view.BaseInputHandler.handleMotion(MotionEvent,FinishedCallback)",1,1,1
"com.android.internal.view.BaseSurfaceHolder.addCallback(Callback)",1,2,2
"com.android.internal.view.BaseSurfaceHolder.getCallbacks()",2,2,5
"com.android.internal.view.BaseSurfaceHolder.getRequestedFormat()",1,1,1
"com.android.internal.view.BaseSurfaceHolder.getRequestedHeight()",1,1,1
"com.android.internal.view.BaseSurfaceHolder.getRequestedType()",1,1,1
"com.android.internal.view.BaseSurfaceHolder.getRequestedWidth()",1,1,1
"com.android.internal.view.BaseSurfaceHolder.getSurface()",1,1,1
"com.android.internal.view.BaseSurfaceHolder.getSurfaceFrame()",1,1,1
"com.android.internal.view.BaseSurfaceHolder.internalLockCanvas(Rect)",3,7,10
"com.android.internal.view.BaseSurfaceHolder.lockCanvas()",1,1,1
"com.android.internal.view.BaseSurfaceHolder.lockCanvas(Rect)",1,1,1
"com.android.internal.view.BaseSurfaceHolder.removeCallback(Callback)",1,1,1
"com.android.internal.view.BaseSurfaceHolder.setFixedSize(int,int)",1,2,3
"com.android.internal.view.BaseSurfaceHolder.setFormat(int)",1,2,2
"com.android.internal.view.BaseSurfaceHolder.setSizeFromLayout()",1,2,3
"com.android.internal.view.BaseSurfaceHolder.setType(int)",3,4,4
"com.android.internal.view.BaseSurfaceHolder.ungetCallbacks()",1,1,1
"com.android.internal.view.BaseSurfaceHolder.unlockCanvasAndPost(Canvas)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.IInputConnectionWrapper(Looper,InputConnection)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.MyHandler.MyHandler(Looper)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.MyHandler.handleMessage(Message)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.beginBatchEdit()",1,1,1
"com.android.internal.view.IInputConnectionWrapper.clearMetaKeyStates(int)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.commitCompletion(CompletionInfo)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.commitCorrection(CorrectionInfo)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.commitText(CharSequence,int)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.deleteSurroundingText(int,int)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.dispatchMessage(Message)",2,2,2
"com.android.internal.view.IInputConnectionWrapper.endBatchEdit()",1,1,1
"com.android.internal.view.IInputConnectionWrapper.executeMessage(Message)",43,68,68
"com.android.internal.view.IInputConnectionWrapper.finishComposingText()",1,1,1
"com.android.internal.view.IInputConnectionWrapper.getCursorCapsMode(int,int,IInputContextCallback)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.getExtractedText(ExtractedTextRequest,int,int,IInputContextCallback)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.getSelectedText(int,int,IInputContextCallback)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.getTextAfterCursor(int,int,int,IInputContextCallback)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.getTextBeforeCursor(int,int,int,IInputContextCallback)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.isActive()",1,1,1
"com.android.internal.view.IInputConnectionWrapper.obtainMessage(int)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.obtainMessageII(int,int,int)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.obtainMessageIISC(int,int,int,int,IInputContextCallback)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.obtainMessageIO(int,int,Object)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.obtainMessageIOSC(int,int,Object,int,IInputContextCallback)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.obtainMessageISC(int,int,int,IInputContextCallback)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.obtainMessageO(int,Object)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.obtainMessageOO(int,Object,Object)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.performContextMenuAction(int)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.performEditorAction(int)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.performPrivateCommand(String,Bundle)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.reportFullscreenMode(boolean)",1,1,2
"com.android.internal.view.IInputConnectionWrapper.sendKeyEvent(KeyEvent)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.setComposingRegion(int,int)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.setComposingText(CharSequence,int)",1,1,1
"com.android.internal.view.IInputConnectionWrapper.setSelection(int,int)",1,1,1
"com.android.internal.view.InputBindResult.InputBindResult(IInputMethodSession,String,int)",1,1,1
"com.android.internal.view.InputBindResult.InputBindResult(Parcel)",1,1,1
"com.android.internal.view.InputBindResult.describeContents()",1,1,1
"com.android.internal.view.InputBindResult.toString()",1,1,1
"com.android.internal.view.InputBindResult.writeToParcel(Parcel,int)",1,1,1
"com.android.internal.view.InputConnectionWrapper.InputConnectionWrapper(IInputContext)",1,1,1
"com.android.internal.view.InputConnectionWrapper.InputContextCallback.dispose()",1,1,2
"com.android.internal.view.InputConnectionWrapper.InputContextCallback.getInstance()",1,1,2
"com.android.internal.view.InputConnectionWrapper.InputContextCallback.setCursorCapsMode(int,int)",1,2,2
"com.android.internal.view.InputConnectionWrapper.InputContextCallback.setExtractedText(ExtractedText,int)",1,2,2
"com.android.internal.view.InputConnectionWrapper.InputContextCallback.setSelectedText(CharSequence,int)",1,2,2
"com.android.internal.view.InputConnectionWrapper.InputContextCallback.setTextAfterCursor(CharSequence,int)",1,2,2
"com.android.internal.view.InputConnectionWrapper.InputContextCallback.setTextBeforeCursor(CharSequence,int)",1,2,2
"com.android.internal.view.InputConnectionWrapper.InputContextCallback.waitForResultLocked()",3,3,4
"com.android.internal.view.InputConnectionWrapper.beginBatchEdit()",1,1,2
"com.android.internal.view.InputConnectionWrapper.clearMetaKeyStates(int)",1,1,2
"com.android.internal.view.InputConnectionWrapper.commitCompletion(CompletionInfo)",1,1,2
"com.android.internal.view.InputConnectionWrapper.commitCorrection(CorrectionInfo)",1,1,2
"com.android.internal.view.InputConnectionWrapper.commitText(CharSequence,int)",1,1,2
"com.android.internal.view.InputConnectionWrapper.deleteSurroundingText(int,int)",1,1,2
"com.android.internal.view.InputConnectionWrapper.endBatchEdit()",1,1,2
"com.android.internal.view.InputConnectionWrapper.finishComposingText()",1,1,2
"com.android.internal.view.InputConnectionWrapper.getCursorCapsMode(int)",1,1,3
"com.android.internal.view.InputConnectionWrapper.getExtractedText(ExtractedTextRequest,int)",1,1,3
"com.android.internal.view.InputConnectionWrapper.getSelectedText(int)",1,1,3
"com.android.internal.view.InputConnectionWrapper.getTextAfterCursor(int,int)",1,1,3
"com.android.internal.view.InputConnectionWrapper.getTextBeforeCursor(int,int)",1,1,3
"com.android.internal.view.InputConnectionWrapper.performContextMenuAction(int)",1,1,2
"com.android.internal.view.InputConnectionWrapper.performEditorAction(int)",1,1,2
"com.android.internal.view.InputConnectionWrapper.performPrivateCommand(String,Bundle)",1,1,2
"com.android.internal.view.InputConnectionWrapper.reportFullscreenMode(boolean)",1,1,2
"com.android.internal.view.InputConnectionWrapper.sendKeyEvent(KeyEvent)",1,1,2
"com.android.internal.view.InputConnectionWrapper.setComposingRegion(int,int)",1,1,2
"com.android.internal.view.InputConnectionWrapper.setComposingText(CharSequence,int)",1,1,2
"com.android.internal.view.InputConnectionWrapper.setSelection(int,int)",1,1,2
"com.android.internal.view.StandaloneActionMode.StandaloneActionMode(Context,ActionBarContextView,Callback)",1,1,1
"com.android.internal.view.StandaloneActionMode.finish()",2,1,2
"com.android.internal.view.StandaloneActionMode.getCustomView()",1,2,2
"com.android.internal.view.StandaloneActionMode.getMenu()",1,1,1
"com.android.internal.view.StandaloneActionMode.getMenuInflater()",1,1,1
"com.android.internal.view.StandaloneActionMode.getSubtitle()",1,1,1
"com.android.internal.view.StandaloneActionMode.getTitle()",1,1,1
"com.android.internal.view.StandaloneActionMode.invalidate()",1,1,1
"com.android.internal.view.StandaloneActionMode.onCloseMenu(MenuBuilder,boolean)",1,1,1
"com.android.internal.view.StandaloneActionMode.onCloseSubMenu(SubMenuBuilder)",1,1,1
"com.android.internal.view.StandaloneActionMode.onMenuItemSelected(MenuBuilder,MenuItem)",1,1,1
"com.android.internal.view.StandaloneActionMode.onMenuModeChange(MenuBuilder)",1,1,1
"com.android.internal.view.StandaloneActionMode.onSubMenuSelected(SubMenuBuilder)",2,1,2
"com.android.internal.view.StandaloneActionMode.setCustomView(View)",1,1,2
"com.android.internal.view.StandaloneActionMode.setSubtitle(CharSequence)",1,1,1
"com.android.internal.view.StandaloneActionMode.setSubtitle(int)",1,1,1
"com.android.internal.view.StandaloneActionMode.setTitle(CharSequence)",1,1,1
"com.android.internal.view.StandaloneActionMode.setTitle(int)",1,1,1
"com.android.internal.view.WindowManagerPolicyThread.getLooper()",1,1,1
"com.android.internal.view.WindowManagerPolicyThread.getThread()",1,1,1
"com.android.internal.view.WindowManagerPolicyThread.set(Thread,Looper)",1,1,1
"com.android.internal.view.menu.ActionMenu.ActionMenu(Context)",1,1,1
"com.android.internal.view.menu.ActionMenu.add(CharSequence)",1,1,1
"com.android.internal.view.menu.ActionMenu.add(int)",1,1,1
"com.android.internal.view.menu.ActionMenu.add(int,int,int,CharSequence)",1,1,1
"com.android.internal.view.menu.ActionMenu.add(int,int,int,int)",1,1,1
"com.android.internal.view.menu.ActionMenu.addIntentOptions(int,int,int,ComponentName,Intent[],Intent,int,MenuItem[])",1,4,7
"com.android.internal.view.menu.ActionMenu.addSubMenu(CharSequence)",1,1,1
"com.android.internal.view.menu.ActionMenu.addSubMenu(int)",1,1,1
"com.android.internal.view.menu.ActionMenu.addSubMenu(int,int,int,CharSequence)",1,1,1
"com.android.internal.view.menu.ActionMenu.addSubMenu(int,int,int,int)",1,1,1
"com.android.internal.view.menu.ActionMenu.clear()",1,1,1
"com.android.internal.view.menu.ActionMenu.close()",1,1,1
"com.android.internal.view.menu.ActionMenu.findItem(int)",1,1,1
"com.android.internal.view.menu.ActionMenu.findItemIndex(int)",3,2,3
"com.android.internal.view.menu.ActionMenu.findItemWithShortcut(int,KeyEvent)",3,3,4
"com.android.internal.view.menu.ActionMenu.getContext()",1,1,1
"com.android.internal.view.menu.ActionMenu.getItem(int)",1,1,1
"com.android.internal.view.menu.ActionMenu.hasVisibleItems()",3,2,3
"com.android.internal.view.menu.ActionMenu.isShortcutKey(int,KeyEvent)",1,1,1
"com.android.internal.view.menu.ActionMenu.performIdentifierAction(int,int)",2,1,2
"com.android.internal.view.menu.ActionMenu.performShortcut(int,KeyEvent,int)",2,1,2
"com.android.internal.view.menu.ActionMenu.removeGroup(int)",1,3,3
"com.android.internal.view.menu.ActionMenu.removeItem(int)",1,1,1
"com.android.internal.view.menu.ActionMenu.setGroupCheckable(int,boolean,boolean)",1,3,3
"com.android.internal.view.menu.ActionMenu.setGroupEnabled(int,boolean)",1,3,3
"com.android.internal.view.menu.ActionMenu.setGroupVisible(int,boolean)",1,3,3
"com.android.internal.view.menu.ActionMenu.setQwertyMode(boolean)",1,1,1
"com.android.internal.view.menu.ActionMenu.size()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.ActionMenuItem(Context,int,int,int,int,CharSequence)",1,1,1
"com.android.internal.view.menu.ActionMenuItem.getActionView()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.getAlphabeticShortcut()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.getGroupId()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.getIcon()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.getIntent()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.getItemId()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.getMenuInfo()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.getNumericShortcut()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.getOrder()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.getSubMenu()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.getTitle()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.getTitleCondensed()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.hasSubMenu()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.invoke()",3,3,4
"com.android.internal.view.menu.ActionMenuItem.isCheckable()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.isChecked()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.isEnabled()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.isVisible()",1,1,1
"com.android.internal.view.menu.ActionMenuItem.setActionView(View)",1,1,1
"com.android.internal.view.menu.ActionMenuItem.setAlphabeticShortcut(char)",1,1,1
"com.android.internal.view.menu.ActionMenuItem.setCheckable(boolean)",1,1,2
"com.android.internal.view.menu.ActionMenuItem.setChecked(boolean)",1,1,2
"com.android.internal.view.menu.ActionMenuItem.setEnabled(boolean)",1,1,2
"com.android.internal.view.menu.ActionMenuItem.setExclusiveCheckable(boolean)",1,1,2
"com.android.internal.view.menu.ActionMenuItem.setIcon(Drawable)",1,1,1
"com.android.internal.view.menu.ActionMenuItem.setIcon(int)",1,1,1
"com.android.internal.view.menu.ActionMenuItem.setIntent(Intent)",1,1,1
"com.android.internal.view.menu.ActionMenuItem.setNumericShortcut(char)",1,1,1
"com.android.internal.view.menu.ActionMenuItem.setOnMenuItemClickListener(OnMenuItemClickListener)",1,1,1
"com.android.internal.view.menu.ActionMenuItem.setShortcut(char,char)",1,1,1
"com.android.internal.view.menu.ActionMenuItem.setShowAsAction(int)",1,1,1
"com.android.internal.view.menu.ActionMenuItem.setTitle(CharSequence)",1,1,1
"com.android.internal.view.menu.ActionMenuItem.setTitle(int)",1,1,1
"com.android.internal.view.menu.ActionMenuItem.setTitleCondensed(CharSequence)",1,1,1
"com.android.internal.view.menu.ActionMenuItem.setVisible(boolean)",1,1,2
"com.android.internal.view.menu.ActionMenuItemView.ActionMenuItemView(Context)",1,1,1
"com.android.internal.view.menu.ActionMenuItemView.ActionMenuItemView(Context,AttributeSet)",1,1,1
"com.android.internal.view.menu.ActionMenuItemView.ActionMenuItemView(Context,AttributeSet,int)",1,1,1
"com.android.internal.view.menu.ActionMenuItemView.getItemData()",1,1,1
"com.android.internal.view.menu.ActionMenuItemView.hasText()",1,1,1
"com.android.internal.view.menu.ActionMenuItemView.initialize(MenuItemImpl,int)",1,1,2
"com.android.internal.view.menu.ActionMenuItemView.onClick(View)",1,2,2
"com.android.internal.view.menu.ActionMenuItemView.onFinishInflate()",1,1,1
"com.android.internal.view.menu.ActionMenuItemView.prefersCondensedTitle()",1,1,1
"com.android.internal.view.menu.ActionMenuItemView.setCheckable(boolean)",1,1,1
"com.android.internal.view.menu.ActionMenuItemView.setChecked(boolean)",1,1,1
"com.android.internal.view.menu.ActionMenuItemView.setEnabled(boolean)",1,1,1
"com.android.internal.view.menu.ActionMenuItemView.setIcon(Drawable)",1,2,2
"com.android.internal.view.menu.ActionMenuItemView.setItemInvoker(ItemInvoker)",1,1,1
"com.android.internal.view.menu.ActionMenuItemView.setShortcut(boolean,char)",1,1,1
"com.android.internal.view.menu.ActionMenuItemView.setTitle(CharSequence)",1,3,3
"com.android.internal.view.menu.ActionMenuItemView.showsIcon()",1,1,1
"com.android.internal.view.menu.ActionMenuView.ActionMenuView(Context)",1,1,1
"com.android.internal.view.menu.ActionMenuView.ActionMenuView(Context,AttributeSet)",1,1,1
"com.android.internal.view.menu.ActionMenuView.OpenOverflowRunnable.OpenOverflowRunnable(MenuPopupHelper)",1,1,1
"com.android.internal.view.menu.ActionMenuView.OpenOverflowRunnable.run()",1,1,1
"com.android.internal.view.menu.ActionMenuView.OverflowMenuButton.OverflowMenuButton(Context)",1,1,1
"com.android.internal.view.menu.ActionMenuView.OverflowMenuButton.performClick()",2,1,2
"com.android.internal.view.menu.ActionMenuView.OverflowPopup.OverflowPopup(Context,MenuBuilder,View,boolean)",1,1,1
"com.android.internal.view.menu.ActionMenuView.OverflowPopup.onDismiss()",1,1,1
"com.android.internal.view.menu.ActionMenuView.addItemView(boolean,ActionMenuItemView)",1,2,3
"com.android.internal.view.menu.ActionMenuView.generateDefaultLayoutParams()",1,1,1
"com.android.internal.view.menu.ActionMenuView.generateLayoutParams(LayoutParams)",1,1,1
"com.android.internal.view.menu.ActionMenuView.getMaxActionButtons()",1,1,1
"com.android.internal.view.menu.ActionMenuView.getWindowAnimations()",1,1,1
"com.android.internal.view.menu.ActionMenuView.hideOverflowMenu()",3,3,3
"com.android.internal.view.menu.ActionMenuView.initialize(MenuBuilder,int)",1,1,1
"com.android.internal.view.menu.ActionMenuView.invokeItem(MenuItemImpl)",1,1,1
"com.android.internal.view.menu.ActionMenuView.isOverflowMenuOpen()",1,1,1
"com.android.internal.view.menu.ActionMenuView.isOverflowMenuShowing()",1,2,2
"com.android.internal.view.menu.ActionMenuView.isOverflowReserved()",1,1,1
"com.android.internal.view.menu.ActionMenuView.makeActionViewLayoutParams()",1,1,1
"com.android.internal.view.menu.ActionMenuView.makeDividerLayoutParams()",1,1,1
"com.android.internal.view.menu.ActionMenuView.makeDividerView()",1,1,1
"com.android.internal.view.menu.ActionMenuView.onConfigurationChanged(Configuration)",1,4,4
"com.android.internal.view.menu.ActionMenuView.onDetachedFromWindow()",1,3,3
"com.android.internal.view.menu.ActionMenuView.openOverflowMenu()",1,1,1
"com.android.internal.view.menu.ActionMenuView.setOverflowReserved(boolean)",1,1,1
"com.android.internal.view.menu.ActionMenuView.showOverflowMenu()",2,3,3
"com.android.internal.view.menu.ActionMenuView.updateChildren(boolean)",1,7,8
"com.android.internal.view.menu.ContextMenuBuilder.ContextMenuBuilder(Context)",1,1,1
"com.android.internal.view.menu.ContextMenuBuilder.setHeaderIcon(Drawable)",1,1,1
"com.android.internal.view.menu.ContextMenuBuilder.setHeaderIcon(int)",1,1,1
"com.android.internal.view.menu.ContextMenuBuilder.setHeaderTitle(CharSequence)",1,1,1
"com.android.internal.view.menu.ContextMenuBuilder.setHeaderTitle(int)",1,1,1
"com.android.internal.view.menu.ContextMenuBuilder.setHeaderView(View)",1,1,1
"com.android.internal.view.menu.ContextMenuBuilder.show(View,IBinder)",2,3,3
"com.android.internal.view.menu.ExpandedMenuView.ExpandedMenuView(Context,AttributeSet)",1,1,1
"com.android.internal.view.menu.ExpandedMenuView.getWindowAnimations()",1,1,1
"com.android.internal.view.menu.ExpandedMenuView.initialize(MenuBuilder,int)",1,1,1
"com.android.internal.view.menu.ExpandedMenuView.invokeItem(MenuItemImpl)",1,1,1
"com.android.internal.view.menu.ExpandedMenuView.onDetachedFromWindow()",1,1,1
"com.android.internal.view.menu.ExpandedMenuView.onItemClick(AdapterView,View,int,long)",1,1,1
"com.android.internal.view.menu.ExpandedMenuView.recycleOnMeasure()",1,1,1
"com.android.internal.view.menu.ExpandedMenuView.updateChildren(boolean)",1,3,3
"com.android.internal.view.menu.IconMenuItemView.IconMenuItemView(Context,AttributeSet)",1,1,1
"com.android.internal.view.menu.IconMenuItemView.IconMenuItemView(Context,AttributeSet,int)",1,2,2
"com.android.internal.view.menu.IconMenuItemView.drawableStateChanged()",1,4,6
"com.android.internal.view.menu.IconMenuItemView.getItemData()",1,1,1
"com.android.internal.view.menu.IconMenuItemView.getTextAppropriateLayoutParams()",1,1,2
"com.android.internal.view.menu.IconMenuItemView.initialize(CharSequence,Drawable)",1,2,2
"com.android.internal.view.menu.IconMenuItemView.initialize(MenuItemImpl,int)",1,1,2
"com.android.internal.view.menu.IconMenuItemView.onLayout(boolean,int,int,int,int)",1,1,1
"com.android.internal.view.menu.IconMenuItemView.onTextChanged(CharSequence,int,int,int)",1,1,1
"com.android.internal.view.menu.IconMenuItemView.performClick()",3,3,4
"com.android.internal.view.menu.IconMenuItemView.positionIcon()",2,1,2
"com.android.internal.view.menu.IconMenuItemView.prefersCondensedTitle()",1,1,1
"com.android.internal.view.menu.IconMenuItemView.setCaptionMode(boolean)",2,4,5
"com.android.internal.view.menu.IconMenuItemView.setCheckable(boolean)",1,1,1
"com.android.internal.view.menu.IconMenuItemView.setChecked(boolean)",1,1,1
"com.android.internal.view.menu.IconMenuItemView.setIcon(Drawable)",1,2,2
"com.android.internal.view.menu.IconMenuItemView.setIconMenuView(IconMenuView)",1,1,1
"com.android.internal.view.menu.IconMenuItemView.setItemInvoker(ItemInvoker)",1,1,1
"com.android.internal.view.menu.IconMenuItemView.setShortcut(boolean,char)",1,2,2
"com.android.internal.view.menu.IconMenuItemView.setTitle(CharSequence)",1,3,3
"com.android.internal.view.menu.IconMenuItemView.setVisibility(int)",1,2,2
"com.android.internal.view.menu.IconMenuItemView.showsIcon()",1,1,1
"com.android.internal.view.menu.IconMenuView.IconMenuView(Context,AttributeSet)",1,3,5
"com.android.internal.view.menu.IconMenuView.LayoutParams.LayoutParams(Context,AttributeSet)",1,1,1
"com.android.internal.view.menu.IconMenuView.LayoutParams.LayoutParams(int,int)",1,1,1
"com.android.internal.view.menu.IconMenuView.SavedState.SavedState(Parcel)",1,1,1
"com.android.internal.view.menu.IconMenuView.SavedState.SavedState(Parcelable,int)",1,1,1
"com.android.internal.view.menu.IconMenuView.SavedState.writeToParcel(Parcel,int)",1,1,1
"com.android.internal.view.menu.IconMenuView.addItemView(IconMenuItemView)",1,1,1
"com.android.internal.view.menu.IconMenuView.calculateItemFittingMetadata(int)",4,2,4
"com.android.internal.view.menu.IconMenuView.checkLayoutParams(LayoutParams)",1,1,1
"com.android.internal.view.menu.IconMenuView.createMoreItemView()",1,2,2
"com.android.internal.view.menu.IconMenuView.dispatchKeyEvent(KeyEvent)",5,6,6
"com.android.internal.view.menu.IconMenuView.doItemsFit()",5,3,5
"com.android.internal.view.menu.IconMenuView.generateLayoutParams(AttributeSet)",1,1,1
"com.android.internal.view.menu.IconMenuView.getLayout()",1,1,1
"com.android.internal.view.menu.IconMenuView.getLayoutNumRows()",1,1,1
"com.android.internal.view.menu.IconMenuView.getNumActualItemsShown()",1,1,1
"com.android.internal.view.menu.IconMenuView.getWindowAnimations()",1,1,1
"com.android.internal.view.menu.IconMenuView.initialize(MenuBuilder,int)",1,1,1
"com.android.internal.view.menu.IconMenuView.invokeItem(MenuItemImpl)",1,1,1
"com.android.internal.view.menu.IconMenuView.layoutItems(int)",5,2,5
"com.android.internal.view.menu.IconMenuView.layoutItemsUsingGravity(int,int)",1,1,3
"com.android.internal.view.menu.IconMenuView.markStaleChildren()",1,2,2
"com.android.internal.view.menu.IconMenuView.onAttachedToWindow()",1,1,1
"com.android.internal.view.menu.IconMenuView.onDetachedFromWindow()",1,1,1
"com.android.internal.view.menu.IconMenuView.onDraw(Canvas)",1,5,5
"com.android.internal.view.menu.IconMenuView.onLayout(boolean,int,int,int,int)",1,2,2
"com.android.internal.view.menu.IconMenuView.onMeasure(int,int)",1,3,3
"com.android.internal.view.menu.IconMenuView.onRestoreInstanceState(Parcelable)",2,2,3
"com.android.internal.view.menu.IconMenuView.onSaveInstanceState()",3,2,3
"com.android.internal.view.menu.IconMenuView.onWindowFocusChanged(boolean)",1,2,2
"com.android.internal.view.menu.IconMenuView.positionChildren(int,int)",1,7,9
"com.android.internal.view.menu.IconMenuView.run()",1,2,2
"com.android.internal.view.menu.IconMenuView.setChildrenCaptionMode(boolean)",1,2,2
"com.android.internal.view.menu.IconMenuView.setCycleShortcutCaptionMode(boolean)",1,2,2
"com.android.internal.view.menu.IconMenuView.updateChildren(boolean)",1,5,5
"com.android.internal.view.menu.ListMenuItemView.ListMenuItemView(Context,AttributeSet)",1,1,1
"com.android.internal.view.menu.ListMenuItemView.ListMenuItemView(Context,AttributeSet,int)",1,1,1
"com.android.internal.view.menu.ListMenuItemView.getItemData()",1,1,1
"com.android.internal.view.menu.ListMenuItemView.initialize(MenuItemImpl,int)",1,1,2
"com.android.internal.view.menu.ListMenuItemView.insertCheckBox()",1,1,1
"com.android.internal.view.menu.ListMenuItemView.insertIconView()",1,1,1
"com.android.internal.view.menu.ListMenuItemView.insertRadioButton()",1,1,1
"com.android.internal.view.menu.ListMenuItemView.onFinishInflate()",1,2,2
"com.android.internal.view.menu.ListMenuItemView.prefersCondensedTitle()",1,1,1
"com.android.internal.view.menu.ListMenuItemView.setCheckable(boolean)",2,6,11
"com.android.internal.view.menu.ListMenuItemView.setChecked(boolean)",1,4,4
"com.android.internal.view.menu.ListMenuItemView.setIcon(Drawable)",3,4,7
"com.android.internal.view.menu.ListMenuItemView.setShortcut(boolean,char)",1,4,5
"com.android.internal.view.menu.ListMenuItemView.setTitle(CharSequence)",1,4,4
"com.android.internal.view.menu.ListMenuItemView.showsIcon()",1,1,1
"com.android.internal.view.menu.MenuBuilder.MenuAdapter.MenuAdapter(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.MenuAdapter.getCount()",1,1,1
"com.android.internal.view.menu.MenuBuilder.MenuAdapter.getItem(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.MenuAdapter.getItemId(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.MenuAdapter.getOffset()",2,2,2
"com.android.internal.view.menu.MenuBuilder.MenuAdapter.getView(int,View,ViewGroup)",2,2,2
"com.android.internal.view.menu.MenuBuilder.MenuBuilder(Context)",1,1,1
"com.android.internal.view.menu.MenuBuilder.MenuType.MenuType(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.MenuType.getInflater()",2,3,5
"com.android.internal.view.menu.MenuBuilder.MenuType.getMenuView(ViewGroup)",2,4,5
"com.android.internal.view.menu.MenuBuilder.MenuType.hasMenuView()",1,2,2
"com.android.internal.view.menu.MenuBuilder.OverflowMenuAdapter.OverflowMenuAdapter(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.OverflowMenuAdapter.getCount()",1,1,1
"com.android.internal.view.menu.MenuBuilder.OverflowMenuAdapter.getItem(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.add(CharSequence)",1,1,1
"com.android.internal.view.menu.MenuBuilder.add(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.add(int,int,int,CharSequence)",1,1,1
"com.android.internal.view.menu.MenuBuilder.add(int,int,int,int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.addIntentOptions(int,int,int,ComponentName,Intent[],Intent,int,MenuItem[])",1,4,7
"com.android.internal.view.menu.MenuBuilder.addInternal(int,int,int,CharSequence)",1,2,2
"com.android.internal.view.menu.MenuBuilder.addSubMenu(CharSequence)",1,1,1
"com.android.internal.view.menu.MenuBuilder.addSubMenu(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.addSubMenu(int,int,int,CharSequence)",1,1,1
"com.android.internal.view.menu.MenuBuilder.addSubMenu(int,int,int,int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.clear()",1,1,1
"com.android.internal.view.menu.MenuBuilder.clearAll()",1,1,1
"com.android.internal.view.menu.MenuBuilder.clearHeader()",1,1,1
"com.android.internal.view.menu.MenuBuilder.clearMenuViews()",1,3,5
"com.android.internal.view.menu.MenuBuilder.close()",1,1,1
"com.android.internal.view.menu.MenuBuilder.close(boolean)",1,2,2
"com.android.internal.view.menu.MenuBuilder.findGroupIndex(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.findGroupIndex(int,int)",3,2,4
"com.android.internal.view.menu.MenuBuilder.findInsertIndex(ArrayList<MenuItemImpl>,int)",3,2,3
"com.android.internal.view.menu.MenuBuilder.findItem(int)",5,4,5
"com.android.internal.view.menu.MenuBuilder.findItemIndex(int)",3,2,3
"com.android.internal.view.menu.MenuBuilder.findItemWithShortcutForKey(int,KeyEvent)",5,4,12
"com.android.internal.view.menu.MenuBuilder.findItemsWithShortcutForKey(int,KeyEvent)",2,8,14
"com.android.internal.view.menu.MenuBuilder.flagActionItems(boolean)",2,7,13
"com.android.internal.view.menu.MenuBuilder.getActionItems(boolean)",1,1,1
"com.android.internal.view.menu.MenuBuilder.getAlertDialogTheme(Context)",1,1,1
"com.android.internal.view.menu.MenuBuilder.getCallback()",1,1,1
"com.android.internal.view.menu.MenuBuilder.getContext()",1,1,1
"com.android.internal.view.menu.MenuBuilder.getHeaderIcon()",1,1,1
"com.android.internal.view.menu.MenuBuilder.getHeaderTitle()",1,1,1
"com.android.internal.view.menu.MenuBuilder.getHeaderView()",1,1,1
"com.android.internal.view.menu.MenuBuilder.getItem(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.getMenuAdapter(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.getMenuType(int)",1,1,2
"com.android.internal.view.menu.MenuBuilder.getMenuView(int,ViewGroup)",1,4,4
"com.android.internal.view.menu.MenuBuilder.getNonActionItems(boolean)",1,1,1
"com.android.internal.view.menu.MenuBuilder.getNumIconMenuItemsShown()",1,3,3
"com.android.internal.view.menu.MenuBuilder.getOptionalIconsVisible()",1,1,1
"com.android.internal.view.menu.MenuBuilder.getOrdering(int)",2,1,3
"com.android.internal.view.menu.MenuBuilder.getOverflowItem(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.getOverflowMenuAdapter(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.getResources()",1,1,1
"com.android.internal.view.menu.MenuBuilder.getRootMenu()",1,1,1
"com.android.internal.view.menu.MenuBuilder.getVisibleItems()",2,3,4
"com.android.internal.view.menu.MenuBuilder.hasVisibleItems()",3,2,3
"com.android.internal.view.menu.MenuBuilder.isQwertyMode()",1,1,1
"com.android.internal.view.menu.MenuBuilder.isShortcutKey(int,KeyEvent)",1,1,1
"com.android.internal.view.menu.MenuBuilder.isShortcutsVisible()",1,1,1
"com.android.internal.view.menu.MenuBuilder.onItemActionRequestChanged(MenuItemImpl)",1,1,1
"com.android.internal.view.menu.MenuBuilder.onItemVisibleChanged(MenuItemImpl)",1,1,1
"com.android.internal.view.menu.MenuBuilder.onItemsChanged(boolean)",1,5,7
"com.android.internal.view.menu.MenuBuilder.performIdentifierAction(int,int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.performItemAction(MenuItem,int)",2,6,7
"com.android.internal.view.menu.MenuBuilder.performShortcut(int,KeyEvent,int)",1,3,3
"com.android.internal.view.menu.MenuBuilder.refreshShortcuts(boolean,boolean)",1,3,3
"com.android.internal.view.menu.MenuBuilder.removeGroup(int)",1,4,4
"com.android.internal.view.menu.MenuBuilder.removeItem(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.removeItemAt(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.removeItemAtInt(int,boolean)",2,3,4
"com.android.internal.view.menu.MenuBuilder.restoreHierarchyState(Bundle)",3,3,4
"com.android.internal.view.menu.MenuBuilder.saveHierarchyState(Bundle)",3,3,4
"com.android.internal.view.menu.MenuBuilder.setCallback(Callback)",1,1,1
"com.android.internal.view.menu.MenuBuilder.setCurrentMenuInfo(ContextMenuInfo)",1,1,1
"com.android.internal.view.menu.MenuBuilder.setDefaultShowAsAction(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.setExclusiveItemChecked(MenuItem)",5,3,5
"com.android.internal.view.menu.MenuBuilder.setGroupCheckable(int,boolean,boolean)",1,3,3
"com.android.internal.view.menu.MenuBuilder.setGroupEnabled(int,boolean)",1,3,3
"com.android.internal.view.menu.MenuBuilder.setGroupVisible(int,boolean)",1,4,5
"com.android.internal.view.menu.MenuBuilder.setHeaderIconInt(Drawable)",1,1,1
"com.android.internal.view.menu.MenuBuilder.setHeaderIconInt(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.setHeaderInternal(int,CharSequence,int,Drawable,View)",1,4,6
"com.android.internal.view.menu.MenuBuilder.setHeaderTitleInt(CharSequence)",1,1,1
"com.android.internal.view.menu.MenuBuilder.setHeaderTitleInt(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.setHeaderViewInt(View)",1,1,1
"com.android.internal.view.menu.MenuBuilder.setMaxActionItems(int)",1,1,1
"com.android.internal.view.menu.MenuBuilder.setOptionalIconsVisible(boolean)",1,1,1
"com.android.internal.view.menu.MenuBuilder.setQwertyMode(boolean)",1,1,1
"com.android.internal.view.menu.MenuBuilder.setShortcutsVisible(boolean)",2,2,3
"com.android.internal.view.menu.MenuBuilder.size()",1,1,1
"com.android.internal.view.menu.MenuDialogHelper.MenuDialogHelper(MenuBuilder)",1,1,1
"com.android.internal.view.menu.MenuDialogHelper.dismiss()",1,2,2
"com.android.internal.view.menu.MenuDialogHelper.onClick(DialogInterface,int)",1,1,1
"com.android.internal.view.menu.MenuDialogHelper.onKey(DialogInterface,int,KeyEvent)",10,13,14
"com.android.internal.view.menu.MenuDialogHelper.show(IBinder)",1,2,3
"com.android.internal.view.menu.MenuItemImpl.MenuItemImpl(MenuBuilder,int,int,int,int,CharSequence,int)",1,2,2
"com.android.internal.view.menu.MenuItemImpl.clearItemViews()",1,1,2
"com.android.internal.view.menu.MenuItemImpl.createItemView(int,ViewGroup)",1,1,1
"com.android.internal.view.menu.MenuItemImpl.getActionView()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.getAlphabeticShortcut()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.getCallback()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.getGroupId()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.getIcon()",3,2,3
"com.android.internal.view.menu.MenuItemImpl.getIntent()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.getItemId()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.getItemView(int,ViewGroup)",1,2,2
"com.android.internal.view.menu.MenuItemImpl.getLayoutInflater(int)",1,1,1
"com.android.internal.view.menu.MenuItemImpl.getMenuInfo()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.getNumericShortcut()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.getOrder()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.getOrdering()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.getShortcut()",1,1,2
"com.android.internal.view.menu.MenuItemImpl.getShortcutLabel()",3,2,6
"com.android.internal.view.menu.MenuItemImpl.getSubMenu()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.getTitle()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.getTitleCondensed()",1,1,2
"com.android.internal.view.menu.MenuItemImpl.getTitleForItemView(ItemView)",1,3,3
"com.android.internal.view.menu.MenuItemImpl.hasItemView(int)",1,2,2
"com.android.internal.view.menu.MenuItemImpl.hasSubMenu()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.haveAnyOpenedIconCapableItemViews()",3,3,4
"com.android.internal.view.menu.MenuItemImpl.invoke()",5,6,8
"com.android.internal.view.menu.MenuItemImpl.isActionButton()",1,2,2
"com.android.internal.view.menu.MenuItemImpl.isCheckable()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.isChecked()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.isEnabled()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.isExclusiveCheckable()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.isVisible()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.refreshShortcutOnItemViews()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.refreshShortcutOnItemViews(boolean,boolean)",1,3,5
"com.android.internal.view.menu.MenuItemImpl.requestsActionButton()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.requiresActionButton()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.setActionView(View)",1,1,1
"com.android.internal.view.menu.MenuItemImpl.setAlphabeticShortcut(char)",2,1,2
"com.android.internal.view.menu.MenuItemImpl.setCallback(Runnable)",1,1,1
"com.android.internal.view.menu.MenuItemImpl.setCheckable(boolean)",1,4,5
"com.android.internal.view.menu.MenuItemImpl.setChecked(boolean)",1,2,2
"com.android.internal.view.menu.MenuItemImpl.setCheckedInt(boolean)",1,4,5
"com.android.internal.view.menu.MenuItemImpl.setEnabled(boolean)",1,3,4
"com.android.internal.view.menu.MenuItemImpl.setExclusiveCheckable(boolean)",1,1,2
"com.android.internal.view.menu.MenuItemImpl.setIcon(Drawable)",1,1,1
"com.android.internal.view.menu.MenuItemImpl.setIcon(int)",1,3,3
"com.android.internal.view.menu.MenuItemImpl.setIconOnViews(Drawable)",1,4,4
"com.android.internal.view.menu.MenuItemImpl.setIntent(Intent)",1,1,1
"com.android.internal.view.menu.MenuItemImpl.setIsActionButton(boolean)",1,1,2
"com.android.internal.view.menu.MenuItemImpl.setItemView(int,ItemView)",1,1,1
"com.android.internal.view.menu.MenuItemImpl.setMenuInfo(ContextMenuInfo)",1,1,1
"com.android.internal.view.menu.MenuItemImpl.setNumericShortcut(char)",2,1,2
"com.android.internal.view.menu.MenuItemImpl.setOnMenuItemClickListener(OnMenuItemClickListener)",1,1,1
"com.android.internal.view.menu.MenuItemImpl.setShortcut(char,char)",1,1,1
"com.android.internal.view.menu.MenuItemImpl.setShowAsAction(int)",2,2,3
"com.android.internal.view.menu.MenuItemImpl.setSubMenu(SubMenuBuilder)",2,1,3
"com.android.internal.view.menu.MenuItemImpl.setTitle(CharSequence)",3,5,6
"com.android.internal.view.menu.MenuItemImpl.setTitle(int)",1,1,1
"com.android.internal.view.menu.MenuItemImpl.setTitleCondensed(CharSequence)",1,4,5
"com.android.internal.view.menu.MenuItemImpl.setVisible(boolean)",1,2,2
"com.android.internal.view.menu.MenuItemImpl.setVisibleInt(boolean)",1,1,2
"com.android.internal.view.menu.MenuItemImpl.shouldShowIcon(int)",1,4,4
"com.android.internal.view.menu.MenuItemImpl.shouldShowShortcut()",1,2,2
"com.android.internal.view.menu.MenuItemImpl.showsTextAsAction()",1,1,1
"com.android.internal.view.menu.MenuItemImpl.toString()",1,1,1
"com.android.internal.view.menu.MenuPopupHelper.MenuPopupHelper(Context,MenuBuilder)",1,1,1
"com.android.internal.view.menu.MenuPopupHelper.MenuPopupHelper(Context,MenuBuilder,View)",1,1,1
"com.android.internal.view.menu.MenuPopupHelper.MenuPopupHelper(Context,MenuBuilder,View,boolean)",1,1,2
"com.android.internal.view.menu.MenuPopupHelper.dismiss()",1,2,2
"com.android.internal.view.menu.MenuPopupHelper.isShowing()",1,2,2
"com.android.internal.view.menu.MenuPopupHelper.measureContentWidth(MenuAdapter)",1,2,3
"com.android.internal.view.menu.MenuPopupHelper.onDismiss()",1,2,2
"com.android.internal.view.menu.MenuPopupHelper.onGlobalLayout()",1,5,5
"com.android.internal.view.menu.MenuPopupHelper.onItemClick(AdapterView<?>,View,int,long)",1,2,2
"com.android.internal.view.menu.MenuPopupHelper.onKey(View,int,KeyEvent)",2,3,3
"com.android.internal.view.menu.MenuPopupHelper.show()",2,5,6
"com.android.internal.view.menu.SubMenuBuilder.SubMenuBuilder(Context,MenuBuilder,MenuItemImpl)",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.getCallback()",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.getItem()",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.getParentMenu()",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.getRootMenu()",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.isQwertyMode()",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.isShortcutsVisible()",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.setCallback(Callback)",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.setHeaderIcon(Drawable)",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.setHeaderIcon(int)",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.setHeaderTitle(CharSequence)",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.setHeaderTitle(int)",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.setHeaderView(View)",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.setIcon(Drawable)",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.setIcon(int)",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.setQwertyMode(boolean)",1,1,1
"com.android.internal.view.menu.SubMenuBuilder.setShortcutsVisible(boolean)",1,1,1
"com.android.internal.widget.ActionBarContainer.ActionBarContainer(Context)",1,1,1
"com.android.internal.widget.ActionBarContainer.ActionBarContainer(Context,AttributeSet)",1,1,1
"com.android.internal.widget.ActionBarContainer.onTouchEvent(MotionEvent)",1,1,1
"com.android.internal.widget.ActionBarContextView.ActionBarContextView(Context)",1,1,1
"com.android.internal.widget.ActionBarContextView.ActionBarContextView(Context,AttributeSet)",1,1,1
"com.android.internal.widget.ActionBarContextView.ActionBarContextView(Context,AttributeSet,int)",1,1,1
"com.android.internal.widget.ActionBarContextView.closeMode()",3,2,3
"com.android.internal.widget.ActionBarContextView.finishAnimation()",1,3,3
"com.android.internal.widget.ActionBarContextView.generateDefaultLayoutParams()",1,1,1
"com.android.internal.widget.ActionBarContextView.getSubtitle()",1,1,1
"com.android.internal.widget.ActionBarContextView.getTitle()",1,1,1
"com.android.internal.widget.ActionBarContextView.hideOverflowMenu()",2,2,2
"com.android.internal.widget.ActionBarContextView.initForMode(ActionMode)",1,4,4
"com.android.internal.widget.ActionBarContextView.initTitle()",1,7,8
"com.android.internal.widget.ActionBarContextView.isOverflowMenuShowing()",2,2,2
"com.android.internal.widget.ActionBarContextView.killMode()",1,1,1
"com.android.internal.widget.ActionBarContextView.makeInAnimation()",1,4,4
"com.android.internal.widget.ActionBarContextView.makeOutAnimation()",1,4,4
"com.android.internal.widget.ActionBarContextView.measureChildView(View,int,int,int)",1,1,1
"com.android.internal.widget.ActionBarContextView.onAnimationCancel(Animator)",1,1,1
"com.android.internal.widget.ActionBarContextView.onAnimationEnd(Animator)",1,2,2
"com.android.internal.widget.ActionBarContextView.onAnimationRepeat(Animator)",1,1,1
"com.android.internal.widget.ActionBarContextView.onAnimationStart(Animator)",1,1,1
"com.android.internal.widget.ActionBarContextView.onLayout(boolean,int,int,int,int)",1,7,8
"com.android.internal.widget.ActionBarContextView.onMeasure(int,int)",5,12,19
"com.android.internal.widget.ActionBarContextView.openOverflowMenu()",1,2,2
"com.android.internal.widget.ActionBarContextView.positionChild(View,int,int,int)",1,1,1
"com.android.internal.widget.ActionBarContextView.positionChildInverse(View,int,int,int)",1,1,1
"com.android.internal.widget.ActionBarContextView.setCustomView(View)",1,4,4
"com.android.internal.widget.ActionBarContextView.setHeight(int)",1,1,1
"com.android.internal.widget.ActionBarContextView.setSubtitle(CharSequence)",1,1,1
"com.android.internal.widget.ActionBarContextView.setTitle(CharSequence)",1,1,1
"com.android.internal.widget.ActionBarContextView.showOverflowMenu()",2,2,2
"com.android.internal.widget.ActionBarContextView.startActionModeForChild(View,Callback)",1,1,1
"com.android.internal.widget.ActionBarView.ActionBarView(Context,AttributeSet)",1,11,11
"com.android.internal.widget.ActionBarView.TabClickListener.onClick(View)",1,2,2
"com.android.internal.widget.ActionBarView.TabView.TabView(Context,Tab)",1,4,4
"com.android.internal.widget.ActionBarView.TabView.getTab()",1,1,1
"com.android.internal.widget.ActionBarView.addTab(Tab,boolean)",1,2,2
"com.android.internal.widget.ActionBarView.addTab(Tab,int,boolean)",1,2,2
"com.android.internal.widget.ActionBarView.createTabView(Tab)",1,1,2
"com.android.internal.widget.ActionBarView.ensureTabsExist()",1,2,2
"com.android.internal.widget.ActionBarView.generateDefaultLayoutParams()",1,1,1
"com.android.internal.widget.ActionBarView.getCustomNavigationView()",1,1,1
"com.android.internal.widget.ActionBarView.getDisplayOptions()",1,1,1
"com.android.internal.widget.ActionBarView.getDropdownAdapter()",1,1,1
"com.android.internal.widget.ActionBarView.getDropdownSelectedPosition()",1,1,1
"com.android.internal.widget.ActionBarView.getNavigationMode()",1,1,1
"com.android.internal.widget.ActionBarView.getSubtitle()",1,1,1
"com.android.internal.widget.ActionBarView.getTitle()",1,1,1
"com.android.internal.widget.ActionBarView.hideOverflowMenu()",2,2,2
"com.android.internal.widget.ActionBarView.initIndeterminateProgress()",1,1,1
"com.android.internal.widget.ActionBarView.initProgress()",1,1,1
"com.android.internal.widget.ActionBarView.initTitle()",1,5,5
"com.android.internal.widget.ActionBarView.isOverflowMenuOpen()",2,2,2
"com.android.internal.widget.ActionBarView.isOverflowMenuShowing()",2,2,2
"com.android.internal.widget.ActionBarView.isOverflowReserved()",1,2,2
"com.android.internal.widget.ActionBarView.measureChildView(View,int,int,int)",1,1,1
"com.android.internal.widget.ActionBarView.onFinishInflate()",1,4,5
"com.android.internal.widget.ActionBarView.onLayout(boolean,int,int,int,int)",4,13,29
"com.android.internal.widget.ActionBarView.onMeasure(int,int)",4,21,34
"com.android.internal.widget.ActionBarView.openOverflowMenu()",1,2,2
"com.android.internal.widget.ActionBarView.positionChild(View,int,int,int)",1,1,1
"com.android.internal.widget.ActionBarView.positionChildInverse(View,int,int,int)",1,1,1
"com.android.internal.widget.ActionBarView.postShowOverflowMenu()",1,1,1
"com.android.internal.widget.ActionBarView.removeAllTabs()",1,2,2
"com.android.internal.widget.ActionBarView.removeTabAt(int)",1,2,2
"com.android.internal.widget.ActionBarView.setCallback(OnNavigationListener)",1,1,1
"com.android.internal.widget.ActionBarView.setContextView(ActionBarContextView)",1,1,1
"com.android.internal.widget.ActionBarView.setCustomNavigationView(View)",1,3,5
"com.android.internal.widget.ActionBarView.setDisplayOptions(int)",1,8,14
"com.android.internal.widget.ActionBarView.setDropdownAdapter(SpinnerAdapter)",1,2,2
"com.android.internal.widget.ActionBarView.setDropdownSelectedPosition(int)",1,1,1
"com.android.internal.widget.ActionBarView.setMenu(Menu)",1,2,2
"com.android.internal.widget.ActionBarView.setNavigationMode(int)",3,8,10
"com.android.internal.widget.ActionBarView.setSubtitle(CharSequence)",1,2,3
"com.android.internal.widget.ActionBarView.setTabSelected(int)",1,2,2
"com.android.internal.widget.ActionBarView.setTitle(CharSequence)",1,1,1
"com.android.internal.widget.ActionBarView.setTitleImpl(CharSequence)",1,3,3
"com.android.internal.widget.ActionBarView.setWindowTitle(CharSequence)",1,2,2
"com.android.internal.widget.ActionBarView.showOverflowMenu()",2,2,2
"com.android.internal.widget.ActionBarView.startActionModeForChild(View,Callback)",1,1,1
"com.android.internal.widget.DialogTitle.DialogTitle(Context)",1,1,1
"com.android.internal.widget.DialogTitle.DialogTitle(Context,AttributeSet)",1,1,1
"com.android.internal.widget.DialogTitle.DialogTitle(Context,AttributeSet,int)",1,1,1
"com.android.internal.widget.DialogTitle.onMeasure(int,int)",1,4,4
"com.android.internal.widget.DigitalClock.AmPm.AmPm(View,Typeface)",1,2,2
"com.android.internal.widget.DigitalClock.AmPm.setIsMorning(boolean)",1,1,2
"com.android.internal.widget.DigitalClock.AmPm.setShowAmPm(boolean)",1,1,2
"com.android.internal.widget.DigitalClock.DigitalClock(Context)",1,1,1
"com.android.internal.widget.DigitalClock.DigitalClock(Context,AttributeSet)",1,1,1
"com.android.internal.widget.DigitalClock.FormatChangeObserver.FormatChangeObserver()",1,1,1
"com.android.internal.widget.DigitalClock.FormatChangeObserver.onChange(boolean)",1,1,1
"com.android.internal.widget.DigitalClock.onAttachedToWindow()",2,2,3
"com.android.internal.widget.DigitalClock.onDetachedFromWindow()",2,2,3
"com.android.internal.widget.DigitalClock.onFinishInflate()",1,1,1
"com.android.internal.widget.DigitalClock.setDateFormat()",1,1,2
"com.android.internal.widget.DigitalClock.setLive(boolean)",1,1,1
"com.android.internal.widget.DigitalClock.updateTime()",1,2,2
"com.android.internal.widget.DigitalClock.updateTime(Calendar)",1,1,1
"com.android.internal.widget.DrawableHolder.DrawableHolder(BitmapDrawable)",1,1,1
"com.android.internal.widget.DrawableHolder.DrawableHolder(BitmapDrawable,float,float)",1,1,1
"com.android.internal.widget.DrawableHolder.addAnimTo(long,long,String,float,boolean)",1,3,3
"com.android.internal.widget.DrawableHolder.addAnimation(ObjectAnimator,boolean)",1,2,2
"com.android.internal.widget.DrawableHolder.clearAnimations()",1,2,2
"com.android.internal.widget.DrawableHolder.draw(Canvas)",2,1,2
"com.android.internal.widget.DrawableHolder.getAlpha()",1,1,1
"com.android.internal.widget.DrawableHolder.getDrawable()",1,1,1
"com.android.internal.widget.DrawableHolder.getHeight()",1,1,1
"com.android.internal.widget.DrawableHolder.getScaleX()",1,1,1
"com.android.internal.widget.DrawableHolder.getScaleY()",1,1,1
"com.android.internal.widget.DrawableHolder.getWidth()",1,1,1
"com.android.internal.widget.DrawableHolder.getX()",1,1,1
"com.android.internal.widget.DrawableHolder.getY()",1,1,1
"com.android.internal.widget.DrawableHolder.onAnimationCancel(Animator)",1,1,1
"com.android.internal.widget.DrawableHolder.onAnimationEnd(Animator)",1,1,1
"com.android.internal.widget.DrawableHolder.onAnimationRepeat(Animator)",1,1,1
"com.android.internal.widget.DrawableHolder.onAnimationStart(Animator)",1,1,1
"com.android.internal.widget.DrawableHolder.removeAnimationFor(String)",1,3,3
"com.android.internal.widget.DrawableHolder.setAlpha(float)",1,1,1
"com.android.internal.widget.DrawableHolder.setScaleX(float)",1,1,1
"com.android.internal.widget.DrawableHolder.setScaleY(float)",1,1,1
"com.android.internal.widget.DrawableHolder.setX(float)",1,1,1
"com.android.internal.widget.DrawableHolder.setY(float)",1,1,1
"com.android.internal.widget.DrawableHolder.startAnimations(AnimatorUpdateListener)",1,2,2
"com.android.internal.widget.EditableInputConnection.EditableInputConnection(TextView)",1,1,1
"com.android.internal.widget.EditableInputConnection.beginBatchEdit()",1,1,1
"com.android.internal.widget.EditableInputConnection.clearMetaKeyStates(int)",2,2,4
"com.android.internal.widget.EditableInputConnection.commitCompletion(CompletionInfo)",1,2,2
"com.android.internal.widget.EditableInputConnection.commitCorrection(CorrectionInfo)",1,2,2
"com.android.internal.widget.EditableInputConnection.commitText(CharSequence,int)",2,3,4
"com.android.internal.widget.EditableInputConnection.endBatchEdit()",1,1,1
"com.android.internal.widget.EditableInputConnection.getEditable()",2,2,2
"com.android.internal.widget.EditableInputConnection.getExtractedText(ExtractedTextRequest,int)",3,4,4
"com.android.internal.widget.EditableInputConnection.performContextMenuAction(int)",1,2,2
"com.android.internal.widget.EditableInputConnection.performEditorAction(int)",1,2,2
"com.android.internal.widget.EditableInputConnection.performPrivateCommand(String,Bundle)",1,1,1
"com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient.LinearLayoutWithDefaultTouchRecepient(Context)",1,1,1
"com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient.LinearLayoutWithDefaultTouchRecepient(Context,AttributeSet)",1,1,1
"com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient.dispatchTouchEvent(MotionEvent)",3,2,3
"com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient.setDefaultTouchRecepient(View)",1,1,1
"com.android.internal.widget.LockPatternUtils.LockPatternUtils(Context)",1,4,4
"com.android.internal.widget.LockPatternUtils.checkPassword(String)",2,1,4
"com.android.internal.widget.LockPatternUtils.checkPasswordHistory(String)",3,2,4
"com.android.internal.widget.LockPatternUtils.checkPattern(List<Cell>)",2,1,4
"com.android.internal.widget.LockPatternUtils.clearLock()",1,1,1
"com.android.internal.widget.LockPatternUtils.computePasswordQuality(String)",4,2,7
"com.android.internal.widget.LockPatternUtils.getActivePasswordQuality()",2,2,11
"com.android.internal.widget.LockPatternUtils.getBoolean(String)",1,1,1
"com.android.internal.widget.LockPatternUtils.getDevicePolicyManager()",1,3,3
"com.android.internal.widget.LockPatternUtils.getKeyguardStoredPasswordQuality()",1,1,1
"com.android.internal.widget.LockPatternUtils.getLockoutAttemptDeadline()",2,1,3
"com.android.internal.widget.LockPatternUtils.getLong(String,long)",1,1,1
"com.android.internal.widget.LockPatternUtils.getNextAlarm()",2,2,3
"com.android.internal.widget.LockPatternUtils.getRequestedMinimumPasswordLength()",1,1,1
"com.android.internal.widget.LockPatternUtils.getRequestedPasswordHistoryLength()",1,1,1
"com.android.internal.widget.LockPatternUtils.getRequestedPasswordMinimumLetters()",1,1,1
"com.android.internal.widget.LockPatternUtils.getRequestedPasswordMinimumLowerCase()",1,1,1
"com.android.internal.widget.LockPatternUtils.getRequestedPasswordMinimumNonLetter()",1,1,1
"com.android.internal.widget.LockPatternUtils.getRequestedPasswordMinimumNumeric()",1,1,1
"com.android.internal.widget.LockPatternUtils.getRequestedPasswordMinimumSymbols()",1,1,1
"com.android.internal.widget.LockPatternUtils.getRequestedPasswordMinimumUpperCase()",1,1,1
"com.android.internal.widget.LockPatternUtils.getRequestedPasswordQuality()",1,1,1
"com.android.internal.widget.LockPatternUtils.getSalt()",2,2,3
"com.android.internal.widget.LockPatternUtils.getString(String)",1,1,1
"com.android.internal.widget.LockPatternUtils.isLockPasswordEnabled()",1,2,5
"com.android.internal.widget.LockPatternUtils.isLockPatternEnabled()",1,2,2
"com.android.internal.widget.LockPatternUtils.isLockScreenDisabled()",1,2,2
"com.android.internal.widget.LockPatternUtils.isPatternEverChosen()",1,1,1
"com.android.internal.widget.LockPatternUtils.isPermanentlyLocked()",1,1,1
"com.android.internal.widget.LockPatternUtils.isSecure()",1,5,8
"com.android.internal.widget.LockPatternUtils.isTactileFeedbackEnabled()",1,1,1
"com.android.internal.widget.LockPatternUtils.isVisiblePatternEnabled()",1,1,1
"com.android.internal.widget.LockPatternUtils.passwordToHash(String)",2,2,3
"com.android.internal.widget.LockPatternUtils.patternToHash(List<Cell>)",2,2,4
"com.android.internal.widget.LockPatternUtils.patternToString(List<Cell>)",2,2,3
"com.android.internal.widget.LockPatternUtils.reportFailedPasswordAttempt()",1,1,1
"com.android.internal.widget.LockPatternUtils.reportSuccessfulPasswordAttempt()",1,1,1
"com.android.internal.widget.LockPatternUtils.resumeCall()",2,2,4
"com.android.internal.widget.LockPatternUtils.saveLockPassword(String,int)",1,8,15
"com.android.internal.widget.LockPatternUtils.saveLockPattern(List<Cell>)",1,5,5
"com.android.internal.widget.LockPatternUtils.savedPasswordExists()",1,1,1
"com.android.internal.widget.LockPatternUtils.savedPatternExists()",1,1,1
"com.android.internal.widget.LockPatternUtils.setBoolean(String,boolean)",1,1,2
"com.android.internal.widget.LockPatternUtils.setLockPatternEnabled(boolean)",1,1,1
"com.android.internal.widget.LockPatternUtils.setLockScreenDisabled(boolean)",1,1,2
"com.android.internal.widget.LockPatternUtils.setLockoutAttemptDeadline()",1,1,1
"com.android.internal.widget.LockPatternUtils.setLong(String,long)",1,1,1
"com.android.internal.widget.LockPatternUtils.setPermanentlyLocked(boolean)",1,1,1
"com.android.internal.widget.LockPatternUtils.setString(String,String)",1,1,1
"com.android.internal.widget.LockPatternUtils.setTactileFeedbackEnabled(boolean)",1,1,1
"com.android.internal.widget.LockPatternUtils.setVisiblePatternEnabled(boolean)",1,1,1
"com.android.internal.widget.LockPatternUtils.stringToPattern(String)",1,2,2
"com.android.internal.widget.LockPatternUtils.toHex(byte[])",1,2,2
"com.android.internal.widget.LockPatternUtils.updateEmergencyCallButtonState(Button)",1,2,2
"com.android.internal.widget.LockPatternView.Cell.Cell(int,int)",1,1,1
"com.android.internal.widget.LockPatternView.Cell.checkRange(int,int)",3,1,5
"com.android.internal.widget.LockPatternView.Cell.getColumn()",1,1,1
"com.android.internal.widget.LockPatternView.Cell.getRow()",1,1,1
"com.android.internal.widget.LockPatternView.Cell.of(int,int)",1,1,1
"com.android.internal.widget.LockPatternView.Cell.toString()",1,1,1
"com.android.internal.widget.LockPatternView.LockPatternView(Context)",1,1,1
"com.android.internal.widget.LockPatternView.LockPatternView(Context,AttributeSet)",1,3,4
"com.android.internal.widget.LockPatternView.SavedState.SavedState(Parcel)",1,1,1
"com.android.internal.widget.LockPatternView.SavedState.SavedState(Parcelable,String,int,boolean,boolean,boolean)",1,1,1
"com.android.internal.widget.LockPatternView.SavedState.getDisplayMode()",1,1,1
"com.android.internal.widget.LockPatternView.SavedState.getSerializedPattern()",1,1,1
"com.android.internal.widget.LockPatternView.SavedState.isInStealthMode()",1,1,1
"com.android.internal.widget.LockPatternView.SavedState.isInputEnabled()",1,1,1
"com.android.internal.widget.LockPatternView.SavedState.isTactileFeedbackEnabled()",1,1,1
"com.android.internal.widget.LockPatternView.SavedState.writeToParcel(Parcel,int)",1,1,1
"com.android.internal.widget.LockPatternView.addCellToPattern(Cell)",1,2,2
"com.android.internal.widget.LockPatternView.checkForNewHit(float,float)",4,1,4
"com.android.internal.widget.LockPatternView.clearPattern()",1,1,1
"com.android.internal.widget.LockPatternView.clearPatternDrawLookup()",1,1,3
"com.android.internal.widget.LockPatternView.detectAndAddHit(float,float)",2,7,12
"com.android.internal.widget.LockPatternView.disableInput()",1,1,1
"com.android.internal.widget.LockPatternView.drawArrow(Canvas,float,float,Cell,Cell)",1,1,2
"com.android.internal.widget.LockPatternView.drawCircle(Canvas,int,int,boolean)",5,1,8
"com.android.internal.widget.LockPatternView.enableInput()",1,1,1
"com.android.internal.widget.LockPatternView.getBitmapFor(int)",1,1,1
"com.android.internal.widget.LockPatternView.getCenterXForColumn(int)",1,1,1
"com.android.internal.widget.LockPatternView.getCenterYForRow(int)",1,1,1
"com.android.internal.widget.LockPatternView.getColumnHit(float)",3,1,4
"com.android.internal.widget.LockPatternView.getRowHit(float)",3,1,4
"com.android.internal.widget.LockPatternView.isInStealthMode()",1,1,1
"com.android.internal.widget.LockPatternView.isTactileFeedbackEnabled()",1,1,1
"com.android.internal.widget.LockPatternView.loadVibratePattern(int)",2,2,4
"com.android.internal.widget.LockPatternView.onDraw(Canvas)",7,12,18
"com.android.internal.widget.LockPatternView.onMeasure(int,int)",2,2,4
"com.android.internal.widget.LockPatternView.onRestoreInstanceState(Parcelable)",1,1,1
"com.android.internal.widget.LockPatternView.onSaveInstanceState()",1,1,1
"com.android.internal.widget.LockPatternView.onSizeChanged(int,int,int,int)",1,1,1
"com.android.internal.widget.LockPatternView.onTouchEvent(MotionEvent)",3,20,34
"com.android.internal.widget.LockPatternView.resetPattern()",1,1,1
"com.android.internal.widget.LockPatternView.resolveMeasured(int,int)",2,2,4
"com.android.internal.widget.LockPatternView.setDisplayMode(DisplayMode)",3,2,3
"com.android.internal.widget.LockPatternView.setInStealthMode(boolean)",1,1,1
"com.android.internal.widget.LockPatternView.setOnPatternListener(OnPatternListener)",1,1,1
"com.android.internal.widget.LockPatternView.setPattern(DisplayMode,List<Cell>)",1,2,2
"com.android.internal.widget.LockPatternView.setTactileFeedbackEnabled(boolean)",1,1,1
"com.android.internal.widget.PasswordEntryKeyboard.LatinKey.LatinKey(Resources,Row,int,int,XmlResourceParser)",1,2,3
"com.android.internal.widget.PasswordEntryKeyboard.LatinKey.enableShiftLock()",1,1,1
"com.android.internal.widget.PasswordEntryKeyboard.LatinKey.isInside(int,int)",2,1,7
"com.android.internal.widget.PasswordEntryKeyboard.LatinKey.onReleased(boolean)",1,2,2
"com.android.internal.widget.PasswordEntryKeyboard.LatinKey.setEnabled(boolean)",1,1,1
"com.android.internal.widget.PasswordEntryKeyboard.PasswordEntryKeyboard(Context,int)",1,1,1
"com.android.internal.widget.PasswordEntryKeyboard.PasswordEntryKeyboard(Context,int,CharSequence,int,int)",1,1,1
"com.android.internal.widget.PasswordEntryKeyboard.PasswordEntryKeyboard(Context,int,int)",1,1,1
"com.android.internal.widget.PasswordEntryKeyboard.PasswordEntryKeyboard(Context,int,int,int)",1,1,1
"com.android.internal.widget.PasswordEntryKeyboard.PasswordEntryKeyboard(Context,int,int,int,int)",1,1,1
"com.android.internal.widget.PasswordEntryKeyboard.createKeyFromXml(Resources,Row,int,int,XmlResourceParser)",2,3,8
"com.android.internal.widget.PasswordEntryKeyboard.enableShiftLock()",1,3,3
"com.android.internal.widget.PasswordEntryKeyboard.init(Context)",1,1,1
"com.android.internal.widget.PasswordEntryKeyboard.isShifted()",2,2,2
"com.android.internal.widget.PasswordEntryKeyboard.setEnterKeyResources(Resources,int,int,int)",1,3,3
"com.android.internal.widget.PasswordEntryKeyboard.setShiftLocked(boolean)",1,1,3
"com.android.internal.widget.PasswordEntryKeyboard.setShifted(boolean)",2,2,4
"com.android.internal.widget.PasswordEntryKeyboardHelper.PasswordEntryKeyboardHelper(Context,KeyboardView,View)",1,1,1
"com.android.internal.widget.PasswordEntryKeyboardHelper.PasswordEntryKeyboardHelper(Context,KeyboardView,View,boolean)",1,3,3
"com.android.internal.widget.PasswordEntryKeyboardHelper.createKeyboards()",1,1,1
"com.android.internal.widget.PasswordEntryKeyboardHelper.createKeyboardsWithSpecificSize(int,int)",1,1,1
"com.android.internal.widget.PasswordEntryKeyboardHelper.handleBackspace()",1,1,1
"com.android.internal.widget.PasswordEntryKeyboardHelper.handleCharacter(int,int[])",1,4,4
"com.android.internal.widget.PasswordEntryKeyboardHelper.handleClose()",1,1,1
"com.android.internal.widget.PasswordEntryKeyboardHelper.handleModeChange()",1,2,6
"com.android.internal.widget.PasswordEntryKeyboardHelper.handleShift()",2,3,12
"com.android.internal.widget.PasswordEntryKeyboardHelper.isAlpha()",1,1,1
"com.android.internal.widget.PasswordEntryKeyboardHelper.onKey(int,int[])",4,6,7
"com.android.internal.widget.PasswordEntryKeyboardHelper.onPress(int)",1,2,2
"com.android.internal.widget.PasswordEntryKeyboardHelper.onRelease(int)",1,1,1
"com.android.internal.widget.PasswordEntryKeyboardHelper.onText(CharSequence)",1,1,1
"com.android.internal.widget.PasswordEntryKeyboardHelper.sendDownUpKeyEvents(int)",1,1,1
"com.android.internal.widget.PasswordEntryKeyboardHelper.sendKeyEventsToTarget(int)",1,3,3
"com.android.internal.widget.PasswordEntryKeyboardHelper.setKeyboardMode(int)",2,2,3
"com.android.internal.widget.PasswordEntryKeyboardHelper.setVibratePattern(int)",2,3,5
"com.android.internal.widget.PasswordEntryKeyboardHelper.swipeDown()",1,1,1
"com.android.internal.widget.PasswordEntryKeyboardHelper.swipeLeft()",1,1,1
"com.android.internal.widget.PasswordEntryKeyboardHelper.swipeRight()",1,1,1
"com.android.internal.widget.PasswordEntryKeyboardHelper.swipeUp()",1,1,1
"com.android.internal.widget.PasswordEntryKeyboardView.PasswordEntryKeyboardView(Context,AttributeSet)",1,1,1
"com.android.internal.widget.PasswordEntryKeyboardView.PasswordEntryKeyboardView(Context,AttributeSet,int)",1,1,1
"com.android.internal.widget.PointerLocationView.FasterStringBuilder.FasterStringBuilder()",1,1,1
"com.android.internal.widget.PointerLocationView.FasterStringBuilder.append(String)",1,1,1
"com.android.internal.widget.PointerLocationView.FasterStringBuilder.append(float,int)",1,2,3
"com.android.internal.widget.PointerLocationView.FasterStringBuilder.append(int)",1,1,1
"com.android.internal.widget.PointerLocationView.FasterStringBuilder.append(int,int)",4,3,8
"com.android.internal.widget.PointerLocationView.FasterStringBuilder.clear()",1,1,1
"com.android.internal.widget.PointerLocationView.FasterStringBuilder.reserve(int)",1,2,2
"com.android.internal.widget.PointerLocationView.FasterStringBuilder.toString()",1,1,1
"com.android.internal.widget.PointerLocationView.PointerLocationView(Context)",1,1,1
"com.android.internal.widget.PointerLocationView.PointerState.addTrace(float,float)",1,2,2
"com.android.internal.widget.PointerLocationView.PointerState.clearTrace()",1,1,1
"com.android.internal.widget.PointerLocationView.addTouchEvent(MotionEvent)",1,15,24
"com.android.internal.widget.PointerLocationView.drawOval(Canvas,float,float,float,float,float,Paint)",1,1,1
"com.android.internal.widget.PointerLocationView.logInputDeviceCapabilities()",1,3,3
"com.android.internal.widget.PointerLocationView.logPointerCoords(PointerCoords,int)",1,1,1
"com.android.internal.widget.PointerLocationView.onDraw(Canvas)",4,8,14
"com.android.internal.widget.PointerLocationView.onMeasure(int,int)",1,2,2
"com.android.internal.widget.PointerLocationView.onTouchEvent(MotionEvent)",1,1,1
"com.android.internal.widget.PointerLocationView.onTrackballEvent(MotionEvent)",1,1,1
"com.android.internal.widget.PointerLocationView.setPrintCoords(boolean)",1,1,1
"com.android.internal.widget.RotarySelector.RotarySelector(Context)",1,1,1
"com.android.internal.widget.RotarySelector.RotarySelector(Context,AttributeSet)",1,2,2
"com.android.internal.widget.RotarySelector.dispatchTriggerEvent(int)",1,2,2
"com.android.internal.widget.RotarySelector.drawCentered(Bitmap,Canvas,int,int)",1,1,1
"com.android.internal.widget.RotarySelector.getBitmapFor(int)",1,1,1
"com.android.internal.widget.RotarySelector.getYOnArc(int,int,int,int)",1,1,1
"com.android.internal.widget.RotarySelector.isHoriz()",1,1,1
"com.android.internal.widget.RotarySelector.log(String)",1,1,1
"com.android.internal.widget.RotarySelector.onDraw(Canvas)",2,15,25
"com.android.internal.widget.RotarySelector.onMeasure(int,int)",1,3,3
"com.android.internal.widget.RotarySelector.onSizeChanged(int,int,int,int)",1,2,3
"com.android.internal.widget.RotarySelector.onTouchEvent(MotionEvent)",3,24,30
"com.android.internal.widget.RotarySelector.reset()",1,1,1
"com.android.internal.widget.RotarySelector.setGrabbedState(int)",1,3,3
"com.android.internal.widget.RotarySelector.setLeftHandleResource(int)",1,2,2
"com.android.internal.widget.RotarySelector.setOnDialTriggerListener(OnDialTriggerListener)",1,1,1
"com.android.internal.widget.RotarySelector.setRightHandleResource(int)",1,2,2
"com.android.internal.widget.RotarySelector.startAnimation(int,int,int)",1,1,1
"com.android.internal.widget.RotarySelector.startAnimationWithVelocity(int,int,int)",1,1,1
"com.android.internal.widget.RotarySelector.updateAnimation()",2,3,8
"com.android.internal.widget.RotarySelector.vibrate(long)",1,2,2
"com.android.internal.widget.SlidingTab.Slider.Slider(ViewGroup,int,int,int)",1,1,1
"com.android.internal.widget.SlidingTab.Slider.getTabHeight()",1,1,1
"com.android.internal.widget.SlidingTab.Slider.getTabWidth()",1,1,1
"com.android.internal.widget.SlidingTab.Slider.hide()",1,5,6
"com.android.internal.widget.SlidingTab.Slider.hideTarget()",1,1,1
"com.android.internal.widget.SlidingTab.Slider.layout(int,int,int,int,int)",1,4,5
"com.android.internal.widget.SlidingTab.Slider.measure()",1,1,1
"com.android.internal.widget.SlidingTab.Slider.reset(boolean)",1,7,8
"com.android.internal.widget.SlidingTab.Slider.setBarBackgroundResource(int)",1,1,1
"com.android.internal.widget.SlidingTab.Slider.setHintText(int)",1,1,1
"com.android.internal.widget.SlidingTab.Slider.setIcon(int)",1,1,1
"com.android.internal.widget.SlidingTab.Slider.setState(int)",1,4,4
"com.android.internal.widget.SlidingTab.Slider.setTabBackgroundResource(int)",1,1,1
"com.android.internal.widget.SlidingTab.Slider.setTarget(int)",1,1,1
"com.android.internal.widget.SlidingTab.Slider.show(boolean)",1,6,7
"com.android.internal.widget.SlidingTab.Slider.showTarget()",1,1,1
"com.android.internal.widget.SlidingTab.Slider.startAnimation(Animation,Animation)",1,1,1
"com.android.internal.widget.SlidingTab.Slider.updateDrawableStates()",1,1,1
"com.android.internal.widget.SlidingTab.SlidingTab(Context)",1,1,1
"com.android.internal.widget.SlidingTab.SlidingTab(Context,AttributeSet)",1,2,2
"com.android.internal.widget.SlidingTab.cancelGrab()",1,1,1
"com.android.internal.widget.SlidingTab.dispatchTriggerEvent(int)",1,2,2
"com.android.internal.widget.SlidingTab.isHorizontal()",1,1,1
"com.android.internal.widget.SlidingTab.log(String)",1,1,1
"com.android.internal.widget.SlidingTab.moveHandle(float,float)",1,2,2
"com.android.internal.widget.SlidingTab.onAnimationDone()",1,1,1
"com.android.internal.widget.SlidingTab.onInterceptTouchEvent(MotionEvent)",4,3,9
"com.android.internal.widget.SlidingTab.onLayout(boolean,int,int,int,int)",2,1,4
"com.android.internal.widget.SlidingTab.onMeasure(int,int)",1,4,5
"com.android.internal.widget.SlidingTab.onTouchEvent(MotionEvent)",2,8,15
"com.android.internal.widget.SlidingTab.onVisibilityChanged(View,int)",1,2,4
"com.android.internal.widget.SlidingTab.reset(boolean)",1,1,2
"com.android.internal.widget.SlidingTab.resetView()",1,1,1
"com.android.internal.widget.SlidingTab.setGrabbedState(int)",1,3,3
"com.android.internal.widget.SlidingTab.setHoldAfterTrigger(boolean,boolean)",1,1,1
"com.android.internal.widget.SlidingTab.setLeftHintText(int)",1,2,2
"com.android.internal.widget.SlidingTab.setLeftTabResources(int,int,int,int)",1,1,1
"com.android.internal.widget.SlidingTab.setOnTriggerListener(OnTriggerListener)",1,1,1
"com.android.internal.widget.SlidingTab.setRightHintText(int)",1,2,2
"com.android.internal.widget.SlidingTab.setRightTabResources(int,int,int,int)",1,1,1
"com.android.internal.widget.SlidingTab.setVisibility(int)",1,3,3
"com.android.internal.widget.SlidingTab.startAnimating(boolean)",1,3,7
"com.android.internal.widget.SlidingTab.vibrate(long)",1,2,2
"com.android.internal.widget.SlidingTab.withinView(float,float,View)",1,6,6
"com.android.internal.widget.Smileys.getSmileyResource(int)",1,1,1
"com.android.internal.widget.TextProgressBar.TextProgressBar(Context)",1,1,1
"com.android.internal.widget.TextProgressBar.TextProgressBar(Context,AttributeSet)",1,1,1
"com.android.internal.widget.TextProgressBar.TextProgressBar(Context,AttributeSet,int)",1,1,1
"com.android.internal.widget.TextProgressBar.addView(View,int,LayoutParams)",1,2,5
"com.android.internal.widget.TextProgressBar.onChronometerTick(Chronometer)",2,3,8
"com.android.internal.widget.TextProgressBar.setDurationBase(long)",2,1,4
"com.android.internal.widget.WaveView.WaveView(Context)",1,1,1
"com.android.internal.widget.WaveView.WaveView(Context,AttributeSet)",1,1,1
"com.android.internal.widget.WaveView.createDrawable(int)",1,1,1
"com.android.internal.widget.WaveView.dispatchTriggerEvent(int)",1,2,2
"com.android.internal.widget.WaveView.getSuggestedMinimumHeight()",1,1,1
"com.android.internal.widget.WaveView.getSuggestedMinimumWidth()",1,1,1
"com.android.internal.widget.WaveView.initDrawables()",1,2,2
"com.android.internal.widget.WaveView.onAnimationUpdate(ValueAnimator)",1,1,1
"com.android.internal.widget.WaveView.onDraw(Canvas)",1,3,3
"com.android.internal.widget.WaveView.onMeasure(int,int)",1,5,5
"com.android.internal.widget.WaveView.onSizeChanged(int,int,int,int)",1,1,1
"com.android.internal.widget.WaveView.onTouchEvent(MotionEvent)",2,4,9
"com.android.internal.widget.WaveView.reset()",1,1,1
"com.android.internal.widget.WaveView.setGrabbedState(int)",1,3,3
"com.android.internal.widget.WaveView.setOnTriggerListener(OnTriggerListener)",1,1,1
"com.android.internal.widget.WaveView.vibrate(long)",1,2,2
"com.android.internal.widget.WaveView.waveUpdateFrame(float,float,boolean)",2,17,23
"com.android.internal.widget.WeightedLinearLayout.WeightedLinearLayout(Context)",1,1,1
"com.android.internal.widget.WeightedLinearLayout.WeightedLinearLayout(Context,AttributeSet)",1,1,1
"com.android.internal.widget.WeightedLinearLayout.onMeasure(int,int)",1,5,9
"com.android.server.ResettableTimeout.T.run()",3,3,4
"com.android.server.ResettableTimeout.cancel()",1,3,3
"com.android.server.ResettableTimeout.go(long)",1,2,2
"com.google.android.collect.Lists.newArrayList()",1,1,1
"com.google.android.collect.Lists.newArrayList(E...)",1,1,1
"com.google.android.collect.Maps.newHashMap()",1,1,1
"com.google.android.collect.Sets.newHashSet()",1,1,1
"com.google.android.collect.Sets.newHashSet(E...)",1,1,1
"com.google.android.collect.Sets.newSortedSet()",1,1,1
"com.google.android.collect.Sets.newSortedSet(E...)",1,1,1
"com.google.android.mms.ContentType.ContentType()",1,1,1
"com.google.android.mms.ContentType.getAudioTypes()",1,1,1
"com.google.android.mms.ContentType.getImageTypes()",1,1,1
"com.google.android.mms.ContentType.getSupportedTypes()",1,1,1
"com.google.android.mms.ContentType.getVideoTypes()",1,1,1
"com.google.android.mms.ContentType.isAudioType(String)",1,2,2
"com.google.android.mms.ContentType.isDrmType(String)",1,3,3
"com.google.android.mms.ContentType.isImageType(String)",1,2,2
"com.google.android.mms.ContentType.isSupportedAudioType(String)",1,2,2
"com.google.android.mms.ContentType.isSupportedImageType(String)",1,2,2
"com.google.android.mms.ContentType.isSupportedType(String)",1,2,2
"com.google.android.mms.ContentType.isSupportedVideoType(String)",1,2,2
"com.google.android.mms.ContentType.isTextType(String)",1,2,2
"com.google.android.mms.ContentType.isUnspecified(String)",1,2,2
"com.google.android.mms.ContentType.isVideoType(String)",1,2,2
"com.google.android.mms.InvalidHeaderValueException.InvalidHeaderValueException()",1,1,1
"com.google.android.mms.InvalidHeaderValueException.InvalidHeaderValueException(String)",1,1,1
"com.google.android.mms.MmsException.MmsException()",1,1,1
"com.google.android.mms.MmsException.MmsException(String)",1,1,1
"com.google.android.mms.MmsException.MmsException(String,Throwable)",1,1,1
"com.google.android.mms.MmsException.MmsException(Throwable)",1,1,1
"com.google.android.mms.pdu.AcknowledgeInd.AcknowledgeInd(PduHeaders)",1,1,1
"com.google.android.mms.pdu.AcknowledgeInd.AcknowledgeInd(int,byte[])",1,1,1
"com.google.android.mms.pdu.AcknowledgeInd.getReportAllowed()",1,1,1
"com.google.android.mms.pdu.AcknowledgeInd.getTransactionId()",1,1,1
"com.google.android.mms.pdu.AcknowledgeInd.setReportAllowed(int)",1,1,1
"com.google.android.mms.pdu.AcknowledgeInd.setTransactionId(byte[])",1,1,1
"com.google.android.mms.pdu.Base64.decodeBase64(byte[])",4,1,9
"com.google.android.mms.pdu.Base64.discardNonBase64(byte[])",1,2,3
"com.google.android.mms.pdu.Base64.isBase64(byte)",3,1,3
"com.google.android.mms.pdu.CharacterSets.CharacterSets()",1,1,1
"com.google.android.mms.pdu.CharacterSets.getMibEnumValue(String)",3,1,3
"com.google.android.mms.pdu.CharacterSets.getMimeName(int)",2,1,2
"com.google.android.mms.pdu.DeliveryInd.DeliveryInd()",1,1,1
"com.google.android.mms.pdu.DeliveryInd.DeliveryInd(PduHeaders)",1,1,1
"com.google.android.mms.pdu.DeliveryInd.getDate()",1,1,1
"com.google.android.mms.pdu.DeliveryInd.getMessageId()",1,1,1
"com.google.android.mms.pdu.DeliveryInd.getStatus()",1,1,1
"com.google.android.mms.pdu.DeliveryInd.getTo()",1,1,1
"com.google.android.mms.pdu.DeliveryInd.setDate(long)",1,1,1
"com.google.android.mms.pdu.DeliveryInd.setMessageId(byte[])",1,1,1
"com.google.android.mms.pdu.DeliveryInd.setStatus(int)",1,1,1
"com.google.android.mms.pdu.DeliveryInd.setTo(EncodedStringValue[])",1,1,1
"com.google.android.mms.pdu.EncodedStringValue.EncodedStringValue(String)",1,2,2
"com.google.android.mms.pdu.EncodedStringValue.EncodedStringValue(byte[])",1,1,1
"com.google.android.mms.pdu.EncodedStringValue.EncodedStringValue(int,byte[])",2,1,2
"com.google.android.mms.pdu.EncodedStringValue.appendTextString(byte[])",3,3,4
"com.google.android.mms.pdu.EncodedStringValue.clone()",1,2,2
"com.google.android.mms.pdu.EncodedStringValue.concat(EncodedStringValue[])",1,3,3
"com.google.android.mms.pdu.EncodedStringValue.copy(EncodedStringValue)",2,1,2
"com.google.android.mms.pdu.EncodedStringValue.encodeStrings(String[])",2,1,3
"com.google.android.mms.pdu.EncodedStringValue.extract(String)",2,4,4
"com.google.android.mms.pdu.EncodedStringValue.getCharacterSet()",1,1,1
"com.google.android.mms.pdu.EncodedStringValue.getString()",2,4,5
"com.google.android.mms.pdu.EncodedStringValue.getTextString()",1,1,1
"com.google.android.mms.pdu.EncodedStringValue.setCharacterSet(int)",1,1,1
"com.google.android.mms.pdu.EncodedStringValue.setTextString(byte[])",2,1,2
"com.google.android.mms.pdu.EncodedStringValue.split(String)",2,2,3
"com.google.android.mms.pdu.GenericPdu.GenericPdu()",1,1,1
"com.google.android.mms.pdu.GenericPdu.GenericPdu(PduHeaders)",1,1,1
"com.google.android.mms.pdu.GenericPdu.getFrom()",1,1,1
"com.google.android.mms.pdu.GenericPdu.getMessageType()",1,1,1
"com.google.android.mms.pdu.GenericPdu.getMmsVersion()",1,1,1
"com.google.android.mms.pdu.GenericPdu.getPduHeaders()",1,1,1
"com.google.android.mms.pdu.GenericPdu.setFrom(EncodedStringValue)",1,1,1
"com.google.android.mms.pdu.GenericPdu.setMessageType(int)",1,1,1
"com.google.android.mms.pdu.GenericPdu.setMmsVersion(int)",1,1,1
"com.google.android.mms.pdu.MultimediaMessagePdu.MultimediaMessagePdu()",1,1,1
"com.google.android.mms.pdu.MultimediaMessagePdu.MultimediaMessagePdu(PduHeaders)",1,1,1
"com.google.android.mms.pdu.MultimediaMessagePdu.MultimediaMessagePdu(PduHeaders,PduBody)",1,1,1
"com.google.android.mms.pdu.MultimediaMessagePdu.addTo(EncodedStringValue)",1,1,1
"com.google.android.mms.pdu.MultimediaMessagePdu.getBody()",1,1,1
"com.google.android.mms.pdu.MultimediaMessagePdu.getDate()",1,1,1
"com.google.android.mms.pdu.MultimediaMessagePdu.getPriority()",1,1,1
"com.google.android.mms.pdu.MultimediaMessagePdu.getSubject()",1,1,1
"com.google.android.mms.pdu.MultimediaMessagePdu.getTo()",1,1,1
"com.google.android.mms.pdu.MultimediaMessagePdu.setBody(PduBody)",1,1,1
"com.google.android.mms.pdu.MultimediaMessagePdu.setDate(long)",1,1,1
"com.google.android.mms.pdu.MultimediaMessagePdu.setPriority(int)",1,1,1
"com.google.android.mms.pdu.MultimediaMessagePdu.setSubject(EncodedStringValue)",1,1,1
"com.google.android.mms.pdu.NotificationInd.NotificationInd()",1,1,1
"com.google.android.mms.pdu.NotificationInd.NotificationInd(PduHeaders)",1,1,1
"com.google.android.mms.pdu.NotificationInd.getContentClass()",1,1,1
"com.google.android.mms.pdu.NotificationInd.getContentLocation()",1,1,1
"com.google.android.mms.pdu.NotificationInd.getDeliveryReport()",1,1,1
"com.google.android.mms.pdu.NotificationInd.getExpiry()",1,1,1
"com.google.android.mms.pdu.NotificationInd.getFrom()",1,1,1
"com.google.android.mms.pdu.NotificationInd.getMessageClass()",1,1,1
"com.google.android.mms.pdu.NotificationInd.getMessageSize()",1,1,1
"com.google.android.mms.pdu.NotificationInd.getSubject()",1,1,1
"com.google.android.mms.pdu.NotificationInd.getTransactionId()",1,1,1
"com.google.android.mms.pdu.NotificationInd.setContentClass(int)",1,1,1
"com.google.android.mms.pdu.NotificationInd.setContentLocation(byte[])",1,1,1
"com.google.android.mms.pdu.NotificationInd.setDeliveryReport(int)",1,1,1
"com.google.android.mms.pdu.NotificationInd.setExpiry(long)",1,1,1
"com.google.android.mms.pdu.NotificationInd.setFrom(EncodedStringValue)",1,1,1
"com.google.android.mms.pdu.NotificationInd.setMessageClass(byte[])",1,1,1
"com.google.android.mms.pdu.NotificationInd.setMessageSize(long)",1,1,1
"com.google.android.mms.pdu.NotificationInd.setSubject(EncodedStringValue)",1,1,1
"com.google.android.mms.pdu.NotificationInd.setTransactionId(byte[])",1,1,1
"com.google.android.mms.pdu.NotifyRespInd.NotifyRespInd(PduHeaders)",1,1,1
"com.google.android.mms.pdu.NotifyRespInd.NotifyRespInd(int,byte[],int)",1,1,1
"com.google.android.mms.pdu.NotifyRespInd.getReportAllowed()",1,1,1
"com.google.android.mms.pdu.NotifyRespInd.getStatus()",1,1,1
"com.google.android.mms.pdu.NotifyRespInd.getTransactionId()",1,1,1
"com.google.android.mms.pdu.NotifyRespInd.setReportAllowed(int)",1,1,1
"com.google.android.mms.pdu.NotifyRespInd.setStatus(int)",1,1,1
"com.google.android.mms.pdu.NotifyRespInd.setTransactionId(byte[])",1,1,1
"com.google.android.mms.pdu.PduBody.PduBody()",1,1,1
"com.google.android.mms.pdu.PduBody.addPart(PduPart)",2,1,2
"com.google.android.mms.pdu.PduBody.addPart(int,PduPart)",2,1,2
"com.google.android.mms.pdu.PduBody.getPart(int)",1,1,1
"com.google.android.mms.pdu.PduBody.getPartByContentId(String)",1,1,1
"com.google.android.mms.pdu.PduBody.getPartByContentLocation(String)",1,1,1
"com.google.android.mms.pdu.PduBody.getPartByFileName(String)",1,1,1
"com.google.android.mms.pdu.PduBody.getPartByName(String)",1,1,1
"com.google.android.mms.pdu.PduBody.getPartIndex(PduPart)",1,1,1
"com.google.android.mms.pdu.PduBody.getPartsNum()",1,1,1
"com.google.android.mms.pdu.PduBody.putPartToMaps(PduPart)",1,5,5
"com.google.android.mms.pdu.PduBody.removeAll()",1,1,1
"com.google.android.mms.pdu.PduBody.removePart(int)",1,1,1
"com.google.android.mms.pdu.PduComposer.BufferStack.copy()",1,1,1
"com.google.android.mms.pdu.PduComposer.BufferStack.mark()",1,1,1
"com.google.android.mms.pdu.PduComposer.BufferStack.newbuf()",2,1,2
"com.google.android.mms.pdu.PduComposer.BufferStack.pop()",1,1,1
"com.google.android.mms.pdu.PduComposer.PduComposer(Context,GenericPdu)",1,1,1
"com.google.android.mms.pdu.PduComposer.PositionMarker.getLength()",2,1,2
"com.google.android.mms.pdu.PduComposer.append(int)",1,1,1
"com.google.android.mms.pdu.PduComposer.appendAddressType(EncodedStringValue)",1,4,5
"com.google.android.mms.pdu.PduComposer.appendDateValue(long)",1,1,1
"com.google.android.mms.pdu.PduComposer.appendEncodedString(EncodedStringValue)",2,1,2
"com.google.android.mms.pdu.PduComposer.appendHeader(int)",13,11,29
"com.google.android.mms.pdu.PduComposer.appendLongInteger(long)",1,2,4
"com.google.android.mms.pdu.PduComposer.appendOctet(int)",1,1,1
"com.google.android.mms.pdu.PduComposer.appendQuotedString(String)",1,1,1
"com.google.android.mms.pdu.PduComposer.appendQuotedString(byte[])",1,1,1
"com.google.android.mms.pdu.PduComposer.appendShortInteger(int)",1,1,1
"com.google.android.mms.pdu.PduComposer.appendShortLength(int)",1,1,1
"com.google.android.mms.pdu.PduComposer.appendTextString(String)",1,1,1
"com.google.android.mms.pdu.PduComposer.appendTextString(byte[])",1,2,2
"com.google.android.mms.pdu.PduComposer.appendUintvarInteger(long)",3,2,4
"com.google.android.mms.pdu.PduComposer.appendValueLength(long)",2,2,2
"com.google.android.mms.pdu.PduComposer.arraycopy(byte[],int,int)",1,1,1
"com.google.android.mms.pdu.PduComposer.checkAddressType(String)",6,4,6
"com.google.android.mms.pdu.PduComposer.make()",6,2,10
"com.google.android.mms.pdu.PduComposer.makeAckInd()",3,1,4
"com.google.android.mms.pdu.PduComposer.makeMessageBody()",10,16,25
"com.google.android.mms.pdu.PduComposer.makeNotifyResp()",4,1,5
"com.google.android.mms.pdu.PduComposer.makeReadRecInd()",6,1,7
"com.google.android.mms.pdu.PduComposer.makeSendReqPdu()",5,1,9
"com.google.android.mms.pdu.PduHeaders.PduHeaders()",1,1,1
"com.google.android.mms.pdu.PduHeaders.appendEncodedStringValue(EncodedStringValue,int)",3,2,5
"com.google.android.mms.pdu.PduHeaders.getEncodedStringValue(int)",1,1,1
"com.google.android.mms.pdu.PduHeaders.getEncodedStringValues(int)",2,1,2
"com.google.android.mms.pdu.PduHeaders.getLongInteger(int)",2,1,2
"com.google.android.mms.pdu.PduHeaders.getOctet(int)",2,1,2
"com.google.android.mms.pdu.PduHeaders.getTextString(int)",1,1,1
"com.google.android.mms.pdu.PduHeaders.setEncodedStringValue(EncodedStringValue,int)",3,2,4
"com.google.android.mms.pdu.PduHeaders.setEncodedStringValues(EncodedStringValue[],int)",3,3,5
"com.google.android.mms.pdu.PduHeaders.setLongInteger(long,int)",2,2,3
"com.google.android.mms.pdu.PduHeaders.setOctet(int,int)",12,2,61
"com.google.android.mms.pdu.PduHeaders.setTextString(byte[],int)",3,2,4
"com.google.android.mms.pdu.PduParser.PduParser(byte[])",1,1,1
"com.google.android.mms.pdu.PduParser.checkMandatoryHeader(PduHeaders)",32,2,41
"com.google.android.mms.pdu.PduParser.checkPartPosition(PduPart)",8,5,9
"com.google.android.mms.pdu.PduParser.extractByteValue(ByteArrayInputStream)",1,1,1
"com.google.android.mms.pdu.PduParser.getWapString(ByteArrayInputStream,int)",2,6,7
"com.google.android.mms.pdu.PduParser.isText(int)",3,2,6
"com.google.android.mms.pdu.PduParser.isTokenCharacter(int)",3,2,4
"com.google.android.mms.pdu.PduParser.log(String)",1,2,2
"com.google.android.mms.pdu.PduParser.parse()",10,8,22
"com.google.android.mms.pdu.PduParser.parseContentType(ByteArrayInputStream,HashMap<Integer, Object>)",5,8,9
"com.google.android.mms.pdu.PduParser.parseContentTypeParams(ByteArrayInputStream,HashMap<Integer, Object>,Integer)",2,14,23
"com.google.android.mms.pdu.PduParser.parseEncodedStringValue(ByteArrayInputStream)",1,2,4
"com.google.android.mms.pdu.PduParser.parseHeaders(ByteArrayInputStream)",32,75,77
"com.google.android.mms.pdu.PduParser.parseIntegerValue(ByteArrayInputStream)",2,2,2
"com.google.android.mms.pdu.PduParser.parseLongInteger(ByteArrayInputStream)",2,2,3
"com.google.android.mms.pdu.PduParser.parsePartHeaders(ByteArrayInputStream,PduPart,int)",8,19,23
"com.google.android.mms.pdu.PduParser.parseParts(ByteArrayInputStream)",10,17,21
"com.google.android.mms.pdu.PduParser.parseShortInteger(ByteArrayInputStream)",1,1,1
"com.google.android.mms.pdu.PduParser.parseUnsignedInt(ByteArrayInputStream)",4,2,4
"com.google.android.mms.pdu.PduParser.parseValueLength(ByteArrayInputStream)",3,3,3
"com.google.android.mms.pdu.PduParser.parseWapString(ByteArrayInputStream,int)",1,3,5
"com.google.android.mms.pdu.PduParser.skipWapValue(ByteArrayInputStream,int)",2,1,2
"com.google.android.mms.pdu.PduPart.PduPart()",1,1,1
"com.google.android.mms.pdu.PduPart.generateLocation()",2,4,4
"com.google.android.mms.pdu.PduPart.getCharset()",2,2,2
"com.google.android.mms.pdu.PduPart.getContentDisposition()",1,1,1
"com.google.android.mms.pdu.PduPart.getContentId()",1,1,1
"com.google.android.mms.pdu.PduPart.getContentLocation()",1,1,1
"com.google.android.mms.pdu.PduPart.getContentTransferEncoding()",1,1,1
"com.google.android.mms.pdu.PduPart.getContentType()",1,1,1
"com.google.android.mms.pdu.PduPart.getData()",2,1,2
"com.google.android.mms.pdu.PduPart.getDataUri()",1,1,1
"com.google.android.mms.pdu.PduPart.getFilename()",1,1,1
"com.google.android.mms.pdu.PduPart.getName()",1,1,1
"com.google.android.mms.pdu.PduPart.setCharset(int)",1,1,1
"com.google.android.mms.pdu.PduPart.setContentDisposition(byte[])",2,1,2
"com.google.android.mms.pdu.PduPart.setContentId(byte[])",3,2,6
"com.google.android.mms.pdu.PduPart.setContentLocation(byte[])",2,1,2
"com.google.android.mms.pdu.PduPart.setContentTransferEncoding(byte[])",2,1,2
"com.google.android.mms.pdu.PduPart.setContentType(byte[])",2,1,2
"com.google.android.mms.pdu.PduPart.setData(byte[])",2,1,2
"com.google.android.mms.pdu.PduPart.setDataUri(Uri)",1,1,1
"com.google.android.mms.pdu.PduPart.setFilename(byte[])",2,1,2
"com.google.android.mms.pdu.PduPart.setName(byte[])",2,1,2
"com.google.android.mms.pdu.PduPersister.PduPersister(Context)",1,1,1
"com.google.android.mms.pdu.PduPersister.getByteArrayFromPartColumn(Cursor,int)",2,2,2
"com.google.android.mms.pdu.PduPersister.getBytes(String)",1,2,2
"com.google.android.mms.pdu.PduPersister.getIntegerFromPartColumn(Cursor,int)",2,2,2
"com.google.android.mms.pdu.PduPersister.getPduPersister(Context)",1,2,3
"com.google.android.mms.pdu.PduPersister.getPendingMessages(long)",1,1,1
"com.google.android.mms.pdu.PduPersister.load(Uri)",6,14,25
"com.google.android.mms.pdu.PduPersister.loadAddress(long,PduHeaders)",2,5,7
"com.google.android.mms.pdu.PduPersister.loadParts(long)",6,23,24
"com.google.android.mms.pdu.PduPersister.move(Uri,Uri)",3,1,3
"com.google.android.mms.pdu.PduPersister.persist(GenericPdu,Uri)",5,21,28
"com.google.android.mms.pdu.PduPersister.persistAddress(long,int,EncodedStringValue[])",1,2,2
"com.google.android.mms.pdu.PduPersister.persistData(PduPart,Uri,String)",5,16,17
"com.google.android.mms.pdu.PduPersister.persistPart(PduPart,long)",3,9,10
"com.google.android.mms.pdu.PduPersister.release()",1,1,1
"com.google.android.mms.pdu.PduPersister.setEncodedStringValueToHeaders(Cursor,int,PduHeaders,int)",1,3,3
"com.google.android.mms.pdu.PduPersister.setLongToHeaders(Cursor,int,PduHeaders,int)",1,2,2
"com.google.android.mms.pdu.PduPersister.setOctetToHeaders(Cursor,int,PduHeaders,int)",1,2,2
"com.google.android.mms.pdu.PduPersister.setTextStringToHeaders(Cursor,int,PduHeaders,int)",1,2,2
"com.google.android.mms.pdu.PduPersister.toIsoString(byte[])",1,2,2
"com.google.android.mms.pdu.PduPersister.updateAddress(long,int,EncodedStringValue[])",1,1,1
"com.google.android.mms.pdu.PduPersister.updateHeaders(Uri,SendReq)",1,17,18
"com.google.android.mms.pdu.PduPersister.updatePart(Uri,PduPart)",2,10,10
"com.google.android.mms.pdu.PduPersister.updateParts(Uri,PduBody)",1,9,9
"com.google.android.mms.pdu.QuotedPrintable.decodeQuotedPrintable(byte[])",6,3,9
"com.google.android.mms.pdu.ReadOrigInd.ReadOrigInd()",1,1,1
"com.google.android.mms.pdu.ReadOrigInd.ReadOrigInd(PduHeaders)",1,1,1
"com.google.android.mms.pdu.ReadOrigInd.getDate()",1,1,1
"com.google.android.mms.pdu.ReadOrigInd.getFrom()",1,1,1
"com.google.android.mms.pdu.ReadOrigInd.getMessageId()",1,1,1
"com.google.android.mms.pdu.ReadOrigInd.getReadStatus()",1,1,1
"com.google.android.mms.pdu.ReadOrigInd.getTo()",1,1,1
"com.google.android.mms.pdu.ReadOrigInd.setDate(long)",1,1,1
"com.google.android.mms.pdu.ReadOrigInd.setFrom(EncodedStringValue)",1,1,1
"com.google.android.mms.pdu.ReadOrigInd.setMessageId(byte[])",1,1,1
"com.google.android.mms.pdu.ReadOrigInd.setReadStatus(int)",1,1,1
"com.google.android.mms.pdu.ReadOrigInd.setTo(EncodedStringValue[])",1,1,1
"com.google.android.mms.pdu.ReadRecInd.ReadRecInd(EncodedStringValue,byte[],int,int,EncodedStringValue[])",1,1,1
"com.google.android.mms.pdu.ReadRecInd.ReadRecInd(PduHeaders)",1,1,1
"com.google.android.mms.pdu.ReadRecInd.getDate()",1,1,1
"com.google.android.mms.pdu.ReadRecInd.getMessageId()",1,1,1
"com.google.android.mms.pdu.ReadRecInd.getReadStatus()",1,1,1
"com.google.android.mms.pdu.ReadRecInd.getTo()",1,1,1
"com.google.android.mms.pdu.ReadRecInd.setDate(long)",1,1,1
"com.google.android.mms.pdu.ReadRecInd.setMessageId(byte[])",1,1,1
"com.google.android.mms.pdu.ReadRecInd.setReadStatus(int)",1,1,1
"com.google.android.mms.pdu.ReadRecInd.setTo(EncodedStringValue[])",1,1,1
"com.google.android.mms.pdu.RetrieveConf.RetrieveConf()",1,1,1
"com.google.android.mms.pdu.RetrieveConf.RetrieveConf(PduHeaders)",1,1,1
"com.google.android.mms.pdu.RetrieveConf.RetrieveConf(PduHeaders,PduBody)",1,1,1
"com.google.android.mms.pdu.RetrieveConf.addCc(EncodedStringValue)",1,1,1
"com.google.android.mms.pdu.RetrieveConf.getCc()",1,1,1
"com.google.android.mms.pdu.RetrieveConf.getContentType()",1,1,1
"com.google.android.mms.pdu.RetrieveConf.getDeliveryReport()",1,1,1
"com.google.android.mms.pdu.RetrieveConf.getFrom()",1,1,1
"com.google.android.mms.pdu.RetrieveConf.getMessageClass()",1,1,1
"com.google.android.mms.pdu.RetrieveConf.getMessageId()",1,1,1
"com.google.android.mms.pdu.RetrieveConf.getReadReport()",1,1,1
"com.google.android.mms.pdu.RetrieveConf.getRetrieveStatus()",1,1,1
"com.google.android.mms.pdu.RetrieveConf.getRetrieveText()",1,1,1
"com.google.android.mms.pdu.RetrieveConf.getTransactionId()",1,1,1
"com.google.android.mms.pdu.RetrieveConf.setContentType(byte[])",1,1,1
"com.google.android.mms.pdu.RetrieveConf.setDeliveryReport(int)",1,1,1
"com.google.android.mms.pdu.RetrieveConf.setFrom(EncodedStringValue)",1,1,1
"com.google.android.mms.pdu.RetrieveConf.setMessageClass(byte[])",1,1,1
"com.google.android.mms.pdu.RetrieveConf.setMessageId(byte[])",1,1,1
"com.google.android.mms.pdu.RetrieveConf.setReadReport(int)",1,1,1
"com.google.android.mms.pdu.RetrieveConf.setRetrieveStatus(int)",1,1,1
"com.google.android.mms.pdu.RetrieveConf.setRetrieveText(EncodedStringValue)",1,1,1
"com.google.android.mms.pdu.RetrieveConf.setTransactionId(byte[])",1,1,1
"com.google.android.mms.pdu.SendConf.SendConf()",1,1,1
"com.google.android.mms.pdu.SendConf.SendConf(PduHeaders)",1,1,1
"com.google.android.mms.pdu.SendConf.getMessageId()",1,1,1
"com.google.android.mms.pdu.SendConf.getResponseStatus()",1,1,1
"com.google.android.mms.pdu.SendConf.getTransactionId()",1,1,1
"com.google.android.mms.pdu.SendConf.setMessageId(byte[])",1,1,1
"com.google.android.mms.pdu.SendConf.setResponseStatus(int)",1,1,1
"com.google.android.mms.pdu.SendConf.setTransactionId(byte[])",1,1,1
"com.google.android.mms.pdu.SendReq.SendReq()",1,2,2
"com.google.android.mms.pdu.SendReq.SendReq(PduHeaders)",1,1,1
"com.google.android.mms.pdu.SendReq.SendReq(PduHeaders,PduBody)",1,1,1
"com.google.android.mms.pdu.SendReq.SendReq(byte[],EncodedStringValue,int,byte[])",1,1,1
"com.google.android.mms.pdu.SendReq.addBcc(EncodedStringValue)",1,1,1
"com.google.android.mms.pdu.SendReq.addCc(EncodedStringValue)",1,1,1
"com.google.android.mms.pdu.SendReq.generateTransactionId()",1,1,1
"com.google.android.mms.pdu.SendReq.getBcc()",1,1,1
"com.google.android.mms.pdu.SendReq.getCc()",1,1,1
"com.google.android.mms.pdu.SendReq.getContentType()",1,1,1
"com.google.android.mms.pdu.SendReq.getDeliveryReport()",1,1,1
"com.google.android.mms.pdu.SendReq.getExpiry()",1,1,1
"com.google.android.mms.pdu.SendReq.getMessageClass()",1,1,1
"com.google.android.mms.pdu.SendReq.getMessageSize()",1,1,1
"com.google.android.mms.pdu.SendReq.getReadReport()",1,1,1
"com.google.android.mms.pdu.SendReq.getTransactionId()",1,1,1
"com.google.android.mms.pdu.SendReq.setBcc(EncodedStringValue[])",1,1,1
"com.google.android.mms.pdu.SendReq.setCc(EncodedStringValue[])",1,1,1
"com.google.android.mms.pdu.SendReq.setContentType(byte[])",1,1,1
"com.google.android.mms.pdu.SendReq.setDeliveryReport(int)",1,1,1
"com.google.android.mms.pdu.SendReq.setExpiry(long)",1,1,1
"com.google.android.mms.pdu.SendReq.setMessageClass(byte[])",1,1,1
"com.google.android.mms.pdu.SendReq.setMessageSize(long)",1,1,1
"com.google.android.mms.pdu.SendReq.setReadReport(int)",1,1,1
"com.google.android.mms.pdu.SendReq.setTo(EncodedStringValue[])",1,1,1
"com.google.android.mms.pdu.SendReq.setTransactionId(byte[])",1,1,1
"com.google.android.mms.util.AbstractCache.AbstractCache()",1,1,1
"com.google.android.mms.util.AbstractCache.get(K)",3,5,5
"com.google.android.mms.util.AbstractCache.purge(K)",1,3,4
"com.google.android.mms.util.AbstractCache.purgeAll()",1,2,2
"com.google.android.mms.util.AbstractCache.put(K,V)",3,6,6
"com.google.android.mms.util.AbstractCache.size()",1,1,1
"com.google.android.mms.util.PduCache.PduCache()",1,1,1
"com.google.android.mms.util.PduCache.getInstance()",1,3,3
"com.google.android.mms.util.PduCache.normalizeKey(Uri)",2,3,5
"com.google.android.mms.util.PduCache.purge(Uri)",3,4,7
"com.google.android.mms.util.PduCache.purgeAll()",1,1,1
"com.google.android.mms.util.PduCache.purgeByMessageBox(Integer)",1,6,6
"com.google.android.mms.util.PduCache.purgeByThreadId(long)",1,5,5
"com.google.android.mms.util.PduCache.purgeSingleEntry(Uri)",2,2,2
"com.google.android.mms.util.PduCache.put(Uri,PduCacheEntry)",1,4,4
"com.google.android.mms.util.PduCache.removeFromMessageBoxes(Uri,PduCacheEntry)",1,2,2
"com.google.android.mms.util.PduCache.removeFromThreads(Uri,PduCacheEntry)",1,2,2
"com.google.android.mms.util.PduCacheEntry.PduCacheEntry(GenericPdu,int,long)",1,1,1
"com.google.android.mms.util.PduCacheEntry.getMessageBox()",1,1,1
"com.google.android.mms.util.PduCacheEntry.getPdu()",1,1,1
"com.google.android.mms.util.PduCacheEntry.getThreadId()",1,1,1
"com.google.android.mms.util.SqliteWrapper.SqliteWrapper()",1,1,1
"com.google.android.mms.util.SqliteWrapper.checkSQLiteException(Context,SQLiteException)",2,2,2
"com.google.android.mms.util.SqliteWrapper.delete(Context,ContentResolver,Uri,String,String[])",1,2,2
"com.google.android.mms.util.SqliteWrapper.insert(Context,ContentResolver,Uri,ContentValues)",1,2,2
"com.google.android.mms.util.SqliteWrapper.isLowMemory(Context)",2,1,2
"com.google.android.mms.util.SqliteWrapper.isLowMemory(SQLiteException)",1,1,1
"com.google.android.mms.util.SqliteWrapper.query(Context,ContentResolver,Uri,String[],String,String[],String)",1,2,2
"com.google.android.mms.util.SqliteWrapper.requery(Context,Cursor)",1,2,2
"com.google.android.mms.util.SqliteWrapper.update(Context,ContentResolver,Uri,ContentValues,String,String[])",1,2,2
"com.google.android.util.AbstractMessageParser.AbstractMessageParser(String)",1,1,1
"com.google.android.util.AbstractMessageParser.AbstractMessageParser(String,boolean,boolean,boolean,boolean,boolean,boolean)",1,1,1
"com.google.android.util.AbstractMessageParser.Acronym.Acronym(String,String)",1,1,1
"com.google.android.util.AbstractMessageParser.Acronym.getInfo()",1,1,1
"com.google.android.util.AbstractMessageParser.Acronym.getValue()",1,1,1
"com.google.android.util.AbstractMessageParser.Acronym.isHtml()",1,1,1
"com.google.android.util.AbstractMessageParser.FlickrPhoto.FlickrPhoto(String,String,String,String,String)",1,2,3
"com.google.android.util.AbstractMessageParser.FlickrPhoto.getGrouping()",1,1,1
"com.google.android.util.AbstractMessageParser.FlickrPhoto.getGroupingId()",1,1,1
"com.google.android.util.AbstractMessageParser.FlickrPhoto.getInfo()",1,5,5
"com.google.android.util.AbstractMessageParser.FlickrPhoto.getPhoto()",1,1,1
"com.google.android.util.AbstractMessageParser.FlickrPhoto.getPhotoURL(String,String)",1,1,1
"com.google.android.util.AbstractMessageParser.FlickrPhoto.getRssUrl(String)",1,1,1
"com.google.android.util.AbstractMessageParser.FlickrPhoto.getTagsURL(String)",1,1,1
"com.google.android.util.AbstractMessageParser.FlickrPhoto.getUrl()",5,5,5
"com.google.android.util.AbstractMessageParser.FlickrPhoto.getUser()",1,1,1
"com.google.android.util.AbstractMessageParser.FlickrPhoto.getUserSetsURL(String,String)",1,1,1
"com.google.android.util.AbstractMessageParser.FlickrPhoto.getUserTagsURL(String,String)",1,1,1
"com.google.android.util.AbstractMessageParser.FlickrPhoto.getUserURL(String)",1,1,1
"com.google.android.util.AbstractMessageParser.FlickrPhoto.isHtml()",1,1,1
"com.google.android.util.AbstractMessageParser.FlickrPhoto.isMedia()",1,1,1
"com.google.android.util.AbstractMessageParser.FlickrPhoto.matchURL(String,String)",3,3,3
"com.google.android.util.AbstractMessageParser.Format.Format(char,boolean)",1,1,1
"com.google.android.util.AbstractMessageParser.Format.controlCaps()",1,1,1
"com.google.android.util.AbstractMessageParser.Format.getFormatEnd(char)",6,2,6
"com.google.android.util.AbstractMessageParser.Format.getFormatStart(char)",6,2,6
"com.google.android.util.AbstractMessageParser.Format.getInfo()",1,1,1
"com.google.android.util.AbstractMessageParser.Format.isHtml()",1,1,1
"com.google.android.util.AbstractMessageParser.Format.setCaps()",1,1,1
"com.google.android.util.AbstractMessageParser.Format.setMatched(boolean)",1,1,1
"com.google.android.util.AbstractMessageParser.Format.toHtml(boolean)",2,4,4
"com.google.android.util.AbstractMessageParser.Html.Html(String,String)",1,1,1
"com.google.android.util.AbstractMessageParser.Html.getInfo()",1,1,1
"com.google.android.util.AbstractMessageParser.Html.isHtml()",1,1,1
"com.google.android.util.AbstractMessageParser.Html.toHtml(boolean)",1,2,2
"com.google.android.util.AbstractMessageParser.Html.trimLeadingWhitespace()",1,1,1
"com.google.android.util.AbstractMessageParser.Html.trimLeadingWhitespace(String)",1,2,3
"com.google.android.util.AbstractMessageParser.Html.trimTrailingWhitespace()",1,1,1
"com.google.android.util.AbstractMessageParser.Html.trimTrailingWhitespace(String)",1,2,3
"com.google.android.util.AbstractMessageParser.Link.Link(String,String)",1,1,1
"com.google.android.util.AbstractMessageParser.Link.getInfo()",1,1,1
"com.google.android.util.AbstractMessageParser.Link.getURL()",1,1,1
"com.google.android.util.AbstractMessageParser.Link.isHtml()",1,1,1
"com.google.android.util.AbstractMessageParser.MusicTrack.MusicTrack(String)",1,1,1
"com.google.android.util.AbstractMessageParser.MusicTrack.getInfo()",1,1,1
"com.google.android.util.AbstractMessageParser.MusicTrack.getTrack()",1,1,1
"com.google.android.util.AbstractMessageParser.MusicTrack.isHtml()",1,1,1
"com.google.android.util.AbstractMessageParser.Part.Part()",1,1,1
"com.google.android.util.AbstractMessageParser.Part.add(Token)",2,1,2
"com.google.android.util.AbstractMessageParser.Part.getMediaToken()",2,2,2
"com.google.android.util.AbstractMessageParser.Part.getPartType()",3,1,3
"com.google.android.util.AbstractMessageParser.Part.getRawText()",1,3,3
"com.google.android.util.AbstractMessageParser.Part.getTokens()",1,1,1
"com.google.android.util.AbstractMessageParser.Part.getType(boolean)",1,1,2
"com.google.android.util.AbstractMessageParser.Part.isMedia()",1,2,2
"com.google.android.util.AbstractMessageParser.Part.setMeText(String)",1,1,1
"com.google.android.util.AbstractMessageParser.Photo.Photo(String,String,String,String)",1,1,1
"com.google.android.util.AbstractMessageParser.Photo.getAlbum()",1,1,1
"com.google.android.util.AbstractMessageParser.Photo.getAlbumURL(String,String)",1,1,1
"com.google.android.util.AbstractMessageParser.Photo.getInfo()",1,2,2
"com.google.android.util.AbstractMessageParser.Photo.getPhoto()",1,1,1
"com.google.android.util.AbstractMessageParser.Photo.getPhotoURL(String,String,String)",1,1,1
"com.google.android.util.AbstractMessageParser.Photo.getRssUrl(String)",1,1,1
"com.google.android.util.AbstractMessageParser.Photo.getUser()",1,1,1
"com.google.android.util.AbstractMessageParser.Photo.isHtml()",1,1,1
"com.google.android.util.AbstractMessageParser.Photo.isMedia()",1,1,1
"com.google.android.util.AbstractMessageParser.Photo.matchURL(String,String)",2,2,2
"com.google.android.util.AbstractMessageParser.Smiley.Smiley(String)",1,1,1
"com.google.android.util.AbstractMessageParser.Smiley.getInfo()",1,1,1
"com.google.android.util.AbstractMessageParser.Smiley.isHtml()",1,1,1
"com.google.android.util.AbstractMessageParser.Token.Token(Type,String)",1,1,1
"com.google.android.util.AbstractMessageParser.Token.Type.Type(String)",1,1,1
"com.google.android.util.AbstractMessageParser.Token.Type.toString()",1,1,1
"com.google.android.util.AbstractMessageParser.Token.controlCaps()",1,1,1
"com.google.android.util.AbstractMessageParser.Token.getInfo()",1,1,1
"com.google.android.util.AbstractMessageParser.Token.getRawText()",1,1,1
"com.google.android.util.AbstractMessageParser.Token.getType()",1,1,1
"com.google.android.util.AbstractMessageParser.Token.isArray()",1,1,1
"com.google.android.util.AbstractMessageParser.Token.isMedia()",1,1,1
"com.google.android.util.AbstractMessageParser.Token.setCaps()",1,1,1
"com.google.android.util.AbstractMessageParser.Token.toHtml(boolean)",1,1,1
"com.google.android.util.AbstractMessageParser.TrieNode.TrieNode()",1,1,1
"com.google.android.util.AbstractMessageParser.TrieNode.TrieNode(String)",1,1,1
"com.google.android.util.AbstractMessageParser.TrieNode.addToTrie(TrieNode,String,String)",1,2,2
"com.google.android.util.AbstractMessageParser.TrieNode.exists()",1,1,1
"com.google.android.util.AbstractMessageParser.TrieNode.getChild(char)",1,1,1
"com.google.android.util.AbstractMessageParser.TrieNode.getOrCreateChild(char)",1,2,2
"com.google.android.util.AbstractMessageParser.TrieNode.getText()",1,1,1
"com.google.android.util.AbstractMessageParser.TrieNode.getValue()",1,1,1
"com.google.android.util.AbstractMessageParser.TrieNode.setValue(String)",1,1,1
"com.google.android.util.AbstractMessageParser.Video.Video(String,String)",1,1,1
"com.google.android.util.AbstractMessageParser.Video.getDocID()",1,1,1
"com.google.android.util.AbstractMessageParser.Video.getInfo()",1,1,1
"com.google.android.util.AbstractMessageParser.Video.getRssUrl(String)",1,1,1
"com.google.android.util.AbstractMessageParser.Video.getURL(String)",1,1,1
"com.google.android.util.AbstractMessageParser.Video.getURL(String,String)",1,2,3
"com.google.android.util.AbstractMessageParser.Video.isHtml()",1,1,1
"com.google.android.util.AbstractMessageParser.Video.isMedia()",1,1,1
"com.google.android.util.AbstractMessageParser.Video.matchURL(String,String)",2,2,2
"com.google.android.util.AbstractMessageParser.YouTubeVideo.YouTubeVideo(String,String)",1,1,1
"com.google.android.util.AbstractMessageParser.YouTubeVideo.getDocID()",1,1,1
"com.google.android.util.AbstractMessageParser.YouTubeVideo.getInfo()",1,1,1
"com.google.android.util.AbstractMessageParser.YouTubeVideo.getPrefixedURL(boolean,String,String,String)",1,2,5
"com.google.android.util.AbstractMessageParser.YouTubeVideo.getRssUrl(String)",1,1,1
"com.google.android.util.AbstractMessageParser.YouTubeVideo.getURL(String)",1,1,1
"com.google.android.util.AbstractMessageParser.YouTubeVideo.getURL(String,String)",1,2,3
"com.google.android.util.AbstractMessageParser.YouTubeVideo.isHtml()",1,1,1
"com.google.android.util.AbstractMessageParser.YouTubeVideo.isMedia()",1,1,1
"com.google.android.util.AbstractMessageParser.YouTubeVideo.matchURL(String,String)",2,2,2
"com.google.android.util.AbstractMessageParser.addToken(Token)",1,1,1
"com.google.android.util.AbstractMessageParser.addURLToken(String,String)",1,1,1
"com.google.android.util.AbstractMessageParser.buildParts(String)",1,6,6
"com.google.android.util.AbstractMessageParser.getCharClass(int)",6,5,7
"com.google.android.util.AbstractMessageParser.getPart(int)",1,1,1
"com.google.android.util.AbstractMessageParser.getPartCount()",1,1,1
"com.google.android.util.AbstractMessageParser.getParts()",1,1,1
"com.google.android.util.AbstractMessageParser.getRawText()",1,1,1
"com.google.android.util.AbstractMessageParser.isDomainChar(char)",1,3,3
"com.google.android.util.AbstractMessageParser.isFormatChar(char)",3,2,3
"com.google.android.util.AbstractMessageParser.isPunctuation(char)",3,2,3
"com.google.android.util.AbstractMessageParser.isSmileyBreak(char,char)",3,3,3
"com.google.android.util.AbstractMessageParser.isSmileyBreak(int)",3,3,4
"com.google.android.util.AbstractMessageParser.isURLBreak(int)",3,2,3
"com.google.android.util.AbstractMessageParser.isValidDomain(String)",2,1,2
"com.google.android.util.AbstractMessageParser.isWordBreak(int)",1,1,1
"com.google.android.util.AbstractMessageParser.lastPart()",1,1,1
"com.google.android.util.AbstractMessageParser.longestMatch(TrieNode,AbstractMessageParser,int)",1,1,1
"com.google.android.util.AbstractMessageParser.longestMatch(TrieNode,AbstractMessageParser,int,boolean)",3,6,7
"com.google.android.util.AbstractMessageParser.matches(TrieNode,String)",4,3,4
"com.google.android.util.AbstractMessageParser.parse()",5,22,23
"com.google.android.util.AbstractMessageParser.parseAcronym()",3,2,3
"com.google.android.util.AbstractMessageParser.parseFormatting()",3,8,11
"com.google.android.util.AbstractMessageParser.parseMusicTrack()",2,3,3
"com.google.android.util.AbstractMessageParser.parseSmiley()",4,2,7
"com.google.android.util.AbstractMessageParser.parseText()",2,3,9
"com.google.android.util.AbstractMessageParser.parseURL()",14,19,30
"com.google.android.util.AbstractMessageParser.reverse(String)",1,2,2
"com.google.android.util.AbstractMessageParser.toHtml()",5,7,14
"com.google.android.util.AbstractMessageParser.tokenForUrl(String,String)",6,1,6
"com.google.android.util.SmileyParser.SmileyParser(String,SmileyResources)",1,1,1
"com.google.android.util.SmileyParser.getResources()",1,1,1
"com.google.android.util.SmileyParser.getSpannableString(Context)",2,4,5
"com.google.android.util.SmileyResources.SmileyResources(String[],int[])",1,2,2
"com.google.android.util.SmileyResources.getAcronyms()",1,1,1
"com.google.android.util.SmileyResources.getDomainSuffixes()",1,1,1
"com.google.android.util.SmileyResources.getSchemes()",1,1,1
"com.google.android.util.SmileyResources.getSmileyRes(String)",2,1,2
"com.google.android.util.SmileyResources.getSmileys()",1,1,1
"null.acceptMatch(CharSequence,int,int)",4,2,4
"null.addCallback(Callback)",1,2,2
"null.afterTextChanged(Editable)",1,1,1
"null.append(long,Object)",1,1,1
"null.beforeTextChanged(CharSequence,int,int,int)",1,1,1
"null.checkClientTrusted(X509Certificate[],String)",1,1,1
"null.checkServerTrusted(X509Certificate[],String)",1,1,1
"null.compare(Prediction,Prediction)",3,1,3
"null.create()",1,3,3
"null.createFromParcel(Parcel)",1,1,1
"null.createService(ContextImpl)",1,1,1
"null.createStaticService()",1,1,1
"null.dispatchAppVisibility(boolean)",1,2,3
"null.dispatchPrimaryClipChanged()",1,1,1
"null.dispatchWallpaperCommand(String,int,int,int,Bundle,boolean)",1,2,2
"null.dispatchWallpaperOffsets(float,float,float,float,boolean)",1,3,4
"null.dump(FileDescriptor,PrintWriter,String[])",1,3,3
"null.endTransition(LayoutTransition,ViewGroup,View,int)",1,2,3
"null.finish()",1,1,1
"null.format(LogRecord)",2,2,2
"null.format(int)",1,1,1
"null.getAcceptedIssuers()",1,1,1
"null.getService(ContextImpl)",1,1,1
"null.getSurface()",1,1,1
"null.getSurfaceFrame()",1,1,1
"null.handleKey(KeyEvent,FinishedCallback)",1,1,1
"null.handleMessage(Message)",2,3,6
"null.handleMotion(MotionEvent,FinishedCallback)",1,2,2
"null.initialValue()",1,1,1
"null.internalLockCanvas(Rect)",2,7,10
"null.isCreating()",1,1,1
"null.lockCanvas()",1,1,1
"null.lockCanvas(Rect)",1,1,1
"null.newArray(int)",1,1,1
"null.newInstance()",1,1,1
"null.newThread(Runnable)",1,1,1
"null.onAcquired(InvalidateInfo)",1,1,1
"null.onAcquired(Node)",1,1,1
"null.onAcquired(VelocityTracker)",1,1,1
"null.onAllowLockCanvas()",1,1,1
"null.onAnimationCancel(Animator)",1,1,1
"null.onAnimationEnd(Animation)",1,1,1
"null.onAnimationEnd(Animator)",1,1,1
"null.onAnimationRepeat(Animation)",1,1,1
"null.onAnimationRepeat(Animator)",1,1,1
"null.onAnimationStart(Animation)",1,1,1
"null.onAnimationStart(Animator)",1,1,1
"null.onBindMethod(InputBindResult)",1,1,1
"null.onBufferingUpdate(MediaPlayer,int)",1,1,1
"null.onChange(boolean)",1,3,3
"null.onChanged()",1,1,1
"null.onClick(DialogInterface,int)",1,1,1
"null.onClick(View)",1,4,5
"null.onClose()",1,1,1
"null.onCompletion(MediaPlayer)",1,3,3
"null.onComputeInternalInsets(InternalInsetsInfo)",1,2,2
"null.onCustomViewHidden()",1,4,4
"null.onEditorAction(TextView,int,KeyEvent)",1,1,1
"null.onError(MediaPlayer,int,int)",3,5,7
"null.onInvalidated()",1,1,1
"null.onItemClick(AdapterView<?>,View,int,long)",1,2,2
"null.onItemSelected(AdapterView,View,int,long)",1,2,2
"null.onItemSelected(AdapterView<?>,View,int,long)",1,2,2
"null.onKey(View,int,KeyEvent)",8,11,12
"null.onLoadClass(Class)",1,1,1
"null.onNothingSelected(AdapterView)",1,1,1
"null.onNothingSelected(AdapterView<?>)",1,2,2
"null.onPrepared(MediaPlayer)",1,17,19
"null.onProgressChanged(SeekBar,int,boolean)",2,2,3
"null.onQueryTextChanged(String)",1,1,1
"null.onReceive(Context,Intent)",2,12,19
"null.onRelayoutContainer()",1,1,1
"null.onReleased(InvalidateInfo)",1,1,1
"null.onReleased(Node)",1,1,1
"null.onReleased(VelocityTracker)",1,1,1
"null.onScrollChanged()",1,3,4
"null.onServiceConnected(ComponentName,IBinder)",1,3,3
"null.onServiceConnected(int,BluetoothProfile)",1,1,1
"null.onServiceDisconnected(ComponentName)",1,3,3
"null.onServiceDisconnected(int)",1,1,1
"null.onStartTrackingTouch(SeekBar)",1,1,1
"null.onStopTrackingTouch(SeekBar)",1,1,1
"null.onStorageStateChanged(String,String,String)",1,1,1
"null.onSubmitQuery(String)",1,1,1
"null.onSuggestionClicked(int)",1,1,1
"null.onSuggestionSelected(int)",1,1,1
"null.onTerribleFailure(String,TerribleFailure)",1,1,1
"null.onTextChanged(CharSequence,int,int,int)",1,1,1
"null.onTimeChanged(TimePicker,int,int)",1,1,1
"null.onTouch(View,MotionEvent)",1,3,3
"null.onUnbindMethod(int)",1,1,1
"null.onUpdateSurface()",1,1,1
"null.onVideoSizeChanged(MediaPlayer,int,int)",1,2,3
"null.process(HttpRequest,HttpContext)",2,2,3
"null.put(long,Object)",1,1,1
"null.removeCallback(Callback)",1,1,1
"null.removeEldestEntry(Entry<String, SQLiteCompiledSql>)",2,1,2
"null.resized(int,int,Rect,Rect,boolean,Configuration)",1,1,2
"null.run()",1,1,1
"null.setActive(boolean)",1,1,2
"null.setEnabled(boolean)",1,1,2
"null.setExpandable(boolean)",1,1,1
"null.setFixedSize(int,int)",1,1,1
"null.setFormat(int)",1,2,3
"null.setKeepScreenOn(boolean)",1,1,1
"null.setSizeFromLayout()",1,2,3
"null.setType(int)",1,1,1
"null.setUsingInputMethod(boolean)",1,1,1
"null.startTransition(LayoutTransition,ViewGroup,View,int)",1,2,2
"null.surfaceChanged(SurfaceHolder,int,int,int)",1,5,8
"null.surfaceCreated(SurfaceHolder)",1,1,1
"null.surfaceDestroyed(SurfaceHolder)",1,2,2
"null.transformUrl(Matcher,String)",1,1,1
"null.unlockCanvasAndPost(Canvas)",1,1,1

