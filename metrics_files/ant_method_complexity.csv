Method,ev(G),iv(G),v(G)
"null.compare(Object,Object)",1,1,1
"null.getCollection()",4,3,4
"null.getFallbackFormat()",1,1,1
"null.getPrimaryFormat()",1,1,1
"null.isFilesystemOnly()",1,1,1
"null.iterator()",1,1,1
"null.log(String)",1,1,1
"null.read()",1,1,1
"null.size()",1,1,1
"org.apache.tools.ant.AntClassLoader.AntClassLoader()",1,1,1
"org.apache.tools.ant.AntClassLoader.AntClassLoader(ClassLoader,Project,Path,boolean)",1,2,2
"org.apache.tools.ant.AntClassLoader.AntClassLoader(ClassLoader,boolean)",1,1,1
"org.apache.tools.ant.AntClassLoader.AntClassLoader(Project,Path)",1,1,1
"org.apache.tools.ant.AntClassLoader.AntClassLoader(Project,Path,boolean)",1,1,1
"org.apache.tools.ant.AntClassLoader.ResourceEnumeration.ResourceEnumeration(String)",1,1,1
"org.apache.tools.ant.AntClassLoader.ResourceEnumeration.findNextResource()",1,3,4
"org.apache.tools.ant.AntClassLoader.ResourceEnumeration.hasMoreElements()",1,1,1
"org.apache.tools.ant.AntClassLoader.ResourceEnumeration.nextElement()",1,1,1
"org.apache.tools.ant.AntClassLoader.addJavaLibraries()",1,2,2
"org.apache.tools.ant.AntClassLoader.addLoaderPackageRoot(String)",1,1,2
"org.apache.tools.ant.AntClassLoader.addPathElement(String)",1,2,3
"org.apache.tools.ant.AntClassLoader.addPathFile(File)",7,9,13
"org.apache.tools.ant.AntClassLoader.addSystemPackageRoot(String)",1,1,2
"org.apache.tools.ant.AntClassLoader.buildFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.AntClassLoader.buildStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.AntClassLoader.cleanup()",1,3,4
"org.apache.tools.ant.AntClassLoader.defineClassFromData(File,byte[],String)",1,1,1
"org.apache.tools.ant.AntClassLoader.definePackage(File,String)",3,2,4
"org.apache.tools.ant.AntClassLoader.definePackage(File,String,Manifest)",1,12,13
"org.apache.tools.ant.AntClassLoader.findBaseClass(String)",2,2,2
"org.apache.tools.ant.AntClassLoader.findClass(String)",1,1,1
"org.apache.tools.ant.AntClassLoader.findClassInComponents(String)",3,5,7
"org.apache.tools.ant.AntClassLoader.findResources(String)",2,4,4
"org.apache.tools.ant.AntClassLoader.forceLoadClass(String)",1,2,2
"org.apache.tools.ant.AntClassLoader.forceLoadSystemClass(String)",1,2,2
"org.apache.tools.ant.AntClassLoader.getClassFilename(String)",1,1,1
"org.apache.tools.ant.AntClassLoader.getClassFromStream(InputStream,String,File)",1,2,2
"org.apache.tools.ant.AntClassLoader.getClasspath()",1,3,3
"org.apache.tools.ant.AntClassLoader.getJarManifest(File)",2,2,3
"org.apache.tools.ant.AntClassLoader.getResource(String)",1,12,12
"org.apache.tools.ant.AntClassLoader.getResourceAsStream(String)",1,7,7
"org.apache.tools.ant.AntClassLoader.getResourceStream(File,String)",5,5,7
"org.apache.tools.ant.AntClassLoader.getResourceURL(File,String)",5,6,9
"org.apache.tools.ant.AntClassLoader.initializeClass(Class)",1,3,5
"org.apache.tools.ant.AntClassLoader.isInPath(File)",3,2,3
"org.apache.tools.ant.AntClassLoader.isParentFirst(String)",5,3,5
"org.apache.tools.ant.AntClassLoader.loadBaseResource(String)",2,2,2
"org.apache.tools.ant.AntClassLoader.loadClass(String,boolean)",4,5,7
"org.apache.tools.ant.AntClassLoader.loadResource(String)",1,3,3
"org.apache.tools.ant.AntClassLoader.log(String,int)",1,2,2
"org.apache.tools.ant.AntClassLoader.messageLogged(BuildEvent)",1,1,1
"org.apache.tools.ant.AntClassLoader.resetThreadContextLoader()",1,3,3
"org.apache.tools.ant.AntClassLoader.setClassPath(Path)",1,3,4
"org.apache.tools.ant.AntClassLoader.setIsolated(boolean)",1,1,1
"org.apache.tools.ant.AntClassLoader.setParent(ClassLoader)",1,2,2
"org.apache.tools.ant.AntClassLoader.setParentFirst(boolean)",1,1,1
"org.apache.tools.ant.AntClassLoader.setProject(Project)",1,2,2
"org.apache.tools.ant.AntClassLoader.setThreadContextLoader()",2,4,5
"org.apache.tools.ant.AntClassLoader.subBuildFinished(BuildEvent)",1,2,2
"org.apache.tools.ant.AntClassLoader.subBuildStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.AntClassLoader.targetFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.AntClassLoader.targetStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.AntClassLoader.taskFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.AntClassLoader.taskStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.AntClassLoader.toString()",1,1,1
"org.apache.tools.ant.AntTypeDefinition.checkClass(Project)",5,6,7
"org.apache.tools.ant.AntTypeDefinition.create(Project)",1,1,1
"org.apache.tools.ant.AntTypeDefinition.createAndSet(Project,Class)",1,3,7
"org.apache.tools.ant.AntTypeDefinition.extractClassname(Class)",1,2,2
"org.apache.tools.ant.AntTypeDefinition.getClassLoader()",1,1,1
"org.apache.tools.ant.AntTypeDefinition.getClassName()",1,1,1
"org.apache.tools.ant.AntTypeDefinition.getExposedClass(Project)",3,4,5
"org.apache.tools.ant.AntTypeDefinition.getName()",1,1,1
"org.apache.tools.ant.AntTypeDefinition.getTypeClass(Project)",1,3,3
"org.apache.tools.ant.AntTypeDefinition.icreate(Project)",6,2,7
"org.apache.tools.ant.AntTypeDefinition.innerCreateAndSet(Class,Project)",1,2,3
"org.apache.tools.ant.AntTypeDefinition.innerGetTypeClass()",2,2,3
"org.apache.tools.ant.AntTypeDefinition.sameDefinition(AntTypeDefinition,Project)",1,6,6
"org.apache.tools.ant.AntTypeDefinition.setAdaptToClass(Class)",1,1,1
"org.apache.tools.ant.AntTypeDefinition.setAdapterClass(Class)",1,1,1
"org.apache.tools.ant.AntTypeDefinition.setClass(Class)",2,3,4
"org.apache.tools.ant.AntTypeDefinition.setClassLoader(ClassLoader)",1,1,1
"org.apache.tools.ant.AntTypeDefinition.setClassName(String)",1,1,1
"org.apache.tools.ant.AntTypeDefinition.setName(String)",1,1,1
"org.apache.tools.ant.AntTypeDefinition.similarDefinition(AntTypeDefinition,Project)",2,8,9
"org.apache.tools.ant.BuildEvent.BuildEvent(Project)",1,1,1
"org.apache.tools.ant.BuildEvent.BuildEvent(Target)",1,1,1
"org.apache.tools.ant.BuildEvent.BuildEvent(Task)",1,1,1
"org.apache.tools.ant.BuildEvent.getException()",1,1,1
"org.apache.tools.ant.BuildEvent.getMessage()",1,1,1
"org.apache.tools.ant.BuildEvent.getPriority()",1,1,1
"org.apache.tools.ant.BuildEvent.getProject()",1,1,1
"org.apache.tools.ant.BuildEvent.getTarget()",1,1,1
"org.apache.tools.ant.BuildEvent.getTask()",1,1,1
"org.apache.tools.ant.BuildEvent.setException(Throwable)",1,1,1
"org.apache.tools.ant.BuildEvent.setMessage(String,int)",1,1,1
"org.apache.tools.ant.BuildException.BuildException()",1,1,1
"org.apache.tools.ant.BuildException.BuildException(String)",1,1,1
"org.apache.tools.ant.BuildException.BuildException(String,Location)",1,1,1
"org.apache.tools.ant.BuildException.BuildException(String,Throwable)",1,1,1
"org.apache.tools.ant.BuildException.BuildException(String,Throwable,Location)",1,1,1
"org.apache.tools.ant.BuildException.BuildException(Throwable)",1,1,1
"org.apache.tools.ant.BuildException.BuildException(Throwable,Location)",1,1,1
"org.apache.tools.ant.BuildException.getCause()",1,1,1
"org.apache.tools.ant.BuildException.getException()",1,1,1
"org.apache.tools.ant.BuildException.getLocation()",1,1,1
"org.apache.tools.ant.BuildException.printStackTrace()",1,1,1
"org.apache.tools.ant.BuildException.printStackTrace(PrintStream)",1,2,2
"org.apache.tools.ant.BuildException.printStackTrace(PrintWriter)",1,2,2
"org.apache.tools.ant.BuildException.setLocation(Location)",1,1,1
"org.apache.tools.ant.BuildException.toString()",1,1,1
"org.apache.tools.ant.ComponentHelper.AntTypeTable.AntTypeTable(Project)",1,1,1
"org.apache.tools.ant.ComponentHelper.AntTypeTable.contains(Object)",1,4,4
"org.apache.tools.ant.ComponentHelper.AntTypeTable.containsValue(Object)",1,1,1
"org.apache.tools.ant.ComponentHelper.AntTypeTable.create(String)",1,2,2
"org.apache.tools.ant.ComponentHelper.AntTypeTable.get(Object)",1,1,1
"org.apache.tools.ant.ComponentHelper.AntTypeTable.getDefinition(String)",1,1,1
"org.apache.tools.ant.ComponentHelper.AntTypeTable.getExposedClass(String)",1,2,2
"org.apache.tools.ant.ComponentHelper.AntTypeTable.getTypeClass(String)",1,2,2
"org.apache.tools.ant.ComponentHelper.ComponentHelper()",1,1,1
"org.apache.tools.ant.ComponentHelper.addCreatedTask(String,Task)",1,2,2
"org.apache.tools.ant.ComponentHelper.addDataTypeDefinition(AntTypeDefinition)",1,1,1
"org.apache.tools.ant.ComponentHelper.addDataTypeDefinition(String,Class)",1,1,1
"org.apache.tools.ant.ComponentHelper.addTaskDefinition(String,Class)",1,1,1
"org.apache.tools.ant.ComponentHelper.checkNamespace(String)",3,1,4
"org.apache.tools.ant.ComponentHelper.checkTaskClass(Class)",3,5,5
"org.apache.tools.ant.ComponentHelper.createComponent(String)",1,2,2
"org.apache.tools.ant.ComponentHelper.createComponent(UnknownElement,String,String)",1,2,2
"org.apache.tools.ant.ComponentHelper.createDataType(String)",1,1,1
"org.apache.tools.ant.ComponentHelper.createNewTask(String)",4,3,5
"org.apache.tools.ant.ComponentHelper.createTask(String)",1,4,4
"org.apache.tools.ant.ComponentHelper.diagnoseCreationFailure(String,String)",1,17,17
"org.apache.tools.ant.ComponentHelper.enterAntLib(String)",1,1,1
"org.apache.tools.ant.ComponentHelper.exitAntLib()",1,2,2
"org.apache.tools.ant.ComponentHelper.getAntTypeTable()",1,1,1
"org.apache.tools.ant.ComponentHelper.getClassLoader(ClassLoader)",1,3,3
"org.apache.tools.ant.ComponentHelper.getComponentClass(String)",1,2,2
"org.apache.tools.ant.ComponentHelper.getComponentHelper(Project)",2,1,2
"org.apache.tools.ant.ComponentHelper.getCurrentAntlibUri()",1,1,1
"org.apache.tools.ant.ComponentHelper.getDataTypeDefinitions()",4,4,5
"org.apache.tools.ant.ComponentHelper.getDefinition(String)",1,1,1
"org.apache.tools.ant.ComponentHelper.getElementName(Object)",1,1,1
"org.apache.tools.ant.ComponentHelper.getElementName(Object,boolean)",3,4,5
"org.apache.tools.ant.ComponentHelper.getNext()",1,1,1
"org.apache.tools.ant.ComponentHelper.getTaskDefinitions()",4,4,5
"org.apache.tools.ant.ComponentHelper.initDefaultDefinitions()",1,1,1
"org.apache.tools.ant.ComponentHelper.initSubProject(ComponentHelper)",1,3,3
"org.apache.tools.ant.ComponentHelper.initTasks()",2,2,4
"org.apache.tools.ant.ComponentHelper.initTypes()",2,3,6
"org.apache.tools.ant.ComponentHelper.invalidateCreatedTasks(String)",1,4,4
"org.apache.tools.ant.ComponentHelper.sameDefinition(AntTypeDefinition,AntTypeDefinition)",1,3,3
"org.apache.tools.ant.ComponentHelper.setNext(ComponentHelper)",1,1,1
"org.apache.tools.ant.ComponentHelper.setProject(Project)",1,1,1
"org.apache.tools.ant.ComponentHelper.updateDataTypeDefinition(AntTypeDefinition)",3,4,7
"org.apache.tools.ant.ComponentHelper.validDefinition(AntTypeDefinition)",1,2,2
"org.apache.tools.ant.DefaultLogger.DefaultLogger()",1,1,1
"org.apache.tools.ant.DefaultLogger.buildFinished(BuildEvent)",1,4,5
"org.apache.tools.ant.DefaultLogger.buildStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.DefaultLogger.formatTime(long)",1,1,1
"org.apache.tools.ant.DefaultLogger.getBuildFailedMessage()",1,1,1
"org.apache.tools.ant.DefaultLogger.getBuildSuccessfulMessage()",1,1,1
"org.apache.tools.ant.DefaultLogger.log(String)",1,1,1
"org.apache.tools.ant.DefaultLogger.messageLogged(BuildEvent)",1,9,9
"org.apache.tools.ant.DefaultLogger.printMessage(String,PrintStream,int)",1,1,1
"org.apache.tools.ant.DefaultLogger.setEmacsMode(boolean)",1,1,1
"org.apache.tools.ant.DefaultLogger.setErrorPrintStream(PrintStream)",1,1,1
"org.apache.tools.ant.DefaultLogger.setMessageOutputLevel(int)",1,1,1
"org.apache.tools.ant.DefaultLogger.setOutputPrintStream(PrintStream)",1,1,1
"org.apache.tools.ant.DefaultLogger.targetFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.DefaultLogger.targetStarted(BuildEvent)",1,3,3
"org.apache.tools.ant.DefaultLogger.taskFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.DefaultLogger.taskStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.DemuxInputStream.DemuxInputStream(Project)",1,1,1
"org.apache.tools.ant.DemuxInputStream.read()",2,1,2
"org.apache.tools.ant.DemuxInputStream.read(byte[],int,int)",1,1,1
"org.apache.tools.ant.DemuxOutputStream.DemuxOutputStream(Project,boolean)",1,1,1
"org.apache.tools.ant.DemuxOutputStream.close()",1,1,1
"org.apache.tools.ant.DemuxOutputStream.flush()",1,2,2
"org.apache.tools.ant.DemuxOutputStream.getBufferInfo()",1,2,2
"org.apache.tools.ant.DemuxOutputStream.processBuffer(ByteArrayOutputStream)",1,1,1
"org.apache.tools.ant.DemuxOutputStream.processFlush(ByteArrayOutputStream)",1,1,1
"org.apache.tools.ant.DemuxOutputStream.removeBuffer()",1,1,1
"org.apache.tools.ant.DemuxOutputStream.resetBufferInfo()",1,1,2
"org.apache.tools.ant.DemuxOutputStream.write(byte[],int,int)",1,4,9
"org.apache.tools.ant.DemuxOutputStream.write(int)",1,5,5
"org.apache.tools.ant.Diagnostics.Diagnostics()",1,1,1
"org.apache.tools.ant.Diagnostics.doReport(PrintStream)",1,2,2
"org.apache.tools.ant.Diagnostics.doReportAntHomeLibraries(PrintStream)",1,1,1
"org.apache.tools.ant.Diagnostics.doReportAntProperties(PrintStream)",1,1,1
"org.apache.tools.ant.Diagnostics.doReportLocale(PrintStream)",1,1,1
"org.apache.tools.ant.Diagnostics.doReportParserInfo(PrintStream)",1,1,1
"org.apache.tools.ant.Diagnostics.doReportProxy(PrintStream)",1,2,5
"org.apache.tools.ant.Diagnostics.doReportSystemProperties(PrintStream)",1,3,4
"org.apache.tools.ant.Diagnostics.doReportTasksAvailability(PrintStream)",1,8,8
"org.apache.tools.ant.Diagnostics.doReportTempDir(PrintStream)",3,8,8
"org.apache.tools.ant.Diagnostics.doReportUserHomeLibraries(PrintStream)",1,1,1
"org.apache.tools.ant.Diagnostics.doReportWhich(PrintStream)",1,5,6
"org.apache.tools.ant.Diagnostics.getClassLocation(Class)",1,2,2
"org.apache.tools.ant.Diagnostics.getImplementationVersion(Class)",1,1,1
"org.apache.tools.ant.Diagnostics.getNamespaceParserLocation()",1,2,2
"org.apache.tools.ant.Diagnostics.getNamespaceParserName()",1,2,2
"org.apache.tools.ant.Diagnostics.getSAXParser()",2,2,3
"org.apache.tools.ant.Diagnostics.getXMLParserLocation()",2,1,2
"org.apache.tools.ant.Diagnostics.getXmlParserName()",2,1,2
"org.apache.tools.ant.Diagnostics.header(PrintStream,String)",1,1,1
"org.apache.tools.ant.Diagnostics.ignoreThrowable(Throwable)",1,1,1
"org.apache.tools.ant.Diagnostics.isOptionalAvailable()",1,1,2
"org.apache.tools.ant.Diagnostics.listJarFiles(File)",1,1,1
"org.apache.tools.ant.Diagnostics.listLibraries()",2,1,2
"org.apache.tools.ant.Diagnostics.main(String[])",1,1,1
"org.apache.tools.ant.Diagnostics.printLibraries(File[],PrintStream)",2,3,3
"org.apache.tools.ant.Diagnostics.printParserInfo(PrintStream,String,String,String)",1,1,3
"org.apache.tools.ant.Diagnostics.printProperty(PrintStream,String)",1,2,2
"org.apache.tools.ant.Diagnostics.validateVersion()",2,3,4
"org.apache.tools.ant.DirectoryScanner.DirectoryScanner()",1,1,1
"org.apache.tools.ant.DirectoryScanner.accountForIncludedDir(String,File,boolean)",2,8,9
"org.apache.tools.ant.DirectoryScanner.accountForIncludedFile(String,File)",2,5,6
"org.apache.tools.ant.DirectoryScanner.addDefaultExclude(String)",2,2,2
"org.apache.tools.ant.DirectoryScanner.addDefaultExcludes()",1,3,4
"org.apache.tools.ant.DirectoryScanner.addExcludes(String[])",1,4,6
"org.apache.tools.ant.DirectoryScanner.checkIncludePatterns()",12,29,37
"org.apache.tools.ant.DirectoryScanner.clearCaches()",1,1,1
"org.apache.tools.ant.DirectoryScanner.clearResults()",1,1,1
"org.apache.tools.ant.DirectoryScanner.contentsExcluded(String)",3,3,5
"org.apache.tools.ant.DirectoryScanner.couldHoldIncluded(String)",3,4,5
"org.apache.tools.ant.DirectoryScanner.ensureNonPatternSetsReady()",1,2,2
"org.apache.tools.ant.DirectoryScanner.fillNonPatternSet(Set,String[])",1,5,5
"org.apache.tools.ant.DirectoryScanner.findFile(File,String,boolean)",4,3,4
"org.apache.tools.ant.DirectoryScanner.findFile(File,Vector,boolean)",8,7,10
"org.apache.tools.ant.DirectoryScanner.getBasedir()",1,1,1
"org.apache.tools.ant.DirectoryScanner.getDefaultExcludes()",1,1,1
"org.apache.tools.ant.DirectoryScanner.getDeselectedDirectories()",1,1,1
"org.apache.tools.ant.DirectoryScanner.getDeselectedFiles()",1,1,1
"org.apache.tools.ant.DirectoryScanner.getExcludedDirectories()",1,1,1
"org.apache.tools.ant.DirectoryScanner.getExcludedFiles()",1,1,1
"org.apache.tools.ant.DirectoryScanner.getIncludedDirectories()",2,1,2
"org.apache.tools.ant.DirectoryScanner.getIncludedDirsCount()",2,1,2
"org.apache.tools.ant.DirectoryScanner.getIncludedFiles()",2,1,2
"org.apache.tools.ant.DirectoryScanner.getIncludedFilesCount()",2,1,2
"org.apache.tools.ant.DirectoryScanner.getNotIncludedDirectories()",1,1,1
"org.apache.tools.ant.DirectoryScanner.getNotIncludedFiles()",1,1,1
"org.apache.tools.ant.DirectoryScanner.getResource(String)",1,1,1
"org.apache.tools.ant.DirectoryScanner.getScannedDirs()",1,1,1
"org.apache.tools.ant.DirectoryScanner.hasBeenScanned(String)",1,1,1
"org.apache.tools.ant.DirectoryScanner.isCaseSensitive()",1,1,1
"org.apache.tools.ant.DirectoryScanner.isDeeper(String,String)",1,2,2
"org.apache.tools.ant.DirectoryScanner.isEverythingIncluded()",1,1,1
"org.apache.tools.ant.DirectoryScanner.isExcluded(String)",4,3,5
"org.apache.tools.ant.DirectoryScanner.isFollowSymlinks()",1,1,1
"org.apache.tools.ant.DirectoryScanner.isIncluded(String)",4,3,5
"org.apache.tools.ant.DirectoryScanner.isMorePowerfulThanExcludes(String,String)",3,2,3
"org.apache.tools.ant.DirectoryScanner.isSelected(String,File)",4,3,4
"org.apache.tools.ant.DirectoryScanner.isSymlink(File,String)",1,1,1
"org.apache.tools.ant.DirectoryScanner.isSymlink(File,Vector)",2,4,4
"org.apache.tools.ant.DirectoryScanner.list(File)",1,3,3
"org.apache.tools.ant.DirectoryScanner.match(String,String)",1,1,1
"org.apache.tools.ant.DirectoryScanner.match(String,String,boolean)",1,1,1
"org.apache.tools.ant.DirectoryScanner.matchPath(String,String)",1,1,1
"org.apache.tools.ant.DirectoryScanner.matchPath(String,String,boolean)",1,1,1
"org.apache.tools.ant.DirectoryScanner.matchPatternStart(String,String)",1,1,1
"org.apache.tools.ant.DirectoryScanner.matchPatternStart(String,String,boolean)",1,1,1
"org.apache.tools.ant.DirectoryScanner.normalizePattern(String)",1,1,2
"org.apache.tools.ant.DirectoryScanner.removeDefaultExclude(String)",1,1,1
"org.apache.tools.ant.DirectoryScanner.resetDefaultExcludes()",1,2,2
"org.apache.tools.ant.DirectoryScanner.scan()",7,7,17
"org.apache.tools.ant.DirectoryScanner.scandir(File,String,boolean)",6,17,20
"org.apache.tools.ant.DirectoryScanner.setBasedir(File)",1,1,1
"org.apache.tools.ant.DirectoryScanner.setBasedir(String)",1,2,2
"org.apache.tools.ant.DirectoryScanner.setCaseSensitive(boolean)",1,1,1
"org.apache.tools.ant.DirectoryScanner.setExcludes(String[])",1,3,3
"org.apache.tools.ant.DirectoryScanner.setFollowSymlinks(boolean)",1,1,1
"org.apache.tools.ant.DirectoryScanner.setIncludes(String[])",1,3,3
"org.apache.tools.ant.DirectoryScanner.setSelectors(FileSelector[])",1,1,1
"org.apache.tools.ant.DirectoryScanner.slowScan()",3,7,13
"org.apache.tools.ant.ExitException.ExitException(String,int)",1,1,1
"org.apache.tools.ant.ExitException.ExitException(int)",1,1,1
"org.apache.tools.ant.ExitException.getStatus()",1,1,1
"org.apache.tools.ant.ExitStatusException.ExitStatusException(String,int)",1,1,1
"org.apache.tools.ant.ExitStatusException.ExitStatusException(int)",1,1,1
"org.apache.tools.ant.ExitStatusException.getStatus()",1,1,1
"org.apache.tools.ant.IntrospectionHelper.AddNestedCreator.AddNestedCreator(Method,Constructor,int)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.AddNestedCreator.create(Project,Object,Object)",1,4,5
"org.apache.tools.ant.IntrospectionHelper.AddNestedCreator.isPolyMorphic()",1,1,1
"org.apache.tools.ant.IntrospectionHelper.AddNestedCreator.istore(Object,Object)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.AddNestedCreator.store(Object,Object)",1,2,2
"org.apache.tools.ant.IntrospectionHelper.AttributeSetter.AttributeSetter(Method)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.CreateNestedCreator.CreateNestedCreator(Method)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.CreateNestedCreator.create(Project,Object,Object)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.Creator.Creator(Project,Object,NestedCreator)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.Creator.create()",6,4,11
"org.apache.tools.ant.IntrospectionHelper.Creator.getRealObject()",1,1,1
"org.apache.tools.ant.IntrospectionHelper.Creator.setPolyType(String)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.Creator.store()",3,2,7
"org.apache.tools.ant.IntrospectionHelper.IntrospectionHelper(Class)",9,40,45
"org.apache.tools.ant.IntrospectionHelper.NestedCreator.NestedCreator(Method)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.NestedCreator.getRealObject()",1,1,1
"org.apache.tools.ant.IntrospectionHelper.NestedCreator.isPolyMorphic()",1,1,1
"org.apache.tools.ant.IntrospectionHelper.NestedCreator.store(Object,Object)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.addText(Project,Object,String)",4,4,6
"org.apache.tools.ant.IntrospectionHelper.buildFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.buildStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.createAddTypeCreator(Project,Object,String)",5,4,8
"org.apache.tools.ant.IntrospectionHelper.createAttributeSetter(Method,Class,String)",8,10,17
"org.apache.tools.ant.IntrospectionHelper.createElement(Project,Object,String)",2,3,6
"org.apache.tools.ant.IntrospectionHelper.findMatchingMethod(Class,List)",5,5,5
"org.apache.tools.ant.IntrospectionHelper.getAddTextMethod()",2,2,2
"org.apache.tools.ant.IntrospectionHelper.getAttributeMap()",1,2,2
"org.apache.tools.ant.IntrospectionHelper.getAttributeMethod(String)",2,2,2
"org.apache.tools.ant.IntrospectionHelper.getAttributeType(String)",2,2,2
"org.apache.tools.ant.IntrospectionHelper.getAttributes()",1,1,1
"org.apache.tools.ant.IntrospectionHelper.getElementCreator(Project,String,Object,String,UnknownElement)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.getElementMethod(String)",2,2,2
"org.apache.tools.ant.IntrospectionHelper.getElementName(Project,Object)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.getElementType(String)",2,2,2
"org.apache.tools.ant.IntrospectionHelper.getExtensionPoints()",1,2,2
"org.apache.tools.ant.IntrospectionHelper.getHelper(Class)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.getHelper(Project,Class)",1,4,4
"org.apache.tools.ant.IntrospectionHelper.getNestedCreator(Project,String,Object,String,UnknownElement)",1,9,15
"org.apache.tools.ant.IntrospectionHelper.getNestedElementMap()",1,2,2
"org.apache.tools.ant.IntrospectionHelper.getNestedElements()",1,1,1
"org.apache.tools.ant.IntrospectionHelper.getPropertyName(String,String)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.insertAddTypeMethod(Method)",4,3,4
"org.apache.tools.ant.IntrospectionHelper.isContainer()",1,1,1
"org.apache.tools.ant.IntrospectionHelper.isDynamic()",1,2,2
"org.apache.tools.ant.IntrospectionHelper.isHiddenSetMethod(String,Class)",3,3,5
"org.apache.tools.ant.IntrospectionHelper.messageLogged(BuildEvent)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.setAttribute(Project,Object,String,String)",6,5,9
"org.apache.tools.ant.IntrospectionHelper.storeElement(Project,Object,Object,String)",4,2,7
"org.apache.tools.ant.IntrospectionHelper.supportsCharacters()",1,1,1
"org.apache.tools.ant.IntrospectionHelper.supportsNestedElement(String)",1,3,3
"org.apache.tools.ant.IntrospectionHelper.supportsNestedElement(String,String)",1,5,7
"org.apache.tools.ant.IntrospectionHelper.targetFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.targetStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.taskFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.taskStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.IntrospectionHelper.throwNotSupported(Project,Object,String)",1,1,1
"org.apache.tools.ant.Location.Location()",1,1,1
"org.apache.tools.ant.Location.Location(Locator)",1,1,1
"org.apache.tools.ant.Location.Location(String)",1,1,1
"org.apache.tools.ant.Location.Location(String,int,int)",1,3,3
"org.apache.tools.ant.Location.equals(Object)",4,1,4
"org.apache.tools.ant.Location.getColumnNumber()",1,1,1
"org.apache.tools.ant.Location.getFileName()",1,1,1
"org.apache.tools.ant.Location.getLineNumber()",1,1,1
"org.apache.tools.ant.Location.hashCode()",1,1,1
"org.apache.tools.ant.Location.toString()",1,3,3
"org.apache.tools.ant.MagicNames.MagicNames()",1,1,1
"org.apache.tools.ant.Main.Main()",1,1,1
"org.apache.tools.ant.Main.Main(String[])",1,1,1
"org.apache.tools.ant.Main.addBuildListeners(Project)",1,3,3
"org.apache.tools.ant.Main.addInputHandler(Project)",1,3,3
"org.apache.tools.ant.Main.createLogger()",2,3,3
"org.apache.tools.ant.Main.findBuildFile(String,String)",3,3,4
"org.apache.tools.ant.Main.findTargetPosition(Vector,String)",1,3,4
"org.apache.tools.ant.Main.getAntVersion()",2,3,4
"org.apache.tools.ant.Main.getParentFile(File)",1,2,3
"org.apache.tools.ant.Main.handleLogfile()",1,2,2
"org.apache.tools.ant.Main.main(String[])",1,1,1
"org.apache.tools.ant.Main.printDescription(Project)",1,2,2
"org.apache.tools.ant.Main.printMessage(Throwable)",1,2,2
"org.apache.tools.ant.Main.printTargets(Project,Vector,Vector,String,int)",1,3,4
"org.apache.tools.ant.Main.printTargets(Project,boolean)",3,7,9
"org.apache.tools.ant.Main.printUsage()",1,1,1
"org.apache.tools.ant.Main.printVersion()",1,1,1
"org.apache.tools.ant.Main.processArgs(String[])",31,48,62
"org.apache.tools.ant.Main.runBuild(ClassLoader)",3,13,16
"org.apache.tools.ant.Main.start(String[],Properties,ClassLoader)",1,1,1
"org.apache.tools.ant.Main.startAnt(String[],Properties,ClassLoader)",2,8,9
"org.apache.tools.ant.NoBannerLogger.NoBannerLogger()",1,1,1
"org.apache.tools.ant.NoBannerLogger.messageLogged(BuildEvent)",2,4,5
"org.apache.tools.ant.NoBannerLogger.targetFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.NoBannerLogger.targetStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.PathTokenizer.PathTokenizer(String)",1,1,2
"org.apache.tools.ant.PathTokenizer.hasMoreTokens()",2,1,2
"org.apache.tools.ant.PathTokenizer.nextToken()",1,17,19
"org.apache.tools.ant.Project.AntRefTable.AntRefTable()",1,1,1
"org.apache.tools.ant.Project.AntRefTable.get(Object)",1,2,2
"org.apache.tools.ant.Project.AntRefTable.getReal(Object)",1,1,1
"org.apache.tools.ant.Project.Project()",1,1,1
"org.apache.tools.ant.Project.addBuildListener(BuildListener)",2,1,2
"org.apache.tools.ant.Project.addDataTypeDefinition(String,Class)",1,1,1
"org.apache.tools.ant.Project.addFilter(String,String)",2,1,2
"org.apache.tools.ant.Project.addOrReplaceTarget(String,Target)",1,1,1
"org.apache.tools.ant.Project.addOrReplaceTarget(Target)",1,1,1
"org.apache.tools.ant.Project.addReference(String,Object)",2,2,4
"org.apache.tools.ant.Project.addTarget(String,Target)",2,1,2
"org.apache.tools.ant.Project.addTarget(Target)",1,1,1
"org.apache.tools.ant.Project.addTaskDefinition(String,Class)",1,1,1
"org.apache.tools.ant.Project.checkTaskClass(Class)",3,6,6
"org.apache.tools.ant.Project.copyFile(File,File)",1,1,1
"org.apache.tools.ant.Project.copyFile(File,File,boolean)",1,1,2
"org.apache.tools.ant.Project.copyFile(File,File,boolean,boolean)",1,1,2
"org.apache.tools.ant.Project.copyFile(File,File,boolean,boolean,boolean)",1,1,2
"org.apache.tools.ant.Project.copyFile(String,String)",1,1,1
"org.apache.tools.ant.Project.copyFile(String,String,boolean)",1,1,2
"org.apache.tools.ant.Project.copyFile(String,String,boolean,boolean)",1,1,2
"org.apache.tools.ant.Project.copyFile(String,String,boolean,boolean,boolean)",1,1,2
"org.apache.tools.ant.Project.copyInheritedProperties(Project)",1,1,1
"org.apache.tools.ant.Project.copyUserProperties(Project)",1,1,1
"org.apache.tools.ant.Project.createClassLoader(Path)",1,1,1
"org.apache.tools.ant.Project.createDataType(String)",1,1,1
"org.apache.tools.ant.Project.createSubProject()",1,1,2
"org.apache.tools.ant.Project.createTask(String)",1,1,1
"org.apache.tools.ant.Project.defaultInput(byte[],int,int)",2,2,2
"org.apache.tools.ant.Project.demuxFlush(String,boolean)",1,3,4
"org.apache.tools.ant.Project.demuxInput(byte[],int,int)",2,2,2
"org.apache.tools.ant.Project.demuxOutput(String,boolean)",1,3,4
"org.apache.tools.ant.Project.executeSortedTargets(Vector)",8,7,14
"org.apache.tools.ant.Project.executeTarget(String)",2,1,2
"org.apache.tools.ant.Project.executeTargets(Vector)",1,1,1
"org.apache.tools.ant.Project.fireBuildFinished(Throwable)",1,2,2
"org.apache.tools.ant.Project.fireBuildStarted()",1,2,2
"org.apache.tools.ant.Project.fireMessageLogged(Project,String,int)",1,1,1
"org.apache.tools.ant.Project.fireMessageLogged(Target,String,int)",1,1,1
"org.apache.tools.ant.Project.fireMessageLogged(Task,String,int)",1,1,1
"org.apache.tools.ant.Project.fireMessageLoggedEvent(BuildEvent,String,int)",2,3,4
"org.apache.tools.ant.Project.fireSubBuildFinished(Throwable)",1,3,3
"org.apache.tools.ant.Project.fireSubBuildStarted()",1,3,3
"org.apache.tools.ant.Project.fireTargetFinished(Target,Throwable)",1,2,2
"org.apache.tools.ant.Project.fireTargetStarted(Target)",1,2,2
"org.apache.tools.ant.Project.fireTaskFinished(Task,Throwable)",1,2,2
"org.apache.tools.ant.Project.fireTaskStarted(Task)",1,2,2
"org.apache.tools.ant.Project.getBaseDir()",1,3,3
"org.apache.tools.ant.Project.getBuildListeners()",1,1,1
"org.apache.tools.ant.Project.getCoreLoader()",1,1,1
"org.apache.tools.ant.Project.getDataTypeDefinitions()",1,1,1
"org.apache.tools.ant.Project.getDefaultInputStream()",1,1,1
"org.apache.tools.ant.Project.getDefaultTarget()",1,1,1
"org.apache.tools.ant.Project.getDescription()",1,2,2
"org.apache.tools.ant.Project.getElementName(Object)",1,1,1
"org.apache.tools.ant.Project.getExecutor()",3,6,7
"org.apache.tools.ant.Project.getFilters()",1,1,1
"org.apache.tools.ant.Project.getGlobalFilterSet()",1,1,1
"org.apache.tools.ant.Project.getInputHandler()",1,1,1
"org.apache.tools.ant.Project.getJavaVersion()",1,1,1
"org.apache.tools.ant.Project.getName()",1,1,1
"org.apache.tools.ant.Project.getProperties()",1,1,1
"org.apache.tools.ant.Project.getProperty(String)",1,1,1
"org.apache.tools.ant.Project.getReference(String)",1,1,1
"org.apache.tools.ant.Project.getReferences()",1,1,1
"org.apache.tools.ant.Project.getResource(String)",1,1,1
"org.apache.tools.ant.Project.getTargets()",1,1,1
"org.apache.tools.ant.Project.getTaskDefinitions()",1,1,1
"org.apache.tools.ant.Project.getThreadTask(Thread)",1,3,4
"org.apache.tools.ant.Project.getUserProperties()",1,1,1
"org.apache.tools.ant.Project.getUserProperty(String)",1,1,1
"org.apache.tools.ant.Project.init()",1,1,1
"org.apache.tools.ant.Project.initProperties()",1,1,1
"org.apache.tools.ant.Project.initSubProject(Project)",1,1,1
"org.apache.tools.ant.Project.isKeepGoingMode()",1,1,1
"org.apache.tools.ant.Project.log(String)",1,1,1
"org.apache.tools.ant.Project.log(String,int)",1,1,1
"org.apache.tools.ant.Project.log(Target,String,int)",1,1,1
"org.apache.tools.ant.Project.log(Task,String,int)",1,1,1
"org.apache.tools.ant.Project.makeCircularException(String,Stack)",1,2,2
"org.apache.tools.ant.Project.registerThreadTask(Thread,Task)",1,2,2
"org.apache.tools.ant.Project.removeBuildListener(BuildListener)",1,1,1
"org.apache.tools.ant.Project.replaceProperties(String)",1,1,1
"org.apache.tools.ant.Project.resolveFile(String)",1,1,1
"org.apache.tools.ant.Project.resolveFile(String,File)",1,1,1
"org.apache.tools.ant.Project.setAntLib()",1,2,2
"org.apache.tools.ant.Project.setBaseDir(File)",3,3,3
"org.apache.tools.ant.Project.setBasedir(String)",1,1,1
"org.apache.tools.ant.Project.setCoreLoader(ClassLoader)",1,1,1
"org.apache.tools.ant.Project.setDefault(String)",1,1,1
"org.apache.tools.ant.Project.setDefaultInputStream(InputStream)",1,1,1
"org.apache.tools.ant.Project.setDefaultTarget(String)",1,1,1
"org.apache.tools.ant.Project.setDescription(String)",1,1,1
"org.apache.tools.ant.Project.setExecutor(Executor)",1,1,1
"org.apache.tools.ant.Project.setFileLastModified(File,long)",1,1,1
"org.apache.tools.ant.Project.setInheritedProperty(String,String)",1,1,1
"org.apache.tools.ant.Project.setInputHandler(InputHandler)",1,1,1
"org.apache.tools.ant.Project.setJavaVersionProperty()",2,2,3
"org.apache.tools.ant.Project.setKeepGoingMode(boolean)",1,1,1
"org.apache.tools.ant.Project.setName(String)",1,1,1
"org.apache.tools.ant.Project.setNewProperty(String,String)",1,1,1
"org.apache.tools.ant.Project.setProjectReference(Object)",2,3,4
"org.apache.tools.ant.Project.setProperty(String,String)",1,1,1
"org.apache.tools.ant.Project.setPropertyInternal(String,String)",1,1,1
"org.apache.tools.ant.Project.setSystemProperties()",1,2,2
"org.apache.tools.ant.Project.setUserProperty(String,String)",1,1,1
"org.apache.tools.ant.Project.toBoolean(String)",1,3,3
"org.apache.tools.ant.Project.topoSort(String,Hashtable)",1,1,1
"org.apache.tools.ant.Project.topoSort(String,Hashtable,boolean)",1,1,1
"org.apache.tools.ant.Project.topoSort(String[],Hashtable,boolean)",7,6,10
"org.apache.tools.ant.Project.translatePath(String)",1,1,1
"org.apache.tools.ant.Project.tsort(String,Hashtable,Hashtable,Stack,Vector)",6,6,7
"org.apache.tools.ant.ProjectComponent.ProjectComponent()",1,1,1
"org.apache.tools.ant.ProjectComponent.getProject()",1,1,1
"org.apache.tools.ant.ProjectComponent.log(String)",1,1,1
"org.apache.tools.ant.ProjectComponent.log(String,int)",1,3,3
"org.apache.tools.ant.ProjectComponent.setProject(Project)",1,1,1
"org.apache.tools.ant.ProjectHelper.ProjectHelper()",1,1,1
"org.apache.tools.ant.ProjectHelper.addLocationToBuildException(BuildException,Location)",3,2,4
"org.apache.tools.ant.ProjectHelper.addText(Project,Object,String)",2,2,3
"org.apache.tools.ant.ProjectHelper.addText(Project,Object,char[],int,int)",1,1,1
"org.apache.tools.ant.ProjectHelper.configure(Object,AttributeList,Project)",3,4,5
"org.apache.tools.ant.ProjectHelper.configureProject(Project,File)",1,1,1
"org.apache.tools.ant.ProjectHelper.extractNameFromComponentName(String)",2,1,2
"org.apache.tools.ant.ProjectHelper.extractUriFromComponentName(String)",3,1,3
"org.apache.tools.ant.ProjectHelper.genComponentName(String,String)",2,3,4
"org.apache.tools.ant.ProjectHelper.getContextClassLoader()",2,1,2
"org.apache.tools.ant.ProjectHelper.getImportStack()",1,1,1
"org.apache.tools.ant.ProjectHelper.getProjectHelper()",2,10,12
"org.apache.tools.ant.ProjectHelper.newHelper(String)",1,3,5
"org.apache.tools.ant.ProjectHelper.parse(Project,Object)",1,1,1
"org.apache.tools.ant.ProjectHelper.parsePropertyString(String,Vector,Vector)",1,1,1
"org.apache.tools.ant.ProjectHelper.replaceProperties(Project,String)",1,1,1
"org.apache.tools.ant.ProjectHelper.replaceProperties(Project,String,Hashtable)",1,1,1
"org.apache.tools.ant.ProjectHelper.storeChild(Project,Object,Object,String)",1,1,1
"org.apache.tools.ant.PropertyHelper.PropertyHelper()",1,1,1
"org.apache.tools.ant.PropertyHelper.copyInheritedProperties(Project)",3,2,3
"org.apache.tools.ant.PropertyHelper.copyUserProperties(Project)",3,2,3
"org.apache.tools.ant.PropertyHelper.getInternalInheritedProperties()",1,1,1
"org.apache.tools.ant.PropertyHelper.getInternalProperties()",1,1,1
"org.apache.tools.ant.PropertyHelper.getInternalUserProperties()",1,1,1
"org.apache.tools.ant.PropertyHelper.getNext()",1,1,1
"org.apache.tools.ant.PropertyHelper.getProperties()",1,1,1
"org.apache.tools.ant.PropertyHelper.getProperty(String,String)",3,1,3
"org.apache.tools.ant.PropertyHelper.getPropertyHelper(Project)",2,1,2
"org.apache.tools.ant.PropertyHelper.getPropertyHook(String,String,boolean)",4,4,5
"org.apache.tools.ant.PropertyHelper.getUserProperties()",1,1,1
"org.apache.tools.ant.PropertyHelper.getUserProperty(String,String)",3,1,3
"org.apache.tools.ant.PropertyHelper.parsePropertyString(String,Vector,Vector)",1,1,1
"org.apache.tools.ant.PropertyHelper.parsePropertyStringDefault(String,Vector,Vector)",5,7,8
"org.apache.tools.ant.PropertyHelper.replaceProperties(String,String,Hashtable)",2,7,8
"org.apache.tools.ant.PropertyHelper.setInheritedProperty(String,String,Object)",2,1,2
"org.apache.tools.ant.PropertyHelper.setNewProperty(String,String,Object)",3,3,5
"org.apache.tools.ant.PropertyHelper.setNext(PropertyHelper)",1,1,1
"org.apache.tools.ant.PropertyHelper.setProject(Project)",1,1,1
"org.apache.tools.ant.PropertyHelper.setProperty(String,String,Object,boolean)",3,6,7
"org.apache.tools.ant.PropertyHelper.setPropertyHook(String,String,Object,boolean,boolean,boolean)",3,2,3
"org.apache.tools.ant.PropertyHelper.setUserProperty(String,String,Object)",2,1,2
"org.apache.tools.ant.RuntimeConfigurable.RuntimeConfigurable(Object,String)",1,2,2
"org.apache.tools.ant.RuntimeConfigurable.addChild(RuntimeConfigurable)",1,1,2
"org.apache.tools.ant.RuntimeConfigurable.addText(String)",2,2,3
"org.apache.tools.ant.RuntimeConfigurable.addText(char[],int,int)",2,1,3
"org.apache.tools.ant.RuntimeConfigurable.applyPreSet(RuntimeConfigurable)",1,10,11
"org.apache.tools.ant.RuntimeConfigurable.getAttributeMap()",1,1,2
"org.apache.tools.ant.RuntimeConfigurable.getAttributes()",1,1,1
"org.apache.tools.ant.RuntimeConfigurable.getChild(int)",1,1,1
"org.apache.tools.ant.RuntimeConfigurable.getChildren()",1,2,2
"org.apache.tools.ant.RuntimeConfigurable.getElementTag()",1,1,1
"org.apache.tools.ant.RuntimeConfigurable.getPolyType()",1,1,1
"org.apache.tools.ant.RuntimeConfigurable.getProxy()",1,1,1
"org.apache.tools.ant.RuntimeConfigurable.getText()",1,1,2
"org.apache.tools.ant.RuntimeConfigurable.maybeConfigure(Project)",1,1,1
"org.apache.tools.ant.RuntimeConfigurable.maybeConfigure(Project,boolean)",9,15,18
"org.apache.tools.ant.RuntimeConfigurable.reconfigure(Project)",1,1,1
"org.apache.tools.ant.RuntimeConfigurable.removeAttribute(String)",1,1,1
"org.apache.tools.ant.RuntimeConfigurable.setAttribute(String,String)",1,2,3
"org.apache.tools.ant.RuntimeConfigurable.setAttributes(AttributeList)",1,2,2
"org.apache.tools.ant.RuntimeConfigurable.setCreator(Creator)",1,1,1
"org.apache.tools.ant.RuntimeConfigurable.setElementTag(String)",1,1,1
"org.apache.tools.ant.RuntimeConfigurable.setPolyType(String)",1,1,1
"org.apache.tools.ant.RuntimeConfigurable.setProxy(Object)",1,1,1
"org.apache.tools.ant.Target.Target()",1,1,1
"org.apache.tools.ant.Target.Target(Target)",1,1,1
"org.apache.tools.ant.Target.addDataType(RuntimeConfigurable)",1,1,1
"org.apache.tools.ant.Target.addDependency(String)",1,1,2
"org.apache.tools.ant.Target.addTask(Task)",1,1,1
"org.apache.tools.ant.Target.dependsOn(String)",1,3,3
"org.apache.tools.ant.Target.equals(Object)",4,3,6
"org.apache.tools.ant.Target.execute()",1,6,6
"org.apache.tools.ant.Target.getDependencies()",1,2,2
"org.apache.tools.ant.Target.getDescription()",1,1,1
"org.apache.tools.ant.Target.getIf()",1,1,2
"org.apache.tools.ant.Target.getLocation()",1,1,1
"org.apache.tools.ant.Target.getName()",1,1,1
"org.apache.tools.ant.Target.getProject()",1,1,1
"org.apache.tools.ant.Target.getTasks()",1,3,3
"org.apache.tools.ant.Target.getUnless()",1,1,2
"org.apache.tools.ant.Target.hashCode()",1,2,2
"org.apache.tools.ant.Target.performTasks()",1,1,2
"org.apache.tools.ant.Target.replaceChild(Task,RuntimeConfigurable)",1,2,2
"org.apache.tools.ant.Target.replaceChild(Task,Task)",1,2,2
"org.apache.tools.ant.Target.setDepends(String)",6,8,8
"org.apache.tools.ant.Target.setDescription(String)",1,1,1
"org.apache.tools.ant.Target.setIf(String)",1,1,2
"org.apache.tools.ant.Target.setLocation(Location)",1,1,1
"org.apache.tools.ant.Target.setName(String)",1,1,1
"org.apache.tools.ant.Target.setProject(Project)",1,1,1
"org.apache.tools.ant.Target.setUnless(String)",1,1,2
"org.apache.tools.ant.Target.testIfCondition()",2,1,2
"org.apache.tools.ant.Target.testUnlessCondition()",2,1,2
"org.apache.tools.ant.Target.toString()",1,1,1
"org.apache.tools.ant.Task.Task()",1,1,1
"org.apache.tools.ant.Task.bindToOwner(Task)",1,1,1
"org.apache.tools.ant.Task.execute()",1,1,1
"org.apache.tools.ant.Task.getDescription()",1,1,1
"org.apache.tools.ant.Task.getLocation()",1,1,1
"org.apache.tools.ant.Task.getOwningTarget()",1,1,1
"org.apache.tools.ant.Task.getReplacement()",1,2,2
"org.apache.tools.ant.Task.getRuntimeConfigurableWrapper()",1,2,2
"org.apache.tools.ant.Task.getTaskName()",1,1,1
"org.apache.tools.ant.Task.getTaskType()",1,1,1
"org.apache.tools.ant.Task.getWrapper()",1,1,1
"org.apache.tools.ant.Task.handleErrorFlush(String)",1,1,1
"org.apache.tools.ant.Task.handleErrorOutput(String)",1,1,1
"org.apache.tools.ant.Task.handleFlush(String)",1,1,1
"org.apache.tools.ant.Task.handleInput(byte[],int,int)",1,1,1
"org.apache.tools.ant.Task.handleOutput(String)",1,1,1
"org.apache.tools.ant.Task.init()",1,1,1
"org.apache.tools.ant.Task.isInvalid()",1,1,1
"org.apache.tools.ant.Task.log(String)",1,1,1
"org.apache.tools.ant.Task.log(String,int)",1,2,2
"org.apache.tools.ant.Task.markInvalid()",1,1,1
"org.apache.tools.ant.Task.maybeConfigure()",1,3,3
"org.apache.tools.ant.Task.perform()",2,5,6
"org.apache.tools.ant.Task.reconfigure()",1,2,2
"org.apache.tools.ant.Task.replaceChildren(RuntimeConfigurable,UnknownElement)",1,2,2
"org.apache.tools.ant.Task.setDescription(String)",1,1,1
"org.apache.tools.ant.Task.setLocation(Location)",1,1,1
"org.apache.tools.ant.Task.setOwningTarget(Target)",1,1,1
"org.apache.tools.ant.Task.setRuntimeConfigurableWrapper(RuntimeConfigurable)",1,1,1
"org.apache.tools.ant.Task.setTaskName(String)",1,1,1
"org.apache.tools.ant.Task.setTaskType(String)",1,1,1
"org.apache.tools.ant.TaskAdapter.checkProxyClass(Class)",1,1,1
"org.apache.tools.ant.TaskAdapter.checkTaskClass(Class,Project)",2,5,5
"org.apache.tools.ant.TaskAdapter.execute()",1,4,5
"org.apache.tools.ant.TaskAdapter.getProxy()",1,1,1
"org.apache.tools.ant.TaskAdapter.setProxy(Object)",1,1,1
"org.apache.tools.ant.UnknownElement.UnknownElement(String)",1,1,1
"org.apache.tools.ant.UnknownElement.addChild(UnknownElement)",1,1,2
"org.apache.tools.ant.UnknownElement.applyPreSet(UnknownElement)",2,3,4
"org.apache.tools.ant.UnknownElement.configure(Object)",1,3,3
"org.apache.tools.ant.UnknownElement.equalsString(String,String)",1,2,2
"org.apache.tools.ant.UnknownElement.execute()",2,3,3
"org.apache.tools.ant.UnknownElement.getChildren()",1,1,1
"org.apache.tools.ant.UnknownElement.getComponentName()",1,1,1
"org.apache.tools.ant.UnknownElement.getNamespace()",1,1,1
"org.apache.tools.ant.UnknownElement.getNotFoundException(String,String)",1,1,1
"org.apache.tools.ant.UnknownElement.getQName()",1,1,1
"org.apache.tools.ant.UnknownElement.getRealThing()",1,1,1
"org.apache.tools.ant.UnknownElement.getTag()",1,1,1
"org.apache.tools.ant.UnknownElement.getTask()",2,1,2
"org.apache.tools.ant.UnknownElement.getTaskName()",1,2,3
"org.apache.tools.ant.UnknownElement.getWrapper()",1,1,1
"org.apache.tools.ant.UnknownElement.handleChild(String,IntrospectionHelper,Object,UnknownElement,RuntimeConfigurable)",2,4,4
"org.apache.tools.ant.UnknownElement.handleChildren(Object,RuntimeConfigurable)",3,7,7
"org.apache.tools.ant.UnknownElement.handleErrorFlush(String)",1,2,2
"org.apache.tools.ant.UnknownElement.handleErrorOutput(String)",1,2,2
"org.apache.tools.ant.UnknownElement.handleFlush(String)",1,2,2
"org.apache.tools.ant.UnknownElement.handleInput(byte[],int,int)",2,2,2
"org.apache.tools.ant.UnknownElement.handleOutput(String)",1,2,2
"org.apache.tools.ant.UnknownElement.makeObject(UnknownElement,RuntimeConfigurable)",4,7,7
"org.apache.tools.ant.UnknownElement.makeTask(UnknownElement,RuntimeConfigurable)",1,2,2
"org.apache.tools.ant.UnknownElement.maybeConfigure()",1,1,1
"org.apache.tools.ant.UnknownElement.setNamespace(String)",1,2,3
"org.apache.tools.ant.UnknownElement.setQName(String)",1,1,1
"org.apache.tools.ant.UnknownElement.setRealThing(Object)",1,1,1
"org.apache.tools.ant.UnknownElement.similar(Object)",13,5,15
"org.apache.tools.ant.UnsupportedAttributeException.UnsupportedAttributeException(String,String)",1,1,1
"org.apache.tools.ant.UnsupportedAttributeException.getAttribute()",1,1,1
"org.apache.tools.ant.UnsupportedElementException.UnsupportedElementException(String,String)",1,1,1
"org.apache.tools.ant.UnsupportedElementException.getElement()",1,1,1
"org.apache.tools.ant.XmlLogger.TimedElement.toString()",1,1,1
"org.apache.tools.ant.XmlLogger.XmlLogger()",1,1,1
"org.apache.tools.ant.XmlLogger.buildFinished(BuildEvent)",1,4,9
"org.apache.tools.ant.XmlLogger.buildStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.XmlLogger.getDocumentBuilder()",1,1,2
"org.apache.tools.ant.XmlLogger.getStack()",1,2,2
"org.apache.tools.ant.XmlLogger.getTaskElement(Task)",5,4,5
"org.apache.tools.ant.XmlLogger.messageLogged(BuildEvent)",3,5,10
"org.apache.tools.ant.XmlLogger.setEmacsMode(boolean)",1,1,1
"org.apache.tools.ant.XmlLogger.setErrorPrintStream(PrintStream)",1,1,1
"org.apache.tools.ant.XmlLogger.setMessageOutputLevel(int)",1,1,1
"org.apache.tools.ant.XmlLogger.setOutputPrintStream(PrintStream)",1,1,1
"org.apache.tools.ant.XmlLogger.targetFinished(BuildEvent)",4,5,6
"org.apache.tools.ant.XmlLogger.targetStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.XmlLogger.taskFinished(BuildEvent)",4,5,6
"org.apache.tools.ant.XmlLogger.taskStarted(BuildEvent)",1,1,2
"org.apache.tools.ant.dispatch.DispatchTask.getAction()",1,1,1
"org.apache.tools.ant.dispatch.DispatchTask.getActionParameterName()",1,1,1
"org.apache.tools.ant.dispatch.DispatchTask.setAction(String)",1,1,1
"org.apache.tools.ant.dispatch.DispatchUtils.execute(Object)",9,17,23
"org.apache.tools.ant.filters.BaseFilterReader.BaseFilterReader()",1,1,1
"org.apache.tools.ant.filters.BaseFilterReader.BaseFilterReader(Reader)",1,1,1
"org.apache.tools.ant.filters.BaseFilterReader.getInitialized()",1,1,1
"org.apache.tools.ant.filters.BaseFilterReader.getProject()",1,1,1
"org.apache.tools.ant.filters.BaseFilterReader.read(char[],int,int)",4,2,4
"org.apache.tools.ant.filters.BaseFilterReader.readFully()",1,1,1
"org.apache.tools.ant.filters.BaseFilterReader.readLine()",4,2,4
"org.apache.tools.ant.filters.BaseFilterReader.setInitialized(boolean)",1,1,1
"org.apache.tools.ant.filters.BaseFilterReader.setProject(Project)",1,1,1
"org.apache.tools.ant.filters.BaseFilterReader.skip(long)",4,2,4
"org.apache.tools.ant.filters.BaseParamFilterReader.BaseParamFilterReader()",1,1,1
"org.apache.tools.ant.filters.BaseParamFilterReader.BaseParamFilterReader(Reader)",1,1,1
"org.apache.tools.ant.filters.BaseParamFilterReader.getParameters()",1,1,1
"org.apache.tools.ant.filters.BaseParamFilterReader.setParameters(Parameter[])",1,1,1
"org.apache.tools.ant.filters.ClassConstants.ClassConstants()",1,1,1
"org.apache.tools.ant.filters.ClassConstants.ClassConstants(Reader)",1,1,1
"org.apache.tools.ant.filters.ClassConstants.chain(Reader)",1,1,1
"org.apache.tools.ant.filters.ClassConstants.read()",5,11,13
"org.apache.tools.ant.filters.ConcatFilter.ConcatFilter()",1,1,1
"org.apache.tools.ant.filters.ConcatFilter.ConcatFilter(Reader)",1,1,1
"org.apache.tools.ant.filters.ConcatFilter.chain(Reader)",1,1,1
"org.apache.tools.ant.filters.ConcatFilter.getAppend()",1,1,1
"org.apache.tools.ant.filters.ConcatFilter.getPrepend()",1,1,1
"org.apache.tools.ant.filters.ConcatFilter.initialize()",5,9,9
"org.apache.tools.ant.filters.ConcatFilter.read()",1,8,8
"org.apache.tools.ant.filters.ConcatFilter.setAppend(File)",1,1,1
"org.apache.tools.ant.filters.ConcatFilter.setPrepend(File)",1,1,1
"org.apache.tools.ant.filters.EscapeUnicode.EscapeUnicode()",1,1,1
"org.apache.tools.ant.filters.EscapeUnicode.EscapeUnicode(Reader)",1,1,1
"org.apache.tools.ant.filters.EscapeUnicode.chain(Reader)",1,1,1
"org.apache.tools.ant.filters.EscapeUnicode.initialize()",1,1,1
"org.apache.tools.ant.filters.EscapeUnicode.read()",1,6,6
"org.apache.tools.ant.filters.ExpandProperties.ExpandProperties()",1,1,1
"org.apache.tools.ant.filters.ExpandProperties.ExpandProperties(Reader)",1,1,1
"org.apache.tools.ant.filters.ExpandProperties.chain(Reader)",1,1,1
"org.apache.tools.ant.filters.ExpandProperties.read()",3,4,6
"org.apache.tools.ant.filters.FixCrLfFilter.AddAsisRemove.equals(Object)",1,2,2
"org.apache.tools.ant.filters.FixCrLfFilter.AddAsisRemove.getValues()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.AddAsisRemove.hashCode()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.AddAsisRemove.newInstance()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.AddAsisRemove.newInstance(String)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.AddAsisRemove.resolve()",4,1,4
"org.apache.tools.ant.filters.FixCrLfFilter.AddEofFilter.AddEofFilter(Reader)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.AddEofFilter.read()",3,1,3
"org.apache.tools.ant.filters.FixCrLfFilter.AddTabFilter.AddTabFilter(Reader,int)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.AddTabFilter.read()",5,8,15
"org.apache.tools.ant.filters.FixCrLfFilter.CrLf.equals(Object)",1,2,2
"org.apache.tools.ant.filters.FixCrLfFilter.CrLf.getValues()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.CrLf.hashCode()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.CrLf.newInstance()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.CrLf.newInstance(String)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.CrLf.resolve()",5,4,8
"org.apache.tools.ant.filters.FixCrLfFilter.FixCrLfFilter()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.FixCrLfFilter(Reader)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.MaskJavaTabLiteralsFilter.MaskJavaTabLiteralsFilter(Reader)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.MaskJavaTabLiteralsFilter.editsBlocked()",1,2,2
"org.apache.tools.ant.filters.FixCrLfFilter.MaskJavaTabLiteralsFilter.read()",9,9,22
"org.apache.tools.ant.filters.FixCrLfFilter.NormalizeEolFilter.NormalizeEolFilter(Reader,String,boolean)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.NormalizeEolFilter.read()",2,10,18
"org.apache.tools.ant.filters.FixCrLfFilter.RemoveEofFilter.RemoveEofFilter(Reader)",1,1,2
"org.apache.tools.ant.filters.FixCrLfFilter.RemoveEofFilter.read()",2,1,3
"org.apache.tools.ant.filters.FixCrLfFilter.RemoveTabFilter.RemoveTabFilter(Reader,int)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.RemoveTabFilter.read()",2,4,6
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.SimpleFilterReader(Reader)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.close()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.editsBlocked()",1,2,2
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.mark(int)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.markSupported()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.push(String)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.push(char)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.push(char[])",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.push(char[],int,int)",1,2,2
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.push(int)",1,2,2
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.read()",1,2,2
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.read(char[])",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.read(char[],int,int)",1,2,5
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.ready()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.reset()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.SimpleFilterReader.skip(long)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.calculateEolString(CrLf)",4,2,6
"org.apache.tools.ant.filters.FixCrLfFilter.chain(Reader)",1,1,2
"org.apache.tools.ant.filters.FixCrLfFilter.getEof()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.getEol()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.getFixlast()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.getJavafiles()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.getTab()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.getTablength()",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.initInternalFilters()",1,3,6
"org.apache.tools.ant.filters.FixCrLfFilter.read()",1,2,2
"org.apache.tools.ant.filters.FixCrLfFilter.setEof(AddAsisRemove)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.setEol(CrLf)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.setFixlast(boolean)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.setJavafiles(boolean)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.setTab(AddAsisRemove)",1,1,1
"org.apache.tools.ant.filters.FixCrLfFilter.setTablength(int)",2,1,3
"org.apache.tools.ant.filters.HeadFilter.HeadFilter()",1,1,1
"org.apache.tools.ant.filters.HeadFilter.HeadFilter(Reader)",1,1,1
"org.apache.tools.ant.filters.HeadFilter.chain(Reader)",1,1,1
"org.apache.tools.ant.filters.HeadFilter.getLines()",1,1,1
"org.apache.tools.ant.filters.HeadFilter.getSkip()",1,1,1
"org.apache.tools.ant.filters.HeadFilter.headFilter(String)",5,1,5
"org.apache.tools.ant.filters.HeadFilter.initialize()",5,5,5
"org.apache.tools.ant.filters.HeadFilter.read()",3,4,6
"org.apache.tools.ant.filters.HeadFilter.setLines(long)",1,1,1
"org.apache.tools.ant.filters.HeadFilter.setSkip(long)",1,1,1
"org.apache.tools.ant.filters.LineContains.Contains.getValue()",1,1,1
"org.apache.tools.ant.filters.LineContains.Contains.setValue(String)",1,1,1
"org.apache.tools.ant.filters.LineContains.LineContains()",1,1,1
"org.apache.tools.ant.filters.LineContains.LineContains(Reader)",1,1,1
"org.apache.tools.ant.filters.LineContains.addConfiguredContains(Contains)",1,1,1
"org.apache.tools.ant.filters.LineContains.chain(Reader)",1,1,1
"org.apache.tools.ant.filters.LineContains.getContains()",1,1,1
"org.apache.tools.ant.filters.LineContains.initialize()",1,5,5
"org.apache.tools.ant.filters.LineContains.isNegated()",1,1,1
"org.apache.tools.ant.filters.LineContains.read()",5,7,9
"org.apache.tools.ant.filters.LineContains.setContains(Vector)",1,1,1
"org.apache.tools.ant.filters.LineContains.setNegate(boolean)",1,1,1
"org.apache.tools.ant.filters.LineContainsRegExp.LineContainsRegExp()",1,1,1
"org.apache.tools.ant.filters.LineContainsRegExp.LineContainsRegExp(Reader)",1,1,1
"org.apache.tools.ant.filters.LineContainsRegExp.addConfiguredRegexp(RegularExpression)",1,1,1
"org.apache.tools.ant.filters.LineContainsRegExp.chain(Reader)",1,1,1
"org.apache.tools.ant.filters.LineContainsRegExp.getRegexps()",1,1,1
"org.apache.tools.ant.filters.LineContainsRegExp.initialize()",1,5,5
"org.apache.tools.ant.filters.LineContainsRegExp.isNegated()",1,1,1
"org.apache.tools.ant.filters.LineContainsRegExp.read()",5,7,9
"org.apache.tools.ant.filters.LineContainsRegExp.setNegate(boolean)",1,1,1
"org.apache.tools.ant.filters.LineContainsRegExp.setRegexps(Vector)",1,1,1
"org.apache.tools.ant.filters.PrefixLines.PrefixLines()",1,1,1
"org.apache.tools.ant.filters.PrefixLines.PrefixLines(Reader)",1,1,1
"org.apache.tools.ant.filters.PrefixLines.chain(Reader)",1,1,1
"org.apache.tools.ant.filters.PrefixLines.getPrefix()",1,1,1
"org.apache.tools.ant.filters.PrefixLines.initialize()",4,4,4
"org.apache.tools.ant.filters.PrefixLines.read()",3,5,8
"org.apache.tools.ant.filters.PrefixLines.setPrefix(String)",1,1,1
"org.apache.tools.ant.filters.ReplaceTokens.ReplaceTokens()",1,1,1
"org.apache.tools.ant.filters.ReplaceTokens.ReplaceTokens(Reader)",1,1,1
"org.apache.tools.ant.filters.ReplaceTokens.Token.getKey()",1,1,1
"org.apache.tools.ant.filters.ReplaceTokens.Token.getValue()",1,1,1
"org.apache.tools.ant.filters.ReplaceTokens.Token.setKey(String)",1,1,1
"org.apache.tools.ant.filters.ReplaceTokens.Token.setValue(String)",1,1,1
"org.apache.tools.ant.filters.ReplaceTokens.addConfiguredToken(Token)",1,1,1
"org.apache.tools.ant.filters.ReplaceTokens.chain(Reader)",1,1,1
"org.apache.tools.ant.filters.ReplaceTokens.getBeginToken()",1,1,1
"org.apache.tools.ant.filters.ReplaceTokens.getEndToken()",1,1,1
"org.apache.tools.ant.filters.ReplaceTokens.getNextChar()",2,2,3
"org.apache.tools.ant.filters.ReplaceTokens.getTokens()",1,1,1
"org.apache.tools.ant.filters.ReplaceTokens.initialize()",9,8,10
"org.apache.tools.ant.filters.ReplaceTokens.read()",7,10,14
"org.apache.tools.ant.filters.ReplaceTokens.setBeginToken(char)",1,1,1
"org.apache.tools.ant.filters.ReplaceTokens.setEndToken(char)",1,1,1
"org.apache.tools.ant.filters.ReplaceTokens.setTokens(Hashtable)",1,1,1
"org.apache.tools.ant.filters.StringInputStream.StringInputStream(String)",1,1,1
"org.apache.tools.ant.filters.StringInputStream.StringInputStream(String,String)",1,1,1
"org.apache.tools.ant.filters.StripJavaComments.StripJavaComments()",1,1,1
"org.apache.tools.ant.filters.StripJavaComments.StripJavaComments(Reader)",1,1,1
"org.apache.tools.ant.filters.StripJavaComments.chain(Reader)",1,1,1
"org.apache.tools.ant.filters.StripJavaComments.read()",11,13,17
"org.apache.tools.ant.filters.StripLineBreaks.StripLineBreaks()",1,1,1
"org.apache.tools.ant.filters.StripLineBreaks.StripLineBreaks(Reader)",1,1,1
"org.apache.tools.ant.filters.StripLineBreaks.chain(Reader)",1,1,1
"org.apache.tools.ant.filters.StripLineBreaks.getLineBreaks()",1,1,1
"org.apache.tools.ant.filters.StripLineBreaks.initialize()",4,4,5
"org.apache.tools.ant.filters.StripLineBreaks.read()",3,4,4
"org.apache.tools.ant.filters.StripLineBreaks.setLineBreaks(String)",1,1,1
"org.apache.tools.ant.filters.StripLineComments.Comment.getValue()",1,1,1
"org.apache.tools.ant.filters.StripLineComments.Comment.setValue(String)",1,1,1
"org.apache.tools.ant.filters.StripLineComments.StripLineComments()",1,1,1
"org.apache.tools.ant.filters.StripLineComments.StripLineComments(Reader)",1,1,1
"org.apache.tools.ant.filters.StripLineComments.addConfiguredComment(Comment)",1,1,1
"org.apache.tools.ant.filters.StripLineComments.chain(Reader)",1,1,1
"org.apache.tools.ant.filters.StripLineComments.getComments()",1,1,1
"org.apache.tools.ant.filters.StripLineComments.initialize()",1,4,4
"org.apache.tools.ant.filters.StripLineComments.read()",7,8,9
"org.apache.tools.ant.filters.StripLineComments.setComments(Vector)",1,1,1
"org.apache.tools.ant.filters.TabsToSpaces.TabsToSpaces()",1,1,1
"org.apache.tools.ant.filters.TabsToSpaces.TabsToSpaces(Reader)",1,1,1
"org.apache.tools.ant.filters.TabsToSpaces.chain(Reader)",1,1,1
"org.apache.tools.ant.filters.TabsToSpaces.getTablength()",1,1,1
"org.apache.tools.ant.filters.TabsToSpaces.initialize()",5,5,5
"org.apache.tools.ant.filters.TabsToSpaces.read()",1,3,4
"org.apache.tools.ant.filters.TabsToSpaces.setTablength(int)",1,1,1
"org.apache.tools.ant.filters.TailFilter.TailFilter()",1,1,1
"org.apache.tools.ant.filters.TailFilter.TailFilter(Reader)",1,1,1
"org.apache.tools.ant.filters.TailFilter.chain(Reader)",1,1,1
"org.apache.tools.ant.filters.TailFilter.getLines()",1,1,1
"org.apache.tools.ant.filters.TailFilter.getSkip()",1,1,1
"org.apache.tools.ant.filters.TailFilter.initialize()",5,5,5
"org.apache.tools.ant.filters.TailFilter.read()",3,4,6
"org.apache.tools.ant.filters.TailFilter.setLines(long)",1,1,1
"org.apache.tools.ant.filters.TailFilter.setSkip(long)",1,1,1
"org.apache.tools.ant.filters.TailFilter.tailFilter(String)",6,11,12
"org.apache.tools.ant.filters.TokenFilter.ChainableReaderFilter.chain(Reader)",1,2,2
"org.apache.tools.ant.filters.TokenFilter.ChainableReaderFilter.setByLine(boolean)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.ContainsRegex.filter(String)",3,1,3
"org.apache.tools.ant.filters.TokenFilter.ContainsRegex.initialize()",4,1,4
"org.apache.tools.ant.filters.TokenFilter.ContainsRegex.setFlags(String)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.ContainsRegex.setPattern(String)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.ContainsRegex.setReplace(String)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.ContainsString.filter(String)",3,1,3
"org.apache.tools.ant.filters.TokenFilter.ContainsString.setContains(String)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.DeleteCharacters.chain(Reader)",4,2,4
"org.apache.tools.ant.filters.TokenFilter.DeleteCharacters.filter(String)",1,3,3
"org.apache.tools.ant.filters.TokenFilter.DeleteCharacters.isDeleteCharacter(char)",3,2,3
"org.apache.tools.ant.filters.TokenFilter.DeleteCharacters.setChars(String)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.FileTokenizer.getPostToken()",1,1,1
"org.apache.tools.ant.filters.TokenFilter.FileTokenizer.getToken(Reader)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.IgnoreBlank.filter(String)",2,1,2
"org.apache.tools.ant.filters.TokenFilter.ReplaceRegex.filter(String)",2,1,2
"org.apache.tools.ant.filters.TokenFilter.ReplaceRegex.initialize()",3,1,4
"org.apache.tools.ant.filters.TokenFilter.ReplaceRegex.setFlags(String)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.ReplaceRegex.setPattern(String)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.ReplaceRegex.setReplace(String)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.ReplaceString.filter(String)",2,5,6
"org.apache.tools.ant.filters.TokenFilter.ReplaceString.setFrom(String)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.ReplaceString.setTo(String)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.StringTokenizer.getPostToken()",2,1,3
"org.apache.tools.ant.filters.TokenFilter.StringTokenizer.getToken(Reader)",7,9,10
"org.apache.tools.ant.filters.TokenFilter.StringTokenizer.isDelim(char)",4,2,4
"org.apache.tools.ant.filters.TokenFilter.StringTokenizer.setDelims(String)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.StringTokenizer.setDelimsAreTokens(boolean)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.StringTokenizer.setIncludeDelims(boolean)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.StringTokenizer.setSuppressDelims(boolean)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.TokenFilter()",1,1,1
"org.apache.tools.ant.filters.TokenFilter.TokenFilter(Reader)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.Trim.filter(String)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.add(Filter)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.add(Tokenizer)",2,1,2
"org.apache.tools.ant.filters.TokenFilter.addContainsRegex(ContainsRegex)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.addContainsString(ContainsString)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.addDeleteCharacters(DeleteCharacters)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.addFileTokenizer(FileTokenizer)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.addIgnoreBlank(IgnoreBlank)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.addLineTokenizer(LineTokenizer)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.addReplaceRegex(ReplaceRegex)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.addReplaceString(ReplaceString)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.addStringTokenizer(StringTokenizer)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.addTrim(Trim)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.chain(Reader)",1,1,1
"org.apache.tools.ant.filters.TokenFilter.convertRegexOptions(String)",2,1,6
"org.apache.tools.ant.filters.TokenFilter.read()",5,7,11
"org.apache.tools.ant.filters.TokenFilter.resolveBackSlash(String)",2,5,11
"org.apache.tools.ant.filters.TokenFilter.setDelimOutput(String)",1,1,1
"org.apache.tools.ant.filters.util.ChainReaderHelper.getAssembledReader()",11,13,21
"org.apache.tools.ant.filters.util.ChainReaderHelper.getProject()",1,1,1
"org.apache.tools.ant.filters.util.ChainReaderHelper.readFully(Reader)",1,1,1
"org.apache.tools.ant.filters.util.ChainReaderHelper.setBufferSize(int)",1,1,1
"org.apache.tools.ant.filters.util.ChainReaderHelper.setFilterChains(Vector)",1,1,1
"org.apache.tools.ant.filters.util.ChainReaderHelper.setPrimaryReader(Reader)",1,1,1
"org.apache.tools.ant.filters.util.ChainReaderHelper.setProject(Project)",1,1,1
"org.apache.tools.ant.filters.util.ChainReaderHelper.setProjectOnObject(Object)",3,2,3
"org.apache.tools.ant.filters.util.JavaClassHelper.getConstants(byte[])",1,6,6
"org.apache.tools.ant.helper.AntXMLContext.AntXMLContext(Project)",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.addTarget(Target)",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.configureId(Object,Attributes)",1,2,2
"org.apache.tools.ant.helper.AntXMLContext.currentWrapper()",2,1,2
"org.apache.tools.ant.helper.AntXMLContext.endPrefixMapping(String)",2,2,3
"org.apache.tools.ant.helper.AntXMLContext.getBuildFile()",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.getBuildFileParent()",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.getCurrentProjectName()",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.getCurrentTarget()",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.getCurrentTargets()",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.getImplicitTarget()",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.getLocator()",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.getPrefixMapping(String)",2,2,3
"org.apache.tools.ant.helper.AntXMLContext.getProject()",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.getTargets()",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.getWrapperStack()",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.isIgnoringProjectTag()",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.parentWrapper()",2,1,2
"org.apache.tools.ant.helper.AntXMLContext.popWrapper()",1,2,2
"org.apache.tools.ant.helper.AntXMLContext.pushWrapper(RuntimeConfigurable)",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.setBuildFile(File)",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.setCurrentProjectName(String)",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.setCurrentTarget(Target)",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.setCurrentTargets(Map)",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.setIgnoreProjectTag(boolean)",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.setImplicitTarget(Target)",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.setLocator(Locator)",1,1,1
"org.apache.tools.ant.helper.AntXMLContext.startPrefixMapping(String,String)",1,2,2
"org.apache.tools.ant.helper.DefaultExecutor.executeTargets(Project,String[])",4,3,5
"org.apache.tools.ant.helper.DefaultExecutor.getSubProjectExecutor()",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.AntHandler.characters(char[],int,int,AntXMLContext)",2,2,2
"org.apache.tools.ant.helper.ProjectHelper2.AntHandler.checkNamespace(String)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.AntHandler.onEndChild(String,String,String,AntXMLContext)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.AntHandler.onEndElement(String,String,AntXMLContext)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.AntHandler.onStartChild(String,String,String,Attributes,AntXMLContext)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.AntHandler.onStartElement(String,String,String,Attributes,AntXMLContext)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.ElementHandler.ElementHandler()",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.ElementHandler.characters(char[],int,int,AntXMLContext)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.ElementHandler.onEndElement(String,String,AntXMLContext)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.ElementHandler.onStartChild(String,String,String,Attributes,AntXMLContext)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.ElementHandler.onStartElement(String,String,String,Attributes,AntXMLContext)",5,12,13
"org.apache.tools.ant.helper.ProjectHelper2.MainHandler.onStartChild(String,String,String,Attributes,AntXMLContext)",3,5,5
"org.apache.tools.ant.helper.ProjectHelper2.ProjectHandler.onStartChild(String,String,String,Attributes,AntXMLContext)",2,3,4
"org.apache.tools.ant.helper.ProjectHelper2.ProjectHandler.onStartElement(String,String,String,Attributes,AntXMLContext)",8,22,26
"org.apache.tools.ant.helper.ProjectHelper2.RootHandler.RootHandler(AntXMLContext,AntHandler)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.RootHandler.characters(char[],int,int)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.RootHandler.endElement(String,String,String)",1,2,2
"org.apache.tools.ant.helper.ProjectHelper2.RootHandler.endPrefixMapping(String)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.RootHandler.getCurrentAntHandler()",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.RootHandler.resolveEntity(String,String)",2,4,4
"org.apache.tools.ant.helper.ProjectHelper2.RootHandler.setDocumentLocator(Locator)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.RootHandler.startElement(String,String,String,Attributes)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.RootHandler.startPrefixMapping(String,String)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.TargetHandler.onEndElement(String,String,AntXMLContext)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.TargetHandler.onStartChild(String,String,String,Attributes,AntXMLContext)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.TargetHandler.onStartElement(String,String,String,Attributes,AntXMLContext)",12,19,22
"org.apache.tools.ant.helper.ProjectHelper2.getElementHandler()",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.getMainHandler()",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.getProjectHandler()",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.getTargetHandler()",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.parse(Project,Object)",1,3,3
"org.apache.tools.ant.helper.ProjectHelper2.parse(Project,Object,RootHandler)",5,10,15
"org.apache.tools.ant.helper.ProjectHelper2.parseUnknownElement(Project,URL)",2,1,2
"org.apache.tools.ant.helper.ProjectHelper2.setElementHandler(AntHandler)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.setMainHandler(AntHandler)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.setProjectHandler(AntHandler)",1,1,1
"org.apache.tools.ant.helper.ProjectHelper2.setTargetHandler(AntHandler)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.AbstractHandler.AbstractHandler(ProjectHelperImpl,DocumentHandler)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.AbstractHandler.characters(char[],int,int)",2,1,2
"org.apache.tools.ant.helper.ProjectHelperImpl.AbstractHandler.endElement(String)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.AbstractHandler.startElement(String,AttributeList)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.DataTypeHandler.DataTypeHandler(ProjectHelperImpl,DocumentHandler,Target)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.DataTypeHandler.characters(char[],int,int)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.DataTypeHandler.init(String,AttributeList)",2,2,3
"org.apache.tools.ant.helper.ProjectHelperImpl.DataTypeHandler.startElement(String,AttributeList)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.DescriptionHandler.DescriptionHandler(ProjectHelperImpl,DocumentHandler)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.DescriptionHandler.characters(char[],int,int)",1,2,2
"org.apache.tools.ant.helper.ProjectHelperImpl.NestedElementHandler.NestedElementHandler(ProjectHelperImpl,DocumentHandler,Object,RuntimeConfigurable,Target)",1,2,2
"org.apache.tools.ant.helper.ProjectHelperImpl.NestedElementHandler.characters(char[],int,int)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.NestedElementHandler.init(String,AttributeList)",1,3,3
"org.apache.tools.ant.helper.ProjectHelperImpl.NestedElementHandler.startElement(String,AttributeList)",1,2,2
"org.apache.tools.ant.helper.ProjectHelperImpl.ProjectHandler.ProjectHandler(ProjectHelperImpl,DocumentHandler)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.ProjectHandler.handleTarget(String,AttributeList)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.ProjectHandler.init(String,AttributeList)",7,13,13
"org.apache.tools.ant.helper.ProjectHelperImpl.ProjectHandler.startElement(String,AttributeList)",1,2,2
"org.apache.tools.ant.helper.ProjectHelperImpl.ProjectHelperImpl()",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.RootHandler.RootHandler(ProjectHelperImpl)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.RootHandler.resolveEntity(String,String)",2,4,4
"org.apache.tools.ant.helper.ProjectHelperImpl.RootHandler.setDocumentLocator(Locator)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.RootHandler.startElement(String,AttributeList)",2,2,2
"org.apache.tools.ant.helper.ProjectHelperImpl.TargetHandler.TargetHandler(ProjectHelperImpl,DocumentHandler)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.TargetHandler.init(String,AttributeList)",10,10,13
"org.apache.tools.ant.helper.ProjectHelperImpl.TargetHandler.startElement(String,AttributeList)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.TaskHandler.TaskHandler(ProjectHelperImpl,DocumentHandler,TaskContainer,RuntimeConfigurable,Target)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.TaskHandler.characters(char[],int,int)",1,1,1
"org.apache.tools.ant.helper.ProjectHelperImpl.TaskHandler.init(String,AttributeList)",1,3,4
"org.apache.tools.ant.helper.ProjectHelperImpl.TaskHandler.startElement(String,AttributeList)",1,2,2
"org.apache.tools.ant.helper.ProjectHelperImpl.configureId(Object,AttributeList)",1,2,2
"org.apache.tools.ant.helper.ProjectHelperImpl.handleElement(ProjectHelperImpl,DocumentHandler,Target,String,AttributeList)",1,3,3
"org.apache.tools.ant.helper.ProjectHelperImpl.parse(Project,Object)",4,7,11
"org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(Project,String[])",1,1,1
"org.apache.tools.ant.helper.SingleCheckExecutor.getSubProjectExecutor()",1,1,1
"org.apache.tools.ant.input.DefaultInputHandler.DefaultInputHandler()",1,1,1
"org.apache.tools.ant.input.DefaultInputHandler.getInputStream()",1,1,1
"org.apache.tools.ant.input.DefaultInputHandler.getPrompt(InputRequest)",1,4,4
"org.apache.tools.ant.input.DefaultInputHandler.handleInput(InputRequest)",3,3,5
"org.apache.tools.ant.input.GreedyInputHandler.GreedyInputHandler()",1,1,1
"org.apache.tools.ant.input.GreedyInputHandler.handleInput(InputRequest)",3,3,5
"org.apache.tools.ant.input.InputRequest.InputRequest(String)",2,1,2
"org.apache.tools.ant.input.InputRequest.getInput()",1,1,1
"org.apache.tools.ant.input.InputRequest.getPrompt()",1,1,1
"org.apache.tools.ant.input.InputRequest.isInputValid()",1,1,1
"org.apache.tools.ant.input.InputRequest.setInput(String)",1,1,1
"org.apache.tools.ant.input.MultipleChoiceInputRequest.MultipleChoiceInputRequest(String,Vector)",2,1,2
"org.apache.tools.ant.input.MultipleChoiceInputRequest.getChoices()",1,1,1
"org.apache.tools.ant.input.MultipleChoiceInputRequest.isInputValid()",1,1,1
"org.apache.tools.ant.input.PropertyFileInputHandler.PropertyFileInputHandler()",1,1,1
"org.apache.tools.ant.input.PropertyFileInputHandler.handleInput(InputRequest)",3,3,3
"org.apache.tools.ant.input.PropertyFileInputHandler.readProps()",3,2,4
"org.apache.tools.ant.launch.LaunchException.LaunchException(String)",1,1,1
"org.apache.tools.ant.launch.Launcher.addPath(String,boolean,List)",3,6,7
"org.apache.tools.ant.launch.Launcher.main(String[])",1,3,3
"org.apache.tools.ant.launch.Launcher.run(String[])",8,21,29
"org.apache.tools.ant.launch.Locator.Locator()",1,1,1
"org.apache.tools.ant.launch.Locator.decodeUri(String)",2,5,6
"org.apache.tools.ant.launch.Locator.encodeURI(String)",3,11,12
"org.apache.tools.ant.launch.Locator.fileToURL(File)",1,2,2
"org.apache.tools.ant.launch.Locator.fromURI(String)",4,15,18
"org.apache.tools.ant.launch.Locator.getClassSource(Class)",1,1,1
"org.apache.tools.ant.launch.Locator.getLocationURLs(File)",1,1,1
"org.apache.tools.ant.launch.Locator.getLocationURLs(File,String[])",7,6,8
"org.apache.tools.ant.launch.Locator.getResourceSource(ClassLoader,String)",4,6,6
"org.apache.tools.ant.launch.Locator.getToolsJar()",4,4,7
"org.apache.tools.ant.listener.AnsiColorLogger.printMessage(String,PrintStream,int)",2,4,9
"org.apache.tools.ant.listener.AnsiColorLogger.setColors()",1,4,11
"org.apache.tools.ant.listener.CommonsLoggingListener.CommonsLoggingListener()",1,1,1
"org.apache.tools.ant.listener.CommonsLoggingListener.buildFinished(BuildEvent)",1,3,3
"org.apache.tools.ant.listener.CommonsLoggingListener.buildStarted(BuildEvent)",1,2,2
"org.apache.tools.ant.listener.CommonsLoggingListener.getLog(String,String)",2,4,4
"org.apache.tools.ant.listener.CommonsLoggingListener.messageLogged(BuildEvent)",1,5,5
"org.apache.tools.ant.listener.CommonsLoggingListener.realLog(Log,String,int,Throwable)",2,5,10
"org.apache.tools.ant.listener.CommonsLoggingListener.setEmacsMode(boolean)",1,1,1
"org.apache.tools.ant.listener.CommonsLoggingListener.setErrorPrintStream(PrintStream)",1,1,1
"org.apache.tools.ant.listener.CommonsLoggingListener.setMessageOutputLevel(int)",1,1,1
"org.apache.tools.ant.listener.CommonsLoggingListener.setOutputPrintStream(PrintStream)",1,1,1
"org.apache.tools.ant.listener.CommonsLoggingListener.targetFinished(BuildEvent)",1,3,3
"org.apache.tools.ant.listener.CommonsLoggingListener.targetStarted(BuildEvent)",1,2,2
"org.apache.tools.ant.listener.CommonsLoggingListener.taskFinished(BuildEvent)",1,5,6
"org.apache.tools.ant.listener.CommonsLoggingListener.taskStarted(BuildEvent)",1,4,5
"org.apache.tools.ant.listener.Log4jListener.Log4jListener()",1,2,2
"org.apache.tools.ant.listener.Log4jListener.buildFinished(BuildEvent)",1,3,3
"org.apache.tools.ant.listener.Log4jListener.buildStarted(BuildEvent)",1,2,2
"org.apache.tools.ant.listener.Log4jListener.messageLogged(BuildEvent)",2,5,10
"org.apache.tools.ant.listener.Log4jListener.targetFinished(BuildEvent)",1,3,3
"org.apache.tools.ant.listener.Log4jListener.targetStarted(BuildEvent)",1,2,2
"org.apache.tools.ant.listener.Log4jListener.taskFinished(BuildEvent)",1,3,3
"org.apache.tools.ant.listener.Log4jListener.taskStarted(BuildEvent)",1,2,2
"org.apache.tools.ant.listener.MailLogger.buildFinished(BuildEvent)",2,8,13
"org.apache.tools.ant.listener.MailLogger.getValue(Hashtable,String,String)",2,1,3
"org.apache.tools.ant.listener.MailLogger.log(String)",1,1,1
"org.apache.tools.ant.listener.MailLogger.sendMail(String,int,String,String,String,String,String)",1,4,4
"org.apache.tools.ant.listener.MailLogger.sendMimeMail(Project,String,int,String,String,boolean,String,String,String,String,String)",1,3,3
"org.apache.tools.ant.listener.MailLogger.vectorizeEmailAddresses(String)",1,2,2
"org.apache.tools.ant.listener.TimestampedLogger.getBuildFailedMessage()",1,1,1
"org.apache.tools.ant.listener.TimestampedLogger.getBuildSuccessfulMessage()",1,1,1
"org.apache.tools.ant.listener.TimestampedLogger.getTimestamp()",1,1,1
"org.apache.tools.ant.loader.AntClassLoader2.AntClassLoader2()",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.AbstractCvsTask()",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.addCommandArgument(Commandline,String)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.addCommandArgument(String)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.addConfiguredCommandline(Commandline)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.addConfiguredCommandline(Commandline,boolean)",2,2,3
"org.apache.tools.ant.taskdefs.AbstractCvsTask.configureCommandline(Commandline)",2,7,10
"org.apache.tools.ant.taskdefs.AbstractCvsTask.execute()",1,6,6
"org.apache.tools.ant.taskdefs.AbstractCvsTask.executeToString(Execute)",1,3,3
"org.apache.tools.ant.taskdefs.AbstractCvsTask.getCommand()",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.getCvsRoot()",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.getCvsRsh()",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.getDest()",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.getErrorStream()",3,4,4
"org.apache.tools.ant.taskdefs.AbstractCvsTask.getExecuteStreamHandler()",1,2,2
"org.apache.tools.ant.taskdefs.AbstractCvsTask.getOutputStream()",3,4,4
"org.apache.tools.ant.taskdefs.AbstractCvsTask.getPackage()",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.getPassFile()",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.getPort()",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.getTag()",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.removeCommandline(Commandline)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.runCommand(Commandline)",5,18,20
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setAppend(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setCommand(String)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setCompression(boolean)",1,1,2
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setCompressionLevel(int)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setCvsRoot(String)",1,2,3
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setCvsRsh(String)",1,2,3
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setDate(String)",1,3,3
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setDest(File)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setError(File)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setErrorStream(OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setExecuteStreamHandler(ExecuteStreamHandler)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setNoexec(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setOutput(File)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setOutputStream(OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setPackage(String)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setPassfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setPort(int)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setQuiet(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setReallyquiet(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractCvsTask.setTag(String)",1,3,3
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.addSysproperty(Variable)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.addValue(ExecTask,String)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.beginExecution()",1,1,1
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.bindToKeystore(ExecTask)",1,4,4
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.createJarSigner()",1,1,1
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.createPath()",1,2,2
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.createRedirector()",1,3,3
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.createUnifiedSourcePath()",1,3,3
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.createUnifiedSources()",1,2,2
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.declareSysProperty(ExecTask,Variable)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.endExecution()",1,1,1
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.getRedirector()",1,1,1
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.hasResources()",1,2,2
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.setAlias(String)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.setCommonOptions(ExecTask)",1,4,4
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.setJar(File)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.setKeypass(String)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.setKeystore(String)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.setMaxmemory(String)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.setStorepass(String)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.setStoretype(String)",1,1,1
"org.apache.tools.ant.taskdefs.AbstractJarSignerTask.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Ant.Ant()",1,1,1
"org.apache.tools.ant.taskdefs.Ant.Ant(Task)",1,1,1
"org.apache.tools.ant.taskdefs.Ant.Reference.Reference()",1,1,1
"org.apache.tools.ant.taskdefs.Ant.Reference.getToRefid()",1,1,1
"org.apache.tools.ant.taskdefs.Ant.Reference.setToRefid(String)",1,1,1
"org.apache.tools.ant.taskdefs.Ant.TargetElement.TargetElement()",1,1,1
"org.apache.tools.ant.taskdefs.Ant.TargetElement.getName()",1,1,1
"org.apache.tools.ant.taskdefs.Ant.TargetElement.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.Ant.addAlmostAll(Hashtable)",3,4,5
"org.apache.tools.ant.taskdefs.Ant.addConfiguredTarget(TargetElement)",3,1,3
"org.apache.tools.ant.taskdefs.Ant.addPropertyset(PropertySet)",1,1,1
"org.apache.tools.ant.taskdefs.Ant.addReference(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.Ant.addReferences()",8,6,9
"org.apache.tools.ant.taskdefs.Ant.copyReference(String,String)",3,6,8
"org.apache.tools.ant.taskdefs.Ant.createProperty()",1,2,2
"org.apache.tools.ant.taskdefs.Ant.execute()",8,26,31
"org.apache.tools.ant.taskdefs.Ant.getBuildListeners()",1,1,1
"org.apache.tools.ant.taskdefs.Ant.handleErrorFlush(String)",1,2,2
"org.apache.tools.ant.taskdefs.Ant.handleErrorOutput(String)",1,2,2
"org.apache.tools.ant.taskdefs.Ant.handleFlush(String)",1,2,2
"org.apache.tools.ant.taskdefs.Ant.handleInput(byte[],int,int)",2,2,2
"org.apache.tools.ant.taskdefs.Ant.handleOutput(String)",1,2,2
"org.apache.tools.ant.taskdefs.Ant.init()",1,1,1
"org.apache.tools.ant.taskdefs.Ant.initializeProject()",1,7,7
"org.apache.tools.ant.taskdefs.Ant.overrideProperties()",1,6,6
"org.apache.tools.ant.taskdefs.Ant.reinit()",1,1,1
"org.apache.tools.ant.taskdefs.Ant.setAntfile(String)",1,1,1
"org.apache.tools.ant.taskdefs.Ant.setDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Ant.setInheritAll(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Ant.setInheritRefs(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Ant.setOutput(String)",1,1,1
"org.apache.tools.ant.taskdefs.Ant.setTarget(String)",2,1,2
"org.apache.tools.ant.taskdefs.AntStructure.DTDPrinter.areNmtokens(String[])",3,2,3
"org.apache.tools.ant.taskdefs.AntStructure.DTDPrinter.isNmtoken(String)",3,6,7
"org.apache.tools.ant.taskdefs.AntStructure.DTDPrinter.printElementDecl(PrintWriter,Project,String,Class)",5,26,29
"org.apache.tools.ant.taskdefs.AntStructure.DTDPrinter.printHead(PrintWriter,Enumeration,Enumeration)",1,5,5
"org.apache.tools.ant.taskdefs.AntStructure.DTDPrinter.printHead(PrintWriter,Project,Hashtable,Hashtable)",1,1,1
"org.apache.tools.ant.taskdefs.AntStructure.DTDPrinter.printTail(PrintWriter)",1,1,1
"org.apache.tools.ant.taskdefs.AntStructure.DTDPrinter.printTargetDecl(PrintWriter)",1,1,1
"org.apache.tools.ant.taskdefs.AntStructure.add(StructurePrinter)",1,1,1
"org.apache.tools.ant.taskdefs.AntStructure.areNmtokens(String[])",1,1,1
"org.apache.tools.ant.taskdefs.AntStructure.execute()",2,6,7
"org.apache.tools.ant.taskdefs.AntStructure.isNmtoken(String)",1,1,1
"org.apache.tools.ant.taskdefs.AntStructure.setOutput(File)",1,1,1
"org.apache.tools.ant.taskdefs.Antlib.addTask(Task)",1,1,1
"org.apache.tools.ant.taskdefs.Antlib.createAntlib(Project,URL,String)",2,2,3
"org.apache.tools.ant.taskdefs.Antlib.execute()",4,3,4
"org.apache.tools.ant.taskdefs.Antlib.getClassLoader()",1,2,2
"org.apache.tools.ant.taskdefs.Antlib.setClassLoader(ClassLoader)",1,1,1
"org.apache.tools.ant.taskdefs.Antlib.setURI(String)",1,1,1
"org.apache.tools.ant.taskdefs.AntlibDefinition.getAntlibClassLoader()",1,1,1
"org.apache.tools.ant.taskdefs.AntlibDefinition.getURI()",1,1,1
"org.apache.tools.ant.taskdefs.AntlibDefinition.setAntlibClassLoader(ClassLoader)",1,1,1
"org.apache.tools.ant.taskdefs.AntlibDefinition.setURI(String)",2,1,3
"org.apache.tools.ant.taskdefs.Apt.Apt()",1,1,1
"org.apache.tools.ant.taskdefs.Apt.Option.Option()",1,1,1
"org.apache.tools.ant.taskdefs.Apt.Option.getName()",1,1,1
"org.apache.tools.ant.taskdefs.Apt.Option.getValue()",1,1,1
"org.apache.tools.ant.taskdefs.Apt.Option.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.Apt.Option.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.Apt.createFactoryPath()",1,2,2
"org.apache.tools.ant.taskdefs.Apt.createOption()",1,1,1
"org.apache.tools.ant.taskdefs.Apt.execute()",1,1,1
"org.apache.tools.ant.taskdefs.Apt.getAptExecutable()",1,1,1
"org.apache.tools.ant.taskdefs.Apt.getCompiler()",1,1,1
"org.apache.tools.ant.taskdefs.Apt.getFactory()",1,1,1
"org.apache.tools.ant.taskdefs.Apt.getFactoryPath()",1,1,1
"org.apache.tools.ant.taskdefs.Apt.getOptions()",1,1,1
"org.apache.tools.ant.taskdefs.Apt.getPreprocessDir()",1,1,1
"org.apache.tools.ant.taskdefs.Apt.isCompile()",1,1,1
"org.apache.tools.ant.taskdefs.Apt.setCompile(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Apt.setCompiler(String)",1,1,1
"org.apache.tools.ant.taskdefs.Apt.setFactory(String)",1,1,1
"org.apache.tools.ant.taskdefs.Apt.setFactoryPathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.Apt.setFork(boolean)",1,2,2
"org.apache.tools.ant.taskdefs.Apt.setPreprocessDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Available.FileDir.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Available.FileDir.isDir()",1,1,1
"org.apache.tools.ant.taskdefs.Available.FileDir.isFile()",1,1,1
"org.apache.tools.ant.taskdefs.Available.checkClass(String)",3,7,8
"org.apache.tools.ant.taskdefs.Available.checkFile()",17,22,25
"org.apache.tools.ant.taskdefs.Available.checkFile(File,String)",4,7,7
"org.apache.tools.ant.taskdefs.Available.checkResource(String)",3,3,3
"org.apache.tools.ant.taskdefs.Available.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.Available.createFilepath()",1,2,2
"org.apache.tools.ant.taskdefs.Available.eval()",7,15,17
"org.apache.tools.ant.taskdefs.Available.execute()",2,5,5
"org.apache.tools.ant.taskdefs.Available.setClassname(String)",1,1,2
"org.apache.tools.ant.taskdefs.Available.setClasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.Available.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.Available.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Available.setFilepath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.Available.setIgnoresystemclasses(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Available.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.Available.setResource(String)",1,1,1
"org.apache.tools.ant.taskdefs.Available.setType(FileDir)",1,1,1
"org.apache.tools.ant.taskdefs.Available.setType(String)",1,1,1
"org.apache.tools.ant.taskdefs.Available.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.BUnzip2.extract()",4,6,6
"org.apache.tools.ant.taskdefs.BUnzip2.getDefaultExtension()",1,1,1
"org.apache.tools.ant.taskdefs.BUnzip2.supportsNonFileResources()",1,1,1
"org.apache.tools.ant.taskdefs.BZip2.pack()",1,2,2
"org.apache.tools.ant.taskdefs.BZip2.supportsNonFileResources()",1,1,1
"org.apache.tools.ant.taskdefs.Basename.execute()",3,7,8
"org.apache.tools.ant.taskdefs.Basename.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Basename.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.Basename.setSuffix(String)",1,1,1
"org.apache.tools.ant.taskdefs.BuildNumber.execute()",1,3,4
"org.apache.tools.ant.taskdefs.BuildNumber.getBuildNumber(Properties)",1,1,2
"org.apache.tools.ant.taskdefs.BuildNumber.loadProperties()",1,3,4
"org.apache.tools.ant.taskdefs.BuildNumber.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.BuildNumber.validate()",4,3,6
"org.apache.tools.ant.taskdefs.CVSPass.CVSPass()",1,1,1
"org.apache.tools.ant.taskdefs.CVSPass.execute()",3,6,10
"org.apache.tools.ant.taskdefs.CVSPass.mangle(String)",1,2,2
"org.apache.tools.ant.taskdefs.CVSPass.setCvsroot(String)",1,1,1
"org.apache.tools.ant.taskdefs.CVSPass.setPassfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.CVSPass.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.CallTarget.addConfiguredTarget(TargetElement)",1,2,2
"org.apache.tools.ant.taskdefs.CallTarget.addPropertyset(PropertySet)",1,2,2
"org.apache.tools.ant.taskdefs.CallTarget.addReference(Reference)",1,2,2
"org.apache.tools.ant.taskdefs.CallTarget.createParam()",1,2,2
"org.apache.tools.ant.taskdefs.CallTarget.execute()",2,3,3
"org.apache.tools.ant.taskdefs.CallTarget.handleErrorFlush(String)",1,2,2
"org.apache.tools.ant.taskdefs.CallTarget.handleErrorOutput(String)",1,2,2
"org.apache.tools.ant.taskdefs.CallTarget.handleFlush(String)",1,2,2
"org.apache.tools.ant.taskdefs.CallTarget.handleInput(byte[],int,int)",2,2,2
"org.apache.tools.ant.taskdefs.CallTarget.handleOutput(String)",1,2,2
"org.apache.tools.ant.taskdefs.CallTarget.init()",1,1,1
"org.apache.tools.ant.taskdefs.CallTarget.setInheritAll(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.CallTarget.setInheritRefs(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.CallTarget.setTarget(String)",1,2,2
"org.apache.tools.ant.taskdefs.Checksum.FileUnion.FileUnion()",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.FileUnion.add(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.FormatElement.FormatElement()",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.FormatElement.getDefault()",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.FormatElement.getFormat()",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.FormatElement.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.add(ResourceCollection)",2,1,3
"org.apache.tools.ant.taskdefs.Checksum.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.addToIncludeFileMap(File)",2,7,7
"org.apache.tools.ant.taskdefs.Checksum.createDigestString(byte[])",1,3,3
"org.apache.tools.ant.taskdefs.Checksum.decodeHex(char[])",2,2,3
"org.apache.tools.ant.taskdefs.Checksum.eval()",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.execute()",1,3,3
"org.apache.tools.ant.taskdefs.Checksum.generateChecksums()",1,14,16
"org.apache.tools.ant.taskdefs.Checksum.getChecksumFile(File)",3,2,3
"org.apache.tools.ant.taskdefs.Checksum.readChecksum(File)",2,1,6
"org.apache.tools.ant.taskdefs.Checksum.setAlgorithm(String)",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.setFileext(String)",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.setForceOverwrite(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.setFormat(FormatElement)",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.setPattern(String)",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.setProvider(String)",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.setReadBufferSize(int)",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.setTodir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.setTotalproperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.setVerifyproperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.Checksum.validateAndExecute()",15,18,35
"org.apache.tools.ant.taskdefs.Chmod.Chmod()",1,1,1
"org.apache.tools.ant.taskdefs.Chmod.checkConfiguration()",2,4,4
"org.apache.tools.ant.taskdefs.Chmod.createExclude()",1,1,1
"org.apache.tools.ant.taskdefs.Chmod.createInclude()",1,1,1
"org.apache.tools.ant.taskdefs.Chmod.createPatternSet()",1,1,1
"org.apache.tools.ant.taskdefs.Chmod.execute()",3,7,7
"org.apache.tools.ant.taskdefs.Chmod.isValidOs()",1,2,2
"org.apache.tools.ant.taskdefs.Chmod.setAddsourcefile(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Chmod.setCommand(Commandline)",1,1,1
"org.apache.tools.ant.taskdefs.Chmod.setDefaultexcludes(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Chmod.setDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Chmod.setExcludes(String)",1,1,1
"org.apache.tools.ant.taskdefs.Chmod.setExecutable(String)",1,1,1
"org.apache.tools.ant.taskdefs.Chmod.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Chmod.setIncludes(String)",1,1,1
"org.apache.tools.ant.taskdefs.Chmod.setPerm(String)",1,1,1
"org.apache.tools.ant.taskdefs.Chmod.setProject(Project)",1,1,1
"org.apache.tools.ant.taskdefs.Chmod.setSkipEmptyFilesets(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Classloader.Classloader()",1,1,1
"org.apache.tools.ant.taskdefs.Classloader.createClasspath()",1,1,2
"org.apache.tools.ant.taskdefs.Classloader.execute()",3,13,18
"org.apache.tools.ant.taskdefs.Classloader.setClasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.Classloader.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.Classloader.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.Classloader.setParentFirst(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Classloader.setParentName(String)",1,1,1
"org.apache.tools.ant.taskdefs.Classloader.setReset(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Classloader.setReverse(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.Concat()",1,1,1
"org.apache.tools.ant.taskdefs.Concat.MultiReader.MultiReader(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.MultiReader.addLastChar(char)",1,1,2
"org.apache.tools.ant.taskdefs.Concat.MultiReader.close()",1,2,2
"org.apache.tools.ant.taskdefs.Concat.MultiReader.getReader()",1,3,4
"org.apache.tools.ant.taskdefs.Concat.MultiReader.isMissingEndOfLine()",3,2,3
"org.apache.tools.ant.taskdefs.Concat.MultiReader.nextReader()",1,1,1
"org.apache.tools.ant.taskdefs.Concat.MultiReader.read()",4,5,7
"org.apache.tools.ant.taskdefs.Concat.MultiReader.read(char[],int,int)",10,8,15
"org.apache.tools.ant.taskdefs.Concat.TextElement.addText(String)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.TextElement.getFiltering()",1,1,1
"org.apache.tools.ant.taskdefs.Concat.TextElement.getValue()",5,4,11
"org.apache.tools.ant.taskdefs.Concat.TextElement.setEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.TextElement.setFile(File)",2,1,4
"org.apache.tools.ant.taskdefs.Concat.TextElement.setFiltering(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.TextElement.setTrim(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.TextElement.setTrimLeading(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.add(ResourceCollection)",1,1,2
"org.apache.tools.ant.taskdefs.Concat.addFilelist(FileList)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.addFilterChain(FilterChain)",1,1,2
"org.apache.tools.ant.taskdefs.Concat.addFooter(TextElement)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.addHeader(TextElement)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.addText(String)",1,2,2
"org.apache.tools.ant.taskdefs.Concat.binaryCat(ResourceCollection)",2,3,7
"org.apache.tools.ant.taskdefs.Concat.cat(ResourceCollection)",1,11,12
"org.apache.tools.ant.taskdefs.Concat.concatenate(char[],Writer,Reader)",3,3,4
"org.apache.tools.ant.taskdefs.Concat.createPath()",1,1,1
"org.apache.tools.ant.taskdefs.Concat.execute()",3,5,6
"org.apache.tools.ant.taskdefs.Concat.reset()",1,1,1
"org.apache.tools.ant.taskdefs.Concat.sanitizeText()",1,2,3
"org.apache.tools.ant.taskdefs.Concat.setAppend(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.setBinary(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.setDestfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.setEncoding(String)",1,1,2
"org.apache.tools.ant.taskdefs.Concat.setEol(CrLf)",1,6,7
"org.apache.tools.ant.taskdefs.Concat.setFixLastLine(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.setForce(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.setOutputEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.setWriter(Writer)",1,1,1
"org.apache.tools.ant.taskdefs.Concat.validate()",17,11,27
"org.apache.tools.ant.taskdefs.ConditionTask.ConditionTask()",1,1,1
"org.apache.tools.ant.taskdefs.ConditionTask.execute()",4,5,6
"org.apache.tools.ant.taskdefs.ConditionTask.setElse(String)",1,1,1
"org.apache.tools.ant.taskdefs.ConditionTask.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.ConditionTask.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.Copy()",1,1,1
"org.apache.tools.ant.taskdefs.Copy.add(File,String,Map)",1,2,2
"org.apache.tools.ant.taskdefs.Copy.add(File,String[],Map)",1,3,3
"org.apache.tools.ant.taskdefs.Copy.add(FileNameMapper)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.add(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.buildMap(File,File,String[],FileNameMapper,Hashtable)",1,7,7
"org.apache.tools.ant.taskdefs.Copy.buildMap(Resource[],File,FileNameMapper)",1,7,7
"org.apache.tools.ant.taskdefs.Copy.createFilterChain()",1,1,1
"org.apache.tools.ant.taskdefs.Copy.createFilterSet()",1,1,1
"org.apache.tools.ant.taskdefs.Copy.createMapper()",2,2,2
"org.apache.tools.ant.taskdefs.Copy.doFileOperations()",6,16,20
"org.apache.tools.ant.taskdefs.Copy.doResourceOperations(Map)",5,9,11
"org.apache.tools.ant.taskdefs.Copy.execute()",13,36,40
"org.apache.tools.ant.taskdefs.Copy.getEncoding()",1,1,1
"org.apache.tools.ant.taskdefs.Copy.getFileUtils()",1,1,1
"org.apache.tools.ant.taskdefs.Copy.getFilterChains()",1,1,1
"org.apache.tools.ant.taskdefs.Copy.getFilterSets()",1,1,1
"org.apache.tools.ant.taskdefs.Copy.getKeyFile(File)",1,1,2
"org.apache.tools.ant.taskdefs.Copy.getMapper()",1,2,3
"org.apache.tools.ant.taskdefs.Copy.getOutputEncoding()",1,1,1
"org.apache.tools.ant.taskdefs.Copy.getPreserveLastModified()",1,1,1
"org.apache.tools.ant.taskdefs.Copy.isEnableMultipleMapping()",1,1,1
"org.apache.tools.ant.taskdefs.Copy.scan(File,File,String[],String[])",1,2,2
"org.apache.tools.ant.taskdefs.Copy.scan(Resource[],File)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.setEnableMultipleMappings(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.setEncoding(String)",1,1,2
"org.apache.tools.ant.taskdefs.Copy.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.setFiltering(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.setFlatten(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.setGranularity(long)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.setIncludeEmptyDirs(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.setOutputEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.setOverwrite(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.setPreserveLastModified(String)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.setPreserveLastModified(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.setTodir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.setTofile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Copy.setVerbose(boolean)",1,1,2
"org.apache.tools.ant.taskdefs.Copy.supportsNonFileResources()",1,1,1
"org.apache.tools.ant.taskdefs.Copy.validateAttributes()",11,10,17
"org.apache.tools.ant.taskdefs.CopyPath.CopyPath()",1,1,1
"org.apache.tools.ant.taskdefs.CopyPath.add(FileNameMapper)",2,1,2
"org.apache.tools.ant.taskdefs.CopyPath.createPath()",1,2,2
"org.apache.tools.ant.taskdefs.CopyPath.execute()",6,8,9
"org.apache.tools.ant.taskdefs.CopyPath.setDestDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.CopyPath.setGranularity(long)",1,1,1
"org.apache.tools.ant.taskdefs.CopyPath.setPath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.CopyPath.setPathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.CopyPath.setPreserveLastModified(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.CopyPath.validateAttributes()",4,1,4
"org.apache.tools.ant.taskdefs.Copydir.execute()",6,8,9
"org.apache.tools.ant.taskdefs.Copydir.scanDir(File,File,String[])",1,5,5
"org.apache.tools.ant.taskdefs.Copydir.setDest(File)",1,1,1
"org.apache.tools.ant.taskdefs.Copydir.setFiltering(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Copydir.setFlatten(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Copydir.setForceoverwrite(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Copydir.setSrc(File)",1,1,1
"org.apache.tools.ant.taskdefs.Copyfile.execute()",5,8,8
"org.apache.tools.ant.taskdefs.Copyfile.setDest(File)",1,1,1
"org.apache.tools.ant.taskdefs.Copyfile.setFiltering(String)",1,1,1
"org.apache.tools.ant.taskdefs.Copyfile.setForceoverwrite(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Copyfile.setSrc(File)",1,1,1
"org.apache.tools.ant.taskdefs.Cvs.Cvs()",1,1,1
"org.apache.tools.ant.taskdefs.DefBase.createClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.DefBase.createLoader()",2,4,4
"org.apache.tools.ant.taskdefs.DefBase.getClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.DefBase.getClasspathId()",1,1,1
"org.apache.tools.ant.taskdefs.DefBase.getDelegate()",1,2,2
"org.apache.tools.ant.taskdefs.DefBase.getLoaderId()",1,1,1
"org.apache.tools.ant.taskdefs.DefBase.init()",1,1,1
"org.apache.tools.ant.taskdefs.DefBase.isReverseLoader()",1,1,1
"org.apache.tools.ant.taskdefs.DefBase.setClasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.DefBase.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.DefBase.setLoaderRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.DefBase.setReverseLoader(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.DefaultExcludes.execute()",2,9,10
"org.apache.tools.ant.taskdefs.DefaultExcludes.setAdd(String)",1,1,1
"org.apache.tools.ant.taskdefs.DefaultExcludes.setDefault(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.DefaultExcludes.setEcho(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.DefaultExcludes.setRemove(String)",1,1,1
"org.apache.tools.ant.taskdefs.Definer.Format.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Definer.OnError.OnError()",1,1,1
"org.apache.tools.ant.taskdefs.Definer.OnError.OnError(String)",1,1,1
"org.apache.tools.ant.taskdefs.Definer.OnError.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Definer.ResourceStack.getStack()",1,1,1
"org.apache.tools.ant.taskdefs.Definer.ResourceStack.initialValue()",1,1,1
"org.apache.tools.ant.taskdefs.Definer.addDefinition(ClassLoader,String,String)",3,9,11
"org.apache.tools.ant.taskdefs.Definer.execute()",11,11,14
"org.apache.tools.ant.taskdefs.Definer.fileToURL()",4,5,10
"org.apache.tools.ant.taskdefs.Definer.getClassname()",1,1,1
"org.apache.tools.ant.taskdefs.Definer.getFile()",1,1,1
"org.apache.tools.ant.taskdefs.Definer.getName()",1,1,1
"org.apache.tools.ant.taskdefs.Definer.getResource()",1,1,1
"org.apache.tools.ant.taskdefs.Definer.loadAntlib(ClassLoader,URL)",1,2,2
"org.apache.tools.ant.taskdefs.Definer.loadProperties(ClassLoader,URL)",2,4,4
"org.apache.tools.ant.taskdefs.Definer.makeResourceFromURI(String)",1,2,3
"org.apache.tools.ant.taskdefs.Definer.resourceToURLs(ClassLoader)",4,4,7
"org.apache.tools.ant.taskdefs.Definer.setAdaptTo(String)",1,1,1
"org.apache.tools.ant.taskdefs.Definer.setAdaptToClass(Class)",1,1,1
"org.apache.tools.ant.taskdefs.Definer.setAdapter(String)",1,1,1
"org.apache.tools.ant.taskdefs.Definer.setAdapterClass(Class)",1,1,1
"org.apache.tools.ant.taskdefs.Definer.setClassname(String)",1,1,1
"org.apache.tools.ant.taskdefs.Definer.setFile(File)",1,2,2
"org.apache.tools.ant.taskdefs.Definer.setFormat(Format)",1,1,1
"org.apache.tools.ant.taskdefs.Definer.setName(String)",1,2,2
"org.apache.tools.ant.taskdefs.Definer.setOnError(OnError)",1,1,1
"org.apache.tools.ant.taskdefs.Definer.setResource(String)",1,2,2
"org.apache.tools.ant.taskdefs.Definer.tooManyDefinitions()",1,1,1
"org.apache.tools.ant.taskdefs.Delete.ReverseDirs.ReverseDirs(File,String[])",1,1,1
"org.apache.tools.ant.taskdefs.Delete.ReverseDirs.isFilesystemOnly()",1,1,1
"org.apache.tools.ant.taskdefs.Delete.ReverseDirs.iterator()",1,1,1
"org.apache.tools.ant.taskdefs.Delete.ReverseDirs.size()",1,1,1
"org.apache.tools.ant.taskdefs.Delete.add(FileSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.add(ResourceCollection)",2,1,3
"org.apache.tools.ant.taskdefs.Delete.addAnd(AndSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addContains(ContainsSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addContainsRegexp(ContainsRegexpSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addCustom(ExtendSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addDate(DateSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addDepend(DependSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addDepth(DepthSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addFilename(FilenameSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addMajority(MajoritySelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addModified(ModifiedSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addNone(NoneSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addNot(NotSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addOr(OrSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addPresent(PresentSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addSelector(SelectSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.addSize(SizeSelector)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.createExclude()",1,1,1
"org.apache.tools.ant.taskdefs.Delete.createExcludesFile()",1,1,1
"org.apache.tools.ant.taskdefs.Delete.createInclude()",1,1,1
"org.apache.tools.ant.taskdefs.Delete.createIncludesFile()",1,1,1
"org.apache.tools.ant.taskdefs.Delete.createPatternSet()",1,1,1
"org.apache.tools.ant.taskdefs.Delete.delete(File)",4,5,7
"org.apache.tools.ant.taskdefs.Delete.execute()",6,31,38
"org.apache.tools.ant.taskdefs.Delete.handle(Exception)",2,1,4
"org.apache.tools.ant.taskdefs.Delete.handle(String)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.removeDir(File)",1,5,7
"org.apache.tools.ant.taskdefs.Delete.removeFiles(File,String[],String[])",1,9,16
"org.apache.tools.ant.taskdefs.Delete.setCaseSensitive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.setDefaultexcludes(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.setDeleteOnExit(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.setDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.setExcludes(String)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.setExcludesfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.setFollowSymlinks(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.setIncludeEmptyDirs(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.setIncludes(String)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.setIncludesfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Delete.setQuiet(boolean)",1,1,2
"org.apache.tools.ant.taskdefs.Delete.setVerbose(boolean)",1,1,2
"org.apache.tools.ant.taskdefs.Deltree.execute()",5,6,6
"org.apache.tools.ant.taskdefs.Deltree.removeDir(File)",5,5,5
"org.apache.tools.ant.taskdefs.Deltree.setDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.DependSet.Newest.Newest(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.DependSet.NonExistent.NonExistent(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.DependSet.Oldest.Oldest(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.DependSet.Xest.Xest(ResourceCollection,ResourceComparator)",1,1,1
"org.apache.tools.ant.taskdefs.DependSet.addSrcfilelist(FileList)",1,1,1
"org.apache.tools.ant.taskdefs.DependSet.addSrcfileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.DependSet.addTargetfilelist(FileList)",1,1,1
"org.apache.tools.ant.taskdefs.DependSet.addTargetfileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.DependSet.createSources()",1,1,2
"org.apache.tools.ant.taskdefs.DependSet.createTargets()",1,2,2
"org.apache.tools.ant.taskdefs.DependSet.execute()",3,4,6
"org.apache.tools.ant.taskdefs.DependSet.logFuture(ResourceCollection,ResourceSelector)",1,2,2
"org.apache.tools.ant.taskdefs.DependSet.uptodate(ResourceCollection,ResourceCollection)",3,3,3
"org.apache.tools.ant.taskdefs.DiagnosticsTask.execute()",1,1,1
"org.apache.tools.ant.taskdefs.Dirname.execute()",3,3,3
"org.apache.tools.ant.taskdefs.Dirname.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Dirname.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.Ear.Ear()",1,1,1
"org.apache.tools.ant.taskdefs.Ear.addArchives(ZipFileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Ear.cleanUp()",1,1,1
"org.apache.tools.ant.taskdefs.Ear.initZipOutputStream(ZipOutputStream)",2,3,3
"org.apache.tools.ant.taskdefs.Ear.setAppxml(File)",2,1,2
"org.apache.tools.ant.taskdefs.Ear.setEarfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Ear.zipFile(File,ZipOutputStream,String,int)",1,5,5
"org.apache.tools.ant.taskdefs.Echo.EchoLevel.getLevel()",1,1,1
"org.apache.tools.ant.taskdefs.Echo.EchoLevel.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Echo.addText(String)",1,1,1
"org.apache.tools.ant.taskdefs.Echo.execute()",2,4,5
"org.apache.tools.ant.taskdefs.Echo.setAppend(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Echo.setEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.Echo.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Echo.setLevel(EchoLevel)",1,1,1
"org.apache.tools.ant.taskdefs.Echo.setMessage(String)",1,1,1
"org.apache.tools.ant.taskdefs.EchoXML.execute()",2,2,5
"org.apache.tools.ant.taskdefs.EchoXML.setAppend(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.EchoXML.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Exec.Exec()",1,1,1
"org.apache.tools.ant.taskdefs.Exec.StreamPumper.StreamPumper(InputStream,int)",1,1,1
"org.apache.tools.ant.taskdefs.Exec.StreamPumper.pumpStream()",1,3,3
"org.apache.tools.ant.taskdefs.Exec.StreamPumper.run()",1,2,4
"org.apache.tools.ant.taskdefs.Exec.execute()",1,1,1
"org.apache.tools.ant.taskdefs.Exec.logFlush()",1,2,2
"org.apache.tools.ant.taskdefs.Exec.outputLog(String,int)",1,2,2
"org.apache.tools.ant.taskdefs.Exec.run(String)",9,13,14
"org.apache.tools.ant.taskdefs.Exec.setCommand(String)",1,1,1
"org.apache.tools.ant.taskdefs.Exec.setDir(String)",1,1,1
"org.apache.tools.ant.taskdefs.Exec.setFailonerror(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Exec.setOs(String)",1,1,1
"org.apache.tools.ant.taskdefs.Exec.setOutput(String)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.ExecTask()",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.ExecTask(Task)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.addConfiguredRedirector(RedirectorElement)",2,1,2
"org.apache.tools.ant.taskdefs.ExecTask.addEnv(Variable)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.checkConfiguration()",5,5,8
"org.apache.tools.ant.taskdefs.ExecTask.createArg()",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.createHandler()",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.createWatchdog()",1,2,2
"org.apache.tools.ant.taskdefs.ExecTask.execute()",2,1,2
"org.apache.tools.ant.taskdefs.ExecTask.getResolveExecutable()",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.isPath(String)",1,2,2
"org.apache.tools.ant.taskdefs.ExecTask.isValidOs()",3,4,5
"org.apache.tools.ant.taskdefs.ExecTask.logFlush()",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.maybeSetResultPropertyValue(int)",1,2,2
"org.apache.tools.ant.taskdefs.ExecTask.prepareExec()",1,5,5
"org.apache.tools.ant.taskdefs.ExecTask.resolveExecutable(String,boolean)",15,14,15
"org.apache.tools.ant.taskdefs.ExecTask.runExec(Execute)",2,3,3
"org.apache.tools.ant.taskdefs.ExecTask.runExecute(Execute)",6,6,6
"org.apache.tools.ant.taskdefs.ExecTask.setAppend(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setCommand(Commandline)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setError(File)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setErrorProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setExecutable(String)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setFailIfExecutionFails(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setFailonerror(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setInput(File)",2,1,2
"org.apache.tools.ant.taskdefs.ExecTask.setInputString(String)",2,1,2
"org.apache.tools.ant.taskdefs.ExecTask.setLogError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setNewenvironment(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setOs(String)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setOsFamily(String)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setOutput(File)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setOutputproperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setResolveExecutable(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setResultProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setSearchPath(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setSpawn(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setTimeout(Integer)",1,2,2
"org.apache.tools.ant.taskdefs.ExecTask.setTimeout(Long)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setVMLauncher(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecTask.setupRedirector()",1,1,1
"org.apache.tools.ant.taskdefs.Execute.CommandLauncher.exec(Project,String[],String[])",1,2,2
"org.apache.tools.ant.taskdefs.Execute.CommandLauncher.exec(Project,String[],String[],File)",2,2,2
"org.apache.tools.ant.taskdefs.Execute.CommandLauncherProxy.CommandLauncherProxy(CommandLauncher)",1,1,1
"org.apache.tools.ant.taskdefs.Execute.CommandLauncherProxy.exec(Project,String[],String[])",1,1,1
"org.apache.tools.ant.taskdefs.Execute.Execute()",1,1,1
"org.apache.tools.ant.taskdefs.Execute.Execute(ExecuteStreamHandler)",1,1,1
"org.apache.tools.ant.taskdefs.Execute.Execute(ExecuteStreamHandler,ExecuteWatchdog)",1,1,2
"org.apache.tools.ant.taskdefs.Execute.Java13CommandLauncher.Java13CommandLauncher()",1,1,1
"org.apache.tools.ant.taskdefs.Execute.Java13CommandLauncher.exec(Project,String[],String[],File)",3,3,6
"org.apache.tools.ant.taskdefs.Execute.MacCommandLauncher.MacCommandLauncher(CommandLauncher)",1,1,1
"org.apache.tools.ant.taskdefs.Execute.MacCommandLauncher.exec(Project,String[],String[],File)",2,2,2
"org.apache.tools.ant.taskdefs.Execute.OS2CommandLauncher.OS2CommandLauncher(CommandLauncher)",1,1,1
"org.apache.tools.ant.taskdefs.Execute.OS2CommandLauncher.exec(Project,String[],String[],File)",3,3,3
"org.apache.tools.ant.taskdefs.Execute.PerlScriptCommandLauncher.PerlScriptCommandLauncher(String,CommandLauncher)",1,1,1
"org.apache.tools.ant.taskdefs.Execute.PerlScriptCommandLauncher.exec(Project,String[],String[],File)",4,4,6
"org.apache.tools.ant.taskdefs.Execute.ScriptCommandLauncher.ScriptCommandLauncher(String,CommandLauncher)",1,1,1
"org.apache.tools.ant.taskdefs.Execute.ScriptCommandLauncher.exec(Project,String[],String[],File)",4,4,6
"org.apache.tools.ant.taskdefs.Execute.VmsCommandLauncher.VmsCommandLauncher()",1,1,1
"org.apache.tools.ant.taskdefs.Execute.VmsCommandLauncher.createCommandFile(String[],String[])",1,6,6
"org.apache.tools.ant.taskdefs.Execute.VmsCommandLauncher.deleteAfter(File,Process)",1,1,2
"org.apache.tools.ant.taskdefs.Execute.VmsCommandLauncher.exec(Project,String[],String[])",1,1,1
"org.apache.tools.ant.taskdefs.Execute.VmsCommandLauncher.exec(Project,String[],String[],File)",1,1,1
"org.apache.tools.ant.taskdefs.Execute.WinNTCommandLauncher.WinNTCommandLauncher(CommandLauncher)",1,1,1
"org.apache.tools.ant.taskdefs.Execute.WinNTCommandLauncher.exec(Project,String[],String[],File)",3,3,3
"org.apache.tools.ant.taskdefs.Execute.addVMSLogicals(Vector,BufferedReader)",1,9,9
"org.apache.tools.ant.taskdefs.Execute.closeStreams(Process)",1,1,1
"org.apache.tools.ant.taskdefs.Execute.execute()",2,7,8
"org.apache.tools.ant.taskdefs.Execute.getCommandline()",1,1,1
"org.apache.tools.ant.taskdefs.Execute.getEnvironment()",1,2,3
"org.apache.tools.ant.taskdefs.Execute.getExitValue()",1,1,1
"org.apache.tools.ant.taskdefs.Execute.getProcEnvCommand()",7,8,11
"org.apache.tools.ant.taskdefs.Execute.getProcEnvironment()",3,7,10
"org.apache.tools.ant.taskdefs.Execute.getWorkingDirectory()",1,1,2
"org.apache.tools.ant.taskdefs.Execute.isFailure()",1,1,1
"org.apache.tools.ant.taskdefs.Execute.isFailure(int)",1,1,2
"org.apache.tools.ant.taskdefs.Execute.killedProcess()",1,2,2
"org.apache.tools.ant.taskdefs.Execute.launch(Project,String[],String[],File,boolean)",2,2,5
"org.apache.tools.ant.taskdefs.Execute.patchEnvironment()",5,4,5
"org.apache.tools.ant.taskdefs.Execute.runCommand(Task,String[])",2,3,3
"org.apache.tools.ant.taskdefs.Execute.setAntRun(Project)",1,1,1
"org.apache.tools.ant.taskdefs.Execute.setCommandline(String[])",1,1,1
"org.apache.tools.ant.taskdefs.Execute.setEnvironment(String[])",1,1,1
"org.apache.tools.ant.taskdefs.Execute.setExitValue(int)",1,1,1
"org.apache.tools.ant.taskdefs.Execute.setNewenvironment(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Execute.setSpawn(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Execute.setStreamHandler(ExecuteStreamHandler)",1,1,1
"org.apache.tools.ant.taskdefs.Execute.setVMLauncher(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Execute.setWorkingDirectory(File)",1,2,3
"org.apache.tools.ant.taskdefs.Execute.spawn()",2,4,5
"org.apache.tools.ant.taskdefs.Execute.toString(ByteArrayOutputStream)",3,3,5
"org.apache.tools.ant.taskdefs.Execute.waitFor(Process)",1,2,2
"org.apache.tools.ant.taskdefs.ExecuteJava.execute(Project)",4,7,16
"org.apache.tools.ant.taskdefs.ExecuteJava.fork(ProjectComponent)",1,6,7
"org.apache.tools.ant.taskdefs.ExecuteJava.killedProcess()",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteJava.run()",1,4,6
"org.apache.tools.ant.taskdefs.ExecuteJava.setClasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteJava.setJavaCommand(Commandline)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteJava.setOutput(PrintStream)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteJava.setPermissions(Permissions)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteJava.setSystemProperties(SysProperties)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteJava.setTimeout(Long)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteJava.setupCommandLineForVMS(Execute,String[])",1,1,2
"org.apache.tools.ant.taskdefs.ExecuteJava.timeoutOccured(Watchdog)",1,2,2
"org.apache.tools.ant.taskdefs.ExecuteOn.FileDirBoth.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.add(FileNameMapper)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.add(ResourceCollection)",1,1,2
"org.apache.tools.ant.taskdefs.ExecuteOn.addDirset(DirSet)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.addFilelist(FileList)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.checkConfiguration()",4,7,9
"org.apache.tools.ant.taskdefs.ExecuteOn.createHandler()",1,2,2
"org.apache.tools.ant.taskdefs.ExecuteOn.createMapper()",2,2,2
"org.apache.tools.ant.taskdefs.ExecuteOn.createSrcfile()",2,2,2
"org.apache.tools.ant.taskdefs.ExecuteOn.createTargetfile()",2,2,2
"org.apache.tools.ant.taskdefs.ExecuteOn.getCommandline(String,File)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.getCommandline(String[],File[])",1,14,19
"org.apache.tools.ant.taskdefs.ExecuteOn.getDirs(File,DirectoryScanner)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.getFiles(File,DirectoryScanner)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.getFilesAndDirs(FileList)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.restrict(String[],File)",1,2,3
"org.apache.tools.ant.taskdefs.ExecuteOn.runExec(Execute)",9,33,42
"org.apache.tools.ant.taskdefs.ExecuteOn.runParallel(Execute,Vector,Vector)",1,5,7
"org.apache.tools.ant.taskdefs.ExecuteOn.setAddsourcefile(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.setDest(File)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.setForce(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.setForwardslash(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.setIgnoremissing(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.setMaxParallel(int)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.setParallel(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.setRelative(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.setSkipEmptyFilesets(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.setType(FileDirBoth)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteOn.setupRedirector()",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteWatchdog.ExecuteWatchdog(int)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteWatchdog.ExecuteWatchdog(long)",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteWatchdog.checkException()",2,2,2
"org.apache.tools.ant.taskdefs.ExecuteWatchdog.cleanUp()",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteWatchdog.isWatching()",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteWatchdog.killedProcess()",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteWatchdog.start(Process)",3,1,3
"org.apache.tools.ant.taskdefs.ExecuteWatchdog.stop()",1,1,1
"org.apache.tools.ant.taskdefs.ExecuteWatchdog.timeoutOccured(Watchdog)",1,3,4
"org.apache.tools.ant.taskdefs.Exit.NestedCondition.eval()",2,1,2
"org.apache.tools.ant.taskdefs.Exit.addText(String)",1,1,2
"org.apache.tools.ant.taskdefs.Exit.createCondition()",2,1,2
"org.apache.tools.ant.taskdefs.Exit.execute()",2,11,16
"org.apache.tools.ant.taskdefs.Exit.nestedConditionPresent()",1,1,1
"org.apache.tools.ant.taskdefs.Exit.setIf(String)",1,1,1
"org.apache.tools.ant.taskdefs.Exit.setMessage(String)",1,1,1
"org.apache.tools.ant.taskdefs.Exit.setStatus(int)",1,1,1
"org.apache.tools.ant.taskdefs.Exit.setUnless(String)",1,1,1
"org.apache.tools.ant.taskdefs.Exit.testIfCondition()",2,2,3
"org.apache.tools.ant.taskdefs.Exit.testNestedCondition()",2,2,5
"org.apache.tools.ant.taskdefs.Exit.testUnlessCondition()",2,2,3
"org.apache.tools.ant.taskdefs.Expand.add(FileNameMapper)",1,1,1
"org.apache.tools.ant.taskdefs.Expand.add(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.Expand.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Expand.addPatternset(PatternSet)",1,1,1
"org.apache.tools.ant.taskdefs.Expand.createMapper()",2,2,2
"org.apache.tools.ant.taskdefs.Expand.execute()",8,8,12
"org.apache.tools.ant.taskdefs.Expand.expandFile(FileUtils,File,File)",1,3,3
"org.apache.tools.ant.taskdefs.Expand.expandResource(Resource,File)",1,1,1
"org.apache.tools.ant.taskdefs.Expand.extractFile(FileUtils,File,File,InputStream,String,Date,boolean,FileNameMapper)",4,18,25
"org.apache.tools.ant.taskdefs.Expand.getMapper()",1,2,2
"org.apache.tools.ant.taskdefs.Expand.setDest(File)",1,1,1
"org.apache.tools.ant.taskdefs.Expand.setEncoding(String)",1,1,2
"org.apache.tools.ant.taskdefs.Expand.setOverwrite(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Expand.setSrc(File)",1,1,1
"org.apache.tools.ant.taskdefs.Filter.execute()",2,4,9
"org.apache.tools.ant.taskdefs.Filter.readFilters()",1,1,1
"org.apache.tools.ant.taskdefs.Filter.setFiltersfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Filter.setToken(String)",1,1,1
"org.apache.tools.ant.taskdefs.Filter.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.AddAsisRemove.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.CrLf.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.BufferLine(String,String)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.getChar(int)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.getColumn()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.getEol()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.getEolLength()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.getLineString()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.getLookahead()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.getNext()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.getNextChar()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.getNextCharInc()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.getState()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.incColumn()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.length()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.setColumn(int)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.setLookahead(int)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.setNext(int)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.setState(int)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.substring(int)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.BufferLine.substring(int,int)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.OneLiner(File)",1,2,3
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.close()",1,2,2
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.getEofStr()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.getState()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.hasMoreElements()",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.nextElement()",2,1,2
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.nextLine()",4,11,19
"org.apache.tools.ant.taskdefs.FixCRLF.OneLiner.setState(int)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.chain(Reader)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.execute()",9,4,11
"org.apache.tools.ant.taskdefs.FixCRLF.processFile(String)",1,5,8
"org.apache.tools.ant.taskdefs.FixCRLF.setCr(AddAsisRemove)",1,3,3
"org.apache.tools.ant.taskdefs.FixCRLF.setDestdir(File)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.setEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.setEof(AddAsisRemove)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.setEol(CrLf)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.setFixlast(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.setJavafiles(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.setPreserveLastModified(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.setSrcdir(File)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.setTab(AddAsisRemove)",1,1,1
"org.apache.tools.ant.taskdefs.FixCRLF.setTablength(int)",1,1,2
"org.apache.tools.ant.taskdefs.GUnzip.extract()",2,4,4
"org.apache.tools.ant.taskdefs.GUnzip.getDefaultExtension()",1,1,1
"org.apache.tools.ant.taskdefs.GUnzip.supportsNonFileResources()",1,1,1
"org.apache.tools.ant.taskdefs.GZip.pack()",1,2,2
"org.apache.tools.ant.taskdefs.GZip.supportsNonFileResources()",1,1,1
"org.apache.tools.ant.taskdefs.GenerateKey.DistinguishedName.createParam()",1,1,1
"org.apache.tools.ant.taskdefs.GenerateKey.DistinguishedName.encode(String)",2,2,3
"org.apache.tools.ant.taskdefs.GenerateKey.DistinguishedName.getParams()",1,1,1
"org.apache.tools.ant.taskdefs.GenerateKey.DistinguishedName.toString()",1,3,3
"org.apache.tools.ant.taskdefs.GenerateKey.DnameParam.getName()",1,1,1
"org.apache.tools.ant.taskdefs.GenerateKey.DnameParam.getValue()",1,1,1
"org.apache.tools.ant.taskdefs.GenerateKey.DnameParam.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.GenerateKey.DnameParam.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.GenerateKey.createDname()",3,1,3
"org.apache.tools.ant.taskdefs.GenerateKey.execute()",4,12,16
"org.apache.tools.ant.taskdefs.GenerateKey.setAlias(String)",1,1,1
"org.apache.tools.ant.taskdefs.GenerateKey.setDname(String)",2,1,2
"org.apache.tools.ant.taskdefs.GenerateKey.setKeyalg(String)",1,1,1
"org.apache.tools.ant.taskdefs.GenerateKey.setKeypass(String)",1,1,1
"org.apache.tools.ant.taskdefs.GenerateKey.setKeysize(String)",1,1,2
"org.apache.tools.ant.taskdefs.GenerateKey.setKeystore(String)",1,1,1
"org.apache.tools.ant.taskdefs.GenerateKey.setSigalg(String)",1,1,1
"org.apache.tools.ant.taskdefs.GenerateKey.setStorepass(String)",1,1,1
"org.apache.tools.ant.taskdefs.GenerateKey.setStoretype(String)",1,1,1
"org.apache.tools.ant.taskdefs.GenerateKey.setValidity(String)",1,1,2
"org.apache.tools.ant.taskdefs.GenerateKey.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Get.Base64Converter.encode(String)",1,1,1
"org.apache.tools.ant.taskdefs.Get.Base64Converter.encode(byte[])",1,1,4
"org.apache.tools.ant.taskdefs.Get.NullProgress.beginDownload()",1,1,1
"org.apache.tools.ant.taskdefs.Get.NullProgress.endDownload()",1,1,1
"org.apache.tools.ant.taskdefs.Get.NullProgress.onTick()",1,1,1
"org.apache.tools.ant.taskdefs.Get.VerboseProgress.VerboseProgress(PrintStream)",1,1,1
"org.apache.tools.ant.taskdefs.Get.VerboseProgress.beginDownload()",1,1,1
"org.apache.tools.ant.taskdefs.Get.VerboseProgress.endDownload()",1,1,1
"org.apache.tools.ant.taskdefs.Get.VerboseProgress.onTick()",1,2,2
"org.apache.tools.ant.taskdefs.Get.doGet(int,DownloadProgress)",12,25,31
"org.apache.tools.ant.taskdefs.Get.execute()",2,3,4
"org.apache.tools.ant.taskdefs.Get.setDest(File)",1,1,1
"org.apache.tools.ant.taskdefs.Get.setIgnoreErrors(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Get.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.Get.setSrc(URL)",1,1,1
"org.apache.tools.ant.taskdefs.Get.setUseTimestamp(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Get.setUsername(String)",1,1,1
"org.apache.tools.ant.taskdefs.Get.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ImportTask.execute()",9,7,12
"org.apache.tools.ant.taskdefs.ImportTask.setFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.ImportTask.setOptional(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Input.Handler.getClassname()",1,1,1
"org.apache.tools.ant.taskdefs.Input.Handler.getInputHandler()",4,4,5
"org.apache.tools.ant.taskdefs.Input.Handler.getRefid()",1,1,1
"org.apache.tools.ant.taskdefs.Input.Handler.getType()",1,1,1
"org.apache.tools.ant.taskdefs.Input.Handler.setClassname(String)",1,1,1
"org.apache.tools.ant.taskdefs.Input.Handler.setRefid(String)",1,1,1
"org.apache.tools.ant.taskdefs.Input.Handler.setType(HandlerType)",1,1,1
"org.apache.tools.ant.taskdefs.Input.HandlerType.getInputHandler()",1,1,1
"org.apache.tools.ant.taskdefs.Input.HandlerType.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Input.Input()",1,1,1
"org.apache.tools.ant.taskdefs.Input.addText(String)",2,2,3
"org.apache.tools.ant.taskdefs.Input.createHandler()",2,1,2
"org.apache.tools.ant.taskdefs.Input.execute()",2,8,10
"org.apache.tools.ant.taskdefs.Input.setAddproperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.Input.setDefaultvalue(String)",1,1,1
"org.apache.tools.ant.taskdefs.Input.setMessage(String)",1,1,1
"org.apache.tools.ant.taskdefs.Input.setValidargs(String)",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.JDBCTask.getClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.getConnection()",5,5,6
"org.apache.tools.ant.taskdefs.JDBCTask.getDriver()",2,9,9
"org.apache.tools.ant.taskdefs.JDBCTask.getLoader()",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.getLoaderMap()",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.getPassword()",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.getRdbms()",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.getUrl()",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.getUserId()",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.getVersion()",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.isAutocommit()",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.isCaching(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.isValidRdbms(Connection)",6,9,11
"org.apache.tools.ant.taskdefs.JDBCTask.setAutocommit(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.setCaching(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.setClasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.setDriver(String)",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.setRdbms(String)",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.setUrl(String)",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.setUserid(String)",1,1,1
"org.apache.tools.ant.taskdefs.JDBCTask.setVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.Jar.FilesetManifestConfig.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Jar.Jar()",1,1,1
"org.apache.tools.ant.taskdefs.Jar.addConfiguredIndexJars(Path)",1,2,2
"org.apache.tools.ant.taskdefs.Jar.addConfiguredManifest(Manifest)",1,2,2
"org.apache.tools.ant.taskdefs.Jar.addMetainf(ZipFileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Jar.cleanUp()",1,1,4
"org.apache.tools.ant.taskdefs.Jar.createEmptyZip(File)",4,6,8
"org.apache.tools.ant.taskdefs.Jar.createIndexList(ZipOutputStream)",1,7,7
"org.apache.tools.ant.taskdefs.Jar.createManifest()",1,5,5
"org.apache.tools.ant.taskdefs.Jar.filesetManifest(File,InputStream)",3,11,13
"org.apache.tools.ant.taskdefs.Jar.finalizeZipOutputStream(ZipOutputStream)",1,2,2
"org.apache.tools.ant.taskdefs.Jar.findJarName(String,String[])",7,8,9
"org.apache.tools.ant.taskdefs.Jar.getManifest(File)",1,4,6
"org.apache.tools.ant.taskdefs.Jar.getManifest(Reader)",1,3,3
"org.apache.tools.ant.taskdefs.Jar.getManifestFromJar(File)",3,4,5
"org.apache.tools.ant.taskdefs.Jar.getResourcesToAdd(ResourceCollection[],File,boolean)",1,5,5
"org.apache.tools.ant.taskdefs.Jar.grabFilesAndDirs(String,List,List)",1,6,6
"org.apache.tools.ant.taskdefs.Jar.initZipOutputStream(ZipOutputStream)",1,2,2
"org.apache.tools.ant.taskdefs.Jar.reset()",1,1,1
"org.apache.tools.ant.taskdefs.Jar.setFilesetmanifest(FilesetManifestConfig)",1,2,3
"org.apache.tools.ant.taskdefs.Jar.setIndex(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Jar.setJarfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Jar.setManifest(File)",2,2,2
"org.apache.tools.ant.taskdefs.Jar.setManifestEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.Jar.setWhenempty(WhenEmpty)",1,1,1
"org.apache.tools.ant.taskdefs.Jar.setWhenmanifestonly(WhenEmpty)",1,1,1
"org.apache.tools.ant.taskdefs.Jar.writeIndexLikeList(List,List,PrintWriter)",3,6,7
"org.apache.tools.ant.taskdefs.Jar.writeManifest(ZipOutputStream,Manifest)",1,2,2
"org.apache.tools.ant.taskdefs.Jar.zipFile(InputStream,ZipOutputStream,String,long,File,int)",1,7,9
"org.apache.tools.ant.taskdefs.Java.Java()",1,1,1
"org.apache.tools.ant.taskdefs.Java.Java(Task)",1,1,1
"org.apache.tools.ant.taskdefs.Java.addAssertions(Assertions)",2,1,2
"org.apache.tools.ant.taskdefs.Java.addConfiguredRedirector(RedirectorElement)",2,1,2
"org.apache.tools.ant.taskdefs.Java.addEnv(Variable)",1,1,1
"org.apache.tools.ant.taskdefs.Java.addSysproperty(Variable)",1,1,1
"org.apache.tools.ant.taskdefs.Java.addSyspropertyset(PropertySet)",1,1,1
"org.apache.tools.ant.taskdefs.Java.clearArgs()",1,1,1
"org.apache.tools.ant.taskdefs.Java.createArg()",1,1,1
"org.apache.tools.ant.taskdefs.Java.createBootclasspath()",1,1,1
"org.apache.tools.ant.taskdefs.Java.createClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.Java.createJvmarg()",1,1,1
"org.apache.tools.ant.taskdefs.Java.createPermissions()",1,1,2
"org.apache.tools.ant.taskdefs.Java.createWatchdog()",2,1,2
"org.apache.tools.ant.taskdefs.Java.execute()",3,3,3
"org.apache.tools.ant.taskdefs.Java.executeJava()",9,23,29
"org.apache.tools.ant.taskdefs.Java.fork(String[])",2,2,3
"org.apache.tools.ant.taskdefs.Java.getCommandLine()",1,1,1
"org.apache.tools.ant.taskdefs.Java.getSysProperties()",1,1,1
"org.apache.tools.ant.taskdefs.Java.handleErrorFlush(String)",1,2,2
"org.apache.tools.ant.taskdefs.Java.handleErrorOutput(String)",1,2,2
"org.apache.tools.ant.taskdefs.Java.handleFlush(String)",1,2,2
"org.apache.tools.ant.taskdefs.Java.handleInput(byte[],int,int)",1,1,1
"org.apache.tools.ant.taskdefs.Java.handleOutput(String)",1,2,2
"org.apache.tools.ant.taskdefs.Java.log(Throwable)",1,1,1
"org.apache.tools.ant.taskdefs.Java.maybeSetResultPropertyValue(int)",1,2,2
"org.apache.tools.ant.taskdefs.Java.run(CommandlineJava)",2,1,3
"org.apache.tools.ant.taskdefs.Java.run(String,Vector)",1,2,2
"org.apache.tools.ant.taskdefs.Java.setAppend(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setArgs(String)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setClassname(String)",2,1,2
"org.apache.tools.ant.taskdefs.Java.setClasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setCloneVm(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setError(File)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setErrorProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setFailonerror(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setFork(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setInput(File)",2,1,2
"org.apache.tools.ant.taskdefs.Java.setInputString(String)",2,1,2
"org.apache.tools.ant.taskdefs.Java.setJVMVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setJar(File)",2,1,2
"org.apache.tools.ant.taskdefs.Java.setJvm(String)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setJvmargs(String)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setLogError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setMaxmemory(String)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setNewenvironment(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setOutput(File)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setOutputproperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setResultProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setSpawn(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setTimeout(Long)",1,1,1
"org.apache.tools.ant.taskdefs.Java.setupCommandLine(Execute,String[])",1,2,2
"org.apache.tools.ant.taskdefs.Java.setupCommandLineForVMS(Execute,String[])",1,1,1
"org.apache.tools.ant.taskdefs.Java.setupEnvironment(Execute)",1,3,3
"org.apache.tools.ant.taskdefs.Java.setupExecutable(Execute,String[])",1,1,1
"org.apache.tools.ant.taskdefs.Java.setupRedirector()",1,3,5
"org.apache.tools.ant.taskdefs.Java.setupWorkingDir(Execute)",3,4,4
"org.apache.tools.ant.taskdefs.Java.spawn(String[])",1,2,2
"org.apache.tools.ant.taskdefs.Javac.ImplementationSpecificArgument.setCompiler(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.Javac()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.assumedJavaVersion()",6,5,6
"org.apache.tools.ant.taskdefs.Javac.checkParameters()",4,5,5
"org.apache.tools.ant.taskdefs.Javac.compile()",4,6,8
"org.apache.tools.ant.taskdefs.Javac.createBootclasspath()",1,2,2
"org.apache.tools.ant.taskdefs.Javac.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.Javac.createCompilerArg()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.createExtdirs()",1,2,2
"org.apache.tools.ant.taskdefs.Javac.createSourcepath()",1,2,2
"org.apache.tools.ant.taskdefs.Javac.createSrc()",1,2,2
"org.apache.tools.ant.taskdefs.Javac.execute()",3,3,4
"org.apache.tools.ant.taskdefs.Javac.getAltCompilerName(String)",7,11,14
"org.apache.tools.ant.taskdefs.Javac.getBootclasspath()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getCompiler()",1,3,3
"org.apache.tools.ant.taskdefs.Javac.getCompilerVersion()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getCurrentCompilerArgs()",1,2,3
"org.apache.tools.ant.taskdefs.Javac.getDebug()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getDebugLevel()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getDepend()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getDeprecation()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getDestdir()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getEncoding()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getExecutable()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getExtdirs()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getFailonerror()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getFileList()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getIncludeantruntime()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getIncludejavaruntime()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getJavacExecutable()",1,4,5
"org.apache.tools.ant.taskdefs.Javac.getListfiles()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getMemoryInitialSize()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getMemoryMaximumSize()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getNowarn()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getOptimize()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getSource()",1,2,2
"org.apache.tools.ant.taskdefs.Javac.getSourcepath()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getSrcdir()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getSystemJavac()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getTarget()",1,2,2
"org.apache.tools.ant.taskdefs.Javac.getTempdir()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.getVerbose()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.isForkedJavac()",1,2,2
"org.apache.tools.ant.taskdefs.Javac.isJdkCompiler(String)",1,8,8
"org.apache.tools.ant.taskdefs.Javac.recreateSrc()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.resetFileLists()",1,1,1
"org.apache.tools.ant.taskdefs.Javac.scanDir(File,File,String[])",1,2,2
"org.apache.tools.ant.taskdefs.Javac.setBootClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setBootclasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.Javac.setClasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.Javac.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setCompiler(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setDebug(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setDebugLevel(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setDepend(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setDeprecation(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setDestdir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setExecutable(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setExtdirs(Path)",1,2,2
"org.apache.tools.ant.taskdefs.Javac.setFailonerror(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setFork(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setIncludeantruntime(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setIncludejavaruntime(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setListfiles(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setMemoryInitialSize(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setMemoryMaximumSize(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setNowarn(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setOptimize(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setProceed(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setSource(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setSourcepath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.Javac.setSourcepathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setSrcdir(Path)",1,2,2
"org.apache.tools.ant.taskdefs.Javac.setTarget(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setTempdir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Javac.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.AccessType.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.DocletInfo.createParam()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.DocletInfo.getParams()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.DocletParam.getName()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.DocletParam.getValue()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.DocletParam.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.DocletParam.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.ExtensionInfo.createPath()",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.ExtensionInfo.getName()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.ExtensionInfo.getPath()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.ExtensionInfo.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.ExtensionInfo.setPath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.ExtensionInfo.setPathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.GroupArgument.GroupArgument()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.GroupArgument.addPackage(PackageName)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.GroupArgument.addTitle(Html)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.GroupArgument.getPackages()",1,3,3
"org.apache.tools.ant.taskdefs.Javadoc.GroupArgument.getTitle()",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.GroupArgument.setPackages(String)",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.GroupArgument.setTitle(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.Html.addText(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.Html.getText()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.JavadocOutputStream.JavadocOutputStream(int)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.JavadocOutputStream.logFlush()",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.JavadocOutputStream.processLine(String,int)",1,6,6
"org.apache.tools.ant.taskdefs.Javadoc.LinkArgument.LinkArgument()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.LinkArgument.getHref()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.LinkArgument.getPackagelistLoc()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.LinkArgument.isLinkOffline()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.LinkArgument.setHref(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.LinkArgument.setOffline(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.LinkArgument.setPackagelistLoc(File)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.LinkArgument.setResolveLink(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.LinkArgument.shouldResolveLink()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.PackageName.getName()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.PackageName.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.PackageName.toString()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.ResourceCollectionContainer.add(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.ResourceCollectionContainer.iterator()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.SourceFile.SourceFile()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.SourceFile.SourceFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.SourceFile.getFile()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.SourceFile.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.TagArgument.TagArgument()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.TagArgument.getParameter()",3,3,5
"org.apache.tools.ant.taskdefs.Javadoc.TagArgument.setEnabled(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.TagArgument.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.TagArgument.setScope(String)",8,10,15
"org.apache.tools.ant.taskdefs.Javadoc.addArgIf(boolean,String)",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.addArgIfNotEmpty(String,String)",1,3,3
"org.apache.tools.ant.taskdefs.Javadoc.addBottom(Html)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.addDoctitle(Html)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.addExcludePackage(PackageName)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.addFooter(Html)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.addHeader(Html)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.addPackage(PackageName)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.addPackageset(DirSet)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.addSource(SourceFile)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.addSourceFiles(Vector)",3,7,8
"org.apache.tools.ant.taskdefs.Javadoc.addTaglet(ExtensionInfo)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.createArg()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.createBootclasspath()",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.createDoclet()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.createGroup()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.createLink()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.createSourceFiles()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.createSourcepath()",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.createTag()",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.execute()",24,81,100
"org.apache.tools.ant.taskdefs.Javadoc.expand(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.parsePackages(Vector,Path)",1,15,17
"org.apache.tools.ant.taskdefs.Javadoc.setAccess(AccessType)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setAdditionalparam(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setAuthor(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setBootClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setBootclasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.setBottom(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setBreakiterator(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setCharset(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setClasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setDefaultexcludes(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setDestdir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setDocencoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setDoclet(String)",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.setDocletPath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.setDocletPathRef(Reference)",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.setDoctitle(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setExcludePackageNames(String)",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.setExecutable(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setExtdirs(Path)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setExtdirs(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setFailonerror(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setFooter(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setGroup(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setHeader(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setHelpfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setIncludeNoSourcePackages(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setLink(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setLinkoffline(String)",3,1,3
"org.apache.tools.ant.taskdefs.Javadoc.setLinksource(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setLocale(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setMaxmemory(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setNodeprecated(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setNodeprecatedlist(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setNohelp(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setNoindex(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setNonavbar(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setNoqualifier(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setNotree(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setOld(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setOverview(File)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setPackage(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setPackageList(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setPackagenames(String)",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.setPrivate(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setProtected(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setPublic(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setSerialwarn(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setSource(String)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setSourcefiles(String)",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.setSourcepath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.Javadoc.setSourcepathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setSplitindex(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setStylesheetfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setUse(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setUseExternalFile(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setVersion(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Javadoc.setWindowtitle(String)",1,1,1
"org.apache.tools.ant.taskdefs.Jikes.Jikes(JikesOutputParser,String,Project)",1,1,1
"org.apache.tools.ant.taskdefs.Jikes.compile(String[])",2,5,7
"org.apache.tools.ant.taskdefs.JikesOutputParser.JikesOutputParser(Task,boolean)",1,1,1
"org.apache.tools.ant.taskdefs.JikesOutputParser.getErrorFlag()",1,1,1
"org.apache.tools.ant.taskdefs.JikesOutputParser.log(String)",1,2,4
"org.apache.tools.ant.taskdefs.JikesOutputParser.parseEmacsOutput(BufferedReader)",1,1,1
"org.apache.tools.ant.taskdefs.JikesOutputParser.parseOutput(BufferedReader)",1,2,2
"org.apache.tools.ant.taskdefs.JikesOutputParser.parseStandardOutput(BufferedReader)",3,5,6
"org.apache.tools.ant.taskdefs.JikesOutputParser.setError(boolean)",1,1,2
"org.apache.tools.ant.taskdefs.JikesOutputParser.setProcessErrorStream(InputStream)",1,1,1
"org.apache.tools.ant.taskdefs.JikesOutputParser.setProcessInputStream(OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.JikesOutputParser.setProcessOutputStream(InputStream)",1,1,1
"org.apache.tools.ant.taskdefs.JikesOutputParser.start()",1,1,1
"org.apache.tools.ant.taskdefs.JikesOutputParser.stop()",1,1,1
"org.apache.tools.ant.taskdefs.KeySubst.execute()",2,7,10
"org.apache.tools.ant.taskdefs.KeySubst.main(String[])",1,2,2
"org.apache.tools.ant.taskdefs.KeySubst.replace(String,Hashtable)",1,3,3
"org.apache.tools.ant.taskdefs.KeySubst.setDest(File)",1,1,1
"org.apache.tools.ant.taskdefs.KeySubst.setKeys(String)",1,4,4
"org.apache.tools.ant.taskdefs.KeySubst.setSep(String)",1,1,1
"org.apache.tools.ant.taskdefs.KeySubst.setSrc(File)",1,1,1
"org.apache.tools.ant.taskdefs.Length.AllHandler.AllHandler(PrintStream)",1,1,1
"org.apache.tools.ant.taskdefs.Length.AllHandler.complete()",1,1,1
"org.apache.tools.ant.taskdefs.Length.AllHandler.handle(Resource)",1,2,2
"org.apache.tools.ant.taskdefs.Length.ConditionHandler.ConditionHandler()",1,1,1
"org.apache.tools.ant.taskdefs.Length.ConditionHandler.complete()",1,1,1
"org.apache.tools.ant.taskdefs.Length.ConditionHandler.getLength()",1,1,1
"org.apache.tools.ant.taskdefs.Length.EachHandler.EachHandler(PrintStream)",1,1,1
"org.apache.tools.ant.taskdefs.Length.EachHandler.handle(Resource)",1,2,2
"org.apache.tools.ant.taskdefs.Length.FileMode.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Length.Handler.Handler(PrintStream)",1,1,1
"org.apache.tools.ant.taskdefs.Length.Handler.complete()",1,1,1
"org.apache.tools.ant.taskdefs.Length.add(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Length.add(ResourceCollection)",2,1,3
"org.apache.tools.ant.taskdefs.Length.eval()",2,2,3
"org.apache.tools.ant.taskdefs.Length.execute()",1,5,5
"org.apache.tools.ant.taskdefs.Length.getLength(String,boolean)",1,2,2
"org.apache.tools.ant.taskdefs.Length.getTrim()",1,2,2
"org.apache.tools.ant.taskdefs.Length.handleResources(Handler)",1,4,4
"org.apache.tools.ant.taskdefs.Length.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Length.setLength(long)",1,1,1
"org.apache.tools.ant.taskdefs.Length.setMode(FileMode)",1,1,1
"org.apache.tools.ant.taskdefs.Length.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.Length.setString(String)",1,1,1
"org.apache.tools.ant.taskdefs.Length.setTrim(boolean)",1,1,2
"org.apache.tools.ant.taskdefs.Length.setWhen(Comparison)",1,1,1
"org.apache.tools.ant.taskdefs.Length.setWhen(When)",1,1,1
"org.apache.tools.ant.taskdefs.Length.validate()",7,4,8
"org.apache.tools.ant.taskdefs.LoadFile.setSrcFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.LoadProperties.addConfigured(ResourceCollection)",3,1,3
"org.apache.tools.ant.taskdefs.LoadProperties.addFilterChain(FilterChain)",1,1,1
"org.apache.tools.ant.taskdefs.LoadProperties.assertSrcIsJavaResource()",3,2,3
"org.apache.tools.ant.taskdefs.LoadProperties.createClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.LoadProperties.execute()",4,6,9
"org.apache.tools.ant.taskdefs.LoadProperties.getClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.LoadProperties.setClasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.LoadProperties.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.LoadProperties.setEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.LoadProperties.setResource(String)",1,1,1
"org.apache.tools.ant.taskdefs.LoadProperties.setSrcFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.LoadResource.addConfigured(ResourceCollection)",2,1,2
"org.apache.tools.ant.taskdefs.LoadResource.addFilterChain(FilterChain)",1,1,1
"org.apache.tools.ant.taskdefs.LoadResource.execute()",7,12,15
"org.apache.tools.ant.taskdefs.LoadResource.setEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.LoadResource.setFailonerror(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.LoadResource.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.LogOutputStream.LogOutputStream(ProjectComponent,int)",1,1,1
"org.apache.tools.ant.taskdefs.LogOutputStream.LogOutputStream(Task,int)",1,1,1
"org.apache.tools.ant.taskdefs.LogOutputStream.getMessageLevel()",1,1,1
"org.apache.tools.ant.taskdefs.LogOutputStream.processBuffer()",1,1,2
"org.apache.tools.ant.taskdefs.LogOutputStream.processLine(String)",1,1,1
"org.apache.tools.ant.taskdefs.LogOutputStream.processLine(String,int)",1,1,1
"org.apache.tools.ant.taskdefs.LogStreamHandler.LogStreamHandler(ProjectComponent,int,int)",1,1,1
"org.apache.tools.ant.taskdefs.LogStreamHandler.LogStreamHandler(Task,int,int)",1,1,1
"org.apache.tools.ant.taskdefs.LogStreamHandler.stop()",1,1,2
"org.apache.tools.ant.taskdefs.MacroDef.Attribute.equals(Member)",1,3,3
"org.apache.tools.ant.taskdefs.MacroDef.Attribute.getDefault()",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.Attribute.hashCode()",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.Attribute.setDefault(String)",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.DefineAttribute.getDefault()",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.DefineAttribute.setDefault(String)",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.DefineAttribute.setPrefix(String)",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.Member.equals(Member)",1,2,2
"org.apache.tools.ant.taskdefs.MacroDef.Member.equals(Object)",3,3,4
"org.apache.tools.ant.taskdefs.MacroDef.Member.getDescription()",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.Member.getName()",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.Member.hashCode()",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.Member.setDescription(String)",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.Member.setName(String)",2,1,2
"org.apache.tools.ant.taskdefs.MacroDef.MyAntTypeDefinition.MyAntTypeDefinition(MacroDef)",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.MyAntTypeDefinition.create(Project)",2,1,2
"org.apache.tools.ant.taskdefs.MacroDef.MyAntTypeDefinition.sameDefinition(AntTypeDefinition,Project)",2,1,2
"org.apache.tools.ant.taskdefs.MacroDef.MyAntTypeDefinition.similarDefinition(AntTypeDefinition,Project)",2,1,2
"org.apache.tools.ant.taskdefs.MacroDef.NestedSequential.addTask(Task)",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.NestedSequential.getNested()",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.NestedSequential.similar(NestedSequential)",4,2,4
"org.apache.tools.ant.taskdefs.MacroDef.TemplateElement.equals(Member)",1,3,3
"org.apache.tools.ant.taskdefs.MacroDef.TemplateElement.hashCode()",1,1,3
"org.apache.tools.ant.taskdefs.MacroDef.TemplateElement.isImplicit()",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.TemplateElement.isOptional()",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.TemplateElement.setImplicit(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.TemplateElement.setOptional(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.Text.equals(Member)",1,3,3
"org.apache.tools.ant.taskdefs.MacroDef.Text.getOptional()",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.Text.getTrim()",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.Text.setOptional(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.Text.setTrim(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.addConfiguredAttribute(Attribute)",5,4,6
"org.apache.tools.ant.taskdefs.MacroDef.addConfiguredDefine(DefineAttribute)",5,4,6
"org.apache.tools.ant.taskdefs.MacroDef.addConfiguredElement(TemplateElement)",4,4,6
"org.apache.tools.ant.taskdefs.MacroDef.addConfiguredText(Text)",5,3,5
"org.apache.tools.ant.taskdefs.MacroDef.createSequential()",2,1,2
"org.apache.tools.ant.taskdefs.MacroDef.execute()",3,1,3
"org.apache.tools.ant.taskdefs.MacroDef.getAttributes()",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.getBackTrace()",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.getElements()",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.getNestedTask()",1,2,2
"org.apache.tools.ant.taskdefs.MacroDef.getText()",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.isValidName(String)",4,2,4
"org.apache.tools.ant.taskdefs.MacroDef.isValidNameCharacter(char)",1,3,3
"org.apache.tools.ant.taskdefs.MacroDef.objectHashCode(Object)",2,2,2
"org.apache.tools.ant.taskdefs.MacroDef.sameDefinition(Object)",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.sameOrSimilar(Object,boolean)",16,9,22
"org.apache.tools.ant.taskdefs.MacroDef.setBackTrace(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.MacroDef.similar(Object)",1,1,1
"org.apache.tools.ant.taskdefs.MacroInstance.Element.addTask(Task)",1,1,1
"org.apache.tools.ant.taskdefs.MacroInstance.Element.getUnknownElements()",1,1,1
"org.apache.tools.ant.taskdefs.MacroInstance.addTask(Task)",1,1,1
"org.apache.tools.ant.taskdefs.MacroInstance.addText(String)",1,1,1
"org.apache.tools.ant.taskdefs.MacroInstance.copy(UnknownElement)",7,13,13
"org.apache.tools.ant.taskdefs.MacroInstance.createDynamicElement(String)",1,1,1
"org.apache.tools.ant.taskdefs.MacroInstance.execute()",11,15,18
"org.apache.tools.ant.taskdefs.MacroInstance.getMacroDef()",1,1,1
"org.apache.tools.ant.taskdefs.MacroInstance.getNsElements()",1,4,4
"org.apache.tools.ant.taskdefs.MacroInstance.macroSubs(String,Map)",4,9,16
"org.apache.tools.ant.taskdefs.MacroInstance.processTasks()",5,2,5
"org.apache.tools.ant.taskdefs.MacroInstance.setDynamicAttribute(String,String)",1,1,1
"org.apache.tools.ant.taskdefs.MacroInstance.setMacroDef(MacroDef)",1,1,1
"org.apache.tools.ant.taskdefs.MakeUrl.addFileSet(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.MakeUrl.addPath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.MakeUrl.execute()",2,3,6
"org.apache.tools.ant.taskdefs.MakeUrl.filesetsToURL()",2,3,4
"org.apache.tools.ant.taskdefs.MakeUrl.pathsToURL()",2,3,4
"org.apache.tools.ant.taskdefs.MakeUrl.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.MakeUrl.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.MakeUrl.setSeparator(String)",1,1,1
"org.apache.tools.ant.taskdefs.MakeUrl.setValidate(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.MakeUrl.stripTrailingSeparator(StringBuffer,int)",2,2,2
"org.apache.tools.ant.taskdefs.MakeUrl.toURL(File)",1,1,1
"org.apache.tools.ant.taskdefs.MakeUrl.validate()",3,3,5
"org.apache.tools.ant.taskdefs.MakeUrl.validateFile(File)",2,3,3
"org.apache.tools.ant.taskdefs.Manifest.Attribute.Attribute()",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.Attribute.Attribute(String)",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.Attribute.Attribute(String,String)",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.Attribute.addContinuation(String)",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.Attribute.addValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.Attribute.equals(Object)",4,4,9
"org.apache.tools.ant.taskdefs.Manifest.Attribute.getKey()",2,1,2
"org.apache.tools.ant.taskdefs.Manifest.Attribute.getName()",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.Attribute.getValue()",2,2,3
"org.apache.tools.ant.taskdefs.Manifest.Attribute.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.Attribute.hashCode()",1,2,2
"org.apache.tools.ant.taskdefs.Manifest.Attribute.parse(String)",2,1,2
"org.apache.tools.ant.taskdefs.Manifest.Attribute.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.Attribute.setValue(String)",1,2,2
"org.apache.tools.ant.taskdefs.Manifest.Attribute.write(PrintWriter)",1,2,2
"org.apache.tools.ant.taskdefs.Manifest.Attribute.writeValue(PrintWriter,String)",3,4,5
"org.apache.tools.ant.taskdefs.Manifest.Manifest()",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.Manifest(Reader)",5,5,6
"org.apache.tools.ant.taskdefs.Manifest.Section.addAttributeAndCheck(Attribute)",6,8,9
"org.apache.tools.ant.taskdefs.Manifest.Section.addConfiguredAttribute(Attribute)",2,1,2
"org.apache.tools.ant.taskdefs.Manifest.Section.clone()",1,2,2
"org.apache.tools.ant.taskdefs.Manifest.Section.equals(Object)",3,2,4
"org.apache.tools.ant.taskdefs.Manifest.Section.getAttribute(String)",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.Section.getAttributeKeys()",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.Section.getAttributeValue(String)",2,1,2
"org.apache.tools.ant.taskdefs.Manifest.Section.getName()",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.Section.getWarnings()",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.Section.hashCode()",1,2,2
"org.apache.tools.ant.taskdefs.Manifest.Section.merge(Section)",2,10,11
"org.apache.tools.ant.taskdefs.Manifest.Section.read(BufferedReader)",7,6,8
"org.apache.tools.ant.taskdefs.Manifest.Section.removeAttribute(String)",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.Section.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.Section.storeAttribute(Attribute)",2,2,3
"org.apache.tools.ant.taskdefs.Manifest.Section.write(PrintWriter)",1,3,3
"org.apache.tools.ant.taskdefs.Manifest.addConfiguredAttribute(Attribute)",2,3,4
"org.apache.tools.ant.taskdefs.Manifest.addConfiguredSection(Section)",2,2,3
"org.apache.tools.ant.taskdefs.Manifest.equals(Object)",7,3,8
"org.apache.tools.ant.taskdefs.Manifest.getDefaultManifest()",2,1,5
"org.apache.tools.ant.taskdefs.Manifest.getMainSection()",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.getManifestVersion()",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.getSection(String)",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.getSectionNames()",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.getWarnings()",1,4,4
"org.apache.tools.ant.taskdefs.Manifest.hashCode()",1,2,2
"org.apache.tools.ant.taskdefs.Manifest.merge(Manifest)",1,1,1
"org.apache.tools.ant.taskdefs.Manifest.merge(Manifest,boolean)",1,6,7
"org.apache.tools.ant.taskdefs.Manifest.toString()",1,1,2
"org.apache.tools.ant.taskdefs.Manifest.write(PrintWriter)",1,4,5
"org.apache.tools.ant.taskdefs.ManifestClassPath.addClassPath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.ManifestClassPath.execute()",11,7,16
"org.apache.tools.ant.taskdefs.ManifestClassPath.setJarFile(File)",2,1,2
"org.apache.tools.ant.taskdefs.ManifestClassPath.setMaxParentLevels(int)",1,1,1
"org.apache.tools.ant.taskdefs.ManifestClassPath.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.ManifestException.ManifestException(String)",1,1,1
"org.apache.tools.ant.taskdefs.ManifestTask.ManifestTask()",1,1,1
"org.apache.tools.ant.taskdefs.ManifestTask.Mode.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.ManifestTask.addConfiguredAttribute(Attribute)",1,1,1
"org.apache.tools.ant.taskdefs.ManifestTask.addConfiguredSection(Section)",1,1,1
"org.apache.tools.ant.taskdefs.ManifestTask.execute()",6,12,15
"org.apache.tools.ant.taskdefs.ManifestTask.setEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.ManifestTask.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.ManifestTask.setMode(Mode)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.XsetIgnore(String)",1,4,4
"org.apache.tools.ant.taskdefs.MatchingTask.XsetItems(String)",1,6,6
"org.apache.tools.ant.taskdefs.MatchingTask.add(FileSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addAnd(AndSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addContains(ContainsSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addContainsRegexp(ContainsRegexpSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addCustom(ExtendSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addDate(DateSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addDepend(DependSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addDepth(DepthSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addDifferent(DifferentSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addFilename(FilenameSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addMajority(MajoritySelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addModified(ModifiedSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addNone(NoneSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addNot(NotSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addOr(OrSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addPresent(PresentSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addSelector(SelectSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addSize(SizeSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.addType(TypeSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.appendSelector(FileSelector)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.createExclude()",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.createExcludesFile()",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.createInclude()",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.createIncludesFile()",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.createPatternSet()",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.getDirectoryScanner(File)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.getImplicitFileSet()",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.getSelectors(Project)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.hasSelectors()",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.selectorCount()",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.selectorElements()",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.setCaseSensitive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.setDefaultexcludes(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.setExcludes(String)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.setExcludesfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.setFollowSymlinks(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.setIncludes(String)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.setIncludesfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.MatchingTask.setProject(Project)",1,1,1
"org.apache.tools.ant.taskdefs.Mkdir.execute()",5,5,5
"org.apache.tools.ant.taskdefs.Mkdir.mkdirs(File)",2,3,3
"org.apache.tools.ant.taskdefs.Mkdir.setDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Move.Move()",1,1,1
"org.apache.tools.ant.taskdefs.Move.copyFile(File,File,boolean,boolean)",1,4,4
"org.apache.tools.ant.taskdefs.Move.deleteDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Move.deleteDir(File,boolean)",6,6,7
"org.apache.tools.ant.taskdefs.Move.doFileOperations()",12,20,24
"org.apache.tools.ant.taskdefs.Move.moveFile(File,File,boolean,boolean)",3,4,4
"org.apache.tools.ant.taskdefs.Move.okToDelete(File)",5,3,5
"org.apache.tools.ant.taskdefs.Move.renameFile(File,File,boolean,boolean)",3,8,9
"org.apache.tools.ant.taskdefs.Move.validateAttributes()",3,5,9
"org.apache.tools.ant.taskdefs.Nice.execute()",2,5,6
"org.apache.tools.ant.taskdefs.Nice.setCurrentPriority(String)",1,1,1
"org.apache.tools.ant.taskdefs.Nice.setNewPriority(int)",2,1,3
"org.apache.tools.ant.taskdefs.Pack.addConfigured(ResourceCollection)",2,1,2
"org.apache.tools.ant.taskdefs.Pack.execute()",1,3,3
"org.apache.tools.ant.taskdefs.Pack.getSrcResource()",1,1,1
"org.apache.tools.ant.taskdefs.Pack.setDestfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Pack.setSrc(File)",1,1,1
"org.apache.tools.ant.taskdefs.Pack.setSrcResource(Resource)",4,2,4
"org.apache.tools.ant.taskdefs.Pack.setZipfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Pack.supportsNonFileResources()",1,1,1
"org.apache.tools.ant.taskdefs.Pack.validate()",4,4,4
"org.apache.tools.ant.taskdefs.Pack.zipFile(File,OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.Pack.zipFile(InputStream,OutputStream)",1,2,2
"org.apache.tools.ant.taskdefs.Pack.zipResource(Resource,OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.Parallel.TaskList.addTask(Task)",1,1,1
"org.apache.tools.ant.taskdefs.Parallel.TaskRunnable.TaskRunnable(Task)",1,1,1
"org.apache.tools.ant.taskdefs.Parallel.TaskRunnable.getException()",1,1,1
"org.apache.tools.ant.taskdefs.Parallel.TaskRunnable.isFinished()",1,1,1
"org.apache.tools.ant.taskdefs.Parallel.TaskRunnable.run()",1,1,3
"org.apache.tools.ant.taskdefs.Parallel.addDaemons(TaskList)",2,1,2
"org.apache.tools.ant.taskdefs.Parallel.addTask(Task)",1,1,1
"org.apache.tools.ant.taskdefs.Parallel.execute()",1,2,2
"org.apache.tools.ant.taskdefs.Parallel.getNumProcessors()",1,1,2
"org.apache.tools.ant.taskdefs.Parallel.processExceptions(TaskRunnable[])",2,4,7
"org.apache.tools.ant.taskdefs.Parallel.setFailOnAny(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Parallel.setPollInterval(int)",1,1,1
"org.apache.tools.ant.taskdefs.Parallel.setThreadCount(int)",1,1,1
"org.apache.tools.ant.taskdefs.Parallel.setThreadsPerProcessor(int)",1,1,1
"org.apache.tools.ant.taskdefs.Parallel.setTimeout(long)",1,1,1
"org.apache.tools.ant.taskdefs.Parallel.spinThreads()",11,18,25
"org.apache.tools.ant.taskdefs.Parallel.updateThreadCounts()",1,2,3
"org.apache.tools.ant.taskdefs.Patch.execute()",5,8,8
"org.apache.tools.ant.taskdefs.Patch.setBackups(boolean)",1,2,2
"org.apache.tools.ant.taskdefs.Patch.setDestfile(File)",1,2,2
"org.apache.tools.ant.taskdefs.Patch.setDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Patch.setIgnorewhitespace(boolean)",1,2,2
"org.apache.tools.ant.taskdefs.Patch.setOriginalfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Patch.setPatchfile(File)",2,2,2
"org.apache.tools.ant.taskdefs.Patch.setQuiet(boolean)",1,2,2
"org.apache.tools.ant.taskdefs.Patch.setReverse(boolean)",1,2,2
"org.apache.tools.ant.taskdefs.Patch.setStrip(int)",2,2,2
"org.apache.tools.ant.taskdefs.PathConvert.MapEntry.apply(String)",2,4,6
"org.apache.tools.ant.taskdefs.PathConvert.MapEntry.setFrom(String)",1,1,1
"org.apache.tools.ant.taskdefs.PathConvert.MapEntry.setTo(String)",1,1,1
"org.apache.tools.ant.taskdefs.PathConvert.PathConvert()",1,1,1
"org.apache.tools.ant.taskdefs.PathConvert.TargetOs.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.PathConvert.add(FileNameMapper)",1,1,1
"org.apache.tools.ant.taskdefs.PathConvert.add(ResourceCollection)",2,2,2
"org.apache.tools.ant.taskdefs.PathConvert.addMapper(Mapper)",2,1,2
"org.apache.tools.ant.taskdefs.PathConvert.createMap()",1,1,1
"org.apache.tools.ant.taskdefs.PathConvert.createPath()",2,2,2
"org.apache.tools.ant.taskdefs.PathConvert.execute()",3,12,15
"org.apache.tools.ant.taskdefs.PathConvert.getPath()",1,2,2
"org.apache.tools.ant.taskdefs.PathConvert.isReference()",1,1,1
"org.apache.tools.ant.taskdefs.PathConvert.mapElement(String)",4,3,4
"org.apache.tools.ant.taskdefs.PathConvert.noChildrenAllowed()",1,1,1
"org.apache.tools.ant.taskdefs.PathConvert.setDirSep(String)",1,1,1
"org.apache.tools.ant.taskdefs.PathConvert.setPathSep(String)",1,1,1
"org.apache.tools.ant.taskdefs.PathConvert.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.PathConvert.setRefid(Reference)",2,2,2
"org.apache.tools.ant.taskdefs.PathConvert.setSetonempty(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.PathConvert.setTargetos(String)",1,1,1
"org.apache.tools.ant.taskdefs.PathConvert.setTargetos(TargetOs)",1,2,2
"org.apache.tools.ant.taskdefs.PathConvert.validateSetup()",2,1,7
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.PreSetDefinition(AntTypeDefinition,UnknownElement)",1,2,2
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.checkClass(Project)",1,1,1
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.create(Project)",1,1,1
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.createObject(Project)",1,1,1
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.getClassLoader()",1,1,1
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.getClassName()",1,1,1
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.getExposedClass(Project)",1,1,1
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.getPreSets()",1,1,1
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.getTypeClass(Project)",1,1,1
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.sameDefinition(AntTypeDefinition,Project)",1,5,5
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.setAdaptToClass(Class)",1,1,1
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.setAdapterClass(Class)",1,1,1
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.setClass(Class)",1,1,1
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.setClassLoader(ClassLoader)",1,1,1
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.setClassName(String)",1,1,1
"org.apache.tools.ant.taskdefs.PreSetDef.PreSetDefinition.similarDefinition(AntTypeDefinition,Project)",1,5,5
"org.apache.tools.ant.taskdefs.PreSetDef.addTask(Task)",3,1,3
"org.apache.tools.ant.taskdefs.PreSetDef.execute()",4,1,4
"org.apache.tools.ant.taskdefs.PreSetDef.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.ProcessDestroyer.ProcessDestroyer()",1,2,3
"org.apache.tools.ant.taskdefs.ProcessDestroyer.ProcessDestroyerImpl.ProcessDestroyerImpl()",1,1,1
"org.apache.tools.ant.taskdefs.ProcessDestroyer.ProcessDestroyerImpl.run()",1,2,2
"org.apache.tools.ant.taskdefs.ProcessDestroyer.ProcessDestroyerImpl.setShouldDestroy(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.ProcessDestroyer.add(Process)",1,2,2
"org.apache.tools.ant.taskdefs.ProcessDestroyer.addShutdownHook()",1,6,7
"org.apache.tools.ant.taskdefs.ProcessDestroyer.isAddedAsShutdownHook()",1,1,1
"org.apache.tools.ant.taskdefs.ProcessDestroyer.remove(Process)",1,3,3
"org.apache.tools.ant.taskdefs.ProcessDestroyer.removeShutdownHook()",1,7,10
"org.apache.tools.ant.taskdefs.ProcessDestroyer.run()",1,2,2
"org.apache.tools.ant.taskdefs.Property.Property()",1,1,1
"org.apache.tools.ant.taskdefs.Property.Property(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Property.Property(boolean,Project)",1,1,1
"org.apache.tools.ant.taskdefs.Property.addProperties(Properties)",1,2,3
"org.apache.tools.ant.taskdefs.Property.addProperty(String,String)",1,3,3
"org.apache.tools.ant.taskdefs.Property.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.Property.execute()",8,13,23
"org.apache.tools.ant.taskdefs.Property.getClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.Property.getEnvironment()",1,1,1
"org.apache.tools.ant.taskdefs.Property.getFile()",1,1,1
"org.apache.tools.ant.taskdefs.Property.getName()",1,1,1
"org.apache.tools.ant.taskdefs.Property.getPrefix()",1,1,1
"org.apache.tools.ant.taskdefs.Property.getRefid()",1,1,1
"org.apache.tools.ant.taskdefs.Property.getResource()",1,1,1
"org.apache.tools.ant.taskdefs.Property.getUrl()",1,1,1
"org.apache.tools.ant.taskdefs.Property.getValue()",1,1,1
"org.apache.tools.ant.taskdefs.Property.loadEnvironment(String)",1,3,4
"org.apache.tools.ant.taskdefs.Property.loadFile(File)",1,4,4
"org.apache.tools.ant.taskdefs.Property.loadResource(String)",1,6,7
"org.apache.tools.ant.taskdefs.Property.loadUrl(URL)",1,3,3
"org.apache.tools.ant.taskdefs.Property.resolve(Properties,String,Stack)",2,6,7
"org.apache.tools.ant.taskdefs.Property.resolveAllProperties(Properties)",1,2,2
"org.apache.tools.ant.taskdefs.Property.setClasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.Property.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.Property.setEnvironment(String)",1,1,1
"org.apache.tools.ant.taskdefs.Property.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Property.setLocation(File)",1,1,1
"org.apache.tools.ant.taskdefs.Property.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.Property.setPrefix(String)",1,1,2
"org.apache.tools.ant.taskdefs.Property.setRefid(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.Property.setResource(String)",1,1,1
"org.apache.tools.ant.taskdefs.Property.setUrl(URL)",1,1,1
"org.apache.tools.ant.taskdefs.Property.setUserProperty(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Property.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.Property.toString()",1,1,2
"org.apache.tools.ant.taskdefs.PumpStreamHandler.PumpStreamHandler()",1,1,1
"org.apache.tools.ant.taskdefs.PumpStreamHandler.PumpStreamHandler(OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.PumpStreamHandler.PumpStreamHandler(OutputStream,OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.PumpStreamHandler.PumpStreamHandler(OutputStream,OutputStream,InputStream)",1,1,1
"org.apache.tools.ant.taskdefs.PumpStreamHandler.createInputPump(InputStream,OutputStream,boolean)",1,1,1
"org.apache.tools.ant.taskdefs.PumpStreamHandler.createProcessErrorPump(InputStream,OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.PumpStreamHandler.createProcessOutputPump(InputStream,OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.PumpStreamHandler.createPump(InputStream,OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.PumpStreamHandler.createPump(InputStream,OutputStream,boolean)",1,1,1
"org.apache.tools.ant.taskdefs.PumpStreamHandler.getErr()",1,1,1
"org.apache.tools.ant.taskdefs.PumpStreamHandler.getOut()",1,1,1
"org.apache.tools.ant.taskdefs.PumpStreamHandler.setProcessErrorStream(InputStream)",1,2,2
"org.apache.tools.ant.taskdefs.PumpStreamHandler.setProcessInputStream(OutputStream)",1,2,3
"org.apache.tools.ant.taskdefs.PumpStreamHandler.setProcessOutputStream(InputStream)",1,1,1
"org.apache.tools.ant.taskdefs.PumpStreamHandler.start()",1,2,2
"org.apache.tools.ant.taskdefs.PumpStreamHandler.stop()",1,2,6
"org.apache.tools.ant.taskdefs.Recorder.ActionChoices.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Recorder.VerbosityLevelChoices.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Recorder.buildFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.Recorder.buildStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.Recorder.cleanup()",1,1,1
"org.apache.tools.ant.taskdefs.Recorder.execute()",2,3,4
"org.apache.tools.ant.taskdefs.Recorder.getRecorder(String,Project)",1,3,3
"org.apache.tools.ant.taskdefs.Recorder.init()",1,1,1
"org.apache.tools.ant.taskdefs.Recorder.messageLogged(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.Recorder.setAction(ActionChoices)",1,1,2
"org.apache.tools.ant.taskdefs.Recorder.setAppend(boolean)",1,1,2
"org.apache.tools.ant.taskdefs.Recorder.setEmacsMode(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Recorder.setLoglevel(VerbosityLevelChoices)",1,5,6
"org.apache.tools.ant.taskdefs.Recorder.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.Recorder.subBuildFinished(BuildEvent)",1,2,2
"org.apache.tools.ant.taskdefs.Recorder.subBuildStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.Recorder.targetFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.Recorder.targetStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.Recorder.taskFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.Recorder.taskStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.RecorderEntry.RecorderEntry(String)",1,1,1
"org.apache.tools.ant.taskdefs.RecorderEntry.buildFinished(BuildEvent)",1,3,4
"org.apache.tools.ant.taskdefs.RecorderEntry.buildStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.RecorderEntry.cleanup()",1,2,2
"org.apache.tools.ant.taskdefs.RecorderEntry.closeFile()",1,2,2
"org.apache.tools.ant.taskdefs.RecorderEntry.flush()",1,2,3
"org.apache.tools.ant.taskdefs.RecorderEntry.formatTime(long)",2,2,5
"org.apache.tools.ant.taskdefs.RecorderEntry.getFilename()",1,1,1
"org.apache.tools.ant.taskdefs.RecorderEntry.log(String,int)",1,2,4
"org.apache.tools.ant.taskdefs.RecorderEntry.messageLogged(BuildEvent)",1,4,4
"org.apache.tools.ant.taskdefs.RecorderEntry.openFile(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.RecorderEntry.openFileImpl(boolean)",2,1,3
"org.apache.tools.ant.taskdefs.RecorderEntry.reopenFile()",1,1,1
"org.apache.tools.ant.taskdefs.RecorderEntry.setEmacsMode(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.RecorderEntry.setErrorPrintStream(PrintStream)",1,1,1
"org.apache.tools.ant.taskdefs.RecorderEntry.setMessageOutputLevel(int)",1,1,3
"org.apache.tools.ant.taskdefs.RecorderEntry.setOutputPrintStream(PrintStream)",1,1,1
"org.apache.tools.ant.taskdefs.RecorderEntry.setProject(Project)",1,2,2
"org.apache.tools.ant.taskdefs.RecorderEntry.setRecordState(Boolean)",1,2,2
"org.apache.tools.ant.taskdefs.RecorderEntry.subBuildFinished(BuildEvent)",1,2,2
"org.apache.tools.ant.taskdefs.RecorderEntry.subBuildStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.RecorderEntry.targetFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.RecorderEntry.targetStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.RecorderEntry.taskFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.RecorderEntry.taskStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.PropertyOutputStream.PropertyOutputStream(String)",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.PropertyOutputStream.close()",1,2,4
"org.apache.tools.ant.taskdefs.Redirector.Redirector(ProjectComponent)",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.Redirector(Task)",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.complete()",1,4,7
"org.apache.tools.ant.taskdefs.Redirector.createHandler()",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.createStreams()",7,24,45
"org.apache.tools.ant.taskdefs.Redirector.foldFiles(File[],String,int)",1,2,2
"org.apache.tools.ant.taskdefs.Redirector.getErrorStream()",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.getInputStream()",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.getOutputStream()",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.handleErrorFlush(String)",1,1,2
"org.apache.tools.ant.taskdefs.Redirector.handleErrorOutput(String)",1,1,2
"org.apache.tools.ant.taskdefs.Redirector.handleFlush(String)",1,1,2
"org.apache.tools.ant.taskdefs.Redirector.handleInput(byte[],int,int)",2,2,2
"org.apache.tools.ant.taskdefs.Redirector.handleOutput(String)",1,1,2
"org.apache.tools.ant.taskdefs.Redirector.setAlwaysLog(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.setAppend(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.setAppendProperties(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.setCreateEmptyFiles(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.setError(File)",1,1,2
"org.apache.tools.ant.taskdefs.Redirector.setError(File[])",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.setErrorEncoding(String)",2,1,2
"org.apache.tools.ant.taskdefs.Redirector.setErrorFilterChains(Vector)",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.setErrorProperty(String)",1,2,3
"org.apache.tools.ant.taskdefs.Redirector.setInput(File)",1,1,2
"org.apache.tools.ant.taskdefs.Redirector.setInput(File[])",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.setInputEncoding(String)",2,1,2
"org.apache.tools.ant.taskdefs.Redirector.setInputFilterChains(Vector)",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.setInputStream(InputStream)",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.setInputString(String)",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.setLogError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.setLogInputString(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.setOutput(File)",1,1,2
"org.apache.tools.ant.taskdefs.Redirector.setOutput(File[])",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.setOutputEncoding(String)",2,1,2
"org.apache.tools.ant.taskdefs.Redirector.setOutputFilterChains(Vector)",1,1,1
"org.apache.tools.ant.taskdefs.Redirector.setOutputProperty(String)",1,2,3
"org.apache.tools.ant.taskdefs.Redirector.setProperties()",1,3,5
"org.apache.tools.ant.taskdefs.Redirector.setPropertyFromBAOS(ByteArrayOutputStream,String)",1,3,3
"org.apache.tools.ant.taskdefs.Rename.execute()",4,5,6
"org.apache.tools.ant.taskdefs.Rename.setDest(File)",1,1,1
"org.apache.tools.ant.taskdefs.Rename.setReplace(String)",1,1,1
"org.apache.tools.ant.taskdefs.Rename.setSrc(File)",1,1,1
"org.apache.tools.ant.taskdefs.Replace.FileInput.FileInput(File)",1,1,2
"org.apache.tools.ant.taskdefs.Replace.FileInput.close()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.FileInput.closeQuietly()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.FileInput.getOutputBuffer()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.FileInput.readChunk()",2,1,2
"org.apache.tools.ant.taskdefs.Replace.FileOutput.FileOutput(File)",1,1,2
"org.apache.tools.ant.taskdefs.Replace.FileOutput.close()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.FileOutput.closeQuietly()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.FileOutput.flush()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.FileOutput.process()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.FileOutput.setInputBuffer(StringBuffer)",1,1,1
"org.apache.tools.ant.taskdefs.Replace.NestedString.addText(String)",1,1,1
"org.apache.tools.ant.taskdefs.Replace.NestedString.getText()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.Replacefilter.flush()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.Replacefilter.getOutputBuffer()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.Replacefilter.getProperty()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.Replacefilter.getReplaceValue()",4,4,4
"org.apache.tools.ant.taskdefs.Replace.Replacefilter.getToken()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.Replacefilter.getValue()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.Replacefilter.process()",2,2,2
"org.apache.tools.ant.taskdefs.Replace.Replacefilter.replace()",1,2,2
"org.apache.tools.ant.taskdefs.Replace.Replacefilter.setInputBuffer(StringBuffer)",1,1,1
"org.apache.tools.ant.taskdefs.Replace.Replacefilter.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.Replace.Replacefilter.setToken(String)",1,1,1
"org.apache.tools.ant.taskdefs.Replace.Replacefilter.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.Replace.Replacefilter.validate()",7,4,9
"org.apache.tools.ant.taskdefs.Replace.buildFilterChain(StringBuffer)",1,2,2
"org.apache.tools.ant.taskdefs.Replace.createPrimaryfilter()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.createReplaceToken()",1,1,2
"org.apache.tools.ant.taskdefs.Replace.createReplaceValue()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.createReplacefilter()",1,1,1
"org.apache.tools.ant.taskdefs.Replace.execute()",1,10,10
"org.apache.tools.ant.taskdefs.Replace.flushFilterChain()",1,2,2
"org.apache.tools.ant.taskdefs.Replace.getProperties(File)",1,3,3
"org.apache.tools.ant.taskdefs.Replace.logFilterChain(String)",1,2,2
"org.apache.tools.ant.taskdefs.Replace.processFile(File)",2,10,10
"org.apache.tools.ant.taskdefs.Replace.processFilterChain()",3,2,3
"org.apache.tools.ant.taskdefs.Replace.setDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Replace.setEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.Replace.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Replace.setPropertyFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Replace.setReplaceFilterFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Replace.setSummary(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Replace.setToken(String)",1,1,1
"org.apache.tools.ant.taskdefs.Replace.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.Replace.stringReplace(StringBuffer,String,String)",1,2,2
"org.apache.tools.ant.taskdefs.Replace.validateAttributes()",5,8,9
"org.apache.tools.ant.taskdefs.Replace.validateReplacefilters()",1,2,2
"org.apache.tools.ant.taskdefs.ResourceCount.add(ResourceCollection)",2,1,2
"org.apache.tools.ant.taskdefs.ResourceCount.eval()",3,1,3
"org.apache.tools.ant.taskdefs.ResourceCount.execute()",2,2,3
"org.apache.tools.ant.taskdefs.ResourceCount.setCount(int)",1,1,1
"org.apache.tools.ant.taskdefs.ResourceCount.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.ResourceCount.setRefid(Reference)",2,2,2
"org.apache.tools.ant.taskdefs.ResourceCount.setWhen(Comparison)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.ImplementationSpecificArgument.setCompiler(String)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.Rmic()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.Rmic.createCompilerArg()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.createExtdirs()",1,2,2
"org.apache.tools.ant.taskdefs.Rmic.execute()",6,13,14
"org.apache.tools.ant.taskdefs.Rmic.getBase()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getClassname()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getCompileList()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getCompiler()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getCurrentCompilerArgs()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getDebug()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getExtdirs()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getFileList()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getFiltering()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getIdl()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getIdlopts()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getIiop()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getIiopopts()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getIncludeantruntime()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getIncludejavaruntime()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getLoader()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getRemoteInterface(Class)",5,4,5
"org.apache.tools.ant.taskdefs.Rmic.getSourceBase()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getStubVersion()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.getVerify()",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.isValidRmiRemote(Class)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.isValidRmiRemote(String)",2,6,7
"org.apache.tools.ant.taskdefs.Rmic.moveGeneratedFile(File,File,String,RmicAdapter)",4,4,6
"org.apache.tools.ant.taskdefs.Rmic.scanDir(File,String[],FileNameMapper)",1,6,6
"org.apache.tools.ant.taskdefs.Rmic.setBase(File)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.setClassname(String)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.setClasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.Rmic.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.setCompiler(String)",1,2,2
"org.apache.tools.ant.taskdefs.Rmic.setDebug(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.setExtdirs(Path)",1,2,2
"org.apache.tools.ant.taskdefs.Rmic.setFiltering(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.setIdl(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.setIdlopts(String)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.setIiop(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.setIiopopts(String)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.setIncludeantruntime(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.setIncludejavaruntime(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.setSourceBase(File)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.setStubVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.Rmic.setVerify(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.DelimiterType.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.OnError.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.Transaction.addConfigured(ResourceCollection)",2,1,2
"org.apache.tools.ant.taskdefs.SQLExec.Transaction.addText(String)",1,3,3
"org.apache.tools.ant.taskdefs.SQLExec.Transaction.runTransaction(PrintStream)",1,3,4
"org.apache.tools.ant.taskdefs.SQLExec.Transaction.setSrc(File)",1,2,2
"org.apache.tools.ant.taskdefs.SQLExec.Transaction.setSrcResource(Resource)",2,1,2
"org.apache.tools.ant.taskdefs.SQLExec.add(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.addText(String)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.closeQuietly()",1,4,5
"org.apache.tools.ant.taskdefs.SQLExec.createTransaction()",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.execSQL(String,PrintStream)",3,9,13
"org.apache.tools.ant.taskdefs.SQLExec.execute()",5,16,19
"org.apache.tools.ant.taskdefs.SQLExec.getExpandProperties()",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.printResults(PrintStream)",1,2,2
"org.apache.tools.ant.taskdefs.SQLExec.printResults(ResultSet,PrintStream)",1,8,8
"org.apache.tools.ant.taskdefs.SQLExec.runStatements(Reader,PrintStream)",7,13,16
"org.apache.tools.ant.taskdefs.SQLExec.setAppend(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.setDelimiter(String)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.setDelimiterType(DelimiterType)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.setEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.setEscapeProcessing(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.setExpandProperties(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.setKeepformat(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.setOnerror(OnError)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.setOutput(File)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.setPrint(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.setShowheaders(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.setShowtrailers(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.SQLExec.setSrc(File)",1,1,1
"org.apache.tools.ant.taskdefs.SendEmail.setMailport(Integer)",1,1,1
"org.apache.tools.ant.taskdefs.Sequential.addTask(Task)",1,1,1
"org.apache.tools.ant.taskdefs.Sequential.execute()",1,2,2
"org.apache.tools.ant.taskdefs.SignJar.add(FileNameMapper)",2,1,2
"org.apache.tools.ant.taskdefs.SignJar.addTimestampAuthorityCommands(ExecTask)",1,3,3
"org.apache.tools.ant.taskdefs.SignJar.execute()",10,7,18
"org.apache.tools.ant.taskdefs.SignJar.getMapper()",1,1,1
"org.apache.tools.ant.taskdefs.SignJar.getTsacert()",1,1,1
"org.apache.tools.ant.taskdefs.SignJar.getTsaurl()",1,1,1
"org.apache.tools.ant.taskdefs.SignJar.isSigned(File)",1,2,2
"org.apache.tools.ant.taskdefs.SignJar.isUpToDate(File,File)",4,4,6
"org.apache.tools.ant.taskdefs.SignJar.setDestDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.SignJar.setInternalsf(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.SignJar.setLazy(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.SignJar.setPreserveLastModified(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.SignJar.setSectionsonly(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.SignJar.setSigfile(String)",1,1,1
"org.apache.tools.ant.taskdefs.SignJar.setSignedjar(File)",1,1,1
"org.apache.tools.ant.taskdefs.SignJar.setTsacert(String)",1,1,1
"org.apache.tools.ant.taskdefs.SignJar.setTsaurl(String)",1,1,1
"org.apache.tools.ant.taskdefs.SignJar.signOneJar(File,File)",2,7,9
"org.apache.tools.ant.taskdefs.Sleep.Sleep()",1,1,1
"org.apache.tools.ant.taskdefs.Sleep.doSleep(long)",1,1,2
"org.apache.tools.ant.taskdefs.Sleep.execute()",2,3,3
"org.apache.tools.ant.taskdefs.Sleep.getSleepTime()",1,1,1
"org.apache.tools.ant.taskdefs.Sleep.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Sleep.setHours(int)",1,1,1
"org.apache.tools.ant.taskdefs.Sleep.setMilliseconds(int)",1,1,1
"org.apache.tools.ant.taskdefs.Sleep.setMinutes(int)",1,1,1
"org.apache.tools.ant.taskdefs.Sleep.setSeconds(int)",1,1,1
"org.apache.tools.ant.taskdefs.Sleep.validate()",2,1,2
"org.apache.tools.ant.taskdefs.StreamPumper.StreamPumper(InputStream,OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.StreamPumper.StreamPumper(InputStream,OutputStream,boolean)",1,1,1
"org.apache.tools.ant.taskdefs.StreamPumper.getBufferSize()",1,1,1
"org.apache.tools.ant.taskdefs.StreamPumper.getException()",1,1,1
"org.apache.tools.ant.taskdefs.StreamPumper.isFinished()",1,1,1
"org.apache.tools.ant.taskdefs.StreamPumper.run()",1,5,7
"org.apache.tools.ant.taskdefs.StreamPumper.setAutoflush(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.StreamPumper.setBufferSize(int)",2,1,2
"org.apache.tools.ant.taskdefs.StreamPumper.stop()",1,1,1
"org.apache.tools.ant.taskdefs.StreamPumper.waitFor()",1,2,2
"org.apache.tools.ant.taskdefs.SubAnt.add(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.addDirset(DirSet)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.addFilelist(FileList)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.addProperty(Property)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.addPropertyset(PropertySet)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.addReference(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.copyProperty(Property,Property)",1,8,8
"org.apache.tools.ant.taskdefs.SubAnt.createAntTask(File)",1,8,8
"org.apache.tools.ant.taskdefs.SubAnt.createBuildpath()",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.createBuildpathElement()",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.execute()",7,15,24
"org.apache.tools.ant.taskdefs.SubAnt.execute(File,File)",5,6,9
"org.apache.tools.ant.taskdefs.SubAnt.getBuildpath()",1,2,2
"org.apache.tools.ant.taskdefs.SubAnt.handleErrorFlush(String)",1,2,2
"org.apache.tools.ant.taskdefs.SubAnt.handleErrorOutput(String)",1,2,2
"org.apache.tools.ant.taskdefs.SubAnt.handleFlush(String)",1,2,2
"org.apache.tools.ant.taskdefs.SubAnt.handleInput(byte[],int,int)",2,2,2
"org.apache.tools.ant.taskdefs.SubAnt.handleOutput(String)",1,2,2
"org.apache.tools.ant.taskdefs.SubAnt.setAntfile(String)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.setBuildpath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.setBuildpathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.setFailonerror(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.setGenericAntfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.setInheritall(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.setInheritrefs(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.setOutput(String)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.setTarget(String)",1,1,1
"org.apache.tools.ant.taskdefs.SubAnt.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Sync.MyCopy.MyCopy()",1,1,1
"org.apache.tools.ant.taskdefs.Sync.MyCopy.getIncludeEmptyDirs()",1,1,1
"org.apache.tools.ant.taskdefs.Sync.MyCopy.getToDir()",1,1,1
"org.apache.tools.ant.taskdefs.Sync.MyCopy.scan(File,File,String[],String[])",1,3,3
"org.apache.tools.ant.taskdefs.Sync.MyCopy.scan(Resource[],File)",1,2,2
"org.apache.tools.ant.taskdefs.Sync.MyCopy.supportsNonFileResources()",1,1,1
"org.apache.tools.ant.taskdefs.Sync.SyncTarget.SyncTarget()",1,1,1
"org.apache.tools.ant.taskdefs.Sync.SyncTarget.setDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Sync.add(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.Sync.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Sync.addPreserveInTarget(SyncTarget)",2,1,2
"org.apache.tools.ant.taskdefs.Sync.assertTrue(String,boolean)",2,1,2
"org.apache.tools.ant.taskdefs.Sync.configureTask(Task)",1,1,1
"org.apache.tools.ant.taskdefs.Sync.execute()",2,4,4
"org.apache.tools.ant.taskdefs.Sync.init()",1,1,1
"org.apache.tools.ant.taskdefs.Sync.logRemovedCount(int,String,String,String)",1,2,4
"org.apache.tools.ant.taskdefs.Sync.removeEmptyDirectories(File,boolean)",1,6,7
"org.apache.tools.ant.taskdefs.Sync.removeOrphanFiles(Set,File)",1,7,7
"org.apache.tools.ant.taskdefs.Sync.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Sync.setGranularity(long)",1,1,1
"org.apache.tools.ant.taskdefs.Sync.setIncludeEmptyDirs(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Sync.setOverwrite(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Sync.setTodir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Sync.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Tar.TarCompressionMethod.TarCompressionMethod()",1,1,1
"org.apache.tools.ant.taskdefs.Tar.TarCompressionMethod.compress(OutputStream)",3,3,3
"org.apache.tools.ant.taskdefs.Tar.TarCompressionMethod.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Tar.TarFileSet.TarFileSet()",1,1,1
"org.apache.tools.ant.taskdefs.Tar.TarFileSet.TarFileSet(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Tar.TarFileSet.getFiles(Project)",1,2,2
"org.apache.tools.ant.taskdefs.Tar.TarFileSet.getMode()",1,1,1
"org.apache.tools.ant.taskdefs.Tar.TarFileSet.getPreserveLeadingSlashes()",1,1,1
"org.apache.tools.ant.taskdefs.Tar.TarFileSet.setMode(String)",1,1,1
"org.apache.tools.ant.taskdefs.Tar.TarFileSet.setPreserveLeadingSlashes(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Tar.TarLongFileMode.TarLongFileMode()",1,1,1
"org.apache.tools.ant.taskdefs.Tar.TarLongFileMode.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Tar.TarLongFileMode.isFailMode()",1,1,1
"org.apache.tools.ant.taskdefs.Tar.TarLongFileMode.isGnuMode()",1,1,1
"org.apache.tools.ant.taskdefs.Tar.TarLongFileMode.isOmitMode()",1,1,1
"org.apache.tools.ant.taskdefs.Tar.TarLongFileMode.isTruncateMode()",1,1,1
"org.apache.tools.ant.taskdefs.Tar.TarLongFileMode.isWarnMode()",1,1,1
"org.apache.tools.ant.taskdefs.Tar.add(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.Tar.archiveIsUpToDate(Resource)",1,1,1
"org.apache.tools.ant.taskdefs.Tar.archiveIsUpToDate(String[])",1,1,1
"org.apache.tools.ant.taskdefs.Tar.archiveIsUpToDate(String[],File)",1,1,1
"org.apache.tools.ant.taskdefs.Tar.asTarFileSet(ArchiveFileSet)",1,10,11
"org.apache.tools.ant.taskdefs.Tar.check(File,String[])",3,3,4
"org.apache.tools.ant.taskdefs.Tar.check(ResourceCollection)",3,10,12
"org.apache.tools.ant.taskdefs.Tar.createTarFileSet()",1,1,1
"org.apache.tools.ant.taskdefs.Tar.execute()",8,19,19
"org.apache.tools.ant.taskdefs.Tar.getFileNames(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Tar.isFileFileSet(ResourceCollection)",1,2,2
"org.apache.tools.ant.taskdefs.Tar.setBasedir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Tar.setCompression(TarCompressionMethod)",1,1,1
"org.apache.tools.ant.taskdefs.Tar.setDestFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Tar.setLongfile(String)",1,1,1
"org.apache.tools.ant.taskdefs.Tar.setLongfile(TarLongFileMode)",1,1,1
"org.apache.tools.ant.taskdefs.Tar.setTarfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Tar.supportsNonFileResources()",1,1,1
"org.apache.tools.ant.taskdefs.Tar.tar(ResourceCollection,TarOutputStream)",2,9,11
"org.apache.tools.ant.taskdefs.Tar.tarFile(File,TarOutputStream,String,TarFileSet)",2,1,2
"org.apache.tools.ant.taskdefs.Tar.tarResource(Resource,TarOutputStream,String,TarFileSet)",13,26,32
"org.apache.tools.ant.taskdefs.TaskOutputStream.TaskOutputStream(Task,int)",1,1,1
"org.apache.tools.ant.taskdefs.TaskOutputStream.processLine()",1,1,1
"org.apache.tools.ant.taskdefs.TaskOutputStream.write(int)",1,3,4
"org.apache.tools.ant.taskdefs.Taskdef.Taskdef()",1,1,1
"org.apache.tools.ant.taskdefs.TempFile.execute()",2,3,4
"org.apache.tools.ant.taskdefs.TempFile.setDestDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.TempFile.setPrefix(String)",1,1,1
"org.apache.tools.ant.taskdefs.TempFile.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.TempFile.setSuffix(String)",1,1,1
"org.apache.tools.ant.taskdefs.Touch.Touch()",1,1,1
"org.apache.tools.ant.taskdefs.Touch.add(FileNameMapper)",2,2,2
"org.apache.tools.ant.taskdefs.Touch.add(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.Touch.addConfiguredMapper(Mapper)",1,1,1
"org.apache.tools.ant.taskdefs.Touch.addFilelist(FileList)",1,1,1
"org.apache.tools.ant.taskdefs.Touch.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Touch.checkConfiguration()",6,8,14
"org.apache.tools.ant.taskdefs.Touch.execute()",1,1,1
"org.apache.tools.ant.taskdefs.Touch.getTimestamp()",1,2,2
"org.apache.tools.ant.taskdefs.Touch.setDatetime(String)",1,2,2
"org.apache.tools.ant.taskdefs.Touch.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Touch.setMillis(long)",1,1,1
"org.apache.tools.ant.taskdefs.Touch.setMkdirs(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Touch.setPattern(String)",1,1,1
"org.apache.tools.ant.taskdefs.Touch.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Touch.touch()",3,5,6
"org.apache.tools.ant.taskdefs.Touch.touch(File)",1,1,1
"org.apache.tools.ant.taskdefs.Touch.touch(File,long)",3,3,5
"org.apache.tools.ant.taskdefs.Touch.touch(Resource,long)",1,6,7
"org.apache.tools.ant.taskdefs.Tstamp.CustomFormat.CustomFormat()",1,1,1
"org.apache.tools.ant.taskdefs.Tstamp.CustomFormat.execute(Project,Date,Location)",3,3,7
"org.apache.tools.ant.taskdefs.Tstamp.CustomFormat.setLocale(String)",4,5,5
"org.apache.tools.ant.taskdefs.Tstamp.CustomFormat.setOffset(int)",1,1,1
"org.apache.tools.ant.taskdefs.Tstamp.CustomFormat.setPattern(String)",1,1,1
"org.apache.tools.ant.taskdefs.Tstamp.CustomFormat.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.Tstamp.CustomFormat.setTimezone(String)",1,1,1
"org.apache.tools.ant.taskdefs.Tstamp.CustomFormat.setUnit(String)",1,1,1
"org.apache.tools.ant.taskdefs.Tstamp.CustomFormat.setUnit(Unit)",1,1,1
"org.apache.tools.ant.taskdefs.Tstamp.Unit.Unit()",1,1,1
"org.apache.tools.ant.taskdefs.Tstamp.Unit.getCalendarField()",1,1,1
"org.apache.tools.ant.taskdefs.Tstamp.Unit.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Tstamp.createFormat()",1,1,1
"org.apache.tools.ant.taskdefs.Tstamp.execute()",1,2,3
"org.apache.tools.ant.taskdefs.Tstamp.setPrefix(String)",1,1,2
"org.apache.tools.ant.taskdefs.Tstamp.setProperty(String,String)",1,1,1
"org.apache.tools.ant.taskdefs.Unpack.addConfigured(ResourceCollection)",2,1,2
"org.apache.tools.ant.taskdefs.Unpack.createDestFile(String)",1,4,4
"org.apache.tools.ant.taskdefs.Unpack.execute()",1,1,1
"org.apache.tools.ant.taskdefs.Unpack.setDest(File)",1,1,1
"org.apache.tools.ant.taskdefs.Unpack.setDest(String)",1,1,1
"org.apache.tools.ant.taskdefs.Unpack.setSrc(File)",1,1,1
"org.apache.tools.ant.taskdefs.Unpack.setSrc(String)",1,1,1
"org.apache.tools.ant.taskdefs.Unpack.setSrcResource(Resource)",5,2,5
"org.apache.tools.ant.taskdefs.Unpack.supportsNonFileResources()",1,1,1
"org.apache.tools.ant.taskdefs.Unpack.validate()",2,4,4
"org.apache.tools.ant.taskdefs.Untar.UntarCompressionMethod.UntarCompressionMethod()",1,1,1
"org.apache.tools.ant.taskdefs.Untar.UntarCompressionMethod.decompress(String,InputStream)",5,4,5
"org.apache.tools.ant.taskdefs.Untar.UntarCompressionMethod.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Untar.expandFile(FileUtils,File,File)",1,2,2
"org.apache.tools.ant.taskdefs.Untar.expandResource(Resource,File)",1,2,2
"org.apache.tools.ant.taskdefs.Untar.expandStream(String,InputStream,File)",1,2,2
"org.apache.tools.ant.taskdefs.Untar.setCompression(UntarCompressionMethod)",1,1,1
"org.apache.tools.ant.taskdefs.Untar.setEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.UpToDate.add(FileNameMapper)",1,1,1
"org.apache.tools.ant.taskdefs.UpToDate.addSrcfiles(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.UpToDate.createMapper()",2,2,2
"org.apache.tools.ant.taskdefs.UpToDate.createSrcResources()",1,1,1
"org.apache.tools.ant.taskdefs.UpToDate.eval()",6,18,22
"org.apache.tools.ant.taskdefs.UpToDate.execute()",2,4,4
"org.apache.tools.ant.taskdefs.UpToDate.getMapper()",1,2,2
"org.apache.tools.ant.taskdefs.UpToDate.getValue()",1,1,2
"org.apache.tools.ant.taskdefs.UpToDate.scanDir(File,String[])",1,1,2
"org.apache.tools.ant.taskdefs.UpToDate.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.UpToDate.setSrcfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.UpToDate.setTargetFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.UpToDate.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.VerifyJar.BufferingOutputFilter.chain(Reader)",1,1,1
"org.apache.tools.ant.taskdefs.VerifyJar.BufferingOutputFilter.clear()",1,2,2
"org.apache.tools.ant.taskdefs.VerifyJar.BufferingOutputFilter.toString()",1,1,1
"org.apache.tools.ant.taskdefs.VerifyJar.BufferingOutputFilterReader.BufferingOutputFilterReader(Reader)",1,1,1
"org.apache.tools.ant.taskdefs.VerifyJar.BufferingOutputFilterReader.clear()",1,1,1
"org.apache.tools.ant.taskdefs.VerifyJar.BufferingOutputFilterReader.close()",1,1,1
"org.apache.tools.ant.taskdefs.VerifyJar.BufferingOutputFilterReader.read(char[],int,int)",1,1,1
"org.apache.tools.ant.taskdefs.VerifyJar.BufferingOutputFilterReader.toString()",1,1,1
"org.apache.tools.ant.taskdefs.VerifyJar.execute()",2,3,4
"org.apache.tools.ant.taskdefs.VerifyJar.setCertificates(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.VerifyJar.verifyOneJar(File)",5,4,7
"org.apache.tools.ant.taskdefs.WaitFor.Unit.Unit()",1,1,1
"org.apache.tools.ant.taskdefs.WaitFor.Unit.getMultiplier()",1,1,1
"org.apache.tools.ant.taskdefs.WaitFor.Unit.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.WaitFor.WaitFor()",1,1,1
"org.apache.tools.ant.taskdefs.WaitFor.execute()",5,5,6
"org.apache.tools.ant.taskdefs.WaitFor.processSuccess()",1,1,1
"org.apache.tools.ant.taskdefs.WaitFor.processTimeout()",1,2,2
"org.apache.tools.ant.taskdefs.WaitFor.setCheckEvery(long)",1,1,1
"org.apache.tools.ant.taskdefs.WaitFor.setCheckEveryUnit(Unit)",1,1,1
"org.apache.tools.ant.taskdefs.WaitFor.setMaxWait(long)",1,1,1
"org.apache.tools.ant.taskdefs.WaitFor.setMaxWaitUnit(Unit)",1,1,1
"org.apache.tools.ant.taskdefs.WaitFor.setTimeoutProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.War.War()",1,1,1
"org.apache.tools.ant.taskdefs.War.addClasses(ZipFileSet)",1,1,1
"org.apache.tools.ant.taskdefs.War.addLib(ZipFileSet)",1,1,1
"org.apache.tools.ant.taskdefs.War.addWebinf(ZipFileSet)",1,1,1
"org.apache.tools.ant.taskdefs.War.cleanUp()",1,1,1
"org.apache.tools.ant.taskdefs.War.initZipOutputStream(ZipOutputStream)",2,3,3
"org.apache.tools.ant.taskdefs.War.setWarfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.War.setWebxml(File)",2,1,2
"org.apache.tools.ant.taskdefs.War.zipFile(File,ZipOutputStream,String,int)",1,5,5
"org.apache.tools.ant.taskdefs.WhichResource.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.WhichResource.execute()",2,5,6
"org.apache.tools.ant.taskdefs.WhichResource.setClass(String)",1,1,1
"org.apache.tools.ant.taskdefs.WhichResource.setClasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.WhichResource.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.WhichResource.setResource(String)",1,1,1
"org.apache.tools.ant.taskdefs.WhichResource.validate()",4,1,6
"org.apache.tools.ant.taskdefs.XSLTProcess.Factory.Attribute.createDynamicElement(String)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.Factory.Attribute.getName()",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.Factory.Attribute.getValue()",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.Factory.Attribute.setDynamicAttribute(String,String)",3,4,6
"org.apache.tools.ant.taskdefs.XSLTProcess.Factory.addAttribute(Attribute)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.Factory.getAttributes()",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.Factory.getName()",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.Factory.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.OutputProperty.getName()",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.OutputProperty.getValue()",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.OutputProperty.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.OutputProperty.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.Param.getExpression()",2,1,2
"org.apache.tools.ant.taskdefs.XSLTProcess.Param.getName()",2,1,2
"org.apache.tools.ant.taskdefs.XSLTProcess.Param.setExpression(String)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.Param.setIf(String)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.Param.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.Param.setProject(Project)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.Param.setUnless(String)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.Param.shouldUse()",3,4,5
"org.apache.tools.ant.taskdefs.XSLTProcess.StyleMapper.mapFileName(String)",1,2,2
"org.apache.tools.ant.taskdefs.XSLTProcess.StyleMapper.setFrom(String)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.StyleMapper.setTo(String)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.XSLTProcess()",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.add(FileNameMapper)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.add(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.addConfigured(Resource)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.addConfiguredXMLCatalog(XMLCatalog)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.addMapper(Mapper)",2,2,2
"org.apache.tools.ant.taskdefs.XSLTProcess.checkDest()",2,1,2
"org.apache.tools.ant.taskdefs.XSLTProcess.configureLiaison(File)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.configureLiaison(Resource)",4,7,9
"org.apache.tools.ant.taskdefs.XSLTProcess.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.XSLTProcess.createFactory()",2,1,2
"org.apache.tools.ant.taskdefs.XSLTProcess.createOutputProperty()",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.createParam()",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.ensureDirectoryFor(File)",3,3,3
"org.apache.tools.ant.taskdefs.XSLTProcess.execute()",7,18,22
"org.apache.tools.ant.taskdefs.XSLTProcess.getFactory()",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.getLiaison()",3,5,6
"org.apache.tools.ant.taskdefs.XSLTProcess.getOutputProperties()",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.getXMLCatalog()",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.init()",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.loadClass(String)",2,2,2
"org.apache.tools.ant.taskdefs.XSLTProcess.process(File,File,Resource)",1,6,6
"org.apache.tools.ant.taskdefs.XSLTProcess.process(File,String,File,Resource)",4,10,12
"org.apache.tools.ant.taskdefs.XSLTProcess.processResources(Resource)",3,4,5
"org.apache.tools.ant.taskdefs.XSLTProcess.resolveProcessor(String)",1,3,3
"org.apache.tools.ant.taskdefs.XSLTProcess.setBasedir(File)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.setClasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.setDestdir(File)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.setExtension(String)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.setForce(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.setIn(File)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.setOut(File)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.setProcessor(String)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.setReloadStylesheet(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.setScanIncludedDirectories(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.setStyle(String)",1,1,1
"org.apache.tools.ant.taskdefs.XSLTProcess.setUseImplicitFileset(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.XmlProperty()",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.addConfigured(ResourceCollection)",2,1,2
"org.apache.tools.ant.taskdefs.XmlProperty.addConfiguredXMLCatalog(XMLCatalog)",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.addNodeRecursively(Node,String)",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.addNodeRecursively(Node,String,Object)",1,4,5
"org.apache.tools.ant.taskdefs.XmlProperty.addProperty(String,String,String)",1,3,4
"org.apache.tools.ant.taskdefs.XmlProperty.execute()",2,7,10
"org.apache.tools.ant.taskdefs.XmlProperty.getAttributeName(Node)",5,4,6
"org.apache.tools.ant.taskdefs.XmlProperty.getAttributeValue(Node)",5,5,5
"org.apache.tools.ant.taskdefs.XmlProperty.getCollapseAttributes()",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.getEntityResolver()",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.getFile()",2,2,2
"org.apache.tools.ant.taskdefs.XmlProperty.getIncludeSementicAttribute()",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.getKeeproot()",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.getPrefix()",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.getResource()",2,1,2
"org.apache.tools.ant.taskdefs.XmlProperty.getRootDirectory()",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.getSemanticAttributes()",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.getValidate()",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.init()",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.isSemanticAttribute(String)",3,2,3
"org.apache.tools.ant.taskdefs.XmlProperty.processNode(Node,String,Object)",10,19,27
"org.apache.tools.ant.taskdefs.XmlProperty.resolveFile(String)",2,2,2
"org.apache.tools.ant.taskdefs.XmlProperty.setCollapseAttributes(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.setIncludeSemanticAttribute(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.setKeeproot(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.setPrefix(String)",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.setRootDirectory(File)",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.setSemanticAttributes(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.setSrcResource(Resource)",3,2,4
"org.apache.tools.ant.taskdefs.XmlProperty.setValidate(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.XmlProperty.supportsNonFileResources()",1,1,1
"org.apache.tools.ant.taskdefs.Zip.ArchiveState.ArchiveState(boolean,Resource[][])",1,1,1
"org.apache.tools.ant.taskdefs.Zip.ArchiveState.getResourcesToAdd()",1,1,1
"org.apache.tools.ant.taskdefs.Zip.ArchiveState.isOutOfDate()",1,1,1
"org.apache.tools.ant.taskdefs.Zip.ArchiveState.isWithoutAnyResources()",5,1,5
"org.apache.tools.ant.taskdefs.Zip.Duplicate.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Zip.WhenEmpty.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.Zip.add(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.addParentDirs(File,String,ZipOutputStream,String,int)",4,4,6
"org.apache.tools.ant.taskdefs.Zip.addResources(FileSet,Resource[],ZipOutputStream)",5,27,32
"org.apache.tools.ant.taskdefs.Zip.addResources(ResourceCollection,Resource[],ZipOutputStream)",5,8,11
"org.apache.tools.ant.taskdefs.Zip.addZipGroupFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.addZipfileset(ZipFileSet)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.cleanUp()",1,2,2
"org.apache.tools.ant.taskdefs.Zip.createEmptyZip(File)",1,3,4
"org.apache.tools.ant.taskdefs.Zip.execute()",1,2,2
"org.apache.tools.ant.taskdefs.Zip.executeMain()",9,33,45
"org.apache.tools.ant.taskdefs.Zip.finalizeZipOutputStream(ZipOutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.Zip.getDestFile()",1,1,1
"org.apache.tools.ant.taskdefs.Zip.getEncoding()",1,1,1
"org.apache.tools.ant.taskdefs.Zip.getLevel()",1,1,1
"org.apache.tools.ant.taskdefs.Zip.getNonFileSetResourcesToAdd(ResourceCollection[],File,boolean)",10,6,16
"org.apache.tools.ant.taskdefs.Zip.getResourcesToAdd(FileSet[],File,boolean)",15,18,31
"org.apache.tools.ant.taskdefs.Zip.getResourcesToAdd(ResourceCollection[],File,boolean)",1,7,7
"org.apache.tools.ant.taskdefs.Zip.getZipScanner()",1,2,2
"org.apache.tools.ant.taskdefs.Zip.grabNonFileSetResources(ResourceCollection[])",1,5,5
"org.apache.tools.ant.taskdefs.Zip.grabResources(FileSet[])",1,11,11
"org.apache.tools.ant.taskdefs.Zip.initZipOutputStream(ZipOutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.isAddingNewFiles()",1,1,1
"org.apache.tools.ant.taskdefs.Zip.isCompress()",1,1,1
"org.apache.tools.ant.taskdefs.Zip.isEmpty(Resource[][])",3,1,3
"org.apache.tools.ant.taskdefs.Zip.isInUpdateMode()",1,1,1
"org.apache.tools.ant.taskdefs.Zip.reset()",1,1,1
"org.apache.tools.ant.taskdefs.Zip.selectFileResources(Resource[])",3,4,5
"org.apache.tools.ant.taskdefs.Zip.setBasedir(File)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.setCompress(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.setDestFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.setDuplicate(Duplicate)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.setEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.setFilesonly(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.setKeepCompression(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.setLevel(int)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.setRoundUp(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.setUpdate(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.setWhenempty(WhenEmpty)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.setZipfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.zipDir(File,ZipOutputStream,String,int)",1,1,1
"org.apache.tools.ant.taskdefs.Zip.zipDir(File,ZipOutputStream,String,int,ZipExtraField[])",2,5,8
"org.apache.tools.ant.taskdefs.Zip.zipFile(File,ZipOutputStream,String,int)",2,2,3
"org.apache.tools.ant.taskdefs.Zip.zipFile(InputStream,ZipOutputStream,String,long,File,int)",4,12,13
"org.apache.tools.ant.taskdefs.compilers.AptCompilerAdapter.execute()",1,1,3
"org.apache.tools.ant.taskdefs.compilers.AptCompilerAdapter.getApt()",1,1,1
"org.apache.tools.ant.taskdefs.compilers.AptCompilerAdapter.setAptCommandlineSwitches(Apt,Commandline)",1,7,7
"org.apache.tools.ant.taskdefs.compilers.AptCompilerAdapter.setAptCommandlineSwitches(Commandline)",1,1,1
"org.apache.tools.ant.taskdefs.compilers.AptExternalCompilerAdapter.execute()",1,1,1
"org.apache.tools.ant.taskdefs.compilers.AptExternalCompilerAdapter.getApt()",1,1,1
"org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory.CompilerAdapterFactory()",1,1,1
"org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory.doesModernCompilerExist()",2,3,4
"org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory.getCompiler(String,Task)",12,15,22
"org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory.resolveClassName(String)",1,1,1
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.addCurrentCompilerArgs(Commandline)",1,1,1
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.addExtdirsToClasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.assumeJava11()",1,1,1
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.assumeJava12()",1,5,5
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.assumeJava13()",1,7,7
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.assumeJava14()",1,7,7
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.assumeJava15()",1,7,7
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.assumeJava16()",1,7,7
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.executeExternalCompile(String[],int)",1,1,1
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.executeExternalCompile(String[],int,boolean)",2,8,10
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.getBootClassPath()",1,2,2
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.getCompileClasspath()",1,4,5
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.getJavac()",1,1,1
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.getNoDebugArgument()",1,1,2
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.getProject()",1,1,1
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.logAndAddFilesToCompile(Commandline)",1,3,3
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.setJavac(Javac)",1,1,1
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.setupJavacCommand()",1,1,1
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.setupJavacCommand(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.setupJavacCommandlineSwitches(Commandline)",1,1,1
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.setupJavacCommandlineSwitches(Commandline,boolean)",1,27,29
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.setupModernJavacCommand()",1,1,1
"org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter.setupModernJavacCommandlineSwitches(Commandline)",1,14,15
"org.apache.tools.ant.taskdefs.compilers.Gcj.execute()",1,1,1
"org.apache.tools.ant.taskdefs.compilers.Gcj.isNativeBuild()",1,3,5
"org.apache.tools.ant.taskdefs.compilers.Gcj.setupGCJCommand()",3,9,11
"org.apache.tools.ant.taskdefs.compilers.Javac12.execute()",2,1,5
"org.apache.tools.ant.taskdefs.compilers.Javac13.execute()",2,1,3
"org.apache.tools.ant.taskdefs.compilers.JavacExternal.execOnVMS(Commandline,int)",1,1,2
"org.apache.tools.ant.taskdefs.compilers.JavacExternal.execute()",2,5,5
"org.apache.tools.ant.taskdefs.compilers.Jikes.execute()",1,28,31
"org.apache.tools.ant.taskdefs.compilers.Jvc.execute()",1,10,11
"org.apache.tools.ant.taskdefs.compilers.Kjc.execute()",1,1,1
"org.apache.tools.ant.taskdefs.compilers.Kjc.setupKjcCommand()",1,10,10
"org.apache.tools.ant.taskdefs.compilers.Sj.execute()",1,1,2
"org.apache.tools.ant.taskdefs.compilers.Sj.getNoDebugArgument()",1,1,1
"org.apache.tools.ant.taskdefs.condition.And.eval()",3,2,3
"org.apache.tools.ant.taskdefs.condition.AntVersion.eval()",5,3,5
"org.apache.tools.ant.taskdefs.condition.AntVersion.getAtLeast()",1,1,1
"org.apache.tools.ant.taskdefs.condition.AntVersion.getExactly()",1,1,1
"org.apache.tools.ant.taskdefs.condition.AntVersion.getVersion()",3,2,3
"org.apache.tools.ant.taskdefs.condition.AntVersion.setAtLeast(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.AntVersion.setExactly(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.AntVersion.validate()",3,1,5
"org.apache.tools.ant.taskdefs.condition.ConditionBase.ConditionBase()",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.ConditionBase(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.add(Condition)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addAnd(And)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addAntVersion(AntVersion)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addAvailable(Available)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addChecksum(Checksum)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addContains(Contains)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addEquals(Equals)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addFilesMatch(FilesMatch)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addHttp(Http)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addIsFailure(IsFailure)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addIsFalse(IsFalse)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addIsFileSelected(IsFileSelected)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addIsReachable(IsReachable)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addIsReference(IsReference)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addIsSet(IsSet)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addIsSigned(IsSigned)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addIsTrue(IsTrue)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addNot(Not)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addOr(Or)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addOs(Os)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addParserSupports(ParserSupports)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addResourcesMatch(ResourcesMatch)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addSocket(Socket)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addTypeFound(TypeFound)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addUptodate(UpToDate)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.addXor(Xor)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.countConditions()",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.getConditions()",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.getTaskName()",1,1,1
"org.apache.tools.ant.taskdefs.condition.ConditionBase.setTaskName(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Contains.eval()",2,2,4
"org.apache.tools.ant.taskdefs.condition.Contains.setCasesensitive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Contains.setString(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Contains.setSubstring(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Equals.eval()",2,3,5
"org.apache.tools.ant.taskdefs.condition.Equals.setArg1(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Equals.setArg2(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Equals.setCasesensitive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Equals.setTrim(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.condition.FilesMatch.eval()",2,2,4
"org.apache.tools.ant.taskdefs.condition.FilesMatch.setFile1(File)",1,1,1
"org.apache.tools.ant.taskdefs.condition.FilesMatch.setFile2(File)",1,1,1
"org.apache.tools.ant.taskdefs.condition.FilesMatch.setTextfile(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Http.eval()",4,2,7
"org.apache.tools.ant.taskdefs.condition.Http.setErrorsBeginAt(int)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Http.setUrl(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.IsFailure.eval()",1,1,1
"org.apache.tools.ant.taskdefs.condition.IsFailure.getCode()",1,1,1
"org.apache.tools.ant.taskdefs.condition.IsFailure.setCode(int)",1,1,1
"org.apache.tools.ant.taskdefs.condition.IsFalse.eval()",2,1,2
"org.apache.tools.ant.taskdefs.condition.IsFalse.setValue(boolean)",1,1,2
"org.apache.tools.ant.taskdefs.condition.IsFileSelected.eval()",2,2,3
"org.apache.tools.ant.taskdefs.condition.IsFileSelected.setBaseDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.condition.IsFileSelected.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.condition.IsFileSelected.validate()",2,1,2
"org.apache.tools.ant.taskdefs.condition.IsReachable.empty(String)",1,2,2
"org.apache.tools.ant.taskdefs.condition.IsReachable.eval()",6,6,13
"org.apache.tools.ant.taskdefs.condition.IsReachable.setHost(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.IsReachable.setTimeout(int)",1,1,1
"org.apache.tools.ant.taskdefs.condition.IsReachable.setUrl(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.IsReference.eval()",5,4,6
"org.apache.tools.ant.taskdefs.condition.IsReference.setRefid(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.condition.IsReference.setType(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.IsSet.eval()",2,1,2
"org.apache.tools.ant.taskdefs.condition.IsSet.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.IsSigned.eval()",3,5,6
"org.apache.tools.ant.taskdefs.condition.IsSigned.isSigned(File,String)",4,5,7
"org.apache.tools.ant.taskdefs.condition.IsSigned.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.condition.IsSigned.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.IsTrue.eval()",2,1,2
"org.apache.tools.ant.taskdefs.condition.IsTrue.setValue(boolean)",1,1,2
"org.apache.tools.ant.taskdefs.condition.Not.eval()",3,1,3
"org.apache.tools.ant.taskdefs.condition.Or.eval()",3,2,3
"org.apache.tools.ant.taskdefs.condition.Os.Os()",1,1,1
"org.apache.tools.ant.taskdefs.condition.Os.Os(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Os.eval()",1,1,1
"org.apache.tools.ant.taskdefs.condition.Os.isArch(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Os.isFamily(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Os.isName(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Os.isOs(String,String,String,String)",15,27,35
"org.apache.tools.ant.taskdefs.condition.Os.isVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Os.setArch(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Os.setFamily(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Os.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Os.setVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ParserSupports.eval()",5,2,7
"org.apache.tools.ant.taskdefs.condition.ParserSupports.evalFeature()",1,3,4
"org.apache.tools.ant.taskdefs.condition.ParserSupports.evalProperty()",1,3,3
"org.apache.tools.ant.taskdefs.condition.ParserSupports.getReader()",1,1,1
"org.apache.tools.ant.taskdefs.condition.ParserSupports.setFeature(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ParserSupports.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ParserSupports.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.ResourcesMatch.add(ResourceCollection)",2,1,3
"org.apache.tools.ant.taskdefs.condition.ResourcesMatch.eval()",5,4,6
"org.apache.tools.ant.taskdefs.condition.ResourcesMatch.setAsText(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Socket.eval()",3,2,6
"org.apache.tools.ant.taskdefs.condition.Socket.setPort(int)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Socket.setServer(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.TypeFound.doesTypeExist(String)",2,2,3
"org.apache.tools.ant.taskdefs.condition.TypeFound.eval()",2,1,2
"org.apache.tools.ant.taskdefs.condition.TypeFound.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.TypeFound.setURI(String)",1,1,1
"org.apache.tools.ant.taskdefs.condition.Xor.eval()",1,2,2
"org.apache.tools.ant.taskdefs.cvslib.CVSEntry.CVSEntry(Date,String,String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CVSEntry.addFile(String,String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CVSEntry.addFile(String,String,String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CVSEntry.getAuthor()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CVSEntry.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CVSEntry.getDate()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CVSEntry.getFiles()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CVSEntry.setAuthor(String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CVSEntry.toString()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser.getEntrySetAsArray()",1,2,2
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser.parseDate(String)",1,2,3
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser.processComment(String)",1,3,3
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser.processDate(String)",1,2,2
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser.processFile(String)",1,2,2
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser.processGetPreviousRevision(String)",2,1,2
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser.processRevision(String)",1,2,3
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser.reset()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser.saveEntry()",1,2,2
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser.stdout(String)",2,2,7
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask.addUser(CvsUser)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask.execute()",1,9,9
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask.filterEntrySet(CVSEntry[])",5,4,7
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask.loadUserlist(Properties)",2,3,3
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask.replaceAuthorIdWithName(Properties,CVSEntry[])",1,3,3
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask.setDaysinpast(int)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask.setDestfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask.setDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask.setEnd(Date)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask.setStart(Date)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask.setUsersfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask.validate()",4,5,6
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask.writeChangeLog(CVSEntry[])",1,3,3
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter.printChangeLog(PrintWriter,CVSEntry[])",1,2,3
"org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter.printEntry(Document,PrintWriter,CVSEntry)",1,3,3
"org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff.execute()",1,5,5
"org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff.parseRDiff(File)",1,11,12
"org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff.setDestFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff.setEndDate(String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff.setEndTag(String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff.setPackage(String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff.setStartDate(String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff.setStartTag(String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff.validate()",7,1,11
"org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff.writeTagDiff(CvsTagEntry[])",1,8,8
"org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff.writeTagEntry(Document,PrintWriter,CvsTagEntry)",1,3,3
"org.apache.tools.ant.taskdefs.cvslib.CvsTagEntry.CvsTagEntry(String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsTagEntry.CvsTagEntry(String,String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsTagEntry.CvsTagEntry(String,String,String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsTagEntry.getFile()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsTagEntry.getPreviousRevision()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsTagEntry.getRevision()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsTagEntry.toString()",1,5,7
"org.apache.tools.ant.taskdefs.cvslib.CvsUser.getDisplayname()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsUser.getUserID()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsUser.setDisplayname(String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsUser.setUserid(String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsUser.validate()",3,1,3
"org.apache.tools.ant.taskdefs.cvslib.CvsVersion.execute()",1,10,13
"org.apache.tools.ant.taskdefs.cvslib.CvsVersion.getClientVersion()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsVersion.getServerVersion()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsVersion.setClientVersionProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsVersion.setServerVersionProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.CvsVersion.supportsCvsLogWithSOption()",6,3,6
"org.apache.tools.ant.taskdefs.cvslib.RCSFile.RCSFile(String,String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.RCSFile.RCSFile(String,String,String)",1,1,2
"org.apache.tools.ant.taskdefs.cvslib.RCSFile.getName()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.RCSFile.getPreviousRevision()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.RCSFile.getRevision()",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.RedirectingOutputStream.RedirectingOutputStream(ChangeLogParser)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.RedirectingOutputStream.processLine(String)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.RedirectingStreamHandler.RedirectingStreamHandler(ChangeLogParser)",1,1,1
"org.apache.tools.ant.taskdefs.cvslib.RedirectingStreamHandler.getErrors()",1,1,2
"org.apache.tools.ant.taskdefs.cvslib.RedirectingStreamHandler.stop()",1,1,2
"org.apache.tools.ant.taskdefs.email.EmailAddress.EmailAddress()",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailAddress.EmailAddress(String)",3,7,20
"org.apache.tools.ant.taskdefs.email.EmailAddress.getAddress()",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailAddress.getName()",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailAddress.setAddress(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailAddress.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailAddress.toString()",2,1,2
"org.apache.tools.ant.taskdefs.email.EmailAddress.trim(String,boolean)",1,11,13
"org.apache.tools.ant.taskdefs.email.EmailTask.Encoding.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.addBcc(EmailAddress)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.addCc(EmailAddress)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.addFrom(EmailAddress)",2,1,2
"org.apache.tools.ant.taskdefs.email.EmailTask.addMessage(Message)",2,1,2
"org.apache.tools.ant.taskdefs.email.EmailTask.addReplyTo(EmailAddress)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.addTo(EmailAddress)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.createAttachments()",1,2,2
"org.apache.tools.ant.taskdefs.email.EmailTask.createHeader()",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.execute()",14,31,42
"org.apache.tools.ant.taskdefs.email.EmailTask.getCharset()",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.getIncludeFileNames()",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.setBccList(String)",1,2,2
"org.apache.tools.ant.taskdefs.email.EmailTask.setCcList(String)",1,2,2
"org.apache.tools.ant.taskdefs.email.EmailTask.setCharset(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.setEncoding(Encoding)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.setFiles(String)",1,2,2
"org.apache.tools.ant.taskdefs.email.EmailTask.setFrom(String)",2,1,2
"org.apache.tools.ant.taskdefs.email.EmailTask.setIncludefilenames(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.setMailhost(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.setMailport(int)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.setMessage(String)",2,1,2
"org.apache.tools.ant.taskdefs.email.EmailTask.setMessageFile(File)",2,1,2
"org.apache.tools.ant.taskdefs.email.EmailTask.setMessageMimeType(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.setReplyTo(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.setSSL(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.setSubject(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.EmailTask.setToList(String)",1,2,2
"org.apache.tools.ant.taskdefs.email.EmailTask.setUser(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.Header.getName()",1,1,1
"org.apache.tools.ant.taskdefs.email.Header.getValue()",1,1,1
"org.apache.tools.ant.taskdefs.email.Header.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.Header.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.getDate()",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setBccList(Vector)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setCcList(Vector)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setFiles(Vector)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setFrom(EmailAddress)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setHeaders(Vector)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setHost(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setIncludeFileNames(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setMessage(Message)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setPort(int)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setReplyToList(Vector)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setSSL(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setSubject(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setTask(Task)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setToList(Vector)",1,1,1
"org.apache.tools.ant.taskdefs.email.Mailer.setUser(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.Message.Message()",1,1,1
"org.apache.tools.ant.taskdefs.email.Message.Message(File)",1,1,1
"org.apache.tools.ant.taskdefs.email.Message.Message(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.Message.addText(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.Message.getCharset()",1,1,1
"org.apache.tools.ant.taskdefs.email.Message.getMimeType()",1,1,1
"org.apache.tools.ant.taskdefs.email.Message.isMimeTypeSpecified()",1,1,1
"org.apache.tools.ant.taskdefs.email.Message.print(PrintStream)",1,3,4
"org.apache.tools.ant.taskdefs.email.Message.setCharset(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.Message.setMimeType(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.Message.setSrc(File)",1,1,1
"org.apache.tools.ant.taskdefs.email.MimeMailer.SimpleAuthenticator.SimpleAuthenticator(String,String)",1,1,1
"org.apache.tools.ant.taskdefs.email.MimeMailer.SimpleAuthenticator.getPasswordAuthentication()",1,1,1
"org.apache.tools.ant.taskdefs.email.MimeMailer.StringDataSource.getCharset()",1,1,1
"org.apache.tools.ant.taskdefs.email.MimeMailer.StringDataSource.getContentType()",2,3,5
"org.apache.tools.ant.taskdefs.email.MimeMailer.StringDataSource.getInputStream()",2,3,5
"org.apache.tools.ant.taskdefs.email.MimeMailer.StringDataSource.getName()",1,1,1
"org.apache.tools.ant.taskdefs.email.MimeMailer.StringDataSource.getOutputStream()",1,1,2
"org.apache.tools.ant.taskdefs.email.MimeMailer.StringDataSource.setCharset(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.MimeMailer.StringDataSource.setContentType(String)",1,1,1
"org.apache.tools.ant.taskdefs.email.MimeMailer.internetAddresses(Vector)",1,3,3
"org.apache.tools.ant.taskdefs.email.MimeMailer.parseCharSetFromMimeType(String)",2,2,3
"org.apache.tools.ant.taskdefs.email.MimeMailer.send()",4,11,15
"org.apache.tools.ant.taskdefs.email.PlainMailer.attach(File,PrintStream)",2,6,6
"org.apache.tools.ant.taskdefs.email.PlainMailer.send()",1,9,10
"org.apache.tools.ant.taskdefs.email.UUMailer.attach(File,PrintStream)",2,3,3
"org.apache.tools.ant.taskdefs.optional.ANTLR.ANTLR()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.addClasspathEntry(String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.ANTLR.createClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.createJvmarg()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.execute()",4,7,8
"org.apache.tools.ant.taskdefs.optional.ANTLR.getGeneratedFile()",4,4,6
"org.apache.tools.ant.taskdefs.optional.ANTLR.init()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.is272()",1,2,3
"org.apache.tools.ant.taskdefs.optional.ANTLR.populateAttributes()",1,10,10
"org.apache.tools.ant.taskdefs.optional.ANTLR.run(String[])",1,3,3
"org.apache.tools.ant.taskdefs.optional.ANTLR.setDebug(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.setDiagnostic(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.setDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.setFork(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.setGlib(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.setGlib(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ANTLR.setHtml(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.setOutputdirectory(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.setTarget(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.setTrace(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.setTraceLexer(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.setTraceParser(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.setTraceTreeWalker(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ANTLR.validateAttributes()",3,3,5
"org.apache.tools.ant.taskdefs.optional.Cab.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Cab.appendFiles(Vector,DirectoryScanner)",1,2,2
"org.apache.tools.ant.taskdefs.optional.Cab.checkConfiguration()",4,6,6
"org.apache.tools.ant.taskdefs.optional.Cab.createExec()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Cab.createListFile(Vector)",1,2,2
"org.apache.tools.ant.taskdefs.optional.Cab.execute()",3,12,13
"org.apache.tools.ant.taskdefs.optional.Cab.getFileList()",1,4,4
"org.apache.tools.ant.taskdefs.optional.Cab.isUpToDate(Vector)",1,3,4
"org.apache.tools.ant.taskdefs.optional.Cab.setBasedir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Cab.setCabfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Cab.setCompress(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Cab.setOptions(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Cab.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.EchoProperties.FormatAttribute.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.EchoProperties.Tuple.Tuple(String,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.EchoProperties.Tuple.compareTo(Object)",1,1,1
"org.apache.tools.ant.taskdefs.optional.EchoProperties.addPropertyset(PropertySet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.EchoProperties.execute()",15,25,26
"org.apache.tools.ant.taskdefs.optional.EchoProperties.getDocumentBuilder()",1,1,2
"org.apache.tools.ant.taskdefs.optional.EchoProperties.jdkSaveProperties(Properties,OutputStream,String)",1,4,4
"org.apache.tools.ant.taskdefs.optional.EchoProperties.saveProperties(Hashtable,OutputStream)",1,5,5
"org.apache.tools.ant.taskdefs.optional.EchoProperties.setDestfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.EchoProperties.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.EchoProperties.setFormat(FormatAttribute)",1,1,1
"org.apache.tools.ant.taskdefs.optional.EchoProperties.setPrefix(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.EchoProperties.setSrcfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.EchoProperties.sortProperties(Properties)",1,2,2
"org.apache.tools.ant.taskdefs.optional.EchoProperties.xmlSaveProperties(Properties,OutputStream)",1,2,3
"org.apache.tools.ant.taskdefs.optional.Javah.ClassArgument.ClassArgument()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.ClassArgument.getName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.ClassArgument.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.Javah()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.createArg()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.createBootclasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.Javah.createClass()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.Javah.execute()",7,9,10
"org.apache.tools.ant.taskdefs.optional.Javah.getBootclasspath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.getClasses()",1,4,4
"org.apache.tools.ant.taskdefs.optional.Javah.getClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.getCurrentArgs()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.getDestdir()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.getForce()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.getOld()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.getOutputfile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.getStubs()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.getVerbose()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.logAndAddFiles(Commandline)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.logAndAddFilesToCompile(Commandline)",1,3,3
"org.apache.tools.ant.taskdefs.optional.Javah.setBootClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.setBootclasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.optional.Javah.setClass(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.setClasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.optional.Javah.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.setDestdir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.setForce(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.setImplementation(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.Javah.setOld(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.setOutputFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.setStubs(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Javah.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.ExtMapper.mapFileName(String)",2,2,2
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.ExtMapper.setFrom(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.ExtMapper.setTo(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.Native2Ascii()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.add(FileNameMapper)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.convert(String,String)",5,3,6
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.createArg()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.createMapper()",2,2,2
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.execute()",4,6,11
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.getCurrentArgs()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.getEncoding()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.getReverse()",1,1,1
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.setDest(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.setEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.setExt(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.setImplementation(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.setReverse(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Native2Ascii.setSrc(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.TraceAttr.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.VerboseAttr.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.addExistingToClasspath(StringBuffer,String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.NetRexxC.copyFilesToDestination()",3,4,5
"org.apache.tools.ant.taskdefs.optional.NetRexxC.doNetRexxCompile()",2,19,23
"org.apache.tools.ant.taskdefs.optional.NetRexxC.execute()",2,2,5
"org.apache.tools.ant.taskdefs.optional.NetRexxC.getCompileClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.NetRexxC.getCompileOptionsAsArray()",1,1,25
"org.apache.tools.ant.taskdefs.optional.NetRexxC.init()",1,32,32
"org.apache.tools.ant.taskdefs.optional.NetRexxC.scanDir(File,File,String[])",1,6,6
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setBinary(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setClasspath(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setComments(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setCompact(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setCompile(boolean)",1,1,3
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setConsole(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setCrossref(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setDecimal(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setDestDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setDiag(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setExplicit(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setFormat(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setJava(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setKeep(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setLogo(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setReplace(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setSavelog(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setSourcedir(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setSrcDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setStrictargs(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setStrictassign(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setStrictcase(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setStrictimport(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setStrictprops(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setStrictsignal(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setSuppressDeprecation(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setSuppressExceptionNotSignalled(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setSuppressMethodArgumentNotUsed(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setSuppressPrivatePropertyNotUsed(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setSuppressVariableNotUsed(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setSymbols(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setTime(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setTrace(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setTrace(TraceAttr)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setUtf8(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setVerbose(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.NetRexxC.setVerbose(VerboseAttr)",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.Operation.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.Operation.toOperation(String)",3,2,3
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.Type.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.Type.toType(String)",3,2,3
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.checkParameters()",5,1,8
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.executeDate(String)",2,3,8
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.executeInteger(String)",1,4,11
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.executeOn(Properties)",4,5,6
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.executeString(String)",1,1,4
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.getCurrentValue(String)",1,1,17
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.setDefault(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.setKey(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.setOperation(Operation)",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.setPattern(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.setType(Type)",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.setUnit(Unit)",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Entry.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Unit.Unit()",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Unit.getCalendarField()",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.Unit.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.checkParam(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.checkParameters()",2,2,2
"org.apache.tools.ant.taskdefs.optional.PropertyFile.createEntry()",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.execute()",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.executeOperation()",1,2,2
"org.apache.tools.ant.taskdefs.optional.PropertyFile.readFile()",1,5,5
"org.apache.tools.ant.taskdefs.optional.PropertyFile.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.PropertyFile.writeFile()",1,3,4
"org.apache.tools.ant.taskdefs.optional.RenameExtensions.RenameExtensions()",1,1,1
"org.apache.tools.ant.taskdefs.optional.RenameExtensions.execute()",2,1,4
"org.apache.tools.ant.taskdefs.optional.RenameExtensions.setFromExtension(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.RenameExtensions.setReplace(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.RenameExtensions.setSrcDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.RenameExtensions.setToExtension(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ReplaceRegExp.ReplaceRegExp()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ReplaceRegExp.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ReplaceRegExp.createRegexp()",2,1,2
"org.apache.tools.ant.taskdefs.optional.ReplaceRegExp.createSubstitution()",2,1,2
"org.apache.tools.ant.taskdefs.optional.ReplaceRegExp.doReplace(File,int)",2,13,22
"org.apache.tools.ant.taskdefs.optional.ReplaceRegExp.doReplace(RegularExpression,Substitution,String,int)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ReplaceRegExp.execute()",4,10,17
"org.apache.tools.ant.taskdefs.optional.ReplaceRegExp.setByLine(String)",1,1,2
"org.apache.tools.ant.taskdefs.optional.ReplaceRegExp.setByLine(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ReplaceRegExp.setEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ReplaceRegExp.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ReplaceRegExp.setFlags(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ReplaceRegExp.setMatch(String)",2,1,2
"org.apache.tools.ant.taskdefs.optional.ReplaceRegExp.setReplace(String)",2,1,2
"org.apache.tools.ant.taskdefs.optional.Rpm.execute()",6,14,18
"org.apache.tools.ant.taskdefs.optional.Rpm.getExecute(Commandline,ExecuteStreamHandler)",1,2,2
"org.apache.tools.ant.taskdefs.optional.Rpm.guessRpmBuildCommand()",6,8,9
"org.apache.tools.ant.taskdefs.optional.Rpm.setCleanBuildDir(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Rpm.setCommand(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Rpm.setError(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Rpm.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Rpm.setOutput(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Rpm.setQuiet(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Rpm.setRemoveSource(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Rpm.setRemoveSpec(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Rpm.setRpmBuildCommand(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Rpm.setSpecFile(String)",2,3,3
"org.apache.tools.ant.taskdefs.optional.Rpm.setTopDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.SchemaLocation.SchemaLocation()",1,1,1
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.SchemaLocation.equals(Object)",6,4,9
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.SchemaLocation.getFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.SchemaLocation.getNamespace()",1,1,1
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.SchemaLocation.getSchemaLocationURL()",5,2,8
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.SchemaLocation.getURIandLocation()",1,1,1
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.SchemaLocation.getUrl()",1,1,1
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.SchemaLocation.hashCode()",1,4,4
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.SchemaLocation.isSet(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.SchemaLocation.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.SchemaLocation.setNamespace(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.SchemaLocation.setUrl(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.SchemaLocation.toString()",1,2,4
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.SchemaLocation.validateNamespace()",2,1,2
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.addConfiguredSchema(SchemaLocation)",2,2,3
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.addSchemaLocations()",1,4,4
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.createAnonymousSchema()",1,1,2
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.createDefaultReader()",1,1,3
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.enableJAXP12SchemaValidation()",1,2,2
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.enableXercesSchemaValidation()",1,2,2
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.getNoNamespaceSchemaURL()",2,2,2
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.init()",1,1,1
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.initValidator()",3,2,4
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.onSuccessfulValidation(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.setDisableDTD(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.setFeatureIfSupported(String,boolean)",1,3,3
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.setFullChecking(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.setNoNamespaceFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.setNoNamespaceSchemaProperty(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.SchemaValidate.setNoNamespaceURL(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Script.addText(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Script.execute()",1,4,4
"org.apache.tools.ant.taskdefs.optional.Script.setLanguage(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.Script.setSrc(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.StyleBook.StyleBook()",1,1,1
"org.apache.tools.ant.taskdefs.optional.StyleBook.execute()",4,2,5
"org.apache.tools.ant.taskdefs.optional.StyleBook.setBook(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.StyleBook.setLoaderConfig(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.StyleBook.setSkinDirectory(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.StyleBook.setTargetDirectory(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.TraXLiaison()",1,1,1
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.addParam(String,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.configure(XSLTProcess)",1,5,5
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.createTransformer()",1,5,5
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.error(TransformerException)",1,1,1
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.fatalError(TransformerException)",1,1,1
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.getFactory()",3,4,6
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.getSource(InputStream,File)",3,3,3
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.getSource(InputStream,Resource)",3,3,3
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.getSystemId(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.logError(TransformerException,String)",2,7,8
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.readTemplates()",1,2,2
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.setAttribute(String,Object)",1,1,1
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.setEntityResolver(EntityResolver)",1,1,1
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.setFactory(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.setLogger(XSLTLogger)",1,1,1
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.setOutputProperty(String,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.setStylesheet(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.setStylesheet(Resource)",1,3,4
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.setURIResolver(URIResolver)",1,1,1
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.transform(File,File)",1,4,6
"org.apache.tools.ant.taskdefs.optional.TraXLiaison.warning(TransformerException)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.Attribute.getName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.Attribute.getValue()",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.Attribute.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.Attribute.setValue(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.Property.getName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.Property.getValue()",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.Property.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.Property.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.ValidatorErrorHandler.doLog(SAXParseException,int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.ValidatorErrorHandler.error(SAXParseException)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.ValidatorErrorHandler.fatalError(SAXParseException)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.ValidatorErrorHandler.getFailure()",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.ValidatorErrorHandler.getMessage(SAXParseException)",2,3,6
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.ValidatorErrorHandler.init(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.ValidatorErrorHandler.warning(SAXParseException)",1,2,2
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.addConfiguredXMLCatalog(XMLCatalog)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.createAttribute()",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.createDTD()",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.createDefaultReader()",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.createDefaultReaderOrParser()",1,2,2
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.createProperty()",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.createXmlReader()",4,5,8
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.doValidate(File)",4,3,6
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.execute()",5,9,10
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.getEntityResolver()",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.getXmlReader()",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.init()",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.initValidator()",1,5,5
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.isSax1Parser()",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.onSuccessfulValidation(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.setClassName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.setClasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.setFeature(String,boolean)",1,3,3
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.setLenient(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.setProperty(String,String)",2,3,5
"org.apache.tools.ant.taskdefs.optional.XMLValidateTask.setWarn(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XalanLiaison.XalanLiaison()",1,1,1
"org.apache.tools.ant.taskdefs.optional.XalanLiaison.addParam(String,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XalanLiaison.setStylesheet(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.XalanLiaison.transform(File,File)",1,4,7
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCheck.CCMCheck()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCheck.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCheck.checkOptions(Commandline)",1,4,4
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCheck.doit()",2,2,2
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCheck.execute()",5,8,11
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCheck.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCheck.getFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCheck.getTask()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCheck.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCheck.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCheck.setTask(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCheckin.CCMCheckin()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCheckinDefault.CCMCheckinDefault()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCheckout.CCMCheckout()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.CCMCreateTask()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.checkOptions(Commandline)",1,6,6
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.execute()",3,3,3
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.getPlatform()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.getRelease()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.getResolver()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.getSubSystem()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.getTask()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.setPlatform(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.setProcessErrorStream(InputStream)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.setProcessInputStream(OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.setProcessOutputStream(InputStream)",1,4,4
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.setRelease(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.setResolver(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.setSubSystem(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.setTask(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.start()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMCreateTask.stop()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMReconfigure.CCMReconfigure()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMReconfigure.checkOptions(Commandline)",1,4,4
"org.apache.tools.ant.taskdefs.optional.ccm.CCMReconfigure.execute()",2,2,2
"org.apache.tools.ant.taskdefs.optional.ccm.CCMReconfigure.getCcmProject()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMReconfigure.isRecurse()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMReconfigure.isVerbose()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMReconfigure.setCcmProject(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMReconfigure.setRecurse(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.CCMReconfigure.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.Continuus.getCcmAction()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.Continuus.getCcmCommand()",1,2,3
"org.apache.tools.ant.taskdefs.optional.ccm.Continuus.run(Commandline)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.Continuus.run(Commandline,ExecuteStreamHandler)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ccm.Continuus.setCcmAction(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ccm.Continuus.setCcmDir(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.checkOptions(Commandline)",1,7,7
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.execute()",2,5,5
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.getCommentCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.getCommentFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.getCommentFileCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.getIdentical()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.getKeepCopy()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.getNoWarn()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.getPreserveTime()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.setCommentFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.setIdentical(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.setKeepCopy(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.setNoWarn(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckin.setPreserveTime(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.checkOptions(Commandline)",1,9,9
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.execute()",3,7,7
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.getBranch()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.getBranchCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.getCommentCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.getCommentFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.getCommentFileCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.getNoData()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.getNoWarn()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.getNotco()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.getOut()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.getOutCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.getReserved()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.getVersion()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.lsCheckout()",1,2,3
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.setBranch(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.setCommentFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.setNoData(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.setNoWarn(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.setNotco(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.setOut(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.setReserved(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCCheckout.setVersion(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.checkOptions(Commandline)",2,5,6
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.execute()",2,5,5
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.getCommentCommand(Commandline)",2,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.getNusers()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.getNusersCommand(Commandline)",2,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.getObjselect()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.getObsolete()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.getOpType()",2,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.getPname()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.getPnameCommand(Commandline)",2,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.getReplace()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.setNusers(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.setObjSel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.setObjselect(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.setObsolete(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.setPname(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCLock.setReplace(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.checkOptions(Commandline)",1,8,8
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.execute()",4,5,7
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.getCommentCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.getCommentFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.getCommentFileCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.getRecurse()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.getReplace()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.getTypeCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.getTypeName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.getTypeValue()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.getTypeValueCommand(Commandline)",1,2,3
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.getVersion()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.getVersionCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.setCommentFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.setRecurse(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.setReplace(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.setTypeName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.setTypeValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkattr.setVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.checkOptions(Commandline)",1,6,6
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.execute()",2,5,5
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.getBaselineRootName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.getCommentCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.getCommentFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.getCommentFileCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.getFull()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.getIdentical()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.getNlabel()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.getNoWarn()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.setBaselineRootName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.setCommentFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.setFull(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.setIdentical(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.setNlabel(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkbl.setNoWarn(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkdir.checkOptions(Commandline)",1,4,4
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkdir.execute()",2,5,5
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkdir.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkdir.getCommentCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkdir.getCommentFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkdir.getCommentFileCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkdir.getNoCheckout()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkdir.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkdir.setCommentFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkdir.setNoCheckout(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.checkOptions(Commandline)",2,10,11
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.execute()",2,5,5
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.getCheckin()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.getCommentCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.getCommentFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.getCommentFileCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.getEltype()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.getEltypeCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.getMaster()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.getNoCheckout()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.getNoWarn()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.getPreserveTime()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.setCheckin(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.setCommentFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.setEltype(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.setMaster(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.setNoCheckout(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.setNoWarn(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMkelem.setPreserveTime(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.checkOptions(Commandline)",1,7,7
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.execute()",3,5,6
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.getCommentCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.getCommentFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.getCommentFileCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.getRecurse()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.getReplace()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.getTypeCommand(Commandline)",1,3,3
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.getTypeName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.getVOB()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.getVersion()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.getVersionCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.setCommentFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.setRecurse(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.setReplace(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.setTypeName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.setVOB(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklabel.setVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.checkOptions(Commandline)",1,8,8
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.execute()",3,4,5
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.getCommentCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.getCommentFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.getCommentFileCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.getGlobal()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.getOrdinary()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.getPbranch()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.getReplace()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.getShared()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.getTypeName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.getTypeSpecifier()",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.getVOB()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.setCommentFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.setGlobal(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.setOrdinary(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.setPbranch(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.setReplace(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.setShared(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.setTypeName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCMklbtype.setVOB(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.checkOptions(Commandline)",1,5,5
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.execute()",4,4,6
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.getCommentCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.getCommentFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.getCommentFileCommand(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.getIgnore()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.getRmAll()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.getTypeKind()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.getTypeName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.getTypeSpecifier()",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.getVOB()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.setCommentFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.setIgnore(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.setRmAll(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.setTypeKind(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.setTypeName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCRmtype.setVOB(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnCheckout.checkOptions(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnCheckout.execute()",2,5,5
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnCheckout.getKeepCopy()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnCheckout.setKeepCopy(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock.checkOptions(Commandline)",2,3,4
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock.execute()",2,5,5
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock.getCommentCommand(Commandline)",2,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock.getObjselect()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock.getOpType()",2,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock.getPname()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock.getPnameCommand(Commandline)",2,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock.setObjSel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock.setObjselect(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUnlock.setPname(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate.checkOptions(Commandline)",1,6,6
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate.execute()",2,5,5
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate.getCurrentTime()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate.getGraphical()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate.getLog()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate.getLogCommand(Commandline)",2,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate.getOverwrite()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate.getPreserveTime()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate.getRename()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate.setCurrentTime(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate.setGraphical(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate.setLog(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate.setOverwrite(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate.setPreserveTime(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.CCUpdate.setRename(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase.getClearToolCommand()",1,2,3
"org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase.getFailOnErr()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase.getObjSelect()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase.getViewPath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase.getViewPathBasename()",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase.run(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase.runS(Commandline)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase.setClearToolDir(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase.setFailOnErr(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase.setObjSelect(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.clearcase.ClearCase.setViewPath(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.AntAnalyzer.AntAnalyzer()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.AntAnalyzer.determineDependencies(Vector,Vector)",4,14,17
"org.apache.tools.ant.taskdefs.optional.depend.AntAnalyzer.supportsFileDependencies()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.ClassFile.getClassRefs()",1,5,5
"org.apache.tools.ant.taskdefs.optional.depend.ClassFile.getFullClassName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.ClassFile.read(InputStream)",2,1,2
"org.apache.tools.ant.taskdefs.optional.depend.ClassFileUtils.convertDotName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.ClassFileUtils.convertSlashName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.Depend.addClassFiles(Vector,File,File)",2,4,5
"org.apache.tools.ant.taskdefs.optional.depend.Depend.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.depend.Depend.deleteAffectedFiles(String)",7,7,10
"org.apache.tools.ant.taskdefs.optional.depend.Depend.deleteAllAffectedFiles()",1,4,4
"org.apache.tools.ant.taskdefs.optional.depend.Depend.determineDependencies()",9,23,25
"org.apache.tools.ant.taskdefs.optional.depend.Depend.determineOutOfDateClasses()",7,7,9
"org.apache.tools.ant.taskdefs.optional.depend.Depend.dumpDependencies()",1,6,6
"org.apache.tools.ant.taskdefs.optional.depend.Depend.execute()",4,8,12
"org.apache.tools.ant.taskdefs.optional.depend.Depend.findSourceFile(String)",3,3,4
"org.apache.tools.ant.taskdefs.optional.depend.Depend.getCheckClassPath()",3,4,8
"org.apache.tools.ant.taskdefs.optional.depend.Depend.getClassFiles(Path)",1,3,3
"org.apache.tools.ant.taskdefs.optional.depend.Depend.getClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.Depend.isRmiStub(String,String)",1,4,4
"org.apache.tools.ant.taskdefs.optional.depend.Depend.isStub(String,String,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.Depend.readCachedDependencies(File)",1,4,4
"org.apache.tools.ant.taskdefs.optional.depend.Depend.scanDir(File,String[])",1,5,5
"org.apache.tools.ant.taskdefs.optional.depend.Depend.setCache(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.Depend.setClasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.optional.depend.Depend.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.Depend.setClosure(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.Depend.setDestDir(Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.Depend.setDump(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.Depend.setSrcdir(Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.Depend.setWarnOnRmiStubs(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.Depend.warnOutOfDateButNotDeleted(ClassFileInfo,String,String)",2,2,4
"org.apache.tools.ant.taskdefs.optional.depend.Depend.writeCachedDependencies(Hashtable)",1,5,5
"org.apache.tools.ant.taskdefs.optional.depend.DirectoryIterator.DirectoryIterator(File,boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.DirectoryIterator.getDirectoryEntries(File)",1,3,3
"org.apache.tools.ant.taskdefs.optional.depend.DirectoryIterator.getNextClassFile()",4,6,7
"org.apache.tools.ant.taskdefs.optional.depend.JarFileIterator.JarFileIterator(InputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.JarFileIterator.getNextClassFile()",1,5,7
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ClassCPInfo.ClassCPInfo()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ClassCPInfo.getClassName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ClassCPInfo.read(DataInputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ClassCPInfo.resolve(ConstantPool)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ClassCPInfo.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantCPInfo.ConstantCPInfo(int,int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantCPInfo.getValue()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantCPInfo.setValue(Object)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool.ConstantPool()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool.addEntry(ConstantPoolEntry)",1,3,3
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool.getClassEntry(String)",1,4,5
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool.getConstantEntry(Object)",1,4,5
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool.getEntry(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool.getFieldRefEntry(String,String,String)",1,6,7
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool.getInterfaceMethodRefEntry(String,String,String)",1,6,7
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool.getMethodRefEntry(String,String,String)",1,6,7
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool.getNameAndTypeEntry(String,String)",1,5,6
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool.getUTF8Entry(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool.read(DataInputStream)",1,2,2
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool.resolve()",1,4,4
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool.size()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPool.toString()",1,2,2
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPoolEntry.ConstantPoolEntry(int,int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPoolEntry.getNumEntries()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPoolEntry.getTag()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPoolEntry.isResolved()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPoolEntry.readEntry(DataInputStream)",2,2,13
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.ConstantPoolEntry.resolve(ConstantPool)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.DoubleCPInfo.DoubleCPInfo()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.DoubleCPInfo.read(DataInputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.DoubleCPInfo.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.FieldRefCPInfo.FieldRefCPInfo()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.FieldRefCPInfo.getFieldClassName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.FieldRefCPInfo.getFieldName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.FieldRefCPInfo.getFieldType()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.FieldRefCPInfo.read(DataInputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.FieldRefCPInfo.resolve(ConstantPool)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.FieldRefCPInfo.toString()",1,1,2
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.FloatCPInfo.FloatCPInfo()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.FloatCPInfo.read(DataInputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.FloatCPInfo.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.IntegerCPInfo.IntegerCPInfo()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.IntegerCPInfo.read(DataInputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.IntegerCPInfo.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.InterfaceMethodRefCPInfo.InterfaceMethodRefCPInfo()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.InterfaceMethodRefCPInfo.getInterfaceMethodClassName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.InterfaceMethodRefCPInfo.getInterfaceMethodName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.InterfaceMethodRefCPInfo.getInterfaceMethodType()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.InterfaceMethodRefCPInfo.read(DataInputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.InterfaceMethodRefCPInfo.resolve(ConstantPool)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.InterfaceMethodRefCPInfo.toString()",1,1,2
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.LongCPInfo.LongCPInfo()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.LongCPInfo.read(DataInputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.LongCPInfo.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.MethodRefCPInfo.MethodRefCPInfo()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.MethodRefCPInfo.getMethodClassName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.MethodRefCPInfo.getMethodName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.MethodRefCPInfo.getMethodType()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.MethodRefCPInfo.read(DataInputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.MethodRefCPInfo.resolve(ConstantPool)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.MethodRefCPInfo.toString()",1,1,2
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.NameAndTypeCPInfo.NameAndTypeCPInfo()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.NameAndTypeCPInfo.getName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.NameAndTypeCPInfo.getType()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.NameAndTypeCPInfo.read(DataInputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.NameAndTypeCPInfo.resolve(ConstantPool)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.NameAndTypeCPInfo.toString()",1,1,2
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.StringCPInfo.StringCPInfo()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.StringCPInfo.read(DataInputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.StringCPInfo.resolve(ConstantPool)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.StringCPInfo.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.Utf8CPInfo.Utf8CPInfo()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.Utf8CPInfo.getValue()",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.Utf8CPInfo.read(DataInputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.depend.constantpool.Utf8CPInfo.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.CSharp()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.addCompilerSpecificOptions(NetCommand)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.clear()",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.createResourceParameter(NetCommand,DotnetResource)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.getDefinitionsParameter()",2,1,3
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.getDocFileParameter()",2,2,2
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.getFileAlignParameter()",2,2,3
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.getFileExtension()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.getFullPathsParameter()",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.getIncremental()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.getIncrementalParameter()",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.getNoConfigParameter()",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.getReferenceDelimiter()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.getUnsafe()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.getUnsafeParameter()",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.setDefinitions(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.setDocFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.setFileAlign(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.setFullPaths(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.setIncremental(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.setNoConfig(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.setOutputFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.CSharp.setUnsafe(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetBaseMatchingTask.addFilesAndExecute(NetCommand,boolean)",1,2,2
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetBaseMatchingTask.addFilesToCommand(Hashtable,NetCommand)",1,2,3
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetBaseMatchingTask.addSrc(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetBaseMatchingTask.buildFileList(NetCommand,Hashtable,long)",1,5,5
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetBaseMatchingTask.getDestFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetBaseMatchingTask.getOutputFileTimestamp()",1,3,3
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetBaseMatchingTask.getSrcDir()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetBaseMatchingTask.setDestFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetBaseMatchingTask.setSrcDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.DotnetCompile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.TargetTypes.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.addDefine(DotnetDefine)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.addReference(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.addReferenceFilesets(NetCommand,long)",2,5,6
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.addResource(DotnetResource)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.addResources(NetCommand)",1,2,2
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.clear()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.createNetCommand()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.execute()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.fillInSharedParameters(NetCommand)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getAdditionalModulesParameter()",2,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getDebug()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getDebugParameter()",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getDefinitionsDelimiter()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getDefinitionsParameter()",2,4,5
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getDestFileParameter()",2,2,2
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getExecutable()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getExtraOptions()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getExtraOptionsParameter()",2,2,3
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getExtraOptionsParameters()",1,2,2
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getFailOnError()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getFilePattern()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getIncludeDefaultReferences()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getIncludeDefaultReferencesParameter()",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getMainClass()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getMainClassParameter()",2,2,3
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getOptimize()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getOptimizeParameter()",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getReferenceFilesParameter()",3,3,5
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getReferencesParameter()",3,1,3
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getTargetType()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getTargetTypeParameter()",2,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getUtf8OutputParameter()",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getWarnLevel()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getWarnLevelParameter()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getWin32IconParameter()",2,2,2
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getWin32Res()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.getWin32ResParameter()",2,2,2
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.isFileManagedBinary(File)",1,3,3
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.isUseResponseFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.notEmpty(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setAdditionalModules(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setDebug(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setDestDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setExecutable(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setExtraOptions(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setIncludeDefaultReferences(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setMainClass(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setOptimize(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setReferenceFiles(Path)",1,2,2
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setReferences(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setTargetType(String)",2,4,5
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setTargetType(TargetTypes)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setUseResponseFile(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setUtf8Output(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setWarnLevel(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setWin32Icon(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.setWin32Res(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetCompile.validate()",3,2,4
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetDefine.getName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetDefine.getValue(Task)",3,2,3
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetDefine.isSet(Task)",3,4,5
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetDefine.setIf(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetDefine.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetDefine.setUnless(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource.checkParameters()",5,2,5
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource.getFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource.getName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource.getNamespace()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource.getParameter(String,String,boolean)",5,5,8
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource.getParameters(Project,NetCommand,boolean)",1,5,5
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource.getPublic()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource.hasFilesets()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource.isEmbed()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource.setEmbed(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource.setNamespace(String)",1,3,4
"org.apache.tools.ant.taskdefs.optional.dotnet.DotnetResource.setPublic(Boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.Clear()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.Ilasm()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.TargetTypes.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.addReference(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.buildIlasmCommand()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.execute()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.getDebug()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.getDebugParameter()",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.getExtraOptions()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.getExtraOptionsParameter()",2,2,3
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.getFailOnError()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.getKeyfileParameter()",2,2,2
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.getListingParameter()",2,1,3
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.getOutputFileParameter()",2,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.getResourceFileParameter()",2,2,2
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.getTargetType()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.getTargetTypeParameter()",4,2,4
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.getVerboseParameter()",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.isFileManagedBinary(File)",1,3,3
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.notEmpty(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.setDebug(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.setExtraOptions(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.setKeyfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.setListing(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.setMono(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.setOutputFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.setOwner(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.setResourceFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.setTargetType(String)",2,2,3
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.setTargetType(TargetTypes)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ilasm.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.EncodingTypes.getEncodingOption(String)",3,1,3
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.EncodingTypes.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.VisibilityOptions.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.execute()",2,13,14
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.isDisassemblyNeeded()",3,3,3
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setAssembler(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setBytes(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setDestFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setEncoding(EncodingTypes)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setExecutable(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setHeader(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setItem(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setLinenumbers(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setMetadata(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setProgressBar(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setQuoteallnames(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setRawExceptionHandling(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setResourceDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setShowSource(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setSourceFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setSrcFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.setVisibility(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.Ildasm.validate()",4,6,9
"org.apache.tools.ant.taskdefs.optional.dotnet.ImportTypelib.execute()",2,3,4
"org.apache.tools.ant.taskdefs.optional.dotnet.ImportTypelib.isExecuteNeeded()",3,3,3
"org.apache.tools.ant.taskdefs.optional.dotnet.ImportTypelib.setDestFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.ImportTypelib.setExtraOptions(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.ImportTypelib.setNamespace(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.ImportTypelib.setSrcFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.ImportTypelib.setUnsafe(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.ImportTypelib.setUseSysArray(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.ImportTypelib.validate()",6,2,7
"org.apache.tools.ant.taskdefs.optional.dotnet.JSharp.JSharp()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.JSharp.addCompilerSpecificOptions(NetCommand)",1,3,3
"org.apache.tools.ant.taskdefs.optional.dotnet.JSharp.createResourceParameter(NetCommand,DotnetResource)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.JSharp.getFileExtension()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.JSharp.getReferenceDelimiter()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.JSharp.setBaseAddress(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.JSharp.setPureJava(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.JSharp.setSecureScoping(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.JSharp.validate()",2,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.NetCommand(Task,String,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.addArgument(String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.addArgument(String,String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.addArguments(String[])",1,3,4
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.getAutomaticResponseFileThreshold()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.getFailFailOnError()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.isUseResponseFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.logError(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.logVerbose(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.prepareExecutor()",3,1,4
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.runCommand()",3,6,6
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.scanOneFileset(DirectoryScanner,Hashtable,long)",1,4,4
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.setAutomaticResponseFileThreshold(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.setDirectory(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.setExecutableCommandLine()",2,3,7
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.setTraceCommandLine(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.NetCommand.setUseResponseFile(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.VisualBasicCompile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.addCompilerSpecificOptions(NetCommand)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.clear()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.createResourceParameter(NetCommand,DotnetResource)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.getFileExtension()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.getImports()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.getImportsParameter()",2,2,3
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.getOptionCompare()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.getOptionCompareParameter()",2,2,3
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.getOptionExplicit()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.getOptionExplicitParameter()",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.getOptionStrict()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.getOptionStrictParameter()",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.getReferenceDelimiter()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.getRemoveIntChecks()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.getRemoveIntChecksParameter()",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.getRootNamespace()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.getRootNamespaceParameter()",2,2,3
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.getWin32ResParameter()",2,2,2
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.setImports(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.setOptionCompare(String)",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.setOptionExplicit(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.setOptionStrict(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.setRemoveIntChecks(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.setRootNamespace(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.VisualBasicCompile.validate()",2,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler.applyExtraArgs(NetCommand)",1,2,2
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler.createDefaultCompiler()",1,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler.getCommand()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler.getExtraArgs()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Compiler.supportsAbsoluteFiles()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Schema.evaluate()",3,3,4
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Schema.getFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Schema.getTimestamp()",2,2,2
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Schema.getUrl()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Schema.isMakeURL()",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Schema.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Schema.setMakeURL(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Schema.setUrl(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.Schema.validate()",6,4,8
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.addSchema(Schema)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.execute()",1,11,11
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.isRebuildNeeded(Schema,long)",2,1,2
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.setCompiler(Compiler)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.setDestFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.setExtraOptions(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.setIdeErrors(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.setLanguage(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.setMakeURL(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.setNamespace(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.setProtocol(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.setServer(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.setSrcFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.setUrl(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.dotnet.WsdlToDotnet.validate()",3,1,3
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.addVendorFiles(Hashtable,String)",3,2,5
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.buildBorlandStubs(Iterator)",2,6,6
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.generateClient(File)",1,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.getBorlandDescriptorHandler(File)",1,3,4
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.getVendorOutputJarFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.setBASdtd(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.setDebug(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.setGenerateclient(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.setJava2iiopParams(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.setProcessErrorStream(InputStream)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.setProcessInputStream(OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.setProcessOutputStream(InputStream)",1,4,4
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.setSuffix(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.setVerify(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.setVerifyArgs(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.setVersion(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.start()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.stop()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.toClass(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.toClassFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.verifyBorlandJar(File)",3,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.verifyBorlandJarV4(File)",1,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.verifyBorlandJarV5(File)",1,4,4
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool.writeJar(String,File,Hashtable,String)",1,5,5
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient.execute()",3,6,9
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient.executeFork()",1,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient.executeForkV4()",1,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient.executeForkV5()",1,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient.executeJava()",2,3,4
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient.setClasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient.setClientjar(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient.setDebug(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient.setEjbjar(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient.setMode(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.BorlandGenerateClient.setVersion(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.DDCreator.execute()",4,5,7
"org.apache.tools.ant.taskdefs.optional.ejb.DDCreator.setClasspath(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.DDCreator.setDescriptors(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.DDCreator.setDest(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.DDCreatorHelper.DDCreatorHelper(String[])",1,1,2
"org.apache.tools.ant.taskdefs.optional.ejb.DDCreatorHelper.main(String[])",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.DDCreatorHelper.process()",1,7,7
"org.apache.tools.ant.taskdefs.optional.ejb.DDCreatorHelper.regenerateSerializedFile(File)",1,1,2
"org.apache.tools.ant.taskdefs.optional.ejb.DescriptorHandler.DescriptorHandler(Task,File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.DescriptorHandler.characters(char[],int,int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.DescriptorHandler.endElement(String)",1,12,13
"org.apache.tools.ant.taskdefs.optional.ejb.DescriptorHandler.getEjbName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.DescriptorHandler.getFiles()",1,1,2
"org.apache.tools.ant.taskdefs.optional.ejb.DescriptorHandler.getPublicId()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.DescriptorHandler.processElement()",2,11,15
"org.apache.tools.ant.taskdefs.optional.ejb.DescriptorHandler.registerDTD(String,String)",3,7,9
"org.apache.tools.ant.taskdefs.optional.ejb.DescriptorHandler.resolveEntity(String,String)",5,5,7
"org.apache.tools.ant.taskdefs.optional.ejb.DescriptorHandler.startDocument()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.DescriptorHandler.startElement(String,AttributeList)",1,12,13
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.CMPVersion.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.NamingScheme.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.addDeploymentTool(EJBDeploymentTool)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.createBorland()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.createDTD()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.createIplanet()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.createJboss()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.createJonas()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.createSupport()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.createWeblogic()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.createWeblogictoplink()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.createWebsphere()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.execute()",1,7,7
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.getCmpversion()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.getDestdir()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.setBasejarname(String)",3,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.setBasenameterminator(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.setClasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.setCmpversion(CMPVersion)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.setDependency(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.setDescriptordir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.setDestdir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.setFlatdestdir(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.setGenericjarsuffix(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.setManifest(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.setNaming(NamingScheme)",2,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.setSrcdir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbJar.validateConfig()",4,3,6
"org.apache.tools.ant.taskdefs.optional.ejb.Ejbc.execute()",5,7,9
"org.apache.tools.ant.taskdefs.optional.ejb.Ejbc.getKeepgenerated()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.Ejbc.setClasspath(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.Ejbc.setDescriptors(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.Ejbc.setDest(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.Ejbc.setKeepgenerated(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.Ejbc.setManifest(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.Ejbc.setSrc(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper.EjbcHelper(String[])",1,1,2
"org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper.getCommandLine(boolean,File)",1,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper.isRegenRequired(File)",4,11,15
"org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper.main(String[])",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper.process()",1,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.EjbcHelper.regenerateSupportClasses(File)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.GenericDeploymentTool()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.addFileToJar(JarOutputStream,File,String)",1,5,6
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.addSupportClasses(Hashtable)",1,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.addVendorFiles(Hashtable,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.checkAndAddDependants(Hashtable)",2,5,6
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.checkConfiguration(String,SAXParser)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.configure(Config)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.createAnalyzer()",2,4,7
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.getClassLoaderForBuild()",2,2,3
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.getCombinedClasspath()",1,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.getConfig()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.getDescriptorHandler(File)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.getDestDir()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.getJarBaseName(String)",6,9,10
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.getLocation()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.getManifestFile(String)",3,1,3
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.getPublicId()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.getTask()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.getVendorDDPrefix(String,String)",1,6,6
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.getVendorOutputJarFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.log(String,int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.needToRebuild(Hashtable,File)",4,4,4
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.parseEjbFiles(String,SAXParser)",1,2,3
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.processDescriptor(String,SAXParser)",1,7,8
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.registerKnownDTDs(DescriptorHandler)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.setClasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.setDestdir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.setGenericJarSuffix(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.setTask(Task)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.usingBaseJarName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.validateConfigured()",2,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool.writeJar(String,File,Hashtable,String)",5,13,16
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetDeploymentTool.addVendorFiles(Hashtable,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetDeploymentTool.checkConfiguration(String,SAXParser)",4,7,7
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetDeploymentTool.getIasDescriptorName()",2,5,6
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetDeploymentTool.getPublicId()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetDeploymentTool.getVendorOutputJarFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetDeploymentTool.parseEjbFiles(String,SAXParser)",4,6,6
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetDeploymentTool.processDescriptor(String,SAXParser)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetDeploymentTool.setDebug(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetDeploymentTool.setGenericJarSuffix(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetDeploymentTool.setIashome(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetDeploymentTool.setKeepgenerated(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetDeploymentTool.setSuffix(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.Classname.Classname(String)",2,2,3
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.Classname.getClassFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.Classname.getClassName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.Classname.getPackageName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.Classname.getQualifiedClassName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.Classname.getQualifiedWithUnderscores()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.Classname.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.EjbInfo(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.addCmpDescriptor(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.checkConfiguration(File)",8,10,14
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.classesToGenerate()",2,1,3
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.destClassesModified(File)",1,4,5
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.getBeantype()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.getCmp()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.getCmpDescriptors()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.getHasession()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.getHome()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.getIiop()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.getImplementation()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.getName()",3,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.getPrimaryKey()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.getRemote()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.mustBeRecompiled(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.setBeantype(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.setCmp(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.setCmp(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.setHasession(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.setHasession(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.setHome(Classname)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.setHome(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.setIiop(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.setIiop(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.setImplementation(Classname)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.setImplementation(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.setPrimaryKey(Classname)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.setPrimaryKey(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.setRemote(Classname)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.setRemote(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.sourceClassesModified(File)",6,7,7
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbInfo.toString()",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbcException.EjbcException(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbcHandler.EjbcHandler()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbcHandler.characters(char[],int,int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbcHandler.endElement(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbcHandler.getDisplayName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbcHandler.getEjbs()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbcHandler.iasCharacters(String)",1,6,6
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbcHandler.registerDTD(String,String)",2,4,6
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbcHandler.resolveEntity(String,String)",2,4,5
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbcHandler.startElement(String,AttributeList)",1,3,5
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.EjbcHandler.stdCharacters(String)",2,9,10
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.IPlanetEjbc(File,File,File,String,SAXParser)",1,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.RedirectOutput.RedirectOutput(InputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.RedirectOutput.run()",1,3,4
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.buildArgumentList(EjbInfo)",1,8,8
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.callEjbc(String[])",1,4,5
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.checkConfiguration()",2,3,9
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.execute()",1,4,4
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.getCmpDescriptors()",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.getDisplayName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.getEjbFiles()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.getEjbs()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.log(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.main(String[])",7,13,14
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.registerDTD(String,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.setDebugOutput(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.setIasHomeDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.setRetainSource(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc.usage()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbcTask.checkConfiguration()",8,12,12
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbcTask.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbcTask.execute()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbcTask.executeEjbc(SAXParser)",1,5,5
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbcTask.getClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbcTask.getParser()",1,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbcTask.setClasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbcTask.setDebug(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbcTask.setDest(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbcTask.setEjbdescriptor(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbcTask.setIasdescriptor(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbcTask.setIashome(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbcTask.setKeepgenerated(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.InnerClassFilenameFilter.InnerClassFilenameFilter(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.InnerClassFilenameFilter.accept(File,String)",2,2,3
"org.apache.tools.ant.taskdefs.optional.ejb.JbossDeploymentTool.addVendorFiles(Hashtable,String)",3,3,4
"org.apache.tools.ant.taskdefs.optional.ejb.JbossDeploymentTool.getParent()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JbossDeploymentTool.getVendorOutputJarFile(String)",3,3,4
"org.apache.tools.ant.taskdefs.optional.ejb.JbossDeploymentTool.setSuffix(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JbossDeploymentTool.validateConfigured()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.addAllFiles(File,String,Hashtable)",2,4,5
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.addGenICGeneratedFiles(File,Hashtable)",4,20,21
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.addVendorFiles(Hashtable,String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.checkConfiguration(String,SAXParser)",6,7,11
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.createTempDir()",2,1,2
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.deleteAllFiles(File)",1,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.getGenicClassName(Path)",1,4,4
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.getJarBaseName(String)",1,6,6
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.getJonasDescriptorName()",2,4,6
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.getVendorOutputJarFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.processDescriptor(String,SAXParser)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.registerKnownDTDs(DescriptorHandler)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.setAdditionalargs(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.setJarsuffix(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.setJavac(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.setJavacopts(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.setJonasroot(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.setKeepgenerated(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.setKeepgeneric(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.setNocompil(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.setNogenic(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.setNovalidation(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.setOrb(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.setRmicopts(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.setSecpropag(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool.writeJar(String,File,Hashtable,String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.createWLClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.execute()",3,3,4
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.executeWLS()",4,3,7
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.executeWLS6()",5,3,7
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.findSecurityPolicyFile(String)",2,3,5
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.setArgs(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.setBEAHome(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.setClasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.setDomain(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.setHome(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.setJvmargs(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.setPKPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.setPolicy(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.setProperties(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.setUsername(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.setWeblogicMainClass(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLRun.setWlclasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLStop.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.WLStop.execute()",3,1,5
"org.apache.tools.ant.taskdefs.optional.ejb.WLStop.setBEAHome(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLStop.setClasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLStop.setDelay(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLStop.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLStop.setUrl(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WLStop.setUser(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.addSysproperty(Variable)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.addVendorFiles(Hashtable,String)",3,6,6
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.buildWeblogicJar(File,File,String)",3,21,23
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.createWLClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.getClassLoaderFromJar(File)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.getEjbcClass()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.getJvmDebugLevel()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.getVendorOutputJarFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.getWeblogicDescriptorHandler(File)",1,3,3
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.isRebuildRequired(File,File)",8,28,32
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.registerKnownDTDs(DescriptorHandler)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setArgs(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setCompiler(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setEJBdtd(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setEjbcClass(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setJvmDebugLevel(Integer)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setJvmargs(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setKeepgenerated(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setKeepgeneric(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setNewCMP(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setNoEJBC(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setOldCMP(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setOutputDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setRebuild(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setSuffix(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setWLClasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setWLdtd(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.setWeblogicdtd(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.validateConfigured()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicDeploymentTool.writeJar(String,File,Hashtable,String)",1,4,4
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicTOPLinkDeploymentTool.addVendorFiles(Hashtable,String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicTOPLinkDeploymentTool.getDescriptorHandler(File)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicTOPLinkDeploymentTool.setToplinkdescriptor(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicTOPLinkDeploymentTool.setToplinkdtd(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WeblogicTOPLinkDeploymentTool.validateConfigured()",2,1,2
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.DBVendor.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.addVendorFiles(Hashtable,String)",2,7,9
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.buildWebsphereJar(File,File)",1,7,7
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.createWASClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.getClassLoaderFromJar(File)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.getDescriptorHandler(File)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.getOptions()",1,12,12
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.getVendorOutputJarFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.getWebsphereDescriptorHandler(File)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.isRebuildRequired(File,File)",7,27,30
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setCodegen(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setDbname(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setDbschema(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setDbvendor(DBVendor)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setEJBdtd(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setEjbdeploy(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setKeepgeneric(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setNewCMP(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setNoinform(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setNovalidate(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setNowarn(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setOldCMP(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setQuiet(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setRebuild(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setRmicoptions(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setSuffix(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setTempdir(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setTrace(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setUse35(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.setWASClasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.validateConfigured()",3,2,3
"org.apache.tools.ant.taskdefs.optional.ejb.WebsphereDeploymentTool.writeJar(String,File,Hashtable,String)",1,5,5
"org.apache.tools.ant.taskdefs.optional.extension.Compatability.Compatability(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Compatability.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Compatibility.Compatibility(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Compatibility.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.DeweyDecimal.DeweyDecimal(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.DeweyDecimal.DeweyDecimal(int[])",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Extension.Extension(String,String,String,String,String,String,String)",4,1,6
"org.apache.tools.ant.taskdefs.optional.extension.Extension.addExtension(Extension,Attributes)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Extension.addExtension(Extension,String,Attributes)",1,7,7
"org.apache.tools.ant.taskdefs.optional.extension.Extension.getAvailable(Manifest)",2,5,6
"org.apache.tools.ant.taskdefs.optional.extension.Extension.getCompatibilityWith(Extension)",8,7,11
"org.apache.tools.ant.taskdefs.optional.extension.Extension.getExtension(Attributes,ArrayList,Name)",2,3,4
"org.apache.tools.ant.taskdefs.optional.extension.Extension.getExtension(String,Attributes)",2,1,2
"org.apache.tools.ant.taskdefs.optional.extension.Extension.getExtensionName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Extension.getImplementationURL()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Extension.getImplementationVendor()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Extension.getImplementationVendorID()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Extension.getImplementationVersion()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Extension.getListed(Manifest,Name)",1,3,3
"org.apache.tools.ant.taskdefs.optional.extension.Extension.getOptions(Manifest)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Extension.getRequired(Manifest)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Extension.getSpecificationVendor()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Extension.getSpecificationVersion()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Extension.getTrimmedString(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.extension.Extension.isCompatible(DeweyDecimal,DeweyDecimal)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Extension.isCompatibleWith(Extension)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Extension.split(String,String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.extension.Extension.toString()",1,7,7
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter.setExtensionName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter.setImplementationUrl(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter.setImplementationVendor(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter.setImplementationVendorId(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter.setImplementationVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter.setRefid(Reference)",3,3,9
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter.setSpecificationVendor(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter.setSpecificationVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter.toExtension()",2,3,4
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionAdapter.verifyNotAReference()",2,2,2
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionSet.addExtension(ExtensionAdapter)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionSet.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionSet.addLibfileset(LibFileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionSet.setRefid(Reference)",3,4,4
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionSet.toExtensions(Project)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionSet.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionUtil.ExtensionUtil()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionUtil.addExtension(List,Extension,boolean,boolean)",1,7,8
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionUtil.extractExtensions(Project,List,List)",1,3,3
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionUtil.getExtensions(Project,List)",1,4,4
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionUtil.getManifest(File)",2,2,3
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionUtil.loadExtensions(File,List,boolean,boolean)",1,3,3
"org.apache.tools.ant.taskdefs.optional.extension.ExtensionUtil.toExtensions(List)",1,2,2
"org.apache.tools.ant.taskdefs.optional.extension.ExtraAttribute.getName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtraAttribute.getValue()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtraAttribute.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtraAttribute.setValue(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.ExtraAttribute.validate()",3,1,3
"org.apache.tools.ant.taskdefs.optional.extension.JarLibAvailableTask.addConfiguredExtension(ExtensionAdapter)",2,1,2
"org.apache.tools.ant.taskdefs.optional.extension.JarLibAvailableTask.addConfiguredExtensionSet(ExtensionSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibAvailableTask.execute()",1,7,7
"org.apache.tools.ant.taskdefs.optional.extension.JarLibAvailableTask.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibAvailableTask.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibAvailableTask.validate()",5,4,8
"org.apache.tools.ant.taskdefs.optional.extension.JarLibDisplayTask.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibDisplayTask.execute()",1,4,4
"org.apache.tools.ant.taskdefs.optional.extension.JarLibDisplayTask.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibDisplayTask.validate()",4,4,7
"org.apache.tools.ant.taskdefs.optional.extension.JarLibManifestTask.addConfiguredAttribute(ExtraAttribute)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibManifestTask.addConfiguredDepends(ExtensionSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibManifestTask.addConfiguredExtension(ExtensionAdapter)",2,1,2
"org.apache.tools.ant.taskdefs.optional.extension.JarLibManifestTask.addConfiguredOptions(ExtensionSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibManifestTask.appendExtensionList(Attributes,Name,String,int)",1,2,2
"org.apache.tools.ant.taskdefs.optional.extension.JarLibManifestTask.appendExtraAttributes(Attributes)",1,2,2
"org.apache.tools.ant.taskdefs.optional.extension.JarLibManifestTask.appendLibraryList(Attributes,String,ArrayList)",1,2,2
"org.apache.tools.ant.taskdefs.optional.extension.JarLibManifestTask.execute()",1,3,3
"org.apache.tools.ant.taskdefs.optional.extension.JarLibManifestTask.setDestfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibManifestTask.toExtensions(ArrayList)",1,3,3
"org.apache.tools.ant.taskdefs.optional.extension.JarLibManifestTask.validate()",3,2,4
"org.apache.tools.ant.taskdefs.optional.extension.JarLibManifestTask.writeManifest(Manifest)",1,2,3
"org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask.addConfiguredAnt(AntResolver)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask.addConfiguredExtension(ExtensionAdapter)",2,1,2
"org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask.addConfiguredLocation(LocationResolver)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask.addConfiguredUrl(URLResolver)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask.checkExtension(File)",6,4,6
"org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask.execute()",4,5,6
"org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask.missingExtension()",2,1,2
"org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask.setCheckExtension(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask.setLibraryProperty(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.JarLibResolveTask.validate()",3,1,3
"org.apache.tools.ant.taskdefs.optional.extension.LibFileSet.getUrlBase()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.LibFileSet.isIncludeImpl()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.LibFileSet.isIncludeURL()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.LibFileSet.setIncludeImpl(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.LibFileSet.setIncludeUrl(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.LibFileSet.setUrlBase(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.LibraryDisplayer.displayLibrary(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.LibraryDisplayer.displayLibrary(File,Manifest)",2,9,13
"org.apache.tools.ant.taskdefs.optional.extension.LibraryDisplayer.displaySpecification(Specification)",1,3,3
"org.apache.tools.ant.taskdefs.optional.extension.LibraryDisplayer.getSpecifications(Manifest)",1,2,2
"org.apache.tools.ant.taskdefs.optional.extension.LibraryDisplayer.printLine(int)",1,2,2
"org.apache.tools.ant.taskdefs.optional.extension.Specification.Specification(String,String,String,String,String,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Specification.Specification(String,String,String,String,String,String,String[])",3,2,5
"org.apache.tools.ant.taskdefs.optional.extension.Specification.getCompatibilityWith(Specification)",8,7,11
"org.apache.tools.ant.taskdefs.optional.extension.Specification.getImplementationTitle()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Specification.getImplementationVendor()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Specification.getImplementationVersion()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Specification.getSections()",2,1,2
"org.apache.tools.ant.taskdefs.optional.extension.Specification.getSpecification(String,Attributes)",7,1,7
"org.apache.tools.ant.taskdefs.optional.extension.Specification.getSpecificationTitle()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Specification.getSpecificationVendor()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Specification.getSpecificationVersion()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Specification.getSpecifications(Manifest)",2,3,4
"org.apache.tools.ant.taskdefs.optional.extension.Specification.getTrimmedString(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.extension.Specification.isCompatible(DeweyDecimal,DeweyDecimal)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Specification.isCompatibleWith(Specification)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.Specification.isEqual(Specification,Specification)",1,6,6
"org.apache.tools.ant.taskdefs.optional.extension.Specification.mergeInSections(Specification,ArrayList)",2,1,2
"org.apache.tools.ant.taskdefs.optional.extension.Specification.removeDuplicates(ArrayList)",1,5,5
"org.apache.tools.ant.taskdefs.optional.extension.Specification.toString()",1,6,6
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.AntResolver.resolve(Extension,Project)",1,3,3
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.AntResolver.setAntfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.AntResolver.setDestfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.AntResolver.setTarget(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.AntResolver.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.AntResolver.validate()",3,1,3
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.LocationResolver.resolve(Extension,Project)",2,1,2
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.LocationResolver.setLocation(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.LocationResolver.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.URLResolver.getDest()",1,4,5
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.URLResolver.resolve(Extension,Project)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.URLResolver.setDestdir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.URLResolver.setDestfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.URLResolver.setUrl(URL)",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.URLResolver.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.extension.resolvers.URLResolver.validate()",4,1,6
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.execute()",7,10,13
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.loadResourceMap(FileInputStream)",9,15,16
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.loadResourceMaps()",1,7,7
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.processBundle(String,int,boolean)",2,3,4
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.setBundle(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.setBundleCountry(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.setBundleEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.setBundleLanguage(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.setBundleVariant(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.setDestEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.setEndToken(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.setForceOverwrite(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.setSrcEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.setStartToken(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.setToDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.i18n.Translate.translate()",6,19,24
"org.apache.tools.ant.taskdefs.optional.image.Image.add(ImageOperation)",1,1,1
"org.apache.tools.ant.taskdefs.optional.image.Image.addDraw(Draw)",1,1,1
"org.apache.tools.ant.taskdefs.optional.image.Image.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.image.Image.addImageOperation(ImageOperation)",1,1,1
"org.apache.tools.ant.taskdefs.optional.image.Image.addRotate(Rotate)",1,1,1
"org.apache.tools.ant.taskdefs.optional.image.Image.addScale(Scale)",1,1,1
"org.apache.tools.ant.taskdefs.optional.image.Image.execute()",1,11,11
"org.apache.tools.ant.taskdefs.optional.image.Image.processFile(File)",3,11,13
"org.apache.tools.ant.taskdefs.optional.image.Image.setDestDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.image.Image.setEncoding(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.image.Image.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.image.Image.setGc(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.image.Image.setOverwrite(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.image.Image.setSrcdir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.image.Image.validateAttributes()",3,2,5
"org.apache.tools.ant.taskdefs.optional.j2ee.AbstractHotDeploymentTool.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.j2ee.AbstractHotDeploymentTool.getClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.AbstractHotDeploymentTool.getPassword()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.AbstractHotDeploymentTool.getServer()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.AbstractHotDeploymentTool.getTask()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.AbstractHotDeploymentTool.getUserName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.AbstractHotDeploymentTool.setClasspath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.AbstractHotDeploymentTool.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.AbstractHotDeploymentTool.setServer(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.AbstractHotDeploymentTool.setTask(ServerDeploy)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.AbstractHotDeploymentTool.setUserName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.AbstractHotDeploymentTool.validateAttributes()",4,2,4
"org.apache.tools.ant.taskdefs.optional.j2ee.GenericHotDeploymentTool.createArg()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.GenericHotDeploymentTool.createJvmarg()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.GenericHotDeploymentTool.deploy()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.GenericHotDeploymentTool.getClassName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.GenericHotDeploymentTool.getJava()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.GenericHotDeploymentTool.isActionValid()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.GenericHotDeploymentTool.setClassName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.GenericHotDeploymentTool.setTask(ServerDeploy)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.GenericHotDeploymentTool.validateAttributes()",2,1,2
"org.apache.tools.ant.taskdefs.optional.j2ee.JonasHotDeploymentTool.getClasspath()",1,3,3
"org.apache.tools.ant.taskdefs.optional.j2ee.JonasHotDeploymentTool.isActionValid()",3,2,3
"org.apache.tools.ant.taskdefs.optional.j2ee.JonasHotDeploymentTool.setDavidhost(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.JonasHotDeploymentTool.setDavidport(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.JonasHotDeploymentTool.setJonasroot(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.JonasHotDeploymentTool.setOrb(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.JonasHotDeploymentTool.validateAttributes()",3,14,16
"org.apache.tools.ant.taskdefs.optional.j2ee.ServerDeploy.addGeneric(GenericHotDeploymentTool)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.ServerDeploy.addJonas(JonasHotDeploymentTool)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.ServerDeploy.addWeblogic(WebLogicHotDeploymentTool)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.ServerDeploy.execute()",1,2,2
"org.apache.tools.ant.taskdefs.optional.j2ee.ServerDeploy.getAction()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.ServerDeploy.getSource()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.ServerDeploy.setAction(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.ServerDeploy.setSource(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.WebLogicHotDeploymentTool.buildArgsPrefix()",1,3,4
"org.apache.tools.ant.taskdefs.optional.j2ee.WebLogicHotDeploymentTool.buildDeployArgs()",1,1,2
"org.apache.tools.ant.taskdefs.optional.j2ee.WebLogicHotDeploymentTool.buildListArgs()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.WebLogicHotDeploymentTool.buildUndeployArgs()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.WebLogicHotDeploymentTool.deploy()",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.WebLogicHotDeploymentTool.getArguments()",1,6,6
"org.apache.tools.ant.taskdefs.optional.j2ee.WebLogicHotDeploymentTool.isActionValid()",3,2,3
"org.apache.tools.ant.taskdefs.optional.j2ee.WebLogicHotDeploymentTool.setApplication(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.WebLogicHotDeploymentTool.setComponent(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.WebLogicHotDeploymentTool.setDebug(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.j2ee.WebLogicHotDeploymentTool.validateAttributes()",5,7,11
"org.apache.tools.ant.taskdefs.optional.javacc.JJDoc.JJDoc()",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJDoc.createOutputFileName(File,String,boolean)",1,6,7
"org.apache.tools.ant.taskdefs.optional.javacc.JJDoc.execute()",4,6,9
"org.apache.tools.ant.taskdefs.optional.javacc.JJDoc.setJavacchome(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJDoc.setOnetable(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJDoc.setOutputfile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJDoc.setTarget(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJDoc.setText(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.JJTree()",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.createOutputFileName(File,String,String)",1,8,8
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.execute()",6,7,11
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.getDefaultOutputDirectory()",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.getRoot(File)",1,2,2
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.makeOutputFileRelative(String)",1,3,4
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.setBuildnodefiles(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.setJavacchome(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.setMulti(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.setNodedefaultvoid(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.setNodefactory(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.setNodepackage(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.setNodeprefix(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.setNodescopehook(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.setNodeusesparser(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.setOutputdirectory(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.setOutputfile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.setStatic(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.setTarget(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.setVisitor(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.setVisitorException(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JJTree.validateOutputFile(String,String)",4,5,7
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.JavaCC()",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.execute()",5,6,8
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.getArchiveFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.getArchiveLocationIndex(File)",4,3,5
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.getMainClass(File,int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.getMainClass(Path,int)",5,5,13
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.getMajorVersionNumber(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.getOutputJavaFile(File,File)",1,3,4
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setBuildparser(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setBuildtokenmanager(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setCachetokens(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setChoiceambiguitycheck(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setCommontokenaction(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setDebuglookahead(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setDebugparser(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setDebugtokenmanager(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setErrorreporting(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setForcelacheck(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setIgnorecase(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setJavacchome(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setJavaunicodeescape(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setKeeplinecolumn(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setLookahead(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setOptimizetokenmanager(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setOtherambiguityCheck(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setOutputdirectory(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setSanitycheck(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setStatic(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setTarget(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setUnicodeinput(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setUsercharstream(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javacc.JavaCC.setUsertokenmanager(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javah.JavahAdapterFactory.getAdapter(String,ProjectComponent)",4,6,6
"org.apache.tools.ant.taskdefs.optional.javah.JavahAdapterFactory.getDefault()",2,1,2
"org.apache.tools.ant.taskdefs.optional.javah.JavahAdapterFactory.resolveClassName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.javah.Kaffeh.compile(Javah)",2,2,3
"org.apache.tools.ant.taskdefs.optional.javah.Kaffeh.setupKaffehCommand(Javah)",1,7,7
"org.apache.tools.ant.taskdefs.optional.javah.SunJavah.compile(Javah)",1,4,4
"org.apache.tools.ant.taskdefs.optional.javah.SunJavah.setupJavahCommand(Javah)",2,12,12
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.FormatAttribute.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.addClasspathEntry(String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.createClassespath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.createExclude()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.createJvmarg(CommandlineJava)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.createSourcespath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.createWatchdog()",2,1,2
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.execute()",4,11,13
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.executeAsForked(CommandlineJava,ExecuteWatchdog)",7,17,17
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.executeInVM(CommandlineJava)",8,17,19
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.getClassespath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.getClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.getDir()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.getExcludes()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.getFork()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.getHaltonerror()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.getOutputFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.getSourcespath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.getTimeout()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.setClasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.setDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.setFork(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.setFormat(FormatAttribute)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.setHaltonerror(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.setIncluderuntime(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.setJvm(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.setOutputFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask.setTimeout(Long)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jlink.ClassNameReader.getClassName(InputStream)",2,1,2
"org.apache.tools.ant.taskdefs.optional.jlink.ConstantPool.ConstantPool(DataInput)",2,3,11
"org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask.createAddfiles()",1,2,2
"org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask.createMergefiles()",1,2,2
"org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask.execute()",3,5,7
"org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask.haveAddFiles()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask.haveEntries(Path)",3,1,3
"org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask.haveMergeFiles()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask.setAddfiles(Path)",1,2,2
"org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask.setCompress(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask.setMergefiles(Path)",1,2,2
"org.apache.tools.ant.taskdefs.optional.jlink.JlinkTask.setOutfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.addAddFile(String)",2,1,2
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.addAddFiles(String[])",2,2,3
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.addDirContents(ZipOutputStream,File,String,boolean)",1,3,3
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.addFile(ZipOutputStream,File,String,boolean)",2,2,3
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.addMergeFile(String)",2,1,2
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.addMergeFiles(String[])",2,2,3
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.addToOutputStream(ZipOutputStream,InputStream,ZipEntry)",1,3,3
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.calcChecksum(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.calcChecksum(InputStream)",1,2,2
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.getEntryName(File,String)",3,4,6
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.link()",1,8,9
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.main(String[])",1,4,4
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.mergeZipJarContents(ZipOutputStream,File)",5,5,7
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.processEntry(ZipFile,ZipEntry)",1,5,6
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.setCompression(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jlink.jlink.setOutfile(String)",2,1,2
"org.apache.tools.ant.taskdefs.optional.jsp.Jasper41Mangler.mangleChar(char)",1,2,3
"org.apache.tools.ant.taskdefs.optional.jsp.Jasper41Mangler.mapJspToJavaName(File)",1,6,6
"org.apache.tools.ant.taskdefs.optional.jsp.Jasper41Mangler.mapPath(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.WebAppParameter.getDirectory()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.WebAppParameter.setBaseDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.addWebApp(WebAppParameter)",2,1,2
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.createCompilerclasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.deleteEmptyJavaFiles()",1,5,5
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.doCompilation(JspCompilerAdapter)",3,3,3
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.execute()",9,11,12
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.getActualDestDir()",1,2,2
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.getClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.getCompileList()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.getCompilerclasspath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.getDestdir()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.getFailonerror()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.getIeplugin()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.getPackage()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.getSrcDir()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.getUribase()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.getUriroot()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.getVerbose()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.getWebApp()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.getWebinc()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.getWebxml()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.isCompileNeeded(File,File)",1,4,4
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.isMapped()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.mapToJavaFile(JspMangler,File,File,File)",2,1,2
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.resetFileLists()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.scanDir(File,File,JspMangler,String[])",3,4,5
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.setClasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.setCompiler(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.setCompilerclasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.setDestdir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.setFailonerror(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.setIeplugin(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.setMapped(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.setPackage(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.setSrcDir(Path)",1,2,2
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.setUribase(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.setUriroot(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.setVerbose(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.setWebinc(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspC.setWebxml(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspNameMangler.mangleChar(char)",1,2,4
"org.apache.tools.ant.taskdefs.optional.jsp.JspNameMangler.mapJspToBaseName(File)",3,5,6
"org.apache.tools.ant.taskdefs.optional.jsp.JspNameMangler.mapJspToJavaName(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspNameMangler.mapPath(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.JspNameMangler.stripExtension(File)",1,2,2
"org.apache.tools.ant.taskdefs.optional.jsp.WLJspc.createClasspath()",1,2,2
"org.apache.tools.ant.taskdefs.optional.jsp.WLJspc.execute()",4,10,10
"org.apache.tools.ant.taskdefs.optional.jsp.WLJspc.replaceString(String,String,String)",1,2,3
"org.apache.tools.ant.taskdefs.optional.jsp.WLJspc.scanDir(String[])",3,8,8
"org.apache.tools.ant.taskdefs.optional.jsp.WLJspc.setClasspath(Path)",1,2,2
"org.apache.tools.ant.taskdefs.optional.jsp.WLJspc.setDest(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.WLJspc.setPackage(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.WLJspc.setSrc(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.DefaultJspCompilerAdapter.addArg(CommandlineJava,String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.DefaultJspCompilerAdapter.addArg(CommandlineJava,String,File)",1,2,2
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.DefaultJspCompilerAdapter.addArg(CommandlineJava,String,String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.DefaultJspCompilerAdapter.getJspc()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.DefaultJspCompilerAdapter.getProject()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.DefaultJspCompilerAdapter.implementsOwnDependencyChecking()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.DefaultJspCompilerAdapter.logAndAddFilesToCompile(JspC,Vector,CommandlineJava)",1,3,3
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.DefaultJspCompilerAdapter.setJspc(JspC)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.JasperC.JasperC(JspMangler)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.JasperC.createMangler()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.JasperC.execute()",2,5,5
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.JasperC.getClasspath()",2,2,2
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.JasperC.isTomcat5x()",1,2,3
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.JasperC.setupJasperCommand()",1,4,4
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.JspCompilerAdapterFactory.JspCompilerAdapterFactory()",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.JspCompilerAdapterFactory.getCompiler(String,Task)",1,1,1
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.JspCompilerAdapterFactory.getCompiler(String,Task,AntClassLoader)",3,1,3
"org.apache.tools.ant.taskdefs.optional.jsp.compilers.JspCompilerAdapterFactory.resolveClassName(String,AntClassLoader)",1,1,4
"org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer.AggregateTransformer(Task)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer.Format.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer.checkOptions()",1,3,3
"org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer.getDocumentBuilderFactory()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer.getStylesheetSystemId()",4,2,5
"org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer.setExtension(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer.setFormat(Format)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer.setStyledir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer.setTodir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer.setXmlDocument(Document)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer.setXmlfile(File)",1,1,2
"org.apache.tools.ant.taskdefs.optional.junit.AggregateTransformer.transform()",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.ArrayEnumeration.ArrayEnumeration(Object[])",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.ArrayEnumeration.hasMoreElements()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.ArrayEnumeration.nextElement()",2,1,2
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.addFormatter(FormatterElement)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.getErrorProperty()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.getFailureProperty()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.getFiltertrace()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.getFork()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.getHaltonerror()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.getHaltonfailure()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.getTodir()",2,2,2
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.setErrorProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.setFailureProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.setFiltertrace(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.setFork(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.setHaltonerror(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.setHaltonfailure(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.setIf(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.setTodir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BaseTest.setUnless(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BatchTest.BatchTest(Project)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BatchTest.add(ResourceCollection)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BatchTest.addFileSet(FileSet)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.BatchTest.addTestsTo(Vector)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.BatchTest.createAllJUnitTest()",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.BatchTest.createJUnitTest(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.BatchTest.elements()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BatchTest.getFilenames()",1,5,5
"org.apache.tools.ant.taskdefs.optional.junit.BatchTest.javaToClass(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter.BriefJUnitResultFormatter()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter.addError(Test,Throwable)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter.addFailure(Test,AssertionFailedError)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter.addFailure(Test,Throwable)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter.endTest(Test)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter.endTestSuite(JUnitTest)",1,7,8
"org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter.formatError(String,Test,Throwable)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter.formatTest(Test)",2,2,2
"org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter.setOutput(OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter.setSystemError(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter.setSystemOutput(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter.startTest(Test)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter.startTestSuite(JUnitTest)",2,1,2
"org.apache.tools.ant.taskdefs.optional.junit.CompoundEnumeration.CompoundEnumeration(Enumeration[])",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.CompoundEnumeration.hasMoreElements()",3,3,4
"org.apache.tools.ant.taskdefs.optional.junit.CompoundEnumeration.nextElement()",2,2,2
"org.apache.tools.ant.taskdefs.optional.junit.DOMUtil.DOMUtil()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.DOMUtil.NodeListImpl.getLength()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.DOMUtil.NodeListImpl.item(int)",1,1,2
"org.apache.tools.ant.taskdefs.optional.junit.DOMUtil.getChildByTagName(Node,String)",4,4,6
"org.apache.tools.ant.taskdefs.optional.junit.DOMUtil.getNodeAttribute(Node,String)",2,2,2
"org.apache.tools.ant.taskdefs.optional.junit.DOMUtil.importNode(Node,Node)",2,7,15
"org.apache.tools.ant.taskdefs.optional.junit.DOMUtil.listChildNodes(Node,NodeFilter,boolean)",1,6,6
"org.apache.tools.ant.taskdefs.optional.junit.Enumerations.Enumerations()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.Enumerations.fromArray(Object[])",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.Enumerations.fromCompound(Enumeration[])",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.TypeAttribute.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.createFormatter()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.createFormatter(ClassLoader)",4,2,11
"org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.getClassname()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.getExtension()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.getUseFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.setClassname(String)",1,4,4
"org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.setExtension(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.setIf(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.setOutfile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.setOutput(OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.setType(TypeAttribute)",1,3,3
"org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.setUnless(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.setUseFile(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.FormatterElement.shouldUse(Task)",3,4,5
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.ForkMode.ForkMode()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.ForkMode.ForkMode(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.ForkMode.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.ForkedTestConfiguration.ForkedTestConfiguration(JUnitTest)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.ForkedTestConfiguration.ForkedTestConfiguration(boolean,boolean,boolean,String,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.ForkedTestConfiguration.equals(Object)",2,10,13
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.ForkedTestConfiguration.hashCode()",1,1,4
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.JUnitLogOutputStream.JUnitLogOutputStream(Task,int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.JUnitLogOutputStream.processLine(String,int)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.JUnitLogStreamHandler.JUnitLogStreamHandler(Task,int,int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.JUnitTask()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.SplitLoader.SplitLoader(ClassLoader,Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.SplitLoader.isSplit(String)",3,3,4
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.SplitLoader.loadClass(String,boolean)",3,3,4
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.SummaryAttribute.asBoolean()",1,4,4
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.SummaryAttribute.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.actOnTestResult(TestResultHolder,JUnitTest,String)",3,10,18
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.actOnTestResult(int,boolean,JUnitTest,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.addAssertions(Assertions)",2,1,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.addClasspathEntry(String)",2,3,3
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.addConfiguredSysproperty(Variable)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.addEnv(Variable)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.addFormatter(FormatterElement)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.addSysproperty(Variable)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.addSyspropertyset(PropertySet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.addTest(JUnitTest)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.addVmExit(JUnitTest,JUnitResultFormatterMirror,OutputStream,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.allTests()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.createBatchTest()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.createBootclasspath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.createClassLoader()",1,6,7
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.createClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.createJvmarg()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.createMirror(JUnitTask,ClassLoader)",2,4,4
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.createPermissions()",1,1,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.createTempPropertiesFile(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.createWatchdog()",2,1,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.deleteClassLoader()",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute()",1,8,8
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTest)",1,4,4
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(List)",1,7,7
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeAsForked(JUnitTest,ExecuteWatchdog,File)",2,20,22
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTest)",1,14,14
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(Enumeration,boolean)",1,6,6
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.getCommandline()",1,1,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.getDefaultOutput()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.getIndividualTests()",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.getOutput(FormatterElement,JUnitTest)",2,2,3
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.handleErrorFlush(String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.handleErrorOutput(String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.handleFlush(String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.handleInput(byte[],int,int)",2,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.handleOutput(String)",1,4,4
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.init()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.logTimeout(FormatterElement[],JUnitTest)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.logVmCrash(FormatterElement[],JUnitTest)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.logVmExit(FormatterElement[],JUnitTest,String)",1,4,6
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.mergeFormatters(JUnitTest)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setCloneVm(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setDir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setErrorProperty(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setFailureProperty(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setFiltertrace(boolean)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setFork(boolean)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setForkMode(ForkMode)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setHaltonerror(boolean)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setHaltonfailure(boolean)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setIncludeantruntime(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setJvm(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setMaxmemory(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setNewenvironment(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setPrintsummary(SummaryAttribute)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setReloading(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setShowOutput(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setTempdir(File)",3,4,4
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.setTimeout(Integer)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTaskMirrorImpl.JUnitTaskMirrorImpl(JUnitTask)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTaskMirrorImpl.addVmExit(JUnitTest,JUnitResultFormatterMirror,OutputStream,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTaskMirrorImpl.newJUnitTestRunner(JUnitTest,boolean,boolean,boolean,boolean,boolean,AntClassLoader)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTaskMirrorImpl.newSummaryJUnitResultFormatter()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.JUnitTest()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.JUnitTest(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.JUnitTest(String,boolean,boolean,boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.addFormattersTo(Vector)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.clone()",1,2,3
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.errorCount()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.failureCount()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.getFormatters()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.getName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.getOutfile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.getProperties()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.getRunTime()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.runCount()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.setCounts(long,long,long)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.setOutfile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.setProperties(Hashtable)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.setRunTime(long)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTest.shouldRun(Project)",3,4,5
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.JUnitTestRunner(JUnitTest,boolean,boolean,boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.JUnitTestRunner(JUnitTest,boolean,boolean,boolean,ClassLoader)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.JUnitTestRunner(JUnitTest,boolean,boolean,boolean,boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.JUnitTestRunner(JUnitTest,boolean,boolean,boolean,boolean,ClassLoader)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.JUnitTestRunner(JUnitTest,boolean,boolean,boolean,boolean,boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.JUnitTestRunner(JUnitTest,boolean,boolean,boolean,boolean,boolean,ClassLoader)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.addError(Test,Throwable)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.addFailure(Test,AssertionFailedError)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.addFailure(Test,Throwable)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.addFormatter(JUnitResultFormatter)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.addFormatter(JUnitResultFormatterMirror)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.createAndStoreFormatter(String)",1,4,4
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.endTest(Test)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.filterLine(String)",3,2,3
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.filterStack(String)",2,3,5
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.findJUnit4FailureErrorCount(TestResult)",1,4,5
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.fireEndTestSuite()",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.fireStartTestSuite()",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.getFilteredTrace(Throwable)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.getRetCode()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.handleErrorFlush(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.handleErrorOutput(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.handleFlush(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.handleInput(byte[],int,int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.handleOutput(String)",1,4,4
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTest,boolean,boolean,boolean,boolean,boolean,Properties)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.logTestListenerEvent(String)",1,2,3
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(String[])",1,19,24
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.registerNonCrash(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run()",1,17,21
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.sendOutAndErr(String,String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.setPermissions(Permissions)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.startTest(Test)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.transferFormatters(JUnitTestRunner,JUnitTest)",1,4,4
"org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.wrapListener(TestListener)",1,6,8
"org.apache.tools.ant.taskdefs.optional.junit.JUnitVersionHelper.getTestCaseName(Test)",5,8,11
"org.apache.tools.ant.taskdefs.optional.junit.OutErrSummaryJUnitResultFormatter.OutErrSummaryJUnitResultFormatter()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.PlainJUnitResultFormatter.PlainJUnitResultFormatter()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.PlainJUnitResultFormatter.addError(Test,Throwable)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.PlainJUnitResultFormatter.addFailure(Test,AssertionFailedError)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.PlainJUnitResultFormatter.addFailure(Test,Throwable)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.PlainJUnitResultFormatter.endTest(Test)",2,2,3
"org.apache.tools.ant.taskdefs.optional.junit.PlainJUnitResultFormatter.endTestSuite(JUnitTest)",2,7,9
"org.apache.tools.ant.taskdefs.optional.junit.PlainJUnitResultFormatter.formatError(String,Test,Throwable)",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.PlainJUnitResultFormatter.setOutput(OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.PlainJUnitResultFormatter.setSystemError(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.PlainJUnitResultFormatter.setSystemOutput(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.PlainJUnitResultFormatter.startTest(Test)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.PlainJUnitResultFormatter.startTestSuite(JUnitTest)",2,1,3
"org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter.SummaryJUnitResultFormatter()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter.addError(Test,Throwable)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter.addFailure(Test,AssertionFailedError)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter.addFailure(Test,Throwable)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter.endTest(Test)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter.endTestSuite(JUnitTest)",1,7,10
"org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter.setOutput(OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter.setSystemError(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter.setSystemOutput(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter.setWithOutAndErr(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter.startTest(Test)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter.startTestSuite(JUnitTest)",1,1,2
"org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.XMLJUnitResultFormatter()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.addError(Test,Throwable)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.addFailure(Test,AssertionFailedError)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.addFailure(Test,Throwable)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.endTest(Test)",1,3,4
"org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.endTestSuite(JUnitTest)",2,3,5
"org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.formatError(String,Test,Throwable)",1,5,5
"org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.formatOutput(String,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.getDocumentBuilder()",1,1,2
"org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.getHostname()",1,1,2
"org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.setOutput(OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.setSystemError(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.setSystemOutput(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.startTest(Test)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter.startTestSuite(JUnitTest)",1,3,4
"org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator.addFileSet(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator.addTestSuite(Element,Element)",1,3,3
"org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator.createDocument()",1,6,6
"org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator.createReport()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator.execute()",1,2,3
"org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator.getDestinationFile()",1,2,3
"org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator.getDocumentBuilder()",1,1,2
"org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator.getFiles()",1,4,4
"org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator.setTodir(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator.setTofile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator.writeDOMTree(Document,File)",2,1,2
"org.apache.tools.ant.taskdefs.optional.junit.Xalan1Executor.Xalan1Executor()",1,2,2
"org.apache.tools.ant.taskdefs.optional.junit.Xalan1Executor.execute()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.Xalan1Executor.getImplementation()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.Xalan1Executor.getProcVersion(String)",2,2,3
"org.apache.tools.ant.taskdefs.optional.junit.Xalan2Executor.execute()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.Xalan2Executor.getImplementation()",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.Xalan2Executor.getProcVersion(String)",4,5,6
"org.apache.tools.ant.taskdefs.optional.junit.XalanExecutor.getOutputStream()",2,1,2
"org.apache.tools.ant.taskdefs.optional.junit.XalanExecutor.getXSLTCVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.junit.XalanExecutor.getXalanVersion(String)",1,1,2
"org.apache.tools.ant.taskdefs.optional.junit.XalanExecutor.newInstance(AggregateTransformer)",1,3,3
"org.apache.tools.ant.taskdefs.optional.junit.XalanExecutor.setCaller(AggregateTransformer)",1,1,1
"org.apache.tools.ant.taskdefs.optional.native2ascii.DefaultNative2Ascii.DefaultNative2Ascii()",1,1,1
"org.apache.tools.ant.taskdefs.optional.native2ascii.DefaultNative2Ascii.addFiles(Commandline,ProjectComponent,File,File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.native2ascii.DefaultNative2Ascii.convert(Native2Ascii,File,File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.native2ascii.DefaultNative2Ascii.setup(Commandline,Native2Ascii)",1,2,2
"org.apache.tools.ant.taskdefs.optional.native2ascii.KaffeNative2Ascii.getN2aClass()",2,2,3
"org.apache.tools.ant.taskdefs.optional.native2ascii.KaffeNative2Ascii.run(Commandline,ProjectComponent)",2,1,2
"org.apache.tools.ant.taskdefs.optional.native2ascii.KaffeNative2Ascii.setup(Commandline,Native2Ascii)",2,1,2
"org.apache.tools.ant.taskdefs.optional.native2ascii.Native2AsciiAdapterFactory.getAdapter(String,ProjectComponent)",4,6,6
"org.apache.tools.ant.taskdefs.optional.native2ascii.Native2AsciiAdapterFactory.getDefault()",2,1,2
"org.apache.tools.ant.taskdefs.optional.native2ascii.Native2AsciiAdapterFactory.resolveClassName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.native2ascii.SunNative2Ascii.run(Commandline,ProjectComponent)",2,1,4
"org.apache.tools.ant.taskdefs.optional.native2ascii.SunNative2Ascii.setup(Commandline,Native2Ascii)",1,2,2
"org.apache.tools.ant.taskdefs.optional.net.FTP.Action.getAction()",9,11,12
"org.apache.tools.ant.taskdefs.optional.net.FTP.Action.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.AntFTPFile(AntFTPFile,String)",6,6,11
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.AntFTPFile(FTPClient,FTPFile,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.exists()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.findPathElementCaseUnsensitive(String,String)",4,3,4
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.getAbsolutePath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.getClient()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.getCurpwd()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.getFastRelativePath()",2,2,2
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.getFile(FTPFile[],String)",5,4,6
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.getLink()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.getName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.getRelativePath()",1,3,3
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.getRelativePath(String,String)",1,5,6
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.isDirectory()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.isSymbolicLink()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.isTraverseSymlinks()",1,2,2
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.setCurpwd(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPFile.toString()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPRootFile.AntFTPRootFile(FTPClient,String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPRootFile.getAbsolutePath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.AntFTPRootFile.getRelativePath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.FTPDirectoryScanner(FTPClient)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.accountForIncludedDir(String,AntFTPFile,boolean)",6,8,11
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.accountForIncludedFile(String)",1,5,5
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.checkIncludePatterns()",8,21,24
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.checkRemoteSensitivity(FTPFile[],String)",7,9,13
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.clearCaches()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.fiddleName(String)",1,4,4
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.forceRemoteSensitivityCheck()",2,3,3
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.hasBeenScanned(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.listFiles(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.listFiles(String,boolean)",4,6,7
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.scan()",1,1,4
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPDirectoryScanner.scandir(String,String,boolean)",4,17,21
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPSystemType.getDefault()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.FTPSystemType.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.Granularity.getDefault()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.Granularity.getMilliseconds(int)",4,2,4
"org.apache.tools.ant.taskdefs.optional.net.FTP.Granularity.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.LanguageCode.getDefault()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.LanguageCode.getValidLanguageCodes()",1,2,2
"org.apache.tools.ant.taskdefs.optional.net.FTP.LanguageCode.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.checkAttributes()",9,2,14
"org.apache.tools.ant.taskdefs.optional.net.FTP.configurationHasBeenSet()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.createParents(FTPClient,String)",10,9,11
"org.apache.tools.ant.taskdefs.optional.net.FTP.delFile(FTPClient,String)",3,4,4
"org.apache.tools.ant.taskdefs.optional.net.FTP.doSiteCommand(FTPClient,String)",1,4,4
"org.apache.tools.ant.taskdefs.optional.net.FTP.execute()",12,17,21
"org.apache.tools.ant.taskdefs.optional.net.FTP.executeRetryable(RetryHandler,Retryable,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.findFileName(FTPClient)",5,6,7
"org.apache.tools.ant.taskdefs.optional.net.FTP.getDefaultDateFormatConfig()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.getFile(FTPClient,String,String)",4,9,11
"org.apache.tools.ant.taskdefs.optional.net.FTP.getRecentDateFormatConfig()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.getServerLanguageCodeConfig()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.getServerTimeZoneConfig()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.getShortMonthNamesConfig()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.getSystemTypeKey()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.getTimeDiff(FTPClient)",1,4,4
"org.apache.tools.ant.taskdefs.optional.net.FTP.getTimestampGranularity()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.handleMkDirFailure(FTPClient)",2,2,5
"org.apache.tools.ant.taskdefs.optional.net.FTP.isFunctioningAsDirectory(FTPClient,String,FTPFile)",6,7,9
"org.apache.tools.ant.taskdefs.optional.net.FTP.isFunctioningAsFile(FTPClient,String,FTPFile)",3,2,3
"org.apache.tools.ant.taskdefs.optional.net.FTP.isUpToDate(FTPClient,File,String)",4,4,6
"org.apache.tools.ant.taskdefs.optional.net.FTP.listFile(FTPClient,BufferedWriter,String)",1,3,4
"org.apache.tools.ant.taskdefs.optional.net.FTP.makeRemoteDir(FTPClient,String)",5,10,13
"org.apache.tools.ant.taskdefs.optional.net.FTP.resolveFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.rmDir(FTPClient,String)",3,4,4
"org.apache.tools.ant.taskdefs.optional.net.FTP.sendFile(FTPClient,String,String)",4,7,9
"org.apache.tools.ant.taskdefs.optional.net.FTP.setAction(Action)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setAction(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setBinary(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setChmod(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setDefaultDateFormatConfig(String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.net.FTP.setDepends(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setIgnoreNoncriticalErrors(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setInitialSiteCommand(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setListing(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setNewer(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setPassive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setPort(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setPreserveLastModified(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setRecentDateFormatConfig(String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.net.FTP.setRemotedir(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setRetriesAllowed(String)",3,2,4
"org.apache.tools.ant.taskdefs.optional.net.FTP.setSeparator(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setServer(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setServerLanguageCodeConfig(LanguageCode)",1,3,3
"org.apache.tools.ant.taskdefs.optional.net.FTP.setServerTimeZoneConfig(String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.net.FTP.setShortMonthNamesConfig(String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.net.FTP.setSiteCommand(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setSkipFailedTransfers(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setSystemTypeKey(FTPSystemType)",1,3,3
"org.apache.tools.ant.taskdefs.optional.net.FTP.setTimeDiffAuto(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setTimeDiffMillis(long)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setTimestampGranularity(Granularity)",2,2,3
"org.apache.tools.ant.taskdefs.optional.net.FTP.setUmask(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setUserid(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.FTP.transferFiles(FTPClient)",2,5,5
"org.apache.tools.ant.taskdefs.optional.net.FTP.transferFiles(FTPClient,FileSet)",3,15,22
"org.apache.tools.ant.taskdefs.optional.net.FTPConfigurator.configure(FTPClient,FTP)",1,8,8
"org.apache.tools.ant.taskdefs.optional.net.MimeMail.execute()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.AntRExecClient.sendString(String,boolean)",1,3,3
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.AntRExecClient.waitForEOF(Integer)",4,13,14
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.AntRExecClient.waitForString(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.AntRExecClient.waitForString(String,Integer)",4,9,10
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.RExecRead.execute(AntRExecClient)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.RExecRead.setDefaultTimeout(Integer)",1,1,2
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.RExecRead.setTimeout(Integer)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.RExecSubTask.addText(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.RExecSubTask.execute(AntRExecClient)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.RExecSubTask.setString(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.RExecWrite.execute(AntRExecClient)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.RExecWrite.setEcho(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.createRead()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.createWrite()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.execute()",5,7,15
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.handleMultipleTasks(AntRExecClient)",1,5,7
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.login(AntRExecClient)",1,2,2
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.setCommand(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.setInitialCR(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.setPort(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.setServer(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.setTimeout(Integer)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.RExecTask.setUserid(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.SetProxy.ProxyAuth.ProxyAuth(String,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.SetProxy.ProxyAuth.getPasswordAuthentication()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.SetProxy.applyWebProxySettings()",1,11,11
"org.apache.tools.ant.taskdefs.optional.net.SetProxy.execute()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.SetProxy.setNonProxyHosts(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.SetProxy.setProxyHost(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.SetProxy.setProxyPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.SetProxy.setProxyPort(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.SetProxy.setProxyUser(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.SetProxy.setSocksProxyHost(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.SetProxy.setSocksProxyPort(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.SetProxy.traceSettingInfo()",1,1,2
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.AntTelnetClient.sendString(String,boolean)",1,3,3
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.AntTelnetClient.waitForString(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.AntTelnetClient.waitForString(String,Integer)",4,9,10
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.TelnetRead.execute(AntTelnetClient)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.TelnetRead.setDefaultTimeout(Integer)",1,1,2
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.TelnetRead.setTimeout(Integer)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.TelnetSubTask.addText(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.TelnetSubTask.execute(AntTelnetClient)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.TelnetSubTask.setString(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.TelnetWrite.execute(AntTelnetClient)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.TelnetWrite.setEcho(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.createRead()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.createWrite()",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.execute()",5,7,16
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.login(AntTelnetClient)",1,2,2
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.setInitialCR(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.setPort(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.setServer(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.setTimeout(Integer)",1,1,1
"org.apache.tools.ant.taskdefs.optional.net.TelnetTask.setUserid(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.FStatP4OutputHandler.FStatP4OutputHandler(P4Fstat)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.FStatP4OutputHandler.getExisting()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.FStatP4OutputHandler.getNonExisting()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.FStatP4OutputHandler.process(String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.perforce.P4Add.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Add.execP4Add(StringBuffer)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Add.execute()",1,6,8
"org.apache.tools.ant.taskdefs.optional.perforce.P4Add.setChangelist(int)",2,1,2
"org.apache.tools.ant.taskdefs.optional.perforce.P4Add.setCommandlength(int)",2,1,2
"org.apache.tools.ant.taskdefs.optional.perforce.P4Base.execP4Command(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Base.execP4Command(String,P4Handler)",3,12,16
"org.apache.tools.ant.taskdefs.optional.perforce.P4Base.getErrorMessage()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Base.getInError()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Base.init()",1,4,4
"org.apache.tools.ant.taskdefs.optional.perforce.P4Base.setClient(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Base.setCmdopts(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Base.setErrorMessage(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Base.setFailonerror(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Base.setGlobalopts(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Base.setInError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Base.setPort(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Base.setUser(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Base.setView(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Change.backslash(String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.perforce.P4Change.execute()",3,3,4
"org.apache.tools.ant.taskdefs.optional.perforce.P4Change.getEmptyChangeList()",5,4,5
"org.apache.tools.ant.taskdefs.optional.perforce.P4Change.setDescription(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Counter.execute()",3,3,9
"org.apache.tools.ant.taskdefs.optional.perforce.P4Counter.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Counter.setProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Counter.setValue(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Delete.execute()",2,1,3
"org.apache.tools.ant.taskdefs.optional.perforce.P4Delete.setChange(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Edit.execute()",2,1,3
"org.apache.tools.ant.taskdefs.optional.perforce.P4Edit.setChange(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Fstat.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Fstat.execP4Fstat(StringBuffer)",1,2,2
"org.apache.tools.ant.taskdefs.optional.perforce.P4Fstat.execute()",1,8,12
"org.apache.tools.ant.taskdefs.optional.perforce.P4Fstat.getLengthOfTask()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Fstat.getPasses()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Fstat.printRes(ArrayList,String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.perforce.P4Fstat.setChangelist(int)",2,1,2
"org.apache.tools.ant.taskdefs.optional.perforce.P4Fstat.setShowFilter(String)",4,3,4
"org.apache.tools.ant.taskdefs.optional.perforce.P4HandlerAdapter.setOutput(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4HandlerAdapter.setProcessErrorStream(InputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4HandlerAdapter.setProcessInputStream(OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4HandlerAdapter.setProcessOutputStream(InputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4HandlerAdapter.start()",1,3,3
"org.apache.tools.ant.taskdefs.optional.perforce.P4HandlerAdapter.stop()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Have.execute()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.execute()",4,1,18
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.getBranch()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.getChange()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.getFromfile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.getTofile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.isEnableBaselessMerges()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.isForceIntegrate()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.isLeaveTargetRevision()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.isNocopynewtargetfiles()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.isPropagatesourcefiletype()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.isRestoreDeletedRevisions()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.isReversebranchmappings()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.isSimulationMode()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.setBranch(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.setChange(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.setEnableBaselessMerges(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.setForceIntegrate(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.setFromfile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.setLeaveTargetRevision(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.setNocopynewtargetfiles(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.setPropagatesourcefiletype(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.setRestoreDeletedRevisions(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.setReversebranchmappings(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.setSimulationMode(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Integrate.setTofile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Label.execute()",1,11,12
"org.apache.tools.ant.taskdefs.optional.perforce.P4Label.setDesc(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Label.setLock(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Label.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Labelsync.execute()",2,4,9
"org.apache.tools.ant.taskdefs.optional.perforce.P4Labelsync.isAdd()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Labelsync.isDelete()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Labelsync.isSimulationmode()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Labelsync.setAdd(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Labelsync.setDelete(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Labelsync.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Labelsync.setSimulationmode(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4OutputStream.P4OutputStream(P4Handler)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4OutputStream.close()",1,2,2
"org.apache.tools.ant.taskdefs.optional.perforce.P4OutputStream.processBuffer()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4OutputStream.write(int)",1,3,4
"org.apache.tools.ant.taskdefs.optional.perforce.P4Reopen.execute()",2,1,2
"org.apache.tools.ant.taskdefs.optional.perforce.P4Reopen.setToChange(String)",2,2,3
"org.apache.tools.ant.taskdefs.optional.perforce.P4Resolve.execute()",7,5,11
"org.apache.tools.ant.taskdefs.optional.perforce.P4Resolve.getResolvemode()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Resolve.isForcetextmode()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Resolve.isMarkersforall()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Resolve.isRedoall()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Resolve.isSimulationmode()",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Resolve.setForcetextmode(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Resolve.setMarkersforall(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Resolve.setRedoall(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Resolve.setResolvemode(String)",4,2,4
"org.apache.tools.ant.taskdefs.optional.perforce.P4Resolve.setSimulationmode(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Revert.execute()",1,1,3
"org.apache.tools.ant.taskdefs.optional.perforce.P4Revert.setChange(String)",2,2,3
"org.apache.tools.ant.taskdefs.optional.perforce.P4Revert.setRevertOnlyUnchanged(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Submit.P4SubmitAdapter.P4SubmitAdapter(P4Base)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Submit.P4SubmitAdapter.process(String)",2,8,9
"org.apache.tools.ant.taskdefs.optional.perforce.P4Submit.execute()",2,2,2
"org.apache.tools.ant.taskdefs.optional.perforce.P4Submit.setChange(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Submit.setChangeProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Submit.setNeedsResolveProperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.P4Sync.execute()",1,2,4
"org.apache.tools.ant.taskdefs.optional.perforce.P4Sync.setForce(String)",2,2,3
"org.apache.tools.ant.taskdefs.optional.perforce.P4Sync.setLabel(String)",2,2,3
"org.apache.tools.ant.taskdefs.optional.perforce.SimpleP4OutputHandler.SimpleP4OutputHandler(P4Base)",1,1,1
"org.apache.tools.ant.taskdefs.optional.perforce.SimpleP4OutputHandler.process(String)",2,7,9
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.Pvcs()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.addPvcsproject(PvcsProject)",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.createFolders(File)",1,13,13
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.execute()",8,25,30
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getConfig()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getExecutable(String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getFilenameFormat()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getForce()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getIgnoreReturnCode()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getLabel()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getLineStart()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getPromotiongroup()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getPvcsbin()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getPvcsproject()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getPvcsprojects()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getRepository()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getRevision()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getUpdateOnly()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getUserId()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.getWorkspace()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.massagePCLI(File,File)",1,4,4
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.runCmd(Commandline,ExecuteStreamHandler)",1,2,2
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.setConfig(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.setFilenameFormat(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.setForce(String)",1,2,3
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.setIgnoreReturnCode(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.setLabel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.setLineStart(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.setPromotiongroup(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.setPvcsbin(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.setPvcsproject(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.setRepository(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.setRevision(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.setUpdateOnly(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.setUserId(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.Pvcs.setWorkspace(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.PvcsProject.PvcsProject()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.PvcsProject.getName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.pvcs.PvcsProject.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.assertTrue(boolean,String)",2,1,2
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.calcTargetFolder(View,Folder)",1,5,6
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.checkParameters()",2,5,6
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.execute()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.formatForDisplay(Property,Object)",3,4,4
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getExcludes()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getFolderName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getForce()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getIncludes()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getPassword()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getPrimaryDescriptor(Type)",3,2,3
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getProjectName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getRecursion()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getSecondaryDescriptor(Type)",3,3,4
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getServer()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getServerName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getServerPort()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getTargetFolder()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getTargetFolderAbsolute()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getUsername()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getVerbose()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.getViewName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.matchPatterns(String,String)",4,2,4
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.runFolder(Server,Project,View,Type,Folder,File)",1,4,4
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.runItem(Server,Project,View,Type,Folder,Item,File)",2,7,9
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.runProject(Server,Project)",3,4,4
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.runServer(Server)",3,4,4
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.runType(Server,Project,View,Type)",1,7,8
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.setExcludes(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.setFolderName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.setForce(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.setIncludes(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.setProjectName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.setRecursion(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.setServerName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.setServerPort(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.setTargetFolder(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.setTargetFolderAbsolute(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.setUsername(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.setViewName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut.shouldCheckout(String)",1,1,2
"org.apache.tools.ant.taskdefs.optional.script.ScriptDef.Attribute.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.script.ScriptDef.NestedElement.setClassName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.script.ScriptDef.NestedElement.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.script.ScriptDef.NestedElement.setType(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.script.ScriptDef.addAttribute(Attribute)",1,1,1
"org.apache.tools.ant.taskdefs.optional.script.ScriptDef.addElement(NestedElement)",1,1,1
"org.apache.tools.ant.taskdefs.optional.script.ScriptDef.addText(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.script.ScriptDef.createNestedElement(String)",3,4,6
"org.apache.tools.ant.taskdefs.optional.script.ScriptDef.execute()",11,4,14
"org.apache.tools.ant.taskdefs.optional.script.ScriptDef.executeScript(Map,Map)",1,1,1
"org.apache.tools.ant.taskdefs.optional.script.ScriptDef.executeScript(Map,Map,ScriptDefBase)",1,2,2
"org.apache.tools.ant.taskdefs.optional.script.ScriptDef.isAttributeSupported(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.script.ScriptDef.setLanguage(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.script.ScriptDef.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.script.ScriptDef.setSrc(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.script.ScriptDefBase.createDynamicElement(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.script.ScriptDefBase.execute()",1,1,1
"org.apache.tools.ant.taskdefs.optional.script.ScriptDefBase.getScript()",3,1,3
"org.apache.tools.ant.taskdefs.optional.script.ScriptDefBase.setDynamicAttribute(String,String)",2,2,2
"org.apache.tools.ant.taskdefs.optional.sos.SOS.execute()",2,2,2
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getFilename()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getLabel()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getLocalPath()",4,4,4
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getNoCache()",1,1,2
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getNoCompress()",1,1,2
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getOptionalAttributes()",1,3,3
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getPassword()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getProjectPath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getRecursive()",1,1,2
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getRequiredAttributes()",5,5,5
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getSosCommand()",2,1,2
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getSosHome()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getSosServerPath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getUsername()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getVerbose()",1,1,2
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getVersion()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.getVssServerPath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.run(Commandline)",1,2,2
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setInternalComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setInternalFilename(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setInternalLabel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setInternalRecursive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setInternalVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setLocalPath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setNoCache(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setNoCompress(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setProjectPath(String)",1,1,2
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setSosCmd(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setSosHome(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setSosServerPath(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setUsername(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOS.setVssServerPath(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOSCheckin.buildCmdLine()",1,3,3
"org.apache.tools.ant.taskdefs.optional.sos.SOSCheckin.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOSCheckin.setFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOSCheckin.setRecursive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOSCheckout.buildCmdLine()",1,2,2
"org.apache.tools.ant.taskdefs.optional.sos.SOSCheckout.setFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOSCheckout.setRecursive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOSGet.buildCmdLine()",1,4,4
"org.apache.tools.ant.taskdefs.optional.sos.SOSGet.setFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOSGet.setLabel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOSGet.setRecursive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOSGet.setVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOSLabel.buildCmdLine()",2,3,3
"org.apache.tools.ant.taskdefs.optional.sos.SOSLabel.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOSLabel.setLabel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sos.SOSLabel.setVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer.AntSoundPlayer()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer.addBuildFailedSound(File,int,Long)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer.addBuildSuccessfulSound(File,int,Long)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer.buildFinished(BuildEvent)",1,5,5
"org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer.buildStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer.messageLogged(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer.play(Project,File,int,Long)",2,7,7
"org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer.playClip(Clip,int)",1,1,2
"org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer.playClip(Clip,long)",1,1,2
"org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer.targetFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer.targetStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer.taskFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer.taskStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.AntSoundPlayer.update(LineEvent)",1,2,3
"org.apache.tools.ant.taskdefs.optional.sound.SoundTask.BuildAlert.getDuration()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.SoundTask.BuildAlert.getLoops()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.SoundTask.BuildAlert.getSource()",4,5,6
"org.apache.tools.ant.taskdefs.optional.sound.SoundTask.BuildAlert.setDuration(Long)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.SoundTask.BuildAlert.setLoops(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.SoundTask.BuildAlert.setSource(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.SoundTask.SoundTask()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.SoundTask.createFail()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.SoundTask.createSuccess()",1,1,1
"org.apache.tools.ant.taskdefs.optional.sound.SoundTask.execute()",1,3,3
"org.apache.tools.ant.taskdefs.optional.sound.SoundTask.init()",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashScreen.SplashScreen(ImageIcon)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashScreen.SplashScreen(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashScreen.actionPerformed(ActionEvent)",1,1,2
"org.apache.tools.ant.taskdefs.optional.splash.SplashScreen.buildFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashScreen.buildStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashScreen.init(ImageIcon)",1,1,2
"org.apache.tools.ant.taskdefs.optional.splash.SplashScreen.messageLogged(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashScreen.setText(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashScreen.targetFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashScreen.targetStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashScreen.taskFinished(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashScreen.taskStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashTask.execute()",3,18,22
"org.apache.tools.ant.taskdefs.optional.splash.SplashTask.logHeadless(Throwable)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashTask.setImageURL(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashTask.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashTask.setPort(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashTask.setProxy(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashTask.setShowduration(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashTask.setUseproxy(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.splash.SplashTask.setUser(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.AbstractSshMessage(Session)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.AbstractSshMessage(boolean,Session)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.ProgressMonitor.count(long)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.ProgressMonitor.end()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.ProgressMonitor.getTotalLength()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.ProgressMonitor.init(int,String,String,long)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.getProgressMonitor()",1,1,2
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.getVerbose()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.log(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.logStats(long,long,long)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.openExecChannel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.openSftpChannel()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.sendAck(OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.setLogListener(LogListener)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.trackProgress(long,long,int)",1,7,7
"org.apache.tools.ant.taskdefs.optional.ssh.AbstractSshMessage.waitForAck(InputStream)",5,6,7
"org.apache.tools.ant.taskdefs.optional.ssh.Directory.Directory(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Directory.Directory(File,Directory)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Directory.addDirectory(Directory)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ssh.Directory.addFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Directory.directoryIterator()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Directory.equals(Object)",3,1,3
"org.apache.tools.ant.taskdefs.optional.ssh.Directory.fileSize()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Directory.filesIterator()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Directory.getChild(File)",3,2,3
"org.apache.tools.ant.taskdefs.optional.ssh.Directory.getDirectory()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Directory.getParent()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Directory.getPath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Directory.getPath(String)",1,2,2
"org.apache.tools.ant.taskdefs.optional.ssh.Directory.hashCode()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Directory.isRoot()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.SSHBase()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.getFailonerror()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.getHost()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.getPort()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.getUserInfo()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.getVerbose()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.init()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.openSession()",1,4,4
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.setFailonerror(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.setHost(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.setKeyfile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.setKnownhosts(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.setPassphrase(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.setPort(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.setTrust(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.setUsername(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.setVerbose(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHExec.SSHExec()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHExec.execute()",15,17,24
"org.apache.tools.ant.taskdefs.optional.ssh.SSHExec.setAppend(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHExec.setCommand(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHExec.setOutput(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHExec.setOutputproperty(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHExec.setTimeout(long)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHExec.writeToFile(String,boolean,File)",3,3,4
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.SSHUserInfo()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.SSHUserInfo(String,boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.getKeyfile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.getName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.getPassphrase()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.getPassphrase(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.getPassword()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.getTrust()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.prompt(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.promptKeyboardInteractive(String,String,String,String[],boolean[])",2,1,4
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.promptPassphrase(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.promptPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.promptYesNo(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.retry()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.setKeyfile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.setName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.setPassphrase(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.setTrust(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.SSHUserInfo.showMessage(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.addFileset(FileSet)",1,1,2
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.createDirectory(FileSet)",1,6,6
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.download(String,String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.execute()",7,6,13
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.init()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.isRemoteUri(String)",1,1,2
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.parseUri(String)",3,4,7
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.setFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.setLocalFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.setLocalTodir(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.setLocalTofile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.setRemoteFile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.setRemoteTodir(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.setRemoteTofile(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.setSftp(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.setTodir(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.upload(List,String)",1,6,6
"org.apache.tools.ant.taskdefs.optional.ssh.Scp.upload(String,String)",1,3,3
"org.apache.tools.ant.taskdefs.optional.ssh.ScpFromMessage.ScpFromMessage(Session)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpFromMessage.ScpFromMessage(Session,String,File,boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpFromMessage.ScpFromMessage(boolean,Session)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpFromMessage.ScpFromMessage(boolean,Session,String,File,boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpFromMessage.execute()",1,2,3
"org.apache.tools.ant.taskdefs.optional.ssh.ScpFromMessage.fetchFile(File,long,OutputStream,InputStream)",4,4,7
"org.apache.tools.ant.taskdefs.optional.ssh.ScpFromMessage.parseAndCreateDirectory(String,File)",2,2,2
"org.apache.tools.ant.taskdefs.optional.ssh.ScpFromMessage.parseAndFetchFile(String,File,OutputStream,InputStream)",1,1,2
"org.apache.tools.ant.taskdefs.optional.ssh.ScpFromMessage.startRemoteCpProtocol(InputStream,OutputStream,File)",9,8,10
"org.apache.tools.ant.taskdefs.optional.ssh.ScpFromMessageBySftp.ScpFromMessageBySftp(Session,String,File,boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpFromMessageBySftp.ScpFromMessageBySftp(boolean,Session,String,File,boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpFromMessageBySftp.execute()",1,4,6
"org.apache.tools.ant.taskdefs.optional.ssh.ScpFromMessageBySftp.getDir(ChannelSftp,String,File)",4,7,8
"org.apache.tools.ant.taskdefs.optional.ssh.ScpFromMessageBySftp.getFile(ChannelSftp,LsEntry,File)",1,6,7
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.ScpToMessage(Session)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.ScpToMessage(Session,File,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.ScpToMessage(Session,List,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.ScpToMessage(boolean,Session)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.ScpToMessage(boolean,Session,File,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.ScpToMessage(boolean,Session,List,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.ScpToMessage(boolean,Session,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.doMultipleTransfer()",1,3,3
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.doSingleTransfer()",1,2,2
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.execute()",1,3,3
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.getLocalFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.getRemotePath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.sendDirectory(Directory,InputStream,OutputStream)",1,3,3
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.sendDirectoryToRemote(Directory,InputStream,OutputStream)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.sendFileToRemote(File,InputStream,OutputStream)",3,6,7
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessageBySftp.ScpToMessageBySftp(Session,File,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessageBySftp.ScpToMessageBySftp(Session,List,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessageBySftp.ScpToMessageBySftp(boolean,Session,File,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessageBySftp.ScpToMessageBySftp(boolean,Session,List,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessageBySftp.ScpToMessageBySftp(boolean,Session,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessageBySftp.doMultipleTransfer()",1,4,4
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessageBySftp.doSingleTransfer()",1,3,3
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessageBySftp.execute()",1,3,3
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessageBySftp.getLocalFile()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessageBySftp.getRemotePath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessageBySftp.sendDirectory(ChannelSftp,Directory)",1,3,3
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessageBySftp.sendDirectoryToRemote(ChannelSftp,Directory)",1,3,3
"org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessageBySftp.sendFileToRemote(ChannelSftp,File,String)",1,6,6
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin.CheckinMap.isActive()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin.CheckinMap.processUncontrolledItems()",1,5,5
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin.StarTeamCheckin()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin.createSnapshotView(View)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin.describeCheckin(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin.getComment()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin.isAddUncontrolled()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin.logOperationDescription(Folder,File)",1,3,5
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin.processFile(File)",2,7,8
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin.setAddUncontrolled(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin.setCreateFolders(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin.setUnlocked(boolean)",1,1,2
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin.testPreconditions()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckin.visit(Folder,File)",1,6,7
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.CheckoutMap.delete(File)",1,4,4
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.CheckoutMap.init(File,Folder)",3,3,5
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.CheckoutMap.isActive()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.CheckoutMap.processUncontrolledItems()",1,3,3
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.createSnapshotView(View)",4,3,4
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.describeCheckout(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.describeCheckout(File,File)",1,2,2
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.getUseRepositoryTimeStamp()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.logOperationDescription(Folder,File)",1,4,10
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.processFile(File,File)",9,13,15
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.setAsOfDate(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.setAsOfDateFormat(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.setConvertEOL(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.setCreateWorkingDirs(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.setDeleteUncontrolled(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.setLabel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.setLockStatus(boolean,int)",4,1,4
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.setLocked(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.setUnlocked(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.setUseRepositoryTimeStamp(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.testPreconditions()",4,7,9
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout.visit(Folder,File)",5,13,14
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamLabel.createSnapshotView(View)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamLabel.execute()",2,3,8
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamLabel.setBuildLabel(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamLabel.setDescription(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamLabel.setLabel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamLabel.setLastBuild(String)",1,1,2
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamLabel.setRevisionLabel(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamList.UnmatchedListingMap.isActive()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamList.UnmatchedListingMap.processUncontrolledItems()",4,7,8
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamList.blanks(int)",1,2,2
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamList.createSnapshotView(View)",3,3,3
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamList.list(File,File)",1,2,2
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamList.logOperationDescription(Folder,File)",1,1,3
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamList.pad(String,int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamList.rpad(String,int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamList.setAsOfDate(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamList.setAsOfDateFormat(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamList.setLabel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamList.testPreconditions()",2,2,3
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamList.visit(Folder,File)",3,6,8
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.disconnectFromServer()",1,2,2
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.getPassword()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.getProjectname()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.getServer()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.getServername()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.getServerport()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.getTypeNames()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.getURL()",1,1,2
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.getUserName()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.getUserName(int)",2,1,2
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.getViewURL()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.getViewname()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.logStarteamVersion()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.openView()",2,3,3
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.setPassword(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.setProjectname(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.setServername(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.setServerport(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.setURL(String)",1,5,5
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.setUserName(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.StarTeamTask.setViewname(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.UnmatchedFileMap.init(File,Folder)",2,3,4
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.UnmatchedFileMap.removeControlledItem(File)",1,2,2
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask._setAsOfDate(String)",1,2,3
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask._setAsOfDateFormat(String)",1,2,3
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask._setLabel(String)",1,2,3
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.configureRootStarteamFolder()",2,6,8
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.execute()",1,1,2
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.findLabel(View)",4,6,7
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.getAsOfDate()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.getExcludes()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.getFullRepositoryPath(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.getIDofLabelInUse()",2,2,2
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.getIncludes()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.getLabel()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.getLabelID(View)",2,2,2
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.getLabelInUse()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.getLocalRootMapping(Folder)",1,2,2
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.getRootLocalFolder()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.getRootStarteamFolder()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.getViewConfiguredByDate(View)",3,2,5
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.isForced()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.isPreloadFileInformation()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.isRecursive()",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.isUsingRevisionLabel()",1,2,2
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.isUsingViewLabel()",1,2,2
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.logAsOfDate()",1,2,2
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.logExcludes()",1,2,2
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.logIncludes()",1,2,2
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.logLabel()",1,3,3
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.matchPatterns(String,String)",4,2,4
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.setExcludes(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.setForced(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.setIncludes(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.setPreloadFileInformation(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.setRecursive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.setRootLocalFolder(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.setRootStarteamFolder(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.starteam.TreeBasedTask.shouldProcess(String)",1,1,2
"org.apache.tools.ant.taskdefs.optional.unix.AbstractAccessTask.AbstractAccessTask()",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.AbstractAccessTask.isValidOs()",1,2,2
"org.apache.tools.ant.taskdefs.optional.unix.AbstractAccessTask.setAddsourcefile(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.AbstractAccessTask.setCommand(Commandline)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.AbstractAccessTask.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.AbstractAccessTask.setSkipEmptyFilesets(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Chgrp.Chgrp()",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Chgrp.checkConfiguration()",2,2,2
"org.apache.tools.ant.taskdefs.optional.unix.Chgrp.setExecutable(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Chgrp.setGroup(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Chown.Chown()",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Chown.checkConfiguration()",2,2,2
"org.apache.tools.ant.taskdefs.optional.unix.Chown.setExecutable(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Chown.setOwner(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.delete()",2,4,4
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.deleteSymlink(File)",3,2,5
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.deleteSymlink(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.doLink(String,String)",1,5,5
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.execute()",2,1,2
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.findLinks(Vector)",1,6,6
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.handleError(String)",2,1,2
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.init()",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.loadLinks(Vector)",3,6,6
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.record()",3,8,8
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.recreate()",2,6,6
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.setAction(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.setDefaults()",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.setLink(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.setLinkfilename(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.setOverwrite(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.setResource(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.single()",3,3,3
"org.apache.tools.ant.taskdefs.optional.unix.Symlink.writePropertyFile(Properties,File)",1,2,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.CurrentModUpdated.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.WritableFiles.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.calcDate(String,int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.execute()",2,3,3
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.formatCommandLine(Commandline)",1,3,3
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getAutoresponse()",4,3,4
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getComment()",1,1,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getFailOnError()",1,1,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getFileTimeStamp()",4,3,4
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getGetLocalCopy()",1,1,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getLabel()",1,3,3
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getLocalpath()",4,4,4
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getLogin()",1,1,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getOutput()",1,1,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getQuiet()",1,1,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getRecursive()",1,1,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getSSCommand()",2,1,3
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getShortLabel()",1,3,3
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getStyle()",1,1,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getUser()",1,1,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getVersion()",1,1,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getVersionDate()",5,6,13
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getVersionDateLabel()",1,4,5
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getVersionLabel()",4,7,10
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getVsspath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getWritable()",1,1,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.getWritableFiles()",4,3,4
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.run(Commandline)",1,3,4
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalAutoResponse(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalDate(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalDateFormat(DateFormat)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalFailOnError(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalFileTimeStamp(CurrentModUpdated)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalFromDate(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalFromLabel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalGetLocalCopy(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalLabel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalLocalPath(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalNumDays(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalOutputFilename(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalQuiet(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalRecursive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalStyle(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalToDate(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalToLabel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalUser(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalWritable(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setInternalWritableFiles(WritableFiles)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setLogin(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setServerpath(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setSsdir(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSS.setVsspath(String)",1,2,3
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSADD.buildCmdLine()",2,2,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSADD.getLocalpath()",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSADD.setAutoresponse(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSADD.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSADD.setLocalpath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSADD.setRecursive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSADD.setWritable(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKIN.buildCmdLine()",2,2,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKIN.setAutoresponse(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKIN.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKIN.setLocalpath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKIN.setRecursive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKIN.setWritable(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKOUT.buildCmdLine()",2,2,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKOUT.setAutoresponse(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKOUT.setDate(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKOUT.setFileTimeStamp(CurrentModUpdated)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKOUT.setGetLocalCopy(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKOUT.setLabel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKOUT.setLocalpath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKOUT.setRecursive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKOUT.setVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCHECKOUT.setWritableFiles(WritableFiles)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCP.buildCmdLine()",2,2,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCP.setAutoresponse(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCREATE.buildCmdLine()",2,2,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCREATE.setAutoresponse(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCREATE.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSCREATE.setQuiet(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSGET.buildCmdLine()",2,2,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSGET.setAutoresponse(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSGET.setDate(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSGET.setFileTimeStamp(CurrentModUpdated)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSGET.setLabel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSGET.setLocalpath(Path)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSGET.setQuiet(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSGET.setRecursive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSGET.setVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSGET.setWritable(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSGET.setWritableFiles(WritableFiles)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSHISTORY.BriefCodediffNofile.getValues()",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSHISTORY.buildCmdLine()",2,2,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSHISTORY.setDateFormat(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSHISTORY.setFromDate(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSHISTORY.setFromLabel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSHISTORY.setNumdays(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSHISTORY.setOutput(File)",1,2,2
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSHISTORY.setRecursive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSHISTORY.setStyle(BriefCodediffNofile)",5,5,5
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSHISTORY.setToDate(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSHISTORY.setToLabel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSHISTORY.setUser(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSLABEL.buildCmdLine()",3,3,3
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSLABEL.setAutoresponse(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSLABEL.setComment(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSLABEL.setLabel(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.vss.MSVSSLABEL.setVersion(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.Attrib()",1,1,1
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.addArg(boolean,String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.checkConfiguration()",2,2,2
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.getSignString(boolean)",1,1,2
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.haveAttr()",1,1,1
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.isValidOs()",1,2,2
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.setAddsourcefile(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.setArchive(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.setCommand(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.setExecutable(String)",1,1,1
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.setFile(File)",1,1,1
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.setHidden(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.setMaxParallel(int)",1,1,1
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.setParallel(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.setReadonly(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.setSkipEmptyFilesets(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.optional.windows.Attrib.setSystem(boolean)",1,1,1
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.DefaultRmicAdapter()",1,1,1
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.RmicFileNameMapper.RmicFileNameMapper()",1,1,1
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.RmicFileNameMapper.mapFileName(String)",3,16,18
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.RmicFileNameMapper.setFrom(String)",1,1,1
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.RmicFileNameMapper.setTo(String)",1,1,1
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.getClasspath()",1,1,1
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.getCompileClasspath()",1,4,4
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.getMapper()",1,1,1
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.getRmic()",1,1,1
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.getSkelClassSuffix()",1,1,1
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.getStubClassSuffix()",1,1,1
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.getTieClassSuffix()",1,1,1
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.logAndAddFilesToCompile(Commandline)",1,3,3
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.setRmic(Rmic)",1,1,1
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.setupRmicCommand()",1,1,1
"org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter.setupRmicCommand(String[])",1,14,14
"org.apache.tools.ant.taskdefs.rmic.ForkingSunRmic.execute()",1,1,2
"org.apache.tools.ant.taskdefs.rmic.KaffeRmic.execute()",2,5,5
"org.apache.tools.ant.taskdefs.rmic.KaffeRmic.getRmicClass()",2,2,3
"org.apache.tools.ant.taskdefs.rmic.KaffeRmic.isAvailable()",1,1,1
"org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory.RmicAdapterFactory()",1,1,1
"org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory.getRmic(String,Task)",6,6,8
"org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory.resolveClassName(String)",1,1,1
"org.apache.tools.ant.taskdefs.rmic.SunRmic.execute()",2,4,5
"org.apache.tools.ant.taskdefs.rmic.WLRmic.execute()",2,6,6
"org.apache.tools.ant.taskdefs.rmic.WLRmic.getSkelClassSuffix()",1,1,1
"org.apache.tools.ant.taskdefs.rmic.WLRmic.getStubClassSuffix()",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.AbstractFileSet()",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.AbstractFileSet(AbstractFileSet)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.add(FileSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addAnd(AndSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addContains(ContainsSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addContainsRegexp(ContainsRegexpSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addCustom(ExtendSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addDate(DateSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addDepend(DependSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addDepth(DepthSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addDifferent(DifferentSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addFilename(FilenameSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addMajority(MajoritySelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addModified(ModifiedSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addNone(NoneSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addNot(NotSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addOr(OrSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addPresent(PresentSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addSelector(SelectSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addSize(SizeSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.addType(TypeSelector)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.appendExcludes(String[])",2,4,4
"org.apache.tools.ant.types.AbstractFileSet.appendIncludes(String[])",2,4,4
"org.apache.tools.ant.types.AbstractFileSet.appendSelector(FileSelector)",2,2,2
"org.apache.tools.ant.types.AbstractFileSet.clone()",2,3,4
"org.apache.tools.ant.types.AbstractFileSet.createExclude()",2,2,2
"org.apache.tools.ant.types.AbstractFileSet.createExcludesFile()",2,2,2
"org.apache.tools.ant.types.AbstractFileSet.createInclude()",2,2,2
"org.apache.tools.ant.types.AbstractFileSet.createIncludesFile()",2,2,2
"org.apache.tools.ant.types.AbstractFileSet.createPatternSet()",2,2,2
"org.apache.tools.ant.types.AbstractFileSet.getDefaultexcludes()",1,2,2
"org.apache.tools.ant.types.AbstractFileSet.getDir()",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.getDir(Project)",1,2,2
"org.apache.tools.ant.types.AbstractFileSet.getDirectoryScanner()",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.getDirectoryScanner(Project)",6,7,8
"org.apache.tools.ant.types.AbstractFileSet.getRef(Project)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.getSelectors(Project)",1,2,2
"org.apache.tools.ant.types.AbstractFileSet.hasPatterns()",5,4,6
"org.apache.tools.ant.types.AbstractFileSet.hasSelectors()",1,3,3
"org.apache.tools.ant.types.AbstractFileSet.isCaseSensitive()",1,2,2
"org.apache.tools.ant.types.AbstractFileSet.isFollowSymlinks()",1,2,2
"org.apache.tools.ant.types.AbstractFileSet.mergeExcludes(Project)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.mergeIncludes(Project)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.mergePatterns(Project)",2,3,3
"org.apache.tools.ant.types.AbstractFileSet.selectorCount()",1,3,3
"org.apache.tools.ant.types.AbstractFileSet.selectorElements()",1,3,3
"org.apache.tools.ant.types.AbstractFileSet.setCaseSensitive(boolean)",2,2,2
"org.apache.tools.ant.types.AbstractFileSet.setDefaultexcludes(boolean)",2,2,2
"org.apache.tools.ant.types.AbstractFileSet.setDir(File)",2,2,2
"org.apache.tools.ant.types.AbstractFileSet.setExcludes(String)",2,2,2
"org.apache.tools.ant.types.AbstractFileSet.setExcludesfile(File)",2,2,2
"org.apache.tools.ant.types.AbstractFileSet.setFile(File)",2,2,2
"org.apache.tools.ant.types.AbstractFileSet.setFollowSymlinks(boolean)",2,2,2
"org.apache.tools.ant.types.AbstractFileSet.setIncludes(String)",2,2,2
"org.apache.tools.ant.types.AbstractFileSet.setIncludesfile(File)",2,2,2
"org.apache.tools.ant.types.AbstractFileSet.setRefid(Reference)",4,5,5
"org.apache.tools.ant.types.AbstractFileSet.setupDirectoryScanner(FileScanner)",1,1,1
"org.apache.tools.ant.types.AbstractFileSet.setupDirectoryScanner(FileScanner,Project)",3,4,5
"org.apache.tools.ant.types.AbstractFileSet.toString()",1,3,3
"org.apache.tools.ant.types.AntFilterReader.addParam(Parameter)",1,1,1
"org.apache.tools.ant.types.AntFilterReader.createClasspath()",2,3,3
"org.apache.tools.ant.types.AntFilterReader.getClassName()",1,1,1
"org.apache.tools.ant.types.AntFilterReader.getClasspath()",1,1,1
"org.apache.tools.ant.types.AntFilterReader.getParams()",1,1,1
"org.apache.tools.ant.types.AntFilterReader.setClassName(String)",1,1,1
"org.apache.tools.ant.types.AntFilterReader.setClasspath(Path)",2,3,3
"org.apache.tools.ant.types.AntFilterReader.setClasspathRef(Reference)",2,2,2
"org.apache.tools.ant.types.AntFilterReader.setRefid(Reference)",3,7,7
"org.apache.tools.ant.types.ArchiveFileSet.ArchiveFileSet()",1,1,1
"org.apache.tools.ant.types.ArchiveFileSet.ArchiveFileSet(ArchiveFileSet)",1,1,1
"org.apache.tools.ant.types.ArchiveFileSet.ArchiveFileSet(FileSet)",1,1,1
"org.apache.tools.ant.types.ArchiveFileSet.addConfigured(ResourceCollection)",2,1,2
"org.apache.tools.ant.types.ArchiveFileSet.clone()",2,2,2
"org.apache.tools.ant.types.ArchiveFileSet.configureFileSet(ArchiveFileSet)",1,1,1
"org.apache.tools.ant.types.ArchiveFileSet.getDirMode()",1,1,1
"org.apache.tools.ant.types.ArchiveFileSet.getDirMode(Project)",2,2,2
"org.apache.tools.ant.types.ArchiveFileSet.getDirectoryScanner(Project)",5,3,5
"org.apache.tools.ant.types.ArchiveFileSet.getFileMode()",1,1,1
"org.apache.tools.ant.types.ArchiveFileSet.getFileMode(Project)",2,2,2
"org.apache.tools.ant.types.ArchiveFileSet.getFullpath()",1,1,1
"org.apache.tools.ant.types.ArchiveFileSet.getFullpath(Project)",2,2,2
"org.apache.tools.ant.types.ArchiveFileSet.getPrefix()",1,1,1
"org.apache.tools.ant.types.ArchiveFileSet.getPrefix(Project)",2,2,2
"org.apache.tools.ant.types.ArchiveFileSet.getSrc()",2,2,2
"org.apache.tools.ant.types.ArchiveFileSet.getSrc(Project)",2,2,2
"org.apache.tools.ant.types.ArchiveFileSet.hasDirModeBeenSet()",2,2,2
"org.apache.tools.ant.types.ArchiveFileSet.hasFileModeBeenSet()",2,2,2
"org.apache.tools.ant.types.ArchiveFileSet.integerSetDirMode(int)",1,1,1
"org.apache.tools.ant.types.ArchiveFileSet.integerSetFileMode(int)",1,1,1
"org.apache.tools.ant.types.ArchiveFileSet.isFilesystemOnly()",1,1,1
"org.apache.tools.ant.types.ArchiveFileSet.iterator()",3,3,3
"org.apache.tools.ant.types.ArchiveFileSet.setDir(File)",2,2,2
"org.apache.tools.ant.types.ArchiveFileSet.setDirMode(String)",1,1,1
"org.apache.tools.ant.types.ArchiveFileSet.setFileMode(String)",1,1,1
"org.apache.tools.ant.types.ArchiveFileSet.setFullpath(String)",2,2,3
"org.apache.tools.ant.types.ArchiveFileSet.setPrefix(String)",2,2,3
"org.apache.tools.ant.types.ArchiveFileSet.setSrc(File)",1,1,1
"org.apache.tools.ant.types.ArchiveFileSet.setSrcResource(Resource)",2,1,2
"org.apache.tools.ant.types.ArchiveFileSet.size()",3,3,3
"org.apache.tools.ant.types.ArchiveFileSet.toString()",3,4,4
"org.apache.tools.ant.types.ArchiveScanner.getIncludedDirectories()",2,2,2
"org.apache.tools.ant.types.ArchiveScanner.getIncludedDirsCount()",2,2,2
"org.apache.tools.ant.types.ArchiveScanner.getIncludedFiles()",2,2,2
"org.apache.tools.ant.types.ArchiveScanner.getIncludedFilesCount()",2,2,2
"org.apache.tools.ant.types.ArchiveScanner.getResource(String)",5,4,5
"org.apache.tools.ant.types.ArchiveScanner.getResourceDirectories()",2,2,2
"org.apache.tools.ant.types.ArchiveScanner.getResourceFiles()",2,2,2
"org.apache.tools.ant.types.ArchiveScanner.init()",1,1,3
"org.apache.tools.ant.types.ArchiveScanner.match(String)",1,2,2
"org.apache.tools.ant.types.ArchiveScanner.scan()",2,1,2
"org.apache.tools.ant.types.ArchiveScanner.scanme()",2,3,4
"org.apache.tools.ant.types.ArchiveScanner.setEncoding(String)",1,1,1
"org.apache.tools.ant.types.ArchiveScanner.setSrc(File)",1,1,1
"org.apache.tools.ant.types.ArchiveScanner.setSrc(Resource)",1,2,2
"org.apache.tools.ant.types.ArchiveScanner.trimSeparator(String)",1,2,2
"org.apache.tools.ant.types.Assertions.BaseAssertion.getClassName()",1,1,1
"org.apache.tools.ant.types.Assertions.BaseAssertion.getPackageName()",1,1,1
"org.apache.tools.ant.types.Assertions.BaseAssertion.setClass(String)",1,1,1
"org.apache.tools.ant.types.Assertions.BaseAssertion.setPackage(String)",1,1,1
"org.apache.tools.ant.types.Assertions.BaseAssertion.toCommand()",2,5,6
"org.apache.tools.ant.types.Assertions.DisabledAssertion.getCommandPrefix()",1,1,1
"org.apache.tools.ant.types.Assertions.EnabledAssertion.getCommandPrefix()",1,1,1
"org.apache.tools.ant.types.Assertions.addDisable(DisabledAssertion)",1,1,1
"org.apache.tools.ant.types.Assertions.addEnable(EnabledAssertion)",1,1,1
"org.apache.tools.ant.types.Assertions.addVmArgument(CommandlineJava,String)",1,1,1
"org.apache.tools.ant.types.Assertions.applyAssertions(CommandlineJava)",1,4,4
"org.apache.tools.ant.types.Assertions.applyAssertions(List)",1,4,4
"org.apache.tools.ant.types.Assertions.applyAssertions(ListIterator)",1,4,4
"org.apache.tools.ant.types.Assertions.clone()",1,1,1
"org.apache.tools.ant.types.Assertions.getFinalReference()",3,2,3
"org.apache.tools.ant.types.Assertions.getFinalSize()",1,1,2
"org.apache.tools.ant.types.Assertions.setEnableSystemAssertions(Boolean)",1,1,1
"org.apache.tools.ant.types.Assertions.setRefid(Reference)",2,3,3
"org.apache.tools.ant.types.Assertions.size()",1,1,1
"org.apache.tools.ant.types.Commandline.Argument.getParts()",1,1,1
"org.apache.tools.ant.types.Commandline.Argument.setFile(File)",1,1,1
"org.apache.tools.ant.types.Commandline.Argument.setLine(String)",2,1,2
"org.apache.tools.ant.types.Commandline.Argument.setPath(Path)",1,1,1
"org.apache.tools.ant.types.Commandline.Argument.setPathref(Reference)",1,1,1
"org.apache.tools.ant.types.Commandline.Argument.setValue(String)",1,1,1
"org.apache.tools.ant.types.Commandline.Commandline()",1,1,1
"org.apache.tools.ant.types.Commandline.Commandline(String)",1,3,4
"org.apache.tools.ant.types.Commandline.Marker.Marker(int)",1,1,1
"org.apache.tools.ant.types.Commandline.Marker.getPosition()",1,3,4
"org.apache.tools.ant.types.Commandline.addArguments(String[])",1,2,2
"org.apache.tools.ant.types.Commandline.addArgumentsToList(ListIterator)",1,4,4
"org.apache.tools.ant.types.Commandline.addCommandToList(ListIterator)",1,2,2
"org.apache.tools.ant.types.Commandline.clear()",1,1,1
"org.apache.tools.ant.types.Commandline.clearArgs()",1,1,1
"org.apache.tools.ant.types.Commandline.clone()",1,1,2
"org.apache.tools.ant.types.Commandline.createArgument()",1,1,1
"org.apache.tools.ant.types.Commandline.createArgument(boolean)",1,2,2
"org.apache.tools.ant.types.Commandline.createMarker()",1,1,1
"org.apache.tools.ant.types.Commandline.describeArguments()",1,1,1
"org.apache.tools.ant.types.Commandline.describeArguments(Commandline)",1,1,1
"org.apache.tools.ant.types.Commandline.describeArguments(String[])",1,1,1
"org.apache.tools.ant.types.Commandline.describeArguments(String[],int)",2,3,5
"org.apache.tools.ant.types.Commandline.describeCommand()",1,1,1
"org.apache.tools.ant.types.Commandline.describeCommand(Commandline)",1,1,1
"org.apache.tools.ant.types.Commandline.describeCommand(String[])",2,2,4
"org.apache.tools.ant.types.Commandline.getArguments()",1,1,1
"org.apache.tools.ant.types.Commandline.getCommandline()",1,1,1
"org.apache.tools.ant.types.Commandline.getExecutable()",1,1,1
"org.apache.tools.ant.types.Commandline.iterator()",1,1,1
"org.apache.tools.ant.types.Commandline.quoteArgument(String)",4,3,5
"org.apache.tools.ant.types.Commandline.setExecutable(String)",2,2,3
"org.apache.tools.ant.types.Commandline.size()",1,1,1
"org.apache.tools.ant.types.Commandline.toString()",1,1,1
"org.apache.tools.ant.types.Commandline.toString(String[])",2,3,5
"org.apache.tools.ant.types.Commandline.translateCommandline(String)",4,13,18
"org.apache.tools.ant.types.CommandlineJava.CommandlineJava()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.SysProperties.addDefinitionsToList(ListIterator)",1,4,4
"org.apache.tools.ant.types.CommandlineJava.SysProperties.addSysproperties(SysProperties)",1,1,1
"org.apache.tools.ant.types.CommandlineJava.SysProperties.addSyspropertyset(PropertySet)",1,1,1
"org.apache.tools.ant.types.CommandlineJava.SysProperties.clone()",1,1,2
"org.apache.tools.ant.types.CommandlineJava.SysProperties.getVariables()",2,2,2
"org.apache.tools.ant.types.CommandlineJava.SysProperties.mergePropertySets()",1,2,2
"org.apache.tools.ant.types.CommandlineJava.SysProperties.restoreSystem()",2,1,3
"org.apache.tools.ant.types.CommandlineJava.SysProperties.setSystem()",1,3,4
"org.apache.tools.ant.types.CommandlineJava.SysProperties.size()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.addCommandsToList(ListIterator)",1,6,6
"org.apache.tools.ant.types.CommandlineJava.addSysproperties(SysProperties)",1,1,1
"org.apache.tools.ant.types.CommandlineJava.addSysproperty(Variable)",1,1,1
"org.apache.tools.ant.types.CommandlineJava.addSyspropertyset(PropertySet)",1,1,1
"org.apache.tools.ant.types.CommandlineJava.calculateBootclasspath(boolean)",4,4,7
"org.apache.tools.ant.types.CommandlineJava.clearJavaArgs()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.clone()",1,4,5
"org.apache.tools.ant.types.CommandlineJava.createArgument()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.createBootclasspath(Project)",1,1,2
"org.apache.tools.ant.types.CommandlineJava.createClasspath(Project)",1,1,2
"org.apache.tools.ant.types.CommandlineJava.createVmArgument()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.describeCommand()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.describeJavaCommand()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.getActualVMCommand()",1,3,3
"org.apache.tools.ant.types.CommandlineJava.getAssertions()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.getBootclasspath()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.getClassname()",2,2,2
"org.apache.tools.ant.types.CommandlineJava.getClasspath()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.getCommandline()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.getJar()",2,2,2
"org.apache.tools.ant.types.CommandlineJava.getJavaCommand()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.getSystemProperties()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.getVmCommand()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.getVmversion()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.haveBootclasspath(boolean)",1,1,1
"org.apache.tools.ant.types.CommandlineJava.haveClasspath()",1,3,3
"org.apache.tools.ant.types.CommandlineJava.isCloneVm()",1,2,2
"org.apache.tools.ant.types.CommandlineJava.restoreSystemProperties()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.setAssertions(Assertions)",1,1,1
"org.apache.tools.ant.types.CommandlineJava.setClassname(String)",1,1,1
"org.apache.tools.ant.types.CommandlineJava.setCloneVm(boolean)",1,1,1
"org.apache.tools.ant.types.CommandlineJava.setJar(String)",1,1,1
"org.apache.tools.ant.types.CommandlineJava.setMaxmemory(String)",1,1,1
"org.apache.tools.ant.types.CommandlineJava.setSystemProperties()",1,1,1
"org.apache.tools.ant.types.CommandlineJava.setVm(String)",1,1,1
"org.apache.tools.ant.types.CommandlineJava.setVmversion(String)",1,1,1
"org.apache.tools.ant.types.CommandlineJava.size()",1,3,6
"org.apache.tools.ant.types.CommandlineJava.toString()",1,1,1
"org.apache.tools.ant.types.Comparison.Comparison()",1,1,1
"org.apache.tools.ant.types.Comparison.Comparison(String)",1,1,1
"org.apache.tools.ant.types.Comparison.evaluate(int)",2,1,4
"org.apache.tools.ant.types.Comparison.getValues()",1,1,1
"org.apache.tools.ant.types.DataType.checkAttributesAllowed()",2,2,2
"org.apache.tools.ant.types.DataType.checkChildrenAllowed()",2,2,2
"org.apache.tools.ant.types.DataType.circularReference()",1,1,1
"org.apache.tools.ant.types.DataType.dieOnCircularReference()",1,1,1
"org.apache.tools.ant.types.DataType.dieOnCircularReference(Project)",2,2,3
"org.apache.tools.ant.types.DataType.dieOnCircularReference(Stack,Project)",4,4,5
"org.apache.tools.ant.types.DataType.getCheckedRef()",1,1,1
"org.apache.tools.ant.types.DataType.getCheckedRef(Class,String)",1,1,1
"org.apache.tools.ant.types.DataType.getCheckedRef(Class,String,Project)",3,2,3
"org.apache.tools.ant.types.DataType.getCheckedRef(Project)",1,1,1
"org.apache.tools.ant.types.DataType.getDataTypeName()",2,2,2
"org.apache.tools.ant.types.DataType.getDescription()",1,1,1
"org.apache.tools.ant.types.DataType.getRefid()",1,1,1
"org.apache.tools.ant.types.DataType.invokeCircularReferenceCheck(DataType,Stack,Project)",1,1,1
"org.apache.tools.ant.types.DataType.isChecked()",1,1,1
"org.apache.tools.ant.types.DataType.isReference()",1,1,1
"org.apache.tools.ant.types.DataType.noChildrenAllowed()",1,1,1
"org.apache.tools.ant.types.DataType.setChecked(boolean)",1,1,1
"org.apache.tools.ant.types.DataType.setDescription(String)",1,1,1
"org.apache.tools.ant.types.DataType.setRefid(Reference)",1,1,1
"org.apache.tools.ant.types.DataType.toString()",1,2,2
"org.apache.tools.ant.types.DataType.tooManyAttributes()",1,1,1
"org.apache.tools.ant.types.Description.addText(String)",2,2,3
"org.apache.tools.ant.types.Description.concatDescriptions(Project,Target,StringBuffer)",5,3,6
"org.apache.tools.ant.types.Description.findElementInTarget(Project,Target,String)",1,3,3
"org.apache.tools.ant.types.Description.getDescription(Project)",2,2,3
"org.apache.tools.ant.types.DirSet.DirSet()",1,1,1
"org.apache.tools.ant.types.DirSet.DirSet(DirSet)",1,1,1
"org.apache.tools.ant.types.DirSet.clone()",2,2,2
"org.apache.tools.ant.types.DirSet.isFilesystemOnly()",1,1,1
"org.apache.tools.ant.types.DirSet.iterator()",2,2,2
"org.apache.tools.ant.types.DirSet.size()",2,2,2
"org.apache.tools.ant.types.EnumeratedAttribute.EnumeratedAttribute()",1,1,1
"org.apache.tools.ant.types.EnumeratedAttribute.containsValue(String)",1,1,1
"org.apache.tools.ant.types.EnumeratedAttribute.getIndex()",1,1,1
"org.apache.tools.ant.types.EnumeratedAttribute.getValue()",1,1,1
"org.apache.tools.ant.types.EnumeratedAttribute.indexOfValue(String)",4,2,5
"org.apache.tools.ant.types.EnumeratedAttribute.setValue(String)",2,1,2
"org.apache.tools.ant.types.EnumeratedAttribute.toString()",1,1,1
"org.apache.tools.ant.types.Environment.Environment()",1,1,1
"org.apache.tools.ant.types.Environment.Variable.Variable()",1,1,1
"org.apache.tools.ant.types.Environment.Variable.getContent()",1,1,1
"org.apache.tools.ant.types.Environment.Variable.getKey()",1,1,1
"org.apache.tools.ant.types.Environment.Variable.getValue()",1,1,1
"org.apache.tools.ant.types.Environment.Variable.setFile(File)",1,1,1
"org.apache.tools.ant.types.Environment.Variable.setKey(String)",1,1,1
"org.apache.tools.ant.types.Environment.Variable.setPath(Path)",1,1,1
"org.apache.tools.ant.types.Environment.Variable.setValue(String)",1,1,1
"org.apache.tools.ant.types.Environment.Variable.validate()",2,1,3
"org.apache.tools.ant.types.Environment.addVariable(Variable)",1,1,1
"org.apache.tools.ant.types.Environment.getVariables()",2,2,3
"org.apache.tools.ant.types.Environment.getVariablesVector()",1,1,1
"org.apache.tools.ant.types.FileList.FileList()",1,1,1
"org.apache.tools.ant.types.FileList.FileList(FileList)",1,1,1
"org.apache.tools.ant.types.FileList.FileName.getName()",1,1,1
"org.apache.tools.ant.types.FileList.FileName.setName(String)",1,1,1
"org.apache.tools.ant.types.FileList.addConfiguredFile(FileName)",2,1,2
"org.apache.tools.ant.types.FileList.getDir(Project)",2,2,2
"org.apache.tools.ant.types.FileList.getFiles(Project)",4,2,4
"org.apache.tools.ant.types.FileList.getRef(Project)",1,1,1
"org.apache.tools.ant.types.FileList.isFilesystemOnly()",1,1,1
"org.apache.tools.ant.types.FileList.iterator()",2,2,2
"org.apache.tools.ant.types.FileList.setDir(File)",1,1,1
"org.apache.tools.ant.types.FileList.setFiles(String)",1,4,4
"org.apache.tools.ant.types.FileList.setRefid(Reference)",2,3,3
"org.apache.tools.ant.types.FileList.size()",2,2,2
"org.apache.tools.ant.types.FileSet.FileSet()",1,1,1
"org.apache.tools.ant.types.FileSet.FileSet(FileSet)",1,1,1
"org.apache.tools.ant.types.FileSet.clone()",2,2,2
"org.apache.tools.ant.types.FileSet.isFilesystemOnly()",1,1,1
"org.apache.tools.ant.types.FileSet.iterator()",2,2,2
"org.apache.tools.ant.types.FileSet.size()",2,2,2
"org.apache.tools.ant.types.FilterChain.add(ChainableReader)",1,1,1
"org.apache.tools.ant.types.FilterChain.addClassConstants(ClassConstants)",1,1,1
"org.apache.tools.ant.types.FilterChain.addContainsRegex(ContainsRegex)",1,1,1
"org.apache.tools.ant.types.FilterChain.addDeleteCharacters(DeleteCharacters)",1,1,1
"org.apache.tools.ant.types.FilterChain.addEscapeUnicode(EscapeUnicode)",1,1,1
"org.apache.tools.ant.types.FilterChain.addExpandProperties(ExpandProperties)",1,1,1
"org.apache.tools.ant.types.FilterChain.addFilterReader(AntFilterReader)",1,1,1
"org.apache.tools.ant.types.FilterChain.addHeadFilter(HeadFilter)",1,1,1
"org.apache.tools.ant.types.FilterChain.addIgnoreBlank(IgnoreBlank)",1,1,1
"org.apache.tools.ant.types.FilterChain.addLineContains(LineContains)",1,1,1
"org.apache.tools.ant.types.FilterChain.addLineContainsRegExp(LineContainsRegExp)",1,1,1
"org.apache.tools.ant.types.FilterChain.addPrefixLines(PrefixLines)",1,1,1
"org.apache.tools.ant.types.FilterChain.addReplaceRegex(ReplaceRegex)",1,1,1
"org.apache.tools.ant.types.FilterChain.addReplaceString(ReplaceString)",1,1,1
"org.apache.tools.ant.types.FilterChain.addReplaceTokens(ReplaceTokens)",1,1,1
"org.apache.tools.ant.types.FilterChain.addStripJavaComments(StripJavaComments)",1,1,1
"org.apache.tools.ant.types.FilterChain.addStripLineBreaks(StripLineBreaks)",1,1,1
"org.apache.tools.ant.types.FilterChain.addStripLineComments(StripLineComments)",1,1,1
"org.apache.tools.ant.types.FilterChain.addTabsToSpaces(TabsToSpaces)",1,1,1
"org.apache.tools.ant.types.FilterChain.addTailFilter(TailFilter)",1,1,1
"org.apache.tools.ant.types.FilterChain.addTokenFilter(TokenFilter)",1,1,1
"org.apache.tools.ant.types.FilterChain.addTrim(Trim)",1,1,1
"org.apache.tools.ant.types.FilterChain.getFilterReaders()",1,1,1
"org.apache.tools.ant.types.FilterChain.setRefid(Reference)",3,3,3
"org.apache.tools.ant.types.FilterSet.Filter.Filter()",1,1,1
"org.apache.tools.ant.types.FilterSet.Filter.Filter(String,String)",1,1,1
"org.apache.tools.ant.types.FilterSet.Filter.getToken()",1,1,1
"org.apache.tools.ant.types.FilterSet.Filter.getValue()",1,1,1
"org.apache.tools.ant.types.FilterSet.Filter.setToken(String)",1,1,1
"org.apache.tools.ant.types.FilterSet.Filter.setValue(String)",1,1,1
"org.apache.tools.ant.types.FilterSet.FilterSet()",1,1,1
"org.apache.tools.ant.types.FilterSet.FilterSet(FilterSet)",1,1,1
"org.apache.tools.ant.types.FilterSet.FiltersFile.FiltersFile()",1,1,1
"org.apache.tools.ant.types.FilterSet.FiltersFile.setFile(File)",1,1,1
"org.apache.tools.ant.types.FilterSet.OnMissing.OnMissing()",1,1,1
"org.apache.tools.ant.types.FilterSet.OnMissing.OnMissing(String)",1,1,1
"org.apache.tools.ant.types.FilterSet.OnMissing.getValues()",1,1,1
"org.apache.tools.ant.types.FilterSet.addConfiguredFilterSet(FilterSet)",2,3,3
"org.apache.tools.ant.types.FilterSet.addFilter(Filter)",2,2,2
"org.apache.tools.ant.types.FilterSet.addFilter(String,String)",2,2,2
"org.apache.tools.ant.types.FilterSet.clone()",2,2,3
"org.apache.tools.ant.types.FilterSet.createFiltersfile()",2,2,2
"org.apache.tools.ant.types.FilterSet.getBeginToken()",2,2,2
"org.apache.tools.ant.types.FilterSet.getEndToken()",2,2,2
"org.apache.tools.ant.types.FilterSet.getFilterHash()",1,3,3
"org.apache.tools.ant.types.FilterSet.getFilters()",2,4,4
"org.apache.tools.ant.types.FilterSet.getOnMissingFiltersFile()",1,1,1
"org.apache.tools.ant.types.FilterSet.getRef()",1,1,1
"org.apache.tools.ant.types.FilterSet.handleMissingFile(String)",4,2,4
"org.apache.tools.ant.types.FilterSet.hasFilters()",1,1,1
"org.apache.tools.ant.types.FilterSet.iReplaceTokens(String)",4,6,8
"org.apache.tools.ant.types.FilterSet.isRecurse()",1,1,1
"org.apache.tools.ant.types.FilterSet.readFiltersFromFile(File)",3,5,6
"org.apache.tools.ant.types.FilterSet.replaceTokens(String)",1,1,1
"org.apache.tools.ant.types.FilterSet.replaceTokens(String,String)",2,7,9
"org.apache.tools.ant.types.FilterSet.setBeginToken(String)",3,3,4
"org.apache.tools.ant.types.FilterSet.setEndToken(String)",3,3,4
"org.apache.tools.ant.types.FilterSet.setFiltersfile(File)",2,2,2
"org.apache.tools.ant.types.FilterSet.setOnMissingFiltersFile(OnMissing)",1,1,1
"org.apache.tools.ant.types.FilterSet.setRecurse(boolean)",1,1,1
"org.apache.tools.ant.types.FilterSetCollection.FilterSetCollection()",1,1,1
"org.apache.tools.ant.types.FilterSetCollection.FilterSetCollection(FilterSet)",1,1,1
"org.apache.tools.ant.types.FilterSetCollection.addFilterSet(FilterSet)",1,1,1
"org.apache.tools.ant.types.FilterSetCollection.hasFilters()",3,2,3
"org.apache.tools.ant.types.FilterSetCollection.replaceTokens(String)",1,2,2
"org.apache.tools.ant.types.FlexInteger.FlexInteger(String)",1,1,1
"org.apache.tools.ant.types.FlexInteger.intValue()",1,1,1
"org.apache.tools.ant.types.FlexInteger.toString()",1,1,1
"org.apache.tools.ant.types.Mapper.Mapper(Project)",1,1,1
"org.apache.tools.ant.types.Mapper.MapperType.MapperType()",1,1,1
"org.apache.tools.ant.types.Mapper.MapperType.getImplementation()",1,1,1
"org.apache.tools.ant.types.Mapper.MapperType.getValues()",1,1,1
"org.apache.tools.ant.types.Mapper.add(FileNameMapper)",5,5,6
"org.apache.tools.ant.types.Mapper.addConfiguredMapper(Mapper)",1,1,1
"org.apache.tools.ant.types.Mapper.createClasspath()",2,3,3
"org.apache.tools.ant.types.Mapper.getImplementation()",5,3,11
"org.apache.tools.ant.types.Mapper.getImplementationClass()",1,3,3
"org.apache.tools.ant.types.Mapper.getRef()",1,1,1
"org.apache.tools.ant.types.Mapper.setClassname(String)",2,2,2
"org.apache.tools.ant.types.Mapper.setClasspath(Path)",2,3,3
"org.apache.tools.ant.types.Mapper.setClasspathRef(Reference)",2,2,2
"org.apache.tools.ant.types.Mapper.setFrom(String)",2,2,2
"org.apache.tools.ant.types.Mapper.setRefid(Reference)",2,2,4
"org.apache.tools.ant.types.Mapper.setTo(String)",2,2,2
"org.apache.tools.ant.types.Mapper.setType(MapperType)",2,2,2
"org.apache.tools.ant.types.Parameter.getName()",1,1,1
"org.apache.tools.ant.types.Parameter.getType()",1,1,1
"org.apache.tools.ant.types.Parameter.getValue()",1,1,1
"org.apache.tools.ant.types.Parameter.setName(String)",1,1,1
"org.apache.tools.ant.types.Parameter.setType(String)",1,1,1
"org.apache.tools.ant.types.Parameter.setValue(String)",1,1,1
"org.apache.tools.ant.types.Path.Path(Project)",1,1,1
"org.apache.tools.ant.types.Path.Path(Project,String)",1,1,1
"org.apache.tools.ant.types.Path.PathElement.getParts()",1,1,1
"org.apache.tools.ant.types.Path.PathElement.isFilesystemOnly()",1,1,1
"org.apache.tools.ant.types.Path.PathElement.iterator()",1,1,1
"org.apache.tools.ant.types.Path.PathElement.setLocation(File)",1,1,1
"org.apache.tools.ant.types.Path.PathElement.setPath(String)",1,1,1
"org.apache.tools.ant.types.Path.PathElement.size()",1,1,2
"org.apache.tools.ant.types.Path.add(Path)",1,1,1
"org.apache.tools.ant.types.Path.addDirset(DirSet)",1,1,1
"org.apache.tools.ant.types.Path.addExisting(Path)",1,1,1
"org.apache.tools.ant.types.Path.addExisting(Path,boolean)",1,5,6
"org.apache.tools.ant.types.Path.addExtdirs(Path)",3,6,6
"org.apache.tools.ant.types.Path.addFilelist(FileList)",1,1,1
"org.apache.tools.ant.types.Path.addFileset(FileSet)",1,1,1
"org.apache.tools.ant.types.Path.addJavaRuntime()",1,7,7
"org.apache.tools.ant.types.Path.append(Path)",2,1,2
"org.apache.tools.ant.types.Path.concatSpecialPath(String,Path)",1,6,7
"org.apache.tools.ant.types.Path.concatSystemBootClasspath(String)",1,1,1
"org.apache.tools.ant.types.Path.concatSystemClasspath()",1,1,1
"org.apache.tools.ant.types.Path.concatSystemClasspath(String)",1,1,1
"org.apache.tools.ant.types.Path.createPath()",1,1,1
"org.apache.tools.ant.types.Path.createPathElement()",2,2,2
"org.apache.tools.ant.types.Path.getCollection()",4,7,7
"org.apache.tools.ant.types.Path.resolveFile(Project,String)",1,2,2
"org.apache.tools.ant.types.Path.setLocation(File)",1,1,1
"org.apache.tools.ant.types.Path.setPath(String)",1,1,1
"org.apache.tools.ant.types.Path.setRefid(Reference)",2,2,2
"org.apache.tools.ant.types.Path.translateFile(String)",2,2,3
"org.apache.tools.ant.types.Path.translateFileSep(StringBuffer,int)",2,3,3
"org.apache.tools.ant.types.Path.translatePath(Project,String)",2,4,5
"org.apache.tools.ant.types.PatternSet.NameEntry.evalName(Project)",1,1,2
"org.apache.tools.ant.types.PatternSet.NameEntry.getName()",1,1,1
"org.apache.tools.ant.types.PatternSet.NameEntry.setIf(String)",1,1,1
"org.apache.tools.ant.types.PatternSet.NameEntry.setName(String)",1,1,1
"org.apache.tools.ant.types.PatternSet.NameEntry.setUnless(String)",1,1,1
"org.apache.tools.ant.types.PatternSet.NameEntry.toString()",2,4,6
"org.apache.tools.ant.types.PatternSet.NameEntry.valid(Project)",3,4,5
"org.apache.tools.ant.types.PatternSet.PatternSet()",1,1,1
"org.apache.tools.ant.types.PatternSet.addConfiguredPatternset(PatternSet)",2,6,6
"org.apache.tools.ant.types.PatternSet.addPatternToList(Vector)",1,1,1
"org.apache.tools.ant.types.PatternSet.append(PatternSet,Project)",2,5,6
"org.apache.tools.ant.types.PatternSet.clone()",2,2,3
"org.apache.tools.ant.types.PatternSet.createExclude()",2,2,2
"org.apache.tools.ant.types.PatternSet.createExcludesFile()",2,2,2
"org.apache.tools.ant.types.PatternSet.createInclude()",2,2,2
"org.apache.tools.ant.types.PatternSet.createIncludesFile()",2,2,2
"org.apache.tools.ant.types.PatternSet.getExcludePatterns(Project)",2,2,2
"org.apache.tools.ant.types.PatternSet.getIncludePatterns(Project)",2,2,2
"org.apache.tools.ant.types.PatternSet.getRef(Project)",1,1,1
"org.apache.tools.ant.types.PatternSet.hasPatterns(Project)",2,5,5
"org.apache.tools.ant.types.PatternSet.makeArray(Vector,Project)",2,4,5
"org.apache.tools.ant.types.PatternSet.readFiles(Project)",9,9,9
"org.apache.tools.ant.types.PatternSet.readPatterns(File,Vector,Project)",1,4,6
"org.apache.tools.ant.types.PatternSet.setExcludes(String)",2,5,5
"org.apache.tools.ant.types.PatternSet.setExcludesfile(File)",2,2,2
"org.apache.tools.ant.types.PatternSet.setIncludes(String)",2,5,5
"org.apache.tools.ant.types.PatternSet.setIncludesfile(File)",2,2,2
"org.apache.tools.ant.types.PatternSet.setRefid(Reference)",2,3,3
"org.apache.tools.ant.types.PatternSet.toString()",1,1,1
"org.apache.tools.ant.types.Permissions.MySM.checkExit(int)",1,2,2
"org.apache.tools.ant.types.Permissions.MySM.checkPermission(Permission)",4,5,8
"org.apache.tools.ant.types.Permissions.MySM.checkRevoked(Permission)",3,2,3
"org.apache.tools.ant.types.Permissions.Permission.getActions()",1,1,1
"org.apache.tools.ant.types.Permissions.Permission.getClassName()",1,1,1
"org.apache.tools.ant.types.Permissions.Permission.getName()",1,1,1
"org.apache.tools.ant.types.Permissions.Permission.matches(Permission)",8,4,8
"org.apache.tools.ant.types.Permissions.Permission.parseActions(String)",1,3,3
"org.apache.tools.ant.types.Permissions.Permission.setActions(String)",1,2,2
"org.apache.tools.ant.types.Permissions.Permission.setClass(String)",1,1,1
"org.apache.tools.ant.types.Permissions.Permission.setName(String)",1,1,1
"org.apache.tools.ant.types.Permissions.Permission.toString()",1,1,1
"org.apache.tools.ant.types.Permissions.Permissions()",1,1,1
"org.apache.tools.ant.types.Permissions.Permissions(boolean)",1,1,1
"org.apache.tools.ant.types.Permissions.addConfiguredGrant(Permission)",1,1,1
"org.apache.tools.ant.types.Permissions.addConfiguredRevoke(Permission)",1,1,1
"org.apache.tools.ant.types.Permissions.init()",5,4,5
"org.apache.tools.ant.types.Permissions.restoreSecurityManager()",1,1,1
"org.apache.tools.ant.types.Permissions.setSecurityManager()",1,1,1
"org.apache.tools.ant.types.PropertySet.BuiltinPropertySetName.getValues()",1,1,1
"org.apache.tools.ant.types.PropertySet.PropertyRef.assertValid(String,String)",3,2,4
"org.apache.tools.ant.types.PropertySet.PropertyRef.setBuiltin(BuiltinPropertySetName)",1,1,1
"org.apache.tools.ant.types.PropertySet.PropertyRef.setName(String)",1,1,1
"org.apache.tools.ant.types.PropertySet.PropertyRef.setPrefix(String)",1,1,1
"org.apache.tools.ant.types.PropertySet.PropertyRef.setRegex(String)",1,1,1
"org.apache.tools.ant.types.PropertySet.PropertyRef.toString()",1,1,1
"org.apache.tools.ant.types.PropertySet.add(FileNameMapper)",1,1,1
"org.apache.tools.ant.types.PropertySet.addPropertyNames(Set,Hashtable)",9,14,14
"org.apache.tools.ant.types.PropertySet.addPropertyref(PropertyRef)",1,1,1
"org.apache.tools.ant.types.PropertySet.addPropertyset(PropertySet)",1,1,1
"org.apache.tools.ant.types.PropertySet.appendBuiltin(BuiltinPropertySetName)",1,1,1
"org.apache.tools.ant.types.PropertySet.appendName(String)",1,1,1
"org.apache.tools.ant.types.PropertySet.appendPrefix(String)",1,1,1
"org.apache.tools.ant.types.PropertySet.appendRegex(String)",1,1,1
"org.apache.tools.ant.types.PropertySet.assertNotReference()",2,2,2
"org.apache.tools.ant.types.PropertySet.createMapper()",2,1,2
"org.apache.tools.ant.types.PropertySet.getAllSystemProperties()",1,2,2
"org.apache.tools.ant.types.PropertySet.getDynamic()",1,2,2
"org.apache.tools.ant.types.PropertySet.getMapper()",1,2,2
"org.apache.tools.ant.types.PropertySet.getProperties()",2,11,13
"org.apache.tools.ant.types.PropertySet.getRef()",1,1,1
"org.apache.tools.ant.types.PropertySet.isFilesystemOnly()",1,2,2
"org.apache.tools.ant.types.PropertySet.iterator()",1,1,1
"org.apache.tools.ant.types.PropertySet.setDynamic(boolean)",1,1,1
"org.apache.tools.ant.types.PropertySet.setMapper(String,String,String)",1,1,1
"org.apache.tools.ant.types.PropertySet.setNegate(boolean)",1,1,1
"org.apache.tools.ant.types.PropertySet.setRefid(Reference)",2,2,2
"org.apache.tools.ant.types.PropertySet.size()",1,2,2
"org.apache.tools.ant.types.PropertySet.toString()",1,3,3
"org.apache.tools.ant.types.RedirectorElement.addConfiguredErrorMapper(Mapper)",4,2,4
"org.apache.tools.ant.types.RedirectorElement.addConfiguredInputMapper(Mapper)",4,2,4
"org.apache.tools.ant.types.RedirectorElement.addConfiguredOutputMapper(Mapper)",4,2,4
"org.apache.tools.ant.types.RedirectorElement.configure(Redirector)",1,1,1
"org.apache.tools.ant.types.RedirectorElement.configure(Redirector,String)",8,22,31
"org.apache.tools.ant.types.RedirectorElement.createErrorFilterChain()",2,2,2
"org.apache.tools.ant.types.RedirectorElement.createInputFilterChain()",2,2,2
"org.apache.tools.ant.types.RedirectorElement.createMergeMapper(File)",1,1,1
"org.apache.tools.ant.types.RedirectorElement.createOutputFilterChain()",2,2,2
"org.apache.tools.ant.types.RedirectorElement.dieOnCircularReference(Stack,Project)",2,7,8
"org.apache.tools.ant.types.RedirectorElement.getRef()",1,1,1
"org.apache.tools.ant.types.RedirectorElement.setAlwaysLog(boolean)",2,2,3
"org.apache.tools.ant.types.RedirectorElement.setAppend(boolean)",2,2,3
"org.apache.tools.ant.types.RedirectorElement.setCreateEmptyFiles(boolean)",2,2,3
"org.apache.tools.ant.types.RedirectorElement.setError(File)",3,2,3
"org.apache.tools.ant.types.RedirectorElement.setErrorEncoding(String)",2,2,2
"org.apache.tools.ant.types.RedirectorElement.setErrorProperty(String)",2,2,2
"org.apache.tools.ant.types.RedirectorElement.setInput(File)",3,2,3
"org.apache.tools.ant.types.RedirectorElement.setInputEncoding(String)",2,2,2
"org.apache.tools.ant.types.RedirectorElement.setInputString(String)",3,2,3
"org.apache.tools.ant.types.RedirectorElement.setLogError(boolean)",2,2,3
"org.apache.tools.ant.types.RedirectorElement.setLogInputString(boolean)",2,2,3
"org.apache.tools.ant.types.RedirectorElement.setOutput(File)",3,2,3
"org.apache.tools.ant.types.RedirectorElement.setOutputEncoding(String)",2,2,2
"org.apache.tools.ant.types.RedirectorElement.setOutputProperty(String)",2,2,2
"org.apache.tools.ant.types.RedirectorElement.setRefid(Reference)",2,2,14
"org.apache.tools.ant.types.RedirectorElement.toFileArray(String[])",2,3,4
"org.apache.tools.ant.types.Reference.Reference()",1,1,1
"org.apache.tools.ant.types.Reference.Reference(Project,String)",1,1,1
"org.apache.tools.ant.types.Reference.Reference(String)",1,1,1
"org.apache.tools.ant.types.Reference.getProject()",1,1,1
"org.apache.tools.ant.types.Reference.getRefId()",1,1,1
"org.apache.tools.ant.types.Reference.getReferencedObject()",2,1,2
"org.apache.tools.ant.types.Reference.getReferencedObject(Project)",3,2,4
"org.apache.tools.ant.types.Reference.setProject(Project)",1,1,1
"org.apache.tools.ant.types.Reference.setRefId(String)",1,1,1
"org.apache.tools.ant.types.RegularExpression.RegularExpression()",1,1,1
"org.apache.tools.ant.types.RegularExpression.getPattern(Project)",2,2,2
"org.apache.tools.ant.types.RegularExpression.getRef(Project)",1,1,1
"org.apache.tools.ant.types.RegularExpression.getRegexp(Project)",2,2,2
"org.apache.tools.ant.types.RegularExpression.init(Project)",1,2,2
"org.apache.tools.ant.types.RegularExpression.setPattern()",1,2,2
"org.apache.tools.ant.types.RegularExpression.setPattern(String)",1,2,2
"org.apache.tools.ant.types.Resource.Resource()",1,1,1
"org.apache.tools.ant.types.Resource.Resource(String)",1,1,1
"org.apache.tools.ant.types.Resource.Resource(String,boolean,long)",1,1,1
"org.apache.tools.ant.types.Resource.Resource(String,boolean,long,boolean)",1,1,1
"org.apache.tools.ant.types.Resource.Resource(String,boolean,long,boolean,long)",1,1,1
"org.apache.tools.ant.types.Resource.clone()",1,1,2
"org.apache.tools.ant.types.Resource.compareTo(Object)",3,2,3
"org.apache.tools.ant.types.Resource.equals(Object)",2,3,3
"org.apache.tools.ant.types.Resource.getInputStream()",2,2,2
"org.apache.tools.ant.types.Resource.getLastModified()",3,3,5
"org.apache.tools.ant.types.Resource.getMagicNumber(byte[])",1,1,1
"org.apache.tools.ant.types.Resource.getName()",1,2,2
"org.apache.tools.ant.types.Resource.getOutputStream()",2,2,2
"org.apache.tools.ant.types.Resource.getSize()",2,4,4
"org.apache.tools.ant.types.Resource.hashCode()",2,3,3
"org.apache.tools.ant.types.Resource.isDirectory()",2,3,3
"org.apache.tools.ant.types.Resource.isExists()",2,3,3
"org.apache.tools.ant.types.Resource.isFilesystemOnly()",1,2,2
"org.apache.tools.ant.types.Resource.iterator()",2,2,3
"org.apache.tools.ant.types.Resource.setDirectory(boolean)",1,1,2
"org.apache.tools.ant.types.Resource.setExists(boolean)",1,1,2
"org.apache.tools.ant.types.Resource.setLastModified(long)",1,1,1
"org.apache.tools.ant.types.Resource.setName(String)",1,1,1
"org.apache.tools.ant.types.Resource.setRefid(Reference)",2,2,6
"org.apache.tools.ant.types.Resource.setSize(long)",1,1,2
"org.apache.tools.ant.types.Resource.size()",1,2,2
"org.apache.tools.ant.types.Resource.toLongString()",1,2,2
"org.apache.tools.ant.types.Resource.toString()",2,2,3
"org.apache.tools.ant.types.ResourceLocation.getBase()",1,1,1
"org.apache.tools.ant.types.ResourceLocation.getLocation()",1,1,1
"org.apache.tools.ant.types.ResourceLocation.getPublicId()",1,1,1
"org.apache.tools.ant.types.ResourceLocation.setBase(URL)",1,1,1
"org.apache.tools.ant.types.ResourceLocation.setLocation(String)",1,1,1
"org.apache.tools.ant.types.ResourceLocation.setPublicId(String)",1,1,1
"org.apache.tools.ant.types.Substitution.Substitution()",1,1,1
"org.apache.tools.ant.types.Substitution.getExpression(Project)",2,2,2
"org.apache.tools.ant.types.Substitution.getRef(Project)",1,1,1
"org.apache.tools.ant.types.Substitution.setExpression(String)",1,1,1
"org.apache.tools.ant.types.TarFileSet.TarFileSet()",1,1,1
"org.apache.tools.ant.types.TarFileSet.TarFileSet(FileSet)",1,1,1
"org.apache.tools.ant.types.TarFileSet.TarFileSet(TarFileSet)",1,1,1
"org.apache.tools.ant.types.TarFileSet.clone()",2,2,2
"org.apache.tools.ant.types.TarFileSet.configureFileSet(ArchiveFileSet)",1,2,2
"org.apache.tools.ant.types.TarFileSet.getGid()",2,2,2
"org.apache.tools.ant.types.TarFileSet.getGroup()",2,2,2
"org.apache.tools.ant.types.TarFileSet.getRef(Project)",3,3,3
"org.apache.tools.ant.types.TarFileSet.getUid()",2,2,2
"org.apache.tools.ant.types.TarFileSet.getUserName()",2,2,2
"org.apache.tools.ant.types.TarFileSet.hasGroupBeenSet()",1,1,1
"org.apache.tools.ant.types.TarFileSet.hasGroupIdBeenSet()",1,1,1
"org.apache.tools.ant.types.TarFileSet.hasUserIdBeenSet()",1,1,1
"org.apache.tools.ant.types.TarFileSet.hasUserNameBeenSet()",1,1,1
"org.apache.tools.ant.types.TarFileSet.newArchiveScanner()",1,1,1
"org.apache.tools.ant.types.TarFileSet.setGid(int)",1,1,1
"org.apache.tools.ant.types.TarFileSet.setGroup(String)",1,1,1
"org.apache.tools.ant.types.TarFileSet.setRefid(Reference)",2,2,5
"org.apache.tools.ant.types.TarFileSet.setUid(int)",1,1,1
"org.apache.tools.ant.types.TarFileSet.setUserName(String)",1,1,1
"org.apache.tools.ant.types.TarScanner.fillMapsFromArchive(Resource,String,Map,Map,Map,Map)",1,6,9
"org.apache.tools.ant.types.TimeComparison.TimeComparison()",1,1,1
"org.apache.tools.ant.types.TimeComparison.TimeComparison(String)",1,1,1
"org.apache.tools.ant.types.TimeComparison.compare(long,long)",1,1,1
"org.apache.tools.ant.types.TimeComparison.compare(long,long,long)",1,1,2
"org.apache.tools.ant.types.TimeComparison.evaluate(long,long)",1,1,1
"org.apache.tools.ant.types.TimeComparison.evaluate(long,long,long)",4,1,4
"org.apache.tools.ant.types.TimeComparison.getValues()",1,1,1
"org.apache.tools.ant.types.XMLCatalog.ExternalResolver.ExternalResolver(Class,Object)",1,1,2
"org.apache.tools.ant.types.XMLCatalog.ExternalResolver.processExternalCatalogs()",4,4,6
"org.apache.tools.ant.types.XMLCatalog.ExternalResolver.resolve(String,String)",3,5,8
"org.apache.tools.ant.types.XMLCatalog.ExternalResolver.resolveEntity(String,String)",3,4,6
"org.apache.tools.ant.types.XMLCatalog.InternalResolver.InternalResolver()",1,1,1
"org.apache.tools.ant.types.XMLCatalog.InternalResolver.resolve(String,String)",1,5,7
"org.apache.tools.ant.types.XMLCatalog.InternalResolver.resolveEntity(String,String)",1,4,4
"org.apache.tools.ant.types.XMLCatalog.XMLCatalog()",1,1,1
"org.apache.tools.ant.types.XMLCatalog.addConfiguredXMLCatalog(XMLCatalog)",2,3,3
"org.apache.tools.ant.types.XMLCatalog.addDTD(ResourceLocation)",2,2,2
"org.apache.tools.ant.types.XMLCatalog.addEntity(ResourceLocation)",1,1,1
"org.apache.tools.ant.types.XMLCatalog.classpathLookup(ResourceLocation)",1,3,3
"org.apache.tools.ant.types.XMLCatalog.createCatalogPath()",2,3,3
"org.apache.tools.ant.types.XMLCatalog.createClasspath()",2,3,3
"org.apache.tools.ant.types.XMLCatalog.filesystemLookup(ResourceLocation)",3,11,13
"org.apache.tools.ant.types.XMLCatalog.findMatchingEntry(String)",4,3,4
"org.apache.tools.ant.types.XMLCatalog.getCatalogPath()",1,1,1
"org.apache.tools.ant.types.XMLCatalog.getCatalogResolver()",1,5,5
"org.apache.tools.ant.types.XMLCatalog.getClasspath()",1,1,1
"org.apache.tools.ant.types.XMLCatalog.getElements()",1,1,1
"org.apache.tools.ant.types.XMLCatalog.getRef()",2,1,2
"org.apache.tools.ant.types.XMLCatalog.removeFragment(String)",1,2,2
"org.apache.tools.ant.types.XMLCatalog.resolve(String,String)",2,5,6
"org.apache.tools.ant.types.XMLCatalog.resolveEntity(String,String)",2,3,3
"org.apache.tools.ant.types.XMLCatalog.setCatalogPathRef(Reference)",2,2,2
"org.apache.tools.ant.types.XMLCatalog.setClasspath(Path)",2,3,3
"org.apache.tools.ant.types.XMLCatalog.setClasspathRef(Reference)",2,2,2
"org.apache.tools.ant.types.XMLCatalog.setEntityResolver(SAXSource)",2,2,4
"org.apache.tools.ant.types.XMLCatalog.setRefid(Reference)",2,2,2
"org.apache.tools.ant.types.XMLCatalog.urlLookup(ResourceLocation)",2,4,7
"org.apache.tools.ant.types.ZipFileSet.ZipFileSet()",1,1,1
"org.apache.tools.ant.types.ZipFileSet.ZipFileSet(FileSet)",1,1,1
"org.apache.tools.ant.types.ZipFileSet.ZipFileSet(ZipFileSet)",1,1,1
"org.apache.tools.ant.types.ZipFileSet.clone()",2,2,2
"org.apache.tools.ant.types.ZipFileSet.getEncoding()",1,1,1
"org.apache.tools.ant.types.ZipFileSet.getRef(Project)",3,3,3
"org.apache.tools.ant.types.ZipFileSet.newArchiveScanner()",1,1,1
"org.apache.tools.ant.types.ZipFileSet.setEncoding(String)",1,1,1
"org.apache.tools.ant.types.ZipScanner.fillMapsFromArchive(Resource,String,Map,Map,Map,Map)",2,7,10
"org.apache.tools.ant.types.mappers.FilterMapper.mapFileName(String)",2,1,4
"org.apache.tools.ant.types.mappers.FilterMapper.setFrom(String)",1,1,1
"org.apache.tools.ant.types.mappers.FilterMapper.setTo(String)",1,1,1
"org.apache.tools.ant.types.optional.AbstractScriptComponent.addText(String)",1,1,1
"org.apache.tools.ant.types.optional.AbstractScriptComponent.executeScript(String)",1,1,1
"org.apache.tools.ant.types.optional.AbstractScriptComponent.getRunner()",1,1,1
"org.apache.tools.ant.types.optional.AbstractScriptComponent.initScriptRunner()",1,1,1
"org.apache.tools.ant.types.optional.AbstractScriptComponent.setLanguage(String)",1,1,1
"org.apache.tools.ant.types.optional.AbstractScriptComponent.setSrc(File)",1,1,1
"org.apache.tools.ant.types.optional.ScriptCondition.eval()",1,1,1
"org.apache.tools.ant.types.optional.ScriptCondition.getValue()",1,1,1
"org.apache.tools.ant.types.optional.ScriptCondition.setValue(boolean)",1,1,1
"org.apache.tools.ant.types.optional.ScriptFilter.addText(String)",1,1,1
"org.apache.tools.ant.types.optional.ScriptFilter.filter(String)",1,1,1
"org.apache.tools.ant.types.optional.ScriptFilter.getToken()",1,1,1
"org.apache.tools.ant.types.optional.ScriptFilter.init()",2,1,2
"org.apache.tools.ant.types.optional.ScriptFilter.setLanguage(String)",1,1,1
"org.apache.tools.ant.types.optional.ScriptFilter.setSrc(File)",1,1,1
"org.apache.tools.ant.types.optional.ScriptFilter.setToken(String)",1,1,1
"org.apache.tools.ant.types.optional.ScriptMapper.addMappedName(String)",1,1,1
"org.apache.tools.ant.types.optional.ScriptMapper.clear()",1,1,1
"org.apache.tools.ant.types.optional.ScriptMapper.mapFileName(String)",2,2,2
"org.apache.tools.ant.types.optional.ScriptMapper.setFrom(String)",1,1,1
"org.apache.tools.ant.types.optional.ScriptMapper.setTo(String)",1,1,1
"org.apache.tools.ant.types.optional.ScriptSelector.addText(String)",1,1,1
"org.apache.tools.ant.types.optional.ScriptSelector.getBasedir()",1,1,1
"org.apache.tools.ant.types.optional.ScriptSelector.getFile()",1,1,1
"org.apache.tools.ant.types.optional.ScriptSelector.getFilename()",1,1,1
"org.apache.tools.ant.types.optional.ScriptSelector.init()",2,1,2
"org.apache.tools.ant.types.optional.ScriptSelector.isSelected()",1,1,1
"org.apache.tools.ant.types.optional.ScriptSelector.isSelected(File,String,File)",1,1,1
"org.apache.tools.ant.types.optional.ScriptSelector.setLanguage(String)",1,1,1
"org.apache.tools.ant.types.optional.ScriptSelector.setSelected(boolean)",1,1,1
"org.apache.tools.ant.types.optional.ScriptSelector.setSrc(File)",1,1,1
"org.apache.tools.ant.types.optional.depend.ClassfileSet.ClassRoot.getClassname()",1,1,1
"org.apache.tools.ant.types.optional.depend.ClassfileSet.ClassRoot.setClassname(String)",1,1,1
"org.apache.tools.ant.types.optional.depend.ClassfileSet.ClassfileSet()",1,1,1
"org.apache.tools.ant.types.optional.depend.ClassfileSet.ClassfileSet(ClassfileSet)",1,1,1
"org.apache.tools.ant.types.optional.depend.ClassfileSet.addConfiguredRoot(ClassRoot)",1,1,1
"org.apache.tools.ant.types.optional.depend.ClassfileSet.addRootFileset(FileSet)",1,1,1
"org.apache.tools.ant.types.optional.depend.ClassfileSet.clone()",1,2,2
"org.apache.tools.ant.types.optional.depend.ClassfileSet.getDirectoryScanner(Project)",2,5,5
"org.apache.tools.ant.types.optional.depend.ClassfileSet.setRootClass(String)",1,1,1
"org.apache.tools.ant.types.optional.depend.DependScanner.DependScanner(DirectoryScanner)",1,1,1
"org.apache.tools.ant.types.optional.depend.DependScanner.addDefaultExcludes()",1,1,1
"org.apache.tools.ant.types.optional.depend.DependScanner.getExcludedDirectories()",1,1,1
"org.apache.tools.ant.types.optional.depend.DependScanner.getExcludedFiles()",1,1,1
"org.apache.tools.ant.types.optional.depend.DependScanner.getIncludedDirectories()",1,1,1
"org.apache.tools.ant.types.optional.depend.DependScanner.getIncludedDirsCount()",1,1,1
"org.apache.tools.ant.types.optional.depend.DependScanner.getIncludedFiles()",1,2,2
"org.apache.tools.ant.types.optional.depend.DependScanner.getIncludedFilesCount()",2,1,2
"org.apache.tools.ant.types.optional.depend.DependScanner.getNotIncludedDirectories()",1,1,1
"org.apache.tools.ant.types.optional.depend.DependScanner.getNotIncludedFiles()",1,1,1
"org.apache.tools.ant.types.optional.depend.DependScanner.scan()",1,6,7
"org.apache.tools.ant.types.optional.depend.DependScanner.setCaseSensitive(boolean)",1,1,1
"org.apache.tools.ant.types.optional.depend.DependScanner.setExcludes(String[])",1,1,1
"org.apache.tools.ant.types.optional.depend.DependScanner.setIncludes(String[])",1,1,1
"org.apache.tools.ant.types.optional.depend.DependScanner.setRootClasses(Vector)",1,1,1
"org.apache.tools.ant.types.optional.image.Arc.executeDrawOperation()",1,6,6
"org.apache.tools.ant.types.optional.image.Arc.setHeight(int)",1,1,1
"org.apache.tools.ant.types.optional.image.Arc.setStart(int)",1,1,1
"org.apache.tools.ant.types.optional.image.Arc.setStop(int)",1,1,1
"org.apache.tools.ant.types.optional.image.Arc.setType(String)",1,3,4
"org.apache.tools.ant.types.optional.image.Arc.setWidth(int)",1,1,1
"org.apache.tools.ant.types.optional.image.BasicShape.setFill(String)",1,1,1
"org.apache.tools.ant.types.optional.image.BasicShape.setStroke(String)",1,1,1
"org.apache.tools.ant.types.optional.image.BasicShape.setStrokewidth(int)",1,1,1
"org.apache.tools.ant.types.optional.image.ColorMapper.getColorByName(String)",14,16,17
"org.apache.tools.ant.types.optional.image.Draw.addArc(Arc)",1,1,1
"org.apache.tools.ant.types.optional.image.Draw.addEllipse(Ellipse)",1,1,1
"org.apache.tools.ant.types.optional.image.Draw.addRectangle(Rectangle)",1,1,1
"org.apache.tools.ant.types.optional.image.Draw.addText(Text)",1,1,1
"org.apache.tools.ant.types.optional.image.Draw.executeTransformOperation(PlanarImage)",1,4,4
"org.apache.tools.ant.types.optional.image.Draw.setXloc(int)",1,1,1
"org.apache.tools.ant.types.optional.image.Draw.setYloc(int)",1,1,1
"org.apache.tools.ant.types.optional.image.Ellipse.executeDrawOperation()",1,6,6
"org.apache.tools.ant.types.optional.image.Ellipse.setHeight(int)",1,1,1
"org.apache.tools.ant.types.optional.image.Ellipse.setWidth(int)",1,1,1
"org.apache.tools.ant.types.optional.image.ImageOperation.addDraw(Draw)",1,1,1
"org.apache.tools.ant.types.optional.image.ImageOperation.addRectangle(Rectangle)",1,1,1
"org.apache.tools.ant.types.optional.image.ImageOperation.addRotate(Rotate)",1,1,1
"org.apache.tools.ant.types.optional.image.ImageOperation.addScale(Scale)",1,1,1
"org.apache.tools.ant.types.optional.image.ImageOperation.addText(Text)",1,1,1
"org.apache.tools.ant.types.optional.image.Rectangle.executeDrawOperation()",1,8,10
"org.apache.tools.ant.types.optional.image.Rectangle.setArcheight(int)",1,1,1
"org.apache.tools.ant.types.optional.image.Rectangle.setArcwidth(int)",1,1,1
"org.apache.tools.ant.types.optional.image.Rectangle.setHeight(int)",1,1,1
"org.apache.tools.ant.types.optional.image.Rectangle.setWidth(int)",1,1,1
"org.apache.tools.ant.types.optional.image.Rotate.executeDrawOperation()",3,3,3
"org.apache.tools.ant.types.optional.image.Rotate.executeTransformOperation(PlanarImage)",3,4,4
"org.apache.tools.ant.types.optional.image.Rotate.performRotate(PlanarImage)",1,1,1
"org.apache.tools.ant.types.optional.image.Rotate.setAngle(String)",1,1,1
"org.apache.tools.ant.types.optional.image.Scale.ProportionsAttribute.getValues()",1,1,1
"org.apache.tools.ant.types.optional.image.Scale.executeDrawOperation()",3,3,3
"org.apache.tools.ant.types.optional.image.Scale.executeTransformOperation(PlanarImage)",3,4,4
"org.apache.tools.ant.types.optional.image.Scale.getHeight()",2,2,2
"org.apache.tools.ant.types.optional.image.Scale.getWidth()",2,2,2
"org.apache.tools.ant.types.optional.image.Scale.performScale(PlanarImage)",1,7,7
"org.apache.tools.ant.types.optional.image.Scale.setHeight(String)",1,1,1
"org.apache.tools.ant.types.optional.image.Scale.setProportions(ProportionsAttribute)",1,1,1
"org.apache.tools.ant.types.optional.image.Scale.setWidth(String)",1,1,1
"org.apache.tools.ant.types.optional.image.Text.executeDrawOperation()",1,1,1
"org.apache.tools.ant.types.optional.image.Text.setBold(boolean)",1,1,1
"org.apache.tools.ant.types.optional.image.Text.setColor(String)",1,1,1
"org.apache.tools.ant.types.optional.image.Text.setFont(String)",1,1,1
"org.apache.tools.ant.types.optional.image.Text.setItalic(boolean)",1,1,1
"org.apache.tools.ant.types.optional.image.Text.setPoint(String)",1,1,1
"org.apache.tools.ant.types.optional.image.Text.setString(String)",1,1,1
"org.apache.tools.ant.types.optional.image.TransformOperation.addRectangle(Rectangle)",1,1,1
"org.apache.tools.ant.types.resolver.ApacheCatalog.addEntry(CatalogEntry)",1,5,5
"org.apache.tools.ant.types.resolver.ApacheCatalog.newCatalog()",1,1,1
"org.apache.tools.ant.types.resolver.ApacheCatalog.setResolver(ApacheCatalogResolver)",1,1,1
"org.apache.tools.ant.types.resolver.ApacheCatalogResolver.addPublicEntry(String,String,URL)",1,1,1
"org.apache.tools.ant.types.resolver.ApacheCatalogResolver.addURIEntry(String,String,URL)",1,1,1
"org.apache.tools.ant.types.resolver.ApacheCatalogResolver.parseCatalog(String)",2,2,4
"org.apache.tools.ant.types.resolver.ApacheCatalogResolver.setXMLCatalog(XMLCatalog)",1,1,1
"org.apache.tools.ant.types.resources.ArchiveResource.ArchiveResource()",1,1,1
"org.apache.tools.ant.types.resources.ArchiveResource.ArchiveResource(File)",1,1,1
"org.apache.tools.ant.types.resources.ArchiveResource.ArchiveResource(File,boolean)",1,1,1
"org.apache.tools.ant.types.resources.ArchiveResource.ArchiveResource(Resource,boolean)",1,1,1
"org.apache.tools.ant.types.resources.ArchiveResource.addConfigured(ResourceCollection)",3,1,3
"org.apache.tools.ant.types.resources.ArchiveResource.checkEntry()",6,2,6
"org.apache.tools.ant.types.resources.ArchiveResource.compareTo(Object)",1,2,2
"org.apache.tools.ant.types.resources.ArchiveResource.equals(Object)",4,3,5
"org.apache.tools.ant.types.resources.ArchiveResource.getArchive()",1,2,2
"org.apache.tools.ant.types.resources.ArchiveResource.getLastModified()",2,2,2
"org.apache.tools.ant.types.resources.ArchiveResource.getMode()",2,2,2
"org.apache.tools.ant.types.resources.ArchiveResource.getSize()",2,2,2
"org.apache.tools.ant.types.resources.ArchiveResource.hashCode()",1,2,2
"org.apache.tools.ant.types.resources.ArchiveResource.isDirectory()",2,2,2
"org.apache.tools.ant.types.resources.ArchiveResource.isExists()",2,2,2
"org.apache.tools.ant.types.resources.ArchiveResource.setArchive(File)",1,1,1
"org.apache.tools.ant.types.resources.ArchiveResource.setMode(int)",1,1,1
"org.apache.tools.ant.types.resources.ArchiveResource.setRefid(Reference)",2,2,3
"org.apache.tools.ant.types.resources.ArchiveResource.toString()",1,2,2
"org.apache.tools.ant.types.resources.BCFileSet.BCFileSet()",1,1,1
"org.apache.tools.ant.types.resources.BCFileSet.BCFileSet(FileSet)",1,1,1
"org.apache.tools.ant.types.resources.BCFileSet.iterator()",2,2,2
"org.apache.tools.ant.types.resources.BCFileSet.size()",2,2,2
"org.apache.tools.ant.types.resources.BZip2Resource.BZip2Resource()",1,1,1
"org.apache.tools.ant.types.resources.BZip2Resource.BZip2Resource(ResourceCollection)",1,1,1
"org.apache.tools.ant.types.resources.BZip2Resource.getCompressionName()",1,1,1
"org.apache.tools.ant.types.resources.BZip2Resource.wrapStream(InputStream)",3,2,3
"org.apache.tools.ant.types.resources.BZip2Resource.wrapStream(OutputStream)",1,2,2
"org.apache.tools.ant.types.resources.BaseResourceCollectionContainer.add(ResourceCollection)",3,2,3
"org.apache.tools.ant.types.resources.BaseResourceCollectionContainer.addAll(Collection)",2,3,4
"org.apache.tools.ant.types.resources.BaseResourceCollectionContainer.cacheCollection()",1,3,3
"org.apache.tools.ant.types.resources.BaseResourceCollectionContainer.clear()",2,2,2
"org.apache.tools.ant.types.resources.BaseResourceCollectionContainer.clone()",1,1,2
"org.apache.tools.ant.types.resources.BaseResourceCollectionContainer.dieOnCircularReference(Stack,Project)",2,4,5
"org.apache.tools.ant.types.resources.BaseResourceCollectionContainer.getResourceCollections()",1,1,1
"org.apache.tools.ant.types.resources.BaseResourceCollectionContainer.isCache()",1,1,1
"org.apache.tools.ant.types.resources.BaseResourceCollectionContainer.isFilesystemOnly()",5,5,7
"org.apache.tools.ant.types.resources.BaseResourceCollectionContainer.iterator()",2,2,2
"org.apache.tools.ant.types.resources.BaseResourceCollectionContainer.setCache(boolean)",1,1,1
"org.apache.tools.ant.types.resources.BaseResourceCollectionContainer.size()",2,2,2
"org.apache.tools.ant.types.resources.BaseResourceCollectionContainer.toString()",3,4,5
"org.apache.tools.ant.types.resources.BaseResourceCollectionWrapper.add(ResourceCollection)",3,3,4
"org.apache.tools.ant.types.resources.BaseResourceCollectionWrapper.cacheCollection()",1,3,3
"org.apache.tools.ant.types.resources.BaseResourceCollectionWrapper.dieOnCircularReference(Stack,Project)",2,3,4
"org.apache.tools.ant.types.resources.BaseResourceCollectionWrapper.getResourceCollection()",1,2,2
"org.apache.tools.ant.types.resources.BaseResourceCollectionWrapper.isCache()",1,1,1
"org.apache.tools.ant.types.resources.BaseResourceCollectionWrapper.isFilesystemOnly()",5,4,6
"org.apache.tools.ant.types.resources.BaseResourceCollectionWrapper.iterator()",2,2,2
"org.apache.tools.ant.types.resources.BaseResourceCollectionWrapper.setCache(boolean)",1,1,1
"org.apache.tools.ant.types.resources.BaseResourceCollectionWrapper.size()",2,2,2
"org.apache.tools.ant.types.resources.BaseResourceCollectionWrapper.throwOneNested()",1,1,1
"org.apache.tools.ant.types.resources.BaseResourceCollectionWrapper.toString()",3,4,5
"org.apache.tools.ant.types.resources.CompressedResource.CompressedResource()",1,1,1
"org.apache.tools.ant.types.resources.CompressedResource.CompressedResource(ResourceCollection)",1,1,1
"org.apache.tools.ant.types.resources.CompressedResource.addConfigured(ResourceCollection)",3,1,3
"org.apache.tools.ant.types.resources.CompressedResource.compareTo(Object)",1,1,1
"org.apache.tools.ant.types.resources.CompressedResource.getInputStream()",1,2,2
"org.apache.tools.ant.types.resources.CompressedResource.getLastModified()",1,1,1
"org.apache.tools.ant.types.resources.CompressedResource.getName()",1,1,1
"org.apache.tools.ant.types.resources.CompressedResource.getOutputStream()",1,2,2
"org.apache.tools.ant.types.resources.CompressedResource.getResource()",3,2,3
"org.apache.tools.ant.types.resources.CompressedResource.getSize()",2,3,4
"org.apache.tools.ant.types.resources.CompressedResource.hashCode()",1,1,1
"org.apache.tools.ant.types.resources.CompressedResource.isDirectory()",1,1,1
"org.apache.tools.ant.types.resources.CompressedResource.isExists()",1,1,1
"org.apache.tools.ant.types.resources.CompressedResource.isFilesystemOnly()",1,1,1
"org.apache.tools.ant.types.resources.CompressedResource.setDirectory(boolean)",1,1,1
"org.apache.tools.ant.types.resources.CompressedResource.setExists(boolean)",1,1,1
"org.apache.tools.ant.types.resources.CompressedResource.setLastModified(long)",1,1,1
"org.apache.tools.ant.types.resources.CompressedResource.setName(String)",1,1,1
"org.apache.tools.ant.types.resources.CompressedResource.setRefid(Reference)",2,2,2
"org.apache.tools.ant.types.resources.CompressedResource.setSize(long)",1,1,1
"org.apache.tools.ant.types.resources.CompressedResource.toString()",1,1,1
"org.apache.tools.ant.types.resources.Difference.getCollection()",2,4,6
"org.apache.tools.ant.types.resources.Difference.nextRC(Iterator)",1,1,1
"org.apache.tools.ant.types.resources.FailFast.FailFast(Object,Iterator)",3,2,4
"org.apache.tools.ant.types.resources.FailFast.add(FailFast)",1,2,2
"org.apache.tools.ant.types.resources.FailFast.failFast(FailFast)",2,1,2
"org.apache.tools.ant.types.resources.FailFast.hasNext()",2,1,2
"org.apache.tools.ant.types.resources.FailFast.invalidate(Object)",1,2,2
"org.apache.tools.ant.types.resources.FailFast.next()",2,3,4
"org.apache.tools.ant.types.resources.FailFast.remove()",1,1,1
"org.apache.tools.ant.types.resources.FailFast.remove(FailFast)",1,2,2
"org.apache.tools.ant.types.resources.FileResource.FileResource()",1,1,1
"org.apache.tools.ant.types.resources.FileResource.FileResource(File)",1,1,1
"org.apache.tools.ant.types.resources.FileResource.FileResource(File,String)",1,1,1
"org.apache.tools.ant.types.resources.FileResource.FileResource(Project,String)",1,1,1
"org.apache.tools.ant.types.resources.FileResource.compareTo(Object)",6,3,6
"org.apache.tools.ant.types.resources.FileResource.equals(Object)",4,3,5
"org.apache.tools.ant.types.resources.FileResource.getBaseDir()",1,2,2
"org.apache.tools.ant.types.resources.FileResource.getFile()",1,2,2
"org.apache.tools.ant.types.resources.FileResource.getInputStream()",1,2,2
"org.apache.tools.ant.types.resources.FileResource.getLastModified()",1,2,2
"org.apache.tools.ant.types.resources.FileResource.getName()",2,3,3
"org.apache.tools.ant.types.resources.FileResource.getNotNullFile()",2,1,2
"org.apache.tools.ant.types.resources.FileResource.getOutputStream()",2,6,6
"org.apache.tools.ant.types.resources.FileResource.getSize()",1,2,2
"org.apache.tools.ant.types.resources.FileResource.hashCode()",2,3,3
"org.apache.tools.ant.types.resources.FileResource.isDirectory()",1,2,2
"org.apache.tools.ant.types.resources.FileResource.isExists()",1,2,2
"org.apache.tools.ant.types.resources.FileResource.isFilesystemOnly()",1,2,2
"org.apache.tools.ant.types.resources.FileResource.setBaseDir(File)",1,1,1
"org.apache.tools.ant.types.resources.FileResource.setFile(File)",1,1,1
"org.apache.tools.ant.types.resources.FileResource.setRefid(Reference)",2,2,3
"org.apache.tools.ant.types.resources.FileResource.toString()",3,2,3
"org.apache.tools.ant.types.resources.FileResource.touch(long)",2,2,2
"org.apache.tools.ant.types.resources.FileResourceIterator.FileResourceIterator()",1,1,1
"org.apache.tools.ant.types.resources.FileResourceIterator.FileResourceIterator(File)",1,1,1
"org.apache.tools.ant.types.resources.FileResourceIterator.FileResourceIterator(File,String[])",1,1,1
"org.apache.tools.ant.types.resources.FileResourceIterator.addFiles(String[])",1,2,3
"org.apache.tools.ant.types.resources.FileResourceIterator.hasNext()",1,1,1
"org.apache.tools.ant.types.resources.FileResourceIterator.next()",1,1,1
"org.apache.tools.ant.types.resources.FileResourceIterator.nextResource()",2,1,2
"org.apache.tools.ant.types.resources.FileResourceIterator.remove()",1,1,1
"org.apache.tools.ant.types.resources.Files.Files()",1,1,1
"org.apache.tools.ant.types.resources.Files.Files(Files)",1,1,1
"org.apache.tools.ant.types.resources.Files.appendExcludes(String[])",1,3,3
"org.apache.tools.ant.types.resources.Files.appendIncludes(String[])",1,3,3
"org.apache.tools.ant.types.resources.Files.appendSelector(FileSelector)",2,2,2
"org.apache.tools.ant.types.resources.Files.clone()",2,3,4
"org.apache.tools.ant.types.resources.Files.createExclude()",2,2,2
"org.apache.tools.ant.types.resources.Files.createExcludesFile()",2,2,2
"org.apache.tools.ant.types.resources.Files.createInclude()",2,2,2
"org.apache.tools.ant.types.resources.Files.createIncludesFile()",2,2,2
"org.apache.tools.ant.types.resources.Files.createPatternSet()",2,2,2
"org.apache.tools.ant.types.resources.Files.ensureDirectoryScannerSetup()",1,3,3
"org.apache.tools.ant.types.resources.Files.getDefaultexcludes()",1,2,2
"org.apache.tools.ant.types.resources.Files.getRef()",1,1,1
"org.apache.tools.ant.types.resources.Files.hasPatterns()",5,3,5
"org.apache.tools.ant.types.resources.Files.hasPatterns(PatternSet)",1,2,2
"org.apache.tools.ant.types.resources.Files.isCaseSensitive()",1,2,2
"org.apache.tools.ant.types.resources.Files.isFilesystemOnly()",1,1,1
"org.apache.tools.ant.types.resources.Files.isFollowSymlinks()",1,2,2
"org.apache.tools.ant.types.resources.Files.iterator()",3,4,5
"org.apache.tools.ant.types.resources.Files.mergeExcludes(Project)",1,1,1
"org.apache.tools.ant.types.resources.Files.mergeIncludes(Project)",1,1,1
"org.apache.tools.ant.types.resources.Files.mergePatterns(Project)",2,3,3
"org.apache.tools.ant.types.resources.Files.setCaseSensitive(boolean)",1,1,1
"org.apache.tools.ant.types.resources.Files.setDefaultexcludes(boolean)",1,1,1
"org.apache.tools.ant.types.resources.Files.setExcludes(String)",1,1,1
"org.apache.tools.ant.types.resources.Files.setExcludesfile(File)",1,1,1
"org.apache.tools.ant.types.resources.Files.setFollowSymlinks(boolean)",1,1,1
"org.apache.tools.ant.types.resources.Files.setIncludes(String)",1,1,1
"org.apache.tools.ant.types.resources.Files.setIncludesfile(File)",1,1,1
"org.apache.tools.ant.types.resources.Files.setRefid(Reference)",4,4,4
"org.apache.tools.ant.types.resources.Files.size()",2,2,2
"org.apache.tools.ant.types.resources.Files.toString()",3,4,5
"org.apache.tools.ant.types.resources.First.getCollection()",2,3,4
"org.apache.tools.ant.types.resources.First.getCount()",1,1,1
"org.apache.tools.ant.types.resources.First.setCount(int)",1,1,1
"org.apache.tools.ant.types.resources.GZipResource.GZipResource()",1,1,1
"org.apache.tools.ant.types.resources.GZipResource.GZipResource(ResourceCollection)",1,1,1
"org.apache.tools.ant.types.resources.GZipResource.getCompressionName()",1,1,1
"org.apache.tools.ant.types.resources.GZipResource.wrapStream(InputStream)",1,1,1
"org.apache.tools.ant.types.resources.GZipResource.wrapStream(OutputStream)",1,1,1
"org.apache.tools.ant.types.resources.ImmutableResourceException.ImmutableResourceException()",1,1,1
"org.apache.tools.ant.types.resources.ImmutableResourceException.ImmutableResourceException(String)",1,1,1
"org.apache.tools.ant.types.resources.Intersect.collect(Object)",1,2,2
"org.apache.tools.ant.types.resources.Intersect.getCollection()",2,2,4
"org.apache.tools.ant.types.resources.JavaResource.JavaResource()",1,1,1
"org.apache.tools.ant.types.resources.JavaResource.JavaResource(String,Path)",1,1,1
"org.apache.tools.ant.types.resources.JavaResource.compareTo(Object)",10,6,10
"org.apache.tools.ant.types.resources.JavaResource.createClasspath()",1,2,2
"org.apache.tools.ant.types.resources.JavaResource.getClasspath()",1,2,2
"org.apache.tools.ant.types.resources.JavaResource.getInputStream()",2,7,8
"org.apache.tools.ant.types.resources.JavaResource.isExists()",1,2,3
"org.apache.tools.ant.types.resources.JavaResource.setClasspath(Path)",1,2,2
"org.apache.tools.ant.types.resources.JavaResource.setClasspathRef(Reference)",1,1,1
"org.apache.tools.ant.types.resources.JavaResource.setLoaderRef(Reference)",1,1,1
"org.apache.tools.ant.types.resources.JavaResource.setRefid(Reference)",2,2,3
"org.apache.tools.ant.types.resources.PropertyResource.PropertyResource()",1,1,1
"org.apache.tools.ant.types.resources.PropertyResource.PropertyResource(Project,String)",1,1,1
"org.apache.tools.ant.types.resources.PropertyResource.getInputStream()",2,3,3
"org.apache.tools.ant.types.resources.PropertyResource.getOutputStream()",3,2,3
"org.apache.tools.ant.types.resources.PropertyResource.getSize()",2,3,3
"org.apache.tools.ant.types.resources.PropertyResource.getValue()",1,2,2
"org.apache.tools.ant.types.resources.PropertyResource.hashCode()",2,2,2
"org.apache.tools.ant.types.resources.PropertyResource.isExists()",1,1,1
"org.apache.tools.ant.types.resources.Resources.MyCollection.MyCollection()",1,2,2
"org.apache.tools.ant.types.resources.Resources.MyCollection.MyIterator.hasNext()",1,4,4
"org.apache.tools.ant.types.resources.Resources.MyCollection.MyIterator.next()",2,1,2
"org.apache.tools.ant.types.resources.Resources.MyCollection.MyIterator.remove()",1,1,1
"org.apache.tools.ant.types.resources.Resources.MyCollection.iterator()",1,1,1
"org.apache.tools.ant.types.resources.Resources.MyCollection.size()",1,1,1
"org.apache.tools.ant.types.resources.Resources.add(ResourceCollection)",3,2,3
"org.apache.tools.ant.types.resources.Resources.dieOnCircularReference(Stack,Project)",2,4,5
"org.apache.tools.ant.types.resources.Resources.getRef()",1,1,1
"org.apache.tools.ant.types.resources.Resources.isFilesystemOnly()",4,3,4
"org.apache.tools.ant.types.resources.Resources.iterator()",2,2,2
"org.apache.tools.ant.types.resources.Resources.size()",2,2,2
"org.apache.tools.ant.types.resources.Resources.toString()",3,5,6
"org.apache.tools.ant.types.resources.Resources.validate()",1,1,2
"org.apache.tools.ant.types.resources.Restrict.add(ResourceCollection)",2,2,2
"org.apache.tools.ant.types.resources.Restrict.add(ResourceSelector)",2,1,2
"org.apache.tools.ant.types.resources.Restrict.isCache()",1,1,1
"org.apache.tools.ant.types.resources.Restrict.isFilesystemOnly()",2,2,2
"org.apache.tools.ant.types.resources.Restrict.iterator()",2,2,2
"org.apache.tools.ant.types.resources.Restrict.setCache(boolean)",1,1,1
"org.apache.tools.ant.types.resources.Restrict.size()",2,2,2
"org.apache.tools.ant.types.resources.Restrict.toString()",2,2,2
"org.apache.tools.ant.types.resources.Sort.MultiComparator.add(ResourceComparator)",2,1,3
"org.apache.tools.ant.types.resources.Sort.MultiComparator.compare(Object,Object)",1,5,5
"org.apache.tools.ant.types.resources.Sort.SortedBag.MyIterator.hasNext()",1,2,2
"org.apache.tools.ant.types.resources.Sort.SortedBag.MyIterator.next()",2,2,3
"org.apache.tools.ant.types.resources.Sort.SortedBag.MyIterator.remove()",1,1,1
"org.apache.tools.ant.types.resources.Sort.SortedBag.SortedBag(Comparator)",1,1,1
"org.apache.tools.ant.types.resources.Sort.SortedBag.add(Object)",1,2,3
"org.apache.tools.ant.types.resources.Sort.SortedBag.iterator()",1,1,1
"org.apache.tools.ant.types.resources.Sort.SortedBag.size()",1,1,1
"org.apache.tools.ant.types.resources.Sort.add(ResourceComparator)",2,2,2
"org.apache.tools.ant.types.resources.Sort.dieOnCircularReference(Stack,Project)",2,6,7
"org.apache.tools.ant.types.resources.Sort.getCollection()",2,2,3
"org.apache.tools.ant.types.resources.StringResource.StringResource()",1,1,1
"org.apache.tools.ant.types.resources.StringResource.StringResource(String)",1,1,1
"org.apache.tools.ant.types.resources.StringResource.getContent()",3,3,4
"org.apache.tools.ant.types.resources.StringResource.getEncoding()",1,1,1
"org.apache.tools.ant.types.resources.StringResource.getInputStream()",2,2,2
"org.apache.tools.ant.types.resources.StringResource.getName()",1,1,1
"org.apache.tools.ant.types.resources.StringResource.getOutputStream()",3,3,4
"org.apache.tools.ant.types.resources.StringResource.getSize()",1,2,2
"org.apache.tools.ant.types.resources.StringResource.getValue()",1,1,1
"org.apache.tools.ant.types.resources.StringResource.hashCode()",2,2,2
"org.apache.tools.ant.types.resources.StringResource.setEncoding(String)",1,1,1
"org.apache.tools.ant.types.resources.StringResource.setName(String)",2,1,2
"org.apache.tools.ant.types.resources.StringResource.setRefid(Reference)",2,2,2
"org.apache.tools.ant.types.resources.StringResource.setValue(String)",1,1,1
"org.apache.tools.ant.types.resources.TarResource.TarResource()",1,1,1
"org.apache.tools.ant.types.resources.TarResource.TarResource(File,TarEntry)",1,1,1
"org.apache.tools.ant.types.resources.TarResource.TarResource(Resource,TarEntry)",1,1,1
"org.apache.tools.ant.types.resources.TarResource.fetchEntry()",3,5,5
"org.apache.tools.ant.types.resources.TarResource.getGid()",2,2,2
"org.apache.tools.ant.types.resources.TarResource.getGroup()",2,2,2
"org.apache.tools.ant.types.resources.TarResource.getInputStream()",4,3,4
"org.apache.tools.ant.types.resources.TarResource.getOutputStream()",2,2,2
"org.apache.tools.ant.types.resources.TarResource.getUid()",2,2,2
"org.apache.tools.ant.types.resources.TarResource.getUserName()",2,2,2
"org.apache.tools.ant.types.resources.TarResource.setEntry(TarEntry)",2,2,2
"org.apache.tools.ant.types.resources.URLResource.URLResource()",1,1,1
"org.apache.tools.ant.types.resources.URLResource.URLResource(File)",1,1,1
"org.apache.tools.ant.types.resources.URLResource.URLResource(String)",1,1,1
"org.apache.tools.ant.types.resources.URLResource.URLResource(URL)",1,1,1
"org.apache.tools.ant.types.resources.URLResource.connect()",3,3,4
"org.apache.tools.ant.types.resources.URLResource.equals(Object)",4,3,5
"org.apache.tools.ant.types.resources.URLResource.finalize()",1,1,1
"org.apache.tools.ant.types.resources.URLResource.getInputStream()",2,2,2
"org.apache.tools.ant.types.resources.URLResource.getLastModified()",3,2,4
"org.apache.tools.ant.types.resources.URLResource.getName()",1,2,2
"org.apache.tools.ant.types.resources.URLResource.getOutputStream()",2,2,2
"org.apache.tools.ant.types.resources.URLResource.getSize()",3,2,4
"org.apache.tools.ant.types.resources.URLResource.getURL()",2,2,2
"org.apache.tools.ant.types.resources.URLResource.hashCode()",2,3,3
"org.apache.tools.ant.types.resources.URLResource.isDirectory()",1,2,2
"org.apache.tools.ant.types.resources.URLResource.isExists()",3,2,4
"org.apache.tools.ant.types.resources.URLResource.newURL(String)",1,1,2
"org.apache.tools.ant.types.resources.URLResource.setFile(File)",1,1,2
"org.apache.tools.ant.types.resources.URLResource.setRefid(Reference)",2,2,2
"org.apache.tools.ant.types.resources.URLResource.setURL(URL)",1,1,1
"org.apache.tools.ant.types.resources.URLResource.toString()",1,2,2
"org.apache.tools.ant.types.resources.Union.Union()",1,1,1
"org.apache.tools.ant.types.resources.Union.Union(ResourceCollection)",1,1,1
"org.apache.tools.ant.types.resources.Union.getCollection()",1,1,1
"org.apache.tools.ant.types.resources.Union.getCollection(boolean)",2,5,6
"org.apache.tools.ant.types.resources.Union.getInstance(ResourceCollection)",1,1,2
"org.apache.tools.ant.types.resources.Union.list()",2,2,2
"org.apache.tools.ant.types.resources.Union.listResources()",2,2,2
"org.apache.tools.ant.types.resources.Union.nextRC(Iterator)",1,1,1
"org.apache.tools.ant.types.resources.ZipResource.ZipResource()",1,1,1
"org.apache.tools.ant.types.resources.ZipResource.ZipResource(File,String,ZipEntry)",1,1,1
"org.apache.tools.ant.types.resources.ZipResource.addConfigured(ResourceCollection)",2,1,2
"org.apache.tools.ant.types.resources.ZipResource.fetchEntry()",1,3,4
"org.apache.tools.ant.types.resources.ZipResource.getEncoding()",1,2,2
"org.apache.tools.ant.types.resources.ZipResource.getInputStream()",3,3,3
"org.apache.tools.ant.types.resources.ZipResource.getOutputStream()",2,2,2
"org.apache.tools.ant.types.resources.ZipResource.getZipfile()",1,1,1
"org.apache.tools.ant.types.resources.ZipResource.setEncoding(String)",1,1,1
"org.apache.tools.ant.types.resources.ZipResource.setEntry(ZipEntry)",2,2,2
"org.apache.tools.ant.types.resources.ZipResource.setRefid(Reference)",2,2,2
"org.apache.tools.ant.types.resources.ZipResource.setZipfile(File)",1,1,1
"org.apache.tools.ant.types.resources.comparators.Content.isBinary()",1,1,1
"org.apache.tools.ant.types.resources.comparators.Content.resourceCompare(Resource,Resource)",1,1,2
"org.apache.tools.ant.types.resources.comparators.Content.setBinary(boolean)",1,1,1
"org.apache.tools.ant.types.resources.comparators.Date.resourceCompare(Resource,Resource)",1,1,1
"org.apache.tools.ant.types.resources.comparators.Exists.resourceCompare(Resource,Resource)",2,1,3
"org.apache.tools.ant.types.resources.comparators.FileSystem.resourceCompare(Resource,Resource)",1,3,3
"org.apache.tools.ant.types.resources.comparators.Name.resourceCompare(Resource,Resource)",1,1,1
"org.apache.tools.ant.types.resources.comparators.ResourceComparator.compare(Object,Object)",1,1,1
"org.apache.tools.ant.types.resources.comparators.ResourceComparator.equals(Object)",2,2,3
"org.apache.tools.ant.types.resources.comparators.Reverse.Reverse()",1,1,1
"org.apache.tools.ant.types.resources.comparators.Reverse.Reverse(ResourceComparator)",1,1,1
"org.apache.tools.ant.types.resources.comparators.Reverse.add(ResourceComparator)",2,1,2
"org.apache.tools.ant.types.resources.comparators.Reverse.resourceCompare(Resource,Resource)",1,2,2
"org.apache.tools.ant.types.resources.comparators.Size.resourceCompare(Resource,Resource)",1,1,1
"org.apache.tools.ant.types.resources.comparators.Type.resourceCompare(Resource,Resource)",2,1,3
"org.apache.tools.ant.types.resources.selectors.And.And()",1,1,1
"org.apache.tools.ant.types.resources.selectors.And.And(ResourceSelector[])",1,1,1
"org.apache.tools.ant.types.resources.selectors.And.isSelected(Resource)",3,2,3
"org.apache.tools.ant.types.resources.selectors.Date.getDatetime()",1,1,1
"org.apache.tools.ant.types.resources.selectors.Date.getGranularity()",1,1,1
"org.apache.tools.ant.types.resources.selectors.Date.getMillis()",1,2,2
"org.apache.tools.ant.types.resources.selectors.Date.getPattern()",1,1,1
"org.apache.tools.ant.types.resources.selectors.Date.getWhen()",1,1,1
"org.apache.tools.ant.types.resources.selectors.Date.isSelected(Resource)",4,3,8
"org.apache.tools.ant.types.resources.selectors.Date.setDateTime(String)",1,1,1
"org.apache.tools.ant.types.resources.selectors.Date.setGranularity(long)",1,1,1
"org.apache.tools.ant.types.resources.selectors.Date.setMillis(long)",1,1,1
"org.apache.tools.ant.types.resources.selectors.Date.setPattern(String)",1,1,1
"org.apache.tools.ant.types.resources.selectors.Date.setWhen(TimeComparison)",1,1,1
"org.apache.tools.ant.types.resources.selectors.Exists.isSelected(Resource)",1,1,1
"org.apache.tools.ant.types.resources.selectors.InstanceOf.getCheckClass()",1,1,1
"org.apache.tools.ant.types.resources.selectors.InstanceOf.getType()",1,1,1
"org.apache.tools.ant.types.resources.selectors.InstanceOf.getURI()",1,1,1
"org.apache.tools.ant.types.resources.selectors.InstanceOf.isSelected(Resource)",5,2,6
"org.apache.tools.ant.types.resources.selectors.InstanceOf.setClass(Class)",2,1,2
"org.apache.tools.ant.types.resources.selectors.InstanceOf.setProject(Project)",1,1,1
"org.apache.tools.ant.types.resources.selectors.InstanceOf.setType(String)",1,1,1
"org.apache.tools.ant.types.resources.selectors.InstanceOf.setURI(String)",1,1,1
"org.apache.tools.ant.types.resources.selectors.Majority.Majority()",1,1,1
"org.apache.tools.ant.types.resources.selectors.Majority.Majority(ResourceSelector[])",1,1,1
"org.apache.tools.ant.types.resources.selectors.Majority.isSelected(Resource)",5,2,11
"org.apache.tools.ant.types.resources.selectors.Majority.setAllowtie(boolean)",1,1,1
"org.apache.tools.ant.types.resources.selectors.Name.getName()",1,1,1
"org.apache.tools.ant.types.resources.selectors.Name.isCaseSensitive()",1,1,1
"org.apache.tools.ant.types.resources.selectors.Name.isSelected(Resource)",2,2,3
"org.apache.tools.ant.types.resources.selectors.Name.setCaseSensitive(boolean)",1,1,1
"org.apache.tools.ant.types.resources.selectors.Name.setName(String)",1,1,1
"org.apache.tools.ant.types.resources.selectors.None.None()",1,1,1
"org.apache.tools.ant.types.resources.selectors.None.None(ResourceSelector[])",1,1,1
"org.apache.tools.ant.types.resources.selectors.None.isSelected(Resource)",1,3,3
"org.apache.tools.ant.types.resources.selectors.Not.Not()",1,1,1
"org.apache.tools.ant.types.resources.selectors.Not.Not(ResourceSelector)",1,1,1
"org.apache.tools.ant.types.resources.selectors.Not.add(ResourceSelector)",2,1,2
"org.apache.tools.ant.types.resources.selectors.Not.isSelected(Resource)",1,1,1
"org.apache.tools.ant.types.resources.selectors.Or.Or()",1,1,1
"org.apache.tools.ant.types.resources.selectors.Or.Or(ResourceSelector[])",1,1,1
"org.apache.tools.ant.types.resources.selectors.Or.isSelected(Resource)",3,2,3
"org.apache.tools.ant.types.resources.selectors.ResourceSelectorContainer.ResourceSelectorContainer()",1,1,1
"org.apache.tools.ant.types.resources.selectors.ResourceSelectorContainer.ResourceSelectorContainer(ResourceSelector[])",1,2,2
"org.apache.tools.ant.types.resources.selectors.ResourceSelectorContainer.add(ResourceSelector)",3,2,3
"org.apache.tools.ant.types.resources.selectors.ResourceSelectorContainer.dieOnCircularReference(Stack,Project)",2,4,5
"org.apache.tools.ant.types.resources.selectors.ResourceSelectorContainer.getSelectors()",2,2,2
"org.apache.tools.ant.types.resources.selectors.ResourceSelectorContainer.hasSelectors()",2,2,2
"org.apache.tools.ant.types.resources.selectors.ResourceSelectorContainer.selectorCount()",2,2,2
"org.apache.tools.ant.types.resources.selectors.Size.getSize()",1,1,1
"org.apache.tools.ant.types.resources.selectors.Size.getWhen()",1,1,1
"org.apache.tools.ant.types.resources.selectors.Size.isSelected(Resource)",1,2,2
"org.apache.tools.ant.types.resources.selectors.Size.setSize(long)",1,1,1
"org.apache.tools.ant.types.resources.selectors.Size.setWhen(Comparison)",1,1,1
"org.apache.tools.ant.types.resources.selectors.Type.FileDir.FileDir()",1,1,1
"org.apache.tools.ant.types.resources.selectors.Type.FileDir.FileDir(String)",1,1,1
"org.apache.tools.ant.types.resources.selectors.Type.FileDir.getValues()",1,1,1
"org.apache.tools.ant.types.resources.selectors.Type.Type()",1,1,1
"org.apache.tools.ant.types.resources.selectors.Type.Type(FileDir)",1,1,1
"org.apache.tools.ant.types.resources.selectors.Type.isSelected(Resource)",2,1,3
"org.apache.tools.ant.types.resources.selectors.Type.setType(FileDir)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.add(FileSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addAnd(AndSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addContains(ContainsSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addContainsRegexp(ContainsRegexpSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addCustom(ExtendSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addDate(DateSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addDepend(DependSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addDepth(DepthSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addDifferent(DifferentSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addFilename(FilenameSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addMajority(MajoritySelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addModified(ModifiedSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addNone(NoneSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addNot(NotSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addOr(OrSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addPresent(PresentSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addSelector(SelectSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addSize(SizeSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.addType(TypeSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.appendSelector(FileSelector)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.getSelectors(Project)",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.hasSelectors()",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.selectorCount()",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.selectorElements()",1,1,1
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.toString()",1,4,4
"org.apache.tools.ant.types.selectors.AbstractSelectorContainer.validate()",1,3,3
"org.apache.tools.ant.types.selectors.AndSelector.AndSelector()",1,1,1
"org.apache.tools.ant.types.selectors.AndSelector.isSelected(File,String,File)",3,2,3
"org.apache.tools.ant.types.selectors.AndSelector.toString()",1,2,2
"org.apache.tools.ant.types.selectors.BaseExtendSelector.BaseExtendSelector()",1,1,1
"org.apache.tools.ant.types.selectors.BaseExtendSelector.getParameters()",1,1,1
"org.apache.tools.ant.types.selectors.BaseExtendSelector.setParameters(Parameter[])",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelector.BaseSelector()",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelector.getError()",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelector.setError(String)",1,1,2
"org.apache.tools.ant.types.selectors.BaseSelector.validate()",2,2,3
"org.apache.tools.ant.types.selectors.BaseSelector.verifySettings()",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.BaseSelectorContainer()",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.add(FileSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addAnd(AndSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addContains(ContainsSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addContainsRegexp(ContainsRegexpSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addCustom(ExtendSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addDate(DateSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addDepend(DependSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addDepth(DepthSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addDifferent(DifferentSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addFilename(FilenameSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addMajority(MajoritySelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addModified(ModifiedSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addNone(NoneSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addNot(NotSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addOr(OrSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addPresent(PresentSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addSelector(SelectSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addSize(SizeSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.addType(TypeSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.appendSelector(FileSelector)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.getSelectors(Project)",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.hasSelectors()",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.selectorCount()",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.selectorElements()",1,1,1
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.toString()",1,4,4
"org.apache.tools.ant.types.selectors.BaseSelectorContainer.validate()",2,3,4
"org.apache.tools.ant.types.selectors.ContainsRegexpSelector.ContainsRegexpSelector()",1,1,1
"org.apache.tools.ant.types.selectors.ContainsRegexpSelector.isSelected(File,String,File)",5,4,8
"org.apache.tools.ant.types.selectors.ContainsRegexpSelector.setExpression(String)",1,1,1
"org.apache.tools.ant.types.selectors.ContainsRegexpSelector.setParameters(Parameter[])",1,4,4
"org.apache.tools.ant.types.selectors.ContainsRegexpSelector.toString()",1,1,1
"org.apache.tools.ant.types.selectors.ContainsRegexpSelector.verifySettings()",1,2,2
"org.apache.tools.ant.types.selectors.ContainsSelector.ContainsSelector()",1,1,1
"org.apache.tools.ant.types.selectors.ContainsSelector.isSelected(File,String,File)",5,7,11
"org.apache.tools.ant.types.selectors.ContainsSelector.setCasesensitive(boolean)",1,1,1
"org.apache.tools.ant.types.selectors.ContainsSelector.setIgnorewhitespace(boolean)",1,1,1
"org.apache.tools.ant.types.selectors.ContainsSelector.setParameters(Parameter[])",1,6,6
"org.apache.tools.ant.types.selectors.ContainsSelector.setText(String)",1,1,1
"org.apache.tools.ant.types.selectors.ContainsSelector.toString()",1,3,3
"org.apache.tools.ant.types.selectors.ContainsSelector.verifySettings()",1,2,2
"org.apache.tools.ant.types.selectors.DateSelector.DateSelector()",1,1,1
"org.apache.tools.ant.types.selectors.DateSelector.getMillis()",1,2,2
"org.apache.tools.ant.types.selectors.DateSelector.isSelected(File,String,File)",1,3,3
"org.apache.tools.ant.types.selectors.DateSelector.setCheckdirs(boolean)",1,1,1
"org.apache.tools.ant.types.selectors.DateSelector.setDatetime(String)",1,1,1
"org.apache.tools.ant.types.selectors.DateSelector.setGranularity(int)",1,1,1
"org.apache.tools.ant.types.selectors.DateSelector.setMillis(long)",1,1,1
"org.apache.tools.ant.types.selectors.DateSelector.setParameters(Parameter[])",1,11,11
"org.apache.tools.ant.types.selectors.DateSelector.setPattern(String)",1,1,1
"org.apache.tools.ant.types.selectors.DateSelector.setWhen(TimeComparison)",1,1,1
"org.apache.tools.ant.types.selectors.DateSelector.setWhen(TimeComparisons)",1,1,1
"org.apache.tools.ant.types.selectors.DateSelector.toString()",1,2,2
"org.apache.tools.ant.types.selectors.DateSelector.verifySettings()",1,6,9
"org.apache.tools.ant.types.selectors.DependSelector.DependSelector()",1,1,1
"org.apache.tools.ant.types.selectors.DependSelector.selectionTest(File,File)",1,1,1
"org.apache.tools.ant.types.selectors.DependSelector.toString()",1,4,4
"org.apache.tools.ant.types.selectors.DepthSelector.DepthSelector()",1,1,1
"org.apache.tools.ant.types.selectors.DepthSelector.isSelected(File,String,File)",7,3,9
"org.apache.tools.ant.types.selectors.DepthSelector.setMax(int)",1,1,1
"org.apache.tools.ant.types.selectors.DepthSelector.setMin(int)",1,1,1
"org.apache.tools.ant.types.selectors.DepthSelector.setParameters(Parameter[])",1,7,7
"org.apache.tools.ant.types.selectors.DepthSelector.toString()",1,1,1
"org.apache.tools.ant.types.selectors.DepthSelector.verifySettings()",1,3,5
"org.apache.tools.ant.types.selectors.DifferentSelector.selectionTest(File,File)",6,4,8
"org.apache.tools.ant.types.selectors.DifferentSelector.setIgnoreContents(boolean)",1,1,1
"org.apache.tools.ant.types.selectors.DifferentSelector.setIgnoreFileTimes(boolean)",1,1,1
"org.apache.tools.ant.types.selectors.ExtendSelector.ExtendSelector()",1,1,1
"org.apache.tools.ant.types.selectors.ExtendSelector.addParam(Parameter)",1,1,1
"org.apache.tools.ant.types.selectors.ExtendSelector.createClasspath()",2,3,3
"org.apache.tools.ant.types.selectors.ExtendSelector.getClasspath()",1,1,1
"org.apache.tools.ant.types.selectors.ExtendSelector.isSelected(File,String,File)",1,3,3
"org.apache.tools.ant.types.selectors.ExtendSelector.selectorCreate()",1,8,8
"org.apache.tools.ant.types.selectors.ExtendSelector.setClassname(String)",1,1,1
"org.apache.tools.ant.types.selectors.ExtendSelector.setClasspath(Path)",2,3,3
"org.apache.tools.ant.types.selectors.ExtendSelector.setClasspathref(Reference)",2,2,2
"org.apache.tools.ant.types.selectors.ExtendSelector.verifySettings()",1,7,7
"org.apache.tools.ant.types.selectors.FilenameSelector.FilenameSelector()",1,1,1
"org.apache.tools.ant.types.selectors.FilenameSelector.isSelected(File,String,File)",1,1,1
"org.apache.tools.ant.types.selectors.FilenameSelector.setCasesensitive(boolean)",1,1,1
"org.apache.tools.ant.types.selectors.FilenameSelector.setName(String)",1,1,2
"org.apache.tools.ant.types.selectors.FilenameSelector.setNegate(boolean)",1,1,1
"org.apache.tools.ant.types.selectors.FilenameSelector.setParameters(Parameter[])",1,6,6
"org.apache.tools.ant.types.selectors.FilenameSelector.toString()",1,3,3
"org.apache.tools.ant.types.selectors.FilenameSelector.verifySettings()",1,2,2
"org.apache.tools.ant.types.selectors.MajoritySelector.MajoritySelector()",1,1,1
"org.apache.tools.ant.types.selectors.MajoritySelector.isSelected(File,String,File)",3,2,5
"org.apache.tools.ant.types.selectors.MajoritySelector.setAllowtie(boolean)",1,1,1
"org.apache.tools.ant.types.selectors.MajoritySelector.toString()",1,2,2
"org.apache.tools.ant.types.selectors.MappingSelector.MappingSelector()",1,1,1
"org.apache.tools.ant.types.selectors.MappingSelector.createMapper()",2,1,2
"org.apache.tools.ant.types.selectors.MappingSelector.isSelected(File,String,File)",3,2,4
"org.apache.tools.ant.types.selectors.MappingSelector.setGranularity(int)",1,1,1
"org.apache.tools.ant.types.selectors.MappingSelector.setTargetdir(File)",1,1,1
"org.apache.tools.ant.types.selectors.MappingSelector.verifySettings()",1,4,4
"org.apache.tools.ant.types.selectors.NoneSelector.NoneSelector()",1,1,1
"org.apache.tools.ant.types.selectors.NoneSelector.isSelected(File,String,File)",3,2,3
"org.apache.tools.ant.types.selectors.NoneSelector.toString()",1,2,2
"org.apache.tools.ant.types.selectors.NotSelector.NotSelector()",1,1,1
"org.apache.tools.ant.types.selectors.NotSelector.NotSelector(FileSelector)",1,1,1
"org.apache.tools.ant.types.selectors.NotSelector.toString()",1,2,2
"org.apache.tools.ant.types.selectors.NotSelector.verifySettings()",1,2,2
"org.apache.tools.ant.types.selectors.OrSelector.OrSelector()",1,1,1
"org.apache.tools.ant.types.selectors.OrSelector.isSelected(File,String,File)",3,2,3
"org.apache.tools.ant.types.selectors.OrSelector.toString()",1,2,2
"org.apache.tools.ant.types.selectors.PresentSelector.FilePresence.getValues()",1,1,1
"org.apache.tools.ant.types.selectors.PresentSelector.PresentSelector()",1,1,1
"org.apache.tools.ant.types.selectors.PresentSelector.createMapper()",2,1,2
"org.apache.tools.ant.types.selectors.PresentSelector.isSelected(File,String,File)",3,1,4
"org.apache.tools.ant.types.selectors.PresentSelector.setPresent(FilePresence)",1,1,2
"org.apache.tools.ant.types.selectors.PresentSelector.setTargetdir(File)",1,1,1
"org.apache.tools.ant.types.selectors.PresentSelector.toString()",1,5,5
"org.apache.tools.ant.types.selectors.PresentSelector.verifySettings()",1,4,4
"org.apache.tools.ant.types.selectors.SelectSelector.SelectSelector()",1,1,1
"org.apache.tools.ant.types.selectors.SelectSelector.appendSelector(FileSelector)",2,2,2
"org.apache.tools.ant.types.selectors.SelectSelector.getRef()",1,1,1
"org.apache.tools.ant.types.selectors.SelectSelector.getSelectors(Project)",2,2,2
"org.apache.tools.ant.types.selectors.SelectSelector.hasSelectors()",2,2,2
"org.apache.tools.ant.types.selectors.SelectSelector.isSelected(File,String,File)",3,1,3
"org.apache.tools.ant.types.selectors.SelectSelector.passesConditions()",3,4,5
"org.apache.tools.ant.types.selectors.SelectSelector.selectorCount()",2,2,2
"org.apache.tools.ant.types.selectors.SelectSelector.selectorElements()",2,2,2
"org.apache.tools.ant.types.selectors.SelectSelector.setIf(String)",1,1,1
"org.apache.tools.ant.types.selectors.SelectSelector.setUnless(String)",1,1,1
"org.apache.tools.ant.types.selectors.SelectSelector.toString()",1,4,4
"org.apache.tools.ant.types.selectors.SelectSelector.verifySettings()",1,2,3
"org.apache.tools.ant.types.selectors.SelectorUtils.SelectorUtils()",1,1,1
"org.apache.tools.ant.types.selectors.SelectorUtils.getInstance()",1,1,1
"org.apache.tools.ant.types.selectors.SelectorUtils.hasWildcards(String)",1,2,2
"org.apache.tools.ant.types.selectors.SelectorUtils.isOutOfDate(File,File,int)",4,1,4
"org.apache.tools.ant.types.selectors.SelectorUtils.isOutOfDate(Resource,Resource,int)",1,1,1
"org.apache.tools.ant.types.selectors.SelectorUtils.isOutOfDate(Resource,Resource,long)",4,1,4
"org.apache.tools.ant.types.selectors.SelectorUtils.match(String,String)",1,1,1
"org.apache.tools.ant.types.selectors.SelectorUtils.match(String,String,boolean)",36,16,47
"org.apache.tools.ant.types.selectors.SelectorUtils.matchPath(String,String)",1,1,1
"org.apache.tools.ant.types.selectors.SelectorUtils.matchPath(String,String,boolean)",24,12,27
"org.apache.tools.ant.types.selectors.SelectorUtils.matchPatternStart(String,String)",1,1,1
"org.apache.tools.ant.types.selectors.SelectorUtils.matchPatternStart(String,String,boolean)",7,2,8
"org.apache.tools.ant.types.selectors.SelectorUtils.removeWhitespace(String)",1,3,3
"org.apache.tools.ant.types.selectors.SelectorUtils.rtrimWildcardTokens(String)",3,4,5
"org.apache.tools.ant.types.selectors.SelectorUtils.tokenizePath(String)",1,1,1
"org.apache.tools.ant.types.selectors.SelectorUtils.tokenizePath(String,String)",1,3,3
"org.apache.tools.ant.types.selectors.SelectorUtils.tokenizePathAsArray(String)",1,7,12
"org.apache.tools.ant.types.selectors.SignedSelector.isSelected(File,String,File)",2,1,2
"org.apache.tools.ant.types.selectors.SignedSelector.setName(String)",1,1,1
"org.apache.tools.ant.types.selectors.SizeSelector.ByteUnits.getValues()",1,1,1
"org.apache.tools.ant.types.selectors.SizeSelector.SizeComparisons.getValues()",1,1,1
"org.apache.tools.ant.types.selectors.SizeSelector.SizeSelector()",1,1,1
"org.apache.tools.ant.types.selectors.SizeSelector.isSelected(File,String,File)",4,3,4
"org.apache.tools.ant.types.selectors.SizeSelector.setParameters(Parameter[])",1,7,7
"org.apache.tools.ant.types.selectors.SizeSelector.setUnits(ByteUnits)",1,1,19
"org.apache.tools.ant.types.selectors.SizeSelector.setValue(long)",1,1,3
"org.apache.tools.ant.types.selectors.SizeSelector.setWhen(SizeComparisons)",1,1,1
"org.apache.tools.ant.types.selectors.SizeSelector.toString()",1,3,3
"org.apache.tools.ant.types.selectors.SizeSelector.verifySettings()",1,4,4
"org.apache.tools.ant.types.selectors.TypeSelector.FileType.getValues()",1,1,1
"org.apache.tools.ant.types.selectors.TypeSelector.TypeSelector()",1,1,1
"org.apache.tools.ant.types.selectors.TypeSelector.isSelected(File,String,File)",2,2,2
"org.apache.tools.ant.types.selectors.TypeSelector.setParameters(Parameter[])",1,4,4
"org.apache.tools.ant.types.selectors.TypeSelector.setType(FileType)",1,1,1
"org.apache.tools.ant.types.selectors.TypeSelector.toString()",1,1,1
"org.apache.tools.ant.types.selectors.TypeSelector.verifySettings()",1,2,2
"org.apache.tools.ant.types.selectors.modifiedselector.ChecksumAlgorithm.getValue(File)",1,2,4
"org.apache.tools.ant.types.selectors.modifiedselector.ChecksumAlgorithm.initChecksum()",4,2,4
"org.apache.tools.ant.types.selectors.modifiedselector.ChecksumAlgorithm.isValid()",1,2,2
"org.apache.tools.ant.types.selectors.modifiedselector.ChecksumAlgorithm.setAlgorithm(String)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ChecksumAlgorithm.toString()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm.getValue(File)",2,3,7
"org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm.initMessageDigest()",3,4,8
"org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm.isValid()",1,2,2
"org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm.setAlgorithm(String)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm.setProvider(String)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm.toString()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.EqualComparator.compare(Object,Object)",3,1,4
"org.apache.tools.ant.types.selectors.modifiedselector.EqualComparator.toString()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.HashvalueAlgorithm.getValue(File)",2,1,3
"org.apache.tools.ant.types.selectors.modifiedselector.HashvalueAlgorithm.isValid()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.HashvalueAlgorithm.toString()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.AlgorithmName.getValues()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.CacheName.getValues()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.ComparatorName.getValues()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.ModifiedSelector()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.addClasspath(Path)",2,1,2
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.addParam(Parameter)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.addParam(String,Object)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.buildFinished(BuildEvent)",1,2,2
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.buildStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.configure()",5,14,18
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.getAlgorithm()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.getCache()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.getClassLoader()",1,3,3
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.getComparator()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.getDelayUpdate()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.getModified()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.isSelected(File,String,File)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.isSelected(File,String,String)",2,3,5
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.isSelected(Resource)",2,3,5
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.loadClass(String,String,Class)",2,2,5
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.messageLogged(BuildEvent)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.saveCache()",1,2,2
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.setAlgorithm(AlgorithmName)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.setAlgorithmClass(String)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.setCache(CacheName)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.setCacheClass(String)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.setClassLoader(ClassLoader)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.setComparator(ComparatorName)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.setComparatorClass(String)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.setDelayUpdate(boolean)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.setModified(int)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.setParameters(Parameter[])",1,3,3
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.setSeldirs(boolean)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.setSelres(boolean)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.setUpdate(boolean)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.targetFinished(BuildEvent)",1,2,2
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.targetStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.taskFinished(BuildEvent)",1,2,2
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.taskStarted(BuildEvent)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.toString()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.tryToSetAParameter(Object,String,String)",1,2,3
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.useParameter(Parameter)",1,10,13
"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector.verifySettings()",1,5,5
"org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache.PropertiesfileCache()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache.PropertiesfileCache(File)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache.delete()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache.get(Object)",1,2,3
"org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache.getCachefile()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache.isValid()",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache.iterator()",1,2,2
"org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache.load()",1,5,5
"org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache.put(Object,Object)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache.save()",2,4,5
"org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache.setCachefile(File)",1,1,1
"org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache.toString()",1,1,1
"org.apache.tools.ant.util.ChainedMapper.mapFileName(String)",1,6,6
"org.apache.tools.ant.util.ClasspathUtils.Delegate.Delegate(ProjectComponent)",1,1,1
"org.apache.tools.ant.util.ClasspathUtils.Delegate.createClasspath()",1,2,2
"org.apache.tools.ant.util.ClasspathUtils.Delegate.getClassLoadId()",1,1,3
"org.apache.tools.ant.util.ClasspathUtils.Delegate.getClassLoader()",1,2,2
"org.apache.tools.ant.util.ClasspathUtils.Delegate.getClasspath()",1,1,1
"org.apache.tools.ant.util.ClasspathUtils.Delegate.getContextProject()",1,1,1
"org.apache.tools.ant.util.ClasspathUtils.Delegate.isReverseLoader()",1,1,1
"org.apache.tools.ant.util.ClasspathUtils.Delegate.newInstance()",1,1,1
"org.apache.tools.ant.util.ClasspathUtils.Delegate.setClassname(String)",1,1,1
"org.apache.tools.ant.util.ClasspathUtils.Delegate.setClasspath(Path)",1,2,2
"org.apache.tools.ant.util.ClasspathUtils.Delegate.setClasspathref(Reference)",1,1,1
"org.apache.tools.ant.util.ClasspathUtils.Delegate.setLoaderRef(Reference)",1,1,1
"org.apache.tools.ant.util.ClasspathUtils.Delegate.setReverseLoader(boolean)",1,1,1
"org.apache.tools.ant.util.ClasspathUtils.getClassLoaderForPath(Project,Path,String)",1,1,1
"org.apache.tools.ant.util.ClasspathUtils.getClassLoaderForPath(Project,Path,String,boolean)",1,1,1
"org.apache.tools.ant.util.ClasspathUtils.getClassLoaderForPath(Project,Path,String,boolean,boolean)",3,4,8
"org.apache.tools.ant.util.ClasspathUtils.getClassLoaderForPath(Project,Reference)",1,1,1
"org.apache.tools.ant.util.ClasspathUtils.getClassLoaderForPath(Project,Reference,boolean)",2,1,2
"org.apache.tools.ant.util.ClasspathUtils.getDelegate(ProjectComponent)",1,1,1
"org.apache.tools.ant.util.ClasspathUtils.getUniqueClassLoaderForPath(Project,Path,boolean)",1,2,2
"org.apache.tools.ant.util.ClasspathUtils.isMagicPropertySet(Project)",1,1,1
"org.apache.tools.ant.util.ClasspathUtils.newInstance(String,ClassLoader)",1,1,1
"org.apache.tools.ant.util.ClasspathUtils.newInstance(String,ClassLoader,Class)",2,1,6
"org.apache.tools.ant.util.CollectionUtils.CompoundEnumeration.CompoundEnumeration(Enumeration,Enumeration)",1,1,1
"org.apache.tools.ant.util.CollectionUtils.CompoundEnumeration.hasMoreElements()",1,2,2
"org.apache.tools.ant.util.CollectionUtils.CompoundEnumeration.nextElement()",2,2,2
"org.apache.tools.ant.util.CollectionUtils.EmptyEnumeration.EmptyEnumeration()",1,1,1
"org.apache.tools.ant.util.CollectionUtils.EmptyEnumeration.hasMoreElements()",1,1,1
"org.apache.tools.ant.util.CollectionUtils.EmptyEnumeration.nextElement()",1,1,1
"org.apache.tools.ant.util.CollectionUtils.append(Enumeration,Enumeration)",1,1,1
"org.apache.tools.ant.util.CollectionUtils.asEnumeration(Iterator)",1,1,1
"org.apache.tools.ant.util.CollectionUtils.asIterator(Enumeration)",1,1,1
"org.apache.tools.ant.util.CollectionUtils.equals(Dictionary,Dictionary)",6,3,8
"org.apache.tools.ant.util.CollectionUtils.equals(Vector,Vector)",3,1,4
"org.apache.tools.ant.util.CollectionUtils.putAll(Dictionary,Dictionary)",1,2,2
"org.apache.tools.ant.util.CompositeMapper.mapFileName(String)",1,5,5
"org.apache.tools.ant.util.ConcatFileInputStream.ConcatFileInputStream(File[])",1,1,1
"org.apache.tools.ant.util.ConcatFileInputStream.close()",1,1,1
"org.apache.tools.ant.util.ConcatFileInputStream.closeCurrent()",1,1,1
"org.apache.tools.ant.util.ConcatFileInputStream.log(String,int)",1,3,3
"org.apache.tools.ant.util.ConcatFileInputStream.openFile(int)",2,3,4
"org.apache.tools.ant.util.ConcatFileInputStream.read()",1,2,3
"org.apache.tools.ant.util.ConcatFileInputStream.readCurrent()",1,2,3
"org.apache.tools.ant.util.ConcatFileInputStream.setManagingComponent(ProjectComponent)",1,1,1
"org.apache.tools.ant.util.ConcatFileInputStream.setManagingTask(Task)",1,1,1
"org.apache.tools.ant.util.ConcatResourceInputStream.ConcatResourceInputStream(ResourceCollection)",1,1,1
"org.apache.tools.ant.util.ConcatResourceInputStream.close()",1,1,1
"org.apache.tools.ant.util.ConcatResourceInputStream.closeCurrent()",1,1,1
"org.apache.tools.ant.util.ConcatResourceInputStream.isIgnoreErrors()",1,1,1
"org.apache.tools.ant.util.ConcatResourceInputStream.log(String,int)",1,3,3
"org.apache.tools.ant.util.ConcatResourceInputStream.nextResource()",4,4,5
"org.apache.tools.ant.util.ConcatResourceInputStream.read()",2,2,3
"org.apache.tools.ant.util.ConcatResourceInputStream.readCurrent()",1,2,3
"org.apache.tools.ant.util.ConcatResourceInputStream.setIgnoreErrors(boolean)",1,1,1
"org.apache.tools.ant.util.ConcatResourceInputStream.setManagingComponent(ProjectComponent)",1,1,1
"org.apache.tools.ant.util.ContainerMapper.add(FileNameMapper)",2,4,4
"org.apache.tools.ant.util.ContainerMapper.addConfiguredMapper(Mapper)",1,1,1
"org.apache.tools.ant.util.ContainerMapper.contains(FileNameMapper)",1,5,5
"org.apache.tools.ant.util.ContainerMapper.getMappers()",1,1,1
"org.apache.tools.ant.util.ContainerMapper.setFrom(String)",1,1,1
"org.apache.tools.ant.util.ContainerMapper.setTo(String)",1,1,1
"org.apache.tools.ant.util.DOMElementWriter.DOMElementWriter()",1,1,1
"org.apache.tools.ant.util.DOMElementWriter.DOMElementWriter(boolean)",1,1,1
"org.apache.tools.ant.util.DOMElementWriter.DOMElementWriter(boolean,XmlNamespacePolicy)",1,1,1
"org.apache.tools.ant.util.DOMElementWriter.XmlNamespacePolicy.XmlNamespacePolicy(boolean,boolean)",1,1,1
"org.apache.tools.ant.util.DOMElementWriter.addNSDefinition(Element,String)",1,2,2
"org.apache.tools.ant.util.DOMElementWriter.closeElement(Element,Writer,int,String,boolean)",1,6,6
"org.apache.tools.ant.util.DOMElementWriter.encode(String)",2,6,11
"org.apache.tools.ant.util.DOMElementWriter.encodedata(String)",1,4,4
"org.apache.tools.ant.util.DOMElementWriter.getNamespaceURI(Node)",1,1,2
"org.apache.tools.ant.util.DOMElementWriter.isLegalCharacter(char)",6,1,8
"org.apache.tools.ant.util.DOMElementWriter.isReference(String)",6,5,9
"org.apache.tools.ant.util.DOMElementWriter.openElement(Element,Writer,int,String)",1,1,1
"org.apache.tools.ant.util.DOMElementWriter.openElement(Element,Writer,int,String,boolean)",1,12,13
"org.apache.tools.ant.util.DOMElementWriter.removeNSDefinitions(Element)",1,3,3
"org.apache.tools.ant.util.DOMElementWriter.write(Element,OutputStream)",1,2,2
"org.apache.tools.ant.util.DOMElementWriter.write(Element,Writer,int,String)",2,7,13
"org.apache.tools.ant.util.DOMUtils.appendCDATA(Element,String)",1,1,1
"org.apache.tools.ant.util.DOMUtils.appendCDATAElement(Element,String,String)",1,1,1
"org.apache.tools.ant.util.DOMUtils.appendText(Element,String)",1,1,1
"org.apache.tools.ant.util.DOMUtils.appendTextElement(Element,String,String)",1,1,1
"org.apache.tools.ant.util.DOMUtils.createChildElement(Element,String)",1,1,1
"org.apache.tools.ant.util.DOMUtils.newDocument()",1,1,1
"org.apache.tools.ant.util.DateUtils.DateUtils()",1,1,1
"org.apache.tools.ant.util.DateUtils.createDateFormat(String)",1,1,1
"org.apache.tools.ant.util.DateUtils.format(Date,String)",1,1,1
"org.apache.tools.ant.util.DateUtils.format(long,String)",1,1,1
"org.apache.tools.ant.util.DateUtils.formatElapsedTime(long)",1,1,1
"org.apache.tools.ant.util.DateUtils.getDateForHeader()",1,3,4
"org.apache.tools.ant.util.DateUtils.getPhaseOfMoon(Calendar)",1,1,4
"org.apache.tools.ant.util.DateUtils.parseIso8601Date(String)",1,1,1
"org.apache.tools.ant.util.DateUtils.parseIso8601DateTime(String)",1,1,1
"org.apache.tools.ant.util.DateUtils.parseIso8601DateTimeOrDate(String)",1,2,2
"org.apache.tools.ant.util.DeweyDecimal.DeweyDecimal(String)",5,3,5
"org.apache.tools.ant.util.DeweyDecimal.DeweyDecimal(int[])",1,1,2
"org.apache.tools.ant.util.DeweyDecimal.get(int)",1,1,1
"org.apache.tools.ant.util.DeweyDecimal.getSize()",1,1,1
"org.apache.tools.ant.util.DeweyDecimal.isEqual(DeweyDecimal)",3,1,5
"org.apache.tools.ant.util.DeweyDecimal.isGreaterThan(DeweyDecimal)",4,1,6
"org.apache.tools.ant.util.DeweyDecimal.isGreaterThanOrEqual(DeweyDecimal)",4,1,6
"org.apache.tools.ant.util.DeweyDecimal.isLessThan(DeweyDecimal)",1,1,1
"org.apache.tools.ant.util.DeweyDecimal.isLessThanOrEqual(DeweyDecimal)",1,1,1
"org.apache.tools.ant.util.DeweyDecimal.toString()",1,3,3
"org.apache.tools.ant.util.FileUtils.FileUtils()",1,1,1
"org.apache.tools.ant.util.FileUtils.close(InputStream)",1,2,3
"org.apache.tools.ant.util.FileUtils.close(OutputStream)",1,2,3
"org.apache.tools.ant.util.FileUtils.close(Reader)",1,2,3
"org.apache.tools.ant.util.FileUtils.close(Writer)",1,2,3
"org.apache.tools.ant.util.FileUtils.contentEquals(File,File)",1,1,1
"org.apache.tools.ant.util.FileUtils.contentEquals(File,File,boolean)",1,1,1
"org.apache.tools.ant.util.FileUtils.copyFile(File,File)",1,1,1
"org.apache.tools.ant.util.FileUtils.copyFile(File,File,FilterSetCollection)",1,1,1
"org.apache.tools.ant.util.FileUtils.copyFile(File,File,FilterSetCollection,Vector,boolean,boolean,String,Project)",1,1,1
"org.apache.tools.ant.util.FileUtils.copyFile(File,File,FilterSetCollection,Vector,boolean,boolean,String,String,Project)",1,1,1
"org.apache.tools.ant.util.FileUtils.copyFile(File,File,FilterSetCollection,boolean)",1,1,1
"org.apache.tools.ant.util.FileUtils.copyFile(File,File,FilterSetCollection,boolean,boolean)",1,1,1
"org.apache.tools.ant.util.FileUtils.copyFile(File,File,FilterSetCollection,boolean,boolean,String)",1,1,1
"org.apache.tools.ant.util.FileUtils.copyFile(String,String)",1,1,1
"org.apache.tools.ant.util.FileUtils.copyFile(String,String,FilterSetCollection)",1,1,1
"org.apache.tools.ant.util.FileUtils.copyFile(String,String,FilterSetCollection,Vector,boolean,boolean,String,Project)",1,1,1
"org.apache.tools.ant.util.FileUtils.copyFile(String,String,FilterSetCollection,Vector,boolean,boolean,String,String,Project)",1,1,1
"org.apache.tools.ant.util.FileUtils.copyFile(String,String,FilterSetCollection,boolean)",1,1,1
"org.apache.tools.ant.util.FileUtils.copyFile(String,String,FilterSetCollection,boolean,boolean)",1,1,1
"org.apache.tools.ant.util.FileUtils.copyFile(String,String,FilterSetCollection,boolean,boolean,String)",1,1,1
"org.apache.tools.ant.util.FileUtils.createNewFile(File)",1,1,1
"org.apache.tools.ant.util.FileUtils.createNewFile(File,boolean)",1,3,3
"org.apache.tools.ant.util.FileUtils.createTempFile(String,String,File)",1,3,3
"org.apache.tools.ant.util.FileUtils.delete(File)",1,2,2
"org.apache.tools.ant.util.FileUtils.dissect(String)",2,7,12
"org.apache.tools.ant.util.FileUtils.fileNameEquals(File,File)",1,1,1
"org.apache.tools.ant.util.FileUtils.fromURI(String)",1,2,2
"org.apache.tools.ant.util.FileUtils.getFileTimestampGranularity()",4,1,4
"org.apache.tools.ant.util.FileUtils.getFileURL(File)",1,1,1
"org.apache.tools.ant.util.FileUtils.getFileUtils()",1,1,1
"org.apache.tools.ant.util.FileUtils.getParentFile(File)",1,2,2
"org.apache.tools.ant.util.FileUtils.isAbsolutePath(String)",5,8,14
"org.apache.tools.ant.util.FileUtils.isContextRelativePath(String)",2,9,11
"org.apache.tools.ant.util.FileUtils.isLeadingPath(File,File)",2,1,3
"org.apache.tools.ant.util.FileUtils.isSymbolicLink(File,String)",1,2,2
"org.apache.tools.ant.util.FileUtils.isUpToDate(File,File)",1,1,1
"org.apache.tools.ant.util.FileUtils.isUpToDate(File,File,long)",2,1,2
"org.apache.tools.ant.util.FileUtils.isUpToDate(long,long)",1,1,1
"org.apache.tools.ant.util.FileUtils.isUpToDate(long,long,long)",2,1,2
"org.apache.tools.ant.util.FileUtils.newFileUtils()",1,1,1
"org.apache.tools.ant.util.FileUtils.normalize(String)",5,6,7
"org.apache.tools.ant.util.FileUtils.readFully(Reader)",1,1,1
"org.apache.tools.ant.util.FileUtils.readFully(Reader,int)",2,4,6
"org.apache.tools.ant.util.FileUtils.removeLeadingPath(File,File)",2,2,4
"org.apache.tools.ant.util.FileUtils.rename(File,File)",5,5,8
"org.apache.tools.ant.util.FileUtils.resolveFile(File,String)",1,5,5
"org.apache.tools.ant.util.FileUtils.setFileLastModified(File,long)",1,1,1
"org.apache.tools.ant.util.FileUtils.toURI(String)",2,6,8
"org.apache.tools.ant.util.FileUtils.toVMSPath(File)",3,8,13
"org.apache.tools.ant.util.FileUtils.translatePath(String)",2,4,5
"org.apache.tools.ant.util.FlatFileNameMapper.mapFileName(String)",1,1,1
"org.apache.tools.ant.util.FlatFileNameMapper.setFrom(String)",1,1,1
"org.apache.tools.ant.util.FlatFileNameMapper.setTo(String)",1,1,1
"org.apache.tools.ant.util.GlobPatternMapper.extractVariablePart(String)",1,1,1
"org.apache.tools.ant.util.GlobPatternMapper.mapFileName(String)",2,3,4
"org.apache.tools.ant.util.GlobPatternMapper.modifyName(String)",1,4,4
"org.apache.tools.ant.util.GlobPatternMapper.setCaseSensitive(boolean)",1,1,1
"org.apache.tools.ant.util.GlobPatternMapper.setFrom(String)",1,2,2
"org.apache.tools.ant.util.GlobPatternMapper.setHandleDirSep(boolean)",1,1,1
"org.apache.tools.ant.util.GlobPatternMapper.setTo(String)",1,2,2
"org.apache.tools.ant.util.IdentityMapper.mapFileName(String)",1,1,1
"org.apache.tools.ant.util.IdentityMapper.setFrom(String)",1,1,1
"org.apache.tools.ant.util.IdentityMapper.setTo(String)",1,1,1
"org.apache.tools.ant.util.IdentityStack.IdentityStack()",1,1,1
"org.apache.tools.ant.util.IdentityStack.IdentityStack(Object)",1,1,1
"org.apache.tools.ant.util.IdentityStack.contains(Object)",1,1,1
"org.apache.tools.ant.util.IdentityStack.getInstance(Stack)",2,1,2
"org.apache.tools.ant.util.IdentityStack.indexOf(Object,int)",3,2,3
"org.apache.tools.ant.util.IdentityStack.lastIndexOf(Object,int)",3,2,3
"org.apache.tools.ant.util.JAXPUtils.convertToBuildException(SAXException)",2,1,2
"org.apache.tools.ant.util.JAXPUtils.getDocumentBuilder()",1,1,2
"org.apache.tools.ant.util.JAXPUtils.getDocumentBuilderFactory()",2,3,3
"org.apache.tools.ant.util.JAXPUtils.getNSParserFactory()",1,2,2
"org.apache.tools.ant.util.JAXPUtils.getNamespaceXMLReader()",1,2,2
"org.apache.tools.ant.util.JAXPUtils.getParser()",1,2,2
"org.apache.tools.ant.util.JAXPUtils.getParserFactory()",1,2,2
"org.apache.tools.ant.util.JAXPUtils.getSystemId(File)",1,1,1
"org.apache.tools.ant.util.JAXPUtils.getXMLReader()",1,2,2
"org.apache.tools.ant.util.JAXPUtils.newParserFactory()",1,2,2
"org.apache.tools.ant.util.JAXPUtils.newSAXParser(SAXParserFactory)",1,3,3
"org.apache.tools.ant.util.JavaEnvUtils.JavaEnvUtils()",1,1,1
"org.apache.tools.ant.util.JavaEnvUtils.addExtension(String)",1,1,2
"org.apache.tools.ant.util.JavaEnvUtils.buildJrePackages()",2,7,7
"org.apache.tools.ant.util.JavaEnvUtils.createVmsJavaOptionFile(String[])",1,2,2
"org.apache.tools.ant.util.JavaEnvUtils.findInDir(String,String)",1,2,3
"org.apache.tools.ant.util.JavaEnvUtils.getJavaVersion()",1,1,1
"org.apache.tools.ant.util.JavaEnvUtils.getJavaVersionNumber()",1,1,1
"org.apache.tools.ant.util.JavaEnvUtils.getJdkExecutable(String)",3,4,5
"org.apache.tools.ant.util.JavaEnvUtils.getJreExecutable(String)",3,4,5
"org.apache.tools.ant.util.JavaEnvUtils.getJrePackageTestCases()",2,7,7
"org.apache.tools.ant.util.JavaEnvUtils.getJrePackages()",1,2,2
"org.apache.tools.ant.util.JavaEnvUtils.isJavaVersion(String)",1,1,1
"org.apache.tools.ant.util.JavaEnvUtils.isKaffe()",1,1,1
"org.apache.tools.ant.util.KeepAliveInputStream.KeepAliveInputStream(InputStream)",1,1,1
"org.apache.tools.ant.util.KeepAliveInputStream.close()",1,1,1
"org.apache.tools.ant.util.KeepAliveOutputStream.KeepAliveOutputStream(OutputStream)",1,1,1
"org.apache.tools.ant.util.KeepAliveOutputStream.close()",1,1,1
"org.apache.tools.ant.util.LazyFileOutputStream.LazyFileOutputStream(File)",1,1,1
"org.apache.tools.ant.util.LazyFileOutputStream.LazyFileOutputStream(File,boolean)",1,1,1
"org.apache.tools.ant.util.LazyFileOutputStream.LazyFileOutputStream(File,boolean,boolean)",1,1,1
"org.apache.tools.ant.util.LazyFileOutputStream.LazyFileOutputStream(String)",1,1,1
"org.apache.tools.ant.util.LazyFileOutputStream.LazyFileOutputStream(String,boolean)",1,1,1
"org.apache.tools.ant.util.LazyFileOutputStream.close()",1,3,4
"org.apache.tools.ant.util.LazyFileOutputStream.ensureOpened()",2,2,3
"org.apache.tools.ant.util.LazyFileOutputStream.open()",1,1,1
"org.apache.tools.ant.util.LazyFileOutputStream.write(byte[])",1,1,1
"org.apache.tools.ant.util.LazyFileOutputStream.write(byte[],int,int)",1,1,1
"org.apache.tools.ant.util.LazyFileOutputStream.write(int)",1,1,1
"org.apache.tools.ant.util.LazyHashtable.LazyHashtable()",1,1,1
"org.apache.tools.ant.util.LazyHashtable.contains(Object)",1,1,1
"org.apache.tools.ant.util.LazyHashtable.containsKey(Object)",1,1,1
"org.apache.tools.ant.util.LazyHashtable.containsValue(Object)",1,1,1
"org.apache.tools.ant.util.LazyHashtable.elements()",1,1,1
"org.apache.tools.ant.util.LazyHashtable.initAll()",2,1,2
"org.apache.tools.ant.util.LazyHashtable.isEmpty()",1,1,1
"org.apache.tools.ant.util.LazyHashtable.keys()",1,1,1
"org.apache.tools.ant.util.LazyHashtable.size()",1,1,1
"org.apache.tools.ant.util.LeadPipeInputStream.LeadPipeInputStream()",1,1,1
"org.apache.tools.ant.util.LeadPipeInputStream.LeadPipeInputStream(PipedOutputStream)",1,1,1
"org.apache.tools.ant.util.LeadPipeInputStream.LeadPipeInputStream(PipedOutputStream,int)",1,1,1
"org.apache.tools.ant.util.LeadPipeInputStream.LeadPipeInputStream(int)",1,1,1
"org.apache.tools.ant.util.LeadPipeInputStream.log(String,int)",1,3,3
"org.apache.tools.ant.util.LeadPipeInputStream.read()",1,3,6
"org.apache.tools.ant.util.LeadPipeInputStream.setBufferSize(int)",1,4,4
"org.apache.tools.ant.util.LeadPipeInputStream.setManagingComponent(ProjectComponent)",1,1,1
"org.apache.tools.ant.util.LeadPipeInputStream.setManagingTask(Task)",1,1,1
"org.apache.tools.ant.util.LineOrientedOutputStream.close()",1,2,2
"org.apache.tools.ant.util.LineOrientedOutputStream.flush()",1,2,2
"org.apache.tools.ant.util.LineOrientedOutputStream.processBuffer()",1,1,1
"org.apache.tools.ant.util.LineOrientedOutputStream.write(byte[],int,int)",1,4,9
"org.apache.tools.ant.util.LineOrientedOutputStream.write(int)",1,3,4
"org.apache.tools.ant.util.LineTokenizer.getPostToken()",2,1,2
"org.apache.tools.ant.util.LineTokenizer.getToken(Reader)",6,7,11
"org.apache.tools.ant.util.LineTokenizer.setIncludeDelims(boolean)",1,1,1
"org.apache.tools.ant.util.LoaderUtils.getClassSource(Class)",1,1,1
"org.apache.tools.ant.util.LoaderUtils.getContextClassLoader()",1,1,1
"org.apache.tools.ant.util.LoaderUtils.getResourceSource(ClassLoader,String)",1,2,2
"org.apache.tools.ant.util.LoaderUtils.isContextLoaderAvailable()",1,1,1
"org.apache.tools.ant.util.LoaderUtils.normalizeSource(File)",1,2,3
"org.apache.tools.ant.util.LoaderUtils.setContextClassLoader(ClassLoader)",1,1,1
"org.apache.tools.ant.util.MergingMapper.mapFileName(String)",1,1,1
"org.apache.tools.ant.util.MergingMapper.setFrom(String)",1,1,1
"org.apache.tools.ant.util.MergingMapper.setTo(String)",1,1,1
"org.apache.tools.ant.util.OutputStreamFunneler.Funnel.Funnel()",1,1,1
"org.apache.tools.ant.util.OutputStreamFunneler.Funnel.close()",1,1,1
"org.apache.tools.ant.util.OutputStreamFunneler.Funnel.flush()",1,1,1
"org.apache.tools.ant.util.OutputStreamFunneler.Funnel.write(byte[])",1,1,1
"org.apache.tools.ant.util.OutputStreamFunneler.Funnel.write(byte[],int,int)",1,1,1
"org.apache.tools.ant.util.OutputStreamFunneler.Funnel.write(int)",1,1,1
"org.apache.tools.ant.util.OutputStreamFunneler.OutputStreamFunneler(OutputStream)",1,1,1
"org.apache.tools.ant.util.OutputStreamFunneler.OutputStreamFunneler(OutputStream,long)",2,1,2
"org.apache.tools.ant.util.OutputStreamFunneler.close()",1,1,1
"org.apache.tools.ant.util.OutputStreamFunneler.dieIfClosed()",2,1,2
"org.apache.tools.ant.util.OutputStreamFunneler.getFunnelInstance()",1,1,1
"org.apache.tools.ant.util.OutputStreamFunneler.release(Funnel)",1,4,5
"org.apache.tools.ant.util.OutputStreamFunneler.setTimeout(long)",1,1,1
"org.apache.tools.ant.util.PackageNameMapper.extractVariablePart(String)",1,1,1
"org.apache.tools.ant.util.PropertyOutputStream.PropertyOutputStream(Project,String)",1,1,1
"org.apache.tools.ant.util.PropertyOutputStream.PropertyOutputStream(Project,String,boolean)",1,1,1
"org.apache.tools.ant.util.PropertyOutputStream.close()",1,3,4
"org.apache.tools.ant.util.ProxySetup.ProxySetup(Project)",1,1,1
"org.apache.tools.ant.util.ProxySetup.enableProxies()",1,4,5
"org.apache.tools.ant.util.ProxySetup.getSystemProxySetting()",1,1,2
"org.apache.tools.ant.util.ReaderInputStream.ReaderInputStream(Reader)",1,1,1
"org.apache.tools.ant.util.ReaderInputStream.ReaderInputStream(Reader,String)",2,1,2
"org.apache.tools.ant.util.ReaderInputStream.available()",4,1,4
"org.apache.tools.ant.util.ReaderInputStream.close()",1,2,2
"org.apache.tools.ant.util.ReaderInputStream.mark(int)",1,2,2
"org.apache.tools.ant.util.ReaderInputStream.markSupported()",1,1,1
"org.apache.tools.ant.util.ReaderInputStream.read()",2,2,7
"org.apache.tools.ant.util.ReaderInputStream.read(byte[],int,int)",4,3,7
"org.apache.tools.ant.util.ReaderInputStream.reset()",2,1,2
"org.apache.tools.ant.util.RegexpPatternMapper.RegexpPatternMapper()",1,1,1
"org.apache.tools.ant.util.RegexpPatternMapper.mapFileName(String)",2,5,6
"org.apache.tools.ant.util.RegexpPatternMapper.replaceReferences(String)",1,5,5
"org.apache.tools.ant.util.RegexpPatternMapper.setCaseSensitive(boolean)",1,1,2
"org.apache.tools.ant.util.RegexpPatternMapper.setFrom(String)",1,1,2
"org.apache.tools.ant.util.RegexpPatternMapper.setHandleDirSep(boolean)",1,1,1
"org.apache.tools.ant.util.RegexpPatternMapper.setTo(String)",1,1,1
"org.apache.tools.ant.util.ResourceUtils.Outdated.Outdated(Resource,long)",1,1,1
"org.apache.tools.ant.util.ResourceUtils.Outdated.isSelected(Resource)",1,1,1
"org.apache.tools.ant.util.ResourceUtils.binaryCompare(Resource,Resource)",3,2,5
"org.apache.tools.ant.util.ResourceUtils.compareContent(Resource,Resource,boolean)",6,2,12
"org.apache.tools.ant.util.ResourceUtils.contentEquals(Resource,Resource,boolean)",6,3,8
"org.apache.tools.ant.util.ResourceUtils.copyResource(Resource,Resource)",1,1,1
"org.apache.tools.ant.util.ResourceUtils.copyResource(Resource,Resource,FilterSetCollection,Vector,boolean,boolean,String,String,Project)",7,22,26
"org.apache.tools.ant.util.ResourceUtils.copyResource(Resource,Resource,Project)",1,1,1
"org.apache.tools.ant.util.ResourceUtils.logFuture(ProjectComponent,ResourceCollection,long)",1,2,2
"org.apache.tools.ant.util.ResourceUtils.selectOutOfDateSources(ProjectComponent,ResourceCollection,FileNameMapper,ResourceFactory,long)",5,6,9
"org.apache.tools.ant.util.ResourceUtils.selectOutOfDateSources(ProjectComponent,Resource[],FileNameMapper,ResourceFactory)",1,1,1
"org.apache.tools.ant.util.ResourceUtils.selectOutOfDateSources(ProjectComponent,Resource[],FileNameMapper,ResourceFactory,long)",1,2,2
"org.apache.tools.ant.util.ResourceUtils.setLastModified(Touchable,long)",1,2,2
"org.apache.tools.ant.util.ResourceUtils.textCompare(Resource,Resource)",3,3,4
"org.apache.tools.ant.util.RetryHandler.RetryHandler(int,Task)",1,1,1
"org.apache.tools.ant.util.RetryHandler.execute(Retryable,String)",3,4,5
"org.apache.tools.ant.util.ScriptRunner.addBean(String,Object)",1,5,5
"org.apache.tools.ant.util.ScriptRunner.addBeans(Map)",1,2,3
"org.apache.tools.ant.util.ScriptRunner.addText(String)",1,1,1
"org.apache.tools.ant.util.ScriptRunner.bindToComponent(ProjectComponent)",1,1,1
"org.apache.tools.ant.util.ScriptRunner.executeScript(String)",4,4,7
"org.apache.tools.ant.util.ScriptRunner.getLanguage()",1,1,1
"org.apache.tools.ant.util.ScriptRunner.setLanguage(String)",1,1,1
"org.apache.tools.ant.util.ScriptRunner.setSrc(File)",2,2,3
"org.apache.tools.ant.util.SourceFileScanner.SourceFileScanner(Task)",1,1,1
"org.apache.tools.ant.util.SourceFileScanner.getResource(String)",1,1,1
"org.apache.tools.ant.util.SourceFileScanner.restrict(String[],File,File,FileNameMapper)",1,1,1
"org.apache.tools.ant.util.SourceFileScanner.restrict(String[],File,File,FileNameMapper,long)",1,3,3
"org.apache.tools.ant.util.SourceFileScanner.restrictAsFiles(String[],File,File,FileNameMapper)",1,1,1
"org.apache.tools.ant.util.SourceFileScanner.restrictAsFiles(String[],File,File,FileNameMapper,long)",1,1,2
"org.apache.tools.ant.util.StringUtils.StringUtils()",1,1,1
"org.apache.tools.ant.util.StringUtils.endsWith(StringBuffer,String)",4,2,4
"org.apache.tools.ant.util.StringUtils.getStackTrace(Throwable)",1,1,1
"org.apache.tools.ant.util.StringUtils.lineSplit(String)",1,1,1
"org.apache.tools.ant.util.StringUtils.replace(String,String,String)",1,2,2
"org.apache.tools.ant.util.StringUtils.split(String,int)",1,2,2
"org.apache.tools.ant.util.TaskLogger.TaskLogger(Task)",1,1,1
"org.apache.tools.ant.util.TaskLogger.debug(String)",1,1,1
"org.apache.tools.ant.util.TaskLogger.error(String)",1,1,1
"org.apache.tools.ant.util.TaskLogger.info(String)",1,1,1
"org.apache.tools.ant.util.TaskLogger.verbose(String)",1,1,1
"org.apache.tools.ant.util.TaskLogger.warning(String)",1,1,1
"org.apache.tools.ant.util.TeeOutputStream.TeeOutputStream(OutputStream,OutputStream)",1,1,1
"org.apache.tools.ant.util.TeeOutputStream.close()",1,1,1
"org.apache.tools.ant.util.TeeOutputStream.flush()",1,1,1
"org.apache.tools.ant.util.TeeOutputStream.write(byte[])",1,1,1
"org.apache.tools.ant.util.TeeOutputStream.write(byte[],int,int)",1,1,1
"org.apache.tools.ant.util.TeeOutputStream.write(int)",1,1,1
"org.apache.tools.ant.util.UnPackageNameMapper.extractVariablePart(String)",1,1,1
"org.apache.tools.ant.util.Watchdog.Watchdog(long)",2,1,2
"org.apache.tools.ant.util.Watchdog.addTimeoutObserver(TimeoutObserver)",1,1,1
"org.apache.tools.ant.util.Watchdog.fireTimeoutOccured()",1,2,2
"org.apache.tools.ant.util.Watchdog.removeTimeoutObserver(TimeoutObserver)",1,1,1
"org.apache.tools.ant.util.Watchdog.run()",1,4,5
"org.apache.tools.ant.util.Watchdog.start()",1,1,1
"org.apache.tools.ant.util.Watchdog.stop()",1,1,1
"org.apache.tools.ant.util.WeakishReference.HardReference.HardReference(Object)",1,1,1
"org.apache.tools.ant.util.WeakishReference.HardReference.get()",1,1,1
"org.apache.tools.ant.util.WeakishReference.createReference(Object)",1,1,1
"org.apache.tools.ant.util.XMLFragment.Child.Child(Element)",1,1,1
"org.apache.tools.ant.util.XMLFragment.Child.addText(String)",1,1,1
"org.apache.tools.ant.util.XMLFragment.Child.createDynamicElement(String,String,String)",1,2,2
"org.apache.tools.ant.util.XMLFragment.Child.setDynamicAttribute(String,String,String,String)",1,2,2
"org.apache.tools.ant.util.XMLFragment.XMLFragment()",1,1,1
"org.apache.tools.ant.util.XMLFragment.addText(Node,String)",1,3,3
"org.apache.tools.ant.util.XMLFragment.addText(String)",1,1,1
"org.apache.tools.ant.util.XMLFragment.createDynamicElement(String,String,String)",1,2,2
"org.apache.tools.ant.util.XMLFragment.getFragment()",1,1,1
"org.apache.tools.ant.util.depend.AbstractAnalyzer.AbstractAnalyzer()",1,1,1
"org.apache.tools.ant.util.depend.AbstractAnalyzer.addClassPath(Path)",2,1,2
"org.apache.tools.ant.util.depend.AbstractAnalyzer.addRootClass(String)",2,2,3
"org.apache.tools.ant.util.depend.AbstractAnalyzer.addSourcePath(Path)",2,1,2
"org.apache.tools.ant.util.depend.AbstractAnalyzer.config(String,Object)",1,1,1
"org.apache.tools.ant.util.depend.AbstractAnalyzer.getClassContainer(String)",1,1,1
"org.apache.tools.ant.util.depend.AbstractAnalyzer.getClassDependencies()",1,2,2
"org.apache.tools.ant.util.depend.AbstractAnalyzer.getFileDependencies()",2,2,3
"org.apache.tools.ant.util.depend.AbstractAnalyzer.getResourceContainer(String,String[])",6,4,7
"org.apache.tools.ant.util.depend.AbstractAnalyzer.getRootClasses()",1,1,1
"org.apache.tools.ant.util.depend.AbstractAnalyzer.getSourceContainer(String)",1,1,1
"org.apache.tools.ant.util.depend.AbstractAnalyzer.isClosureRequired()",1,1,1
"org.apache.tools.ant.util.depend.AbstractAnalyzer.reset()",1,1,1
"org.apache.tools.ant.util.depend.AbstractAnalyzer.setClosure(boolean)",1,1,1
"org.apache.tools.ant.util.depend.bcel.AncestorAnalyzer.AncestorAnalyzer()",1,1,2
"org.apache.tools.ant.util.depend.bcel.AncestorAnalyzer.determineDependencies(Vector,Vector)",4,12,15
"org.apache.tools.ant.util.depend.bcel.AncestorAnalyzer.supportsFileDependencies()",1,1,1
"org.apache.tools.ant.util.depend.bcel.DependencyVisitor.addClass(String)",1,1,1
"org.apache.tools.ant.util.depend.bcel.DependencyVisitor.addClasses(String)",1,3,3
"org.apache.tools.ant.util.depend.bcel.DependencyVisitor.addSlashClass(String)",1,1,1
"org.apache.tools.ant.util.depend.bcel.DependencyVisitor.clearDependencies()",1,1,1
"org.apache.tools.ant.util.depend.bcel.DependencyVisitor.getDependencies()",1,1,1
"org.apache.tools.ant.util.depend.bcel.DependencyVisitor.visitConstantClass(ConstantClass)",1,1,1
"org.apache.tools.ant.util.depend.bcel.DependencyVisitor.visitConstantNameAndType(ConstantNameAndType)",1,6,7
"org.apache.tools.ant.util.depend.bcel.DependencyVisitor.visitConstantPool(ConstantPool)",1,1,1
"org.apache.tools.ant.util.depend.bcel.DependencyVisitor.visitField(Field)",1,1,1
"org.apache.tools.ant.util.depend.bcel.DependencyVisitor.visitJavaClass(JavaClass)",1,1,1
"org.apache.tools.ant.util.depend.bcel.DependencyVisitor.visitMethod(Method)",1,1,1
"org.apache.tools.ant.util.depend.bcel.FullAnalyzer.FullAnalyzer()",1,1,2
"org.apache.tools.ant.util.depend.bcel.FullAnalyzer.determineDependencies(Vector,Vector)",4,10,13
"org.apache.tools.ant.util.depend.bcel.FullAnalyzer.supportsFileDependencies()",1,1,1
"org.apache.tools.ant.util.facade.FacadeTaskHelper.FacadeTaskHelper(String)",1,1,1
"org.apache.tools.ant.util.facade.FacadeTaskHelper.FacadeTaskHelper(String,String)",1,1,1
"org.apache.tools.ant.util.facade.FacadeTaskHelper.addImplementationArgument(ImplementationSpecificArgument)",1,1,1
"org.apache.tools.ant.util.facade.FacadeTaskHelper.getArgs()",1,3,3
"org.apache.tools.ant.util.facade.FacadeTaskHelper.getExplicitChoice()",1,1,1
"org.apache.tools.ant.util.facade.FacadeTaskHelper.getImplementation()",1,1,3
"org.apache.tools.ant.util.facade.FacadeTaskHelper.hasBeenSet()",1,1,2
"org.apache.tools.ant.util.facade.FacadeTaskHelper.setImplementation(String)",1,1,1
"org.apache.tools.ant.util.facade.FacadeTaskHelper.setMagicValue(String)",1,1,1
"org.apache.tools.ant.util.facade.ImplementationSpecificArgument.ImplementationSpecificArgument()",1,1,1
"org.apache.tools.ant.util.facade.ImplementationSpecificArgument.getParts(String)",2,3,3
"org.apache.tools.ant.util.facade.ImplementationSpecificArgument.setImplementation(String)",1,1,1
"org.apache.tools.ant.util.java15.ProxyDiagnostics.ProxyDiagnostics()",1,1,1
"org.apache.tools.ant.util.java15.ProxyDiagnostics.ProxyDiagnostics(String)",1,1,2
"org.apache.tools.ant.util.java15.ProxyDiagnostics.toString()",1,5,5
"org.apache.tools.ant.util.optional.NoExitSecurityManager.checkExit(int)",1,1,1
"org.apache.tools.ant.util.optional.NoExitSecurityManager.checkPermission(Permission)",1,1,1
"org.apache.tools.ant.util.optional.WeakishReference12.WeakishReference12(Object)",1,1,1
"org.apache.tools.ant.util.optional.WeakishReference12.get()",1,1,1
"org.apache.tools.ant.util.regexp.JakartaOroMatcher.JakartaOroMatcher()",1,1,1
"org.apache.tools.ant.util.regexp.JakartaOroMatcher.getCompiledPattern(int)",1,1,2
"org.apache.tools.ant.util.regexp.JakartaOroMatcher.getCompilerOptions(int)",1,1,4
"org.apache.tools.ant.util.regexp.JakartaOroMatcher.getGroups(String)",1,1,1
"org.apache.tools.ant.util.regexp.JakartaOroMatcher.getGroups(String,int)",2,2,4
"org.apache.tools.ant.util.regexp.JakartaOroMatcher.getPattern()",1,1,1
"org.apache.tools.ant.util.regexp.JakartaOroMatcher.matches(String)",1,1,1
"org.apache.tools.ant.util.regexp.JakartaOroMatcher.matches(String,int)",1,1,1
"org.apache.tools.ant.util.regexp.JakartaOroMatcher.setPattern(String)",1,1,1
"org.apache.tools.ant.util.regexp.JakartaOroRegexp.JakartaOroRegexp()",1,1,1
"org.apache.tools.ant.util.regexp.JakartaOroRegexp.getSubsOptions(int)",1,1,2
"org.apache.tools.ant.util.regexp.JakartaOroRegexp.substitute(String,String,int)",1,6,6
"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher.getCompiledPattern(int)",1,1,2
"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher.getCompilerOptions(int)",1,1,4
"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher.getGroups(String)",1,1,1
"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher.getGroups(String,int)",2,2,4
"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher.getPattern()",1,1,1
"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher.matches(String)",1,1,1
"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher.matches(String,RE)",1,1,1
"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher.matches(String,int)",1,1,1
"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher.setPattern(String)",1,1,1
"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp.JakartaRegexpRegexp()",1,1,1
"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp.getSubsOptions(int)",1,1,2
"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp.substitute(String,String,int)",1,5,5
"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher.Jdk14RegexpMatcher()",1,1,1
"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher.getCompiledPattern(int)",1,1,2
"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher.getCompilerOptions(int)",1,1,4
"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher.getGroups(String)",1,1,1
"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher.getGroups(String,int)",2,2,4
"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher.getPattern()",1,1,1
"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher.matches(String)",1,1,1
"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher.matches(String,int)",1,1,2
"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher.setPattern(String)",1,1,1
"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp.Jdk14RegexpRegexp()",1,1,1
"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp.getSubsOptions(int)",1,1,2
"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp.substitute(String,String,int)",1,8,8
"org.apache.tools.ant.util.regexp.RegexpFactory.RegexpFactory()",1,1,1
"org.apache.tools.ant.util.regexp.RegexpFactory.createRegexpInstance(String)",2,1,2
"org.apache.tools.ant.util.regexp.RegexpFactory.newRegexp()",1,1,1
"org.apache.tools.ant.util.regexp.RegexpFactory.newRegexp(Project)",2,3,6
"org.apache.tools.ant.util.regexp.RegexpMatcherFactory.RegexpMatcherFactory()",1,1,1
"org.apache.tools.ant.util.regexp.RegexpMatcherFactory.createInstance(String)",1,1,1
"org.apache.tools.ant.util.regexp.RegexpMatcherFactory.newRegexpMatcher()",1,1,1
"org.apache.tools.ant.util.regexp.RegexpMatcherFactory.newRegexpMatcher(Project)",2,3,6
"org.apache.tools.ant.util.regexp.RegexpMatcherFactory.testAvailability(String)",1,1,2
"org.apache.tools.ant.util.regexp.RegexpUtil.hasFlag(int,int)",1,1,1
"org.apache.tools.ant.util.regexp.RegexpUtil.removeFlag(int,int)",1,1,1
"org.apache.tools.bzip2.CBZip2InputStream.CBZip2InputStream(InputStream)",1,1,1
"org.apache.tools.bzip2.CBZip2InputStream.Data.Data(int)",1,1,1
"org.apache.tools.bzip2.CBZip2InputStream.Data.initTT(int)",1,1,3
"org.apache.tools.bzip2.CBZip2InputStream.bsGetBit()",3,2,3
"org.apache.tools.bzip2.CBZip2InputStream.bsGetInt()",1,1,1
"org.apache.tools.bzip2.CBZip2InputStream.bsGetUByte()",1,1,1
"org.apache.tools.bzip2.CBZip2InputStream.bsR(int)",4,3,4
"org.apache.tools.bzip2.CBZip2InputStream.close()",1,3,3
"org.apache.tools.bzip2.CBZip2InputStream.complete()",1,2,2
"org.apache.tools.bzip2.CBZip2InputStream.createHuffmanDecodingTables(int,int)",1,2,5
"org.apache.tools.bzip2.CBZip2InputStream.endBlock()",1,2,2
"org.apache.tools.bzip2.CBZip2InputStream.getAndMoveToFrontDecode()",18,11,25
"org.apache.tools.bzip2.CBZip2InputStream.getAndMoveToFrontDecode0(int)",4,3,4
"org.apache.tools.bzip2.CBZip2InputStream.hbCreateDecodeTables(int[],int[],int[],char[],int,int,int)",1,1,9
"org.apache.tools.bzip2.CBZip2InputStream.init()",3,1,4
"org.apache.tools.bzip2.CBZip2InputStream.initBlock()",3,3,14
"org.apache.tools.bzip2.CBZip2InputStream.makeMaps()",1,1,3
"org.apache.tools.bzip2.CBZip2InputStream.read()",2,2,2
"org.apache.tools.bzip2.CBZip2InputStream.read(byte[],int,int)",5,2,8
"org.apache.tools.bzip2.CBZip2InputStream.read0()",6,2,10
"org.apache.tools.bzip2.CBZip2InputStream.recvDecodingTables()",1,9,17
"org.apache.tools.bzip2.CBZip2InputStream.reportCRCError()",1,1,1
"org.apache.tools.bzip2.CBZip2InputStream.setupBlock()",3,2,7
"org.apache.tools.bzip2.CBZip2InputStream.setupNoRandPartA()",1,2,2
"org.apache.tools.bzip2.CBZip2InputStream.setupNoRandPartB()",1,3,3
"org.apache.tools.bzip2.CBZip2InputStream.setupNoRandPartC()",1,2,2
"org.apache.tools.bzip2.CBZip2InputStream.setupRandPartA()",1,2,5
"org.apache.tools.bzip2.CBZip2InputStream.setupRandPartB()",1,3,6
"org.apache.tools.bzip2.CBZip2InputStream.setupRandPartC()",1,2,2
"org.apache.tools.bzip2.CBZip2OutputStream.CBZip2OutputStream(OutputStream)",1,1,1
"org.apache.tools.bzip2.CBZip2OutputStream.CBZip2OutputStream(OutputStream,int)",3,1,3
"org.apache.tools.bzip2.CBZip2OutputStream.Data.Data(int)",1,1,1
"org.apache.tools.bzip2.CBZip2OutputStream.blockSort()",3,2,5
"org.apache.tools.bzip2.CBZip2OutputStream.bsFinishedWithStream()",1,2,2
"org.apache.tools.bzip2.CBZip2OutputStream.bsPutInt(int)",1,1,1
"org.apache.tools.bzip2.CBZip2OutputStream.bsPutUByte(int)",1,1,1
"org.apache.tools.bzip2.CBZip2OutputStream.bsW(int,int)",1,2,2
"org.apache.tools.bzip2.CBZip2OutputStream.chooseBlockSize(long)",1,2,2
"org.apache.tools.bzip2.CBZip2OutputStream.close()",1,3,3
"org.apache.tools.bzip2.CBZip2OutputStream.endBlock()",2,2,3
"org.apache.tools.bzip2.CBZip2OutputStream.endCompression()",1,1,1
"org.apache.tools.bzip2.CBZip2OutputStream.finalize()",1,1,1
"org.apache.tools.bzip2.CBZip2OutputStream.flush()",1,2,2
"org.apache.tools.bzip2.CBZip2OutputStream.generateMTFValues()",9,1,16
"org.apache.tools.bzip2.CBZip2OutputStream.getBlockSize()",1,1,1
"org.apache.tools.bzip2.CBZip2OutputStream.hbAssignCodes(int[],byte[],int,int,int)",1,1,4
"org.apache.tools.bzip2.CBZip2OutputStream.hbMakeCodeLengths(byte[],int[],Data,int,int)",9,1,24
"org.apache.tools.bzip2.CBZip2OutputStream.hbMakeCodeLengths(char[],int[],int,int)",9,1,24
"org.apache.tools.bzip2.CBZip2OutputStream.init()",1,1,1
"org.apache.tools.bzip2.CBZip2OutputStream.initBlock()",1,1,2
"org.apache.tools.bzip2.CBZip2OutputStream.mainQSort3(Data,int,int,int)",12,4,16
"org.apache.tools.bzip2.CBZip2OutputStream.mainSimpleSort(Data,int,int,int)",37,1,46
"org.apache.tools.bzip2.CBZip2OutputStream.mainSort()",10,5,27
"org.apache.tools.bzip2.CBZip2OutputStream.med3(byte,byte,byte)",1,1,6
"org.apache.tools.bzip2.CBZip2OutputStream.moveToFrontCodeAndSend()",1,1,1
"org.apache.tools.bzip2.CBZip2OutputStream.randomiseBlock()",1,1,6
"org.apache.tools.bzip2.CBZip2OutputStream.sendMTFValues()",1,1,7
"org.apache.tools.bzip2.CBZip2OutputStream.sendMTFValues0(int,int)",1,1,11
"org.apache.tools.bzip2.CBZip2OutputStream.sendMTFValues1(int,int)",1,4,14
"org.apache.tools.bzip2.CBZip2OutputStream.sendMTFValues2(int,int)",1,1,4
"org.apache.tools.bzip2.CBZip2OutputStream.sendMTFValues3(int,int)",1,2,5
"org.apache.tools.bzip2.CBZip2OutputStream.sendMTFValues4()",1,6,11
"org.apache.tools.bzip2.CBZip2OutputStream.sendMTFValues5(int,int)",1,5,5
"org.apache.tools.bzip2.CBZip2OutputStream.sendMTFValues6(int,int)",1,9,9
"org.apache.tools.bzip2.CBZip2OutputStream.sendMTFValues7(int)",1,4,4
"org.apache.tools.bzip2.CBZip2OutputStream.vswap(int[],int,int,int)",1,1,2
"org.apache.tools.bzip2.CBZip2OutputStream.write(byte[],int,int)",5,2,6
"org.apache.tools.bzip2.CBZip2OutputStream.write(int)",2,2,2
"org.apache.tools.bzip2.CBZip2OutputStream.write0(int)",1,4,4
"org.apache.tools.bzip2.CBZip2OutputStream.writeRun()",2,3,6
"org.apache.tools.bzip2.CRC.CRC()",1,1,1
"org.apache.tools.bzip2.CRC.getFinalCRC()",1,1,1
"org.apache.tools.bzip2.CRC.getGlobalCRC()",1,1,1
"org.apache.tools.bzip2.CRC.initialiseCRC()",1,1,1
"org.apache.tools.bzip2.CRC.setGlobalCRC(int)",1,1,1
"org.apache.tools.bzip2.CRC.updateCRC(int)",1,1,2
"org.apache.tools.bzip2.CRC.updateCRC(int,int)",1,1,3
"org.apache.tools.mail.ErrorInQuitException.ErrorInQuitException(IOException)",1,1,1
"org.apache.tools.mail.MailMessage.MailMessage()",1,1,1
"org.apache.tools.mail.MailMessage.MailMessage(String)",1,1,1
"org.apache.tools.mail.MailMessage.MailMessage(String,int)",1,1,1
"org.apache.tools.mail.MailMessage.bcc(String)",1,1,1
"org.apache.tools.mail.MailMessage.cc(String)",1,1,1
"org.apache.tools.mail.MailMessage.connect()",1,1,1
"org.apache.tools.mail.MailMessage.disconnect()",1,4,6
"org.apache.tools.mail.MailMessage.flushHeaders()",1,2,2
"org.apache.tools.mail.MailMessage.from(String)",1,1,1
"org.apache.tools.mail.MailMessage.getPrintStream()",1,1,1
"org.apache.tools.mail.MailMessage.getReady()",2,1,2
"org.apache.tools.mail.MailMessage.isResponseOK(String,int[])",3,2,3
"org.apache.tools.mail.MailMessage.replyto(String)",1,1,1
"org.apache.tools.mail.MailMessage.sanitizeAddress(String)",1,2,11
"org.apache.tools.mail.MailMessage.send(String,int[])",2,1,2
"org.apache.tools.mail.MailMessage.sendAndClose()",1,1,1
"org.apache.tools.mail.MailMessage.sendData()",1,1,1
"org.apache.tools.mail.MailMessage.sendDot()",1,1,1
"org.apache.tools.mail.MailMessage.sendFrom(String)",1,1,1
"org.apache.tools.mail.MailMessage.sendHelo()",1,1,1
"org.apache.tools.mail.MailMessage.sendQuit()",1,1,2
"org.apache.tools.mail.MailMessage.sendRcpt(String)",1,1,1
"org.apache.tools.mail.MailMessage.setCcHeader()",1,2,2
"org.apache.tools.mail.MailMessage.setFromHeader()",1,1,1
"org.apache.tools.mail.MailMessage.setHeader(String,String)",1,1,1
"org.apache.tools.mail.MailMessage.setPort(int)",1,1,1
"org.apache.tools.mail.MailMessage.setReplyToHeader()",1,2,2
"org.apache.tools.mail.MailMessage.setSubject(String)",1,1,1
"org.apache.tools.mail.MailMessage.setToHeader()",1,2,2
"org.apache.tools.mail.MailMessage.to(String)",1,1,1
"org.apache.tools.mail.MailMessage.vectorToList(Vector)",1,3,3
"org.apache.tools.mail.MailPrintStream.MailPrintStream(OutputStream)",1,1,1
"org.apache.tools.mail.MailPrintStream.rawPrint(String)",1,2,2
"org.apache.tools.mail.MailPrintStream.rawWrite(int)",1,1,1
"org.apache.tools.mail.MailPrintStream.write(byte[],int,int)",1,2,2
"org.apache.tools.mail.MailPrintStream.write(int)",1,3,5
"org.apache.tools.mail.SmtpResponseReader.SmtpResponseReader(InputStream)",1,1,1
"org.apache.tools.mail.SmtpResponseReader.append(String)",1,2,2
"org.apache.tools.mail.SmtpResponseReader.close()",1,1,1
"org.apache.tools.mail.SmtpResponseReader.getResponse()",3,4,5
"org.apache.tools.mail.SmtpResponseReader.hasMoreLines(String)",1,2,2
"org.apache.tools.tar.TarBuffer.TarBuffer(InputStream)",1,1,1
"org.apache.tools.tar.TarBuffer.TarBuffer(InputStream,int)",1,1,1
"org.apache.tools.tar.TarBuffer.TarBuffer(InputStream,int,int)",1,1,1
"org.apache.tools.tar.TarBuffer.TarBuffer(OutputStream)",1,1,1
"org.apache.tools.tar.TarBuffer.TarBuffer(OutputStream,int)",1,1,1
"org.apache.tools.tar.TarBuffer.TarBuffer(OutputStream,int,int)",1,1,1
"org.apache.tools.tar.TarBuffer.close()",1,6,7
"org.apache.tools.tar.TarBuffer.flushBlock()",2,3,4
"org.apache.tools.tar.TarBuffer.getBlockSize()",1,1,1
"org.apache.tools.tar.TarBuffer.getCurrentBlockNum()",1,1,1
"org.apache.tools.tar.TarBuffer.getCurrentRecordNum()",1,1,1
"org.apache.tools.tar.TarBuffer.getRecordSize()",1,1,1
"org.apache.tools.tar.TarBuffer.initialize(int,int)",1,1,2
"org.apache.tools.tar.TarBuffer.isEOFRecord(byte[])",3,1,3
"org.apache.tools.tar.TarBuffer.readBlock()",4,6,7
"org.apache.tools.tar.TarBuffer.readRecord()",4,3,5
"org.apache.tools.tar.TarBuffer.setDebug(boolean)",1,1,1
"org.apache.tools.tar.TarBuffer.skipRecord()",4,3,5
"org.apache.tools.tar.TarBuffer.writeBlock()",2,2,3
"org.apache.tools.tar.TarBuffer.writeRecord(byte[])",3,3,5
"org.apache.tools.tar.TarBuffer.writeRecord(byte[],int)",3,3,5
"org.apache.tools.tar.TarEntry.TarEntry()",1,2,2
"org.apache.tools.tar.TarEntry.TarEntry(File)",1,10,14
"org.apache.tools.tar.TarEntry.TarEntry(String)",1,1,3
"org.apache.tools.tar.TarEntry.TarEntry(String,byte)",1,1,1
"org.apache.tools.tar.TarEntry.TarEntry(byte[])",1,1,1
"org.apache.tools.tar.TarEntry.equals(Object)",2,2,3
"org.apache.tools.tar.TarEntry.equals(TarEntry)",1,1,1
"org.apache.tools.tar.TarEntry.getDirectoryEntries()",2,2,4
"org.apache.tools.tar.TarEntry.getFile()",1,1,1
"org.apache.tools.tar.TarEntry.getGroupId()",1,1,1
"org.apache.tools.tar.TarEntry.getGroupName()",1,1,1
"org.apache.tools.tar.TarEntry.getLinkName()",1,1,1
"org.apache.tools.tar.TarEntry.getModTime()",1,1,1
"org.apache.tools.tar.TarEntry.getMode()",1,1,1
"org.apache.tools.tar.TarEntry.getName()",1,1,1
"org.apache.tools.tar.TarEntry.getSize()",1,1,1
"org.apache.tools.tar.TarEntry.getUserId()",1,1,1
"org.apache.tools.tar.TarEntry.getUserName()",1,1,1
"org.apache.tools.tar.TarEntry.hashCode()",1,1,1
"org.apache.tools.tar.TarEntry.isDescendent(TarEntry)",1,1,1
"org.apache.tools.tar.TarEntry.isDirectory()",4,2,4
"org.apache.tools.tar.TarEntry.isGNULongNameEntry()",1,2,2
"org.apache.tools.tar.TarEntry.parseTarHeader(byte[])",1,1,1
"org.apache.tools.tar.TarEntry.setGroupId(int)",1,1,1
"org.apache.tools.tar.TarEntry.setGroupName(String)",1,1,1
"org.apache.tools.tar.TarEntry.setIds(int,int)",1,1,1
"org.apache.tools.tar.TarEntry.setModTime(Date)",1,1,1
"org.apache.tools.tar.TarEntry.setModTime(long)",1,1,1
"org.apache.tools.tar.TarEntry.setMode(int)",1,1,1
"org.apache.tools.tar.TarEntry.setName(String)",1,1,1
"org.apache.tools.tar.TarEntry.setNames(String,String)",1,1,1
"org.apache.tools.tar.TarEntry.setSize(long)",1,1,1
"org.apache.tools.tar.TarEntry.setUserId(int)",1,1,1
"org.apache.tools.tar.TarEntry.setUserName(String)",1,1,1
"org.apache.tools.tar.TarEntry.writeEntryHeader(byte[])",1,1,3
"org.apache.tools.tar.TarInputStream.TarInputStream(InputStream)",1,1,1
"org.apache.tools.tar.TarInputStream.TarInputStream(InputStream,int)",1,1,1
"org.apache.tools.tar.TarInputStream.TarInputStream(InputStream,int,int)",1,1,1
"org.apache.tools.tar.TarInputStream.available()",2,1,2
"org.apache.tools.tar.TarInputStream.close()",1,1,1
"org.apache.tools.tar.TarInputStream.copyEntryContents(OutputStream)",3,2,3
"org.apache.tools.tar.TarInputStream.getNextEntry()",2,15,16
"org.apache.tools.tar.TarInputStream.getRecordSize()",1,1,1
"org.apache.tools.tar.TarInputStream.mark(int)",1,1,1
"org.apache.tools.tar.TarInputStream.markSupported()",1,1,1
"org.apache.tools.tar.TarInputStream.read()",1,1,2
"org.apache.tools.tar.TarInputStream.read(byte[],int,int)",4,5,9
"org.apache.tools.tar.TarInputStream.reset()",1,1,1
"org.apache.tools.tar.TarInputStream.setDebug(boolean)",1,1,1
"org.apache.tools.tar.TarInputStream.skip(long)",3,2,4
"org.apache.tools.tar.TarOutputStream.TarOutputStream(OutputStream)",1,1,1
"org.apache.tools.tar.TarOutputStream.TarOutputStream(OutputStream,int)",1,1,1
"org.apache.tools.tar.TarOutputStream.TarOutputStream(OutputStream,int,int)",1,1,1
"org.apache.tools.tar.TarOutputStream.close()",1,2,2
"org.apache.tools.tar.TarOutputStream.closeEntry()",2,2,4
"org.apache.tools.tar.TarOutputStream.finish()",1,1,1
"org.apache.tools.tar.TarOutputStream.getRecordSize()",1,1,1
"org.apache.tools.tar.TarOutputStream.putNextEntry(TarEntry)",4,5,5
"org.apache.tools.tar.TarOutputStream.setBufferDebug(boolean)",1,1,1
"org.apache.tools.tar.TarOutputStream.setDebug(boolean)",1,1,1
"org.apache.tools.tar.TarOutputStream.setLongFileMode(int)",1,1,1
"org.apache.tools.tar.TarOutputStream.write(byte[])",1,1,1
"org.apache.tools.tar.TarOutputStream.write(byte[],int,int)",4,5,6
"org.apache.tools.tar.TarOutputStream.write(int)",1,1,1
"org.apache.tools.tar.TarOutputStream.writeEOFRecord()",1,1,2
"org.apache.tools.tar.TarUtils.computeCheckSum(byte[])",1,1,2
"org.apache.tools.tar.TarUtils.getCheckSumOctalBytes(long,byte[],int,int)",1,1,1
"org.apache.tools.tar.TarUtils.getLongOctalBytes(long,byte[],int,int)",1,1,1
"org.apache.tools.tar.TarUtils.getNameBytes(StringBuffer,byte[],int,int)",1,3,4
"org.apache.tools.tar.TarUtils.getOctalBytes(long,byte[],int,int)",1,1,5
"org.apache.tools.tar.TarUtils.parseName(byte[],int,int)",3,2,3
"org.apache.tools.tar.TarUtils.parseOctal(byte[],int,int)",6,1,7
"org.apache.tools.zip.AsiExtraField.AsiExtraField()",1,1,1
"org.apache.tools.zip.AsiExtraField.getCentralDirectoryData()",1,1,1
"org.apache.tools.zip.AsiExtraField.getCentralDirectoryLength()",1,1,1
"org.apache.tools.zip.AsiExtraField.getGroupId()",1,1,1
"org.apache.tools.zip.AsiExtraField.getHeaderId()",1,1,1
"org.apache.tools.zip.AsiExtraField.getLinkedFile()",1,1,1
"org.apache.tools.zip.AsiExtraField.getLocalFileDataData()",1,1,1
"org.apache.tools.zip.AsiExtraField.getLocalFileDataLength()",1,1,1
"org.apache.tools.zip.AsiExtraField.getMode()",1,1,1
"org.apache.tools.zip.AsiExtraField.getMode(int)",1,2,3
"org.apache.tools.zip.AsiExtraField.getUserId()",1,1,1
"org.apache.tools.zip.AsiExtraField.isDirectory()",1,2,2
"org.apache.tools.zip.AsiExtraField.isLink()",1,1,1
"org.apache.tools.zip.AsiExtraField.parseFromLocalFileData(byte[],int,int)",2,3,3
"org.apache.tools.zip.AsiExtraField.setDirectory(boolean)",1,1,1
"org.apache.tools.zip.AsiExtraField.setGroupId(int)",1,1,1
"org.apache.tools.zip.AsiExtraField.setLinkedFile(String)",1,1,1
"org.apache.tools.zip.AsiExtraField.setMode(int)",1,1,1
"org.apache.tools.zip.AsiExtraField.setUserId(int)",1,1,1
"org.apache.tools.zip.ExtraFieldUtils.createExtraField(ZipShort)",2,2,2
"org.apache.tools.zip.ExtraFieldUtils.mergeCentralDirectoryData(ZipExtraField[])",1,3,3
"org.apache.tools.zip.ExtraFieldUtils.mergeLocalFileDataData(ZipExtraField[])",1,3,3
"org.apache.tools.zip.ExtraFieldUtils.parse(byte[])",4,4,6
"org.apache.tools.zip.ExtraFieldUtils.register(Class)",1,1,4
"org.apache.tools.zip.JarMarker.JarMarker()",1,1,1
"org.apache.tools.zip.JarMarker.getCentralDirectoryData()",1,1,1
"org.apache.tools.zip.JarMarker.getCentralDirectoryLength()",1,1,1
"org.apache.tools.zip.JarMarker.getHeaderId()",1,1,1
"org.apache.tools.zip.JarMarker.getInstance()",1,1,1
"org.apache.tools.zip.JarMarker.getLocalFileDataData()",1,1,1
"org.apache.tools.zip.JarMarker.getLocalFileDataLength()",1,1,1
"org.apache.tools.zip.JarMarker.parseFromLocalFileData(byte[],int,int)",2,1,2
"org.apache.tools.zip.UnrecognizedExtraField.getCentralDirectoryData()",2,1,2
"org.apache.tools.zip.UnrecognizedExtraField.getCentralDirectoryLength()",2,1,2
"org.apache.tools.zip.UnrecognizedExtraField.getHeaderId()",1,1,1
"org.apache.tools.zip.UnrecognizedExtraField.getLocalFileDataData()",1,1,1
"org.apache.tools.zip.UnrecognizedExtraField.getLocalFileDataLength()",1,1,1
"org.apache.tools.zip.UnrecognizedExtraField.parseFromLocalFileData(byte[],int,int)",1,1,1
"org.apache.tools.zip.UnrecognizedExtraField.setCentralDirectoryData(byte[])",1,1,1
"org.apache.tools.zip.UnrecognizedExtraField.setHeaderId(ZipShort)",1,1,1
"org.apache.tools.zip.UnrecognizedExtraField.setLocalFileDataData(byte[])",1,1,1
"org.apache.tools.zip.ZipEntry.ZipEntry()",1,1,1
"org.apache.tools.zip.ZipEntry.ZipEntry(String)",1,1,1
"org.apache.tools.zip.ZipEntry.ZipEntry(ZipEntry)",1,1,1
"org.apache.tools.zip.ZipEntry.addExtraField(ZipExtraField)",1,4,5
"org.apache.tools.zip.ZipEntry.clone()",1,1,1
"org.apache.tools.zip.ZipEntry.equals(Object)",1,1,1
"org.apache.tools.zip.ZipEntry.getCentralDirectoryExtra()",1,1,1
"org.apache.tools.zip.ZipEntry.getExternalAttributes()",1,1,1
"org.apache.tools.zip.ZipEntry.getExtraFields()",1,1,1
"org.apache.tools.zip.ZipEntry.getInternalAttributes()",1,1,1
"org.apache.tools.zip.ZipEntry.getLocalFileDataExtra()",1,1,2
"org.apache.tools.zip.ZipEntry.getName()",1,2,2
"org.apache.tools.zip.ZipEntry.getPlatform()",1,1,1
"org.apache.tools.zip.ZipEntry.getUnixMode()",1,1,1
"org.apache.tools.zip.ZipEntry.hashCode()",1,1,1
"org.apache.tools.zip.ZipEntry.isDirectory()",1,1,1
"org.apache.tools.zip.ZipEntry.removeExtraField(ZipShort)",2,3,5
"org.apache.tools.zip.ZipEntry.setComprSize(long)",1,1,1
"org.apache.tools.zip.ZipEntry.setExternalAttributes(long)",1,1,1
"org.apache.tools.zip.ZipEntry.setExtra()",1,1,1
"org.apache.tools.zip.ZipEntry.setExtra(byte[])",1,2,2
"org.apache.tools.zip.ZipEntry.setExtraFields(ZipExtraField[])",1,2,2
"org.apache.tools.zip.ZipEntry.setInternalAttributes(int)",1,1,1
"org.apache.tools.zip.ZipEntry.setName(String)",1,1,1
"org.apache.tools.zip.ZipEntry.setPlatform(int)",1,1,1
"org.apache.tools.zip.ZipEntry.setUnixMode(int)",1,1,3
"org.apache.tools.zip.ZipFile.BoundedInputStream.BoundedInputStream(long,long)",1,1,1
"org.apache.tools.zip.ZipFile.BoundedInputStream.addDummy()",1,1,1
"org.apache.tools.zip.ZipFile.BoundedInputStream.read()",3,1,3
"org.apache.tools.zip.ZipFile.BoundedInputStream.read(byte[],int,int)",4,1,6
"org.apache.tools.zip.ZipFile.ZipFile(File)",1,1,1
"org.apache.tools.zip.ZipFile.ZipFile(File,String)",1,2,3
"org.apache.tools.zip.ZipFile.ZipFile(String)",1,1,1
"org.apache.tools.zip.ZipFile.ZipFile(String,String)",1,1,1
"org.apache.tools.zip.ZipFile.close()",1,1,1
"org.apache.tools.zip.ZipFile.closeQuietly(ZipFile)",1,2,3
"org.apache.tools.zip.ZipFile.dosToJavaTime(long)",1,1,1
"org.apache.tools.zip.ZipFile.fromDosTime(ZipLong)",1,1,1
"org.apache.tools.zip.ZipFile.getEncoding()",1,1,1
"org.apache.tools.zip.ZipFile.getEntries()",1,1,1
"org.apache.tools.zip.ZipFile.getEntry(String)",1,1,1
"org.apache.tools.zip.ZipFile.getInputStream(ZipEntry)",4,2,5
"org.apache.tools.zip.ZipFile.getString(byte[])",2,3,3
"org.apache.tools.zip.ZipFile.populateFromCentralDirectory()",1,2,2
"org.apache.tools.zip.ZipFile.positionAtCentralDirectory()",8,6,8
"org.apache.tools.zip.ZipFile.resolveLocalFileHeaderData()",1,2,2
"org.apache.tools.zip.ZipLong.ZipLong(byte[])",1,1,1
"org.apache.tools.zip.ZipLong.ZipLong(byte[],int)",1,1,1
"org.apache.tools.zip.ZipLong.ZipLong(long)",1,1,1
"org.apache.tools.zip.ZipLong.equals(Object)",2,1,3
"org.apache.tools.zip.ZipLong.getBytes()",1,1,1
"org.apache.tools.zip.ZipLong.getBytes(long)",1,1,1
"org.apache.tools.zip.ZipLong.getValue()",1,1,1
"org.apache.tools.zip.ZipLong.getValue(byte[])",1,1,1
"org.apache.tools.zip.ZipLong.getValue(byte[],int)",1,1,1
"org.apache.tools.zip.ZipLong.hashCode()",1,1,1
"org.apache.tools.zip.ZipOutputStream.ZipOutputStream(File)",1,3,4
"org.apache.tools.zip.ZipOutputStream.ZipOutputStream(OutputStream)",1,1,1
"org.apache.tools.zip.ZipOutputStream.adjustToLong(int)",2,1,2
"org.apache.tools.zip.ZipOutputStream.close()",1,3,3
"org.apache.tools.zip.ZipOutputStream.closeEntry()",6,7,8
"org.apache.tools.zip.ZipOutputStream.deflate()",1,2,2
"org.apache.tools.zip.ZipOutputStream.finish()",1,2,2
"org.apache.tools.zip.ZipOutputStream.flush()",1,2,2
"org.apache.tools.zip.ZipOutputStream.getBytes(String)",2,3,3
"org.apache.tools.zip.ZipOutputStream.getEncoding()",1,1,1
"org.apache.tools.zip.ZipOutputStream.isSeekable()",1,1,1
"org.apache.tools.zip.ZipOutputStream.putNextEntry(ZipEntry)",4,7,9
"org.apache.tools.zip.ZipOutputStream.setComment(String)",1,1,1
"org.apache.tools.zip.ZipOutputStream.setEncoding(String)",1,1,1
"org.apache.tools.zip.ZipOutputStream.setLevel(int)",2,1,3
"org.apache.tools.zip.ZipOutputStream.setMethod(int)",1,1,1
"org.apache.tools.zip.ZipOutputStream.toDosTime(Date)",1,1,1
"org.apache.tools.zip.ZipOutputStream.toDosTime(long)",2,1,2
"org.apache.tools.zip.ZipOutputStream.write(byte[],int,int)",1,5,5
"org.apache.tools.zip.ZipOutputStream.write(int)",1,1,1
"org.apache.tools.zip.ZipOutputStream.writeCentralDirectoryEnd()",1,1,1
"org.apache.tools.zip.ZipOutputStream.writeCentralFileHeader(ZipEntry)",1,3,4
"org.apache.tools.zip.ZipOutputStream.writeDataDescriptor(ZipEntry)",2,2,3
"org.apache.tools.zip.ZipOutputStream.writeLocalFileHeader(ZipEntry)",1,3,5
"org.apache.tools.zip.ZipOutputStream.writeOut(byte[])",1,1,1
"org.apache.tools.zip.ZipOutputStream.writeOut(byte[],int,int)",1,2,2
"org.apache.tools.zip.ZipShort.ZipShort(byte[])",1,1,1
"org.apache.tools.zip.ZipShort.ZipShort(byte[],int)",1,1,1
"org.apache.tools.zip.ZipShort.ZipShort(int)",1,1,1
"org.apache.tools.zip.ZipShort.equals(Object)",2,1,3
"org.apache.tools.zip.ZipShort.getBytes()",1,1,1
"org.apache.tools.zip.ZipShort.getBytes(int)",1,1,1
"org.apache.tools.zip.ZipShort.getValue()",1,1,1
"org.apache.tools.zip.ZipShort.getValue(byte[])",1,1,1
"org.apache.tools.zip.ZipShort.getValue(byte[],int)",1,1,1
"org.apache.tools.zip.ZipShort.hashCode()",1,1,1